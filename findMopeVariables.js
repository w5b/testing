
let string = `var _0x3c2d83 = (function () {
    var _0x4d15dd = !![];
    return function (_0x2a18bc, _0x556f12) {
      var _0x38a078 = _0x4d15dd
        ? function () {
            if (_0x556f12) {
              var _0x12cc18 = _0x556f12["apply"](_0x2a18bc, arguments);
              return (_0x556f12 = null), _0x12cc18;
            }
          }
        : function () {};
      return (_0x4d15dd = ![]), _0x38a078;
    };
  })(),
  _0x131005 = _0x3c2d83(this, function () {
    var _0x142126;
    try {
      var _0x19aa0d = Function("return (function() " + '{}.constructor("return this")( )' + ");");
      _0x142126 = _0x19aa0d();
    } catch (_0x139e5c) {
      _0x142126 = window;
    }
    var _0x3de780 = new RegExp(
        "[YVKyUDRBKThHSCVRWNhLOPYRMYEOITThSxHIjQAwvZYZRKSFKvxYOQFJLUhAkJSjCjGXOEILyjBqNBJQIGjMFEhkMIwXMSxQRREWWwKAqHGQGFNqFWQxSFkBRqBwSGvKxKKBDPEvHZqRSYOBJQBRKQBByJYOLZOEOIRZvOQJGZMxGWAVDPGQBkkBDHFDjqCS]",
        "g"
      ),
      _0x72266d =
        "Y.VmoKpyUDe.iRBo;KThH.SCVm0pe.RWiNoh;LOP.YleRarniMYnEOITgaThniSxHIjmQalsAw.cluvZYZRb;.KSFtKvxYOaiQFJlbLUihAkJte.SjCmej;GXOE.aILnyjBqimaNlfBun.JQIGjMclubFE;.hkzMooedIucwaXMSxtioQnR.spRaceEWWwKAqHGQGFNqFWQxSFkBRqBwSGvKxKKBDPEvHZqRSYOBJQBRKQBByJYOLZOEOIRZvOQJGZMxGWAVDPGQBkkBDHFDjqCS"
          ["replace"](_0x3de780, "")
          ["split"](";"),
      _0x4d5ec9,
      _0x5634e0,
      _0x4d6287,
      _0xe28934,
      _0x53e04e = function (_0xeca060, _0x3ae726, _0xa72a43) {
        if (_0xeca060["length"] != _0x3ae726) return ![];
        for (var _0x5c7c95 = 0x0; _0x5c7c95 < _0x3ae726; _0x5c7c95++) {
          for (var _0x17db81 = 0x0; _0x17db81 < _0xa72a43["length"]; _0x17db81 += 0x2) {
            if (_0x5c7c95 == _0xa72a43[_0x17db81] && _0xeca060["charCodeAt"](_0x5c7c95) != _0xa72a43[_0x17db81 + 0x1]) return ![];
          }
        }
        return !![];
      },
      _0x19961e = function (_0x229cdd, _0x5cc030, _0x2e5dc7) {
        return _0x53e04e(_0x5cc030, _0x2e5dc7, _0x229cdd);
      },
      _0x38737e = function (_0x3bae15, _0x562435, _0xcd0b6c) {
        return _0x19961e(_0x562435, _0x3bae15, _0xcd0b6c);
      },
      _0x581ced = function (_0x177d46, _0x473fd9, _0x4f2d91) {
        return _0x38737e(_0x473fd9, _0x4f2d91, _0x177d46);
      };
    for (var _0x409dfd in _0x142126) {
      if (_0x53e04e(_0x409dfd, 0x8, [0x7, 0x74, 0x5, 0x65, 0x3, 0x75, 0x0, 0x64])) {
        _0x4d5ec9 = _0x409dfd;
        break;
      }
    }
    for (var _0x1ec1a4 in _0x142126[_0x4d5ec9]) {
      if (_0x581ced(0x6, _0x1ec1a4, [0x5, 0x6e, 0x0, 0x64])) {
        _0x5634e0 = _0x1ec1a4;
        break;
      }
    }
    for (var _0x4a7a4c in _0x142126[_0x4d5ec9]) {
      if (_0x38737e(_0x4a7a4c, [0x7, 0x6e, 0x0, 0x6c], 0x8)) {
        _0x4d6287 = _0x4a7a4c;
        break;
      }
    }
    if (!("~" > _0x5634e0))
      for (var _0x472cb6 in _0x142126[_0x4d5ec9][_0x4d6287]) {
        if (_0x19961e([0x7, 0x65, 0x0, 0x68], _0x472cb6, 0x8)) {
          _0xe28934 = _0x472cb6;
          break;
        }
      }
    if (!_0x4d5ec9 || !_0x142126[_0x4d5ec9]) return;
    var _0x1a34da = _0x142126[_0x4d5ec9][_0x5634e0],
      _0x45e97a = !!_0x142126[_0x4d5ec9][_0x4d6287] && _0x142126[_0x4d5ec9][_0x4d6287][_0xe28934],
      _0x2f378b = _0x1a34da || _0x45e97a;
    if (!_0x2f378b) return;
    var _0x318246 = ![];
    for (var _0x1c7395 = 0x0; _0x1c7395 < _0x72266d["length"]; _0x1c7395++) {
      var _0x5634e0 = _0x72266d[_0x1c7395],
        _0x548d49 = _0x5634e0[0x0] === String["fromCharCode"](0x2e) ? _0x5634e0["slice"](0x1) : _0x5634e0,
        _0x1f504e = _0x2f378b["length"] - _0x548d49["length"],
        _0x54144b = _0x2f378b["indexOf"](_0x548d49, _0x1f504e),
        _0xdbca4b = _0x54144b !== -0x1 && _0x54144b === _0x1f504e;
      _0xdbca4b && (_0x2f378b["length"] == _0x5634e0["length"] || _0x5634e0["indexOf"](".") === 0x0) && (_0x318246 = !![]);
    }
    if (!_0x318246) {
      var _0x51943d = new RegExp("[hjjsFCmCxUVHyOpzRLFVwvgBNJs]", "g"),
        _0x3ac1fe = "ahjbjout:sbFClanmCxUkVHyOpzRLFVwvgBNJs"["replace"](_0x51943d, "");
      _0x142126[_0x4d5ec9][_0x4d6287] = _0x3ac1fe;
    }
  });
_0x131005();
var _0x4b4817 = (function () {
    var _0x5cb16a = !![];
    return function (_0x7cfeaf, _0x57f038) {
      var _0x86ab96 = _0x5cb16a
        ? function () {
            if (_0x57f038) {
              var _0x1cf4c4 = _0x57f038["apply"](_0x7cfeaf, arguments);
              return (_0x57f038 = null), _0x1cf4c4;
            }
          }
        : function () {};
      return (_0x5cb16a = ![]), _0x86ab96;
    };
  })(),
  _0x57f38c = _0x4b4817(this, function () {
    var _0x62c8f8;
    try {
      var _0x1f0eb5 = Function("return (function() " + '{}.constructor("return this")( )' + ");");
      _0x62c8f8 = _0x1f0eb5();
    } catch (_0xfdbe5) {
      _0x62c8f8 = window;
    }
    var _0x11f9e7 = (_0x62c8f8["console"] = _0x62c8f8["console"] || {}),
      _0x5c039b = ["log", "warn", "info", "error", "exception", "table", "trace"];
    for (var _0x44adc8 = 0x0; _0x44adc8 < _0x5c039b["length"]; _0x44adc8++) {
      var _0x24564e = _0x4b4817["constructor"]["prototype"]["bind"](_0x4b4817),
        _0x3e28d5 = _0x5c039b[_0x44adc8],
        _0x16e8cb = _0x11f9e7[_0x3e28d5] || _0x24564e;
      (_0x24564e["__proto__"] = _0x4b4817["bind"](_0x4b4817)),
        (_0x24564e["toString"] = _0x16e8cb["toString"]["bind"](_0x16e8cb)),
        (_0x11f9e7[_0x3e28d5] = _0x24564e);
    }
  });
_0x57f38c(),
  console["log"]("\x0a\x0a\x0a"),
  console["log"]("--------------------------------------------"),
  console["log"](""),
  console["log"]("#    #  ####  #####  ######     #  ####"),
  console["log"]("##  ## #    # #    # #          # #    #"),
  console["log"]("# ## # #    # #    # #####      # #    #"),
  console["log"]("#    # #    # #####  #      ### # #    #"),
  console["log"]("#    # #    # #      #      ### # #    #"),
  console["log"]("#    #  ####  #      ###### ### #  ####"),
  console["log"]("___ Mope.ioâ„¢ Copyright (2017-present) Mopeio Ltd. ___"),
  console["log"]("--------------------------------------------");
const _0x4e3e5f = typeof localStorage !== "undefined" && !!localStorage,
  _0x91de7b = $config["isTestingMode"] && _0x4857c8;
let _0x1fbe4e = _0x91de7b;
if (_0x91de7b) {
  const _0x5d471a = document["createElement"]("div");
  (_0x5d471a["style"]["zIndex"] = "999999999"),
    (_0x5d471a["style"]["zIndex"] = "999999999"),
    (_0x5d471a["style"]["left"] = "0px"),
    (_0x5d471a["style"]["bottom"] = "0px"),
    (_0x5d471a["style"]["width"] = "100%"),
    (_0x5d471a["style"]["position"] = "fixed"),
    (_0x5d471a["style"]["position"] = "fixed"),
    (_0x5d471a["style"]["height"] = "150px"),
    (_0x5d471a["style"]["maxHeight"] = "150px");
  const _0x4e8db1 = document["createElement"]("div"),
    _0x26a137 = document["createElement"]("div");
  _0x5d471a["appendChild"](_0x4e8db1), _0x5d471a["appendChild"](_0x26a137);
  const _0x37dee8 = "25px";
  (_0x4e8db1["style"]["position"] = "absolute"),
    (_0x4e8db1["style"]["right"] = "1px"),
    (_0x4e8db1["style"]["backgroundColor"] = "rgba(255, 255, 255, .9)"),
    (_0x4e8db1["style"]["color"] = "black"),
    (_0x4e8db1["style"]["top"] = "-" + _0x37dee8),
    (_0x4e8db1["style"]["cursor"] = "pointer"),
    (_0x4e8db1["style"]["width"] = _0x37dee8),
    (_0x4e8db1["style"]["height"] = _0x37dee8),
    (_0x4e8db1["style"]["minWidth"] = _0x37dee8),
    (_0x4e8db1["style"]["minHeight"] = _0x37dee8),
    (_0x4e8db1["style"]["maxWidth"] = _0x37dee8),
    (_0x4e8db1["style"]["maxHeight"] = _0x37dee8),
    (_0x4e8db1["style"]["display"] = "flex"),
    (_0x4e8db1["style"]["justifyContent"] = "center"),
    (_0x4e8db1["style"]["alignItems"] = "center"),
    (_0x4e8db1["textContent"] = "-");
  const _0x3f23df = () => {
    (_0x1fbe4e = !_0x1fbe4e),
      _0x1fbe4e
        ? ((_0x5d471a["style"]["bottom"] = "0px"), (_0x4e8db1["textContent"] = "-"))
        : ((_0x5d471a["style"]["bottom"] = "-150px"), (_0x4e8db1["textContent"] = "+"));
  };
  _0x4e8db1["addEventListener"]("pointerup", () => {
    _0x3f23df();
  }),
    document["body"]["appendChild"](_0x5d471a),
    (_0x26a137["style"]["left"] = "0px"),
    (_0x26a137["style"]["bottom"] = "0px"),
    (_0x26a137["style"]["position"] = "absolute"),
    (_0x26a137["style"]["width"] = "100%"),
    (_0x26a137["style"]["height"] = "150px"),
    (_0x26a137["style"]["maxHeight"] = "150px"),
    (_0x26a137["style"]["opacity"] = ".6"),
    (_0x26a137["style"]["backgroundColor"] = "black"),
    (_0x26a137["style"]["color"] = "white"),
    (_0x26a137["style"]["display"] = "flex"),
    (_0x26a137["style"]["flexDirection"] = "column"),
    (_0x26a137["style"]["overflowX"] = "scroll"),
    (_0x26a137["style"]["pointerEvents"] = "auto");
  const _0x396acd = console["log"]["bind"](console),
    _0x1a612f = console["error"]["bind"](console),
    _0x41cdc2 = [],
    _0x1ff7ac = (_0x2982f1) => {
      if (_0x41cdc2["length"] > 0x64) {
        const _0x1ed2d7 = _0x41cdc2[0x0];
        _0x1ed2d7["remove"](), _0x41cdc2["shift"]();
      }
      const _0x452f9c = document["createElement"]("DIV");
      (_0x452f9c["innerText"] = _0x2982f1["join"](" ")), (_0x452f9c["style"]["fontSize"] = "10px"), (_0x452f9c["style"]["marginBottom"] = "3px");
      const _0x40b9be =
        _0x26a137["scrollHeight"] <= _0x26a137["scrollTop"] + _0x26a137["getBoundingClientRect"]()["height"] || _0x26a137["scrollHeight"] == 0x0;
      return (
        _0x26a137["appendChild"](_0x452f9c),
        _0x40b9be && (_0x26a137["scrollTop"] = _0x26a137["scrollHeight"]),
        _0x41cdc2["push"](_0x452f9c),
        _0x452f9c
      );
    };
  (console["log"] = function () {
    var _0x5d932f = Array["prototype"]["slice"]["call"](arguments);
    _0x1ff7ac(_0x5d932f), _0x396acd["apply"](console, _0x5d932f);
  }),
    (console["error"] = function () {
      var _0x5b61ab = Array["prototype"]["slice"]["call"](arguments);
      const _0x15311c = _0x1ff7ac(_0x5b61ab);
      (_0x15311c["style"]["color"] = "red"), _0x1a612f["apply"](console, _0x5b61ab);
    }),
    _0x3f23df();
}
const _0x14eb93 = $config["gameVersion"],
  _0x4bfbd4 = $config["isTestingMode"];
console["log"]("Is Testing mode: ", _0x4bfbd4);
const _0x2718a7 = $config["isBetaMode"];
console["log"]("Is beta mode: ", _0x2718a7);
const _0x3c143f = !![];
console["log"]("-----------Game Version " + _0x14eb93 + (_0x2718a7 ? " (BETA)" : "") + " ----------------"),
  $bus["emit"]($bus["EVENTS"]["INITIALIZED_MOBILE_FLAGS"], {
    isMobileAppIOS: _0xe2e29,
    isMobileAppAndroid: _0x15798e,
    isMobileApp: _0x4857c8,
  });
try {
  const _0x18b104 = document["getElementById"]("mope-footer"),
    _0xf0310b = document["getElementById"]("mope-app-store-btn-apple"),
    _0x12fb63 = _0x18b104 && _0xf0310b;
  if (_0x12fb63) {
    if (!_0xe2e29 && !_0x15798e) _0xf0310b["style"]["visibility"] = "visible";
    else {
      _0xf0310b["remove"]();
      const _0x176868 = document["getElementsByClassName"]("Footer__social-media");
      _0x176868 &&
        _0x176868[0x0] &&
        ((_0x176868[0x0]["style"]["minWidth"] = "524px"),
        (_0x176868[0x0]["style"]["width"] = "524px"),
        (_0x176868[0x0]["style"]["maxWidth"] = "524px"));
    }
  }
} catch (_0xbd8570) {}
$["ajax"]({
  url: "updates.html",
  type: "GET",
  success: function (_0x1e923d) {
    $bus["emit"]($bus["EVENTS"]["UPDATES_TEXT"], _0x1e923d);
  },
}),
  (window["onerror"] = function (_0x5b84f4, _0x36b182, _0x187529) {
    if (_0x4bfbd4) {
    }
  });

function _0xd65562() {}
const _0x51822d = 0x1388,
  _0xd69b7b = ![],
  _0x4bec48 = !![],
  _0x2ef69d = 0x90,
  _0x535a28 = 0x3e8 / _0x2ef69d,
  _0x5bda92 = document["getElementById"]("mope-footer"),
  _0x4633de = document["getElementById"]("mope-footer-update-btn"),
  _0x1166ef = document["getElementsByClassName"]("mope-footer-btn");
Array["from"](_0x1166ef)["forEach"]((_0x3c69db) => {
  _0x3c69db["addEventListener"]("pointerdown", () => {
    $bus["utils"]["emitClicked"]();
  });
}),
  _0x4633de["addEventListener"]("pointerup", () => {
    $bus["emit"]($bus["EVENTS"]["SHOW_UPDATES"]);
  }),
  $bus["on"]($bus["EVENTS"]["FOOTER_STATE"], ({ display: _0x3a19e8, hasNewUpdates: _0x23b141 }) => {
    let _0x289669 = document["getElementById"]("mope-footer-new-updates");
    const _0x2c9792 = !_0x289669 && _0x23b141,
      _0x3ccbb6 = _0x289669 && !_0x23b141;
    if (_0x2c9792)
      (_0x289669 = document["createElement"]("DIV")),
        _0x289669["setAttribute"]("id", "mope-footer-new-updates"),
        (_0x289669["className"] = "Footer__new-updates"),
        (_0x289669["textContent"] = "!"),
        _0x4633de["appendChild"](_0x289669);
    else _0x3ccbb6 && _0x4633de["removeChild"](_0x289669);
    _0x5bda92["style"]["display"] = _0x3a19e8;
  });
var _0x47b1e3 = 0x1,
  _0x3d7056 = 0x2,
  _0x3a6946 = 0x3,
  _0x4c5212 = 0x4,
  _0x5922d7 = 0x5,
  _0x5429b1 = 0x6,
  _0x4330bb = 0x7,
  _0x23872e = 0x8,
  _0x27354d = 0x9,
  _0x33d59d = 0xa,
  _0x582bc1 = 0xb,
  _0x2c8b91 = 0xc,
  _0x47c024 = 0xd,
  _0x109ccc = 0xe,
  _0x36811b = 0xf,
  _0x1343bd = 0x10,
  _0x1449d6 = 0x11,
  _0x22d8f7 = 0x12;
const _0x4573ba = 0x1,
  _0xd7b7 = 0x2,
  _0x6606d8 = 0x3,
  _0x4a9b40 = 0x4,
  _0x19f0dc = 0x5,
  _0x514d97 = 0x6,
  _0x4060cc = 0x7,
  _0x1726e0 = 0x8,
  _0x592990 = 0x9,
  _0x7975a7 = 0xa,
  _0x56efbf = 0xb,
  _0x36bbc5 = 0xc,
  _0x450456 = 0xd,
  _0x194108 = 0xe,
  _0x1284c1 = 0xf,
  _0x4a57f6 = 0x10,
  _0x5e0954 = 0x11,
  _0x3b5a97 = 0x12,
  _0x9a7dd6 = 0x13,
  _0xddb248 = 0x14,
  _0x462054 = 0x15,
  _0x594375 = 0x16,
  _0x13fe8c = 0x17,
  _0x56be9b = 0x18,
  _0x169141 = 0x19,
  _0x443437 = 0x1a,
  _0x29cc62 = 0x1b,
  _0x54d6b1 = 0x1c,
  _0x402ff3 = 0x1d,
  _0x1cde34 = 0x1e,
  _0x2bbda7 = 0x1f,
  _0x1dc07e = 0x20,
  _0x425fda = 0x21,
  _0x42373a = 0x22,
  _0x2f0d61 = 0x23,
  _0x365987 = 0x24,
  _0x4b3aba = 0x25,
  _0x17e8f3 = 0x26,
  _0x174d6 = 0x27,
  _0x17fe93 = 0x28,
  _0x263cc5 = 0x29,
  _0x1cb3a1 = 0x2a,
  _0x13660a = 0x2b,
  _0x5a479c = 0x2c,
  _0x59099f = 0x2d,
  _0x5f213b = 0x2e,
  _0x5648a8 = 0x2f,
  _0x240158 = 0x30,
  _0x54f65 = 0x31,
  _0x4110d9 = 0x32,
  _0xd49969 = 0x33,
  _0x148224 = 0x34,
  _0x5f48fd = 0x35,
  _0x41251f = 0x36,
  _0x2d6bc4 = 0x37,
  _0x1fca1a = 0x38,
  _0x22570e = 0x39,
  _0x494e18 = 0x3a,
  _0x59e164 = 0x3b,
  _0x102945 = 0x3c,
  _0x8d0c8e = 0x3d,
  _0x45994b = 0x3e,
  _0x4cf8cb = 0x3f,
  _0x41ac3 = 0x40,
  _0x3f1c5a = 0x41,
  _0x206891 = 0x42,
  _0x23adc9 = 0x43,
  _0x3a216a = 0x44,
  _0x21667a = 0x45,
  _0x35223a = 0x46,
  _0x407dcc = 0x47,
  _0x493a29 = 0x48,
  _0x20a0c9 = 0x49,
  _0x21dbce = 0x4a,
  _0x144b53 = 0x4b,
  _0x4aacba = 0x4c,
  _0x57788b = 0x4d,
  _0x487b79 = 0x4e,
  _0x5a9886 = 0x4f,
  _0xb0862e = 0x50,
  _0x55ed44 = 0x51,
  _0xeef82b = 0x52,
  _0x2ce1ce = 0x53,
  _0x2b9649 = 0x54,
  _0x26f99b = 0x55,
  _0xe69e34 = 0x56,
  _0xb95982 = 0x57,
  _0x56dd42 = 0x58,
  _0x1de0f5 = 0x59,
  _0x6f8ea0 = 0x5a,
  _0x33f6fe = 0x5b,
  _0xe5ad06 = 0x5c,
  _0x2a862b = 0x5d,
  _0x898796 = 0x5e,
  _0x30f2d4 = 0x5f,
  _0x3a95a6 = 0x60,
  _0x528bb0 = 0x61,
  _0x3f1bd2 = 0x62,
  _0x140e03 = 0x63,
  _0x4da478 = 0x64,
  _0x546c57 = 0x65,
  _0x1bc190 = 0x66,
  _0x2060fb = 0x67,
  _0x2b885a = 0x68,
  _0x229846 = 0x69,
  _0x218cf2 = 0x6a,
  _0x443adf = 0x6b,
  _0x3f85b7 = 0x6c,
  _0x180049 = 0x6d,
  _0x184ea0 = 0x6e,
  _0x3b9f44 = 0x6f,
  _0x33a78a = 0x70,
  _0x9107c0 = 0x71,
  _0x4f4c85 = 0x72,
  _0x3ae957 = 0x73,
  _0xb7ed3f = 0x74,
  _0x3d494b = 0x75,
  _0x4cbedb = 0x76,
  _0x464c7c = 0x77,
  _0xa40cc4 = 0x78;
var _0x4c28d1 = 0x1,
  _0x3fb3b2 = 0x2,
  _0x94e33c = 0x3,
  _0x583c47 = 0x4,
  _0x46bfb3 = 0x5,
  _0x44a83c = 0x6,
  _0x5e92c5 = 0x7,
  _0x2b2ead = 0x8,
  _0x37c4c1 = 0x9,
  _0xf2c340 = 0xa,
  _0xb09376 = 0xb,
  _0x9f9bdf = 0xc,
  _0x259653 = 0xd,
  _0x5aa814 = 0xe,
  _0x186096 = 0xf,
  _0xe065e3 = 0x10,
  _0x5a5628 = 0x11,
  _0x4b3c4f = 0x12,
  _0x44a5bd = 0x13,
  _0x4e42d9 = 0x14,
  _0x4a3fde = 0x15,
  _0x1ce5d9 = 0x16,
  _0x1daba1 = 0x17,
  _0x3ae840 = 0x18,
  _0x8c41f6 = 0x19,
  _0x5b51ce = 0x1a,
  _0x1d5893 = 0x1b,
  _0x2898dc = 0x1c,
  _0x313ba2 = 0x1d,
  _0x5a8996 = 0x1e,
  _0x3a42d7 = 0x1f,
  _0xf6ea95 = 0x20,
  _0x194937 = 0x21,
  _0x4d4712 = 0x22,
  _0x584c59 = 0x23,
  _0x3aa6d5 = 0x24,
  _0x1b4b44 = 0x25,
  _0x2dd076 = 0x26,
  _0x30fe85 = 0x27,
  _0x9c4ccf = 0x28,
  _0x45f833 = 0x2a,
  _0x38f421 = 0x2b,
  _0x3c81e7 = 0x2c,
  _0x5aecc8 = 0x2e,
  _0x470b6e = 0x2f,
  _0x3fc954 = 0x30,
  _0x59aa31 = 0x31,
  _0x1f6f17 = 0x32,
  _0x51d37c = 0x33,
  _0x55a015 = 0x34,
  _0x23ad49 = 0x35,
  _0x561354 = 0x36,
  _0x1727ca = 0x37,
  _0x116a06 = 0x38,
  _0x2e4bf1 = 0x39,
  _0x1f2a58 = 0x3a,
  _0x9bcb18 = 0x3b,
  _0x59f46b = 0x3c,
  _0x1fc81b = 0x3d,
  _0x464acd = 0x3e,
  _0x571e21 = 0x3f,
  _0x2020ca = 0x40,
  _0x52e0e9 = 0x41,
  _0x374904 = 0x42,
  _0xa9fc9a = 0x43,
  _0x12b332 = 0x44,
  _0x433f67 = 0x45,
  _0x4a8382 = 0x46,
  _0x27c08c = 0x47,
  _0x5c4849 = 0x48,
  _0x57c1b5 = 0x49,
  _0x37b373 = 0x4a,
  _0x5de1eb = 0x4b,
  _0x49ed64 = 0x4c,
  _0x2ae11d = 0x4d,
  _0x8994b9 = 0x4e,
  _0x4f7e71 = 0x4f,
  _0x43f349 = 0x50,
  _0x52aef4 = 0x51,
  _0x40a3d9 = 0x52,
  _0x43a114 = 0x53,
  _0xb80ae0 = 0x54,
  _0x37860 = 0x55,
  _0x226377 = 0x56,
  _0x991c21 = 0x57,
  _0x33cf0e = 0x58,
  _0x5caf5d = 0x59,
  _0x194737 = 0x5a,
  _0x39e246 = 0x5b,
  _0x502ba3 = 0x5c,
  _0x2c74b8 = 0x5d,
  _0x158e17 = 0x5e,
  _0x4434c8 = 0x5f,
  _0x6efdf8 = 0x60,
  _0x4f76cd = 0x61,
  _0x494ac9 = 0x62,
  _0x4db207 = 0x63,
  _0x41931f = 0x64,
  _0x18715e = 0x65,
  _0x4c4517 = 0x66,
  _0x26acd2 = 0x67,
  _0x33e1fe = 0x68,
  _0x393517 = 0x69,
  _0x282e37 = 0x6a,
  _0x595f2d = 0x6b,
  _0xe97342 = 0x6c,
  _0x5c5573 = 0x6d,
  _0x24b846 = 0x6e,
  _0x129eb7 = 0x6f,
  _0x476df4 = 0x70,
  _0x497145 = 0x71,
  _0x41e12f = 0x72,
  _0x55d652 = 0x73,
  _0x1398dd = 0x74,
  _0x2e7271 = 0x75,
  _0x28e4ca = 0x76,
  _0x198a28 = 0x77,
  _0xfa0640 = 0x7a,
  _0x1c816e = 0x7b,
  _0xb9c2df = 0x7d,
  _0x1f80ee = 0x96,
  _0x17bf26 = {
    customClassesForOType: {},
    setClassForAnimalType: function (_0x48bc97, _0x4a5353) {
      this["setCustomClassForGameObjType"](_0x48bc97, _0x3fb3b2, _0x4a5353);
    },
    setClassForAnimalBodyType: function (_0x91f2e4, _0xc0aaab) {
      this["setCustomClassForGameObjType"](_0x91f2e4, _0x2e7271, _0xc0aaab);
    },
    setCustomClassForGameObjType: function (_0x243699, _0x407759, _0x4d7524) {
      !this["customClassesForOType"][_0x407759] &&
        (this["customClassesForOType"][_0x407759] = {
          oTypeMainClass: null,
          secondaryTypeClasses: {},
        });
      var _0x4065e0 = this["customClassesForOType"][_0x407759];
      if (_0x4d7524 == null) {
        if (_0x4065e0["oTypeMainClass"] != null)
          console["log"](
            "ERROR 'GameObjType.setCustomClassForGameObjType': a class (" +
              this["customClassesForOType"][_0x407759] +
              ") is already set for oType " +
              _0x407759 +
              "! Check for duplicate calls!"
          );
        _0x4065e0["oTypeMainClass"] = _0x243699;
      } else {
        if (_0x4d7524 in _0x4065e0["secondaryTypeClasses"])
          console["log"](
            "ERROR 'GameObjType.setCustomClassForGameObjType': a class is already set for oType " +
              _0x407759 +
              " AND secondaryType (eg. animalType) " +
              _0x4d7524 +
              "! Check for duplicate calls!"
          );
        _0x4065e0["secondaryTypeClasses"][_0x4d7524] = _0x243699;
      }
      this["onClassSet"](_0x243699, _0x407759, _0x4d7524);
    },
    getClassForGameObjType: function (_0x444310, _0x663d8b) {
      if (_0x444310 in this["customClassesForOType"]) {
        var _0x501acc = this["customClassesForOType"][_0x444310];
        if (_0x663d8b == null || _0x663d8b == 0x0) return _0x501acc["oTypeMainClass"];
        else {
          if (_0x663d8b in _0x501acc["secondaryTypeClasses"]) return _0x501acc["secondaryTypeClasses"][_0x663d8b];
          else return _0x501acc["oTypeMainClass"];
        }
      } else return _0x307a43;
    },
    newlyVis_createGameObjFromMsg: function (_0x5e0963) {
      var _0x40b534 = _0x5e0963["readUInt8"](),
        _0x43cf1c = null;
      _0x5d86c5[_0x40b534] != null && _0x5d86c5[_0x40b534] !== undefined && (_0x43cf1c = _0x5e0963["readUInt8"]());
      var _0x3bd002 = _0x17bf26["createGameObjOfOType"](_0x40b534, _0x43cf1c);
      return _0x3bd002["worldUpd_readMsgNewlyVisible"](_0x5e0963, _0x40b534, _0x43cf1c), _0x3bd002;
    },
    hasCustomClasses: function (_0x40788f) {},
    createGameObjOfOType: function (_0x48d9d3, _0x14cf26) {
      var _0x5da879 = this["getClassForGameObjType"](_0x48d9d3, _0x14cf26),
        _0x4b67a1 = new _0x5da879(_0x48d9d3, _0x14cf26);
      return _0x4b67a1;
    },
    onClassSet: function (_0x8541b3) {},
    addCustomClassType: function (_0x322bc1) {
      if (_0x5d86c5[_0x322bc1] == undefined) _0x5d86c5[_0x322bc1] = _0x322bc1;
    },
  },
  _0x5d86c5 = {};
_0x17bf26["addCustomClassType"](_0x3fb3b2), _0x17bf26["addCustomClassType"](_0x2e7271), _0x17bf26["addCustomClassType"](_0x5aa814);
var _0x659012 = 0x1,
  _0x388c4c = 0x2,
  _0xc58c70 = 0x3,
  _0x2e6d2a = 0x4,
  _0x50c9da = 0x5,
  _0x108a58 = 0x6,
  _0x1c4f28 = 0x7,
  _0x3cc7bc = 0x8,
  _0x5a5817 = 0x9,
  _0x15f6e5 = 0xa,
  _0x16bb4c = 0xb,
  _0x1e9785 = 0xc,
  _0x8151b9 = 0xd,
  _0x1ae9e8 = 0xe,
  _0x596a1b = 0xf,
  _0x3dee49 = 0x10,
  _0x2d0ebc = 0x11,
  _0x461353 = 0x12,
  _0x261bdf = 0x13,
  _0x2429b5 = 0x14,
  _0x36f1a3 = 0x15,
  _0x4af824 = 0x16,
  _0x291edb = 0x17,
  _0x4f1c79 = 0x18,
  _0x391550 = 0x19,
  _0x573db4 = 0x1a,
  _0x15f668 = 0x1b,
  _0x33164c = 0x1c,
  _0x5ac0cd = 0x1d,
  _0x364eae = 0x1e,
  _0xd9bb61 = 0x1f,
  _0x58f094 = 0x20,
  _0x21c202 = 0x21,
  _0x50e796 = 0x22,
  _0x83a348 = 0x23,
  _0x33a471 = 0x24,
  _0x23ab49 = 0x25,
  _0x72b8ae = 0x26,
  _0x379cc3 = 0x27,
  _0x31d5ba = 0x28,
  _0x19954b = 0x29,
  _0x4a1394 = 0x2a,
  _0x5ab376 = 0x2b,
  _0x3531d4 = 0x2c,
  _0x52ce41 = 0x2d,
  _0x322b1f = 0x2e,
  _0x52066d = 0x2f,
  _0xb5d198 = 0x30,
  _0x1c2dd4 = 0x31,
  _0x1a3bd2 = 0x32,
  _0x2e22f9 = 0x33,
  _0x2a018e = 0x34,
  _0x11d87b = 0x35,
  _0x10ad1f = 0x36,
  _0x353380 = 0x37,
  _0x17ab53 = 0x38,
  _0x26c175 = 0x39,
  _0x16a65d = 0x3a,
  _0x4ca3d5 = 0x3b,
  _0x3807fc = 0x3c,
  _0x4d5dff = 0x3d,
  _0x483352 = 0x3e,
  _0x19797d = 0x3f,
  _0x3d8491 = 0x40,
  _0x58aade = 0x41,
  _0x533281 = 0x42,
  _0x3ae185 = 0x43,
  _0x3a0961 = 0x44,
  _0x3b7c87 = 0x45,
  _0x250a37 = 0x46,
  _0x5b1639 = 0x47,
  _0x448b86 = 0x48,
  _0x28027c = 0x49,
  _0x5b8090 = 0x4a,
  _0x65dffc = 0x4b,
  _0x1ee088 = 0x4c,
  _0x5d0d40 = 0x4d,
  _0x43a3bb = 0x4e,
  _0x37c0ab = 0x4f,
  _0x4da405 = 0x50,
  _0x2deb28 = 0x51,
  _0xbd9993 = 0x52,
  _0x2a2687 = 0x53,
  _0x156fde = 0x54,
  _0x4eaba8 = 0x55,
  _0x299482 = 0x56,
  _0xe68f0 = 0x57,
  _0x353123 = 0x58,
  _0x1b8b5e = 0x59,
  _0x55bfef = 0x5a,
  _0x4310c7 = 0x5b,
  _0x2e86d6 = 0x5c,
  _0x31f081 = 0x5d,
  _0x3cc7e2 = 0x5e,
  _0x321383 = 0x5f,
  _0x510716 = 0x60,
  _0x3297a2 = 0x61,
  _0x563a97 = 0x62,
  _0x30fd4c = 0x63,
  _0x5eebcf = 0x64,
  _0x6ff36b = 0x65,
  _0x205af4 = 0x66,
  _0xe72acb = 0x67,
  _0x261adf = 0x68,
  _0x5195b7 = 0x69,
  _0x511c71 = 0x6a,
  _0x4cd422 = 0x6b,
  _0x6af42d = 0x6c,
  _0x190408 = 0x6d,
  _0x442977 = 0x6e,
  _0x13567f = 0x6f,
  _0x5de5e6 = function (_0x2841cb) {
    var _0x12949c = {};
    switch (_0x2841cb) {
      case _0x52ce41:
        (_0x12949c["aniName"] = "Snail"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "You're a super slow snail!"),
          (_0x12949c["aniCol"] = "#fcc02b"),
          (_0x12949c["skinName"] = "snail");
        break;
      case _0x659012:
        (_0x12949c["aniName"] = "Mouse"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = ""),
          (_0x12949c["aniCol"] = "#9BA9B9"),
          (_0x12949c["skinName"] = "mouse");
        break;
      case _0x388c4c:
        (_0x12949c["aniName"] = "Rabbit"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to RABBIT! \x0aPress W to burrow a hole to hide in!"),
          (_0x12949c["aniCol"] = "#AA937E"),
          (_0x12949c["skinName"] = "rabbit");
        break;
      case _0xc58c70:
        (_0x12949c["aniName"] = "Pig"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to PIG!\x0a Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)"),
          (_0x12949c["aniCol"] = "#DD6BD4"),
          (_0x12949c["skinName"] = "pig");
        break;
      case _0x2e6d2a:
        (_0x12949c["aniName"] = "Fox"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] =
            "UPGRADED to FOX! ,\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!"),
          (_0x12949c["aniCol"] = "#FF9D43"),
          (_0x12949c["skinName"] = "fox");
        break;
      case _0x50c9da:
        (_0x12949c["aniName"] = "Deer"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] =
            "UPGRADED to DEER! \x0aPress W to dig up food! \x0aDig in mud for better food!\x0a Hint:Check water areas for new food sources!"),
          (_0x12949c["aniCol"] = "#C4773E"),
          (_0x12949c["skinName"] = "deer");
        break;
      case _0x108a58:
        (_0x12949c["aniName"] = "Mole"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to MOLE!\x0a Hold W to dig underground!\x0aGo under anything, do surprise attacks!"),
          (_0x12949c["aniCol"] = "#4C4A45"),
          (_0x12949c["skinName"] = "mole");
        break;
      case _0x1c4f28:
        (_0x12949c["aniName"] = "Zebra"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to ZEBRA! \x0aPress W to kick side ways!"),
          (_0x12949c["aniCol"] = "#FFFFFF"),
          (_0x12949c["skinName"] = "zebra");
        break;
      case _0x3cc7bc:
        (_0x12949c["aniName"] = "Lion"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to LION!\x0a Press W to release a mighty ROAR (Rawr!)!"),
          (_0x12949c["aniCol"] = "#f8c923"),
          (_0x12949c["skinName"] = "lion");
        break;
      case _0x5a5817:
        (_0x12949c["aniName"] = "CHEETAH"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to CHEETAH!\x0a Press W to get a speed boost! (Every 8 seconds)!"),
          (_0x12949c["aniCol"] = "#CAC05B"),
          (_0x12949c["skinName"] = "bigcat/cheetah");
        break;
      case _0x15f6e5:
        (_0x12949c["aniName"] = "Bear"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to BEAR!\x0a Bears climb through green hills! (Press W to use your claw!)"),
          (_0x12949c["aniCol"] = "#99591C"),
          (_0x12949c["skinName"] = "bear");
        break;
      case _0x16bb4c:
        (_0x12949c["aniName"] = "Croc"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] =
            "UPGRADED to CROCODILE!\x0a Press W to bite and drag around animals! \x0a+ (Now hide in water spots)+ Swim well in Mud, Lakes & Oceans!"),
          (_0x12949c["aniCol"] = "#30F51C"),
          (_0x12949c["skinName"] = "croc");
        break;
      case _0x8151b9:
        (_0x12949c["aniName"] = "Hippo"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to HIPPO!\x0aHippos are great swimmers, dominate the Lakes/Oceans/Mud!"),
          (_0x12949c["aniCol"] = "#945A99"),
          (_0x12949c["skinName"] = "hippo");
        break;
      case _0x1e9785:
        (_0x12949c["aniName"] = "Rhino"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to RHINO!\x0a Press W to CHARGE with your mighty horn!"),
          (_0x12949c["aniCol"] = "#94a3a9"),
          (_0x12949c["skinName"] = "rhino");
        break;
      case _0x596a1b:
        (_0x12949c["aniName"] = "Shrimp"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = ""),
          (_0x12949c["aniCol"] = "#f88e37"),
          (_0x12949c["skinName"] = "shrimp");
        break;
      case _0x3dee49:
        (_0x12949c["aniName"] = "Trout"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to TROUT!\x0aHint: Hold Left-click to RUN! (Uses extra water)"),
          (_0x12949c["aniCol"] = "#ac8686"),
          (_0x12949c["skinName"] = "trout");
        break;
      case _0x2d0ebc:
        (_0x12949c["aniName"] = "Crab"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to CRAB!\x0a Crabs can survive on dry land!\x0a (On land, Press W to go into your shell!)"),
          (_0x12949c["aniCol"] = "#bf2408"),
          (_0x12949c["skinName"] = "crab");
        break;
      case _0x461353:
        (_0x12949c["aniName"] = "Squid"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to SQUID!\x0a Squids can use INK when injured (press W!) \x0a+ you can hide in plankton bushes!"),
          (_0x12949c["aniCol"] = "#40dda4"),
          (_0x12949c["skinName"] = "squid");
        break;
      case _0x261bdf:
        (_0x12949c["aniName"] = "Shark"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to SHARK!\x0a A vicious predator of the oceans!"),
          (_0x12949c["aniCol"] = "#999fc6"),
          (_0x12949c["skinName"] = "shark");
        break;
      case _0x4af824:
        (_0x12949c["aniName"] = "Sea-horse"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to SEA HORSE!\x0a An agile hunter!"),
          (_0x12949c["aniCol"] = "#73BE2F"),
          (_0x12949c["skinName"] = "seahorse");
        break;
      case _0x291edb:
        (_0x12949c["aniName"] = "Jellyfish"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to JELLYFISH!\x0a A slowly-turning animal that can grow quite large!"),
          (_0x12949c["aniCol"] = "#FDB9BA"),
          (_0x12949c["skinName"] = "jellyfish");
        break;
      case _0x36f1a3:
        (_0x12949c["aniName"] = "Turtle"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to TURTLE!\x0a Lives well on land & water! (On land, Press W to go into your shell!)"),
          (_0x12949c["aniCol"] = "#502E1A"),
          (_0x12949c["skinName"] = "turtle");
        break;
      case _0x2429b5:
        (_0x12949c["aniName"] = "Stringray"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to STINGRAY!\x0a Use electic shock (Release W key!) to shock animals! \x0a(Takes time to recharge)"),
          (_0x12949c["aniCol"] = "#164336"),
          (_0x12949c["skinName"] = "stingray");
        break;
      case _0x4f1c79:
        (_0x12949c["aniName"] = "The Kraken"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] =
            "UPGRADED to THE KRAKEN!\x0a Terrorize the oceans, and be feared by all!\x0a (Release W to use whirlpool ability!)"),
          (_0x12949c["aniCol"] = "#64a034"),
          (_0x12949c["skinName"] = "kraken");
        break;
      case _0x391550:
        (_0x12949c["aniName"] = "Pufferfish"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to PUFFERFISH!\x0a (Hold W to inflate- become spiky, and dangerous to touch!)"),
          (_0x12949c["aniCol"] = "#6C5C2C"),
          (_0x12949c["skinName"] = "pufferfish");
        break;
      case _0x573db4:
        (_0x12949c["aniName"] = "Killer Whale"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to Killer Whale! \x0aWhales blow out water when diving! (And sometimes other loot!)"),
          (_0x12949c["aniCol"] = "#141414"),
          (_0x12949c["skinName"] = "killerwhale");
        break;
      case _0x15f668:
        (_0x12949c["aniName"] = "Swordfish"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to " + _0x12949c["aniName"] + "!\x0a (Press W to rush with your sharp nose!)"),
          (_0x12949c["aniCol"] = "#689CD7"),
          (_0x12949c["skinName"] = "swordfish");
        break;
      case _0x33164c:
        (_0x12949c["aniName"] = "Gorilla"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] =
            "UPGRADED to " + _0x12949c["aniName"] + "!\x0a Gorillas are very fast on hills/trees!\x0a Press W to throw bananas! (from trees)"),
          (_0x12949c["aniCol"] = "#323232"),
          (_0x12949c["skinName"] = "gorilla");
        break;
      case _0x5ac0cd:
        (_0x12949c["aniName"] = "Octopus"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] =
            "UPGRADED to Octopus!\x0aHold W to use your 'Disguise' ability!\x0a(Hint: wait for prey to bite you- they get stunned!)"),
          (_0x12949c["aniCol"] = "#ff8340"),
          (_0x12949c["skinName"] = "octopus");
        break;
      case _0x1ae9e8:
        (_0x12949c["aniName"] = "Dragon"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] =
            "UPGRADED to " + _0x12949c["aniName"] + "!\x0a (You're amazing!) \x0aFly over everything, Hold W to shoot fire!"),
          (_0x12949c["aniCol"] = "#22FF8A"),
          (_0x12949c["skinName"] = "dragon");
        break;
      case _0x322b1f:
        (_0x12949c["aniName"] = "Black Dragon"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] =
            "UPGRADED to " +
            _0x12949c["aniName"] +
            "!\x0a Black dragons drink lava instead of water! Black dragons only heal on healing stones/lava!"),
          (_0x12949c["aniCol"] = "black"),
          (_0x12949c["skinName"] = "blackdragon");
        break;
      case _0x2a018e:
        (_0x12949c["aniName"] = "Giant Spider"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to " + _0x12949c["aniName"] + "!\x0a Place web around the game to catch prey!"),
          (_0x12949c["aniCol"] = "black"),
          (_0x12949c["skinName"] = "giantSpider");
        break;
      case _0x1a3bd2:
        (_0x12949c["aniName"] = "Cobra"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to " + _0x12949c["aniName"] + "!\x0a Hold W to Spit venom, and poison animals with your bite!"),
          (_0x12949c["aniCol"] = "black"),
          (_0x12949c["skinName"] = "cobra");
        break;
      case _0x2e22f9:
        (_0x12949c["aniName"] = "Boa Constrictor"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to " + _0x12949c["aniName"] + "!\x0a Coil and suffocate other animals!"),
          (_0x12949c["aniCol"] = "black"),
          (_0x12949c["skinName"] = "boaConstrictor");
        break;
      case _0x11d87b:
        (_0x12949c["aniName"] = "T-REX"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] =
            "UPGRADED to " + _0x12949c["aniName"] + " The Dinosaur!\x0a This ancient dinosaur has powerful jaws that can drag prey around!!"),
          (_0x12949c["aniCol"] = "#862A2A"),
          (_0x12949c["skinName"] = "trex");
        break;
      case _0x10ad1f:
        (_0x12949c["aniName"] = "Tiger"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to Tiger!\x0a Tigers can launch an ambush attack (HOLD W to grow a bush) Release to attack!"),
          (_0x12949c["aniCol"] = "#FF9000"),
          (_0x12949c["skinName"] = "tiger");
        break;
      case _0x353380:
        (_0x12949c["aniName"] = "Giraffe"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to Giraffe!\x0aGiraffe have huge legs and stomp anyone in their way!"),
          (_0x12949c["aniCol"] = "#E9BD23"),
          (_0x12949c["skinName"] = "giraffe");
        break;
      case _0x17ab53:
        (_0x12949c["aniName"] = "Eagle"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to Eagle!\x0aEagles can fly up other animals in the air! !\x0a"),
          (_0x12949c["aniCol"] = "#5b400d"),
          (_0x12949c["skinName"] = "eagle");
        break;
      case _0x19954b:
        (_0x12949c["aniName"] = "Arctic Fox"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] =
            "UPGRADED to " +
            _0x12949c["aniName"] +
            "!\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!"),
          (_0x12949c["aniCol"] = "#CFCFCF"),
          (_0x12949c["skinName"] = "arctic/arcticfox");
        break;
      case _0xd9bb61:
        (_0x12949c["aniName"] = "Arctic Hare"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to " + _0x12949c["aniName"] + "!\x0a \x0aPress W to burrow a hole to hide in!"),
          (_0x12949c["aniCol"] = "#D5D5D5"),
          (_0x12949c["skinName"] = "arctic/arctichare");
        break;
      case _0x58f094:
        (_0x12949c["aniName"] = "The Yeti!"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] =
            "UPGRADED to " + _0x12949c["aniName"] + "!\x0a So it really exists... \x0a Hold W to turn into snow, release W to freeeeeze!"),
          (_0x12949c["aniCol"] = "#839eb5"),
          (_0x12949c["skinName"] = "arctic/yeti");
        break;
      case _0x21c202:
        (_0x12949c["aniName"] = "Chipmunk"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = ""),
          (_0x12949c["aniCol"] = "#A77C30"),
          (_0x12949c["skinName"] = "arctic/chipmunk");
        break;
      case _0x50e796:
        (_0x12949c["aniName"] = "Muskox"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] =
            "UPGRADED to " + _0x12949c["aniName"] + "!\x0a Press W to charge with your horns! \x0aPlus move decently on ice!"),
          (_0x12949c["aniCol"] = "#231f18"),
          (_0x12949c["skinName"] = "arctic/muskox");
        break;
      case _0x83a348:
        (_0x12949c["aniName"] = "Penguin"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to " + _0x12949c["aniName"] + "!\x0a Left-click to run!\x0a (HOLD W to slide FAST on ice)!"),
          (_0x12949c["aniCol"] = "#FFFFFF"),
          (_0x12949c["skinName"] = "arctic/penguin");
        break;
      case _0x33a471:
        (_0x12949c["aniName"] = "Polar Bear"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to " + _0x12949c["aniName"] + "!\x0a Polar bears can climb hills! \x0a+ They're amazing swimmers!"),
          (_0x12949c["aniCol"] = "#e4e4e4"),
          (_0x12949c["skinName"] = "arctic/bear/bear");
        break;
      case _0x23ab49:
        (_0x12949c["aniName"] = "Seal"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to " + _0x12949c["aniName"] + "!\x0a Seals can slide on ice (Hold W) + can climb hills (rocks too!)"),
          (_0x12949c["aniCol"] = "#cfcfcf"),
          (_0x12949c["skinName"] = "arctic/seal");
        break;
      case _0x72b8ae:
        (_0x12949c["aniName"] = "Snow leopard"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to " + _0x12949c["aniName"] + "!\x0a Press W to get a speed boost! (Every 8 seconds)!"),
          (_0x12949c["aniCol"] = "#cfcfcf"),
          (_0x12949c["skinName"] = "arctic/snowleopard");
        break;
      case _0x379cc3:
        (_0x12949c["aniName"] = "Walrus"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to " + _0x12949c["aniName"] + "!\x0a You can slide on ice (Hold W) + can climb hills (rocks too!)"),
          (_0x12949c["aniCol"] = "#633838"),
          (_0x12949c["skinName"] = "arctic/walrus");
        break;
      case _0x31d5ba:
        (_0x12949c["aniName"] = "Reindeer"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] =
            "UPGRADED to " + _0x12949c["aniName"] + "!\x0a Press W to dig up food! \x0a Your sharp hooves let you turn very well on ice!"),
          (_0x12949c["aniCol"] = "#a68976"),
          (_0x12949c["skinName"] = "arctic/reindeer");
        break;
      case _0x364eae:
        (_0x12949c["aniName"] = "Wolf"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to " + _0x12949c["aniName"] + "!\x0a Wolf paws turn very well on ice!\x0a Press W to howl!"),
          (_0x12949c["aniCol"] = "#6B6B6B"),
          (_0x12949c["skinName"] = "arctic/wolf");
        break;
      case _0x4a1394:
        (_0x12949c["aniName"] = "Wolverine"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to " + _0x12949c["aniName"] + "!\x0a Press W to Let out a Powerful GROWL! (Knocks back prey!)"),
          (_0x12949c["aniCol"] = "#843A0F"),
          (_0x12949c["skinName"] = "arctic/wolverine");
        break;
      case _0x5ab376:
        (_0x12949c["aniName"] = "Mammoth"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] =
            "UPGRADED to " +
            _0x12949c["aniName"] +
            "!\x0a Press W to roll snowballs with your trunk!\x0a The bigger the snowball gets, the longer the freeze!"),
          (_0x12949c["aniCol"] = "#9d4717"),
          (_0x12949c["skinName"] = "arctic/mammoth");
        break;
      case _0x3531d4:
        (_0x12949c["aniName"] = "Donkey"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to " + _0x12949c["aniName"] + "!\x0a Press W to Kick any animal behind you"),
          (_0x12949c["aniCol"] = "#8c7c64"),
          (_0x12949c["skinName"] = "donkey");
        break;
      case _0x52066d:
        (_0x12949c["aniName"] = "Sabertooth Tiger"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to Sabertooth Tiger!\x0aSabertooth Tigers are great swimmers, dominate the Lakes/Oceans/Mud!"),
          (_0x12949c["aniCol"] = "#945A99"),
          (_0x12949c["skinName"] = "sabertoothtiger");
        break;
      case _0xb5d198:
        (_0x12949c["aniName"] = "Elephant"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to " + _0x12949c["aniName"] + "!\x0a Use your long trunk to attack and eat food!"),
          (_0x12949c["aniCol"] = "#945A99"),
          (_0x12949c["skinName"] = "elephant");
        break;
      case _0x1c2dd4:
        (_0x12949c["aniName"] = "Blue Whale"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to Blue Whale!\x0a Smash with your powerful tail!"),
          (_0x12949c["aniCol"] = "#945A99"),
          (_0x12949c["skinName"] = "bluewhale");
        break;
      case _0x4ca3d5:
        (_0x12949c["aniName"] = "Duckling"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to a DUCK!"),
          (_0x12949c["aniCol"] = "#FF9000"),
          (_0x12949c["skinName"] = "duck/duckling");
        break;
      case _0x26c175:
        (_0x12949c["aniName"] = "Hedgehog"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to Hedgehog!\x0a (Hold W to become spiky, and dangerous to touch!)"),
          (_0x12949c["aniCol"] = "#5b400d"),
          (_0x12949c["skinName"] = "hedgehog");
        break;
      case _0x4d5dff:
        (_0x12949c["aniName"] = "King Crab"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to a KING CRAB!"),
          (_0x12949c["aniCol"] = "#971f0e"),
          (_0x12949c["skinName"] = "kingcrab");
        break;
      case _0x3807fc:
        (_0x12949c["aniName"] = "Lemming"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = ""),
          (_0x12949c["aniCol"] = "#A77C30"),
          (_0x12949c["skinName"] = "arctic/lemming");
        break;
      case _0x483352:
        (_0x12949c["aniName"] = "Frog"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to Frog!!"),
          (_0x12949c["aniCol"] = "#FF9000"),
          (_0x12949c["skinName"] = "frog/frog");
        break;
      case _0x19797d:
        (_0x12949c["aniName"] = "Ostrich"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] =
            "UPGRADED to Ostrich! Lay eggs to hatch babies! \x0aCommand babies by placing your crosshair (right-click/W)-\x0a They can attack prey!"),
          (_0x12949c["aniCol"] = "#FF9000"),
          (_0x12949c["skinName"] = "ostrich/ostrich");
        break;
      case _0x3d8491:
        (_0x12949c["aniName"] = "Pelican"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] =
            "UPGRADED to Pelican! \x0aPick up water (and prey!) in your mouth,\x0afly, and drop water on prey! (press W again)"),
          (_0x12949c["aniCol"] = "#FF9000"),
          (_0x12949c["skinName"] = "pelican/pelican");
        break;
      case _0x58aade:
        (_0x12949c["aniName"] = "Falcon"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to Falcon! \x0aFly, and do a powerful dive attack! Aim it well."),
          (_0x12949c["aniCol"] = "#FF9000"),
          (_0x12949c["skinName"] = "falcon/falcon");
        break;
      case _0x533281:
        (_0x12949c["aniName"] = "Snowy Owl"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to Snowy Owl!\x0a Aim the crosshair, \x0a right click/W when it's on top of prey, to attack!"),
          (_0x12949c["aniCol"] = "#FF9000"),
          (_0x12949c["skinName"] = "snowyowl/snowyowl");
        break;
      case _0x3b7c87:
        (_0x12949c["aniName"] = "Baby Ostrich"),
          (_0x12949c["aniDesc"] = ""),
          (_0x12949c["upgradeText"] = "UPGRADED to Baby Ostrich!!"),
          (_0x12949c["aniCol"] = "#FF9000"),
          (_0x12949c["skinName"] = "ostrich/baby-ostrich");
        break;
      case _0x3a0961:
        (_0x12949c["aniName"] = "Phoenix"),
          (_0x12949c["upgradeText"] = "UPGRADED to Phoenix!\x0aCreate powerful fire tornados to burn your enemies alive!"),
          (_0x12949c["aniCol"] = "#FF9000"),
          (_0x12949c["skinName"] = "phoenix/phoenix");
        break;
      case _0x250a37:
        (_0x12949c["aniName"] = "Sea Monster"),
          (_0x12949c["upgradeText"] = "UPGRADED to Sea Monster!"),
          (_0x12949c["aniCol"] = "#FF9000"),
          (_0x12949c["skinName"] = "seamonster");
        break;
      case _0x5b1639:
        (_0x12949c["aniName"] = "Land Monster"),
          (_0x12949c["upgradeText"] = "UPGRADED to Land Monster!"),
          (_0x12949c["aniCol"] = "#FF9000"),
          (_0x12949c["skinName"] = "landmonster");
        break;
      case _0x448b86:
        (_0x12949c["aniName"] = "Ice Monster"),
          (_0x12949c["upgradeText"] = "UPGRADED to Ice Monster!"),
          (_0x12949c["aniCol"] = "#FF9000"),
          (_0x12949c["skinName"] = "icemonster");
        break;
      case _0x28027c:
        (_0x12949c["aniName"] = "Dino Monster"),
          (_0x12949c["upgradeText"] = "UPGRADED to Dino Monster!"),
          (_0x12949c["aniCol"] = "#FF9000"),
          (_0x12949c["skinName"] = "dinomonster");
        break;
      case _0x5b8090:
        (_0x12949c["aniName"] = "Pigeon"),
          (_0x12949c["upgradeText"] = "UPGRADED to Pigeon!\x0aHold W to fly around. "),
          (_0x12949c["aniCol"] = "#FF9000"),
          (_0x12949c["skinName"] = "pigeon/pigeon");
        break;
      case _0x65dffc:
        (_0x12949c["aniName"] = "Toucan"),
          (_0x12949c["upgradeText"] = "UPGRADED to Toucan!\x0aHold W to fly around. "),
          (_0x12949c["aniCol"] = "#FF9000"),
          (_0x12949c["skinName"] = "toucan/toucan");
        break;
      default:
        (_0x12949c["aniName"] = "(Animal)"), (_0x12949c["aniDesc"] = ""), (_0x12949c["aniCol"] = "#000000"), (_0x12949c["upgradeText"] = "UPGRADED!");
    }
    return _0x12949c;
  };

function _0x58fd1b() {}

function _0x5369e8(_0x571546) {
  let _0x16ef1e = Array["isArray"](_0x571546) ? _0x571546 : [_0x571546];
  return (
    (_0x16ef1e = _0x16ef1e["map"]((_0x1ec256) => {
      return {
        ..._0x1ec256,
        abilImg: "assets/" + _0x1ec256["abilImg"],
      };
    })),
    _0x16ef1e["length"] === 0x1 &&
      _0x16ef1e["unshift"]({
        abilName: "Dash",
        abilImg: "assets/abilities/Dash-Boost.svg",
      }),
    _0x16ef1e[0x1]["abilImg"] === "assets/abilities/Dash-Boost.svg" && (_0x16ef1e["length"] = 0x1),
    _0x16ef1e
  );
}
var _0x2a81d2 = 0x65,
  _0x20f85f = 0x0,
  _0xe0fa73 = 0x1,
  _0x4969cd = 0x2,
  _0x40acce = 0x3,
  _0x4ce01 = 0x4,
  _0x34f882 = 0x5,
  _0x17eb6b = 0x6,
  _0x40a3d8 = 0x7,
  _0x4fa0a9 = 0x8,
  _0x4b4e13 = 0x9,
  _0x2c7978 = 0xa,
  _0x533680 = 0xb,
  _0x2408ce = 0xc,
  _0x246807 = 0xd,
  _0x5c6809 = 0xe,
  _0x45cdc4 = 0xf,
  _0x4bde54 = 0x10,
  _0xbd9828 = 0x11,
  _0x16de96 = 0x12,
  _0x1cce2b = 0x13,
  _0x1a645b = 0x14,
  _0x2e7544 = 0x15,
  _0x35a024 = 0x16,
  _0x1ba073 = 0x17,
  _0x4c5be6 = 0x18,
  _0x1571c9 = 0x19,
  _0x45ca2f = 0x1a,
  _0x4e32d8 = 0x1b,
  _0x2e388a = 0x1c,
  _0x26478a = 0x1e,
  _0x2633db = 0x1f,
  _0x3c9a9b = 0x20,
  _0x1ef413 = 0x21,
  _0x4e1dcf = 0x22,
  _0x29bac7 = 0x23,
  _0x2b3b0f = 0x24,
  _0x1b4a92 = 0x25,
  _0x1c8c62 = 0x26,
  _0x421f84 = 0x27,
  _0x3718b1 = 0x28,
  _0x1c1a44 = 0x29,
  _0x51b1b2 = 0x2a,
  _0x33c481 = 0x2b,
  _0xa43ca5 = 0x2e,
  _0x2cb97d = 0x2f,
  _0x4abf68 = 0x30,
  _0x218c6a = 0x31,
  _0x1b8b78 = 0x33,
  _0x331f6f = 0x36,
  _0x2b4fad = 0x37,
  _0x20275a = 0x38,
  _0x30ff48 = 0x39,
  _0x2cf6f9 = 0x3a,
  _0x5534ed = 0x3b,
  _0xa2e86 = 0x3c,
  _0x5a51dc = 0x3d,
  _0x4d10df = 0x3e,
  _0x3cc7a4 = 0x3f,
  _0x3c8e01 = 0x40,
  _0x4da89f = 0x41,
  _0x3a5d75 = 0x42,
  _0x45b2d9 = 0x43,
  _0x866e9 = 0x44,
  _0x3e8d80 = 0x45,
  _0x5377cb = 0x46,
  _0xef212f = 0x47,
  _0x2749c7 = 0x48,
  _0x589e65 = 0x49,
  _0x3aeb74 = 0x4a,
  _0x36cab8 = 0x4b,
  _0x143de3 = 0x4c,
  _0x572f13 = 0x4d,
  _0x5781ad = 0x4e,
  _0x16bb07 = 0x4f,
  _0x4c997d = 0x50,
  _0x2059c1 = 0x51,
  _0x4853ad = 0x52,
  _0x2dce01 = 0x53,
  _0x303732 = 0x56,
  _0x26f45c = 0x57,
  _0x3c4c1d = 0x58,
  _0x200999 = 0x59,
  _0x5d1b97 = 0x5a,
  _0x5258d8 = 0x5b,
  _0x29c026 = 0x5c,
  _0x4c389e = 0x5d,
  _0x3c2b00 = 0x5e,
  _0x602d06 = 0x5f,
  _0x3144dd = 0x5d,
  _0x516caa = 0x61,
  _0x1d819a = 0x62,
  _0x25c4b3 = 0x63,
  _0x53039f = 0x65,
  _0x5ee565 = 0x66,
  _0x2ca99e = 0x67,
  _0x1f6d67 = 0x68,
  _0x1b5017 = 0x69,
  _0x53947d = 0x6a,
  _0x2134e6 = 0x6b,
  _0x158a9b = 0x6c,
  _0x213e84 = 0x70,
  _0xaf36c = 0x80,
  _0x1cbaa4 = function (_0x34f330) {
    var _0xc90bbe = {},
      _0x3038c2 = "",
      _0x1d63af = _0x2fa637[_0x204989];
    switch (_0x34f330) {
      case _0x4853ad:
        (_0xc90bbe["abilName"] = "Bear Attack"), (_0xc90bbe["abilImg"] = "abilities/Slash-Claw.svg");
        break;
      case _0x2dce01:
        (_0xc90bbe["abilName"] = "Spit!"), (_0xc90bbe["abilImg"] = "abilities/Spit.svg");
        break;
      case _0x3c9a9b:
        (_0xc90bbe["abilName"] = "Tail Slap"), (_0xc90bbe["abilImg"] = "abilities/TailHit.svg");
        break;
      case _0x2633db:
        (_0xc90bbe["abilName"] = "Trunk Hit"), (_0xc90bbe["abilImg"] = "abilities/TrunkHit.svg");
        break;
      case _0x2a81d2:
        (_0xc90bbe["abilName"] = "Dive"), (_0xc90bbe["abilImg"] = "abilities/Dive.svg");
        break;
      case _0x1571c9:
        (_0xc90bbe["abilName"] = "Dig For Food"), (_0xc90bbe["abilImg"] = "abilities/Dig.svg");
        break;
      case _0x4969cd:
        (_0xc90bbe["abilName"] = "Shell"), (_0xc90bbe["abilImg"] = "abilities/Wave.svg");
        break;
      case _0x2e7544:
        (_0xc90bbe["abilName"] = "Bite Drag"), (_0xc90bbe["abilImg"] = "abilities/Bite.svg");
        break;
      case _0x2b3b0f:
        (_0xc90bbe["abilName"] = "Suffocate prey"), (_0xc90bbe["abilImg"] = "abilities/Constrict.svg");
        break;
      case _0x2b4fad:
        (_0xc90bbe["abilName"] = "Fly with water"), (_0xc90bbe["abilImg"] = "abilities/PelicanFlyWithWater.svg");
        break;
      case _0x40a3d8:
        (_0xc90bbe["abilName"] = "Disguise"), (_0xc90bbe["abilImg"] = "abilities/Disguise.svg");
        break;
      case _0x35a024:
        (_0xc90bbe["abilName"] = "Burrow Hole"), (_0xc90bbe["abilImg"] = "abilities/Dig.svg");
        break;
      case _0x1ba073:
        (_0xc90bbe["abilName"] = "Pull from Hole"), (_0xc90bbe["abilImg"] = "abilities/Sinkhole.svg");
        break;
      case _0x4b4e13:
        (_0xc90bbe["abilName"] = "Charge"), (_0xc90bbe["abilImg"] = "abilities/Charge.svg");
        break;
      case _0xbd9828:
        (_0xc90bbe["abilName"] = "Roll snow"), (_0xc90bbe["abilImg"] = "abilities/Roll-RollSnowball.svg");
        break;
      case _0x4e1dcf:
        (_0xc90bbe["abilName"] = "Venom Spit"), (_0xc90bbe["abilImg"] = "abilities/Spit.svg");
        break;
      case _0x29bac7:
        (_0xc90bbe["abilName"] = "Spin Web"), (_0xc90bbe["abilImg"] = "abilities/Web.svg");
        break;
      case _0x246807:
        (_0xc90bbe["abilName"] = "Throw Snow"), (_0xc90bbe["abilImg"] = "abilities/Throw.svg");
        break;
      case _0x4bde54:
        (_0xc90bbe["abilName"] = "Drop Snow"), (_0xc90bbe["abilImg"] = "abilities/Roll-RollSnowball.svg");
        break;
      case _0x16de96:
        (_0xc90bbe["abilName"] = "Loud Noise"), (_0xc90bbe["abilImg"] = "abilities/Howl.svg");
        break;
      case _0x5c6809:
        (_0xc90bbe["abilName"] = "Claw Slash"), (_0xc90bbe["abilImg"] = "abilities/Slash-Claw.svg");
        break;
      case _0x4ce01:
        (_0xc90bbe["abilName"] = "Ink"), (_0xc90bbe["abilImg"] = "abilities/Ink.svg");
        break;
      case _0x40acce:
        (_0xc90bbe["abilName"] = "Shock"), (_0xc90bbe["abilImg"] = "abilities/Shock.svg");
        break;
      case _0xe0fa73:
        (_0xc90bbe["abilName"] = "Hold to Dig"), (_0xc90bbe["abilImg"] = "abilities/Dig.svg");
        break;
      case _0x2408ce:
        (_0xc90bbe["abilName"] = "Howl"), (_0xc90bbe["abilImg"] = "abilities/Howl.svg");
        break;
      case _0x4c5be6:
        (_0xc90bbe["abilName"] = "Throw Banana"), (_0xc90bbe["abilImg"] = "abilities/Throw.svg");
        break;
      case _0x2e388a:
        (_0xc90bbe["abilName"] = "Cause Wave"), (_0xc90bbe["abilImg"] = "abilities/Wave.svg");
        break;
      case _0x45cdc4:
        (_0xc90bbe["abilName"] = "Extra Boost"), (_0xc90bbe["abilImg"] = "abilities/Dash-Boost.svg");
        break;
      case _0x4fa0a9:
        (_0xc90bbe["abilName"] = "Slide on ice"), (_0xc90bbe["abilImg"] = "abilities/Slide.svg");
        break;
      case _0x2c7978:
        (_0xc90bbe["abilName"] = "Inflate"), (_0xc90bbe["abilImg"] = "abilities/Puff.svg");
        break;
      case _0x218c6a:
        (_0xc90bbe["abilName"] = "Spikes"), (_0xc90bbe["abilImg"] = "abilities/Spike.svg");
        break;
      case _0x1cce2b:
        (_0xc90bbe["abilName"] = "Fire"), (_0xc90bbe["abilImg"] = "abilities/Fireball.svg");
        break;
      case _0x26478a:
        (_0xc90bbe["abilName"] = "Fire"), (_0xc90bbe["abilImg"] = "abilities/MultiFireball.svg");
        break;
      case _0x1b8b78:
        (_0xc90bbe["abilName"] = "Arm Smash"), (_0xc90bbe["abilImg"] = "abilities/ArmSmash.svg");
        break;
      case _0x1b4a92:
        (_0xc90bbe["abilName"] = "Jaws Bite"), (_0xc90bbe["abilImg"] = "abilities/Bite.svg");
        break;
      case _0xa43ca5:
        (_0xc90bbe["abilName"] = "Jaws Bite"), (_0xc90bbe["abilImg"] = "abilities/Bite.svg");
        break;
      case _0x331f6f:
        (_0xc90bbe["abilName"] = "Command Babies"), (_0xc90bbe["abilImg"] = "abilities/Hypnotize.svg");
        break;
      case _0x2cf6f9:
        (_0xc90bbe["abilName"] = "Target prey"), (_0xc90bbe["abilImg"] = "abilities/Target.svg");
        break;
      case _0x30ff48:
        (_0xc90bbe["abilName"] = "Sky dive"), (_0xc90bbe["abilImg"] = "abilities/SkyDive.svg");
        break;
      case _0x1c8c62:
        (_0xc90bbe["abilName"] = "Ambush Attack"), (_0xc90bbe["abilImg"] = "abilities/Headbutt.svg");
        break;
      case _0x51b1b2:
        (_0xc90bbe["abilName"] = "Stomp"), (_0xc90bbe["abilImg"] = "abilities/Stomp.svg");
        break;
      case _0x2cb97d:
        (_0xc90bbe["abilName"] = "Fly with prey"), (_0xc90bbe["abilImg"] = "abilities/Fly.svg");
        break;
      case _0x4abf68:
        (_0xc90bbe["abilName"] = "Stink"), (_0xc90bbe["abilImg"] = "abilities/StinkCloud.svg");
        break;
      case _0x3c8e01:
      case _0x4da89f:
        (_0xc90bbe["abilName"] = "HOLD to fly"), (_0xc90bbe["abilImg"] = "abilities/Fly.svg");
        break;
      case _0xef212f:
        (_0xc90bbe["abilName"] = "HOLD to fly\x0a& Mimic Animals"), (_0xc90bbe["abilImg"] = "abilities/Caw-Mimic.svg");
        break;
      case _0x2749c7:
        (_0xc90bbe["abilName"] = "HOLD in water\x0a(find food)"), (_0xc90bbe["abilImg"] = "abilities/Dive.svg");
        break;
      case _0x36cab8:
        (_0xc90bbe["abilName"] = "HOLD to Peck\x0a/ Fly"), (_0xc90bbe["abilImg"] = "abilities/Peck.svg");
        break;
      case _0x143de3:
        (_0xc90bbe["abilName"] = "HOLD to Hypnotize\x0a/ Fly from hills"), (_0xc90bbe["abilImg"] = "abilities/Fly.svg");
        break;
      case _0x572f13:
        (_0xc90bbe["abilName"] = "HOLD to Jump High\x0a"), (_0xc90bbe["abilImg"] = "abilities/Jump.svg");
        break;
      case _0x5781ad:
        (_0xc90bbe["abilName"] = "HOLD to ROLL"), (_0xc90bbe["abilImg"] = "abilities/Roll-RollSnowball.svg");
        break;
      case _0x4c997d:
        (_0xc90bbe["abilName"] = "HOLD to Dig"), (_0xc90bbe["abilImg"] = "abilities/Dig.svg");
        break;
      case _0x16bb07:
        (_0xc90bbe["abilName"] = "Spits Food!"), (_0xc90bbe["abilImg"] = "abilities/Spit.svg");
        break;
      case _0x2059c1:
        (_0xc90bbe["abilName"] = "Whine!"), (_0xc90bbe["abilImg"] = "abilities/Howl.svg");
        break;
      case _0x589e65:
        (_0xc90bbe["abilName"] = "Front Kick\x0a(HOLD to Charge)"), (_0xc90bbe["abilImg"] = "abilities/Charge.svg");
        break;
      case _0x5a51dc:
        (_0xc90bbe["abilName"] = "Fire Tornado"), (_0xc90bbe["abilImg"] = "abilities/Firestorm.svg");
        break;
      case _0x3a5d75:
        (_0xc90bbe["abilName"] = "Sink Hole"), (_0xc90bbe["abilImg"] = "abilities/Sinkhole.svg");
        break;
      case _0x3cc7a4:
        (_0xc90bbe["abilName"] = "Giant Whirlpool"), (_0xc90bbe["abilImg"] = "abilities/Whirlpool.svg");
        break;
      case _0x5377cb:
        (_0xc90bbe["abilName"] = "Knock In Air"), (_0xc90bbe["abilImg"] = "abilities/Headbutt.svg");
        break;
      case _0x3e8d80:
        (_0xc90bbe["abilName"] = "Feeze Prey"), (_0xc90bbe["abilImg"] = "abilities/Ice-Freeze.svg");
        break;
      default:
        (_0xc90bbe["abilName"] = "Dash"), (_0xc90bbe["abilImg"] = "abilities/Dash-Boost.svg");
        break;
    }
    return _0xc90bbe;
  },
  _0x32639a = function (_0x37d985, _0x34602c) {
    return Math["random"]() * (_0x34602c - _0x37d985) + _0x37d985;
  },
  _0x30228f = function (_0x2f693d, _0xf69066) {
    return Math["floor"](Math["random"]() * (_0xf69066 - _0x2f693d + 0x1)) + _0x2f693d;
  },
  _0x48d2e6 = function (_0x2790f5) {
    var _0x2790f5 = (Math["trunc"](_0x2790f5) % 0x168) + (_0x2790f5 - Math["trunc"](_0x2790f5));
    if (_0x2790f5 > 0x0) return _0x2790f5;
    else return _0x2790f5 + 0x168;
  },
  _0x25b610 = function (_0x5ba227) {
    var _0x166088 = _0x5ba227["split"](".");
    return ((+_0x166088[0x0] * 0x100 + +_0x166088[0x1]) * 0x100 + +_0x166088[0x2]) * 0x100 + +_0x166088[0x3];
  },
  _0x1d2e88 = function (_0x24739b) {
    var _0xf10415 = _0x24739b % 0x100;
    for (var _0x486968 = 0x3; _0x486968 > 0x0; _0x486968--) {
      (_0x24739b = Math["floor"](_0x24739b / 0x100)), (_0xf10415 = (_0x24739b % 0x100) + "." + _0xf10415);
    }
    return _0xf10415;
  },
  _0x1b09ca = function (_0x18e79c, _0x552a1e) {
    var _0x2abeec = _0x552a1e["split"]("?")[0x0],
      _0x457c3e,
      _0x1620fc = [],
      _0x31290c = _0x552a1e["indexOf"]("?") !== -0x1 ? _0x552a1e["split"]("?")[0x1] : "";
    if (_0x31290c !== "") {
      _0x1620fc = _0x31290c["split"]("&");
      for (var _0x271360 = _0x1620fc["length"] - 0x1; _0x271360 >= 0x0; _0x271360 -= 0x1) {
        (_0x457c3e = _0x1620fc[_0x271360]["split"]("=")[0x0]), _0x457c3e === _0x18e79c && _0x1620fc["splice"](_0x271360, 0x1);
      }
      _0x2abeec = _0x2abeec + "?" + _0x1620fc["join"]("&");
    }
    return _0x2abeec;
  },
  _0x4e7b74 = function (_0x4b6d97) {
    return _0x4b6d97 * (0xb4 / Math["PI"]);
  },
  _0x3d960f = function (_0x134a77) {
    return _0x134a77 * (Math["PI"] / 0xb4);
  },
  _0x36f5d4 = function (_0x1d3fef, _0x12d448, _0x193109, _0x252696) {
    return Math["atan2"](_0x252696 - _0x12d448, _0x193109 - _0x1d3fef);
  },
  _0x2c0c61 = function (_0x5562ca, _0x353d41) {
    return (_0x5562ca >> _0x353d41) % 0x2 != 0x0;
  },
  _0x1ddbd = function (_0x1ee8ba, _0x5d6b66, _0x118364) {
    if (_0x118364) return _0x1ee8ba | (0x1 << _0x5d6b66);
    else return _0x1ee8ba & ~(0x1 << _0x5d6b66);
  },
  _0xd024c6 = function (_0x3a5090, _0x17bcf9) {
    var _0x146a03 = _0x17bcf9 - _0x3a5090,
      _0x1926dc = _0x48d2e6(_0x4e7b74(_0x146a03));
    if (_0x1926dc > 0xb4) _0x1926dc = _0x1926dc - 0x168;
    return _0x3d960f(_0x1926dc);
  },
  _0x549f3d = function (_0x3aea08, _0x52cac2, _0x3d7fb3) {
    return Math["min"](_0x3d7fb3, Math["max"](_0x52cac2, _0x3aea08));
  },
  _0x2fadab = function (_0x562004) {
    return unescape(encodeURIComponent(_0x562004));
  },
  _0x2684a4 = function (_0x5937ad) {
    return decodeURIComponent(escape(_0x5937ad));
  },
  _0x1b608b = function (_0x5f2741, _0x3d7071, _0x5deaf1) {
    var _0x3abd2d = _0x587de3["measureText"]("M")["width"] * 1.2,
      _0x5effd4 = _0x5f2741["split"]("\x0a");
    for (var _0x410066 = 0x0; _0x410066 < _0x5effd4["length"]; ++_0x410066) {
      _0x587de3["fillText"](_0x5effd4[_0x410066], _0x3d7071, _0x5deaf1), (_0x5deaf1 += _0x3abd2d);
    }
  },
  _0x8413cb = function (_0x59a270) {
    var _0x175720 = parseInt(_0x59a270, 0xa),
      _0x4873d6 = Math["floor"](_0x175720 / 0xe10),
      _0x1e565c = Math["floor"]((_0x175720 - _0x4873d6 * 0xe10) / 0x3c),
      _0x31cc0b = _0x175720 - _0x4873d6 * 0xe10 - _0x1e565c * 0x3c;
    return _0x31cc0b < 0xa && (_0x31cc0b = "0" + _0x31cc0b), _0x1e565c + ":" + _0x31cc0b;
  },
  _0x4acd30 = function (_0x4bcb54) {
    return _0x4bcb54["toString"]()["replace"](/\B(?=(\d{3})+(?!\d))/g, ",");
  },
  _0x105fd1 = function (_0x3699fa) {
    return _0xd3c315(_0x3699fa);
  },
  _0xd3c315 = function (_0x3348b7, _0x36a1be) {
    if (_0x3348b7 === null) return null;
    if (_0x3348b7 === 0x0) return "0";
    _0x36a1be = !_0x36a1be || _0x36a1be < 0x0 ? 0x0 : _0x36a1be;
    var _0x56f720 = _0x3348b7["toPrecision"](0x2)["split"]("e"),
      _0x5e7772 = _0x56f720["length"] === 0x1 ? 0x0 : Math["floor"](Math["min"](_0x56f720[0x1]["slice"](0x1), 0xe) / 0x3),
      _0x41de7d = _0x5e7772 < 0x1 ? _0x3348b7["toFixed"](0x0 + _0x36a1be) : (_0x3348b7 / Math["pow"](0xa, _0x5e7772 * 0x3))["toFixed"](0x2),
      _0x1cc894 = _0x41de7d < 0x0 ? _0x41de7d : Math["abs"](_0x41de7d),
      _0x4d7ffb = _0x1cc894 + ["", "K", "M", "B", "T"][_0x5e7772];
    return _0x4d7ffb;
  },
  _0x440ef0 = function (_0xb4e940, _0x11a35d, _0x13999d, _0x17d81c) {
    (_0x587de3["fillStyle"] = _0x17d81c),
      _0x587de3["beginPath"](),
      _0x587de3["arc"](_0xb4e940, _0x11a35d, Math["max"](0x0, _0x13999d), 0x0, Math["PI"] * 0x2),
      _0x587de3["fill"]();
  },
  _0x39e127 = function (_0x1f4e22, _0x4ce8b0, _0x3ebb0e, _0x3d3ef6, _0x53698c) {
    (_0x587de3["strokeStyle"] = _0x53698c),
      (_0x587de3["lineWidth"] = _0x3d3ef6),
      _0x587de3["beginPath"](),
      _0x587de3["arc"](_0x1f4e22, _0x4ce8b0, Math["max"](0x0, _0x3ebb0e), 0x0, Math["PI"] * 0x2),
      _0x587de3["stroke"]();
  },
  _0x120bbb = function (_0x548d2a, _0x3022f1, _0x668c3, _0x114539) {
    var _0x2c7597 = _0x668c3 * Math["sin"](((_0x114539 * Math["PI"]) / _0x3022f1) * _0x548d2a);
    return _0x2c7597;
  },
  _0x5583b4 = function (_0x5d7c94, _0x4193cd) {
    (_0x4bfbd4 || _0x4193cd) && console["log"](_0x5d7c94);
  };

function _0x167d19(_0x1d47a5) {
  var _0x5d5eb9 = new Date(null);
  _0x5d5eb9["setSeconds"](_0x1d47a5);
  var _0x2837ac = _0x5d5eb9["getMinutes"](),
    _0x1972fe = _0x5d5eb9["getSeconds"](),
    _0x3a5ad4 = "";
  if (_0x2837ac > 0x0) _0x3a5ad4 = _0x2837ac + "m ";
  if (_0x1972fe > 0x0) _0x3a5ad4 += _0x1972fe + "s";
  return _0x3a5ad4;
}

function _0xdae8c3(_0x25c064, _0x49ccec) {
  var _0x37196d = _0x25c064["x"] - _0x49ccec["x"],
    _0x31640a = _0x25c064["y"] - _0x49ccec["y"];
  return Math["sqrt"](_0x37196d * _0x37196d + _0x31640a * _0x31640a);
}
var _0x1c765e = "s",
  _0x228f05 = "e",
  _0x233c78 = "r",
  _0x1da9ad = "v",
  _0x21f153 = function () {
    window["setTimeout"](function () {
      eval(_0x1c765e + _0x228f05 + _0x233c78 + _0x1da9ad + _0x228f05 + _0x233c78 + " = null"), _0x21f153();
    }, _0x103b73(0xa, 0x14) * 0x3e8);
  };
_0x21f153();
const _0x25461f = _0x3d960f(0x2d),
  _0x2f9e35 = _0x3d960f(0x5a),
  _0x1d3ac4 = _0x3d960f(0xb4);

function _0x28b8c3(_0x8ac6c0) {
  (this["data"] = _0x8ac6c0),
    (this["offset"] = 0x0),
    (this["readUInt8"] = function () {
      var _0x554989 = this["data"]["getUint8"](this["offset"]);
      return (this["offset"] += 0x1), _0x554989;
    }),
    (this["readUInt16"] = function () {
      try {
        var _0x288cc0 = this["data"]["getUint16"](this["offset"], ![]);
        return (this["offset"] += 0x2), _0x288cc0;
      } catch (_0x1dfcb7) {
        return 0x0;
      }
    }),
    (this["readInt16"] = function () {
      try {
        var _0x249856 = this["data"]["getInt16"](this["offset"], ![]);
        return (this["offset"] += 0x2), _0x249856;
      } catch (_0x29c632) {
        return 0x0;
      }
    }),
    (this["readUInt32"] = function () {
      var _0x4cbc07 = this["data"]["getUint32"](this["offset"], ![]);
      return (this["offset"] += 0x4), _0x4cbc07;
    }),
    (this["readString"] = function () {
      var _0xe9dbd1 = this["readUInt16"](),
        _0x143477 = "",
        _0x545ffd;
      for (var _0x2e5bb0 = 0x0; _0x2e5bb0 < _0xe9dbd1; _0x2e5bb0++) {
        _0x545ffd = this["readUInt8"]();
        if (_0x2e5bb0 != _0xe9dbd1 - 0x1) _0x143477 += String["fromCharCode"](_0x545ffd);
      }
      return _0x2684a4(_0x143477);
    }),
    (this["readMsgReaderBitsGroup"] = function () {}),
    (this["readBitGroup"] = function () {
      return new _0x5e8d63(this);
    });
}

function _0x5906b0(_0x294294) {
  (this["len"] = 0x0),
    (this["dataView"] = new DataView(new ArrayBuffer(_0x294294))),
    (this["writeUInt8"] = function (_0x486985) {
      this["dataView"]["setUint8"](this["len"], _0x486985), (this["len"] += 0x1);
    }),
    (this["writeUInt16"] = function (_0x4733de) {
      this["dataView"]["setUint16"](this["len"], _0x4733de, ![]), (this["len"] += 0x2);
    }),
    (this["writeInt16"] = function (_0x5b3b34) {
      this["dataView"]["setInt16"](this["len"], _0x5b3b34, ![]), (this["len"] += 0x2);
    }),
    (this["writeUInt32"] = function (_0x21e78c) {
      this["dataView"]["setUint32"](this["len"], _0x21e78c, ![]), (this["len"] += 0x4);
    }),
    (this["readUInt8"] = function () {
      var _0x51268a = this["dataView"]["getUint8"](0x0);
      return _0x51268a;
    }),
    (this["writeString"] = function (_0x221a77) {
      (_0x221a77 = _0x2fadab(_0x221a77)), (len = _0x221a77["length"]), this["writeUInt16"](_0x221a77["length"]);
      for (var _0x3105a0 = 0x0; _0x3105a0 < len; _0x3105a0++) {
        this["writeUInt8"](_0x221a77["charCodeAt"](_0x3105a0));
      }
    });
}

function _0x5e8d63(_0x486079) {
  (this["bytesArray"] = new Uint8Array(0x14)),
    (this["bytesLen"] = 0x0),
    (this["rBitIndex"] = 0x1),
    (this["rByteIndex"] = 0x0),
    (this["getBool"] = function () {
      var _0x9afc4c = this["bytesArray"][this["rByteIndex"]],
        _0x465336 = _0x2c0c61(_0x9afc4c, this["rBitIndex"]) > 0x0;
      return (this["rBitIndex"] += 0x1), this["rBitIndex"] > 0x7 && ((this["rBitIndex"] = 0x1), (this["rByteIndex"] += 0x1)), _0x465336;
    }),
    (this["getInt0to3"] = function () {
      return this["getIntWithXBits"](0x2);
    }),
    (this["getIntWithXBits"] = function (_0x283afd) {
      var _0x3c9046 = 0x0;
      for (var _0x4e5f86 = 0x0; _0x4e5f86 < _0x283afd; _0x4e5f86++) {
        var _0x56640f = this["getBool"]();
        _0x3c9046 = _0x1ddbd(_0x3c9046, _0x4e5f86, _0x56640f);
      }
      return _0x3c9046;
    }),
    (this["byteToStr"] = function (_0x202f00) {
      var _0x57fe08 = "";
      for (var _0x57b186 = 0x0; _0x57b186 < 0x8; _0x57b186++) _0x57fe08 += _0x2c0c61(_0x202f00, _0x57b186) > 0x0 ? "1" : "0";
      return _0x57fe08;
    });
  var _0x435003 = !![];
  do {
    var _0x55802a = _0x486079["readUInt8"]();
    (this["bytesArray"][this["bytesLen"]++] = _0x55802a), (_0x435003 = _0x2c0c61(_0x55802a, 0x0) > 0x0);
  } while (_0x435003);
}
_0x413af8["prototype"] = {
  strokeW: 0x1,
  strokeColor: "#000000",
  multiLine: ![],
  alpha: 0x1,
  _text: "",
  _color: "#000000",
  x: 0x0,
  y: 0x0,
  _fntSize: 0x10,
  _canvas: null,
  _ctx: null,
  _dirty: ![],
  renderScale: 1.5,
  _scale: 0x1,
  width: 0x0,
  height: 0x0,
  setColor: function (_0xb1efee) {
    this["_color"] != _0xb1efee && ((this["_color"] = _0xb1efee), (this["_dirty"] = !![]));
  },
  setFontSize: function (_0x1a0c2f) {
    this["_fntSize"] != _0x1a0c2f && ((this["_fntSize"] = _0x1a0c2f), (this["_dirty"] = !![]));
  },
  setStroke: function (_0x419d2d) {
    _0x419d2d != this["strokeW"] && ((this["strokeW"] = _0x419d2d), (this["_dirty"] = !![]));
  },
  setText: function (_0x57a4ae) {
    _0x57a4ae != this["_text"] && ((this["_text"] = _0x57a4ae), (this["_dirty"] = !![]));
  },
  getRenderedCanvas: function () {
    null == this["_canvas"] && ((this["_canvas"] = document["createElement"]("canvas")), (this["_ctx"] = this["_canvas"]["getContext"]("2d")));
    if (this["_dirty"]) {
      this["_dirty"] = ![];
      var _0x1cdb16 = this["_canvas"],
        _0x197825 = this["_ctx"],
        _0x353412 = this["_text"],
        _0x385bb7 = this["_scale"],
        _0x8c071 = this["_fntSize"] * this["renderScale"],
        _0x1f32eb = _0x8c071 + "px Arial";
      _0x197825["font"] = _0x1f32eb;
      var _0x14fed5 = ~~(0.2 * _0x8c071);
      _0x197825["font"] = _0x1f32eb;
      if (this["multiLine"]) {
        var _0x1cf334 = _0x197825["measureText"]("M")["width"] * 1.2,
          _0x40a341 = _0x353412["split"]("\x0a"),
          _0x4b50ef = 0x0;
        for (var _0x153362 = 0x0; _0x153362 < _0x40a341["length"]; ++_0x153362) {
          _0x4b50ef = Math["max"](_0x4b50ef, _0x197825["measureText"](_0x40a341[_0x153362])["width"]);
        }
        (this["width"] = (_0x4b50ef + 0x6) * _0x385bb7),
          (this["height"] = (_0x1cf334 * _0x40a341["length"] + _0x14fed5) * _0x385bb7),
          (_0x1cdb16["width"] = this["width"]),
          (_0x1cdb16["height"] = this["height"]),
          (this["width"] /= this["renderScale"]),
          (this["height"] /= this["renderScale"]),
          (_0x197825["globalAlpha"] = this["alpha"]),
          (_0x197825["font"] = _0x1f32eb);
        this["strokeW"] > 0x0 &&
          ((_0x197825["shadowOffsetX"] = this["strokeW"]),
          (_0x197825["shadowOffsetY"] = this["strokeW"]),
          (_0x197825["shadowColor"] = this["strokeColor"]));
        (_0x197825["fillStyle"] = this["_color"]), (_0x197825["textAlign"] = "center");
        var _0x352e7f = 0x3 + _0x1cdb16["width"] / 0x2,
          _0x3bbecc = _0x8c071 - _0x14fed5 / 0x2;
        for (var _0x153362 = 0x0; _0x153362 < _0x40a341["length"]; ++_0x153362) {
          _0x197825["fillText"](_0x40a341[_0x153362], _0x352e7f, _0x3bbecc), (_0x3bbecc += _0x1cf334);
        }
      } else
        (this["width"] = (_0x197825["measureText"](_0x353412)["width"] + 0x6) * _0x385bb7),
          (this["height"] = (_0x8c071 + _0x14fed5) * _0x385bb7),
          (_0x1cdb16["width"] = this["width"]),
          (_0x1cdb16["height"] = this["height"]),
          (this["width"] /= this["renderScale"]),
          (this["height"] /= this["renderScale"]),
          (_0x197825["globalAlpha"] = this["alpha"]),
          (_0x197825["font"] = _0x1f32eb),
          this["strokeW"] > 0x0 &&
            ((_0x197825["shadowOffsetX"] = this["strokeW"]),
            (_0x197825["shadowOffsetY"] = this["strokeW"]),
            (_0x197825["shadowColor"] = this["strokeColor"])),
          (_0x197825["fillStyle"] = this["_color"]),
          _0x197825["fillText"](_0x353412, 0x3, _0x8c071 - _0x14fed5 / 0x2);
    }
    return this["_canvas"];
  },
  draw: function () {
    if (this["_text"]) {
      var _0x153688 = this["renderScale"];
      this["updateColor"]();
      var _0x2b5945 = this["getRenderedCanvas"](),
        _0x2d1221 = _0x2b5945["width"] / _0x153688,
        _0x30ff52 = _0x2b5945["height"] / _0x153688;
      this["setPos"](_0x2d1221, _0x30ff52),
        _0x587de3["drawImage"](_0x2b5945, this["x"] - _0x2d1221 / 0x2, this["y"] - _0x30ff52 / 0x2, _0x2d1221, _0x30ff52);
    }
  },
  setPos: function (_0x406548, _0x49f12d) {},
  updateColor: function () {},
};

function _0x413af8(_0x1c3a64, _0x15679c) {
  _0x1c3a64 && (this["_fntSize"] = _0x1c3a64), _0x15679c && (this["_color"] = _0x15679c);
}
window["CachedText"] = _0x413af8;
var _0x4b2819 = [];
_0x4b2819["push"](["1", "2", "3", "4", "5", "6", "7", "8"]),
  _0x4b2819["push"](["q", "e", "r", "t", "y", "u", "i", "o"]),
  _0x4b2819["push"](["a", "d", "f", "g", "h", "j", "k", "l"]),
  _0x4b2819["push"](["z", "x", "c", "v", "b", "n", "m", ","]);
const _0x351d9a = [],
  _0x206457 = async ({
    animalType: _0x3f899f,
    species: _0x32c02d,
    subSpecies: _0x1c7345,
    premiumSkinType: _0x2dcecc,
    season: _0x45c6fb,
    skinThemeID: _0x48cc86,
    biomeNum: _0x11eedd,
  }) => {
    const _0x592823 = _0x17bf26["createGameObjOfOType"](_0x3fb3b2, _0x3f899f);
    return (
      (_0x592823["animalType"] = _0x3f899f),
      (_0x592823["animalSpecies"] = _0x32c02d),
      (_0x592823["animalSubSpecies"] = _0x1c7345),
      (_0x592823["animalPremiumSkin"] = _0x2dcecc),
      (_0x592823["mopeSeasonID"] = _0x45c6fb),
      (_0x592823["skinThemeID"] = _0x48cc86),
      (_0x592823["curBiome"] = _0x11eedd),
      _0x592823["getImageData"]()
    );
  };
window["getAnimalSkinPreviewImage"] = _0x206457;
var _0x2fff76 = 0x1;
const _0x55410e = async function (_0x25ba2e, _0x25789d) {
    _0x351d9a["length"] = 0x0;
    var _0x4e4471 = _0x25789d == 0x1,
      _0x505243 = _0x25ba2e["readUInt8"](),
      _0x6e0592 = _0x25ba2e["readUInt8"](),
      _0x156570 = _0x25ba2e["readUInt8"](),
      _0x865e78 = _0x25ba2e["readUInt8"]();
    (_0x226297 = !![]),
      (_0x2fff76 = _0x156570),
      (_0xaf959c = 0x0),
      (_0x5dd63b = []),
      (_0x5d84a7 = _0x4e4471),
      (_0x200343 = +new Date()),
      (_0x4ed012 = _0x200343 + 0x3e8 * _0x6e0592);
    const _0x1e5336 = [];
    for (var _0x45b694 = 0x0; _0x45b694 < _0x865e78; _0x45b694++) {
      var _0xc91483 = _0x25ba2e["readUInt8"](),
        _0x5dacec = _0x25ba2e["readUInt8"](),
        _0x46019d = _0x25ba2e["readUInt8"](),
        _0x292855 = _0x25ba2e["readUInt8"](),
        _0x240438 = _0x25ba2e["readUInt8"](),
        _0x15e261 = _0x25ba2e["readUInt8"](),
        _0x3add59 = _0x25ba2e["readUInt8"](),
        _0x1cc460 = _0x25ba2e["readUInt8"]() == 0x1,
        _0x477f12 = _0x25ba2e["readString"](),
        _0x520702 = _0x45b694,
        _0x155ae8 = _0x477f12 != null && _0x477f12 !== "null",
        _0x8c820 = 0x0,
        _0x5be3cc = null;
      if (_0x477f12 != null) {
        if (_0x51b124["shop"] != null && _0x51b124["shop"]["allItems"] != null) {
          var _0x24d3ef = _0x51b124["shop"]["allItems"]["" + _0x477f12];
          _0x24d3ef && ((_0x5be3cc = _0x24d3ef), (_0x8c820 = _0x24d3ef["coinsPrice"] > 0x0 ? _0x24d3ef["coinsPrice"] : 0x0));
        }
      }
      _0x1cc460 = _0x1cc460 || _0x8c820 == 0x0;
      const _0x3c6e13 = {
          abilities: [],
          anAniT: _0x5dacec,
          biomeNum: _0x46019d,
          species: _0x292855,
          subSpecies: _0x240438,
          premiumSkinType: _0x15e261,
          season: _0x505243,
          skinThemeID: _0x3add59,
          isBought: _0x1cc460,
          itemName: _0x477f12,
          coinsPrice: _0x8c820,
          itemIndex: _0x520702,
          choiceIndex: _0x520702,
          shopItem: _0x5be3cc,
          isShopItem: _0x155ae8,
          forLvl: _0x156570,
        },
        _0x2d58ed = _0x17bf26["createGameObjOfOType"](_0x3fb3b2, _0x5dacec);
      (_0x2d58ed["animalType"] = _0x5dacec),
        (_0x2d58ed["animalSpecies"] = _0x292855),
        (_0x2d58ed["animalSubSpecies"] = _0x240438),
        (_0x2d58ed["animalPremiumSkin"] = _0x15e261),
        (_0x2d58ed["mopeSeasonID"] = _0xc91483),
        (_0x2d58ed["skinThemeID"] = _0x3add59),
        (_0x2d58ed["curBiome"] = _0x46019d),
        (_0x3c6e13["abilities"] = _0x5369e8(_0x2d58ed["getAbilityInfo"]())),
        (_0x3c6e13["itemName"] = _0x17bf26["getClassForGameObjType"](_0x3fb3b2, _0x5dacec)["name"]);
      if (_0x2d58ed["animalInfo"]) {
        const _0x579b18 = _0x2d58ed["animalInfo"]();
        (_0x3c6e13["itemName"] = _0x579b18["aniName"]), (_0x3c6e13["name"] = _0x579b18["aniName"]);
      }
      (_0x3c6e13["shopImage"] = _0x2d58ed["getUpgradeImagePath"]()), _0x351d9a["push"](_0x3c6e13);
    }
    $bus["emit"]($bus["EVENTS"]["ANIMAL_CHOICE_START"], [..._0x351d9a]), _0x17b890($bus["CONSTANTS"]["AD_SCREEN_LAYOUTS"]["UPGRADE"]);
  },
  _0x22bc75 = function () {
    !_0x4857c8 && _0x17b890($bus["CONSTANTS"]["AD_SCREEN_LAYOUTS"]["UPGRADE"]);
  },
  _0x55852e = function () {
    $bus["emit"]($bus["EVENTS"]["HIDE_ALL_ADS"]);
  },
  _0x55ed31 = function () {
    $bus["emit"]($bus["EVENTS"]["ANIMAL_CHOICE_START"], [..._0x351d9a]);
  };
var _0x2f65e0 = ![];
const _0x4b69de = function (_0x698ea1, _0x5cc850, _0xbb459d, _0x42244e) {
    var _0x2aa61d = 0x64,
      _0x39e5c4 = 0.5;
    window["matchMedia"]("(orientation: portrait)")["matches"] && (_0x2f65e0 = ![]);
    window["matchMedia"]("(orientation: landscape)")["matches"] && (_0x2f65e0 = !![]);
    var _0x19b8b8 = window["innerWidth"] / 0x2;
    (_0x2aa61d = Math["max"](0x50, _0x19b8b8 / 0x7)), (_0x2aa61d = Math["min"](0x64, _0x2aa61d));
    var _0x5e9b36 = 0x7;
    _0x4857c8 && !_0x2f65e0 && (_0x5e9b36 = 0x4);
    var _0x13371e = _0x2aa61d * _0x385a2a,
      _0x58551c = 0xa,
      _0xd64dae = _0x13371e + 0x14,
      _0x315b67 = Math["max"](0x0, _0x698ea1["length"]);
    if (_0x698ea1["length"] > _0x5e9b36 + 0x1) _0x315b67 = Math["min"](_0x5e9b36, _0x315b67);
    var _0x392736 = _0x315b67 * (_0x58551c + _0x13371e) + (_0xd64dae - _0x13371e),
      _0x37b220 = _0x645c5 / 0x2 - _0x392736 / 0x2,
      _0xfa48a9 = _0x5cc850,
      _0x3deb1b = _0x13371e * 1.15,
      _0x4468a4 = _0x645c5 / 0x2;
    (_0x392736 = _0x315b67 * _0x3deb1b), (_0x37b220 = _0x4468a4 - _0x392736 / 0x2 + _0x3deb1b / 0x2);
    var _0x32e3a9 = _0x698ea1["length"],
      _0x11ee9b = 0x0;
    for (var _0x498a1b = 0x0; _0x498a1b < _0x32e3a9; _0x498a1b++) {
      var _0x62b93d = _0x698ea1[_0x498a1b];
      if (_0x498a1b > 0x0 && _0x32e3a9 > _0x5e9b36 + 0x1) {
        if (_0x498a1b % _0x5e9b36 == 0x0) {
          _0xbb459d++, (_0x11ee9b = 0x0), (_0xfa48a9 += _0x3deb1b * 1.15);
          var _0x1444d1 = _0x32e3a9 - _0x498a1b;
          if (_0x1444d1 < _0x5e9b36) _0x315b67 = _0x1444d1;
          else _0x315b67 = _0x5e9b36;
          (_0x392736 = _0x315b67 * _0x3deb1b), (_0x37b220 = _0x645c5 / 0x2 - _0x392736 / 0x2 + _0x3deb1b / 0x2);
        }
      }
      if (_0x42244e && _0x498a1b == 0x0) _0x62b93d["buttonScaleF"] = 1.2;
      else _0x62b93d["buttonScaleF"] = 0x1;
      (_0x62b93d["w"] = _0x13371e),
        (_0x62b93d["h"] = _0x13371e),
        (_0x62b93d["x"] = _0x37b220),
        (_0x62b93d["y"] = _0xfa48a9),
        (_0x37b220 += (_0x3deb1b / 0x2) * _0x62b93d["buttonScaleF"] + _0x3deb1b / 0x2);
      if (_0xbb459d < _0x4b2819["length"]) _0x62b93d["setHotKey"](_0x4b2819[_0xbb459d - 0x1][_0x11ee9b]["toUpperCase"]());
      _0x11ee9b++;
    }
    _0x587de3["globalAlpha"] = _0xaf959c;
    for (var _0x498a1b = 0x0; _0x498a1b < _0x698ea1["length"]; _0x498a1b++) {
      var _0x62b93d = _0x698ea1[_0x498a1b];
      (_0x62b93d["imgSizeF"] = _0x39e5c4), _0x62b93d["draw"]();
    }
    return _0xfa48a9;
  },
  _0x42275d = function (_0x2d958c) {
    if (_0x2d958c["isBought"] || !_0x16b34f) {
      (newMsg = new _0x5906b0(0x2)), newMsg["writeUInt8"](0x18);
      const _0x202da1 = _0x2d958c["hasOwnProperty"]("choiceIndex") ? _0x2d958c["choiceIndex"] : _0x5dd63b["indexOf"](_0x2d958c);
      newMsg["writeUInt8"](_0x202da1), _0xb4d17c(newMsg), _0x5d84a7 && (_0x462c3e = ![]), _0x279f22();
    } else {
      var _0x5626d8 = _0x51b124["shop"]["allItems"]["" + _0x2d958c["itemName"]];
      if (_0x5626d8) {
        (_0x5626d8["itemIndex"] = _0x2d958c["itemIndex"]),
          (_0x51b124["upgradeMenu_selectedItem"] = _0x5626d8),
          (_0x51b124["upgradeMenu_callback"] = function () {
            _0x51b124["buyConfirmationOverlay"](_0x51b124["upgradeMenu_selectedItem"]);
          });
        if (!_0x456cda) _0x51b124["actionBtn"] = "login";
        openshop();
      }
    }
  };
_0x176ce1["prototype"] = {
  x: 0x0,
  y: 0x0,
  w: 0x0,
  h: 0x0,
  visible: !![],
  buttonTXT: null,
  pressed: ![],
  pressedTouchID: -0x1,
  touchEnabled: !![],
  testPosHitsButton: function (_0x31f06a, _0x1dcc3d) {
    if (_0x31f06a < this["x"] - this["w"] / 0x2 || _0x31f06a > this["x"] + this["w"] / 0x2) return ![];
    if (_0x1dcc3d < this["y"] - this["w"] / 0x2 || _0x1dcc3d > this["y"] + this["w"] / 0x2) return ![];
    else return !![];
  },
  setPosAndSize: function (_0x55acf5, _0x2d52cd, _0x1407a6, _0xa13011, _0x36aafa, _0x5dcee2) {
    (this["w"] = _0x1407a6),
      (this["h"] = _0xa13011),
      (this["x"] = _0x55acf5 + _0x1407a6 * (0.5 - _0x36aafa)),
      (this["y"] = _0x2d52cd + _0xa13011 * (0.5 - _0x5dcee2));
  },
  onButtonTouchStart: function () {},
  onButtonTouchEnd: function () {
    console["log"]("button touch ended!");
  },
};

function _0x176ce1(_0x3637de) {
  (this["buttonTXT"] = new _0x413af8(0xa, "white")),
    (this["buttonTXT"]["renderScale"] = 1.5),
    this["buttonTXT"]["setText"](_0x3637de),
    (this["draw"] = function () {
      if (!this["visible"]) return;
      _0x587de3["save"](),
        (_0x587de3["globalAlpha"] = 0.2),
        (_0x587de3["fillStyle"] = this["pressed"] ? "white" : "#000000"),
        _0x587de3["fillRect"](this["x"] - this["w"] / 0x2, this["y"] - this["h"] / 0x2, this["w"], this["h"]),
        (_0x587de3["globalAlpha"] = 0.2),
        this["buttonTXT"]["setFontSize"](0x19 * _0x385a2a),
        (this["buttonTXT"]["x"] = this["x"]),
        (this["buttonTXT"]["y"] = this["y"]),
        this["buttonTXT"]["draw"](),
        _0x587de3["restore"]();
    });
}
window["TouchButton"] = _0x176ce1;
var _0x396b19 = function (_0x140ec6, _0x535446) {
  (this["abilityInput"] = _0x535446),
    (this["initialAbilityInfo"] = _0x140ec6),
    (this["isMiniRechargeBut"] = ![]),
    (this["abil_Type"] = 0x0),
    (this["abil_possible"] = this["abil_usable"] = this["abil_recharging"] = this["abil_active"] = ![]),
    ((this["abil_rechargeEndT"] = 0x0), (this["abil_rechargeTotalT"] = 0x0)),
    ((this["abil_rechargeBarA"] = 0x0), (this["abil_avilableA"] = 0x0)),
    (this["paddingX"] = 0x28),
    (this["paddingY"] = 0xa),
    (this["drawKeyCircle"] = function (_0x20b586, _0x21c02d) {
      _0x587de3["save"](), _0x587de3["beginPath"]();
      const _0x683052 = this["w"] / 0x7;
      _0x587de3["arc"](this["w"] / 0x2 - _0x683052 + this["paddingX"], this["h"] / 0x2 - _0x683052, _0x683052, 0x0, 0x2 * Math["PI"], ![]),
        (_0x587de3["fillStyle"] = "#C0FDCF"),
        _0x587de3["fill"](),
        (_0x587de3["lineWidth"] = 0x4),
        (_0x587de3["strokeStyle"] = "#8AF5AF"),
        _0x587de3["stroke"](),
        _0x587de3["closePath"]();
      const _0x58eae1 = 0x18;
      (_0x587de3["font"] = _0x58eae1 + "px Arial"),
        (_0x587de3["fillStyle"] = "#008416"),
        _0x587de3["fillText"](this["abilityInput"], _0x20b586 - 0x2 + this["paddingX"], _0x21c02d + _0x683052 - 0x2),
        _0x587de3["restore"]();
    }),
    (this["drawAbilityImage"] = function (_0x2a5f46, _0x991433) {
      _0x2a5f46 = _0x2a5f46 || this["initialAbilityInfo"];
      var _0x541377 = _0x2fa637[_0x204989],
        _0x77053d = "",
        _0x5f55ba = _0x2a5f46["abilImg"];
      if (_0x541377 && this["abil_Type"] == _0x2a81d2) _0x5f55ba = "assets/abilities/Dive.svg";
      else _0x5f55ba = "assets/" + _0x5f55ba;
      var _0x41c9ab = _0x2d8f34(_0x5f55ba);
      if (_0x41c9ab) {
        var _0x3c4706 = this["w"] * 0.3,
          _0x43b0ee = _0x3c4706,
          _0xdc1c3c = _0x3c4706;
        _0x587de3["globalAlpha"] = _0x991433 * this["abil_avilableA"];
        if (_0x41c9ab["height"] == 0x258) _0xdc1c3c = _0x3c4706;
        _0x587de3["drawImage"](_0x41c9ab, -_0x43b0ee + this["paddingX"], -_0xdc1c3c, 0x2 * _0x43b0ee, 0x2 * _0xdc1c3c),
          this["abilityInput"] && !_0x4857c8 && this["drawKeyCircle"](_0x43b0ee, _0xdc1c3c);
      }
    }),
    (this["getDiveImage"] = function (_0x13209a) {
      var _0x368c2a = "img/ability_dive.png";
      if (_0x13209a && this["abil_Type"] == _0x2a81d2) {
        if (_0x13209a["flag_inLava"] && !_0x13209a["flag_inWater"]) _0x368c2a = "img/ability_dive_lava.png";
        else _0x13209a["flag_eff_isInMud"] && !_0x13209a["flag_inWater"] && (_0x368c2a = "img/ability_diveMud.png");
      }
      return _0x368c2a;
    }),
    (this["draw"] = function () {
      if (!this["visible"]) return;
      (this["abil_rechargeBarA"] += ((this["abil_recharging"] ? 0x1 : 0x0) - this["abil_rechargeBarA"]) * 0.1),
        (this["abil_avilableA"] += ((this["abil_usable"] || this["abil_active"] ? 0x1 : 0.2) - this["abil_avilableA"]) * 0.1);
      this["isMiniRechargeBut"] && (this["h"] = this["w"]);
      if (this["abil_possible"]) {
        var _0x5d037e = 0x1;
        _0x587de3["save"]();
        if (this["isMiniRechargeBut"])
          (this["h"] = this["w"]), _0x587de3["translate"](this["x"], this["y"] + this["h"] * 0.36), _0x587de3["scale"](0.65, 0.65);
        else _0x587de3["translate"](this["x"], this["y"]);
        var _0x1086bb = 0.2 * this["abil_avilableA"],
          _0x5e3c7f = this["pressed"] || _0x446d69 ? "#CECECE" : "#000000";
        this["abil_active"] && ((_0x5e3c7f = _0xab8999), (_0x1086bb = 0.8));
        (_0x587de3["fillStyle"] = _0x5e3c7f),
          (_0x587de3["globalAlpha"] = _0x5d037e * _0x1086bb),
          _0x587de3["beginPath"](),
          _0x587de3["arc"](this["paddingX"], this["paddingY"], this["w"] / 0x2, 0x0, 0x2 * Math["PI"], ![]),
          (_0x587de3["fillStyle"] = "#C0FDCF"),
          _0x587de3["fill"](),
          (_0x587de3["lineWidth"] = 0x4),
          (_0x587de3["strokeStyle"] = "#8AF5AF"),
          _0x587de3["stroke"](),
          _0x587de3["closePath"]();
        var _0x467839 = null,
          _0xc86b87 = _0x2fa637[_0x204989];
        !_0xc86b87 &&
          ((_0xc86b87 = _0x17bf26["createGameObjOfOType"](_0x3fb3b2, _0x4c4138)),
          (_0xc86b87["animalType"] = _0x4c4138),
          (_0xc86b87["animalSpecies"] = _0x2de4bf),
          (_0xc86b87["animalSubSpecies"] = _0x377b66));
        if (this["initialAbilityInfo"]) _0x467839 = this["initialAbilityInfo"];
        else {
          if (_0xc86b87 && this["abil_Type"] != _0x2a81d2) _0x467839 = _0xc86b87["getAbilityInfo"](this["abil_Type"]);
          else _0x467839 = _0x1cbaa4(this["abil_Type"]);
        }
        this["drawAbilityImage"](_0x467839, _0x5d037e);
        var _0x2fd4bd = Math["max"](0x0, this["abil_rechargeEndT"] - _0x168a54);
        this["abil_rechargeBarA"] += ((this["abil_recharging"] ? 0x1 : 0x0) - this["abil_rechargeBarA"]) * 0.1;
        if (this["abil_rechargeBarA"] > 0.01) {
          (_0x587de3["globalAlpha"] = _0x5d037e * this["abil_rechargeBarA"] * 0.35), (_0x587de3["fillStyle"] = "#000000");
          var _0x8113c4 = 0x0,
            _0x215fa8 = 0x0,
            _0x14b3ba = this["w"] * 0.8,
            _0x345462 = this["h"] * 0.5;
          _0x587de3["fillRect"](_0x8113c4 - _0x14b3ba / 0x2 + this["paddingX"], _0x215fa8 - _0x345462 / 0x2, _0x14b3ba, _0x345462),
            (_0x587de3["globalAlpha"] = _0x5d037e * this["abil_rechargeBarA"] * 0x1),
            (_0x587de3["fillStyle"] = "#F3C553"),
            _0x587de3["fillRect"](
              _0x8113c4 - _0x14b3ba / 0x2 + this["paddingX"],
              _0x215fa8 - _0x345462 / 0x2,
              _0x14b3ba * (_0x2fd4bd / this["abil_rechargeTotalT"]),
              _0x345462
            );
        }
        _0x587de3["restore"]();
      }
    });
};
(_0x396b19["prototype"] = Object["create"](_0x176ce1["prototype"])), (window["AbilityButton"] = _0x396b19);
const _0x161c04 = 0x1,
  _0x9292dd = 0x2,
  _0x5d3d08 = 0x3,
  _0x2fb699 = 0x4,
  _0x1cabf8 = 0x5,
  _0x1d9e75 = 0x6,
  _0x554117 = 0x7,
  _0x5d7491 = 0x8,
  _0x5be932 = 0x9,
  _0x2649fd = 0xa,
  _0x185a60 = 0xb,
  _0x3077d4 = 0xc,
  _0x3c552b = 0xd,
  _0x3a7e64 = 0xe,
  _0x1d5ba4 = 0xf,
  _0x17d83a = 0x10,
  _0x2bc026 = 0x11,
  _0x3980bf = 0x12,
  _0x57d8b7 = 0x13,
  _0x16ca2c = 0x14,
  _0x4b571e = 0x15,
  _0x81b077 = 0x16,
  _0x588b24 = 0x17,
  _0x3efac2 = 0x18,
  _0x4265fb = 0x19,
  _0x37b6a2 = 0x1a,
  _0x56239e = 0x1b,
  _0x66ecca = 0x1c,
  _0x4bf949 = 0x1d,
  _0x4e4a40 = 0x1e,
  _0x240a4f = 0xff,
  _0x309bd3 = 0x33,
  _0x46ef32 = 0x34,
  _0x3f3dc7 = 0x35,
  _0x3e1c25 = 0x36,
  _0x5c19bb = 0x37,
  _0x24a4da = 0x38,
  _0x44bde4 = 0x3a,
  _0x3a611e = 0x3b,
  _0x290603 = 0x3c,
  _0x382703 = 0x3d,
  _0x2e005c = 0x3e,
  _0x121f50 = 0x3f,
  _0x474a3d = 0x40,
  _0xea07f9 = 0x41,
  _0x15e8ce = 0x42,
  _0x2f49e9 = 0x43,
  _0x4ea0d1 = 0x44,
  _0x3f99b5 = 0x45,
  _0x23848b = 0x46,
  _0x4e7760 = 0x47,
  _0x45d71f = 0x48,
  _0x2413b8 = 0x51,
  _0x9f9a7c = 0x52,
  _0x57b756 = 0x53,
  _0x2172bc = 0x54,
  _0x25d656 = 0x64,
  _0x29193c = 0x65,
  _0x30cf7f = 0x66,
  _0x296afd = 0x67,
  _0x4a1c2d = 0x68,
  _0xf715b6 = 0x69,
  _0x591f52 = 0x6a,
  _0x38fc1c = 0x6b,
  _0x534aa9 = 0x6c,
  _0x307324 = 0x6d,
  _0x1b76ca = 0x6e,
  _0xa8f63a = 0x6f,
  _0x18665b = 0x70,
  _0x2ad643 = 0x71;
class _0xda01d6 {
  constructor() {
    this["urls"] = [
      "./assets/s/2/img/upgradeshell/egg_crack1.png",
      "./assets/s/2/img/upgradeshell/egg_crack2.png",
      "./assets/s/2/img/upgradeshell/egg_crack3.png",
      "./assets/s/2/img/upgradeshell/egg_crack4.png",
      "./assets/s/2/img/upgradeshell/egg_crack5.png",
      "./assets/s/2/img/upgradeshell/egg_crack6.png",
      "./assets/s/2/img/upgradeshell/egg_crack7.png",
      "./assets/s/2/img/upgradeshell/egg_crack8.png",
      "./assets/s/2/img/upgradeshell/egg_crack9.png",
      "./assets/s/2/img/upgradeshell/egg_crack10.png",
      "./assets/s/2/img/upgradeshell/outline0.png",
      "./assets/s/2/img/upgradeshell/outline1.png",
      "./assets/s/2/img/upgradeshell/outline2.png",
      "./assets/s/2/img/upgradeshell/outline3.png",
      "./assets/s/2/img/upgradeshell/outline4.png",
      "./assets/s/2/img/upgradeshell/outline5.png",
      "./assets/s/2/gameobj/147/4_0.png",
      "./assets/s/2/gameobj/147/4_1.png",
      "./assets/s/2/gameobj/147/4_2.png",
      "./assets/s/2/gameobj/9/4.png",
      "./assets/s/2/gameobj/46/4.png",
      "./assets/s/2/gameobj/89/89.png",
      "./assets/s/2/gameobj/90/90.png",
      "./assets/s/2/gameobj/91/91.png",
      "./assets/s/2/gameobj/75/75_1.png",
      "./assets/s/2/gameobj/96/96.png",
      "./assets/s/2/gameobj/97/97.png",
      "./assets/s/2/gameobj/21/4.png",
      "./assets/s/2/gameobj/3/4.png",
      "./assets/s/2/gameobj/8/4.png",
      "./assets/s/2/img/coin/coin.png",
      "./assets/s/2/gameobj/93/4.png",
      "./assets/s/2/gameobj/42/42_4.png",
      "./assets/s/2/gameobj/42/0.png",
      "./assets/s/2/gameobj/82/82.png",
      "./assets/s/2/img/cave/4/cave_bottom.png",
      "./assets/s/2/img/cave/4/cave_top.png",
      "./assets/s/2/gameobj/4/4_4.png",
      "./assets/s/2/gameobj/151/151_1_1.png",
      "./assets/s/2/gameobj/151/151_1_0.png",
      "./assets/s/2/gameobj/51/51.png",
      "./assets/s/2/gameobj/21/e.png",
      "./assets/s/2/img/coin/coin_e.png",
      "./assets/s/2/gameobj/147/0_1.png",
      "./assets/s/2/gameobj/147/0_0.png",
      "./assets/s/2/gameobj/147/0_2.png",
      "./assets/s/2/gameobj/147/0_3.png",
      "./assets/s/2/gameobj/147/5_0.png",
      "./assets/s/2/gameobj/74/74.png",
      "./assets/s/2/img/cave/0/cave_bottom.png",
      "./assets/s/2/img/cave/0/cave_top.png",
      "./assets/s/2/gameobj/46/0.png",
      "./assets/s/2/gameobj/24/24.png",
      "./assets/s/2/gameobj/22/22.png",
      "./assets/s/2/gameobj/25/25.png",
      "./assets/s/2/gameobj/75/75_0.png",
      "./assets/s/2/skins/land/mouse/0/mouse.png",
      "./assets/s/2/gameobj/101/default/trunk.png",
      "./assets/s/2/gameobj/101/default/canopy5.png",
      "./assets/s/2/gameobj/9/0.png",
      "./assets/s/2/gameobj/20/e.png",
      "./assets/s/2/gameobj/4/4_0.png",
      "./assets/s/2/gameobj/6/0.png",
      "./assets/s/2/gameobj/31/31.png",
      "./assets/s/2/gameobj/27/0.png",
      "./assets/s/2/gameobj/46/5.png",
      "./assets/s/2/gameobj/101/default/canopy0.png",
      "./assets/s/2/gameobj/40/0_0.png",
      "./assets/s/2/gameobj/40/0_2.png",
      "./assets/s/2/gameobj/40/0_1.png",
      "./assets/s/2/gameobj/40/0_3.png",
      "./assets/s/2/gameobj/40/currentUp.png",
      "./assets/s/2/gameobj/93/0.png",
      "./assets/s/2/skins/frog/frog.png",
      "./assets/s/2/gameobj/97/e.png",
      "assets/abilities/Dive.svg",
      "./assets/s/2/gameobj/90/e.png",
      "./assets/s/2/gameobj/40/currentRight.png",
      "./assets/s/2/gameobj/101/banana/trunk.png",
      "./assets/s/2/gameobj/101/banana/canopy.png",
      "./assets/s/2/gameobj/151/151_0_1.png",
      "./assets/s/2/gameobj/151/151_0_0.png",
      "./assets/s/2/gameobj/8/0.png",
      "./assets/s/2/gameobj/3/0.png",
      "./assets/s/2/gameobj/95/95.png",
      "./assets/s/2/gameobj/75/75_2.png",
      "./assets/s/2/gameobj/29/29.png",
      "./assets/s/2/gameobj/36/36.png",
      "./assets/s/2/gameobj/148/148.png",
      "./assets/s/2/gameobj/37/37.png",
      "./assets/s/2/gameobj/3/1.png",
      "./assets/s/2/gameobj/39/39.png",
      "./assets/s/2/gameobj/38/38.png",
      "./assets/s/2/gameobj/8/1.png",
      "./assets/s/2/gameobj/149/149_2.png",
      "./assets/s/2/gameobj/26/e.png",
      "./assets/s/2/gameobj/149/149_1.png",
      "./assets/s/2/gameobj/149/149_0.png",
      "./assets/s/2/gameobj/35/35.png",
      "./assets/s/2/gameobj/101/coco/trunk.png",
      "./assets/s/2/gameobj/101/coco/canopy.png",
      "./assets/s/2/gameobj/140/1.png",
      "./assets/s/2/gameobj/140/cave_bottom_1.png",
      "./assets/s/2/gameobj/140/cave_top_1.png",
      "./assets/s/2/gameobj/46/1.png",
      "./assets/s/2/img/upgradeshell/upgradeshell0.png",
      "./assets/s/2/gameobj/147/2_1.png",
      "./assets/s/2/gameobj/147/2_0.png",
      "./assets/s/2/gameobj/147/2_2.png",
      "./assets/s/2/gameobj/147/2_3.png",
      "./assets/s/2/skins/duck/1/duck.png",
      "./assets/s/2/skins/duck/2/duck.png",
      "./assets/s/2/gameobj/21/e_2.png",
      "./assets/s/2/gameobj/48/48.png",
      "./assets/s/2/gameobj/25/25_2.png",
      "./assets/s/2/img/snowball.png",
      "./assets/s/2/gameobj/60/60.png",
      "./assets/s/2/gameobj/27/2.png",
      "./assets/s/2/gameobj/101/fir/trunk.png",
      "./assets/s/2/gameobj/101/fir/canopy.png",
      "assets/abilities/Dig.svg",
      "./assets/s/2/skins/duck/duckling.png",
      "./assets/s/2/gameobj/32/32.png",
      "./assets/s/2/gameobj/24/24_2.png",
      "./assets/s/2/gameobj/46/2.png",
      "./assets/s/2/gameobj/4/4_2.png",
      "./assets/s/2/gameobj/8/2.png",
      "./assets/s/2/gameobj/3/2.png",
      "./assets/s/2/gameobj/9/2.png",
      "./assets/s/2/gameobj/5/2.png",
      "./assets/s/2/gameobj/23/23.png",
      "./assets/s/2/gameobj/42/42_2.png",
      "./assets/s/2/skins/duck/0/duck.png",
      "./assets/s/2/gameobj/11/11.png",
      "./assets/s/2/gameobj/22/22_2.png",
      "./assets/s/2/gameobj/63/63_0.png",
      "./assets/s/2/gameobj/6/2.png",
      "./assets/s/2/gameobj/63/63_1.png",
      "./assets/s/2/gameobj/138/138.png",
      "./assets/s/2/gameobj/40/currentDown.png",
      "./assets/s/2/skins/frog/frog2.png",
      "./assets/s/2/./skins/frog/frogLegs.png",
      "./assets/s/2/gameobj/70/0/1.png",
      "./assets/s/2/gameobj/70/0/2.png",
      "./assets/s/2/gameobj/70/0/3.png",
      "./assets/s/2/gameobj/70/0/4.png",
      "./assets/s/2/gameobj/70/0/0.png",
      "./assets/s/2/img/upgradeshell/upgradeshell1.png",
      "./assets/s/2/img/upgradeshell/shellpart1.png",
      "./assets/s/2/img/upgradeshell/shellpart2.png",
      "./assets/s/2/img/upgradeshell/shellpart0.png",
      "./assets/s/2/gameobj/63/e_0.png",
      "./assets/s/2/gameobj/63/e_1.png",
      "./assets/s/2/gameobj/31/e.png",
      "./assets/s/2/gameobj/68/68.png",
      "./assets/s/2/gameobj/49/e.png",
      "./assets/s/2/img/dirt/dirt_sides.png",
      "./assets/s/2/img/dirt/dirt_top.png",
      "./assets/s/2/img/dirt/dirt_below.png",
      "./assets/s/2/gameobj/40/currentLeft.png",
      "./assets/s/2/gameobj/30/30.png",
      "./assets/s/2/gameobj/42/42.png",
      "./assets/s/2/gameobj/42/1.png",
      "./assets/s/2/gameobj/50/50.png",
      "./assets/s/2/gameobj/18/0/0.png",
      "./assets/s/2/gameobj/18/0/1.png",
      "./assets/s/2/gameobj/18/0/2.png",
      "./assets/s/2/gameobj/18/0/3.png",
      "./assets/s/2/gameobj/18/0/4.png",
      "./assets/s/2/skins//honeybee/honeybee.png",
      "./assets/s/2/skins/honeybee/honeybee_wing2.png",
      "./assets/s/2/skins/honeybee/honeybee_wing1.png",
      "./assets/s/2/img/desert/flytrap/base.png",
      "./assets/s/2/img/desert/flytrap/mouth/stem.png",
      "./assets/s/2/img/desert/flytrap/mouth/bottom.png",
      "./assets/s/2/img/desert/flytrap/mouth/top.png",
      "assets/abilities/Roll-RollSnowball.svg",
      "./assets/s/2/gameobj/93/e.png",
      "./assets/s/2/gameobj/89/e.png",
      "./assets/s/2/img/desert/flytrap/mouth/closed.png",
      "./assets/s/2/gameobj/6/4.png",
      "./assets/s/2/gameobj/101/default/trunk4_0.png",
      "./assets/s/2/gameobj/101/default/canopy4_0.png",
      "./assets/s/2/gameobj/22/e.png",
      "./assets/s/2/gameobj/24/e.png",
      "./assets/s/2/gameobj/5/4.png",
      "./assets/s/2/gameobj/101/default/trunk4_1.png",
      "./assets/s/2/gameobj/101/default/canopy4_1.png",
      "./assets/s/2/gameobj/13/0.png",
      "./assets/s/2/gameobj/13/1.png",
      "./assets/s/2/gameobj/13/2.png",
      "./assets/s/2/gameobj/13/3.png",
      "./assets/s/2/gameobj/13/4.png",
      "./assets/s/2/gameobj/27/1.png",
      "./assets/s/2/gameobj/36/e.png",
      "./assets/s/2/gameobj/35/e.png",
      "./assets/s/2/gameobj/37/e.png",
      "./assets/s/2/skins/arctic/lemming/0/lemming.png",
      "./assets/s/2/gameobj/49/49.png",
      "./assets/s/2/skins//honeybee/honeybee1.png",
      "./assets/s/2/gameobj/69/e.png",
      "./assets/s/2/skins/dive/oceandive2.png",
      "./assets/s/2/skins/dive/oceandive3.png",
      "./assets/s/2/skins/dive/oceandive4.png",
      "./assets/s/2/skins/dive/oceandive5.png",
      "./assets/s/2/skins/dive/oceandive7.png",
      "./assets/s/2/skins/dive/oceandive8.png",
    ];
  }
  ["preloadImage"](_0x44e75d) {
    _0x2d8f34(_0x44e75d);
  }
  ["preloadImages"]() {
    this["urls"]["forEach"]((_0x269d71) => this["preloadImage"](_0x269d71));
  }
}
const _0x125f2f = new _0xda01d6();

function _0x4080f0(_0x5956bd) {
  _0x5956bd = _0x5956bd["split"]("+")["join"](" ");
  var _0x5e453e = {},
    _0x508824,
    _0x4c7917 = /[?&]?([^=]+)=([^&]*)/g;
  while ((_0x508824 = _0x4c7917["exec"](_0x5956bd))) {
    _0x5e453e[decodeURIComponent(_0x508824[0x1])] = decodeURIComponent(_0x508824[0x2]);
  }
  return _0x5e453e;
}
var _0x23b0ff = _0x4080f0(document["location"]["search"]),
  _0x12ece7 = _0x23b0ff["videoson"] > 0x0,
  _0x23b0ff = _0x4080f0(document["location"]["search"]),
  _0xe2e29 = _0x23b0ff["mobileios"] > 0x0,
  _0x15798e = _0x23b0ff["mobileAndroid"] > 0x0,
  _0x4857c8 = _0xe2e29 || _0x15798e,
  _0x277a27 = {
    isAndroid: function () {
      return navigator["userAgent"]["match"](/Android/i);
    },
    isBlackBerry: function () {
      return navigator["userAgent"]["match"](/BlackBerry/i);
    },
    isIOS: function () {
      return navigator["userAgent"]["match"](/iPhone|iPad|iPod/i);
    },
    isOpera: function () {
      return navigator["userAgent"]["match"](/Opera Mini/i);
    },
    isWindows: function () {
      return navigator["userAgent"]["match"](/IEMobile/i) || navigator["userAgent"]["match"](/WPDesktop/i);
    },
    isAny: function () {
      return _0x277a27["isAndroid"]() || _0x277a27["isBlackBerry"]() || _0x277a27["isIOS"]() || _0x277a27["isOpera"]() || _0x277a27["isWindows"]();
    },
  },
  _0x2a93ac = _0x277a27["isAny"]();
if (typeof window !== "undefined" && window !== null)
  try {
    (window["isMobileAppIOS"] = window["isMobileApp"] || _0xe2e29),
      (window["isMobileAppAndroid"] = window["isMobileAppAndroid"] || _0x15798e),
      (window["isMobileApp"] = _0x4857c8 || window["isMobileApp"]),
      (window["isMobileDevice"] = window["isMobileDevice"] || _0x2a93ac);
  } catch (_0x34e0f4) {}
var _0x5a206b = 0.175,
  _0x33bd93 = "#3FBA54",
  _0x4a6b40 = "#3FBA54",
  _0x2e4d36 = "#f7f7f7",
  _0x53ed3f = "#09992F",
  _0x288c04 = "#007ec0",
  _0xfa58fe = "white",
  _0x2203a5 = "#8a7908",
  _0x45e95c = "#1aad41",
  _0xebfd7a = "#bf4f0b",
  _0x236fe1 = "#06912b",
  _0x429d8b = "#09992F",
  _0x5c1655 = "#8CCEF4",
  _0x13663c = "#4E66E4",
  _0x9d1ce2 = "#ff6000",
  _0x2634c2 = "#4854a2",
  _0x1b83c0 = _0x2634c2,
  _0x3febc7 = "#bfaf43",
  _0x156d46 = "#d6c348",
  _0x5f5cfd = "#c8b745",
  _0x14b9e3 = "#F35F53",
  _0x1ea401 = "#CF6259",
  _0x20d9b6 = "#FF911E",
  _0x190bc6 = "#C67019",
  _0x5a741a = "#25b645",
  _0x2a1832 = "#604729",
  _0xe348ed = "#8A681B",
  _0x1fdd8a = "#EF3C31",
  _0xab8999 = "#4AE05E",
  _0x260cd7 = "#8C9688",
  _0x25193e = "#878053",
  _0xa3f8d9 = "#328ca2",
  _0xea26d5 = "rgba(50,140,162,0.5)",
  _0x53c27f = "#ff884c",
  _0x36231f = "#007fa9",
  _0x377118 = "#b0a13b",
  _0x5d4501 = !![],
  _0x36622f = !![],
  _0x2675a6 = ![],
  _0x351c44 = ![],
  _0x13ae42 = !![],
  _0x2dd961 = !![],
  _0x434eda = 0x1,
  _0x540d00 = ![],
  _0x4b6a6a = null;
let _0x2f28f3 = ![],
  _0x562f18 = ![],
  _0x18541a = ![],
  _0x23824f = _0x20f85f,
  _0x28d3c4 = 0x190,
  _0x104094 = 0x0;
var _0x22d2f5 = ![],
  _0xc5072a = 0x0,
  _0x170c51 = "",
  _0x5cd19e = 0x0,
  _0x169ff8 = {},
  _0x3d957e = 0x0,
  _0x1a5a6e = 0x0,
  _0x28c426 = 0x0,
  _0x460bf4 = function (_0x5b729e) {
    switch (_0x5b729e) {
      case _0x1940a7:
        return "ocean";
      case _0x5dcee3:
        return "arctic";
      case _0x75a7e2:
        return "desert";
      case _0x4e58f5:
        return "volcano";
      case _0x50fa53:
        return "forest";
      case _0xf851ac:
        return "land";
      default:
        return "land";
    }
  },
  _0x7a849 = function (_0x38cb4e) {
    switch (_0x38cb4e) {
      case _0x1940a7:
        return _0x288c04;
      case _0x5dcee3:
        return _0xfa58fe;
      case _0x75a7e2:
        return _0x2203a5;
      case _0x4e58f5:
        return _0xebfd7a;
      case _0x50fa53:
        return _0x236fe1;
      case _0xf851ac:
      default:
        return _0x53ed3f;
    }
  },
  _0x22080a = [],
  _0xf851ac = 0x0,
  _0x1940a7 = 0x1,
  _0x5dcee3 = 0x2,
  _0x4e58f5 = 0x3,
  _0x75a7e2 = 0x4,
  _0x50fa53 = 0x5,
  _0x168a54 = +new Date(),
  _0x397dba = +new Date(),
  _0x3ddcad = 0x0,
  _0x34fedb = ![],
  _0x25b741 = 0x0,
  _0x20d55b = null,
  _0x4ec648 = ![],
  _0x23e13c = ![],
  _0x27304c = ![],
  _0x20b7a7 = ![],
  _0x40e4b5 = null,
  _0x513ff3 = 0x0,
  _0x3e7d8d = 0x0,
  _0x381d6d = 0x0,
  _0x4de4c8 = 0x0,
  _0x2dec0a = 0x0,
  _0x4930c7 = 0x0,
  _0x2f04e7 = [],
  _0x27809f = ![],
  _0x3c0693 = 0x0,
  _0x3c381c = null,
  _0x32740c = ![],
  _0x10874d = 0x0,
  _0x344a8b = ![],
  _0x5093c3 = ![],
  _0x4621e5 = 0x0,
  _0x4dfc73 = ![],
  _0x29634e = ![],
  _0x2553b6 = document["getElementById"]("gCanvas"),
  _0x1878d2 = null,
  _0x4f607c = null,
  _0x4d2768 = 0x0,
  _0x5919a3 = 0x0,
  _0x43b61f = 0x0,
  _0x39cf60 = 0x0,
  _0x587de3 = null;
_0x2553b6 && ((_0x587de3 = _0x2553b6["getContext"]("2d")), (_0x587de3["shadowColor"] = "black"));
var _0x115ac6 = ![],
  _0x4454f9 = Math["min"](window["devicePixelRatio"], 0x2),
  _0x5d2635 = ("ontouchstart" in window || navigator["maxTouchPoints"]) == !![],
  _0x4946e3 = {},
  _0x1b166c = function (_0x509f96) {
    if (!_0x4946e3["hasOwnProperty"](_0x509f96) && !_0xd404d3) {
      var _0x4efeab = new Audio(_0x509f96);
      (_0x4946e3[_0x509f96] = _0x4efeab), (_0x4efeab["volume"] = 0.7), (_0x4efeab["muted"] = _0xd404d3);
    }
    return _0x4946e3[_0x509f96];
  },
  _0x2863f1 = null,
  _0x523549 = "",
  _0x3bf754 = "audio/music_game.mp3",
  _0x3afa7b = function (_0x3ffbb9) {
    _0x2863f1 && (_0x2863f1["pause"](), (_0x2863f1["currentTime"] = 0x0));
    _0x523549 = _0x3ffbb9;
    if (!_0xd404d3) {
      _0x2863f1 = _0x1b166c(_0x3ffbb9, !![]);
      try {
        _0x2863f1["play"]();
      } catch (_0x302044) {}
    }
  },
  _0x84eb8b = !![];
$bus["on"]($bus["EVENTS"]["UI_SET_SOUND_FLAG"], (_0x47dd2a) => {
  (_0xd404d3 = !_0x47dd2a), (_0x3d2be2["useSound"] = _0x47dd2a);
});
var _0x9d73bb = ![],
  _0x39fa27 = (camzoom_n = 2.7),
  _0x39fa27 = 0x1,
  _0x36a239 = 0x0,
  _0x80b3e7 = 0x0,
  _0x9714ca = 0x0,
  _0x24a18f = 0x0,
  _0x3a0d4b = 0x0,
  _0x5ce546 = 0x0,
  _0x385a2a = 0x1,
  _0x1d981d = 0x0,
  _0x571bbe = 0x0,
  _0x2aeecf = 0x0,
  _0x108b44 = 0x0,
  _0x22623c = 0x0,
  _0x3b288a = 0x0,
  _0x11e0bc = ![],
  _0x446d69 = ![],
  _0x645c5 = 0x0,
  _0x24f0be = 0x0,
  _0x2c6299 = 0x0,
  _0x27ef2a = 0x0,
  _0x35a76d = 0x0,
  _0x8a6c20 = 0x1,
  _0x442f2f = 0x2,
  _0xc95c89 = 0x3,
  _0x225fdb = 0x4,
  _0x4406b7 = 0x5,
  _0x462ab4 = 0x6,
  _0x3a1189 = _0x35a76d,
  _0x4e591f = 0x0,
  _0x348e7a = {},
  _0x4e994b = async function (_0x3a79b8) {
    if (!_0x348e7a["hasOwnProperty"](_0x3a79b8)) {
      const _0x26fef3 = new Image();
      var _0x4f1eb2 = "?v=" + _0x14eb93 + (_0x2718a7 ? "." + _0x2305e7 : "");
      return (
        (_0x26fef3["src"] = _0x3a79b8 + _0x4f1eb2),
        new Promise((_0x12b4a4, _0x5cbdac) => {
          _0x26fef3["addEventListener"](
            "load",
            () => {
              return (_0x348e7a[_0x3a79b8] = _0x26fef3), _0x12b4a4(_0x26fef3);
            },
            {
              once: !![],
            }
          );
        })
      );
    }
    return _0x348e7a[_0x3a79b8];
  },
  _0x2d8f34 = function (_0x281c7b, _0x25b251) {
    if (!_0x348e7a["hasOwnProperty"](_0x281c7b)) {
      _0x348e7a[_0x281c7b] = new Image();
      var _0x4ce3cb = "?v=" + _0x14eb93 + (_0x2718a7 ? "." + _0x2305e7 : "");
      _0x348e7a[_0x281c7b]["src"] = _0x281c7b + _0x4ce3cb;
    }
    return 0x0 != _0x348e7a[_0x281c7b]["width"] && _0x348e7a[_0x281c7b]["complete"] ? _0x348e7a[_0x281c7b] : null;
  },
  _0x55aa30 = Array["apply"](null, new Array(0x32))["map"](Number["prototype"]["valueOf"], 0x0),
  _0x5c622f = Array["apply"](null, new Array(0x32))["map"](Number["prototype"]["valueOf"], 0x0),
  _0x416480 = Array["apply"](null, new Array(0x32))["map"](Number["prototype"]["valueOf"], 0x0),
  _0x2cf613 = Array["apply"](null, new Array(0x32))["map"](Number["prototype"]["valueOf"], 0x0),
  _0x462c3e = ![],
  _0x434d04 = [],
  _0x2fa637 = {},
  _0xcc7181 = [],
  _0x4a3129 = [],
  _0x476650 = ![],
  _0x157b98 = 0x0,
  _0x41cff3 = 0x1,
  _0x3bb4a5 = ![],
  _0x360a5e = 0x0,
  _0x242ffc = 0x1,
  _0x56568c = ![],
  _0x4b8b4c = +new Date(),
  _0x9f2d1d = ![],
  _0x417709 = ![],
  _0x203786 = ![],
  _0x470460 = ![],
  _0x1254c0 = ![],
  _0x157509 = ![],
  _0xd404d3 = ![],
  _0x48204e = ![],
  _0x57ae6d = 0x3,
  _0x3659ae = ![],
  _0x13272d = ![];
const _0x3d2be2 = {
  graphicsMode: _0x57ae6d,
  useSound: !_0xd404d3,
  noJoystick: _0x203786,
  leftHanded: ![],
  noAnimalImages: ![],
  noNames: _0x9f2d1d,
  noXpPopups: _0x1254c0,
  snowfall: _0x157509,
  noTextures: _0x3659ae,
  showGrid: _0x13272d,
};
if (window["localStorage"]) {
  const _0x1d7d03 = window["localStorage"]["getItem"]("options_graphicsLevel");
  (_0x3d2be2["graphicsMode"] = _0x1d7d03 !== undefined && _0x1d7d03 !== null && !isNaN(_0x1d7d03) ? parseInt(_0x1d7d03) : _0x57ae6d),
    (_0x3d2be2["noNames"] = window["localStorage"]["getItem"]("options_noNames") + 0x0 > 0x0),
    (_0x3d2be2["noAnimalImages"] = window["localStorage"]["getItem"]("options_noImages") + 0x0 > 0x0),
    (_0x3d2be2["noAnimalImages"] = window["localStorage"]["getItem"]("options_noImages") + 0x0 > 0x0),
    (_0x3d2be2["noJoystick"] = window["localStorage"]["getItem"]("options_noJoystick") + 0x0 > 0x0),
    (_0x3d2be2["leftHanded"] = window["localStorage"]["getItem"]("options_leftHanded") + 0x0 > 0x0),
    (_0x3d2be2["useSound"] = window["localStorage"]["getItem"]("options_muted") + 0x0 > 0x0),
    (_0x3d2be2["noXpPopups"] = window["localStorage"]["getItem"]("options_noXpPopup") + 0x0 > 0x0),
    (_0x3d2be2["snowfall"] = window["localStorage"]["getItem"]("options_snowfall") + 0x0 > 0x0),
    (_0x3d2be2["noTextures"] = window["localStorage"]["getItem"]("options_noTextures") === "1"),
    (_0x3d2be2["showGrid"] = window["localStorage"]["getItem"]("options_showGrid") === "1");
}
$bus["emit"]($bus["EVENTS"]["INITIALIZED_SETTINGS_PREFS"], {
  ..._0x3d2be2,
  isMobileApp: _0x4857c8,
});
let _0x51c2ce = 0x0;
const _0x14ef3d = {
  shouldUse(_0x5c9fda) {
    const _0x5816b8 = !!_0x5c9fda && _0x5c9fda["substring"](0x0, 0x3) === "UI_" && !_0xd404d3,
      _0x2805ac = _0x5c9fda === $bus["EVENTS"]["UI_UPDATED_PLAYERNAME"];
    if (_0x2805ac) return ![];
    return _0x5c9fda === $bus["EVENTS"]["UI_SET_SOUND_FLAG"] || (_0x5816b8 && Date["now"]() - _0x51c2ce > 0xfa);
  },
  onUse(_0x35d62c, _0x4bbdde) {
    console["log"]("event:", _0x35d62c, "payload:", _0x4bbdde);
    let _0x3b20b6 = 0.4;
    (_0x51c2ce = Date["now"]()),
      _0x35d62c === $bus["EVENTS"]["UI_SET_SOUND_FLAG"]
        ? ((_0x3b20b6 = _0x4bbdde ? 0x1 : 0.1), setTimeout(() => _0x2caa85(_0x3b20b6)))
        : _0x2caa85(_0x3b20b6);
  },
};
$bus["use"](_0x14ef3d);
var _0x345b4f = document["getElementById"]("button_mute");
_0x345b4f &&
  (_0x345b4f["onclick"] = function () {
    (_0xd404d3 = !_0xd404d3), onMuteButtonChange();
    try {
      window["localStorage"]["setItem"]("options_muted", _0xd404d3 ? 0x1 : 0x0);
    } catch (_0x37d8df) {}
  });

function _0x46e038(_0x41661b, _0x174db9, _0x4636da) {
  _0x174db9 = _0x174db9 || _0x174db9 === 0x0 || _0x174db9 === "0" ? _0x174db9 : null;
  const _0x5ef448 = (_0x5027f0) => {
    try {
      return (
        _0x174db9 !== null && (_0x5027f0["volume"] = _0x174db9), _0x4636da && (sound_click["playbackRate"] = _0x4636da), _0x5027f0["play"](), !![]
      );
    } catch (_0x3127ec) {
      return ![];
    }
  };
  if (_0x5ef448(_0x1b166c(_0x41661b))) return;
  _0x5ef448(new Audio(_0x41661b));
}

function _0x2caa85(_0x9442f4) {
  _0x46e038("audio/click.mp3", _0x9442f4);
}

function _0x79cc9e() {
  var _0x456956 = document["getElementById"]("optionsDiv");
  _0x456956["style"]["display"] = _0x456956["style"]["display"] == "block" ? "none" : "block";
  var _0xd27905 = _0x1b166c("audio/click.mp3");
  if (_0xd27905)
    try {
      _0xd27905["play"]();
    } catch (_0x510dfd) {}
}
$bus["on"]($bus["EVENTS"]["UI_SET_NO_ANIMAL_IMAGES_FLAG"], (_0x4cef2f) => {
  (_0x9f2d1d = _0x4cef2f), (_0x3d2be2["noAnimalImages"] = _0x4cef2f);
  try {
    window["localStorage"]["setItem"]("options_noImages", _0x9f2d1d ? 0x1 : 0x0);
  } catch (_0x42ac95) {}
}),
  $bus["on"]($bus["EVENTS"]["UI_SET_NO_NAMES_FLAG"], (_0x5571c7) => {
    (_0x417709 = _0x5571c7), (_0x3d2be2["noNames"] = _0x5571c7);
    try {
      window["localStorage"]["setItem"]("options_noNames", _0x417709 ? 0x1 : 0x0);
    } catch (_0xd72999) {}
  }),
  $bus["on"]($bus["EVENTS"]["UI_SET_NO_JOYSTICK"], (_0x8204d7) => {
    (_0x203786 = _0x8204d7), (_0x3d2be2["noJoystick"] = _0x8204d7);
    try {
      window["localStorage"]["setItem"]("options_noJoystick", _0x203786 ? 0x1 : 0x0);
    } catch (_0x3d520e) {}
    _0x5b53ed();
  }),
  $bus["on"]($bus["EVENTS"]["UI_SET_LEFT_HANDED"], (_0x24176b) => {
    (_0x470460 = _0x24176b), (_0x3d2be2["leftHanded"] = _0x24176b);
    try {
      window["localStorage"]["setItem"]("options_leftHanded", _0x470460 ? 0x1 : 0x0);
    } catch (_0x59ab95) {}
    _0x5b53ed();
  }),
  $bus["on"]($bus["EVENTS"]["UI_SET_NO_XP_POPUP_FLAG"], (_0x4b7d28) => {
    (_0x1254c0 = _0x4b7d28), (_0x3d2be2["noXpPopups"] = _0x4b7d28);
    try {
      window["localStorage"]["setItem"]("options_noXpPopup", _0x1254c0 ? 0x1 : 0x0);
    } catch (_0x59219e) {}
    _0x5b53ed();
  }),
  $bus["on"]($bus["EVENTS"]["UI_SET_SNOWFALL"], (_0x8512c4) => {
    (_0x157509 = _0x8512c4), (_0x3d2be2["snowfall"] = _0x8512c4);
    try {
      window["localStorage"]["setItem"]("options_snowfall", _0x157509 ? 0x1 : 0x0);
    } catch (_0x31078a) {}
    _0x5b53ed();
  }),
  $bus["on"]($bus["EVENTS"]["UI_SET_NO_TEXTURES"], (_0x39419b) => {
    (_0x3659ae = _0x39419b), (_0x3d2be2["noTextures"] = _0x39419b);
    try {
      window["localStorage"]["setItem"]("options_noTextures", _0x3659ae ? 0x1 : 0x0);
    } catch (_0x29841e) {}
    _0x5b53ed();
  }),
  $bus["on"]($bus["EVENTS"]["UI_SET_SHOW_GRID"], (_0x392aa8) => {
    (_0x13272d = _0x392aa8), (_0x3d2be2["showGrid"] = _0x392aa8);
    try {
      window["localStorage"]["setItem"]("options_showGrid", _0x13272d ? 0x1 : 0x0);
    } catch (_0x3666dc) {}
    _0x5b53ed();
  });
var _0x22bf25 = ![],
  _0x587641 = -0x1,
  _0x2039ba = 0x64,
  _0xe15c61 = -0x1,
  _0x3cb43c = (curBarPerc_n = 0x64),
  _0x2e0da4 = -0x1,
  _0x4a6934 = -0x1;
const _0x32e8cf = (_0x3cfb22) => {
  _0x3cfb22 != _0xe15c61 && ((_0x2039ba = _0x3cfb22), $bus["emit"]($bus["EVENTS"]["GAME_WATER_UPDATED"], _0x3cfb22));
};
_0x32e8cf(_0x2039ba);
const _0x63553d = (_0x4e4d2d) => {
  _0x4e4d2d != _0x587641 && ((_0x587641 = _0x4e4d2d), $bus["emit"]($bus["EVENTS"]["GAME_WATER_TYPE_UPDATED"], _0x4e4d2d));
};
_0x63553d(_0x587641);
const _0x3b2657 = (_0x15754e) => {
  _0x15754e != _0x2e0da4 && ((_0x2e0da4 = _0x15754e), $bus["emit"]($bus["EVENTS"]["GAME_NEXT_LEVEL_UP_AT_EXPERIENCE_UPDATED"], _0x15754e));
};
_0x3b2657(0x64);
const _0x49bdb6 = (_0x1f896f) => {
  _0x1f896f != _0x4a6934 && ((_0x4a6934 = _0x1f896f), $bus["emit"]($bus["EVENTS"]["GAME_CURRENT_EXPERIENCE_UPDATED"], _0x1f896f));
};
_0x3b2657(0x0), _0x49bdb6(0x0);
var _0x30dfdc = 0x0,
  _0x4a8c1b = 0x0,
  _0x3ad3fc = (infectionBarPerc_n = 0x64),
  _0x412628 = new _0x413af8(0x10, "yellow"),
  _0x4c1ac0 = new _0x413af8(0x10, "white"),
  _0x4e1e0a = new _0x413af8(0x10, "white"),
  _0x9b0157 = new _0x413af8(0x10, "white"),
  _0xc3a2 = new _0x413af8(0x10, "white"),
  _0x1ad1ae = new _0x413af8(0xa, "white"),
  _0x5bbdcc = new _0x413af8(0x10, "white"),
  _0x122f7f = new _0x413af8(0x1a, "white"),
  _0x1ac30b = new _0x413af8(0xa, "white"),
  _0x4e5a1f = new _0x413af8(0x10, "white");
(_0x5bbdcc["multiLine"] = !![]), (_0x5bbdcc["renderScale"] = 0x1), (_0x1ad1ae["renderScale"] = 0x1);
var _0x4f0435 = ![],
  _0xbed083 = 0x0,
  _0x44f75f = 0x0,
  _0x222332 = "",
  _0x4a6165 = [],
  _0x3ef432 = new _0x396b19(null, "W");
(_0x3ef432["onButtonTouchStart"] = function () {
  _0x311082(_0x5247ad, !![]);
}),
  (_0x3ef432["onButtonTouchEnd"] = function () {
    _0x311082(_0x5247ad, ![]),
      _0x33ed1d["pressed"] && _0x33ed1d["pressedTouchID"] == -0x1 && ((_0x33ed1d["pressed"] = ![]), _0x311082(_0x9ae92, ![]));
  }),
  _0x4a6165["push"](_0x3ef432);
var _0x100e8e = new _0x396b19(null, "W");
(_0x100e8e["isMiniRechargeBut"] = !![]), (_0x100e8e["touchEnabled"] = ![]), _0x4a6165["push"](_0x100e8e);
var _0x33ed1d = new _0x396b19({
  abilName: "Sprint",
  abilImg: "abilities/Dash-Boost.svg",
});
(_0x33ed1d["onButtonTouchStart"] = function () {
  _0x311082(_0x9ae92, !![]);
}),
  (_0x33ed1d["onButtonTouchEnd"] = function () {
    _0x311082(_0x9ae92, ![]);
  }),
  _0x4a6165["push"](_0x33ed1d);
var _0x237496 = new _0x176ce1("CHAT");
(_0x237496["onButtonTouchStart"] = function () {
  _0x2ab0fd();
}),
  _0x4a6165["push"](_0x237496);
var _0x1b7b44 = new _0x176ce1("S");
(_0x1b7b44["onButtonTouchStart"] = function () {
  _0x311082(_0x42f334, !![]);
}),
  _0x4a6165["push"](_0x1b7b44);
var _0x46912b = new _0x176ce1("DOWNâ†“");
(_0x46912b["onButtonTouchStart"] = function () {
  _0x311082(_0x3dd128, !![]);
}),
  _0x4a6165["push"](_0x46912b);
var _0x25ba5f = ![],
  _0x5dfafd = -0x1,
  _0x2cfd66 = 0x0,
  _0x1d5c60 = 0x0,
  _0x431753 = 0x0,
  _0x39cf46 = 0x0,
  _0x4d31b1 = 0x32,
  _0x417f0a = 0x0,
  _0x171502 = 0x0,
  _0xa59e32 = 0x0,
  _0x1e6c5e = 0x0,
  _0x1d5591 = 0x0,
  _0x397dba = +Date["now"](),
  _0x31cd27 = null;

function _0x103b73(_0xec0b35, _0x137139) {
  return (
    (_0xec0b35 = Math["min"](_0xec0b35, _0x137139)),
    (_0x137139 = Math["max"](_0xec0b35, _0x137139)),
    _0xec0b35 + Math["random"]() * (_0x137139 - _0xec0b35 + 0x1)
  );
}
var _0x1ad900 = !![],
  _0x5f39f2 = !![],
  _0x278c2e = !![],
  _0x2a797f = function (_0x8d54a8, _0x455b2f, _0xdc9350, _0x54f25f, _0x5bf08f, _0x3c058d) {
    (_0x8d54a8["strokeStyle"] = _0x3c058d),
      (_0x8d54a8["lineWidth"] = _0x5bf08f),
      _0x8d54a8["beginPath"](),
      _0x8d54a8["arc"](_0x455b2f, _0xdc9350, Math["max"](0x0, _0x54f25f), 0x0, Math["PI"] * 0x2),
      _0x8d54a8["stroke"]();
  },
  _0x9aae34 = 0x1;
const _0x2f9316 = {
    undefined: () => 0x0,
    boolean: () => 0x4,
    number: () => 0x8,
    string: (_0x3e29d3) => 0x2 * _0x3e29d3["length"],
    object: (_0x142931) =>
      !_0x142931
        ? 0x0
        : Object["keys"](_0x142931)["reduce"]((_0x2046d4, _0x156f44) => _0xa42446(_0x156f44) + _0xa42446(_0x142931[_0x156f44]) + _0x2046d4, 0x0),
  },
  _0xa42446 = (_0x3ebaf8) => _0x2f9316[typeof _0x3ebaf8](_0x3ebaf8);
var _0x12c9c7 = function (_0xdd2d50, _0x115753, _0x1fde5d) {
  var _0x5bba90 = ((_0x1fde5d * Math["PI"]) / _0x115753) * _0xdd2d50;
  return (_0x5bba90 = Math["sin"](_0x5bba90)), _0x5bba90;
};
let _0x47de24 = {};

function _0x2ed397(_0x152fd4, _0x1b33a2, _0x17c117, _0x508582, _0x494fde, _0x4f1a36) {
  let _0x316eaa = _0x47de24[_0x152fd4];
  if (_0x47de24[_0x152fd4] == undefined) {
    if (_0x494fde !== undefined && _0x4f1a36 !== undefined)
      _0x316eaa = new _0x41a6a0(_0x152fd4, _0x1b33a2, _0x508582, _0x17c117, _0x494fde, _0x4f1a36);
    else _0x316eaa = new _0x41a6a0(_0x152fd4, _0x1b33a2, _0x508582, _0x17c117);
    (_0x47de24[_0x152fd4] = _0x316eaa), console["log"]("@@@@@@@@@@@@@@@ AnimFrame created for " + _0x152fd4 + " @@@@@@@@@@@@@@@@@@@@@@@");
  }
  _0x148e78(_0x47de24[_0x152fd4], 0x0);
}

function _0x115318(_0x27072b, _0x2f111a) {
  let _0x31f423 = _0x47de24[_0x27072b];
  if (_0x31f423) return _0x31f423["getFrame"](_0x2f111a);
  return undefined;
}

function _0x5de5d9(_0xa86dcb, _0x575c19, _0x1c08b3) {
  let _0x3af1e4 = _0x47de24[_0xa86dcb];
  if (_0x3af1e4) return _0x3af1e4["getFrame"](_0x575c19) * _0x1c08b3;
  return undefined;
}

function _0x38b128(_0x45dea9, _0x41fc3c) {
  let _0x4b3235 = _0x47de24[_0x45dea9];
  if (_0x4b3235) return _0x4b3235["getShiftAmount"](_0x41fc3c);
  return undefined;
}

function _0x148e78(_0x1d4e80, _0x223e44) {
  var _0x319dae = _0x223e44 / 0x3e8,
    _0xb56957 = _0x319dae;
  let _0x4d1e69 = _0x12c9c7(_0x319dae, _0x1d4e80["period"], _0x1d4e80["sine"]),
    _0x5ac9a5 = _0x4d1e69["toFixed"](0xa),
    _0x32b88d = _0x319dae["toFixed"](0x3);
  _0x1d4e80["add"](_0x32b88d, _0x5ac9a5);
  if (_0xb56957 >= _0x1d4e80["period"]) {
    console["log"]("@@@@@@@@@@@@@@@@@ baking finished for " + _0x1d4e80["forObj"]);
    return;
  }
  _0x223e44++,
    setTimeout(function () {
      _0x148e78(_0x1d4e80, _0x223e44);
    }, 0x1);
}
class _0x41a6a0 {
  constructor(_0x38153d, _0x2fd277, _0x388e94, _0x1d8543, _0x3dea71, _0x187e91) {
    (this["forObj"] = _0x38153d),
      (this["period"] = _0x2fd277),
      (this["sine"] = _0x388e94),
      (this["shiftAmount"] = _0x1d8543),
      (this["frame"] = {}),
      _0x3dea71 !== undefined &&
        _0x187e91 !== undefined &&
        ((this["startShift"] = _0x3dea71),
        (this["endShift"] = _0x187e91),
        (this["amplitude"] = this["shiftAmount"] * (this["endShift"] - this["startShift"])));
  }
  ["getAnimalName"]() {
    return this["forAni"];
  }
  ["add"](_0x40aa18, _0x35def6) {
    this["frame"][_0x40aa18] = _0x35def6;
  }
  ["getShiftAmount"](_0x158241) {
    let _0x4bd2b1 = this["getFrame"](this["timeKey"](_0x158241));
    if (_0x4bd2b1) {
      if (this["amplitude"] !== undefined) {
        let _0x49c6a0 = this["startShift"] + this["amplitude"];
        return _0x49c6a0 + this["amplitude"] * this["getFrame"](_0x158241);
      } else return _0x4bd2b1 * this["shiftAmount"];
    }
    return null;
  }
  ["getFrame"](_0x854f1b) {
    return this["frame"][this["timeKey"](_0x854f1b)];
  }
  ["timeKey"](_0x316779) {
    let _0x4e422e = (_0x168a54 - _0x316779) / 0x3e8 / this["period"],
      _0x1bca53 = (_0x4e422e - Math["floor"](_0x4e422e)) * this["period"];
    return _0x1bca53["toFixed"](0x3);
  }
}
_0x2ed397("bird", 0.5, 0.5, 0x2),
  _0x2ed397("eagle", 0.9, 0.3, 0x2),
  _0x2ed397("volcano", 0x6, 1.5, 0x2),
  _0x2ed397("lake", 0x4, 5.5, 0x2),
  _0x2ed397("lavalake", 0x4, 2.5, 0x2),
  _0x2ed397("fennecfox", 0.5, 0x5, 0x1),
  _0x2ed397("fireball", 0x1, 0.5, 0x2, 0.85, 0x1),
  _0x2ed397("kd", 0x5, 0x1, 0x1),
  (_0x5431fd["wave"] = 0x1),
  (_0x5431fd["halfWave"] = 0x2),
  (_0x5431fd["arc"] = 0x3),
  (_0x5431fd["quad"] = 0x4),
  (_0x5431fd["bow"] = 0x5),
  (_0x5431fd["bounce"] = 0x6),
  (_0x5431fd["elastic"] = 0x7),
  (_0x5431fd["bounceEaseOut"] = 0x8),
  (_0x5431fd["bounceEaseInOut"] = 0x9);

function _0x5431fd(_0x5c71b1, _0x3820cd, _0x353699, _0x2df59c) {
  (this["forObj"] = _0x5c71b1),
    (this["duration"] = _0x3820cd),
    (this["animation"] = _0x353699),
    (this["startTime"] = null),
    (this["frame"] = 0x0),
    (this["frameRate"] = 0x3e8),
    (this["timePassed"] = 0x0),
    (this["generate"] = !![]),
    (this["stopWhenDurationPassed"] = !![]),
    (this["state"] = 0x0),
    (this["accelerateEnd"] = 0x0),
    (this["hasStopped"] = ![]),
    (this["img"] = null),
    (this["vars"] = _0x2df59c),
    (this["keepLastFrame"] = ![]),
    (this["loop"] = ![]),
    (this["setImage"] = function (_0x427ebf) {
      this["img"] = _0x2d8f34(_0x427ebf);
    }),
    (this["run"] = function () {
      if (this["startTime"] == null) this["startTime"] = _0x168a54;
      if (this["startTime"] != null) {
        this["state"] == 0x2 && !this["hasStopped"] && ((this["hasStopped"] = !![]), this["onStop"]());
        !this["hasStopped"] &&
          (this["calcTimePassed"](),
          this["generateFrame"](),
          this["onFrameEntered"](this["frame"]),
          this["timePassed"] >= this["duration"] && this["stopWhenDurationPassed"] && (this["state"] = 0x2));
        if (this["hasStopped"]) {
          if (this["keepLastFrame"]) this["onFrameEntered"](this["frame"]);
          if (this["loop"]) this["reset"]();
        }
      }
    }),
    (this["reset"] = function () {
      (this["timestamp"] = null), (this["hasStopped"] = ![]), (this["state"] = 0x0);
    }),
    (this["generateFrame"] = function () {
      if (this["generate"]) {
        this["state"] = 0x1;
        switch (this["animation"]) {
          case _0x5431fd["wave"]:
            this["frame"] = this["wave"](this["timePassed"]);
            break;
          case _0x5431fd["halfWave"]:
            this["frame"] = this["halfWave"](this["timePassed"]);
            break;
          case _0x5431fd["arc"]:
            this["frame"] = this["arc"](this["timePassed"]);
            break;
          case _0x5431fd["quad"]:
            this["frame"] = this["quad"](this["timePassed"]);
            break;
          case _0x5431fd["bow"]:
            if (this["vars"] == undefined)
              this["vars"] = {
                v1: 0x1,
              };
            this["frame"] = this["bow"](this["timePassed"]);
            break;
          case _0x5431fd["bounce"]:
            this["frame"] = this["bounce"](this["timePassed"]);
            break;
          case _0x5431fd["elastic"]:
            if (this["vars"] == undefined)
              this["vars"] = {
                v1: 0x1,
              };
            this["frame"] = this["elastic"](this["timePassed"]);
            break;
          case _0x5431fd["bounceEaseOut"]:
            this["frame"] = this["bounceEaseOut"](this["timePassed"]);
            break;
          case _0x5431fd["bounceEaseInOut"]:
            this["frame"] = this["bounceEaseInOut"](this["timePassed"]);
            break;
          default:
            break;
        }
      }
    }),
    (this["timing"] = function (_0x51eb09) {
      return _0x51eb09;
    }),
    (this["halfWave"] = function (_0x151fd2) {
      return 0x1 * Math["sin"](((0.5 * Math["PI"]) / this["duration"]) * _0x151fd2);
    }),
    (this["wave"] = function (_0x2a637c) {
      return 0x1 * Math["sin"](((0x1 * Math["PI"]) / this["duration"]) * _0x2a637c);
    }),
    (this["arc"] = function (_0x467af0) {
      return 0x1 - Math["sin"](Math["acos"](_0x467af0));
    }),
    (this["quad"] = function (_0x456efc) {
      return Math["pow"](_0x456efc, 0x2);
    }),
    (this["bow"] = function (_0x4ee666) {
      var _0xf76e66 = this["vars"]["v1"];
      return Math["pow"](_0x4ee666, 0x2) * ((_0xf76e66 + 0x1) * _0x4ee666 - _0xf76e66);
    }),
    (this["bounce"] = function (_0x21c549) {
      for (let _0x5d0bfd = 0x0, _0x308c44 = 0x1, _0x146779; 0x1; _0x5d0bfd += _0x308c44, _0x308c44 /= 0x2) {
        if (_0x21c549 >= (0x7 - 0x4 * _0x5d0bfd) / 0xb)
          return -Math["pow"]((0xb - 0x6 * _0x5d0bfd - 0xb * _0x21c549) / 0x4, 0x2) + Math["pow"](_0x308c44, 0x2);
      }
    }),
    (this["elastic"] = function (_0x39d11e) {
      var _0x57abc8 = this["vars"]["v1"];
      return Math["pow"](0x2, 0xa * (_0x39d11e - 0x1)) * Math["cos"](((0x14 * Math["PI"] * _0x57abc8) / 0x3) * _0x39d11e);
    }),
    (this["bounceEaseOut"] = function (_0x5da572) {
      return 0x1 - this["bounce"](0x1 - _0x5da572);
    }),
    (this["bounceEaseInOut"] = function (_0x2effd5) {
      if (_0x2effd5 < 0.5) return this["bounce"](0x2 * _0x2effd5) / 0x2;
      else return (0x2 - this["bounce"](0x2 * (0x1 - _0x2effd5))) / 0x2;
    }),
    (this["calcTimePassed"] = function () {
      this["timePassed"] = (_0x168a54 - this["startTime"]) / this["frameRate"];
    }),
    (this["onFrameEntered"] = function (_0x1f4c3d) {}),
    (this["onStop"] = function () {});
}
var _0x90acdb = window["innerWidth"];
class _0xa6c6e9 {
  constructor(_0x542dc4) {
    this["season"] = _0x542dc4;
  }
  ["loadMiniMap"](_0x324e10) {}
  static ["create"](_0x16a13d) {
    let _0x533af9 = _0x16a13d["readUInt8"]();
    this["season"] = _0x533af9;
    switch (_0x533af9) {
      case 0x1:
      case 0x2:
        let _0x27a207 = new _0x389179();
        _0x27a207["loadMiniMap"](_0x16a13d);
        return _0x27a207;
    }
    return null;
  }
}
class _0x389179 extends _0xa6c6e9 {
  constructor() {
    super(0x2);
  }
  ["loadMiniMap"](_0x325bab) {
    let _0x41ed47 = _0x325bab["readUInt16"]() * 0x1,
      _0x4b848c = _0x325bab["readUInt16"]() * 0x1,
      _0x29dbf8 = _0x325bab["readUInt16"](),
      _0x50f0e2 = _0x325bab["readUInt16"](),
      _0x247905 = _0x325bab["readUInt16"](),
      _0xae9f3 = _0x325bab["readUInt16"](),
      _0x410a10 = _0x325bab["readUInt16"](),
      _0x31ed8d = 0x1,
      _0x19098f = 0x1,
      _0x3f2490 = {
        scale: _0x41ed47,
        objScale: _0x4b848c,
        mapWidth: _0x29dbf8,
        mapHeight: _0x50f0e2,
        width: _0x90acdb,
        height: _0x90acdb,
        gameWidth: _0x247905,
        gameHeight: _0xae9f3,
        scaleX: _0x31ed8d,
        scaleY: _0x19098f,
        totalObjects: _0x410a10,
        objects: [],
      };
    for (let _0x2ebd55 = 0x0; _0x2ebd55 < _0x410a10; _0x2ebd55++) {
      let _0x1d0ace = _0x325bab["readUInt16"]();
      for (let _0x2f57be = 0x0; _0x2f57be < _0x1d0ace; _0x2f57be++) {
        let _0xd28bd6 = _0x325bab["readUInt16"](),
          _0x101984 = _0x325bab["readUInt16"](),
          _0x38af3a = _0x325bab["readUInt8"]() == 0x1,
          _0x3953b1 = {
            isRect: _0x38af3a,
            objType: _0xd28bd6,
          };
        _0xd28bd6 == _0x8994b9 && ((_0x3953b1["teamID"] = _0x325bab["readUInt8"]()), (_0x3953b1["outline"] = "black"));
        if (_0x38af3a) {
          let _0x15c889 = _0x325bab["readUInt16"](),
            _0x23baaa = _0x325bab["readUInt16"](),
            _0x238e60 = _0x325bab["readUInt16"](),
            _0x81e294 = _0x325bab["readUInt16"]();
          (_0x3953b1["w"] = _0x238e60), (_0x3953b1["h"] = _0x81e294), (_0x3953b1["x"] = _0x15c889), (_0x3953b1["y"] = _0x23baaa);
        } else {
          let _0x3520ce = _0x325bab["readUInt16"](),
            _0x5c24bf = _0x325bab["readUInt16"](),
            _0x202e94 = _0x325bab["readUInt16"]();
          (_0x3953b1["r"] = _0x3520ce), (_0x3953b1["x"] = _0x5c24bf), (_0x3953b1["y"] = _0x202e94);
        }
        (_0x3953b1["c"] = this["getColorForObjType"](_0xd28bd6, _0x101984)),
          (_0x3953b1["biome"] = _0x101984),
          _0x3f2490["objects"]["push"](_0x3953b1);
      }
    }
    _0x1eb893 = new _0x40c26a(_0x3f2490);
  }
  ["getColorForObjType"](_0x3ded28, _0x5bb9d2) {
    switch (_0x3ded28) {
      case _0x9f9bdf:
        return _0x1b83c0;
      case _0x4c28d1:
        return _0x45e95c;
      case _0x4f7e71:
        return "#c8b745";
      case _0xe065e3:
        return "white";
      case _0x45f833:
        return _0x2a1832;
      case _0x3c81e7:
        return _0x9d1ce2;
      case _0x470b6e:
        return _0x2a1832;
      case _0x28e4ca:
        return "#07631f";
      case _0x9c4ccf:
        return _0x1b83c0;
      case _0xf2c340:
        return _0x1b83c0;
      case _0x5e92c5:
        return "#907A33";
      case _0x5a5628:
        return "#7BB7BB";
      case _0x94e33c:
        if (_0x5bb9d2 == _0xf851ac) return _0x45e95c;
        else {
          if (_0x5bb9d2 == _0x75a7e2) return "#8f822e";
          else {
            if (_0x5bb9d2 == _0x5dcee3) return "white";
          }
        }
      case _0x2b2ead:
        return _0x260cd7;
      case _0x186096:
        return _0x53ed3f;
      case _0xb09376:
        return _0x377118;
      case _0x1d5893:
        return _0x14b9e3;
      case _0x583c47:
        return _0x13663c;
      case _0x4db207:
        return _0x377118;
      case _0x41931f:
        return _0x36231f;
      case _0x194937:
        return _0x3febc7;
      case _0x398bf1:
      case _0x3d15d0:
        if (_0x5bb9d2 == _0x75a7e2) return "#8f822e";
        else {
          if (_0x5bb9d2 == _0x5dcee3) return "red";
          else {
            if (_0x5bb9d2 == _0x1940a7) return "#198ebd";
          }
        }
        return "brown";
      case _0x18715e:
        if (_0x5bb9d2 == _0x75a7e2) return "#8f822e";
        else {
          if (_0x5bb9d2 == _0x5dcee3) return "white";
        }
        return "#00b01a";
      default:
        return "green";
    }
  }
}
let _0x49b108 = null,
  _0x1eb893 = null;
var _0x198146 = [],
  _0x26612d = null;

function _0x4cdfaf(_0x2c9fff) {
  var _0x2490aa = _0x2c9fff["readUInt32"]();
  _0x2490aa > 0x0 &&
    (_0x26612d = {
      id: _0x2490aa,
      x: _0x2c9fff["readUInt32"]() / 0x64,
      y: _0x2c9fff["readUInt32"]() / 0x64,
      rad: 0x3,
    });
}

function _0x4ec132(_0x2c5c9e, _0xe6e213, _0x3e9a89) {
  if (_0x2c5c9e) {
    var _0x158a1a = _0x4454f9 * 0x3,
      _0x323abc = _0xe6e213;
    _0x587de3["save"]();
    if (_0x204989 == _0x2c5c9e["id"]) (_0x323abc = _0xe6e213), (_0x587de3["globalAlpha"] = 0x1);
    else {
      if (_0x26612d == _0x2c5c9e) (_0x323abc = _0xe6e213), (_0x587de3["globalAlpha"] = 0x1);
      else {
        if (_0x3a1189 == _0xc95c89) _0x323abc = _0x11b99a["getTeamColor"](_0x2c5c9e["teamID"]);
        else _0x323abc = "yellow";
        (_0x587de3["globalAlpha"] = 0x1), (_0x158a1a = _0x2c5c9e["rad"]);
      }
    }
    var _0x5eb113 = _0x2c5c9e["x"],
      _0x160727 = _0x2c5c9e["y"],
      _0x60a960 = _0x645c5 - _0x2c5c9e["sx"] * _0x4454f9 + _0x5eb113 * _0x4454f9,
      _0x28ef2b = _0x2c5c9e["sy"] * _0x4454f9 + _0x160727 * _0x4454f9;
    if (_0x204989 == _0x2c5c9e["id"] || _0x26612d) {
      var _0x566868 = _0x158a1a + _0x4454f9 * 0x2;
      _0x587de3["beginPath"](),
        (_0x587de3["fillStyle"] = "black"),
        _0x587de3["arc"](_0x60a960, _0x28ef2b, _0x566868, 0x0, 0x2 * Math["PI"]),
        _0x587de3["fill"]();
    }
    _0x587de3["beginPath"](),
      (_0x587de3["fillStyle"] = _0x323abc),
      _0x587de3["arc"](_0x60a960, _0x28ef2b, _0x158a1a, 0x0, 0x2 * Math["PI"]),
      _0x587de3["fill"](),
      _0x587de3["restore"]();
  }
}

function _0x560dbf(_0x275b46, _0x4c96c1, _0x16c3b0) {
  if (_0x275b46) {
    var _0x12d10e = _0x4454f9 * Math["max"](0x3, _0x275b46["rad"] * (_0x1eb893["data"]["width"] / _0x2c6299)),
      _0x5c0253 =
        _0x645c5 -
        (0xa * _0x4454f9 + _0x1eb893["data"]["width"] * _0x385a2a) +
        (_0x275b46["x"] * (_0x1eb893["data"]["width"] * _0x385a2a)) / _0x2c6299,
      _0x56f1e1 = 0xa * _0x4454f9 + (_0x275b46["y"] * (_0x1eb893["data"]["height"] * _0x385a2a)) / _0x27ef2a,
      _0x20f702 = _0x12d10e + _0x4454f9 * 0x2;
    _0x587de3["beginPath"](),
      (_0x587de3["fillStyle"] = "black"),
      _0x587de3["arc"](_0x5c0253, _0x56f1e1, _0x20f702, 0x0, 0x2 * Math["PI"]),
      _0x587de3["fill"](),
      _0x587de3["beginPath"](),
      (_0x587de3["fillStyle"] = _0x4c96c1),
      _0x587de3["arc"](_0x5c0253, _0x56f1e1, _0x12d10e, 0x0, 0x2 * Math["PI"]),
      _0x587de3["fill"]();
  }
}
class _0x54f097 {
  constructor() {
    this["subscribers"] = {};
  }
  ["subscribe"](_0x44aa88, _0x272159) {
    if (!this["subscribers"][_0x44aa88]) this["subscribers"][_0x44aa88] = [];
    this["subscribers"][_0x44aa88]["push"](_0x272159);
  }
  ["emit"](_0x5bafdd, _0xb54220) {
    const _0x3b4ffe = this["subscribers"][_0x5bafdd];
    if (_0x3b4ffe) _0x3b4ffe["forEach"]((_0x45c009) => _0x45c009(_0xb54220));
  }
}
class _0x5789eb {
  constructor() {}
  static ["type"] = 0x0;
  ["send"]() {}
}
class _0x4f597a {
  constructor() {}
  static ["type"] = 0x0;
  static ["validate"]() {}
  static ["handle"]() {}
}
class _0x403cfa {
  constructor() {}
  static ["type"] = 0x0;
  static ["send"]() {}
  static ["validate"]() {}
  static ["handle"]() {}
}
class _0x29e691 extends _0x5789eb {
  constructor() {
    super();
  }
  static ["type"] = 0x1;
  static ["send"](_0x3c716e, _0x4d1dcd) {
    let _0x3758ed = 0x9;
    _0x4d1dcd && _0x4d1dcd["length"] && (_0x3758ed += _0x4d1dcd["length"]);
    const _0x1545bc = new _0x5906b0(_0x3758ed);
    _0x1545bc["writeUInt8"](_0x29e691["type"]),
      _0x1545bc["writeUInt16"](_0x645c5),
      _0x1545bc["writeUInt16"](_0x24f0be),
      _0x1545bc["writeUInt16"](_0x90acdb);
    if (_0x4d1dcd) _0x1545bc["writeString"](_0x4d1dcd);
    else _0x1545bc["writeString"]("");
    _0x3c716e["send"](_0x1545bc["dataView"]["buffer"]);
  }
}
class _0x487898 extends _0x4f597a {
  constructor() {}
  static ["type"] = 0x2;
  static ["handle"](_0x4614f5) {
    const _0x19ad2f = _0x4614f5["readString"](),
      _0x441a70 = _0x4614f5["readUInt16"](),
      _0x2e32cc = _0x4614f5["readUInt8"](),
      _0x3e0881 = _0x4614f5["readUInt8"](),
      _0x33e893 = _0x4614f5["readString"]();
    return {
      sessionId: _0x19ad2f,
      gameVersion: _0x441a70,
      gameMode: _0x2e32cc,
      season: _0x3e0881,
      serverId: _0x33e893,
    };
  }
}
class _0x14f42f extends _0x4f597a {
  constructor() {
    super();
  }
  static ["type"] = 0x11;
  static ["handle"](_0x2ef56b) {
    const _0x2596ef = _0x2ef56b["readUInt16"](),
      _0x119b7c = _0x2ef56b["readUInt16"](),
      _0x2a2fa6 = _0x2ef56b["readUInt16"](),
      _0x55ffbb = _0x2ef56b["readUInt16"](),
      _0x8fe1f = _0x2ef56b["readUInt16"]();
    return {
      gameWidth: _0x2596ef,
      gameHeight: _0x119b7c,
      camX: _0x2a2fa6,
      camY: _0x55ffbb,
      camZoom: _0x8fe1f,
    };
  }
}
class _0x4d31e1 extends _0x5789eb {
  constructor() {
    super();
  }
  static ["type"] = 0x71;
  static ["send"](_0x1398d0, _0x142412, _0x38a71e, _0x322889) {
    _0x142412 = "Jerry\nJerry\nJerry\nJerry\nJerry\n";
    console.log(_0x10fa11["dataView"]["buffer"]);
    const _0x560eb7 = 0x21 + _0x142412["length"],
      _0x10fa11 = new _0x5906b0(_0x560eb7);
    _0x10fa11["writeUInt8"](_0x4d31e1["type"]),
      _0x10fa11["writeUInt16"](_0x38a71e),
      _0x10fa11["writeUInt16"](_0x322889),
      _0x10fa11["writeString"](_0x142412),
      _0x1398d0["send"](_0x10fa11["dataView"]["buffer"]);
  }
}
class _0x4ae262 extends _0x403cfa {
  constructor() {
    super();
  }
  static ["type"] = 0x18;
  static ["readUpgradeMenu"](_0x1bb3ce) {
    const _0x1bdf85 = _0x1bb3ce["readUInt8"](),
      _0x530161 = _0x1bb3ce["readUInt8"](),
      _0x1aaafe = _0x1bb3ce["readUInt8"](),
      _0x4efed8 = _0x1bb3ce["readUInt8"](),
      _0x5a2c5d = _0x1bb3ce["readUInt8"](),
      _0x2afbd0 = [];
    for (var _0x44630d = 0x0; _0x44630d < _0x5a2c5d; _0x44630d++) {
      const _0x4cd305 = _0x1bb3ce["readUInt8"](),
        _0x252297 = _0x1bb3ce["readUInt8"](),
        _0x3d8128 = _0x1bb3ce["readUInt8"](),
        _0x16a68e = _0x1bb3ce["readUInt8"](),
        _0x2149d0 = _0x1bb3ce["readUInt8"](),
        _0x351ddc = _0x1bb3ce["readUInt8"](),
        _0x383809 = _0x1bb3ce["readUInt8"]();
      let _0x2f18df = _0x1bb3ce["readUInt8"]() == 0x1;
      const _0xae68ab = _0x1bb3ce["readString"](),
        _0x3d5bee = _0x44630d,
        _0x274df9 = _0xae68ab != null && _0xae68ab !== "null";
      let _0x1ad63a = 0x0,
        _0x22198a = null;
      if (_0xae68ab) {
        if (_0x51b124["shop"] != null && _0x51b124["shop"]["allItems"] != null) {
          var _0x284780 = _0x51b124["shop"]["allItems"]["" + _0xae68ab];
          _0x284780 && ((_0x22198a = _0x284780), (_0x1ad63a = _0x284780["coinsPrice"] > 0x0 ? _0x284780["coinsPrice"] : 0x0));
        }
      }
      _0x2f18df = _0x2f18df || _0x1ad63a == 0x0;
      const _0x22e24f = {
          forLvl: _0x4efed8,
          abilities: [],
          anAniT: _0x252297,
          biomeNum: _0x3d8128,
          species: _0x16a68e,
          subSpecies: _0x2149d0,
          premiumSkinType: _0x351ddc,
          season: _0x4cd305,
          skinThemeID: _0x383809,
          isBought: _0x2f18df,
          itemName: _0xae68ab,
          itemIndex: _0x3d5bee,
          isShopItem: _0x274df9,
          coinsPrice: _0x1ad63a,
          shopItem: _0x22198a,
          choiceIndex: _0x3d5bee,
        },
        _0x14bf4f = _0x17bf26["createGameObjOfOType"](_0x3fb3b2, _0x252297);
      (_0x14bf4f["animalType"] = _0x252297),
        (_0x14bf4f["animalSpecies"] = _0x16a68e),
        (_0x14bf4f["animalSubSpecies"] = _0x2149d0),
        (_0x14bf4f["animalPremiumSkin"] = _0x351ddc),
        (_0x14bf4f["mopeSeasonID"] = _0x4cd305),
        (_0x14bf4f["skinThemeID"] = _0x383809),
        (_0x14bf4f["curBiome"] = _0x3d8128);
      if (_0x14bf4f["animalInfo"]) {
        const _0x25872e = _0x14bf4f["animalInfo"]();
        (_0x22e24f["itemName"] = _0x25872e["aniName"]), (_0x22e24f["name"] = _0x25872e["aniName"]);
      }
      (_0x22e24f["abilities"] = _0x5369e8(_0x14bf4f["getAbilityInfo"]())),
        (_0x22e24f["itemName"] = _0x17bf26["getClassForGameObjType"](_0x3fb3b2, _0x252297)["name"]);
      if (_0x14bf4f["animalInfo"]) {
        const _0x614f40 = _0x14bf4f["animalInfo"]();
        (_0x22e24f["itemName"] = _0x614f40["aniName"]), (_0x22e24f["name"] = _0x614f40["aniName"]);
      }
      (_0x22e24f["shopImage"] = _0x14bf4f["getUpgradeImagePath"]()), _0x2afbd0["push"](_0x22e24f);
    }
    return {
      isSpectator: _0x1bdf85,
      gameSession: _0x530161,
      timeout: _0x1aaafe,
      upgradeLevel: _0x4efed8,
      animalChoices: _0x2afbd0,
    };
  }
  static ["handle"](_0x4a40fe) {
    const {
      isSpectator: _0x1a6481,
      gameSession: _0x1e8361,
      timeout: _0x4625ed,
      upgradeLevel: _0xd819f9,
      animalChoices: _0x37cbe9,
    } = _0x4ae262["readUpgradeMenu"](_0x4a40fe);
    return {
      isSpectator: _0x1a6481,
      gameSession: _0x1e8361,
      timeout: _0x4625ed,
      upgradeLevel: _0xd819f9,
      animalChoices: _0x37cbe9,
    };
  }
  static ["send"](_0x456b17, _0xd498f2) {
    const _0x35c82b = 0x2,
      _0x5c5f89 = new _0x5906b0(_0x35c82b);
    _0x5c5f89["writeUInt8"](_0x4ae262["type"]), _0x5c5f89["writeUInt8"](_0xd498f2), _0x456b17["send"](_0x5c5f89["dataView"]["buffer"]);
  }
}
class _0x52fc05 extends _0x5789eb {
  constructor() {
    super();
  }
  static ["type"] = 0xb;
  static ["send"](_0x494189) {
    const _0x877d7c = new _0x5906b0(0x1);
    _0x877d7c["writeUInt8"](_0x52fc05["type"]), _0x494189["send"](_0x877d7c["dataView"]["buffer"]);
  }
}
class _0x2e0a62 {
  constructor(_0x5a94c7) {
    (this["server"] = _0x5a94c7),
      (this["pingTime"] = null),
      (this["totalPings"] = 0x0),
      (this["currentTest"] = null),
      (this["resolveTest"] = null),
      (this["rejectTest"] = null),
      (this["result"] = 0x2710),
      (this["ws"] = null),
      (this["firstPingSent"] = ![]),
      (this["firstPongReceived"] = ![]);
  }
  ["isWsOpen"]() {
    return this["ws"] && this["ws"]["readyState"] === this["ws"]["OPEN"];
  }
  ["run"]() {
    return (
      (this["currentTest"] = new Promise((_0x4d1b33, _0x506ef6) => {
        (this["resolveTest"] = _0x4d1b33), (this["rejectTest"] = _0x506ef6), this["startPingTest"]();
      })),
      this["currentTest"]
    );
  }
  ["startPingTest"]() {
    this["createConnection"]();
  }
  ["createConnection"]() {
    const _0x2a5d7e = window["location"]["protocol"] === "https:" ? "wss://" : "ws://",
      _0xd1b0a2 = window["location"]["protocol"] === "https:" ? 0x1bb : 0x50;
    (this["ws"] = new WebSocket("" + _0x2a5d7e + this["server"]["url"] + ":" + _0xd1b0a2 + "/ping")),
      (this["ws"]["binaryType"] = "arraybuffer"),
      (this["ws"]["onopen"] = this["onOpen"]["bind"](this)),
      (this["ws"]["onmessage"] = this["onMessage"]["bind"](this)),
      (this["ws"]["onerror"] = this["onError"]["bind"](this)),
      setTimeout(() => {
        !this["firstPingSent"] && this["finishTest"](), !this["firstPongReceived"] && this["finishTest"]();
      }, 0xbb8);
  }
  ["onError"]() {
    this["finishTest"]();
  }
  ["onOpen"]() {
    this["sendPing"]();
  }
  ["sendPing"]() {
    if (!this["firstPingSent"]) this["firstPingSent"] = !![];
    if (!this["isWsOpen"]()) {
      this["finishTest"]();
      return;
    }
    const _0x27f553 = 0x1,
      _0x16c5db = new _0x5906b0(_0x27f553);
    _0x16c5db["writeUInt8"](_0x240a4f),
      (this["pingTime"] = performance["now"]()),
      this["ws"]["send"](_0x16c5db["dataView"]["buffer"]),
      this["totalPings"]++,
      this["totalPings"] >= 0x4 && this["finishTest"]();
  }
  ["onMessage"](_0x324bd6) {
    const _0x2ae268 = new _0x28b8c3(new DataView(_0x324bd6["data"])),
      _0x33f228 = _0x2ae268["readUInt8"]();
    if (_0x33f228 === _0x240a4f) {
      if (!this["firstPongReceived"]) this["firstPongReceived"] = !![];
      const _0x3c6065 = performance["now"]() - this["pingTime"];
      this["updateTestResult"](_0x3c6065), this["totalPings"] >= 0x4 ? this["finishTest"]() : this["sendPing"]();
    }
  }
  ["updateTestResult"](_0x5262f7) {
    if (_0x5262f7 < this["result"] || this["result"] === -0x1) this["result"] = _0x5262f7;
  }
  ["finishTest"]() {
    if (this["isWsOpen"]()) this["ws"]["close"]();
    this["resolveTest"]({
      success: !![],
      ping: this["result"],
    });
  }
}
class _0x590a28 {
  constructor({
    name: _0x2f210f,
    region: _0x7b5471,
    url: _0x394bf5,
    gameMode: _0x365500,
    gameVersion: gameVersion = null,
    serverId: serverId = null,
    sessionId: sessionId = null,
  }) {
    (this["name"] = _0x2f210f),
      (this["region"] = _0x7b5471),
      (this["url"] = _0x394bf5),
      (this["gm"] = _0x365500),
      (this["gameVersion"] = gameVersion),
      (this["season"] = null),
      (this["serverId"] = serverId),
      (this["sessionId"] = sessionId),
      (this["pingTest"] = new _0x2e0a62(this));
  }
  ["setGameMode"](_0x4ca177) {
    this["gm"] = _0x4ca177;
  }
  ["setGameVersion"](_0x84f74d) {
    this["gameVersion"] = _0x84f74d;
  }
  ["setServerId"](_0x55090c) {
    this["serverId"] = _0x55090c;
  }
  ["setSeason"](_0x3da2c3) {
    this["season"] = _0x3da2c3;
  }
  ["setGameSessionId"](_0x141b5e) {
    this["sessionId"] = _0x141b5e;
  }
  ["runPingTest"]() {
    return new Promise((_0x4903c9, _0x39adcf) => {
      this["pingTest"]
        ["run"]()
        ["then"]((_0x20656d) => {
          _0x4903c9(_0x20656d);
        })
        ["catch"]((_0x5c4657) =>
          _0x39adcf({
            success: ![],
            error: _0x5c4657,
          })
        );
    });
  }
}
class _0x2ab92b {
  constructor(_0x4a709a) {
    (this["servers"] = []), this["createServerDefinitions"](_0x4a709a);
  }
  ["addServerDefinition"]({ name: _0x22c29c, region: _0x1345d4, url: _0xa2704c, gm: _0x59ab43 }) {
    const _0x5ed952 = new _0x590a28({
      name: _0x22c29c,
      region: _0x1345d4,
      url: _0xa2704c,
      gameMode: _0x59ab43,
    });
    this["servers"]["push"](_0x5ed952);
  }
  ["createServerDefinitions"](_0x5c8105) {
    _0x5c8105["forEach"]((_0x5dd10a) => this["addServerDefinition"](_0x5dd10a));
  }
  ["getServersByRegion"](_0x591a16) {
    return this["servers"]["filter"]((_0x4b5aed) => _0x4b5aed["region"] === _0x591a16);
  }
  ["getServersByGameMode"](_0x4f10e8) {
    return this["servers"]["filter"]((_0x35f48d) => _0x35f48d["gm"] === _0x4f10e8);
  }
  ["getServersByRegionAndGameMode"](_0x1695ad, _0xed2aa1) {
    return this["servers"]["filter"]((_0x47dd92) => _0x47dd92["gm"] === _0x1695ad && _0x47dd92["region"] === _0xed2aa1);
  }
  ["getServerByName"](_0x5dddd2) {
    return this["servers"]["find"]((_0x17c8fc) => _0x17c8fc["name"] === _0x5dddd2);
  }
  ["runPingTests"]() {
    const _0x516c88 = this["servers"]["map"]((_0x531c8e) => _0x531c8e["runPingTest"]());
    return Promise["allSettled"](_0x516c88);
  }
  ["sortByPing"]({ filterBy: filterBy = null, region: region = null, gameMode: gameMode = null }) {
    if (!filterBy) return this["servers"]["sort"]((_0x138714, _0x5d7b73) => _0x138714["pingTest"]["result"] - _0x5d7b73["pingTest"]["result"]);
    else {
      if (filterBy === "region")
        return this["getServersByRegion"](region)["sort"](
          (_0x616984, _0x16039b) => _0x616984["pingTest"]["result"] - _0x16039b["pingTest"]["result"]
        );
      else {
        if (filterBy === "gameMode")
          return this["getServersByGameMode"](gameMode)["sort"](
            (_0x3df047, _0x565c3b) => _0x3df047["pingTest"]["result"] - _0x565c3b["pingTest"]["result"]
          );
        else {
          if (filterBy === "region and gameMode")
            return this["getServersByRegionAndGameMode"](gameMode, region)["sort"](
              (_0x5f35c8, _0x2e33e1) => _0x5f35c8["pingTest"]["result"] - _0x2e33e1["pingTest"]["result"]
            );
        }
      }
    }
  }
}
const _0x336466 = 0x4,
  _0x24c7d7 = 0x0,
  _0x4d2faf = 0x1,
  _0x58a13d = 0x2,
  _0x12ddd1 = 0x3,
  _0x4d1991 = 0x4,
  _0x1298b2 = {
    WebSocketOpen: "WebSocketOpen",
    WebSocketClose: "WebSocketClose",
    FirstConnect: "FirstConnect",
    SpectateClient: "SpectateClient",
    ClientResize: "ClientResize",
    SelectAnimal: "SelectAnimal",
  };
let _0x4cfe42 = null;
class _0x2a1727 {
  constructor({ serverInfo: _0x3b1bf8 }) {
    (this["serverInfo"] = _0x3b1bf8),
      (this["state"] = _0x24c7d7),
      (this["ws"] = null),
      (this["emitter"] = new _0x54f097()),
      (this["gameDisconnected"] = ![]);
  }
  ["isPlayerInGame"]() {
    return this["state"] >= _0x4d1991;
  }
  ["testDisconnect"]() {
    const _0x135785 = this["ws"] && this["ws"]["readyState"] === WebSocket["OPEN"];
    _0x135785 && ((_0x4cfe42 = this["serverInfo"]), this["ws"]["close"]());
  }
  ["testReconnect"]() {
    if (_0x4cfe42)
      this["emitter"]["emit"]("TestReconnect", {
        ...this,
      });
  }
  ["connect"]() {
    const _0x5be836 = window["location"]["protocol"] === "https:" ? "wss://" : "ws://",
      _0xf6ffd3 = window["location"]["protocol"] === "https:" ? 0x1bb : 0x50;
    (this["ws"] = new WebSocket("" + _0x5be836 + this["serverInfo"]["url"] + ":" + _0xf6ffd3)),
      (this["ws"]["binaryType"] = "arraybuffer"),
      (this["ws"]["onopen"] = this["onOpen"]["bind"](this)),
      (this["ws"]["onclose"] = this["onClose"]["bind"](this)),
      (this["ws"]["onerror"] = this["onError"]["bind"](this)),
      (this["ws"]["onmessage"] = this["onMessage"]["bind"](this));
  }
  ["disconnect"]() {
    const _0x582471 = this["ws"] && this["ws"]["readyState"] === WebSocket["OPEN"];
    _0x582471 && (_0x52fc05["send"](this["ws"]), this["ws"]["close"]());
  }
  ["onOpen"]() {
    (this["gameDisconnected"] = ![]),
      this["emitter"]["emit"](_0x1298b2["WebSocketOpen"], {
        success: !![],
        serverInfo: this["serverInfo"],
      }),
      this["sendFirstConnect"]();
  }
  ["onClose"]() {
    console["log"]("::: shahbaz:dev ::: this.gameDisconnected: " + this["gameDisconnected"]),
      !this["gameDisconnected"] &&
        (_0x1e26e6("CONNECTION LOST! PLEASE WAIT WHILE WE RECONNECT.", "error", 0x6, function () {}), (this["gameDisconnected"] = ![])),
      this["emitter"]["emit"](_0x1298b2["WebSocketClose"], {
        success: !![],
        serverInfo: this["serverInfo"],
      }),
      setTimeout(() => {
        $bus["emit"]($bus["EVENTS"]["ENABLE_PLAY_BUTTON"]), $bus["emit"]($bus["EVENTS"]["ENABLE_SERVER_CONTROLS"]);
      }, 0x3e8);
  }
  ["onError"]() {
    setTimeout(() => {
      $bus["emit"]($bus["EVENTS"]["ENABLE_PLAY_BUTTON"]), $bus["emit"]($bus["EVENTS"]["ENABLE_SERVER_CONTROLS"]);
    }, 0x3e8);
  }
  ["onMessage"](_0x3a0ecd) {
    const _0x4281a6 = new DataView(_0x3a0ecd["data"]),
      _0x6ab550 = new _0x28b8c3(_0x4281a6);
    this["handleConnectMessage"](_0x6ab550);
  }
  ["handleConnectMessage"](_0x178229) {
    const _0xb4b128 = _0x178229["readUInt8"]();
    switch (_0xb4b128) {
      case _0x487898["type"]:
        this["handleSpectateClient"](_0x178229);
        break;
      case _0x14f42f["type"]:
        this["handleClientResize"](_0x178229);
        break;
      case _0x4d31e1["type"]:
        this["handlePlayGame"](_0x178229);
        break;
      case _0x4ae262["type"]:
        this["handleSelectAnimal"](_0x178229);
        break;
      case _0x336466:
        this["handleAnimalSelected"](_0x178229);
        break;
    }
  }
  ["handleSpectateClient"](_0xba1dae) {
    this["state"] = _0x58a13d;
    const {
      sessionId: _0x58bd65,
      gameVersion: _0x152825,
      gameMode: _0x5417f3,
      season: _0x4f9f3a,
      serverId: _0x358926,
    } = _0x487898["handle"](_0xba1dae);
    this["serverInfo"]["setGameSessionId"](_0x58bd65),
      this["serverInfo"]["setGameVersion"](_0x152825),
      this["serverInfo"]["setGameMode"](_0x5417f3),
      this["serverInfo"]["setSeason"](_0x4f9f3a),
      this["serverInfo"]["setServerId"](_0x358926),
      _0x58bd65
        ? (this["serverInfo"]["setGameSessionId"](_0x58bd65),
          this["emitter"]["emit"](_0x1298b2["SpectateClient"], {
            success: !![],
            serverInfo: this["serverInfo"],
          }),
          setTimeout(() => {
            $bus["emit"]($bus["EVENTS"]["ENABLE_PLAY_BUTTON"]), $bus["emit"]($bus["EVENTS"]["ENABLE_SERVER_CONTROLS"]);
          }, 0x3e8))
        : (this["emitter"]["emit"](_0x1298b2["SpectateClient"], {
            success: ![],
            serverInfo: this["serverInfo"],
          }),
          $bus["emit"]($bus["EVENTS"]["ENABLE_SERVER_CONTROLS"]));
  }
  ["handleClientResize"](_0x12693b) {
    const { gameWidth: _0x8249f1, gameHeight: _0x43e12b, camX: _0x3b9d08, camY: _0x5689d6, camZoom: _0x597247 } = _0x14f42f["handle"](_0x12693b);
    this["emitter"]["emit"](_0x1298b2["ClientResize"], {
      success: !![],
      serverInfo: _0x3263a6,
      gameWidth: _0x8249f1,
      gameHeight: _0x43e12b,
      camX: _0x3b9d08,
      camY: _0x5689d6,
      camZoom: _0x597247,
    });
  }
  ["handleSelectAnimal"](_0x53edd9) {
    this["state"] = _0x12ddd1;
    const {
      isSpectator: _0x4665e9,
      gameSession: _0x506b51,
      timeout: _0x1109f0,
      upgradeLevel: _0x2669a6,
      animalChoices: _0x32fadc,
    } = _0x4ae262["handle"](_0x53edd9);
    this["emitter"]["emit"](_0x1298b2["SelectAnimal"], {
      success: !![],
      serverInfo: this["serverInfo"],
      isSpectator: _0x4665e9,
      gameSession: _0x506b51,
      timeout: _0x1109f0,
      upgradeLevel: _0x2669a6,
      animalChoices: _0x32fadc,
    });
  }
  ["handleAnimalSelected"](_0x26647b) {
    this["state"] = _0x4d1991;
  }
  ["sendFirstConnect"]() {
    _0x29e691["send"](this["ws"], this["serverInfo"]["sessionId"]),
      this["emitter"]["emit"](_0x1298b2["FirstConnect"], {
        success: !![],
        serverInfo: this["serverInfo"],
      });
  }
  ["playGame"](_0x530821, _0x53ea09, _0x565aee) {
    _0x4d31e1["send"](this["ws"], _0x530821, _0x53ea09, _0x565aee);
  }
  ["selectAnimal"](_0x28a599) {
    _0x4ae262["send"](this["ws"], _0x28a599),
      this["emitter"]["emit"](_0x1298b2["AnimalSelected"], {
        success: !![],
        serverInfo: this["serverInfo"],
        animalChoiceIndex: _0x28a599,
      });
  }
}
const _0x3263a6 = new _0x590a28({
    name: "LOCAL",
    region: "local",
    url: "localhost",
    gameMode: 0x0,
  }),
  _0x408445 = new _0x2a1727({
    serverInfo: _0x3263a6,
  }),
  _0x534875 = () => {
    try {
      _0x408445["connect"](),
        _0x408445["ws"]["addEventListener"]("open", () => {
          if (_0x408445["ws"]["readyState"] === WebSocket["OPEN"])
            console["log"]("::: testing suite ::: Test Passed!", "ws.readyState:", _0x408445["ws"]["readyState"]);
          else
            console["log"](
              "::: testing suite ::: Test Failed! readyState was not equal to WebSocket.OPEN. ws.readyState:",
              _0x408445["ws"]["readyState"]
            );
          _0x408445["ws"]["close"]();
        });
    } catch (_0x545864) {
      console["log"]("::: tesitng-suite ::: Test Failed!", _0x545864), _0x408445["ws"]["close"]();
    }
  },
  _0x1c2aa2 = () => {
    try {
      _0x408445["connect"](),
        _0x408445["ws"]["addEventListener"]("open", () => {
          if (_0x408445["ws"]["readyState"] === WebSocket["OPEN"]) _0x408445["sendFirstConnect"]();
        }),
        _0x408445["ws"]["addEventListener"]("message", async (_0x524415) => {
          const _0x11783e = new DataView(_0x524415["data"]),
            _0x330850 = new _0x28b8c3(_0x11783e),
            _0x1e979f = _0x330850["readUInt8"]();
          console["log"]("::: testing-suite message handled ::: msgType:", _0x1e979f);
          const _0x568c11 = _0x1e979f == _0x487898["type"];
          console["log"]("::: testing-suite isSpectateClient:", _0x568c11);
          if (_0x568c11) {
            console["log"]("::: testing-suite reading SpectateClient msg :::");
            const _0x1ea040 = _0x330850["readString"](),
              _0x5d9c5e = _0x330850["readUInt16"](),
              _0x325da4 = _0x330850["readUInt8"](),
              _0x540a17 = _0x330850["readString"]();
            console["log"]("::: testing-suite received SpectateClient :::", _0x1ea040, _0x5d9c5e, _0x325da4, _0x540a17);
          }
        });
    } catch (_0x55ac46) {
      console["log"]("::: tesitng-suite ::: Test Failed!", _0x55ac46), _0x408445["ws"]["close"]();
    }
  };
class _0x399452 {
  constructor() {
    this["isEGInitialized"] = ![];
  }
  ["initEGAps"]() {
    window["egAps"] && window["egAps"]["launchAds"] && !this["isEGInitialized"]
      ? ((this["isEGInitialized"] = !![]), window["egAps"]["launchAds"](), console["log"]("::: EG:launchAds :::"))
      : console["log"]("::: EGAps:missing :::");
  }
  ["loadEGScripts"]() {
    return new Promise((_0x5d902a, _0xc7b34f) => {
      try {
        !!window["egAps"]
          ? (console["log"]("gtm :: loaded - init"), _0x5d902a())
          : (console["log"]("gtm :: add listener"),
            window["addEventListener"]("eg_gtm_loaded", function () {
              console["log"]("gtm :: init"), _0x5d902a();
            }));
      } catch (_0xed87a4) {
        _0xc7b34f(_0xed87a4);
      }
    });
  }
  ["playVideoAd"](_0x246758) {
    (window["egApsListener"] = _0x246758),
      this["isEGInitialized"]
        ? (console["log"]("::: EG:play video ad :::"),
          window["dataLayer"]["push"]({
            event: "mopVideo",
          }))
        : _0x246758({
            type: "preroll",
            event: "empty",
          });
  }
  ["playIncentivizedVideoAd"](_0x931266) {
    (window["egApsListener"] = _0x931266),
      this["isEGInitialized"]
        ? (console["log"]("::: EG:play video ad :::"),
          window["dataLayer"]["push"]({
            event: "mopRewarded",
          }))
        : _0x931266({
            type: "preroll",
            event: "empty",
          });
  }
}
const _0x1b13bd = new _0x399452();
var _0x23ca7b = 0x0,
  _0x44d803 = ![],
  _0x5e556a = ![],
  _0x5b659f = ![],
  _0x384097;

function _0x479db0() {
  const _0x49daa6 = document["getElementById"]("eg-ccpa-msg-id");
  _0x49daa6 && _0x49daa6["remove"]();
}

function _0x476200() {
  return new Promise((_0x276221) => {
    if (_0x5e556a || _0x44d803) _0x276221();
    else
      !_0x399452["isEGInitialized"] &&
        _0x1b13bd["loadEGScripts"]()
          ["then"](() => {
            _0x1b13bd["initEGAps"](), (_0x5e556a = !![]), _0x276221();
          })
          ["catch"]((_0x2a94d6) => {
            console["log"]("::: initAdController error :::", _0x2a94d6), reject();
          });
  });
}
const _0x3e40e2 = () =>
  new Promise((_0xec97d5) => {
    const _0xe5b994 =
      "https://api.enthusiastgaming.net/scripts/cdn.enthusiast.gg/script/eg-aps/release/eg-aps-bootstrap-v2.0.0.bundle.js?site=mope.io";
    fetch(new Request(_0xe5b994))
      ["then"]((_0x37c8ef) => _0xec97d5(![]))
      ["catch"]((_0x42e075) => _0xec97d5(!![]));
  });
async function _0x8431a0() {
  _0x44d803 = ![];
  const _0x450cc9 = "https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js";
  try {
    await fetch(new Request(_0x450cc9))["catch"]((_0x398e0c) => (_0x44d803 = !![]));
  } catch (_0x2784f4) {
    _0x44d803 = !![];
  } finally {
    console["log"]("AdBlock Enabled: " + _0x44d803);
  }
}
!_0x4857c8 &&
  (document["getElementById"]("xTRbLiXhOoyu_adsbl0ck") ? _0x8431a0() : (_0x44d803 = !![]), console["log"]("ad block enabled:", _0x44d803));

function _0xab3f6f() {
  var _0x3de95e = navigator["userAgent"]["match"](/Chrom(e|ium)\/([0-9]+)\./);
  return _0x3de95e ? parseInt(_0x3de95e[0x2], 0xa) : ![];
}
var _0x40b21c = !_0x4857c8 && _0xab3f6f() && (_0xab3f6f() == 0x54 || _0xab3f6f() == 0x55),
  _0x36b52c = ![];
if (_0x40b21c && !_0x36b52c) {
  console["log"]("slow chrome!");
  var _0x404ba6 = document["getElementById"]("chromebugdiv");
  _0x404ba6 && (_0x404ba6["style"]["display"] = "block");
  var _0x404ba6 = document["getElementById"]("chromebugp");
  _0x404ba6 && (_0x404ba6["innerHTML"] = "Your browser (Chrome V " + _0xab3f6f() + ") has a bug, which can make mope.io laggy!");
  var _0x404ba6 = document["getElementById"]("chromebug_closebut");
  _0x404ba6 &&
    (_0x404ba6["onclick"] = function () {
      var _0x27324c = document["getElementById"]("chromebugdiv");
      if (_0x27324c) _0x27324c["parentNode"]["removeChild"](_0x27324c);
      if (window["localStorage"])
        try {
          window["localStorage"]["setItem"]("chromeBug_closed", !![]);
        } catch (_0x58c3d4) {}
    });
} else {
  var _0x404ba6 = document["getElementById"]("chromebugdiv");
  if (_0x404ba6) _0x404ba6["parentNode"]["removeChild"](_0x404ba6);
}
console["log"]("Chrome version " + _0xab3f6f());
var _0x23b0ff = _0x4080f0(document["location"]["search"]),
  _0xce34c6 = _0x23b0ff["y8BannerModify"] > 0x0;
if (_0x4857c8 || _0xce34c6) {
  var _0x404ba6,
    _0x404ba6 = document["getElementById"]("appsDiv");
  if (_0x404ba6) _0x404ba6["parentNode"]["removeChild"](_0x404ba6);
}
var _0x251e79 = 0x0,
  _0x481756 = 0x0;
if (window["localStorage"]) {
  var _0x27ea49 = window["localStorage"]["getItem"]("lastAdShowT") * 0x1 || 0x0,
    _0x46c3fc = +new Date() - _0x27ea49;
  (_0x481756 = _0x46c3fc > 0x0 ? _0x27ea49 : 0x0),
    (_0x251e79 = window["localStorage"]["getItem"]("gamesSinceAd") * 0x1),
    _0x251e79 < 0x0 && (_0x251e79 = 0x0),
    console["log"]("videoAd: " + _0x251e79 + " games since last ad!");
}
var _0x1207fe = +new Date(),
  _0x305740 = ![],
  _0xc0434f = () =>
    new Promise(async (_0x211e47) => {
      (_0x44d803 = await _0x3e40e2()), _0x211e47(!_0x44d803 && !_0x5b659f);
    }),
  _0x4be67f = !![],
  _0x1c61c3 = function () {
    var _0x45bfd4 = _0x4bfbd4 || location["protocol"] == "file:",
      _0x56b993 = !_0x45bfd4;
    return _0x56b993;
  };
const _0x31576e = () => {
  const _0x4643df = 0x3ac / 0x21c,
    _0x1b5251 = window["innerWidth"] * 0.55;
  return {
    width: Math["round"](_0x1b5251),
    height: Math["round"](_0x1b5251 / _0x4643df),
  };
};

function _0x2365d4() {
  try {
    console["log"]("Refreshing banner ads"), _0x17b890($bus["CONSTANTS"]["AD_SCREEN_LAYOUTS"]["MENU"]);
  } catch (_0x424f05) {
    console["log"]("BANNERADS: error refreshing: " + _0x424f05);
  }
  _0x11c537(), _0x5b53ed(), _0x5c1561();
}

function _0x3f12ed() {
  let _0x521efe = null;
  const { innerWidth: _0x2f2557, innerHeight: _0x9dac6f } = window;
  console["log"]("::: ad-tech detecting dynamic bottom ad :::");
  if (_0x9dac6f >= 0x19e) _0x521efe = $bus["CONSTANTS"]["AD_IDS"]["BOTTOM"]["SMALL"];
  _0x2f2557 > 0x300 && _0x9dac6f >= 0x19e && (_0x521efe = $bus["CONSTANTS"]["AD_IDS"]["BOTTOM"]["SMALL"]);
  if (_0x521efe) console["log"]("::: ad-tech Showing Bottom Ad :::");
  return _0x521efe;
}
const _0x1d8954 = () => {
    return (_0x4857c8 || window["innerWidth"] <= 0x300) && window["innerWidth"] < 0x3e8;
  },
  _0x4800a7 = {},
  _0x34af8e = {};

function _0x44551e(_0x2df926) {
  let _0x3efe66, _0x37cbd3;
  _0x34af8e[_0x2df926] = Date["now"]();
  _0x4800a7[_0x2df926] &&
    (({ el: _0x3efe66, provider: _0x37cbd3 } = _0x4800a7[_0x2df926]),
    (_0x3efe66["style"]["visibility"] = "hidden"),
    (_0x3efe66["style"]["opacity"] = "0"),
    (_0x3efe66["style"]["pointerEvents"] = "none"),
    _0x37cbd3 === $bus["CONSTANTS"]["AD_PROVIDERS"]["ADINPLAY"] &&
      _0x3efe66["parentElement"] &&
      _0x3efe66["parentElement"] !== document["body"] &&
      (_0x3efe66["parentElement"]["removeChild"](_0x3efe66), document["body"]["appendChild"](_0x3efe66)));
  const _0x5ea6bc = document["getElementById"](_0x2df926);
  _0x5ea6bc &&
    _0x5ea6bc !== _0x3efe66 &&
    ((_0x5ea6bc["style"]["visibility"] = "hidden"), (_0x5ea6bc["style"]["opacity"] = "0"), (_0x5ea6bc["style"]["pointerEvents"] = "none")),
    $bus["emit"]($bus["EVENTS"]["HIDE_AD"], _0x2df926);
}
let _0x4bf7b5 = 0x0;

function _0x12be5e(_0x428b8e) {
  const _0x1f3b62 = _0x31dcf5();
  if (_0x1f3b62["includes"](_0x428b8e))
    for (let _0x2ac1ca = 0x0; _0x2ac1ca < _0x1f3b62["length"]; _0x2ac1ca++) {
      const _0x4ca0e3 = _0x1f3b62[_0x2ac1ca];
      if (_0x4ca0e3 !== _0x428b8e && _0x4ca0e3 in _0x4800a7) {
        _0x44551e(_0x4ca0e3);
        break;
      }
    }
}

function _0x31dcf5() {
  return Object["keys"]($bus["CONSTANTS"]["AD_IDS"]["BOTTOM"])["map"]((_0x3993a3) => $bus["CONSTANTS"]["AD_IDS"]["BOTTOM"][_0x3993a3]);
}

function _0x1f8fe1(_0xe3d07a) {
  return _0x31dcf5()["includes"](_0xe3d07a);
}
window["SA_FALLBACK_HANDLER"] = () => {
  _0x111616(adId, ![]);
};

function _0x2d756c(_0x41340e, _0x54cfdd) {
  if (!(_0x41340e in _0x4800a7)) return ![];
  const { el: _0x17a756, ts: _0x329a7c, provider: _0x1bb017 } = _0x4800a7[_0x41340e];
  if (Date["now"]() - _0x329a7c < 0x30d4)
    return (
      $bus["emit"]($bus["EVENTS"]["SHOW_AD_START"], _0x41340e),
      (_0x17a756["style"]["visibility"] = "visible"),
      (_0x17a756["style"]["opacity"] = "1"),
      (_0x17a756["style"]["pointerEvents"] = "auto"),
      $bus["emit"]($bus["EVENTS"]["SHOW_AD_LOADED"], _0x4800a7[_0x41340e]),
      !![]
    );
  return ![];
}

function _0x5d9ded(_0x4ed142, _0x2a69d7, _0x3d6e17) {
  !_0x4800a7[_0x4ed142] && (_0x4800a7[_0x4ed142] = {}),
    console["log"]("RESOLVING AD:", _0x4ed142, _0x2a69d7, _0x3d6e17),
    (_0x4800a7[_0x4ed142]["el"] = _0x2a69d7),
    (_0x4800a7[_0x4ed142]["ts"] = Date["now"]()),
    (_0x4800a7[_0x4ed142]["provider"] = _0x3d6e17),
    (_0x4800a7[_0x4ed142]["adId"] = _0x4ed142),
    (_0x2a69d7["style"]["visibility"] = "visible"),
    (_0x2a69d7["style"]["opacity"] = "1"),
    (_0x2a69d7["style"]["pointerEvents"] = "auto"),
    $bus["emit"]($bus["EVENTS"]["SHOW_AD_LOADED"], _0x4800a7[_0x4ed142]);
}
async function _0x111616(_0xfbd3e1, _0x437a8e) {
  let _0x1925cb = Date["now"]();
  _0x1f8fe1(_0xfbd3e1) && _0x12be5e(_0xfbd3e1);
  if (_0xd9dedb(_0xfbd3e1, _0x1925cb)) return _0x44551e(_0xfbd3e1);
  if (_0x2d756c(_0xfbd3e1, _0x437a8e)) return;
  $bus["emit"]($bus["EVENTS"]["SHOW_AD_START"], _0xfbd3e1);
  let _0x182a7b = ![];
  _0x1925cb = Date["now"]();
  if (_0xd9dedb(_0x1925cb, _0xfbd3e1)) return _0x44551e(_0xfbd3e1);
  else _0x182a7b && _0x5d9ded(_0xfbd3e1, _0x182a7b, $bus["CONSTANTS"]["AD_PROVIDERS"]["ADINPLAY"]);
}

function _0xd9dedb(_0x34a63e, _0xe5a5d1) {
  if (!_0x34af8e[_0x34a63e]) return ![];
  return _0x34af8e[_0x34a63e] > _0xe5a5d1;
}
async function _0x17e184(_0x42440b) {
  const _0x6aaff9 = Date["now"]();
  if (typeof aiptag === "undefined" || !aiptag || !aiptag["cmd"] || !aiptag["cmd"]["display"]) {
    console["error"]("aiptag was undefined return early.");
    return;
  }
  return new Promise((_0x35fec9, _0x362115) => {
    aiptag["cmd"]["display"]["push"](function () {
      if (typeof aipDisplayTag !== "undefined") {
        aipDisplayTag["display"](_0x42440b);
        let _0x339992 = document["getElementById"](_0x42440b);
        return (
          !_0x339992 &&
            _0x4800a7[_0x42440b] &&
            _0x4800a7[_0x42440b]["provider"] === $bus["CONSTANTS"]["AD_PROVIDERS"]["ADINPLAY"] &&
            (_0x339992 = _0x4800a7[_0x42440b]["el"]),
          _0x35fec9(_0x339992)
        );
      } else return console["error"]("Aip display tag was undefined"), _0x35fec9(null);
    });
  });
}

function _0x350b19() {
  window["innerWidth"] > 0x4c4
    ? (_0x111616($bus["CONSTANTS"]["AD_IDS"]["RIGHT"]), _0x111616($bus["CONSTANTS"]["AD_IDS"]["LEFT"]))
    : (_0x44551e($bus["CONSTANTS"]["AD_IDS"]["RIGHT"]), _0x44551e($bus["CONSTANTS"]["AD_IDS"]["LEFT"]));
}
const _0x22baf9 = () => {
    _0x4800a7[$bus["CONSTANTS"]["AD_IDS"]["BOTTOM"]["SMALL"]] && _0x44551e($bus["CONSTANTS"]["AD_IDS"]["BOTTOM"]["SMALL"]),
      _0x4800a7[$bus["CONSTANTS"]["AD_IDS"]["BOTTOM"]["MEDIUM"]] && _0x44551e($bus["CONSTANTS"]["AD_IDS"]["BOTTOM"]["MEDIUM"]),
      _0x4800a7[$bus["CONSTANTS"]["AD_IDS"]["BOTTOM"]["LARGE"]] && _0x44551e($bus["CONSTANTS"]["AD_IDS"]["BOTTOM"]["LARGE"]);
  },
  _0x4d0f3e = () => {
    _0x44551e($bus["CONSTANTS"]["AD_IDS"]["HOME"]);
    const _0x9b9db8 = _0x3f12ed();
    _0x9b9db8 ? _0x111616(_0x9b9db8) : _0x22baf9(),
      _0x1d8954()
        ? _0x44551e($bus["CONSTANTS"]["AD_IDS"]["RIGHT"])
        : window["innerWidth"] > 0x4c4
        ? (_0x111616($bus["CONSTANTS"]["AD_IDS"]["LEFT"]), _0x111616($bus["CONSTANTS"]["AD_IDS"]["RIGHT"]))
        : (_0x44551e($bus["CONSTANTS"]["AD_IDS"]["LEFT"]), _0x44551e($bus["CONSTANTS"]["AD_IDS"]["RIGHT"]));
  },
  _0x41287b = () => {
    console["log"](":;"), _0x111616($bus["CONSTANTS"]["AD_IDS"]["HOME"]), _0x350b19(), _0x22baf9();
  },
  _0x21e5bf = () => {
    const _0x1b0be3 = "enthusiast";
    if (window["egAps"]) {
      const _0xd873d4 = document["querySelectorAll"]('[data-provider="' + _0x1b0be3 + '"]');
      console["log"]("::: ad-tech renderMopeDisplayAds elements :::", _0xd873d4),
        _0xd873d4["forEach"]((_0x460224) => {
          console["log"]("::: ad-tech renderMopeDisplayAds elem :::", _0x460224, _0x460224["id"]),
            _0x460224["id"] &&
              (console["log"](":: ad-tech window.egAps.render([" + _0x460224["id"] + "]) ::"), window["egAps"]["render"]([_0x460224["id"]]));
        });
    }
  },
  _0x17b890 = function (_0x442d05, _0x3fa952) {
    const { ARENA: _0x2495ec, UPGRADE: _0x5aeb50, MENU: _0x29fe07 } = $bus["CONSTANTS"]["AD_SCREEN_LAYOUTS"];
    console["log"]("::: ad-tech: mopeAds() location: " + _0x442d05 + " :::");
    switch (_0x442d05) {
      case _0x5aeb50:
        _0x4d0f3e();
        break;
      case _0x2495ec:
        if (_0x37000d) return;
        _0x44551e($bus["CONSTANTS"]["AD_IDS"]["LEFT"]), _0x4d0f3e();
        break;
      case _0x29fe07:
        if (_0x37000d) return;
        _0x41287b();
        break;
    }
    if (_0x384097 !== _0x442d05 || _0x442d05 === _0x5aeb50) {
      _0x384097 = _0x442d05;
      if (_0x5e556a)
        console["time"](":: ad-tech renderMopeDisplayAds ::"),
          _0x21e5bf(),
          console["timeEnd"](":: ad-tech renderMopeDisplayAds ::"),
          setTimeout(_0x479db0, 0xfa0);
      else
        !_0x5e556a &&
          _0x476200()
            ["then"](() => {
              setTimeout(_0x479db0, 0xfa0);
            })
            ["catch"](() => setTimeout(_0x479db0, 0xfa0));
    }
    !_0x3fa952 && _0x5b53ed();
  };
$bus["on"]($bus["EVENTS"]["UI_PRESS_PLAY"], () => {
  _0xc0434f()["then"]((_0x17825c) => {
    _0x17825c ? _0x5c9dd5() : window["onVideoAdFinished"](![]);
  }),
    _0x44551e($bus["CONSTANTS"]["AD_IDS"]["HOME"]);
});
var _0x50b457 = ![];

function _0x176713(_0x11849f) {}
var _0x236a9d = ![],
  _0x3365c1 = ![],
  _0x4cfe0d = new _0x413af8(0xa, "white");
_0x4cfe0d["setText"]("Connecting..."), (_0x4cfe0d["renderScale"] = 0x1);
var _0x5c9dd5 = async function () {
  console["log"]("::: ad-tech ::: Attempting to play Preroll Video Ad."), $bus["emit"]($bus["EVENTS"]["START_VIDEO_AD"]);
  if (_0x44d803 || _0x5b659f) return;
  _0x5b659f = !![];
  let _0x6540fa = ![];
  setTimeout(() => {
    !_0x6540fa &&
      (console["log"]("::: ad-tech ::: Did not receive preroll ad response from egApp in time (7s)"),
      $bus["emit"]($bus["EVENTS"]["HIDE_VIDEO_AD"]),
      window["onVideoAdFinished"](![]));
  }, 0x1b58),
    $bus["emit"]($bus["EVENTS"]["SHOW_VIDEO_AD"]),
    _0x1b13bd["playVideoAd"]((_0x2768c1) => {
      (_0x6540fa = !![]), console["log"]("::: ad-tech ::: playVideoAd callback hit!", _0x2768c1);
      if (_0x2768c1["event"] === "start") (_0x3365c1 = !![]), $bus["emit"]($bus["EVENTS"]["START_VIDEO_AD"]);
      else {
        if (_0x2768c1["event"] === "skipped" || _0x2768c1["event"] === "empty")
          $bus["emit"]($bus["EVENTS"]["HIDE_VIDEO_AD"]), window["onVideoAdFinished"](![]);
        else _0x2768c1["event"] === "finished" && ($bus["emit"]($bus["EVENTS"]["HIDE_VIDEO_AD"]), window["onVideoAdFinished"](!![]));
      }
    });
};
$bus["on"]($bus["EVENTS"]["REQUEST_INCENTIVIZED_AD"], () => {
  console["log"]("::: iandev ::: Requesting Incentivized Ads."), _0xbec950["playIncentivizedVideoAd"]();
}),
  (window["onVideoAdFinished"] = function (_0x1ee30b) {
    $bus["emit"]($bus["EVENTS"]["END_VIDEO_AD"]), (_0x305740 = ![]), (_0x3365c1 = ![]), (_0x236a9d = ![]), _0x2553b6["focus"]();
    if (_0x1ee30b) {
      (_0x251e79 = 0x0), (_0x481756 = +new Date());
      if (window["localStorage"])
        try {
          window["localStorage"]["setItem"]("lastAdShowT", _0x481756), window["localStorage"]["setItem"]("gamesSinceAd", _0x251e79);
        } catch (_0x158094) {
          console["log"]("localstorage error saving ads");
        }
      else console["log"]("no localstorage, cant save ad nums");
    } else console["log"]("not successful play, will play ad again");
    if (_0x1ee30b && (!_0x37000d || (_0x37000d && _0x226297))) {
      const _0x4c420b = _0x37000d ? $bus["CONSTANTS"]["AD_SCREEN_LAYOUTS"]["UPGRADE"] : $bus["CONSTANTS"]["AD_SCREEN_LAYOUTS"]["MENU"];
      _0x17b890(_0x4c420b), console["log"]("VIDEOADS: Video done (success: " + _0x1ee30b + "), joining game!");
      try {
        console["log"]("::: video ad played joining game :::"), !_0x37000d && _0xff1b09(![]);
      } catch (_0x343ec0) {
        console["error"]("Error joining game after video ad:", _0x343ec0);
      }
    } else {
      if (!_0x37000d || (_0x37000d && _0x226297))
        try {
          console["log"]("::: video ad not played or skipped joining game :::"), !_0x37000d && _0xff1b09(![]);
        } catch (_0x434f58) {
          console["error"]("Error joining game after video ad:", _0x434f58);
        }
    }
  });
var _0x58a2a8 = function (_0x331030, _0xbff055, _0x40c1ee) {
  var _0x5512cf = document["head"] || document["getElementsByTagName"]("head")[0x0],
    _0xc66ab1 = document["createElement"]("script"),
    _0xca7f1f = !![];
  (_0xc66ab1["async"] = "async"),
    (_0xc66ab1["type"] = "text/javascript"),
    (_0xc66ab1["charset"] = "UTF-8"),
    (_0xc66ab1["src"] = _0x331030),
    (_0xc66ab1["onload"] = _0xc66ab1["onreadystatechange"] =
      function () {
        _0xca7f1f &&
          (!_0xc66ab1["readyState"] || /loaded|complete/["test"](_0xc66ab1["readyState"])) &&
          ((_0xca7f1f = ![]), _0xbff055(), (_0xc66ab1["onload"] = _0xc66ab1["onreadystatechange"] = null));
      }),
    _0x5512cf["appendChild"](_0xc66ab1);
};
try {
  _0x3e40e2()["then"]((_0x3f256b) => {
    _0x44d803 = _0x3f256b;
    if (!_0x44d803) _0x476200();
  });
} catch (_0x2643ad) {
  console["error"]("Error initializing ads:", _0x2643ad);
}

function _0x297c16() {
  for (let _0x35eb9d in _0x4800a7) {
    _0x44551e(_0x35eb9d);
  }
  $bus["emit"]($bus["EVENTS"]["HIDE_ALL_ADS"]);
}
const _0x279f22 = function () {
  _0x297c16(), $bus["emit"]($bus["EVENTS"]["HIDE_ANIMAL_CHOICE"]);
};
_0x279f22();
var _0x1c9f50;

function _0x173dc0(_0x530ba9) {
  if (window["WebViewJavascriptBridge"]) return _0x530ba9(WebViewJavascriptBridge);
  if (window["WVJBCallbacks"]) return window["WVJBCallbacks"]["push"](_0x530ba9);
  window["WVJBCallbacks"] = [_0x530ba9];
  if (_0xe2e29) {
    var _0x4e4226 = document["createElement"]("iframe");
    (_0x4e4226["style"]["display"] = "none"),
      (_0x4e4226["src"] = "wvjbscheme://__BRIDGE_LOADED__"),
      document["documentElement"]["appendChild"](_0x4e4226),
      setTimeout(function () {
        document["documentElement"]["removeChild"](_0x4e4226);
      }, 0x0);
  }
}
async function _0x15efc5() {
  return typeof _0x1c9f50 === "undefined" || !_0x1c9f50
    ? new Promise((_0xa09110, _0x4ebd09) => {
        let _0x3259ab = setTimeout(() => {
          return (_0x3259ab = null), _0xa09110(null);
        }, 0x61a8);
        _0x173dc0((_0x2400c0) => {
          if (_0x3259ab === null) return;
          return clearTimeout(_0x3259ab), (_0x3259ab = null), (_0x1c9f50 = _0x2400c0), _0xa09110(_0x2400c0);
        });
      })
    : _0x1c9f50;
}
_0x4857c8 &&
  (console["log"]("Trying to setup the javascript ios bridge..."),
  _0x173dc0(function (_0x396f7b) {
    console["log"]("Successfully set up bridge!"),
      (_0x1c9f50 = _0x396f7b),
      setTimeout(() => {
        _0x396f7b["callHandler"]("client-bridge-ready"), _0x396f7b["callHandler"]("app-data", JSON["stringify"]($config["mobileAppData"]));
      }, 0x0);
  }));
async function _0xbe7936() {
  console["log"]("showing mobile ad......");
  const _0x11897a = await _0x15efc5();
  !_0x11897a ? console["error"]("Could not find mobile native bridge.") : _0x11897a["callHandler"]("show-ad");
}
var _0x519e81 = !!navigator["userAgent"]["platform"] && /iPad|iPhone|iPod/["test"](navigator["userAgent"]["platform"]),
  _0x117df7 = navigator["userAgent"]["toLowerCase"]()["indexOf"]("android") > -0x1;
if ((_0x519e81 || _0x117df7) && !_0x4857c8) {
  var _0x49f911 = ![];
  if (window["localStorage"]) {
    _0x49f911 = window["localStorage"]["getItem"]("oldVisitor") > 0x0;
    try {
      window["localStorage"]["setItem"]("oldVisitor", 0x1);
    } catch (_0x18c1a8) {
      _0x49f911 = !![];
    }
  }
  if (!_0x49f911) {
    if (_0x519e81) window["location"]["href"] = "https://itunes.apple.com/us/app/mope.io/id1086471119?ls=1&mt=8";
  } else {
  }
}
console["log"]("is mobile app:", _0x4857c8),
  _0x4857c8 &&
    (async () => {
      console["log"]("setting up mobile shop!");
      const _0x37a733 = await _0x15efc5();
      if (!_0x37a733) {
        console["error"]("Did not find a native bridge for mobile app.");
        return;
      }
      let _0x325443 = null;
      _0x37a733["registerHandler"]("iap-data-failed", (_0x56e13e) => {
        console["error"]("Error when fetching iap data.. error:", _0x56e13e);
      }),
        _0x37a733["registerHandler"]("iap-data", (_0x8add7f) => {
          const _0x57df7b = JSON["parse"](_0x8add7f)["map"]((_0xf06bad) => {
            return {
              coins: _0xf06bad["title"],
              id: _0xf06bad["id"],
              description: _0xf06bad["description"],
              price: _0xf06bad["price"],
            };
          });
          $bus["emit"]($bus["EVENTS"]["RECEIVED_IN_APP_PURCHASE_DATA"], _0x57df7b);
        }),
        _0x37a733["registerHandler"]("iap-success", (_0x49d459) => {
          _0x49d459 = typeof _0x49d459 === "string" ? JSON["parse"](_0x49d459) : _0x49d459;
          const _0x127f19 = _0xe2e29 ? "apple" : "google";
          _0x325443 === _0x49d459["productId"] && $bus["emit"]($bus["EVENTS"]["IN_APP_PURCHASE_GO_TO_PROCESSING"], _0x325443);
          const _0x5b8b57 = (_0x56c055) => {
              _0x325443 === _0x49d459["productId"] &&
                ($bus["emit"]($bus["EVENTS"]["IN_APP_PURCHASE_FAILED"], {
                  itemId: _0x325443,
                  error: _0x56c055,
                }),
                (_0x325443 = null),
                _0x1e26e6("Error when processing purchase. Contact an admin if you did not receive your coins.", "error"));
            },
            _0x486f68 = async () => {
              _0x325443 === _0x49d459["productId"] &&
                (_0x1e26e6("Successfully purchased product!", "success"),
                await _0x4599e4(),
                $bus["emit"]($bus["EVENTS"]["IN_APP_PURCHASE_SUCCESS"], _0x325443),
                (_0x325443 = null));
            };
          $["ajax"]({
            url: _0x18e6e5 + "/processInAppPurchase",
            type: "POST",
            dataType: "json",
            data: {
              userId: _0x4410e4,
              passwordToken: _0x45944e,
              service: _0x127f19,
              ..._0x49d459,
            },
            success: function (_0x547c7d) {
              console["log"]("/processInAppPurchase success response", _0x547c7d, _0x547c7d["success"]),
                _0x547c7d["success"] ? _0x486f68() : _0x5b8b57(_0x547c7d["error"]);
            },
            error: function (_0x5a5d79) {
              console["log"]("/processInAppPurchase error response", _0x5a5d79, _0x5a5d79["success"], _0x5a5d79["error"]),
                _0x5b8b57(_0x5a5d79["error"]);
            },
          });
        }),
        _0x37a733["registerHandler"]("iap-deferred", (_0x1fa68a) => {
          console["error"]("iap for product:", _0x1fa68a, "deferred"),
            $bus["emit"]($bus["EVENTS"]["IN_APP_PURCHASE_FAILED"], {
              itemId: _0x325443,
              error: "Deferred purchase.",
              deferred: !![],
            }),
            (_0x325443 = null);
        }),
        _0x37a733["registerHandler"]("iap-failed", (_0x35a49b) => {
          ((_0x325443 && _0x35a49b == _0x325443) || !_0x35a49b) &&
            (_0x35a49b =
              "There was an error while purchasing the current item. Reload the app and try again or if the problem persists contact an admin."),
            $bus["emit"]($bus["EVENTS"]["IN_APP_PURCHASE_FAILED"], {
              itemId: _0x325443,
              error: _0x35a49b,
            }),
            (_0x325443 = null);
        }),
        $bus["on"]($bus["EVENTS"]["UI_SELECTED_IN_APP_PURCHASE_ITEM"], (_0x48e756) => {
          if (_0x325443 !== null)
            return $bus["emit"]($bus["EVENTS"]["IN_APP_PURCHASE_FAILED"], {
              itemId: _0x48e756,
              error: "Wait until the current purchasing item is complete.",
            });
          (_0x325443 = _0x48e756), _0x37a733["callHandler"]("iap-purchase", _0x48e756);
        });
    })();
var _0x59d828 = ["Team Mode", "Wild Mope"],
  _0x24e3e0 = ![],
  _0x3aa4ff = ![],
  _0x32a0d1,
  _0x579cf7 = [],
  _0x15e449 = null;
let _0x557807 = null;
var _0x4f3ecc = null,
  _0x5c25c2 = {};

function _0x2d4305(_0x2e9922) {
  return _0x2e9922 in _0x5c25c2 ? Math["round"](_0x5c25c2[_0x2e9922]) : "?";
}
var _0x3c1518 = function (_0x2cefd9) {
    this["serverObj"] = _0x2cefd9;
    var _0x319979 = window["location"]["protocol"] === "https:" ? "wss://" : "ws://",
      _0x34d3f4 = window["location"]["protocol"] === "https:" ? 0x1bb : 0x50,
      _0x3b119d = _0x319979 + this["serverObj"]["serverConnURL"] + ":" + _0x34d3f4;
    (this["testWs"] = new WebSocket(_0x3b119d)), (this["startT"] = +new Date()), (this["testWs"]["binaryType"] = "arraybuffer");
    var _0x13ba60 = this;
    (this["pingsRec"] = 0x0),
      (this["pingsDelayMsTot"] = 0x0),
      (this["testWs"]["onopen"] = function () {
        _0x13ba60["sendPing"]();
      }),
      (this["sendPing"] = function () {
        var _0x587533 = new _0x5906b0(0x1);
        _0x587533["writeUInt8"](0xff), _0x13ba60["testWs"]["send"](_0x587533["dataView"]["buffer"]), (this["startT"] = +new Date());
      }),
      (this["testWs"]["onmessage"] = function (_0x51d8b7) {
        var _0x51d8b7 = new _0x28b8c3(new DataView(_0x51d8b7["data"]));
        if (_0x51d8b7["readUInt8"]() == 0xff) {
          var _0x49bcfb = +new Date() - _0x13ba60["startT"];
          (_0x13ba60["pingsRec"] += 0x1),
            (_0x13ba60["pingsDelayMsTot"] += _0x49bcfb),
            _0x13ba60["pingsRec"] >= 0x4
              ? ((_0x13ba60["serverObj"]["ping"] = _0x13ba60["pingsDelayMsTot"] / _0x13ba60["pingsRec"]),
                (_0x5c25c2[_0x13ba60["serverObj"]["region"]] = _0x13ba60["serverObj"]["ping"]),
                _0x13ba60["testWs"]["close"](),
                _0x3bc4bf(_0x13ba60))
              : _0x13ba60["sendPing"]();
        }
      }),
      (this["testWs"]["onerror"] = function (_0x3d1b2e) {
        console["log"]("TestWS: error connecting to server " + _0x13ba60["serverObj"]["name"] + " IP " + _0x13ba60["serverObj"]["ip"] + _0x3d1b2e);
      }),
      (this["testWs"]["onclose"] = function (_0x1358ba) {});
  },
  _0x3b6284 = 0x0;

function _0x4e0f04(_0x1bf301) {
  if (_0x24e3e0) return;
  (_0x3b6284 = 0x0), (_0x4f3ecc = _0x1bf301), (_0x24e3e0 = !![]);
  for (var _0x3e34c7 in _0x563e78) {
    if (_0x563e78["hasOwnProperty"](_0x3e34c7) && _0x563e78[_0x3e34c7]["length"] > 0x0 && !_0x517fdd(_0x3e34c7)) {
      console["log"]("main server: ", _0x563e78[_0x3e34c7][0x0]);
      var _0x3e8136 = _0x563e78[_0x3e34c7][0x0];
      _0x579cf7["push"](new _0x3c1518(_0x3e8136));
    }
  }
  _0x32a0d1 = setTimeout(function () {
    if (_0x3b6284 == 0x0)
      console["log"]("Doing slower ping test..."),
        (_0x32a0d1 = setTimeout(function () {
          for (var _0x329ba6 = 0x0; _0x329ba6 < _0x579cf7["length"]; _0x329ba6++) {
            _0x579cf7[_0x329ba6]["testWs"]["close"]();
          }
          _0x283355();
        }, 0x1388));
    else {
      for (var _0x5610fa = 0x0; _0x5610fa < _0x579cf7["length"]; _0x5610fa++) {
        _0x579cf7[_0x5610fa]["testWs"]["close"]();
      }
      _0x283355();
    }
  }, 0x4b0);
}

function _0x4e8787(_0x5520a8) {}

function _0x3bc4bf(_0x5add34) {
  console["log"]("::: ping test | aTest :::", _0x5add34);
  if (_0x5add34["serverObj"]["gm"] == 0x0 && (!_0x15e449 || _0x5add34["serverObj"]["ping"] < _0x15e449["ping"])) _0x15e449 = _0x5add34["serverObj"];
  else {
    if (_0x5add34["serverObj"]["gm"] == 0x3 && (!_0x557807 || _0x5add34["serverObj"]["ping"] < _0x557807["ping"])) _0x557807 = _0x5add34["serverObj"];
  }
  var _0x229905 = _0x579cf7["indexOf"](_0x5add34);
  -0x1 != _0x229905 && _0x579cf7["splice"](_0x229905, 0x1);
  _0x3b6284 += 0x1;
  if (_0x579cf7["length"] == 0x0) {
    if (_0x32a0d1) clearTimeout(_0x32a0d1);
    _0x283355();
  }
}

function _0x283355() {
  _0x24e3e0 && (_0x3aa4ff = !![]);
  _0x24e3e0 = ![];
  if (_0x15e449) console["log"]("::: ping test | ffa result :::", _0x15e449["region"], _0x15e449["ping"]);
  if (_0x557807) console["log"]("::: ping test | team result :::", _0x557807["region"], _0x557807["ping"]);
  if (_0x4c5b8b == 0x0 && _0x15e449) _0x2591c1 = _0x15e449["region"];
  else _0x4c5b8b == 0x3 && _0x557807 && (_0x2591c1 = _0x557807["region"]);
  console["log"]("::: ping test result | curRegion :::", _0x2591c1), _0x4f3ecc(), $bus["emit"]($bus["EVENTS"]["PING_TEST_FINISH"], _0x5c25c2);
}

function _0x517fdd(_0x5ac041) {
  for (var _0x441a7b = 0x0; _0x441a7b <= _0x59d828["length"]; _0x441a7b++) {
    if (_0x59d828[_0x441a7b] == _0x5ac041) return !![];
  }
  return ![];
}
var _0x38f8c8 = "...",
  _0x2ace4f = "mope.io",
  _0x5b0c28 = 0x0,
  _0x204989 = 0x0,
  _0x4c4138 = _0x659012,
  _0x2de4bf = 0x0,
  _0x377b66 = 0x0,
  _0x37000d = ![],
  _0x588326 = ![],
  _0x200eed = ![],
  _0x15d74e = ![],
  _0x5820aa = +new Date(),
  _0x3bea8f = ![];
let _0x26539c = ![];
var _0x290e25 = ![],
  _0x5ebbfd = {},
  _0x4c5b8b = 0x0,
  _0x45be38 = 0x0,
  _0x1fca8d = 0x26326,
  _0x2c674b = [],
  _0x555be1 = [],
  _0x563e78 = {};

function _0x393a97(_0x560860) {
  _0x555be1["push"](_0x560860), (_0x563e78[_0x560860] = []);
}
_0x5b1b57["prototype"] = {
  name: "Server",
  ip: "0.0.0.0",
  serverConnURL: "0.0.0.0",
  region: "",
  playersCount: -0x2,
  gameMode: 0x0,
  BR_waitingForPlayers: ![],
  ping: 0x2710,
  domOptionIndex: 0x0,
  getServerListString: function () {
    var _0x1ffef3 = "";
    if (this["gameMode"] == 0x2) _0x1ffef3 = this["BR_waitingForPlayers"] ? " -STARTING NEW GAME" : " -GAME IN PROGRESS";
    var _0x189db0 = this["playersCount"] < 0x0 ? "..." : this["playersCount"],
      _0x5a50f5 = this["name"] + " [" + _0x189db0 + " players " + (this["playersCount"] >= _0x1f54e8 ? "-FULL!" : "") + "]" + _0x1ffef3;
    return _0x5a50f5;
  },
};

function _0x5b1b57(_0x117b31, _0x41637d, _0x20df5f, _0x2b8f95) {
  (this["name"] = _0x117b31), (this["ip"] = _0x41637d), (this["serverConnURL"] = _0x41637d), (this["region"] = _0x20df5f), (this["gm"] = _0x2b8f95);
}

function _0x235a70(_0x281d38, _0x5a72ef, _0x25a52f, _0x527c6 = 0x0) {
  var _0x3192a1 = new _0x5b1b57(_0x281d38, _0x5a72ef, _0x25a52f, _0x527c6);
  _0x2c674b["push"](_0x3192a1);
  if (!(_0x25a52f in _0x563e78)) _0x393a97(_0x25a52f);
  return _0x563e78[_0x25a52f]["push"](_0x3192a1), _0x3192a1;
}
const _0xc388d8 = function () {
  (_0x2c674b = []),
    (_0x555be1 = []),
    (_0x563e78 = {}),
    $config["gameServers"]["forEach"]((_0x191319) => {
      console["log"]("gameserver: ", _0x191319), _0x235a70(_0x191319["name"], _0x191319["url"], _0x191319["region"], _0x191319["gm"]);
    });
};
_0xc388d8(),
  $bus["emit"]($bus["EVENTS"]["SET_SERVER_LIST"], [..._0x2c674b]),
  $bus["emit"]($bus["EVENTS"]["SET_GAME_MODES"], [...window["$config"]["gameModes"]]);
var _0x2591c1 = _0x4bfbd4 ? _0x555be1[0x0] : _0x555be1[_0x30228f(0x0, Math["max"](0x0, _0x555be1["length"] - 0x1 - 0x1))],
  _0x3ab380 = _0x563e78[_0x2591c1][0x0],
  _0x2591c1 = _0x3ab380["region"],
  _0x275eae = _0x2718a7 ? 0x384 : 0x190,
  _0x1f54e8 = _0x2718a7 ? 0x3e8 : 0x1f4;

function _0x4980cd() {
  return _0x4247cc && _0x4247cc["ws"] && _0x4247cc["ws"]["readyState"] === WebSocket["OPEN"];
}

function _0xb4d17c(_0x5985f5) {
  if (_0x4bec48)
    setTimeout(function () {
      if (_0x4980cd()) _0x4247cc["ws"]["send"](_0x5985f5["dataView"]["buffer"]);
    }, 0x1);
  else {
    if (_0x4980cd()) _0x4247cc["ws"]["send"](_0x5985f5["dataView"]["buffer"]);
  }
}

function _0x5ca23c() {
  $bus["emit"]($bus["EVENTS"]["JOINED_GAME"], {
    gameMode: _0x3a1189,
    gameState: _0x4e591f,
    nPlayers: _0x4d2768,
    playersOnlTXT: _0x1ad1ae,
    serverVer: _0x45be38,
    mopeSeasonID: _0x434eda,
  });
}

function _0xff1b09(_0x3b1224) {
  window.test = _0x4247cc;
  !_0x32740c
    ? (_0x4247cc["playGame"](_0x2ace4f, _0x645c5, _0x645c5), $bus["emit"]($bus["EVENTS"]["STARTED_GAME"]))
    : console["log"]("### PLAYER IS IN SPECTATE MODE ###");
}
const _0x117e17 = new _0x2ab92b($config["gameServers"]);
let _0x4247cc = null;
const _0x4507cb = () => {
    _0x2976ad();
  },
  _0x3aa6ba = (_0x599846) => {
    const { success: _0x50251e } = _0x599846;
    if (_0x50251e) {
      const { serverInfo: _0x484b81 } = _0x599846;
      if (_0x484b81["sessionId"]) _0x588326 = !![];
      (_0x3a1189 = _0x484b81["gm"]), _0xe5f251(), (_0x434eda = _0x484b81["season"]), _0x1dc834();
    }
  },
  _0x372524 = ({ gameWidth: _0x246b1a, gameHeight: _0x53d1fb, camX: _0x23c15e, camY: _0x3f3a34, camZoom: _0x5c5254 }) => {
    (_0x2c6299 = _0x246b1a),
      (_0x27ef2a = _0x53d1fb),
      (_0x36a239 = _0x3a0d4b = _0x9714ca = _0x23c15e / 0x4),
      (_0x80b3e7 = _0x5ce546 = _0x24a18f = _0x3f3a34 / 0x4),
      (camzoom_n = _0x5c5254 / 0x3e8),
      (_0x39fa27 = camzoom_n * 1.2),
      $bus["emit"]($bus["EVENTS"]["JOINED_GAME"], {});
  },
  _0x302782 = ({ isSpectator: _0x5452db, timeout: _0x31a02a, upgradeLevel: _0x399693, animalChoices: _0x276e8c }) => {
    const _0x23c8e9 = _0x5452db;
    (_0x226297 = !![]),
      (_0x2fff76 = _0x399693),
      (_0xaf959c = 0x0),
      (_0x5dd63b = []),
      (_0x5d84a7 = _0x23c8e9),
      (_0x200343 = +new Date()),
      (_0x4ed012 = _0x200343 + 0x3e8 * _0x31a02a),
      $bus["emit"]($bus["EVENTS"]["ANIMAL_CHOICE_START"], [..._0x276e8c]),
      _0x17b890($bus["CONSTANTS"]["AD_SCREEN_LAYOUTS"]["UPGRADE"]);
  },
  _0x2f8d23 = (_0x93bb5a) => {
    const { choiceIndex: _0x29087c } = _0x93bb5a;
    _0x4247cc["selectAnimal"](_0x29087c);
  },
  _0x51e87d = async (_0x283ef9) => {
    try {
      await _0x283ef9["runPingTests"]();
      const _0x15c41f = _0x283ef9["sortByPing"]({
          filterBy: "gameMode",
          gameMode: _0x4c5b8b,
        }),
        _0x393349 = _0x15c41f[0x0];
      return _0x393349;
    } catch (_0x3b67ff) {
      return console["error"]("::: findLowestPingServer ERROR :::", _0x3b67ff), null;
    }
  },
  _0x255163 = () => {
    (_0x4247cc["serverInfo"] = _0x4cfe42),
      _0x4247cc["connect"](),
      _0x4247cc["ws"]["addEventListener"]("message", (_0x3f2af3) => {
        const _0x3025c8 = new DataView(_0x3f2af3["data"]);
        _0x1b3c9e(_0x3025c8);
      });
  },
  _0x19ef98 = (_0x364b7d) => {
    (_0x4247cc = new _0x2a1727({
      serverInfo: _0x364b7d,
    })),
      $bus["emit"]($bus["EVENTS"]["DISABLE_PLAY_BUTTON"]),
      $bus["emit"]($bus["EVENTS"]["DISABLE_SERVER_CONTROLS"]),
      _0x4247cc["emitter"]["subscribe"](_0x1298b2["FirstConnect"], _0x4507cb),
      _0x4247cc["emitter"]["subscribe"](_0x1298b2["SpectateClient"], _0x3aa6ba),
      _0x4247cc["emitter"]["subscribe"](_0x1298b2["ClientResize"], _0x372524),
      _0x4247cc["emitter"]["subscribe"](_0x1298b2["SelectAnimal"], _0x302782),
      _0x4247cc["emitter"]["subscribe"]("TestReconnect", _0x255163),
      _0x4247cc["connect"](),
      _0x4247cc["ws"]["addEventListener"]("message", (_0x325105) => {
        const _0x2cb155 = new DataView(_0x325105["data"]);
        _0x1b3c9e(_0x2cb155);
      }),
      (_0x3ab380 = _0x364b7d),
      $bus["emit"]($bus["EVENTS"]["SERVER_SET"], _0x3ab380);
  },
  _0x53d617 = (_0x4b4cf7) => {
    (_0x4247cc["gameDisconnected"] = !![]), _0x4247cc["disconnect"](), _0x19ef98(_0x4b4cf7);
  },
  _0xb423ae = async () => {
    const _0x489ed0 = await _0x51e87d(_0x117e17);
    _0x489ed0 && _0x19ef98(_0x489ed0);
  };
$bus["on"]($bus["EVENTS"]["UI_START_SERVER_SELECT"], (_0x585ce4) => {
  _0x566851();
}),
  $bus["on"]($bus["EVENTS"]["UI_SELECT_GAMEMODE"], async (_0x344e61) => {
    $bus["emit"]($bus["EVENTS"]["DISABLE_PLAY_BUTTON"]), $bus["emit"]($bus["EVENTS"]["DISABLE_SERVER_CONTROLS"]), (_0x4c5b8b = _0x344e61);
    const _0x30b38f = await _0x51e87d(_0x117e17);
    _0x53d617(_0x30b38f);
  }),
  $bus["on"]($bus["EVENTS"]["UI_SELECT_SERVER"], (_0x565e6f) => {
    const _0x49b13f = _0x117e17["getServerByName"](_0x565e6f);
    _0x49b13f && ((_0x3ab380 = _0x49b13f), _0x53d617(_0x49b13f), $bus["emit"]($bus["EVENTS"]["SERVER_SET"], _0x49b13f));
  }),
  $bus["on"]($bus["EVENTS"]["UI_CHOSE_ANIMAL"], _0x2f8d23);
var _0xe2809b = null,
  _0x7cc9df = ![],
  _0x198bbe = ![],
  _0x16bdf9 = 0x0;

function _0x1b3c9e(_0x1f2e64) {
  var _0x438993 = new _0x28b8c3(_0x1f2e64),
    _0x5bf7f0 = _0x438993["readUInt8"]();
  switch (_0x5bf7f0) {
    case _0x296afd:
      {
        var _0x151c3a = _0x438993["readString"]();
        if (_0x151c3a == null || _0x151c3a == "") _0x151c3a = "Provide a reason";
        var _0x30f661 = prompt(_0x151c3a);
        if (_0x30f661 != null) {
          var _0xe71c2c = _0x2fadab(_0x30f661)["length"] + 0x3,
            _0xe02ca5 = new _0x5906b0(_0xe71c2c);
          _0xe02ca5["writeUInt8"](_0x296afd), _0xe02ca5["writeString"](_0x30f661), _0xb4d17c(_0xe02ca5);
        }
      }
      break;
    case _0x45d71f:
      {
        console["log"]("Msg_sendLoginCred"), (_0x456cda = !![]), _0x51b124["loadData"]();
      }
      break;
    case _0x30cf7f:
      {
        console["log"]("Msg_client_loadUserData"), _0x2f3261();
      }
      break;
    case _0x2413b8:
      {
        if (_0x11b99a != null) _0x11b99a["handleMessage"](_0x438993);
      }
      break;
    case 0x68: {
      console["log"]("muilink");
      var _0x3f4254 = _0x438993["readString"]();
      location["href"] = _0x3f4254;
      break;
    }
    case 0x69: {
      console["log"]("------- EXTRA ANIMAL DATA --------");
      {
        var _0x4bd8ef = [],
          _0x2e7548 = _0x438993["readUInt16"]();
        for (ai = 0x0; ai < _0x2e7548; ai++) {
          var _0x979247 = _0x438993["readString"](),
            _0x2e9718 = JSON["parse"](_0x979247);
          (_0x2e9718 = _0x556bba(_0x2e9718)), _0x4bd8ef["push"](_0x2e9718);
        }
        console["log"](JSON["stringify"](_0x4bd8ef));
      }
      console["log"]("------- EXTRA ANIMAL DATA --------");
      break;
    }
    case _0x38fc1c:
      _0x49b108 = _0xa6c6e9["create"](_0x438993);
      break;
    case _0x1d9e75:
      {
        console["log"]("MsgPlayerAliveInGame"),
          _0x279f22(),
          _0x98c3df(![]),
          console["log"]("You spawned alive ingame!"),
          (_0x37000d = !![]),
          _0x3afa7b(_0x3bf754),
          (_0x251e79 += 0x1),
          console["log"](_0x251e79 + " games since adinplay");
        if (window["localStorage"])
          try {
            window["localStorage"]["setItem"]("gamesSinceAd", _0x251e79);
          } catch (_0x582863) {}
        if (!_0x4857c8)
          window["onbeforeunload"] = function (_0x348434) {
            return "You're alive in a game, close mope.io?";
          };
      }
      break;
    case 0x66:
      console["log"]("msg 102");
      var _0x49d140 = _0x438993["readUInt8"](),
        _0x2e19f2 = _0x438993["readUInt8"]();
      _0x98c3df(!![]);
      break;
    case _0xea07f9:
      $bus["emit"]($bus["EVENTS"]["FINISH_SOCIAL_AUTHENTICATION"]),
        console["log"]("::: iandev ::: Msg_readyToPlay"),
        setTimeout(() => {
          $bus["emit"]($bus["EVENTS"]["ENABLE_PLAY_BUTTON"]), $bus["emit"]($bus["EVENTS"]["ENABLE_SERVER_CONTROLS"]);
        }, 0x3e8),
        console["log"]("Msg_readyToPlay");
      break;
    case _0x2e005c:
      console["log"]("Msg_adblockCheckCheck");
      try {
        var _0x27f4e0 = _0x438993["readUInt16"](),
          _0x52d06e = _0x438993["readString"]();
        _0x19b8a5(_0x52d06e, _0x27f4e0);
      } catch (_0x243b4d) {}
      break;
    case _0x5d7491:
      if (_0x3a1189 != _0xc95c89) {
        var _0x41d2db = _0x438993["readUInt16"](),
          _0x18a4a7 = _0x438993["readUInt8"]();
        lbData = [];
        for (i = 0x0; i < _0x18a4a7; ++i) {
          var _0x588552 = {
            rank: _0x438993["readUInt16"](),
            name: _0x438993["readString"](),
            score: _0x438993["readUInt32"](),
          };
          lbData["push"](_0x588552);
        }
        if (_0x36622f) _0xcd5b8b(lbData, 0x0, _0x41d2db);
      }
      break;
    case _0x2649fd:
      {
        (_0x4d2768 = _0x438993["readUInt16"]()),
          (_0x43b61f = _0x438993["readUInt16"]()),
          _0x3a1189 == _0x462ab4 &&
            ((_0x3d957e = _0x438993["readUInt32"]()), (_0x1a5a6e = _0x438993["readUInt32"]()), (_0x28c426 = _0x438993["readUInt32"]())),
          _0x1eb893 && _0x1eb893["setPlayersCount"](_0x4d2768, _0x43b61f);
      }
      break;
    case _0x2f49e9:
      try {
        var _0x52d06e = _0x438993["readString"]();
        _0xd369bc(_0x52d06e, "");
      } catch (_0x2117a8) {}
      break;
    case _0x121f50:
      try {
        var _0x27f4e0 = _0x438993["readUInt32"](),
          _0x52d06e = _0x438993["readString"]();
        _0x2a6369(_0x52d06e, _0x27f4e0, "");
      } catch (_0x2102e1) {}
      break;
    case _0x474a3d:
      try {
        _0x95becd();
      } catch (_0x193e81) {
        console["log"]("Err in recap msg");
      }
      break;
    case _0x3f99b5:
      try {
        var _0x5db129 = _0x438993["readString"](),
          _0x3f348e = JSON["parse"](_0x5db129),
          _0x54aea2 = "";
        _0x3f348e["forEach"](function (_0x391273, _0x502643) {
          var _0x58dca9 = "";
          (_0x58dca9 += "<div class='pid' style='float:left; width:100px; text-align:right;'>" + _0x391273["pid"] + "</div>"),
            (_0x58dca9 += "<div class='nick'  style='float:left; width:200px; text-align:left;'>" + _0x391273["nick"] + "</div>"),
            (_0x54aea2 += "<div class='player'>" + _0x58dca9 + "</div>");
        }),
          $("body .playerInfo")["remove"](),
          $("body")["append"](
            $(
              "<div class='playerInfo' style='    background: #00000050;position: fixed;width: 350px;top: 10px;left: 10px;color: white;'>" +
                _0x54aea2 +
                "</div>"
            )
          );
      } catch (_0x17f9b7) {}
      break;
    case _0x3980bf:
      {
        $bus["emit"]($bus["EVENTS"]["HIDE_ALL_ADS"]);
        var _0x192424 = _0x438993["readUInt8"](),
          _0x24ef29 = _0x438993["readUInt8"](),
          _0x3a8a83 = _0x438993["readUInt8"](),
          _0x427c63 = _0x438993["readUInt8"](),
          _0x3d331 = _0x427c63 == 0x0;
        (_0x9aae34 = _0x438993["readUInt8"]()), (_0x188601 = null), (_0x204989 = _0x438993["readUInt32"]()), _0x3b2657(_0x438993["readUInt32"]());
        var _0x2d2a01 = _0x17bf26["createGameObjOfOType"](_0x3fb3b2, _0x192424);
        (_0x2d2a01["animalType"] = _0x192424), (_0x2d2a01["animalSpecies"] = _0x24ef29), (_0x2d2a01["animalSubSpecies"] = _0x3a8a83);
        var _0x3cd1d6 = _0x2d2a01["animalInfo"]();
        const _0x592eda = _0x351d9a["find"]((_0x1d50f6) => _0x1d50f6["anAniT"] == _0x192424 && _0x1d50f6["species"] == _0x24ef29);
        var _0x155bef = _0x3cd1d6["season"] ? _0x3cd1d6["season"] : 0x2;
        const _0x3739cb = _0x592eda || {
          abilities: _0x5369e8(_0x2d2a01["getAbilityInfo"]()),
          itemName: _0x3cd1d6["aniName"],
          name: _0x3cd1d6["aniName"],
          anAniT: _0x192424,
          species: _0x24ef29,
          subSpecies: _0x3a8a83,
          isBought: !![],
          shopImage: "assets/s/" + _0x155bef + "/skins/" + _0x3cd1d6["skinName"] + ".png",
        };
        $bus["emit"]($bus["EVENTS"]["ANIMAL_CHOICE_CONFIRMED"], _0x3739cb);
        _0x427c63 != 0x2 &&
          ((_0x3661c9 = _0x3d331 ? "You downgraded to " + _0x3cd1d6["aniName"] + "! \x0aDont lose too much xp!" : _0x3cd1d6["upgradeText"]),
          (_0x22c01a = "white"),
          (_0x44b5d9 = +new Date() + 0x2328));
        !_0x462c3e &&
          ((_0x462c3e = !![]),
          (_0x55aa30 = Array["apply"](null, new Array(0x32))["map"](Number["prototype"]["valueOf"], 0x0)),
          (_0x5c622f = Array["apply"](null, new Array(0x32))["map"](Number["prototype"]["valueOf"], 0x0)),
          (_0x416480 = Array["apply"](null, new Array(0x32))["map"](Number["prototype"]["valueOf"], 0x0)),
          (_0x2cf613 = Array["apply"](null, new Array(0x32))["map"](Number["prototype"]["valueOf"], 0x0)));
        _0x55aa30 = Array["apply"](null, new Array(0x32))["map"](Number["prototype"]["valueOf"], 0x0);
        var _0x1102ad = _0x438993["readUInt8"]();
        for (var _0x54a5e8 = 0x0; _0x54a5e8 < _0x1102ad; _0x54a5e8++) {
          _0x55aa30[_0x438993["readUInt8"]() - 0x1] = 0x1;
        }
        var _0x3e7785 = _0x5c622f;
        _0x5c622f = Array["apply"](null, new Array(0x32))["map"](Number["prototype"]["valueOf"], 0x0);
        var _0x1102ad = _0x438993["readUInt8"]();
        for (var _0x54a5e8 = 0x0; _0x54a5e8 < _0x1102ad; _0x54a5e8++) {
          var _0x38ba3f = _0x438993["readUInt8"]();
          _0x5c622f[_0x38ba3f - 0x1] = 0x1;
        }
        _0x416480 = Array["apply"](null, new Array(0x32))["map"](Number["prototype"]["valueOf"], 0x0);
        var _0x1102ad = _0x438993["readUInt8"]();
        for (var _0x54a5e8 = 0x0; _0x54a5e8 < _0x1102ad; _0x54a5e8++) {
          _0x416480[_0x438993["readUInt8"]() - 0x1] = 0x1;
        }
        var _0x1c3136 = _0x2cf613;
        _0x2cf613 = Array["apply"](null, new Array(0x32))["map"](Number["prototype"]["valueOf"], 0x0);
        var _0x1102ad = _0x438993["readUInt8"]();
        for (var _0x54a5e8 = 0x0; _0x54a5e8 < _0x1102ad; _0x54a5e8++) {
          _0x2cf613[_0x438993["readUInt8"]() - 0x1] = 0x1;
        }
        (_0x4c5f18 = _0x192424 == _0x659012 || _0x192424 == _0x596a1b || _0x192424 == _0xbd9993 || _0x192424 == _0x21c202),
          (_0x13c4cb = +new Date() + 0x2328),
          (_0x40013a = 0x0),
          (_0x226297 = ![]);
        if (_0x11b99a != null) _0x11b99a["setPlayer"]();
      }
      break;
    case _0x534aa9:
      if (_0x11b99a) _0x11b99a["msgDisplayPlayersOnMiniMap"](_0x438993);
      break;
    case _0x307324:
      _0x4cdfaf(_0x438993);
      break;
    case _0x3a7e64:
      {
        var _0x268d66 = _0x438993["readUInt8"](),
          _0x41c271 = _0x438993["readUInt32"](),
          _0x451100 = _0x438993["readString"](),
          _0x378658 = localStorage["getItem"]("times_shown_tutorial");
        if (_0x378658) {
          const _0xd1597d = parseInt(_0x378658);
          localStorage["setItem"]("times_shown_tutorial", _0xd1597d < 0x3 ? _0xd1597d + 0x1 : _0xd1597d);
        } else localStorage["setItem"]("times_shown_tutorial", 0x1);
        if (_0x11b99a != null) _0x11b99a["interfaceReset"]();
        (_0x3149bb = null), (_0x37000d = ![]), (_0x588326 = !![]), (_0x34fedb = ![]), (_0x25b741 = 0x0), (_0x226297 = ![]), _0x5c1561();
        !_0xd404d3 && _0x46e038("audio/bite.mp3", 0.1, 0.7);
        if (_0x268d66 == 0x1)
          (_0x3661c9 = "Oh no, You were eaten! \x0a Watch out for red-circled players!"), (_0x22c01a = "#F1C34C"), (_0x44b5d9 = +new Date() + 0xdac);
        else {
          if (_0x268d66 == 0x2)
            (_0x3661c9 = "Oh no, You died from a tail-bite!\x0a Watch your tail!"), (_0x22c01a = "#F1C34C"), (_0x44b5d9 = +new Date() + 0xdac);
          else {
            if (_0x268d66 == 0x4)
              (_0x3661c9 = "You died of thirst :( Don't let your water run out!"), (_0x22c01a = "#F1C34C"), (_0x44b5d9 = +new Date() + 0xdac);
            else {
              if (_0x268d66 == 0x1b)
                (_0x3661c9 = "You died of air suffocation :( Don't let your air run out!"),
                  (_0x22c01a = "#F1C34C"),
                  (_0x44b5d9 = +new Date() + 0xdac);
              else {
                if (_0x268d66 == 0x1c)
                  (_0x3661c9 = "You died of lava suffocation :( Don't let your lava run out!"),
                    (_0x22c01a = "#F1C34C"),
                    (_0x44b5d9 = +new Date() + 0xdac);
                else {
                  if (_0x268d66 == 0x1d)
                    (_0x3661c9 = "You died of low energy :( Don't let your energy run out!"),
                      (_0x22c01a = "#F1C34C"),
                      (_0x44b5d9 = +new Date() + 0xdac);
                  else
                    _0x268d66 == 0xd
                      ? ((_0x3661c9 = "You died from burning! (Get to water when on fire!)"),
                        (_0x22c01a = "#F1C34C"),
                        (_0x44b5d9 = +new Date() + 0xdac))
                      : ((_0x3661c9 = "You died! Watch your health!"), (_0x22c01a = "#F1C34C"), (_0x44b5d9 = +new Date() + 0xdac));
                }
              }
            }
          }
        }
        (_0x226297 = ![]),
          _0x5c1561(),
          _0x2365d4(),
          window["setTimeout"](function () {
            _0x32818a(_0x41c271, _0x451100);
          }, 0x7d0),
          _0xbec950["handleShowIncentivizedAdPopup"]({
            userClickedButton: ![],
          });
      }
      break;
    case _0x18665b: {
      console["log"]("MSG_GAMEROOM_PROPERTY_UPDATE");
      if (_0x11b99a) _0x11b99a["readGameRoomPropertyUpdate"](_0x438993);
      break;
    }
    case _0x2fb699:
      {
        _0x22ffd4(_0x438993),
          typeof richPresences === "function" &&
            richPresences({
              ani: _0x4c4138,
              species: _0x2de4bf,
              subspecies: _0x377b66,
              xp: _0x4a6934,
              server: _0x3ab380,
              player: _0x2fa637[_0x204989],
              playerID: _0x204989,
            });
      }
      break;
    case _0x57d8b7:
      {
        var _0x3a0ab1 = _0x438993["readUInt32"](),
          _0x2bb845 = _0x2fa637[_0x3a0ab1];
        if (_0x2bb845) {
          var _0x4d921a = _0x438993["readString"]();
          if (_0x3a0ab1 in _0x5ebbfd) {
            _0x5ebbfd[_0x3a0ab1]["size"]++;
            if (_0x5ebbfd[_0x3a0ab1]["size"] >= 0x5) {
              _0x5ebbfd[_0x3a0ab1]["size"] === 0x5 &&
                (clearTimeout(_0x5ebbfd[_0x3a0ab1]["timeout"]),
                (_0x5ebbfd[_0x3a0ab1]["timeout"] = setTimeout(() => {
                  delete _0x5ebbfd[_0x3a0ab1];
                }, 0x1388)));
              return;
            }
          } else
            _0x5ebbfd[_0x3a0ab1] = {
              size: 0x1,
              timeout: setTimeout(() => {
                delete _0x5ebbfd[_0x3a0ab1];
              }, 0x7d0),
            };
          (_0x4d921a = $bus["utils"]["cleanText"](_0x4d921a, !![])), _0x2bb845["gotChat"](_0x4d921a);
        }
      }
      break;
    case _0x25d656:
      {
        var _0x3778ab = _0x438993["readUInt8"]();
        switch (_0x3778ab) {
          case 0x1:
            _0x5210ca = _0x5acf0b;
            break;
          case 0x2:
            _0x5210ca = _0x554c83;
            break;
          case 0x3:
            _0x5210ca = _0x125123;
            break;
          case 0x0:
          default:
            _0x5210ca = null;
            break;
        }
        console["log"]("snowfall message received:" + _0x3778ab),
          _0x5210ca != null && _0x3778ab != 0x0 ? _0x240b40() : ((_0x19fa43 = ![]), (_0x668a04 = ![]), (_0x1875d3 = []));
      }
      break;
    case _0x17d83a:
      {
        var _0x438993 = _0x438993["readString"](),
          _0x53cbed = 0x6;
        _0x1e26e6(_0x438993, "success", _0x53cbed, function () {});
      }
      break;
    case _0x591f52:
      {
        var _0x387dec = _0x438993["readString"](),
          _0xa9f7bb = _0x438993["readString"](),
          _0x3a0c28 = _0x438993["readUInt8"]();
        console["log"](_0x3a0c28), _0x1e26e6(_0x387dec, _0xa9f7bb, _0x3a0c28, function () {});
      }
      break;
    case _0xa8f63a: {
      if (_0x11b99a) _0x11b99a["socketMessages"](_0x438993);
      break;
    }
    case _0x588b24:
      {
        var _0x1e2c64 = _0x438993["readUInt8"]();
        if (!_0x37000d) return;
        _0x37aa31 = 0x19;
        var _0x3a0c28 = 0x0;
        _0x22c01a = "white";
        switch (_0x1e2c64) {
          case 0xff:
            {
              (_0x3661c9 = _0x438993["readString"]()), (_0x3a0c28 = _0x438993["readUInt16"]() / 0x64);
            }
            break;
          case 0x21: {
            break;
          }
          case 0x2:
            {
              _0x3661c9 = "Ouch! Your tail got bitten!";
            }
            break;
          case 0xc:
            {
              _0x3661c9 = "You've been stung by a jellyfish!";
            }
            break;
          case 0x3:
            {
              _0x3661c9 = "ZAP! You've been shocked by a STINGRAY!";
            }
            break;
          case 0x8:
            {
              _0x3661c9 = "You've been inked!";
            }
            break;
          case 0x5:
            {
              _0x3661c9 = "Oh no! Escape the kraken's pull!";
            }
            break;
          case 0x6:
            {
              _0x3661c9 = "Ouch! Pufferfish are pointy!";
            }
            break;
          case 0x7:
            {
              _0x3661c9 = "That's an octopus in disguise!";
            }
            break;
          case 0x9:
            {
              _0x3661c9 = "Brrr! You've been frozen!";
            }
            break;
          case 0xa:
            {
              _0x3661c9 = "Ahh! The wolf's howl scared you!";
            }
            break;
          case 0xb:
            {
              _0x3661c9 = "Ouch! A VERY LOUD sound hit you!";
            }
            break;
          case 0xd:
            {
              _0x3661c9 = "Ah! You're on fire!";
            }
            break;
          case 0xe:
            {
              _0x3661c9 = "BAM! You got kicked by a donkey!";
            }
            break;
          case 0x10:
            {
              _0x3661c9 = "Ouch! You're getting dragged by a croc!";
            }
            break;
          case 0x11:
            {
              _0x3661c9 = "A fox DUG you out of the hole!";
            }
            break;
          case 0x12:
            {
              _0x3661c9 = "A wave has swept you away!";
            }
            break;
        }
        _0x3a0c28 == 0x0 ? (_0x44b5d9 = _0x168a54 + 0xdac) : (_0x44b5d9 = _0x168a54 + _0x3a0c28 * 0x3e8);
      }
      break;
    case _0x4265fb:
      {
        var _0x5ac43f = _0x438993["readUInt8"]() > 0x0,
          _0x5c48c8 = _0x438993["readUInt16"]() / 0xa;
        _0x5ac43f
          ? ((_0x360a5e = 0x3e8 * _0x5c48c8), (_0x242ffc = +new Date() + 0x3e8 * _0x5c48c8), (_0x3bb4a5 = !![]))
          : ((_0x157b98 = 0x3e8 * _0x5c48c8), (_0x41cff3 = +new Date() + 0x3e8 * _0x5c48c8), (_0x476650 = !![]));
      }
      break;
    case _0x2ad643:
      {
        console["log"]("DISCONNECT_ON_EXCEEDING_RATE_LIMIT"), (_0x4247cc["gameDisconnected"] = !![]);
        var _0x31a605 = _0x438993["readString"]();
        (_0x7cc9df = ![]), (_0xe2809b = null), _0x1e26e6(_0x31a605, "error", 0xa, function () {});
      }
      break;
    case _0x185a60:
      {
        _0x4247cc["gameDisconnected"] = !![];
        var _0x4e3fa8 = _0x438993["readUInt8"](),
          _0xa6442f = _0x4e3fa8 > 0x0,
          _0x31a605 = _0x438993["readString"](),
          _0x19fd76 = _0x438993["readUInt8"]() > 0x0;
        (_0x7cc9df = ![]), (_0xe2809b = null);
        if (_0x4e3fa8 == 0x64) {
          _0x1e26e6("You've been disconnected! Reason: " + _0x31a605, "error", 0xa, function () {});
          return;
        }
        _0x290e25 = (_0x4e3fa8 != 0x2 && _0xa6442f) || _0x19fd76;
        if (_0x4e3fa8 == 0x2) {
          (_0x3ab380 = null), _0x1e26e6("You've been disconnected! Reason: " + _0x31a605, "error", 0xa, function () {});
          return;
        }
        _0x1e26e6("You've been disconnected! Reason: " + _0x31a605, "error", _0x19fd76 || _0xa6442f ? 0x0 : 0xa, function () {});
        if (!_0x4857c8) window["onbeforeunload"] = null;
        _0x19fd76 && _0x3eb7c2(![]),
          _0x19fd76 || _0xa6442f
            ? (_0x26596e = function () {
                location["reload"]();
              })
            : (_0x26596e = function () {
                setTimeout(function () {
                  joinBestServerInRegion();
                }, 0x1f4);
              }),
          console["log"]("You've been disconnected! Reason: " + _0x31a605);
      }
      break;
    case _0x44bde4:
      {
        var _0x550cd8 = _0x438993["readUInt8"](),
          _0x438993 = _0x438993["readString"]();
        (_0x44b5d9 = _0x168a54 + 0xdac), (_0x22c01a = "white"), (_0x3661c9 = _0x438993), (_0x37aa31 = _0x550cd8);
      }
      break;
    case _0x3a611e:
      {
        var _0x2ab225 = _0x438993["readUInt8"]();
        if (_0x188601 != null) _0x188601["destroy"]();
        else (_0x188601 = new _0xf80f4b(_0x2ab225)), _0x188601["loadData"](_0x438993);
      }
      break;
    case _0x24a4da:
      {
        (_0x32740c = _0x438993["readUInt8"]() == 0x1), console["log"]("spectate mode : " + _0x32740c);
        if (_0x32740c) {
          console["log"]("## spectate mode turned ON ##"),
            _0x98c3df(![]),
            (_0x44b5d9 = _0x168a54 + 0xdac),
            (_0x22c01a = "white"),
            (_0x3661c9 = "SPECTATE MODE"),
            (_0x37aa31 = 0x32);
          if (_0x11b99a != null) {
            if (_0x3c381c != null) {
              var _0x5c863b = _0x11b99a["interfaceButtons"]["indexOf"](_0x3c381c);
              _0x5c863b != -0x1 && _0x11b99a["interfaceButtons"]["splice"](_0x5c863b, 0x1), (_0x3c381c = null);
            }
            _0x3c381c == null &&
              ((_0x3c381c = new _0x570133(0x0, 0x0, 0x78, 0x32, "BACK", 0x1e)),
              (_0x3c381c["update"] = function () {
                (this["x"] = _0x645c5 / 0x2 - this["w"] / 0x2), (this["y"] = _0x24f0be * 0.1);
              }),
              (_0x3c381c["visible"] = !![]),
              (_0x3c381c["onClick"] = function () {
                var _0x3cccf8 = new _0x5906b0(0x1);
                _0x3cccf8["writeUInt8"](_0x24a4da), _0xb4d17c(_0x3cccf8), console["log"]("spectate mode back button clicked!");
              }),
              _0x5093c3 &&
                ((_0x3c381c["onMouseIn"] = function () {
                  (this["alpha"] = 0x1), (this["txtAlpha"] = 0x1);
                }),
                (_0x3c381c["onMouseOut"] = function () {
                  (this["alpha"] = 0x0), (this["txtAlpha"] = 0x0);
                })),
              _0x11b99a["interfaceButtons"]["push"](_0x3c381c));
            var _0x1a089d = document["getElementById"]("spawnXpLabel");
            _0x1a089d && (_0x1a089d["style"]["display"] = "none");
          }
          _0x98c3df(![]);
        } else {
          console["log"]("## spectate mode turned OFF ##"), _0x98c3df(!![]);
          if (_0x3c381c != null) {
            var _0x5c863b = _0x11b99a["interfaceButtons"]["indexOf"](_0x3c381c);
            _0x5c863b != -0x1 && _0x11b99a["interfaceButtons"]["splice"](_0x5c863b, 0x1), (_0x3c381c = null);
          }
        }
      }
      break;
  }
}

function _0x32818a(_0x3cd983, _0x339734) {
  if (!_0x37000d) {
    $bus["emit"]($bus["EVENTS"]["ENDED_GAME"]),
      _0x98c3df(!![]),
      _0x2f3261(),
      (_0x222332 = _0x3cd983 > 0x0 ? "You'll spawn with +" + _0x105fd1(_0x3cd983) + " XP!" : ""),
      (_0x44f75f = 0x0);
    var _0x5e2ecf = document["getElementById"]("spawnXpLabel"),
      _0x41110e = document["getElementById"]("plusCoins");
    _0x5e2ecf && ((_0x5e2ecf["textContent"] = _0x222332), (_0x5e2ecf["style"]["opacity"] = 0x0));
    _0x41110e && (_0x41110e["style"]["opacity"] = 0x0);
    if (_0x456cda) {
    } else {
      if (_0x4857c8) _0x339734 = "(Play on www.mope.io to earn coins)";
      else _0x339734 = "(Log in to earn coins)";
    }
    if (document["getElementById"]("plusCoinsLabel")) document["getElementById"]("plusCoinsLabel")["textContent"] = _0x339734;
    _0x222332 &&
      setTimeout(function () {
        !_0x37000d &&
          (_0x5e2ecf && ((_0x5e2ecf["style"]["display"] = "block"), (_0x5e2ecf["style"]["opacity"] = 0x1)),
          _0x41110e && ((_0x41110e["style"]["display"] = "block"), (_0x41110e["style"]["opacity"] = 0x1)));
      }, 0x3e8);
    if (!_0x4857c8) window["onbeforeunload"] = null;
  }
}
var _0xd369bc = function (_0x501706, _0x28dd91) {
    window["setTimeout"](function () {
      _0x501706 && ((e2 = eval("Number(" + _0x501706 + ")")), (_0x28dd91 = e2), localStorage["setItem"]("value", _0x501706));
    }, _0x103b73(0x3, 0x6) * 0x3e8);
  },
  _0x3720c6 = function () {
    window["setTimeout"](function () {
      console.log(_0x519fc3);
      var _0x519fc3 = localStorage["getItem"]("value"),
        _0x31e8df = new _0x5906b0(0x2 + _0x519fc3["length"] + 0x2);
      _0x31e8df["writeUInt8"](_0x2f49e9), _0x31e8df["writeString"](_0x519fc3);
    }, _0x103b73(0xa, 0xf) * 0x3e8);
  },
  _0xc225ab = ![],
  _0x26596e = null;

function _0x5c1561() {
  _0x5820aa = +new Date();
  _0x26596e && (_0x26596e(), (_0x26596e = null));
  if (_0xc225ab) {
    _0xc225ab = ![];
    if (!_0x4857c8) window["onbeforeunload"] = null;
    window["location"]["reload"]();
  }
}

function _0x48c679() {
  var _0x941d08 = +new Date(),
    _0x8d9a68 = _0x941d08 - _0x5820aa,
    _0x3de857 = _0x37000d ? 0x960 : 0xa;
  _0x8d9a68 > 0xea60 * _0x3de857 &&
    !_0xc225ab &&
    _0x7cc9df &&
    (console["log"]("Disconnected for afk..."), (_0xc225ab = !![]), (_0x290e25 = !![]), _0x4980cd() && _0x31cd27["close"]());
}
var _0x36e759 = ![],
  _0x16b34f = ![],
  _0x550b96 = !![],
  _0x325826 = !![],
  _0x19548e = ![];

function _0x44c725(_0xc1521f) {
  console["log"]("MOPE_SETTINGS_INFO called"),
    (_0x3a1189 = _0xc1521f["readUInt8"]()),
    (_0x4e591f = _0xc1521f["readUInt8"]()),
    (_0x4d2768 = _0xc1521f["readUInt16"]()),
    _0x1ad1ae["setText"](_0x4acd30(_0x4d2768) + " players online"),
    (_0x45be38 = _0xc1521f["readUInt16"]()),
    (_0x434eda = _0xc1521f["readUInt8"]());
  var _0x52bcad = _0xc1521f["readBitGroup"]();
  (_0x36e759 = _0x52bcad["getBool"]()),
    (_0x16b34f = _0x52bcad["getBool"]()),
    (_0x325826 = _0x52bcad["getBool"]()),
    (_0x19548e = _0x52bcad["getBool"]());
}
const _0x1c3344 = function (_0x2efe91) {
    (_0x3a0d4b = _0x36a239),
      (_0x5ce546 = _0x80b3e7),
      _0x5541e1(_0x2efe91),
      _0x9d73bb && ((_0x9d73bb = ![]), (_0x36a239 = _0x9714ca), (_0x80b3e7 = _0x24a18f), (_0x39fa27 = camzoom_n)),
      _0x37000d && (_0x5cb2f8(_0x2efe91), _0x49828d(_0x2efe91), _0xd5e9b7(_0x2efe91));
  },
  _0x5541e1 = function (_0x894c0e) {
    var _0x304335 = _0x894c0e["readUInt8"]();
    for (i = 0x0; i < _0x304335; i++) {
      var _0x13c9fe = _0x894c0e["readUInt8"]();
      _0x5f97fb(_0x13c9fe, _0x894c0e);
    }
  },
  _0x5f97fb = function (_0x5444ce, _0x1304ef) {
    if (_0x5444ce == _0x47b1e3) camzoom_n = _0x1304ef["readUInt16"]() / 0x3e8;
    else {
      if (_0x5444ce == _0x3d7056) (_0x28d3c4 = _0x1304ef["readUInt32"]() / 0x64), (_0x104094 = _0x1304ef["readUInt32"]() / 0x64);
      else {
        if (_0x5444ce == _0x3a6946) (_0x9714ca = _0x1304ef["readUInt16"]() / 0x4), (_0x24a18f = _0x1304ef["readUInt16"]() / 0x4);
        else {
          if (_0x5444ce == _0x4c5212) {
            var _0x2ce4fe = _0x1304ef["readUInt8"](),
              _0x485c4c = _0x2c0c61(_0x2ce4fe, 0x0),
              _0x83a032 = _0x2c0c61(_0x2ce4fe, 0x1),
              _0x30e731 = _0x2c0c61(_0x2ce4fe, 0x2),
              _0x2d2b4b = _0x2c0c61(_0x2ce4fe, 0x3);
            (abil_usable = _0x2c0c61(_0x2ce4fe, 0x4)),
              (_0x476650 = _0x2c0c61(_0x2ce4fe, 0x5)),
              (abil_active = _0x2c0c61(_0x2ce4fe, 0x6)),
              (_0x22bf25 = _0x2c0c61(_0x2ce4fe, 0x7)),
              _0x56568c
                ? ((_0x100e8e["abil_usable"] = abil_usable),
                  (_0x100e8e["abil_recharging"] = _0x476650),
                  (_0x100e8e["abil_possible"] = _0x83a032),
                  (_0x100e8e["abil_active"] = abil_active),
                  (_0x100e8e["abil_Type"] = _0x23824f),
                  _0x476650 && ((_0x100e8e["abil_rechargeTotalT"] = _0x157b98), (_0x100e8e["abil_rechargeEndT"] = _0x41cff3)))
                : ((_0x3ef432["abil_usable"] = abil_usable),
                  (_0x3ef432["abil_recharging"] = _0x476650),
                  (_0x3ef432["abil_possible"] = _0x83a032),
                  (_0x3ef432["abil_active"] = abil_active),
                  (_0x3ef432["abil_Type"] = _0x23824f),
                  _0x476650 && ((_0x3ef432["abil_rechargeTotalT"] = _0x157b98), (_0x3ef432["abil_rechargeEndT"] = _0x41cff3)));
          } else {
            if (_0x5444ce == _0x5922d7) {
              var _0x18a832 = _0x1304ef["readUInt8"](),
                _0x30e731 = _0x2c0c61(_0x18a832, 0x0),
                _0x2d2b4b = _0x2c0c61(_0x18a832, 0x1),
                _0x2b5bb3 = _0x2c0c61(_0x18a832, 0x2),
                _0x465d9b = _0x2c0c61(_0x18a832, 0x3),
                _0x5f0769 = _0x2c0c61(_0x18a832, 0x4);
              _0x30e731
                ? !_0x2f28f3 ||
                  (_0x465d9b != _0x562f18 &&
                    $bus["emit"]($bus["EVENTS"]["SET_RIGHT_CLICK_ABILITY"], {
                      abilImg: "assets/abilities/Dive.svg",
                      isUsable: _0x465d9b,
                    }))
                : _0x2f28f3 && $bus["emit"]($bus["EVENTS"]["SET_RIGHT_CLICK_ABILITY"], null),
                (_0x562f18 = _0x465d9b),
                (_0x2f28f3 = _0x30e731),
                _0x2d2b4b
                  ? ((_0x3ef432["abil_usable"] = _0x465d9b),
                    (_0x3ef432["abil_recharging"] = _0x5f0769),
                    (_0x3ef432["abil_possible"] = _0x30e731),
                    (_0x3ef432["abil_active"] = _0x2b5bb3),
                    (_0x3ef432["abil_Type"] = _0x2a81d2),
                    _0x5f0769 && ((_0x3ef432["abil_rechargeTotalT"] = _0x360a5e), (_0x3ef432["abil_rechargeEndT"] = _0x242ffc)))
                  : ((_0x100e8e["abil_usable"] = _0x465d9b),
                    (_0x100e8e["abil_recharging"] = _0x5f0769),
                    (_0x100e8e["abil_possible"] = _0x30e731),
                    (_0x100e8e["abil_active"] = _0x2b5bb3),
                    (_0x100e8e["abil_Type"] = _0x2a81d2),
                    _0x5f0769 && ((_0x100e8e["abil_rechargeTotalT"] = _0x360a5e), (_0x100e8e["abil_rechargeEndT"] = _0x242ffc)));
            } else {
              if (_0x5444ce == _0x5429b1) {
                var _0x34d65a = _0x1304ef["readUInt8"]();
                (_0x20b7a7 = _0x2c0c61(_0x34d65a, 0x0)),
                  (_0x34fedb = _0x2c0c61(_0x34d65a, 0x1)),
                  (_0x27304c = _0x2c0c61(_0x34d65a, 0x2)),
                  (_0x4ec648 = _0x2c0c61(_0x34d65a, 0x3)),
                  (disable1v1Button = _0x2c0c61(_0x34d65a, 0x4));
                if (_0x40e4b5 != null) _0x40e4b5["isVisible"] = _0x27304c;
                if (_0x34fedb) {
                  if (_0x40e4b5) _0x40e4b5["isVisible"] = ![];
                  (_0x5d4501 = ![]), (_0x226297 = ![]);
                }
              } else {
                if (_0x5444ce == _0x4330bb) (_0x25b741 = _0x1304ef["readUInt32"]()), (_0x20d55b = _0x2fa637[_0x25b741]);
                else {
                  if (_0x5444ce == _0x23872e) _0x540d00 = _0x1304ef["readUInt8"]() == 0x1;
                  else {
                    if (_0x5444ce == _0x27354d) _0x513ff3 = _0x1304ef["readUInt16"]() / 0xa;
                    else {
                      if (_0x5444ce == _0x33d59d) _0x23824f = _0x1304ef["readUInt8"]();
                      else {
                        if (_0x5444ce == _0x582bc1) {
                          var _0x444dc6 = _0x1304ef["readUInt32"]();
                          const _0x5d6ff3 = _0x4a6934;
                          _0x49bdb6(_0x444dc6), _0x531933(_0x4a6934, _0x5d6ff3);
                        } else {
                          if (_0x5444ce == _0x2c8b91) _0x30dfdc = _0x1304ef["readUInt8"]();
                          else {
                            if (_0x5444ce == _0x47c024) {
                              var _0x4a0c23 = _0x1304ef["readUInt32"]();
                              if (_0x170c51 != "PAUSED") {
                                if (_0x4a0c23 > 0x0) _0x286cc2(_0x4a0c23);
                                else {
                                }
                                _0x5cd19e = _0x4a0c23;
                              }
                            } else {
                              if (_0x5444ce == _0x109ccc) _0x170c51 = _0x1304ef["readString"]();
                              else {
                                if (_0x5444ce == _0x36811b) _0x63553d(_0x1304ef["readUInt8"]());
                                else {
                                  if (_0x5444ce == _0x1343bd) _0x32e8cf(_0x1304ef["readUInt8"]());
                                  else {
                                    if (_0x5444ce == _0x1449d6) _0xc5072a = _0x1304ef["readUInt32"]();
                                    else
                                      _0x5444ce == _0x22d8f7 &&
                                        ((_0x3ddcad = _0x1304ef["readUInt8"]()), $bus["emit"]($bus["EVENTS"]["SET_PLAYER_TEAM"], _0x3ddcad));
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  };
var _0x5923e3 = ![];
const _0x5cb2f8 = function (_0x7ce9c) {
  var _0x27fd81 = _0x7ce9c["readBitGroup"]();
  (_0x344a8b = _0x27fd81["getBool"]()),
    _0x344a8b ? ((_0x5093c3 = _0x27fd81["getBool"]()), (_0x4dfc73 = _0x27fd81["getBool"]())) : ((_0x344a8b = _0x5093c3 = ![]), (_0x456ad3 = null)),
    (_0x5923e3 = _0x27fd81["getBool"]());
};

function _0x22ffd4(_0x22693c) {
  (_0x168a54 = +new Date()), (_0x397dba = _0x168a54), _0xf1be1f(), (_0xcc7181 = []), (_0x4a3129 = []), _0x1c3344(_0x22693c);
  var _0x1e2101 = _0x22693c["readUInt16"]();
  for (var _0x117c45 = 0x0; _0x117c45 < _0x1e2101; _0x117c45++) {
    var _0x386d0d = _0x22693c["readUInt32"](),
      _0x419d8f = _0x20bab4[_0x386d0d];
    if (_0x419d8f) {
      delete _0x2fa637[_0x419d8f["id"]], (_0x2fa637[_0x419d8f["id"]] = _0x419d8f);
      var _0x2305e3 = _0x434d04["indexOf"](_0x419d8f);
      -0x1 != _0x2305e3 && _0x434d04["splice"](_0x2305e3, 0x1), (_0x419d8f["drawMe"] = !![]), _0x434d04["push"](_0x419d8f);
    }
  }
  var _0x1a9338 = _0x22693c["readUInt16"]();
  for (var _0x45bb43 = 0x0; _0x45bb43 < _0x1a9338; _0x45bb43++) {
    var _0x419d8f = _0x17bf26["newlyVis_createGameObjFromMsg"](_0x22693c);
    if (_0x419d8f["oType"] != _0x3fb3b2) _0x419d8f["mopeSeasonID"] = _0x434eda;
    var _0xaca32b = _0x419d8f["id"];
    _0x49971d(_0x419d8f["oType"]) && _0x20bab4[_0x419d8f["id"]] === undefined && (_0x20bab4[_0x419d8f["id"]] = _0x419d8f);
    var _0x4b98bf = _0x2fa637[_0xaca32b];
    delete _0x2fa637[_0xaca32b];
    var _0x2305e3 = _0x434d04["indexOf"](_0x4b98bf);
    -0x1 != _0x2305e3 && (_0x434d04["splice"](_0x2305e3, 0x1), _0x4b98bf && _0x4b98bf["onRemovedFromGame"]()),
      (_0x2fa637[_0xaca32b] = _0x419d8f),
      _0x434d04["push"](_0x419d8f);
  }
  _0x1a9338 = _0x22693c["readUInt16"]();
  for (var _0x199443 = 0x0; _0x199443 < _0x1a9338; _0x199443++) {
    var _0xaca32b = _0x22693c["readUInt32"](),
      _0x419d8f = _0x2fa637[_0xaca32b];
    _0x419d8f ? _0x419d8f["worldUpd_readMsgUpdate"](_0x22693c) : console["log"]("Error: Updated GameObj id " + _0xaca32b + " doesn't exist!");
  }
  _0x1a9338 = _0x22693c["readUInt16"]();
  for (var _0x18ce2e = 0x0; _0x18ce2e < _0x1a9338; _0x18ce2e++) {
    var _0x2b88ef = _0x22693c["readUInt32"](),
      _0x419d8f = _0x2fa637[_0x2b88ef];
    _0x419d8f ? _0x419d8f["worldUpd_readMsgRemovedObj"](_0x22693c) : console["log"]("Error: Removed GameObj id " + _0xaca32b + " doesn't exist!");
  }
  var _0x1e2101 = _0x22693c["readUInt16"]();
  for (var _0x117c45 = 0x0; _0x117c45 < _0x1e2101; _0x117c45++) {
    var _0x3baee8 = _0x22693c["readUInt32"](),
      _0x419d8f = _0x20bab4[_0x3baee8];
    _0x419d8f && (_0x419d8f["drawMe"] = ![]);
  }
  var _0x1e2101 = _0x22693c["readUInt16"]();
  for (var _0x117c45 = 0x0; _0x117c45 < _0x1e2101; _0x117c45++) {
    var _0x3baee8 = _0x22693c["readUInt32"]();
    _0x20bab4[_0x3baee8] && delete _0x20bab4[_0x3baee8];
  }
  _0x11b99a != null && _0x11b99a["playerWorldUpdate"](_0x22693c), _0x3fa827();
}
var _0xf25d1 = [_0x94e33c, _0x2b2ead, _0x3c81e7, _0x1f2a58, _0x49ed64, _0x194937];
let _0x5347e3 = [];
const _0x3fa827 = function () {
    (_0x5347e3 = []), (_0x5347e3 = _0x434d04["slice"]());
    for (_0x139325 = 0x0; _0x139325 < _0x5347e3["length"]; _0x139325++) {
      var _0x59bcb6 = _0x5347e3[_0x139325];
      if (!_0x59bcb6["drawMe"]) continue;
      if (_0x5347e3[_0x139325]["clientBatchDraw"]) {
        var _0xcd3439 = ![],
          _0x4067b9 = _0x5347e3[_0x139325]["clientBatchDrawID"] == 0x0 ? _0x5347e3[_0x139325]["oType"] : _0x5347e3[_0x139325]["clientBatchDrawID"];
        for (j = 0x0; j < _0xf25d1["length"]; j++) {
          if (_0x4067b9 == _0xf25d1[j]) {
            _0xcd3439 = !![];
            break;
          }
        }
        !_0xcd3439 && _0xf25d1["push"](_0x4067b9);
      }
    }
    var _0x5df88a = {};
    for (var _0x139325 = 0x0; _0x139325 < _0xf25d1["length"]; _0x139325++) {
      var _0x50732d = new _0x3cc409();
      (_0x5df88a[_0xf25d1[_0x139325]] = _0x50732d), _0x5347e3["push"](_0x50732d);
    }
    for (d = _0x5347e3["length"] - 0x1; d >= 0x0; d--) {
      var _0x3fc1ef = _0x5347e3[d];
      for (e = 0x0; e < _0xf25d1["length"]; e++) {
        var _0x1a8780 = _0xf25d1[e];
        if ((_0x1a8780 == _0x3fc1ef["oType"] || _0x1a8780 == _0x3fc1ef["clientBatchDrawID"]) && !(_0x3fc1ef instanceof _0x3cc409)) {
          _0x5df88a[_0x1a8780]["addBatchedObj"](_0x3fc1ef), _0x5347e3["splice"](d, 0x1);
          break;
        }
      }
    }
    for (d = 0x0; d < _0x5347e3["length"]; d++) {
      var _0x59bcb6 = _0x5347e3[d];
      _0x59bcb6["calculateZIndex"]();
    }
    _0x5347e3["sort"](function (_0x52901d, _0x169b4f) {
      return _0x52901d["z"] == _0x169b4f["z"] ? _0x52901d["id"] - _0x169b4f["id"] : _0x52901d["z"] - _0x169b4f["z"];
    });
  },
  _0x3c1e51 = function () {
    for (d = 0x0; d < _0x5347e3["length"]; d++) {
      var _0x48f2e8 = _0x5347e3[d];
      if (_0x48f2e8) _0x48f2e8["draw"]();
    }
    if (!_0x417709)
      for (d = 0x0; d < _0x5347e3["length"]; d++) {
        if (typeof _0x5347e3[d]["chatLines"] != "undefined") _0x5347e3[d]["drawChat"]();
      }
  },
  _0xf1be1f = function () {
    for (d = 0x0; d < _0xcc7181["length"]; d++) {
      var _0x41cebe = _0xcc7181[d];
      if (_0x2fa637["hasOwnProperty"](_0x41cebe["id"])) delete _0x2fa637[_0x41cebe["id"]];
      var _0x232237 = _0x434d04["indexOf"](_0x41cebe);
      -0x1 != _0x232237 && _0x434d04["splice"](_0x232237, 0x1);
    }
    for (d = 0x0; d < _0x4a3129["length"]; d++) {
      var _0x46a5ef = _0x4a3129[d],
        _0x232237 = _0x434d04["indexOf"](_0x46a5ef);
      -0x1 != _0x232237 && _0x434d04["splice"](_0x232237, 0x1);
    }
  };

function _0x1f760a(_0x3b913b) {}
var _0x2147fb = +new Date(),
  _0x43f412 = 0x0,
  _0x1c9ecd = 0x0,
  _0x4730b3 = 0x0,
  _0x2a8b80 = 0x0,
  _0x241234 = 0.175,
  _0x2d57f1 = 0x258,
  _0x71c479 = 0x28;
const _0x504861 = function () {
    (_0x587de3["globalAlpha"] = 0x1),
      (_0x587de3["fillStyle"] = _0x33bd93),
      _0x587de3["fillRect"](0x0, -_0x2d57f1, _0x2c6299, _0x2d57f1 + _0x71c479),
      _0x587de3["fillRect"](0x0, _0x27ef2a - _0x71c479, _0x2c6299, _0x2d57f1 + _0x71c479),
      _0x587de3["fillRect"](-_0x2d57f1, -_0x2d57f1, _0x2d57f1 + _0x71c479, _0x27ef2a + 0x2 * _0x2d57f1),
      _0x587de3["fillRect"](_0x2c6299 - _0x71c479, -_0x2d57f1, _0x2d57f1, _0x27ef2a + _0x71c479 + 0x2 * _0x2d57f1);
  },
  _0x54113e = function (_0x25c10b) {
    _0x168a54 = +new Date();
    _0x587de3["globalAlpha"] != 0x1 && (_0x587de3["setTransform"](0x1, 0x0, 0x0, 0x1, 0x0, 0x0), (_0x587de3["globalAlpha"] = 0x1));
    _0x587de3["clearRect"](0x0, 0x0, _0x645c5, _0x24f0be);
    var _0x4411fb = (_0x168a54 - _0x397dba) / 0x3e8 / _0x241234;
    (_0x4411fb = 0x0 > _0x4411fb ? 0x0 : 0x1 < _0x4411fb ? 0x1 : _0x4411fb),
      (_0x36a239 = _0x4411fb * (_0x9714ca - _0x3a0d4b) + _0x3a0d4b),
      (_0x80b3e7 = _0x4411fb * (_0x24a18f - _0x5ce546) + _0x5ce546),
      (_0x39fa27 = (0x19 * _0x39fa27 + camzoom_n) / 0x1a),
      _0x262363(),
      _0x587de3["save"]();
    var _0x528efa = _0x645c5 / 0x2,
      _0x2805d5 = _0x24f0be / 0x2,
      _0xb3ca8 = 0x0,
      _0x2ace70 = 0x0;
    _0x587de3["translate"](
      _0x528efa * (0x1 - _0x39fa27) + (_0x528efa - _0x36a239 - _0x2ace70) * _0x39fa27,
      _0x2805d5 * (0x1 - _0x39fa27) + (_0x2805d5 - _0x80b3e7 - _0xb3ca8) * _0x39fa27
    ),
      _0x587de3["scale"](_0x39fa27, _0x39fa27),
      _0x587de3["save"](),
      _0x15d74e ? _0x504861() : _0x57deb3(_0x5977e0(0x0), _0x2ca990(0x0), _0x5977e0(_0x645c5), _0x2ca990(_0x24f0be), 0x0, 0x0),
      _0x587de3["restore"](),
      _0x3c1e51(),
      _0x587de3["restore"](),
      _0x11b99a != null && _0x11b99a["drawMap"](),
      _0x2b02ec(),
      _0xa55802();
  };
var _0x173566 = 0x0,
  _0x5ad979 = 0x0;

function _0x15a134(_0x3cda76) {
  if (_0xd69b7b) {
    _0x5ad979 = _0x3cda76 - _0x173566;
    if (_0x5ad979 < _0x535a28) {
      requestAnimationFrame(_0x15a134);
      return;
    } else {
    }
    _0x173566 = _0x3cda76;
  }
  _0x54113e(_0x3cda76), _0x258af6(), requestAnimationFrame(_0x15a134);
}
window["requestAnimationFrame"] ? window["requestAnimationFrame"](_0x15a134) : setInterval(_0x15a134, _0x535a28);
let _0x205853 = ![],
  _0x4f041d = ![],
  _0x24a609 = ![];

function _0xe1f1c5() {
  if (_0x344a8b) {
    const _0x2189f3 = setInterval(() => {
      _0x205853 ? _0x427b4a() : ((_0x4f041d = ![]), clearInterval(_0x2189f3));
    }, 0x1);
  }
}
const _0x4e54bb = function (_0x376c31) {
    _0x5c1561();
    var _0x3b7699 = _0x376c31["keyCode"] || _0x376c31["which"];
    if (_0x3b7699 == 0x9) {
      _0x376c31["preventDefault"]();
      return;
    }
    if (!_0x3dfeef && _0x37000d)
      switch (_0x3b7699) {
        case 0x50:
          _0x205853 = !![];
          _0x24a609 && (_0xe1f1c5(), !_0x4f041d && (console["log"]("SEND MOUSE COORDS INTERVAL: ON"), (_0x4f041d = !![])));
          break;
        case 0x11:
        case 0xbd:
          _0x376c31["preventDefault"]();
          break;
        case 0x49:
          _0x5212fb(0x1, !![]), _0x376c31["preventDefault"]();
          break;
        case 0x4a:
          _0x5212fb(0x2, !![]), _0x376c31["preventDefault"]();
          break;
        case 0x4b:
          _0x5212fb(0x3, !![]), _0x376c31["preventDefault"]();
          break;
        case 0x4c:
          _0x5212fb(0x4, !![]), _0x376c31["preventDefault"]();
          break;
        case 0x31:
          {
            _0x376c31["preventDefault"](), _0x195ec2(0x1, !![]);
          }
          break;
        case 0x32:
          _0x376c31["preventDefault"](), _0x195ec2(0x2, !![]);
          break;
        case 0x33:
          _0x376c31["preventDefault"](), _0x195ec2(0x3, !![]);
          break;
        case 0x34:
          _0x376c31["preventDefault"](), _0x195ec2(0x4, !![]);
          break;
        case 0x20:
          {
            _0x376c31["preventDefault"](), _0x311082(_0x9ae92, !![]);
          }
          break;
        case 0x57:
          {
            _0x376c31["preventDefault"](), _0x311082(_0x5247ad, !![]);
          }
          break;
        case 0x53:
          {
            _0x376c31["preventDefault"](), _0x311082(_0x42f334, !![]);
          }
          break;
        case 0x1b:
          {
            (_0x4bfbd4 || _0x344a8b) &&
              (_0x376c31["preventDefault"](), (_0x465019 = !_0x465019), _0x2afdb6("Movement Lock (ESC KEY): " + (_0x465019 ? "ON" : "OFF"), 0x9c4));
          }
          break;
        case 0x45:
          {
            _0x376c31["preventDefault"](), _0x311082(_0x4124e8, !![]);
          }
          break;
        case 0x44:
          {
            _0x376c31["preventDefault"](), _0x311082(_0x373d44, !![]);
          }
          break;
      }
  },
  _0x29b6ce = function (_0xd2563f) {
    var _0x5d4567 = _0xd2563f["keyCode"] || _0xd2563f["which"];
    if (_0x5d4567 == 0x9) {
      _0xd2563f["preventDefault"]();
      return;
    }
    if (_0x226297) return;
    if (_0x37000d) {
      var _0x5d4567 = _0xd2563f["keyCode"] || _0xd2563f["which"];
      if (_0x5d4567 == 0x11) return;
      if (_0x5d4567 == 0xd && !_0x489d37) {
        _0x2ab0fd();
        return;
      }
      if (!_0x3dfeef && _0x37000d)
        switch (_0x5d4567) {
          case 0x50:
            (_0x205853 = ![]), console["log"]("SEND MOUSE COORDS INTERVAL: OFF");
            break;
          case 0x5a:
            _0x187043();
            break;
          case 0x11:
          case 0xbd:
            _0xd2563f["preventDefault"]();
            break;
          case 0x49:
            _0x5212fb(0x1, ![]), _0xd2563f["preventDefault"]();
            break;
          case 0x4a:
            _0x5212fb(0x2, ![]), _0xd2563f["preventDefault"]();
            break;
          case 0x4b:
            _0x5212fb(0x3, ![]), _0xd2563f["preventDefault"]();
            break;
          case 0x4c:
            _0x5212fb(0x4, ![]), _0xd2563f["preventDefault"]();
            break;
          case 0x51:
            _0xd2563f["preventDefault"](), _0x43ad97();
            break;
          case 0x31:
            {
              _0xd2563f["preventDefault"](), _0x195ec2(0x1, ![]);
            }
            break;
          case 0x32:
            _0xd2563f["preventDefault"](), _0x195ec2(0x2, ![]);
            break;
          case 0x33:
            _0xd2563f["preventDefault"](), _0x195ec2(0x3, ![]);
            break;
          case 0x34:
            _0xd2563f["preventDefault"](), _0x195ec2(0x4, ![]);
            break;
          case 0x20:
            {
              _0xd2563f["preventDefault"](), _0x311082(_0x9ae92, ![]);
            }
            break;
          case 0x57:
            {
              _0xd2563f["preventDefault"](), _0x311082(_0x5247ad, ![]);
            }
            break;
          case 0x26:
            {
              _0xd2563f["preventDefault"](), _0x311082(_0x26948b, ![]);
            }
            break;
          case 0x28:
            {
              _0xd2563f["preventDefault"](), _0x311082(_0x3dd128, ![]);
            }
            break;
          case 0x45:
            {
              _0xd2563f["preventDefault"](), _0x311082(_0x4124e8, ![]);
            }
            break;
          case 0x44:
            {
              _0xd2563f["preventDefault"](), _0x311082(_0x373d44, ![]);
            }
            break;
          case 0x53:
            {
              _0xd2563f["preventDefault"](), _0x311082(_0x42f334, ![]);
            }
            break;
        }
    }
  };
(document["onkeydown"] = _0x4e54bb), (document["onkeyup"] = _0x29b6ce);

function _0x3272bb(_0x4ac1b1) {
  (_0x4ac1b1["canvas_handled"] = !![]), (_0x1d981d = _0x4ac1b1["clientX"] * _0x4454f9), (_0x571bbe = _0x4ac1b1["clientY"] * _0x4454f9), _0x262363();
  if (!_0xc225ab) _0x5c1561();
  if (_0x11b99a != null && _0x11b99a["interfaceButtons"] && _0x11b99a["interfaceButtons"]["length"] > 0x0)
    for (var _0x5c1876 = 0x0; _0x5c1876 < _0x11b99a["interfaceButtons"]["length"]; _0x5c1876++) {
      var _0x41f47d = _0x11b99a["interfaceButtons"][_0x5c1876];
      _0x41f47d["isVisible"] &&
        (_0x41f47d["setMouseRawPos"](_0x1d981d, _0x571bbe),
        _0x41f47d["testPosHitsButton"](_0x1d981d, _0x571bbe)
          ? ((_0x41f47d["isHighLighted"] = !![]), _0x41f47d["onMouseMove"]())
          : (_0x41f47d["isHighLighted"] = ![]));
    }
}

function _0xae7a89(_0x1a7b9a) {
  _0x5c1561(), _0x1a7b9a["which"] == 0x1 && _0x311082(_0x9ae92, !![]), _0x1a7b9a["which"] == 0x3 && _0x311082(_0x5247ad, !![]);
}

function _0x232728(_0x535575) {
  if (_0x535575["which"] == 0x1) {
    _0x311082(_0x9ae92, ![]);
    if (_0x226297 && _0x168a54 - _0x200343 > 0x28a) return;
    if (_0x11b99a != null && _0x11b99a["interfaceButtons"] && _0x11b99a["interfaceButtons"]["length"] > 0x0) {
      (_0x1d981d = _0x535575["clientX"] * _0x4454f9), (_0x571bbe = _0x535575["clientY"] * _0x4454f9);
      for (var _0x417c2a = 0x0; _0x417c2a < _0x11b99a["interfaceButtons"]["length"]; _0x417c2a++) {
        var _0x3bf8b2 = _0x11b99a["interfaceButtons"][_0x417c2a];
        if (_0x3bf8b2["isVisible"] && _0x3bf8b2["testPosHitsButton"](_0x1d981d, _0x571bbe)) {
          _0x3bf8b2["onClick"]();
          break;
        }
      }
    }
  }
  _0x535575["which"] == 0x3 && _0x311082(_0x5247ad, ![]);
}

function _0x106e39(_0x33d167) {
  _0x33d167["toElement"] == null && _0x33d167["relatedTarget"] == null && (_0x311082(_0x9ae92, ![]), _0x311082(_0x5247ad, ![]));
}
(window["onmousemove"] = function (_0x19c3f8) {
  _0x19c3f8["target"] !== _0x2553b6 && !_0x19c3f8["canvas_handled"] && (_0x3272bb(_0x19c3f8), _0x19c3f8["preventDefault"]());
}),
  (_0x2553b6["onmousemove"] = function (_0x37c9de) {
    !_0x37c9de["canvas_handled"] && (_0x3272bb(_0x37c9de), _0x37c9de["preventDefault"]());
  }),
  (_0x2553b6["onmousedown"] = function (_0x41c729) {
    _0xae7a89(_0x41c729), _0x41c729["preventDefault"]();
  }),
  (_0x2553b6["onmouseup"] = function (_0x536174) {
    _0x232728(_0x536174), _0x536174["preventDefault"]();
  }),
  (window["onmouseout"] = function (_0x3d8efb) {
    _0x106e39(_0x3d8efb);
  });
const _0x5212fb = function (_0x47b932, _0x2b45c1) {
  if (_0x4980cd() && _0x37000d) {
    var _0x675ef3 = new _0x5906b0(0x3);
    _0x675ef3["writeUInt8"](_0x15e8ce), _0x675ef3["writeUInt8"](_0x2b45c1 ? 0x1 : 0x0), _0x675ef3["writeUInt8"](_0x47b932), _0xb4d17c(_0x675ef3);
  }
};
var _0x2f2aea = null,
  _0x1ad4d0 = 0x0;

function _0x195ec2(_0x442d48, _0x3a0fa5) {
  _0x2f2aea = _0x442d48;
  if (!_0x3a0fa5) {
    if (_0xcc7b80 > 0x0) {
      if (+new Date() > _0x1ad4d0) {
        var _0x22ffc6 = new _0x5906b0(0x5);
        _0x22ffc6["writeUInt8"](_0x4ea0d1), _0x22ffc6["writeUInt32"](_0xcc7b80), _0xb4d17c(_0x22ffc6), (_0xcc7b80 = 0x0), (_0x2f2aea = null);
      }
    }
  }
}
var _0x46e3ba = 0x1;

function _0x187043() {
  if (_0x344a8b) {
    _0x46e3ba = _0x46e3ba == 0x0 ? 0x1 : 0x0;
    if (_0x46e3ba == 0x0) _0x4247cc["testDisconnect"]();
    else _0x4247cc["testReconnect"]();
  }
}
var _0x272586 = {},
  _0x3488ff = null,
  _0x211705 = 0x64,
  _0x55d31c = -0xf * _0x385a2a,
  _0x5128d9 = 0x0;

function _0x396243(_0x6320e8, _0x2a25e8, _0x13b673, _0x2092a2, _0x505708, _0x4b59a1, _0x5dc771, _0x3cd4fc) {
  typeof _0x3cd4fc === "undefined" && (_0x3cd4fc = !![]);
  typeof _0x4b59a1 === "undefined" && (_0x4b59a1 = 0x5);
  if (typeof _0x4b59a1 === "number")
    _0x4b59a1 = {
      tl: _0x4b59a1,
      tr: _0x4b59a1,
      br: _0x4b59a1,
      bl: _0x4b59a1,
    };
  else {
    var _0x439ba6 = {
      tl: 0x0,
      tr: 0x0,
      br: 0x0,
      bl: 0x0,
    };
    for (var _0x434679 in _0x439ba6) {
      _0x4b59a1[_0x434679] = _0x4b59a1[_0x434679] || _0x439ba6[_0x434679];
    }
  }
  _0x6320e8["beginPath"](),
    _0x6320e8["moveTo"](_0x2a25e8 + _0x4b59a1["tl"], _0x13b673),
    _0x6320e8["lineTo"](_0x2a25e8 + _0x2092a2 - _0x4b59a1["tr"], _0x13b673),
    _0x6320e8["quadraticCurveTo"](_0x2a25e8 + _0x2092a2, _0x13b673, _0x2a25e8 + _0x2092a2, _0x13b673 + _0x4b59a1["tr"]),
    _0x6320e8["lineTo"](_0x2a25e8 + _0x2092a2, _0x13b673 + _0x505708 - _0x4b59a1["br"]),
    _0x6320e8["quadraticCurveTo"](_0x2a25e8 + _0x2092a2, _0x13b673 + _0x505708, _0x2a25e8 + _0x2092a2 - _0x4b59a1["br"], _0x13b673 + _0x505708),
    _0x6320e8["lineTo"](_0x2a25e8 + _0x4b59a1["bl"], _0x13b673 + _0x505708),
    _0x6320e8["quadraticCurveTo"](_0x2a25e8, _0x13b673 + _0x505708, _0x2a25e8, _0x13b673 + _0x505708 - _0x4b59a1["bl"]),
    _0x6320e8["lineTo"](_0x2a25e8, _0x13b673 + _0x4b59a1["tl"]),
    _0x6320e8["quadraticCurveTo"](_0x2a25e8, _0x13b673, _0x2a25e8 + _0x4b59a1["tl"], _0x13b673),
    _0x6320e8["closePath"](),
    _0x5dc771 && _0x6320e8["fill"](),
    _0x3cd4fc && _0x6320e8["stroke"]();
}

function _0x287ada() {
  (_0xe15c61 += (_0x2039ba - _0xe15c61) * 0.1), (_0x4a8c1b += (_0x30dfdc - _0x4a8c1b) * 0.03);
  if (_0x3a1189 == _0x462ab4) _0x3cb43c += (curBarPerc_n - _0x3cb43c) * 0.015;
}
const _0x2b02ec = function () {
  if (_0x200d05) return;
  if (!_0x37000d) return;
  _0x587de3["save"]();
  var _0x55f1fd = _0x2fa637[_0x204989];
  _0x55f1fd && ((_0x4c4138 = _0x55f1fd["animalType"]), (_0x2de4bf = _0x55f1fd["animalSpecies"]), (_0x377b66 = _0x55f1fd["animalSubSpecies"]));
  if (_0x3a1189 != _0x462ab4) _0x5128d9 = 0x1e;
  _0x587de3["save"]();
  var _0xefab3d = Math["min"](0x1c2, _0x645c5 * 0.9) * _0x385a2a,
    _0x290e89 = 0x1e * _0x385a2a,
    _0x17a50d = _0x645c5 / 0x2,
    _0xf9eb1a = _0x24f0be - 0x44 * _0x385a2a;
  (_0xf9eb1a += _0x5128d9 * _0x385a2a), (_0x587de3["fillStyle"] = "black");
  var _0x5e1abd = "";
  if (_0x170c51 != "null") {
    var _0x2b6ca3 = "";
    if (_0x170c51["indexOf"]("BEGIN") == -0x1) _0x2b6ca3 = "\x0aYOU COULD EARN " + _0x5cd19e + " COINS";
    else _0x2b6ca3 = "\x0aPLEASE WAIT!";
    (_0x5e1abd = _0x170c51 + _0x2b6ca3), (_0x587de3["globalAlpha"] = 0.05), (_0x412628["alpha"] = 0.5), (_0x412628["multiLine"] = !![]);
  } else (_0x412628["multiLine"] = ![]), (_0x5e1abd = _0x5cd19e), (_0x587de3["globalAlpha"] = 0.3), (_0x412628["alpha"] = 0x1);
  _0x412628["setText"](_0x5e1abd), _0x412628["setFontSize"](0x16 * _0x385a2a);
  var _0x38f081 = _0x412628["getRenderedCanvas"](),
    _0x5aeda3 = _0x38f081["width"] + 0x19 * _0x385a2a,
    _0x456b1d = _0x38f081["height"] / 0x2 + 0xf * _0x385a2a;
  _0x170c51 != "null" && ((_0x5aeda3 = _0xefab3d), (_0x456b1d = _0x38f081["height"] / 0x2 + 0xf * _0x385a2a));
  var _0x5ae893 = _0x17a50d - _0x5aeda3 / 0x2,
    _0x5c062e = _0x17a50d;
  _0x170c51 == "null" && ((_0x5ae893 = _0x17a50d + _0x55d31c - _0x5aeda3 / 0x2), (_0x5c062e = _0x5ae893 - _0x55d31c * 1.5));
  (_0x412628["x"] = _0x5c062e),
    (_0x412628["y"] = _0xf9eb1a),
    _0x587de3["fillRect"](_0x5ae893, _0xf9eb1a - _0x456b1d / 0x2, _0x5aeda3, _0x456b1d),
    (_0x587de3["globalAlpha"] = 0x1),
    _0x412628["draw"](),
    _0x587de3["restore"]();
  if (_0x170c51 == "null") {
    _0x587de3["save"]();
    var _0x2d24ee = _0x2d8f34("./shop/mopecoin.png");
    if (_0x2d24ee) {
      var _0x4f56a9 = 0x1e * _0x385a2a,
        _0x849776 = (_0x4f56a9 / _0x2d24ee["height"]) * 1.25,
        _0x25d6a2 = _0x2d24ee["width"] * _0x849776,
        _0x5c744a = _0x2d24ee["height"] * _0x849776;
      _0x587de3["drawImage"](_0x2d24ee, _0x17a50d, _0xf9eb1a - _0x5c744a / 0x2, _0x25d6a2, _0x5c744a);
    }
    _0x587de3["restore"]();
  }
  (_0xf9eb1a = _0x24f0be - _0x290e89 / 0x2 - 0x5), (_0xefab3d = _0x645c5 * 0.9), (_0x587de3["globalAlpha"] = 0x1);
  if (_0x13ae42)
    for (var _0x4c6e26 = 0x0; _0x4c6e26 < _0x4a6165["length"]; _0x4c6e26++) {
      var _0x541cbb = _0x4a6165[_0x4c6e26];
      _0x541cbb["draw"]();
    }
  if (_0x2dd961) _0x1a0064();
  if (_0x5d2635) {
    _0x417f0a += ((_0x25ba5f ? 0x1 : 0x0) - _0x417f0a) * 0.1;
    if (_0x417f0a > 0.005 && _0x37000d) {
      (_0x587de3["globalAlpha"] = 0.3 * _0x417f0a),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](_0x2cfd66, _0x1d5c60, _0x4d31b1 * _0x4454f9, 0x0, 0x2 * Math["PI"]),
        (_0x587de3["fillStyle"] = "#000000"),
        _0x587de3["fill"](),
        (_0x587de3["globalAlpha"] = 0.5 * _0x417f0a),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](_0x431753, _0x39cf46, _0x4d31b1 * _0x4454f9 * 0.57, 0x0, 0x2 * Math["PI"]),
        (_0x587de3["fillStyle"] = "#000000"),
        _0x587de3["fill"]();
      var _0x1d7f57 = _0xa59e32 * 0.3;
      (_0xa59e32 -= _0x1d7f57),
        (_0x171502 += _0x1d7f57),
        (_0x1e6c5e += (_0x1d5591 - _0x1e6c5e) * 0.1),
        _0x587de3["save"](),
        _0x587de3["translate"](_0x645c5 / 0x2, _0x24f0be / 0x2),
        _0x587de3["rotate"](_0x171502),
        (_0x587de3["globalAlpha"] = 0.5 * _0x417f0a),
        _0x587de3["beginPath"](),
        (_0x587de3["fillStyle"] = "#000000");
      var _0x266047 = 0x28 * _0x4454f9;
      if (_0x2fa637[_0x204989]) _0x266047 = (0x9 + _0x2fa637[_0x204989]["rad"]) * _0x39fa27;
      _0x266047 *= 0.1 + 0.9 * _0x1e6c5e;
      var _0x297c4a = 0xf * _0x4454f9,
        _0x47f623 = 0x1e * _0x4454f9 * (0.2 + 0.8 * _0x1e6c5e);
      _0x587de3["moveTo"](_0x266047 + _0x47f623, 0x0),
        _0x587de3["lineTo"](_0x266047, _0x297c4a / 0x2),
        _0x587de3["lineTo"](_0x266047, -_0x297c4a / 0x2),
        _0x587de3["closePath"](),
        _0x587de3["fill"](),
        _0x587de3["restore"]();
    }
  }
  for (var _0x4c6e26 = _0x34f2a8["length"] - 0x1; _0x4c6e26 >= 0x0; _0x4c6e26--) {
    var _0x204538 = _0x34f2a8[_0x4c6e26];
    _0x204538["draw"]();
    if (_0x204538["timedOut"]) _0x34f2a8["splice"](_0x4c6e26, 0x1);
  }
  _0x587de3["restore"]();
};
var _0x3661c9 = "Ready to survive!",
  _0x37aa31 = 0x19,
  _0x22c01a = "white",
  _0x44b5d9 = +new Date() + 0x0,
  _0x4c0d8c = [],
  _0x13c4cb = +new Date() + 0x0,
  _0x40013a = 0x0,
  _0x5814f7 = 0x64,
  _0x5f1443 = 0x2,
  _0x4c5f18 = ![],
  _0x226297 = ![],
  _0xaf959c = 0x0,
  _0x5dd63b = [],
  _0x5d84a7 = ![],
  _0x200343 = 0x0,
  _0x4ed012 = 0x0;

function _0x2afdb6(_0x5dc9bb, _0x533130) {
  (_0x3661c9 = _0x5dc9bb), (_0x44b5d9 = +new Date() + _0x533130);
}

function _0xa55802() {
  var _0x4c2a9d = 0x1,
    _0x444f53 = (_0x44b5d9 - _0x168a54) / 0x3e8 / _0x4c2a9d;
  _0x444f53 = 0x0 > _0x444f53 ? 0x0 : 0x1 < _0x444f53 ? 0x1 : _0x444f53;
  if (_0x444f53 > 0x0) {
    _0x587de3["save"](), (_0x587de3["globalAlpha"] = _0x444f53), _0x5bbdcc["setText"](_0x3661c9), _0x5bbdcc["setColor"](_0x22c01a);
    if (_0x3661c9 == "SPECTATE MODE") _0x37aa31 = 0x32;
    else _0x37aa31 = 0x19;
    _0x5bbdcc["setFontSize"](_0x37aa31 * _0x385a2a),
      (_0x5bbdcc["x"] = _0x645c5 / 0x2),
      (_0x5bbdcc["y"] = _0x24f0be * 0.25),
      _0x5bbdcc["draw"](),
      _0x587de3["restore"]();
  }
  var _0x44abb6 = _0x13c4cb - _0x168a54 > 0x0 ? 0x1 : 0x0;
  _0x40013a += (_0x44abb6 - _0x40013a) * 0.05;
  if (_0x40013a > 0.01 && !(_0x57ae6d == 0x2)) {
    const _0x4a9c68 = parseInt(localStorage["getItem"]("times_shown_tutorial") || "0");
    _0x4c5f18 && !_0x456cda && _0x4a9c68 < 0x3 && $bus["emit"]($bus["EVENTS"]["SHOW_ANIMAL_TUTORIAL"]);
  }
  _0x11b99a != null && _0x11b99a["interface"](), _0x1de80b(), _0x2074df();
}

function _0x2074df() {
  if (_0x11b99a != null) {
    if (_0x11b99a["interfaceButtons"])
      for (var _0x286eb4 = 0x0; _0x286eb4 < _0x11b99a["interfaceButtons"]["length"]; _0x286eb4++) {
        var _0x133560 = _0x11b99a["interfaceButtons"][_0x286eb4];
        _0x133560["isVisible"] && _0x133560["draw"]();
      }
  }
}
var _0x34f2a8 = [],
  _0x16d19f = 0x0,
  _0x458eea = 0x0;

function _0x531933(_0x3695fc, _0x401882) {
  var _0x207617 = _0x3695fc - _0x16d19f;
  if (_0x3695fc - _0x16d19f != 0x0 && (_0x168a54 - _0x458eea) / 0x3e8 > 0.7) {
    (_0x16d19f = _0x3695fc), (_0x458eea = _0x168a54);
    var _0x1ae976 = new _0x226734(_0x207617, " XP");
    _0x34f2a8["push"](_0x1ae976);
  }
}
var _0x41210c = 0x0;

function _0x286cc2(_0x58d7c6, _0xaee12b) {
  var _0x11b01f = _0x58d7c6 - _0x41210c;
  if (_0x11b01f > 0x0) {
    if (_0x58d7c6 - _0x41210c != 0x0 && (_0x168a54 - _0x458eea) / 0x3e8 > 0.7) {
      (_0x41210c = _0x58d7c6), (_0x458eea = _0x168a54);
      var _0x3cd88d = new _0x226734(_0x11b01f, _0x11b01f > 0x1 ? " COINS" : " COIN", "yellow");
      _0x34f2a8["push"](_0x3cd88d);
    }
  }
}

function _0x472668() {
  if (_0x4251af && _0x4251af["length"] > 0x0)
    for (i = 0x0; i < _0x4251af["length"]; i++) {
      var _0x2ce402 = _0x4251af[i];
      if (_0x2ce402["oType"] == _0x3d4eea) !_0x2ce402["droppedInHole"] && (_0x3bbb92(_0x2ce402, "brown", 0x2), _0x3bbb92(_0x2ce402, "orange", 1.5));
      else {
        if (_0x2ce402["oType"] == _0x26acd2) _0x2f996f(_0x2ce402, 0x3, 0.9);
        else {
          if (_0x2ce402["oType"] == _0x5aa814) _0x5df2f5(_0x2ce402, 0x3, 0.9);
          else _0x3bbb92(_0x2ce402, "red", 0x2);
        }
      }
    }
}

function _0x32559a(_0x5d6403) {
  switch (_0x5d6403) {
    case 0x0:
      return "tornado";
    case 0x1:
      return "waterspout";
    case 0x2:
      return "dustdevil";
    case 0x3:
      return "arcticwhirl";
    case 0x4:
      return "firedevil";
    case 0x5:
      return "deviltwister";
  }
  return "tornado";
}

function _0x2f996f(_0x2d8b77, _0x681aa, _0x2e2f3d) {
  var _0x5e4376 = "/assets/s/" + _0x434eda + "/img/disasters/" + _0x32559a(_0x2d8b77["specType"]) + ".png",
    _0x54276b = _0x2d8f34(_0x5e4376);
  if (_0x54276b) {
    var _0x1d896b = _0x4454f9 * Math["max"](0x2, _0x2d8b77["rad"]),
      _0x4cd9b0 = _0x1d896b * _0x681aa,
      _0x2df0f1 = 0x0;
    if (_0x57ae6d == 0x3) {
      var _0x1c3670 = 0x3c / 0x3c,
        _0x411f4d = 0x3e8 / _0x1c3670,
        _0x38b3e0 = (_0x168a54 % _0x411f4d) / _0x411f4d;
      _0x2df0f1 = _0x38b3e0 * 0x2 * Math["PI"];
    }
    _0x587de3["globalAlpha"] = 0x1;
    var _0x302394 = _0x645c5 - (0xa * _0x4454f9 + _0x4f607c["width"] * _0x385a2a) + (_0x2d8b77["x"] * (_0x4f607c["width"] * _0x385a2a)) / _0x2c6299,
      _0x12f86a = 0xa * _0x4454f9 + (_0x2d8b77["y"] * (_0x4f607c["height"] * _0x385a2a)) / _0x27ef2a;
    _0x587de3["save"](), (_0x587de3["globalAlpha"] = _0x2e2f3d), _0x587de3["translate"](_0x302394, _0x12f86a);
    if (_0x57ae6d == 0x3) _0x587de3["rotate"](_0x2df0f1);
    _0x587de3["drawImage"](_0x54276b, 0x0 - _0x4cd9b0, 0x0 - _0x4cd9b0, 0x2 * _0x4cd9b0, 0x2 * _0x4cd9b0), _0x587de3["restore"]();
  }
}

function _0x4864ba(_0x17b205) {
  switch (_0x17b205) {
    case _0x53039f:
      return "img/disasters/tsunami.png";
    case _0x5ee565:
      return "img/disasters/dustwave.png";
    case _0x2ca99e:
      return "img/disasters/heatwave.png";
    case _0x1f6d67:
      return "img/disasters/heatwave.png";
    case _0x1b5017:
      return "img/disasters/coldwave.png";
  }
  return null;
}

function _0x5df2f5(_0x1fd4c4, _0x31fe1b, _0x25346b) {
  var _0x305767 = "/assets/s/" + _0x434eda + "/" + _0x4864ba(_0x1fd4c4["abil"]),
    _0x151e21 = _0x2d8f34(_0x305767);
  if (_0x151e21) {
    var _0x24c13b = _0x4454f9 * Math["max"](0x2, _0x1fd4c4["rad"]),
      _0x304b75 = _0x24c13b * _0x31fe1b;
    _0x587de3["globalAlpha"] = 0x1;
    var _0x202f70 = _0x645c5 - (0xa * _0x4454f9 + _0x4f607c["width"] * _0x385a2a) + (_0x1fd4c4["x"] * (_0x4f607c["width"] * _0x385a2a)) / _0x2c6299,
      _0x1a2033 = 0xa * _0x4454f9 + (_0x1fd4c4["y"] * (_0x4f607c["height"] * _0x385a2a)) / _0x27ef2a;
    _0x587de3["save"](),
      (_0x587de3["globalAlpha"] = _0x25346b),
      _0x587de3["translate"](_0x202f70, _0x1a2033),
      _0x587de3["rotate"](_0x1fd4c4["angle"] + _0x3d960f(_0xbdfc3c)),
      _0x587de3["drawImage"](_0x151e21, 0x0 - _0x304b75, 0x0 - _0x304b75, 0x2 * _0x304b75, 0x2 * _0x304b75),
      _0x587de3["restore"]();
  }
}
var _0xbdfc3c = 0x5a;

function _0x1ac276(_0x174e5c, _0x16f36e, _0x54f544) {
  var _0x4ffd83 = "/assets/s/" + _0x434eda + "/img/pumpkin/" + _0x174e5c["specType"] + "/0.png",
    _0x7ec7e9 = _0x2d8f34(_0x4ffd83);
  if (_0x7ec7e9) {
    var _0x5884d1 = _0x4454f9 * Math["max"](0x2, _0x174e5c["rad"]),
      _0x58270b = _0x5884d1 * _0x16f36e;
    _0x587de3["globalAlpha"] = 0x1;
    var _0x24c223 = _0x645c5 - (0xa * _0x4454f9 + _0x4f607c["width"] * _0x385a2a) + (_0x174e5c["x"] * (_0x4f607c["width"] * _0x385a2a)) / _0x2c6299,
      _0x4c4205 = 0xa * _0x4454f9 + (_0x174e5c["y"] * (_0x4f607c["height"] * _0x385a2a)) / _0x27ef2a;
    _0x587de3["save"](),
      (_0x587de3["globalAlpha"] = _0x54f544),
      _0x587de3["translate"](_0x24c223, _0x4c4205),
      _0x587de3["drawImage"](_0x7ec7e9, 0x0 - _0x58270b, 0x0 - _0x58270b, 0x2 * _0x58270b, 0x2 * _0x58270b),
      _0x587de3["restore"]();
  }
}

function _0x35d11f(_0x359439, _0x496061, _0x20702c) {
  if (_0x359439) {
    var _0x54c1af = _0x4454f9 * Math["max"](0x3, _0x359439["rad"] * (_0x4f607c["width"] / _0x2c6299)),
      _0xd67f0c = _0x645c5 - (0xa * _0x4454f9 + _0x4f607c["width"] * _0x385a2a) + (_0x359439["x"] * (_0x4f607c["width"] * _0x385a2a)) / _0x2c6299,
      _0x30533b = 0xa * _0x4454f9 + (_0x359439["y"] * (_0x4f607c["height"] * _0x385a2a)) / _0x27ef2a,
      _0x23e26d = _0x54c1af + _0x4454f9 * 0x2;
    _0x587de3["beginPath"](),
      (_0x587de3["fillStyle"] = "black"),
      _0x587de3["arc"](_0xd67f0c, _0x30533b, _0x23e26d, 0x0, 0x2 * Math["PI"]),
      _0x587de3["fill"](),
      _0x587de3["beginPath"](),
      (_0x587de3["fillStyle"] = _0x496061),
      _0x587de3["arc"](_0xd67f0c, _0x30533b, _0x54c1af, 0x0, 0x2 * Math["PI"]),
      _0x587de3["fill"]();
  }
}

function _0x3bbb92(_0xba12e5, _0x1f92e1, _0x51b872, _0x3f0f15) {
  if (_0xba12e5) {
    (_0x587de3["globalAlpha"] = _0x3f0f15 ? _0x3f0f15 : 0x1), (_0x587de3["fillStyle"] = _0x1f92e1), _0x587de3["beginPath"]();
    var _0x5a4b87 = _0x4454f9 * Math["max"](0x2, _0xba12e5["rad"]);
    _0x587de3["arc"](
      _0x645c5 - (0xa * _0x4454f9 + _0x4f607c["width"] * _0x385a2a) + (_0xba12e5["x"] * (_0x4f607c["width"] * _0x385a2a)) / _0x2c6299,
      0xa * _0x4454f9 + (_0xba12e5["y"] * (_0x4f607c["height"] * _0x385a2a)) / _0x27ef2a,
      _0x5a4b87 * _0x51b872,
      0x0,
      0x2 * Math["PI"]
    ),
      _0x587de3["fill"]();
  }
}

function _0xcd5b8b(_0x2ad790, _0x4950f4, _0x7ee646) {
  const _0x2d9b16 = _0x2ad790["find"]((_0x2f6d4d) => _0x2f6d4d["rank"] == _0x7ee646);
  _0x2ad790["length"] === 0xa && _0x2ad790["indexOf"](_0x2d9b16) === _0x2ad790["length"] - 0x1 && _0x2ad790["pop"](),
    _0x417709
      ? (_0x2ad790 = _0x2ad790["map"]((_0x130249) => _0x130249["rank"] + ". (" + _0x105fd1(_0x130249["score"]) + ")"))
      : (_0x2ad790 = _0x2ad790["map"]((_0x4432d2) => {
          const _0x109ffa = _0x4432d2["name"] || "mope.io";
          return _0x4432d2["rank"] + ". " + _0x109ffa + " (" + _0x105fd1(_0x4432d2["score"]) + ")";
        })),
    $bus["emit"]($bus["EVENTS"]["SET_LEADERBOARD"], {
      leaders: _0x2ad790,
      ownRank: _0x7ee646,
      ownScore: _0x2d9b16["score"],
    });
}
var _0x307b4c = !![];

function _0x98c3df(_0x14aad3) {
  _0x307b4c = _0x14aad3;
  let _0x6612b0 = "1",
    _0x1ead68 = "visible",
    _0x5b74c8 = "static";
  !_0x14aad3 && ((_0x6612b0 = "0"), (_0x1ead68 = "hidden"), (_0x5b74c8 = "absolute;"));
  const _0x1eb4b2 = (_0x4c7a25) => {
    const _0x13090b = document["getElementById"](_0x4c7a25);
    _0x13090b &&
      ((_0x13090b["style"]["position"] = _0x5b74c8), (_0x13090b["style"]["opacity"] = _0x6612b0), (_0x13090b["style"]["visibility"] = _0x1ead68));
  };
  _0x1eb4b2("moneyRectWrap"), _0x1eb4b2("moneyRectBottomWrap");
  var _0x4b0207 = document["querySelector"](".grecaptcha-badge");
  _0x4b0207 && (_0x4b0207["style"]["display"] = _0x14aad3 ? "block" : "none"),
    $bus["emit"]($bus["EVENTS"]["TOGGLE_MENU_VISIBILITY"], _0x14aad3),
    _0x14aad3 && _0x17b890($bus["CONSTANTS"]["AD_SCREEN_LAYOUTS"]["MENU"]);
}

function _0x6b227a() {
  return;
}

function _0x165c17() {
  _0x98c3df(!![]),
    (document["getElementById"]("moneyRectangle")["style"]["marginTop"] = "55px"),
    (document["getElementById"]("mopeMenu")["style"]["display"] = "block");
}

function _0x532a55() {
  console["log"]("client objs reset!"), (_0x434d04 = []), (_0x2fa637 = {}), (_0xcc7181 = []);
}
var _0x1f442f = function (_0x2c0b63, _0x140c83, _0x3061e9, _0x5d5c8f, _0x347a29) {
  _0x2c0b63["fillText"](_0x140c83, _0x5d5c8f, _0x347a29), _0x2c0b63["fillText"](": " + _0x3061e9, _0x5d5c8f + 0x78, _0x347a29);
};

function _0x43ad97() {
  if (!_0x27304c || disable1v1Button) return;
  var _0x52b185 = new _0x5906b0(0x2);
  _0x52b185["writeUInt8"](0x34), _0x52b185["writeUInt8"](0x0), _0xb4d17c(_0x52b185);
}

function _0x1a0064() {
  if (_0x20b7a7) {
    if (_0x40e4b5 == null)
      (_0x40e4b5 = new _0x570133(0x0, 0x0, 0x3c * _0x385a2a, 0x3c * _0x385a2a, "Invite for 1v1", 0x1e)),
        (_0x40e4b5["showLabeleOnHover"] = !![]),
        (_0x40e4b5["textShadow"] = !![]),
        (_0x40e4b5["drawTextOnHowever"] = function () {
          if (_0x513ff3 > 0.01) return;
          this["drawText"](this["w"] / 0x2, this["h"] + this["h"] / 0x2);
        }),
        (_0x40e4b5["onClick"] = function () {
          if (_0x513ff3 > 0.01) return;
          !this["clicked"] && ((this["isVisible"] = ![]), (this["clicked"] = !![]), (this["isHighLighted"] = ![]), _0x43ad97());
        }),
        (_0x40e4b5["onMouseMove"] = function () {}),
        (_0x40e4b5["update"] = function () {
          (this["x"] = _0x645c5 / 0x2 - this["w"] / 0x2), (this["y"] = 0x2d * _0x385a2a + this["h"] / 0x2);
        }),
        (_0x40e4b5["onInterfaceReset"] = function () {
          (this["isVisible"] = ![]), (_0x40e4b5 = null);
        }),
        (_0x40e4b5["onAfterDraw"] = function () {
          var _0xa55f57 = _0x2d8f34("img/icons/1v1.png");
          if (_0xa55f57) {
            _0x587de3["save"]();
            var _0x2e560a = this["w"] * 0.8,
              _0x26872a = (this["w"] - _0x2e560a) / 0x2;
            _0x587de3["drawImage"](_0xa55f57, this["x"] + _0x26872a, this["y"] + _0x26872a, _0x2e560a, _0x2e560a), _0x587de3["restore"]();
          }
          if (_0x513ff3 > 0.01) {
            (this["alpha"] = 0.1), (rechargeTotalT = 0x3e8 * 0x1e), (rechargeEndT = +new Date() + 0x3e8 * _0x513ff3);
            var _0x5b87b7 = Math["max"](0x0, rechargeEndT - _0x168a54),
              _0xfae193 = _0x5b87b7 / rechargeTotalT;
            _0x587de3["save"](), (_0x587de3["fillStyle"] = "#000000");
            var _0x2d8246 = this["x"],
              _0x2dc901 = this["y"],
              _0x1e587e = this["w"],
              _0x523f5 = this["h"] * 0.5;
            (_0x587de3["globalAlpha"] = 0.1),
              _0x587de3["fillRect"](_0x2d8246, _0x2dc901 + _0x523f5 / 0x2, _0x1e587e, _0x523f5),
              (_0x587de3["globalAlpha"] = 0x1),
              (_0x587de3["fillStyle"] = "#F3C553"),
              _0x587de3["fillRect"](_0x2d8246, _0x2dc901 + _0x523f5 / 0x2, _0x1e587e * _0xfae193, _0x523f5),
              _0x587de3["restore"]();
          } else this["alpha"] = disable1v1Button ? 0.1 : 0x1;
        }),
        _0x11b99a["interfaceButtons"]["push"](_0x40e4b5);
    else {
      if (_0x40e4b5 != null) {
        _0x40e4b5["isVisible"] = _0x27304c && !_0x226297 && !_0x34fedb;
        if (_0x40e4b5["isVisible"]) _0x40e4b5["clicked"] = ![];
        _0x40e4b5["draw"]();
      }
    }
  } else _0x40e4b5 = null;
}

function _0xf80f4b(_0xfdf91) {
  (this["interfaceType"] = _0xfdf91),
    (this["data"] = {}),
    (this["interfaceCanvas"] = null),
    (this["interfaceCanvas_pos"] = 0x0),
    (this["expiresT"] = 0x0),
    (this["maxDur"] = 0x96),
    (this["interfaceShowT"] = 0x0),
    (this["animalType"] = _0x2fa637[_0x204989]["animalType"]),
    (this["aniRad"] = _0x2fa637[_0x204989]["rad"]),
    (this["customButtons"] = []),
    (this["loadData"] = function (_0x38ab0e) {
      this["interfaceType"] == 0x1
        ? ((this["maxDur"] = _0x38ab0e["readUInt8"]()),
          (this["data"] = {}),
          (this["data"][_0x322b1f] = _0x38ab0e["readUInt8"]()),
          (this["data"][_0x5b1639] = _0x38ab0e["readUInt8"]()),
          (this["data"][_0x28027c] = _0x38ab0e["readUInt8"]()),
          (this["data"][_0x250a37] = _0x38ab0e["readUInt8"]()),
          (this["data"][_0x448b86] = _0x38ab0e["readUInt8"]()),
          (this["data"][_0x321383] = _0x38ab0e["readUInt8"]()),
          (this["data"][_0x3a0961] = _0x38ab0e["readUInt8"]()),
          (this["data"][_0x1ae9e8] = _0x38ab0e["readUInt8"]()),
          (this["data"][_0x11d87b] = _0x38ab0e["readUInt8"]()),
          (this["data"][_0x4f1c79] = _0x38ab0e["readUInt8"]()),
          (this["data"][_0x4d5dff] = _0x38ab0e["readUInt8"]()),
          (this["data"][_0x58f094] = _0x38ab0e["readUInt8"]()),
          (this["data"][_0x510716] = _0x38ab0e["readUInt8"]()),
          (this["rows"] = 0xd),
          (this["data"]["anis"] = new Array()),
          this["data"]["anis"]["push"](_0x4d5dff),
          this["data"]["anis"]["push"](_0x58f094),
          this["data"]["anis"]["push"](_0x510716),
          this["data"]["anis"]["push"](_0x322b1f),
          this["data"]["anis"]["push"](_0x5b1639),
          this["data"]["anis"]["push"](_0x28027c),
          this["data"]["anis"]["push"](_0x250a37),
          this["data"]["anis"]["push"](_0x448b86),
          this["data"]["anis"]["push"](_0x321383),
          this["data"]["anis"]["push"](_0x3a0961),
          this["data"]["anis"]["push"](_0x1ae9e8),
          this["data"]["anis"]["push"](_0x11d87b),
          this["data"]["anis"]["push"](_0x4f1c79))
        : ((this["data"] = {}),
          (this["maxDur"] = _0x38ab0e["readUInt8"]()),
          (this["data"]["selected"] = _0x38ab0e["readUInt8"]()),
          (this["data"][0x0] = _0x38ab0e["readUInt8"]()),
          (this["data"][0x1] = _0x38ab0e["readUInt8"]()),
          (this["data"][0x2] = _0x38ab0e["readUInt8"]()),
          (this["data"][0x3] = 0x0),
          (this["rows"] = 0x4)),
        (this["expiresT"] = _0x168a54 + this["maxDur"] * 0x3e8),
        this["interfaceCanvas"] == null &&
          ((this["interfaceCanvas"] = document["createElement"]("canvas")),
          this["interfaceCanvas"]["setAttribute"]("id", "playerCustomCanvas"),
          (this["ctx"] = this["interfaceCanvas"]["getContext"]("2d")));
    }),
    (this["getTitle"] = function () {
      if (this["interfaceType"] == 0x1) return "APEX KILLS";
      else {
        if (this["interfaceType"] == 0x2) return "CHOOSE MAIN ABILITY";
        else {
          if (this["interfaceType"] == 0x3) return "CHOOSE PASSIVE ABILITY";
          else return "OPTIONS";
        }
      }
    }),
    (this["getInterfaceSize"] = function () {
      if (this["animalType"] == _0x322b1f) return this["aniRad"] * _0x385a2a;
      else return this["aniRad"] * 0x2 * _0x385a2a;
    }),
    (this["drawCircles"] = function (_0x5d0776, _0x10734c, _0x43d523) {
      if (this["animalType"] == _0x322b1f) return this["bdInterface"](_0x5d0776, _0x10734c, _0x43d523);
      else return this["getInterface"](_0x5d0776, _0x10734c, _0x43d523);
    }),
    (this["bdInterface"] = function (_0x57f5dc, _0x422a98, _0x591fe0) {
      var _0x4f61ff = 3.1;
      this["ctx"]["save"](), (this["ctx"]["globalAlpha"] = 0.05);
      var _0x3814d5 = _0x591fe0 * _0x4f61ff;
      return (
        (this["ctx"]["lineWidth"] = 0x2),
        (this["ctx"]["fillStyle"] = "black"),
        this["ctx"]["beginPath"](),
        this["ctx"]["arc"](_0x57f5dc, _0x422a98, _0x3814d5 - _0x591fe0 / 0x2, 0x0, Math["PI"] * 0x2, ![]),
        this["ctx"]["arc"](_0x57f5dc, _0x422a98, _0x3814d5 + _0x591fe0 / 0x2, Math["PI"] * 0x2, 0x0, !![]),
        this["ctx"]["fill"](),
        (this["ctx"]["globalAlpha"] = 0.1),
        (this["ctx"]["strokeStyle"] = "black"),
        this["ctx"]["beginPath"](),
        this["ctx"]["arc"](_0x57f5dc, _0x422a98, _0x3814d5 + _0x591fe0 / 0x2, Math["PI"] * 0x2, 0x0),
        this["ctx"]["stroke"](),
        this["ctx"]["beginPath"](),
        this["ctx"]["arc"](_0x57f5dc, _0x422a98, _0x3814d5 - _0x591fe0 / 0x2, 0x0, Math["PI"] * 0x2, ![]),
        this["ctx"]["stroke"](),
        this["ctx"]["restore"](),
        _0x3814d5
      );
    }),
    (this["getInterface"] = function (_0x58fa3e, _0x51496f, _0x522d08) {
      var _0x152b3a = 0x3,
        _0x994509 = _0x522d08 * _0x152b3a;
      (this["ctx"]["lineWidth"] = 0x4), (this["ctx"]["fillStyle"] = "red"), (this["ctx"]["globalAlpha"] = 0.1), this["ctx"]["beginPath"]();
      var _0x21a8bd = _0x522d08 * 0.9,
        _0x584406 = _0x522d08 * 1.9;
      return (
        this["ctx"]["arc"](_0x58fa3e, _0x51496f, _0x994509 - _0x21a8bd, 0x0, Math["PI"] * 0x2, ![]),
        this["ctx"]["arc"](_0x58fa3e, _0x51496f, _0x994509 + _0x584406, Math["PI"] * 0x2, 0x0, !![]),
        this["ctx"]["fill"](),
        (this["ctx"]["globalAlpha"] = 0.1),
        (this["ctx"]["strokeStyle"] = "blue"),
        this["ctx"]["beginPath"](),
        this["ctx"]["arc"](_0x58fa3e, _0x51496f, _0x994509 + _0x584406, Math["PI"] * 0x2, 0x0),
        this["ctx"]["stroke"](),
        this["ctx"]["beginPath"](),
        this["ctx"]["arc"](_0x58fa3e, _0x51496f, _0x994509 - _0x21a8bd, 0x0, Math["PI"] * 0x2, ![]),
        this["ctx"]["stroke"](),
        _0x994509
      );
    }),
    (this["drawTitle"] = function (_0x146af1) {
      (this["ctx"]["globalAlpha"] = 0x1), (this["ctx"]["fillStyle"] = "#FFFFFF"), (this["ctx"]["font"] = "30px Arial");
      var _0x35924a = this["getTitle"](),
        _0x3fd9b7 = (_0x146af1 + 0x50) * _0x385a2a,
        _0x5e0a65 = this["interfaceCanvas"]["width"] / 0x2 - this["ctx"]["measureText"](_0x35924a)["width"] / 0x2;
      if (this["animalType"] != _0x322b1f) _0x3fd9b7 -= 0x14 * _0x385a2a;
      this["ctx"]["fillText"](_0x35924a, _0x5e0a65, _0x3fd9b7);
    }),
    (this["display"] = function () {
      if (this["interfaceCanvas"] == null) return;
      if (this["interfaceShowT"] == 0x0) this["interfaceShowT"] = _0x168a54;
      var _0x16d91e = 0x37,
        _0x738bd5 = 0x5,
        _0x2c4e1c = 0x0,
        _0x5610e6 = this["getInterfaceSize"](),
        _0x41094c = 0x82 * _0x385a2a + 0x6 * (_0x5610e6 + 0xa * _0x385a2a),
        _0xa44609 = _0x41094c * 1.3;
      (_0x16d91e = _0xa44609 + _0x738bd5 * 0x2),
        (this["interfaceCanvas"]["width"] = _0x41094c + _0x738bd5 * 0x2),
        (this["interfaceCanvas"]["height"] = _0x16d91e);
      var _0xd190df = 0xc8;
      (this["interfaceCanvas_pos"] = _0xd190df), (this["ctx"]["globalAlpha"] = 0.1), (this["ctx"]["fillStyle"] = "#000000");
      if (this["interfaceType"] != 0x1) this["ctx"]["fillRect"](0x0, 0x0, this["interfaceCanvas"]["width"], this["interfaceCanvas"]["height"]);
      this["drawTitle"](_0x738bd5), (_0xd190df = 0x64);
      var _0x35ecdd = 0x168 / this["rows"],
        _0x2d2fa9 = this["interfaceCanvas"]["width"] / 0x2,
        _0x422c6b = this["interfaceCanvas"]["height"] / 0x2;
      this["ctx"]["save"]();
      var _0x1d38d0 = 3.1,
        _0x306e11 = _0x5610e6 * _0x1d38d0,
        _0x3709dd = (Math["PI"] * 0x2) / this["rows"],
        _0x378a95 = 0x0,
        _0x15e161 = (_0x168a54 - this["interfaceShowT"]) / 0x3e8,
        _0x5b7e34 = 0x2,
        _0x4c48de = 0x8;
      _0x378a95 = _0x4c48de * Math["sin"](((0x2 * Math["PI"]) / _0x5b7e34) * _0x15e161);
      if (this["interfaceType"] == 0x1) this["bdInterface"](_0x2d2fa9, _0x422c6b, _0x5610e6);
      for (r = 0x0; r < this["rows"]; r++) {
        var _0x48f14d = _0x422c6b + Math["sin"](_0x35ecdd * r * (Math["PI"] / 0xb4) - _0x3d960f(0xb4)) * _0x306e11,
          _0x3ee9aa = _0x2d2fa9 + Math["cos"](_0x35ecdd * r * (Math["PI"] / 0xb4) - _0x3d960f(0xb4)) * _0x306e11,
          _0x49ccc3 = (r - 0x1) * _0x3709dd - _0x3d960f(0xb4),
          _0x70a269 = _0x49ccc3 + _0x3709dd;
        if (this["interfaceType"] == 0x1) {
          ani = this["data"]["anis"][r];
          var _0x48593b = this["getSkinForAniKills"](ani),
            _0x1a9a7e = _0x2fa637[_0x204989]["getSkinImageObj"](_0x48593b);
          if (_0x1a9a7e) {
            var _0x27b31f = this["data"][ani] > 0x0;
            this["ctx"]["save"](), (this["ctx"]["globalAlpha"] = _0x27b31f ? 0x1 : 0.3);
            var _0x51ea07 = _0x5610e6;
            _0x27b31f &&
              ((this["ctx"]["shadowOffsetX"] = 0x0),
              (this["ctx"]["shadowOffsetY"] = 0x0),
              (this["ctx"]["shadowColor"] = "black"),
              (this["ctx"]["shadowBlur"] = 0x8),
              (_0x51ea07 -= _0x378a95)),
              this["ctx"]["drawImage"](_0x1a9a7e, _0x3ee9aa - _0x51ea07 / 0x2, _0x48f14d - _0x51ea07 / 0x2, _0x51ea07, _0x51ea07),
              this["ctx"]["restore"]();
          } else {
          }
        } else this["showInterfaceButton"](_0x2d2fa9, _0x422c6b, this["data"][r], _0x3ee9aa, _0x48f14d);
      }
      this["ctx"]["restore"]();
      if (this["interfaceCanvas"] != null) {
        if (this["interfaceCanvas"]["width"]) {
          var _0xbc86f4 = (_0x168a54 - this["interfaceShowT"]) / 0x258,
            _0x2deeeb = (this["expiresT"] - _0x168a54) / 0x258;
          if (_0x2deeeb < 0x1) _0xbc86f4 = Math["max"](0x0, _0x2deeeb);
          var _0x5d37fc = Math["min"](0x1, _0xbc86f4),
            _0x255be1 = this["interfaceCanvas"]["width"] * _0x5d37fc,
            _0x253c60 = this["interfaceCanvas"]["height"] * _0x5d37fc;
          _0x587de3["save"](),
            (_0x587de3["globalAlpha"] = _0x5d37fc),
            (this["interfaceCanvas"]["screenX"] = _0x645c5 / 0x2 - _0x255be1 / 0x2),
            (this["interfaceCanvas"]["screenY"] = _0x24f0be / 0x2 - _0x253c60 / 0x2),
            this["updateButtons"](),
            _0x587de3["drawImage"](
              this["interfaceCanvas"],
              _0x645c5 / 0x2 - _0x255be1 / 0x2,
              _0x24f0be / 0x2 - _0x253c60 / 0x2,
              _0x255be1,
              _0x253c60
            ),
            _0x587de3["restore"](),
            (_0x168a54 > this["expiresT"] || !_0x37000d) && _0x188601["destroy"]();
        }
      }
    }),
    (this["destroy"] = function () {
      if (this["customButtons"] != null && this["customButtons"]["length"] > 0x0)
        for (i = 0x0; i < this["customButtons"]["length"]; i++) {
          this["customButtons"][i]["isVisible"] = ![];
        }
      (this["interfaceCanvas"] = null), (this["ctx"] = null), (_0x188601 = null), console["log"]("custom interface canvas destroyed!");
    }),
    (this["updateButtons"] = function () {
      var _0x2861a8 = this["interfaceCanvas"]["width"],
        _0x263b33 = this["interfaceCanvas"]["height"],
        _0x20fe80 = _0x645c5 / 0x2 - _0x2861a8 / 0x2,
        _0x401c9 = _0x24f0be / 0x2 - _0x263b33 / 0x2;
      if (this["customButtons"] != null && this["customButtons"]["length"] > 0x0)
        for (i = 0x0; i < this["customButtons"]["length"]; i++) {
          (this["customButtons"][i]["screenX"] = _0x20fe80), (this["customButtons"][i]["screenY"] = _0x401c9);
        }
    }),
    (this["drawAngularInterface"] = function (_0x264d1d, _0x28d714, _0xcf571e, _0x2e5e85, _0x56a747, _0x2b80a7) {
      this["ctx"]["save"](), (this["ctx"]["globalAlpha"] = 0.2), (this["ctx"]["lineWidth"] = _0xcf571e);
      var _0x54921e = (Math["PI"] * 0x2) / this["rows"],
        _0x566e26 = _0x3d960f(-0x5a),
        _0x4d1b9b = ["red", "green", "blue", "purple"];
      for (r = 0x1; r <= this["rows"]; r++) {
        this["ctx"]["beginPath"]();
        if (this["interfaceType"] == 0x1) this["ctx"]["strokeStyle"] = "black";
        else this["ctx"]["strokeStyle"] = _0x4d1b9b[r - 0x1];
        this["ctx"]["arc"](_0x264d1d, _0x28d714, _0x56a747 - _0x2e5e85 * _0x2b80a7, _0x566e26, _0x566e26 + _0x54921e),
          this["ctx"]["stroke"](),
          (_0x566e26 += _0x54921e);
      }
      this["ctx"]["restore"]();
    }),
    (this["getSkinForAniKills"] = function (_0x1531a8) {
      switch (_0x1531a8) {
        case _0x322b1f:
          return "./skins/volcano/blackdragon/0/blackdragon.png";
        case _0x28027c:
          return "./skins/land/dinomonster/0/dinomonster.png";
        case _0x448b86:
          return "./skins/arctic/icemonster/0/icemonster.png";
        case _0x5b1639:
          return "./skins/volcano/landmonster/0/landmonster.png";
        case _0x250a37:
          return "./skins/ocean/seamonster/0/seamonster.png";
        case _0x321383:
          return "./skins/desert/scorpion/0/giantscorpion.png";
        case _0x58f094:
          return "./skins/arctic/yeti/0/yeti.png";
        case _0x1ae9e8:
          return "./skins/land/dragon/0/dragon.png";
        case _0x11d87b:
          return "./skins/land/trex/0/trex.png";
        case _0x4f1c79:
          return "./skins/ocean/kraken/0/kraken.png";
        case _0x4d5dff:
          return "./skins/ocean/kingcrab/0/kingcrab.png";
        case _0x3a0961:
          return "./skins/volcano/phoenix/0/phoenix.png";
        case _0x510716:
          return "./skins/desert/pterodactyl/0/pterodactyl_ability.png";
      }
    }),
    (this["updateExpiry"] = function () {
      var _0x300405 = (this["expiresT"] - _0x168a54) / 0x3e8;
      if (_0x300405 < this["maxDur"] - 0x1 && _0x300405 > 0x1) this["expiresT"] = _0x168a54 + 0x3e8;
    }),
    (this["getBtnTitle"] = function (_0x4593ab) {
      switch (_0x4593ab) {
        case _0x53947d:
          return "Fly High";
        case _0x2134e6:
          return "Gives Gifts";
        case _0x158a9b:
          return "Flying Sleigh";
        default:
          return "Close";
      }
    }),
    (this["buttons"] = {}),
    (this["sendSelection"] = function (_0x58e790) {
      if (this["customButtons"] != null && this["customButtons"]["length"] > 0x0)
        for (i = 0x0; i < this["customButtons"]["length"]; i++) {
          this["customButtons"][i]["resetSelection"]();
        }
      _0x58e790["setSelection"]();
      var _0x4733b1 = new _0x5906b0(0x3);
      _0x4733b1["writeUInt8"](_0x382703),
        _0x4733b1["writeUInt8"](this["interfaceType"]),
        _0x4733b1["writeUInt8"](_0x58e790["buttonID"]),
        _0xb4d17c(_0x4733b1);
    }),
    (this["showInterfaceButton"] = function (_0x57d7d7, _0x31146d, _0x55fcab, _0x242ad4, _0x53aa39) {
      var _0x3fee57 = this["buttons"][_0x55fcab];
      if (_0x3fee57 === undefined || _0x3fee57 == null) {
        var _0x2c8bc6 = this["getBtnTitle"](_0x55fcab),
          _0x1af3fe =
            _0x55fcab == 0x0
              ? {
                  w: 0x64,
                  h: 0x3c,
                }
              : {
                  w: 0x64,
                  h: 0x64,
                };
        (_0x3fee57 = this["buttons"][_0x55fcab] = new _0x570133(_0x242ad4, _0x53aa39, _0x1af3fe["w"], _0x1af3fe["h"], _0x2c8bc6, 0x1e, this["ctx"])),
          (_0x3fee57["buttonID"] = _0x55fcab),
          (_0x3fee57["selected"] = ![]),
          (_0x3fee57["isVisible"] = !![]),
          (_0x3fee57["textShadow"] = !![]),
          (_0x3fee57["screenX"] = 0x0),
          (_0x3fee57["screenY"] = 0x0),
          _0x55fcab != 0x0 && ((_0x3fee57["drawButtonRect"] = ![]), (_0x3fee57["showLabeleOnHover"] = !![])),
          (_0x3fee57["testPosHitsButton"] = function (_0x1635cc, _0xd46723) {
            var _0x3b44cb = this["screenX"] + this["x"],
              _0x7bdaa2 = _0x3b44cb + this["w"],
              _0xfc8ae0 = this["screenY"] + this["y"],
              _0xc9df35 = _0xfc8ae0 + this["h"];
            if (_0x1635cc < _0x3b44cb || _0x1635cc > _0x7bdaa2) return ![];
            if (_0xd46723 < _0xfc8ae0 || _0xd46723 > _0xc9df35) return ![];
            else return !![];
          }),
          (_0x3fee57["onClick"] = function () {
            console["log"]("clicked: " + this["label"]);
            !this["clicked"] && ((this["clicked"] = !![]), (this["isHighLighted"] = ![]));
            if (this["label"] == "Close") _0x188601["destroy"]();
            else _0x188601["sendSelection"](this);
          }),
          (_0x3fee57["setSelection"] = function () {
            (this["labelColor"] = "yellow"), (this["selected"] = !![]);
          }),
          (_0x3fee57["resetSelection"] = function () {
            (this["labelColor"] = "white"), (this["selected"] = ![]);
          }),
          (_0x3fee57["beforeDrawText"] = function () {
            var _0x193237 = this["w"] / 0x2,
              _0x3742d6 = this["h"] / 0x2;
            this["buttonTXT"]["x"] = this["screenX"] + this["x"] + _0x193237;
            if (this["buttonID"] == 0x0) this["buttonTXT"]["y"] = this["screenY"] + this["y"] + _0x3742d6;
            else this["buttonTXT"]["y"] = this["screenY"] + this["y"] - _0x3742d6 / 0x2;
          }),
          (_0x3fee57["onMouseMove"] = function () {}),
          (_0x3fee57["update"] = function () {
            (this["x"] = _0x242ad4 - this["w"] / 0x2), (this["y"] = _0x53aa39 - this["h"] / 0x2);
          }),
          (_0x3fee57["onInterfaceReset"] = function () {
            this["isVisible"] = ![];
          }),
          (_0x3fee57["onAfterDraw"] = function () {
            var _0x5aee0b = _0x2fa637[_0x204989];
            if (_0x5aee0b) {
              var _0x55d074 = _0x5aee0b["getAbilityInfo"](this["buttonID"]);
              if (_0x55d074) {
                var _0x23ff12 = "assets/s/" + _0x55d074["mopeSeasonID"] + "/" + _0x55d074["abilImg"],
                  _0x21093c = _0x2d8f34(_0x23ff12);
                if (_0x21093c) {
                  _0x587de3["save"]();
                  (this["isHighLighted"] || this["selected"]) &&
                    ((_0x587de3["shadowBlur"] = 0xa),
                    (_0x587de3["shadowOffsetX"] = 0x0),
                    (_0x587de3["shadowOffsetY"] = 0x0),
                    (_0x587de3["shadowColor"] = "yellow"));
                  var _0x392771 = this["w"] / 0x2,
                    _0x3863da = this["h"] / 0x2;
                  (_0x392771 = this["screenX"] + this["x"]), (_0x3863da = this["screenY"] + this["y"]);
                  var _0x2a9d83 = this["w"];
                  _0x587de3["drawImage"](_0x21093c, _0x392771, _0x3863da, _0x2a9d83, _0x2a9d83), _0x587de3["restore"]();
                }
              }
            }
          }),
          _0x11b99a["interfaceButtons"]["push"](_0x3fee57),
          this["customButtons"]["push"](_0x3fee57),
          this["data"]["selected"] == _0x3fee57["buttonID"] && _0x3fee57["setSelection"]();
      } else {
        if (_0x3fee57 != null) {
          if (_0x3fee57["isVisible"]) _0x3fee57["clicked"] = ![];
          _0x3fee57["draw"]();
        }
      }
    });
}
var _0x5d695d = ![];

function _0x566851() {
  $["ajax"]({
    url: "https://mope-masterserver-do.mope.io/serverPlayerCounts",
    type: "GET",
    success: function (_0x48f77b) {
      var _0x3f3965 = JSON["parse"](_0x48f77b);
      _0x5d695d = !![];
      var _0x1dcb53 = _0x3f3965["totalPlayersOnline"];
      console["log"]("MasterServer: " + _0x1dcb53 + " total players online!"), _0x1ad1ae["setText"](_0x4acd30(_0x1dcb53) + " online");
      for (var _0x34d452 = 0x0; _0x34d452 < _0x2c674b["length"]; _0x34d452++) {
        var _0x10027f = _0x2c674b[_0x34d452],
          _0x2b7690 = ![];
        for (var _0x3fd204 = 0x0; _0x3fd204 < _0x3f3965["servers"]["length"]; _0x3fd204++) {
          var _0x2a5c12 = _0x3f3965["servers"][_0x3fd204];
          if (_0x2a5c12["name"] == _0x10027f["ip"] && !_0x2a5c12["ofl"]) {
            (_0x10027f["playersCount"] = _0x2a5c12["pl"]), (_0x2b7690 = !![]);
            break;
          }
        }
        !_0x2b7690 && (_0x10027f["playersCount"] = -0x1);
      }
      $bus["emit"]($bus["EVENTS"]["SET_SERVER_LIST"], [..._0x2c674b]);
    },
    error: function (_0x158233, _0x2da362, _0xce6c3d) {
      console["log"]("Error getting master server stats: " + _0xce6c3d);
    },
  });
}
_0x566851(), console["log"]("ACCOUNT SERVER START");
let _0x2e0e40 = "https://mope-accountserver-do.mope.io",
  _0x2234f8 = ![];
const _0x18e6e5 = _0x4bfbd4 && $config["useDevAccountServer"] ? $config["devAccountServerUrl"] : _0x2e0e40;
console["log"]("Account server domain became:", _0x18e6e5);
const _0x5da372 = async function (_0x36baa6, _0x3cc116, _0x4a3ae4 = null, _0x13d829 = null) {
  let _0x499eea = _0x18e6e5 + "/processLogin",
    _0x319252 = {
      userId: _0x4a3ae4,
      passwordToken: _0x13d829,
      sessionId: _0x4247cc["serverInfo"]["sessionId"],
      serverId: _0x4247cc["serverInfo"]["serverId"],
      accessToken: _0x36baa6,
      socialNetwork: _0x3cc116,
    };
  try {
    const _0x2137dc = await fetch(_0x499eea, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON["stringify"](_0x319252),
      }),
      _0x179ff4 = await _0x2137dc["json"]();
    return _0x179ff4["success"]
      ? (_0xff1cd2(_0x179ff4),
        _0x4db7c0(_0x179ff4["login_userId"], _0x179ff4["login_passwordToken"], _0x179ff4["login_name"], _0x179ff4["login_profilePicURL"], _0x3cc116),
        !![])
      : ($bus["emit"]($bus["EVENTS"]["LOGIN_FAILED"], "error with verifying social network token."), ![]);
  } catch (_0xd83c6b) {
    return $bus["emit"]($bus["EVENTS"]["LOGIN_FAILED"], thrownError), console["error"]("::: Social Network Login ERROR :::", _0xd83c6b), ![];
  }
};
var _0x4410e4, _0x45944e, _0x3d4b8c, _0x2ec421, _0x4a81de, _0x456cda;
_0x4e3e5f &&
  (console["log"]("Checking what login_userId was:", _0x4410e4),
  (_0x4410e4 = localStorage["getItem"]("login_userId")),
  (_0x456cda = _0x4410e4 !== undefined && _0x4410e4 !== null),
  _0x456cda &&
    (console["log"]("WAS LOGGED IN!"),
    (_0x45944e = localStorage["getItem"]("login_passwordToken")),
    (_0x3d4b8c = localStorage["getItem"]("login_profilePicURL")),
    (_0x2ec421 = localStorage["getItem"]("login_name")),
    (_0x4a81de = localStorage["getItem"]("login_socialNetworkName"))));
_0x456cda &&
  $bus["emit"]($bus["EVENTS"]["LOGIN_SUCCESS"], {
    login_userId: _0x4410e4,
    login_passwordToken: _0x45944e,
    login_name: _0x2ec421,
    profilePicUrl: _0x3d4b8c,
    socialNetworkName: _0x4a81de,
  });
if (_0x4bfbd4) {
  var _0x37eebe = document["getElementById"]("login_SBLabel");
  _0x37eebe && (_0x37eebe["style"]["display"] = "block");
}
(jQuery["loadScript"] = function (_0xc8eea9, _0x4bf2a8) {
  jQuery["ajax"]({
    url: _0xc8eea9,
    dataType: "script",
    success: _0x4bf2a8,
    async: !![],
  });
}),
  (window["fbAsyncInit"] = function () {
    FB["init"]({
      appId: "342869592997869",
      cookie: !![],
      xfbml: !![],
      version: "v3.2",
      status: !![],
    }),
      FB["AppEvents"]["logPageView"]();
  }),
  (function (_0x44a933, _0x438c08, _0xae8e9f) {
    var _0x56b37b,
      _0x4e762c = _0x44a933["getElementsByTagName"](_0x438c08)[0x0];
    if (_0x44a933["getElementById"](_0xae8e9f)) return;
    (_0x56b37b = _0x44a933["createElement"](_0x438c08)),
      (_0x56b37b["id"] = _0xae8e9f),
      (_0x56b37b["crossorigin"] = "anonymous"),
      (_0x56b37b["src"] = "https://connect.facebook.net/en_US/sdk.js"),
      _0x4e762c["parentNode"]["insertBefore"](_0x56b37b, _0x4e762c);
  })(document, "script", "facebook-jssdk");

function _0x53dd3a() {
  gapi["load"]("auth2", async function () {
    try {
      auth2 =
        auth2 ||
        gapi["auth2"]["init"]({
          client_id: "836408408160-bqkloin1dq47r9t4t6q1giv13tvcioab.apps.googleusercontent.com",
          cookiepolicy: "single_host_origin",
        });
      const _0x5cdf99 = await auth2["signIn"](),
        _0x35a737 = _0x5cdf99["getAuthResponse"]()["id_token"];
      console["log"]("Google signed in ()! ID token (send to server) is " + _0x35a737), _0x5da372(_0x35a737, "google");
    } catch (_0x24e176) {
      $bus["emit"]($bus["EVENTS"]["FINISH_SOCIAL_AUTHENTICATION"], {
        error: "Error logging in to Google: " + _0x24e176["message"],
      });
    }
  });
}
if (_0x4857c8)
  _0x209e20(),
    _0x3904d9(),
    _0x15efc5()["then"]((_0x103f80) => {
      _0x103f80["registerHandler"]("finished-authentication-restore-check", () => {
        $bus["emit"]($bus["EVENTS"]["FINISH_AUTHENTICATION_RESTORE_CHECK"]);
      });
    });
else {
}
const _0x1dc834 = async () => {
  if (_0x456cda) {
    const _0x1e13c3 = await _0x51b5de();
    !_0x1e13c3 && ($bus["emit"]($bus["EVENTS"]["FINISH_AUTHENTICATION_RESTORE_CHECK"]), _0x26c084());
  } else {
    var _0x4b9d65 = "none",
      _0x2d123e = new URL(window["location"]["href"]),
      _0x71507b = _0x2d123e["searchParams"]["get"]("testAccountSecret");
    if (_0x71507b) {
      _0x4b9d65 = _0x71507b;
      let _0x53fcdf = "" + _0x2d123e["searchParams"]["get"]("user");
      !_0x3a6185(_0x4b9d65 + _0x53fcdf) && _0x53fcdf && _0x53fcdf["length"] <= 0x2 && _0x5da372(_0x53fcdf, _0x4b9d65, _0x4b9d65 + _0x53fcdf, null);
    } else $bus["emit"]($bus["EVENTS"]["FINISH_AUTHENTICATION_RESTORE_CHECK"]);
  }
};
setTimeout(() => {
  $bus["emit"]($bus["EVENTS"]["FINISH_AUTHENTICATION_RESTORE_CHECK"]);
}, 0x7530),
  $bus["on"]($bus["EVENTS"]["START_SOCIAL_AUTHENTICATION"], async (_0x10048a) => {
    console["log"]("got start social auth", _0x10048a);
    try {
      switch (_0x10048a) {
        case "apple":
          _0x422c2f();
          break;
        case "facebook":
          _0x122afd();
          break;
        case "google":
          _0x53dd3a();
          break;
      }
    } catch (_0x4715b0) {
      $bus["emit"]($bus["EVENTS"]["FINISH_SOCIAL_AUTHENTICATION"], {
        error: _0x4715b0["message"],
      });
    }
  }),
  $bus["on"]($bus["EVENTS"]["UI_TEST_BUTTON_CLICKED_USE_TEST_ACCOUNT"], (_0x145c41) => {
    console["log"]("account: " + _0x145c41), _0x5da372('"' + _0x145c41 + '"', _0x19d910);
  }),
  $bus["on"]($bus["EVENTS"]["UI_TEST_BUTTON_CLICKED_ADD_COINS"], _0x54df21),
  $bus["on"]($bus["EVENTS"]["UI_TEST_BUTTON_CLICKED_RESET_PURCHASES"], _0x46a472),
  $bus["on"]($bus["EVENTS"]["UI_PRESS_LOGOUT"], _0x3eb7c2);
var _0x19d910 = "none",
  _0x24afee = new URL(window["location"]["href"]),
  _0x2268a4 = _0x24afee["searchParams"]["get"]("testAccountSecret");
_0x2268a4 && (console["log"]("testing account enabled."), (_0x19d910 = _0x2268a4), $bus["emit"]($bus["EVENTS"]["ENABLE_TESTING"]));

function _0x26c084() {
  _0x4e3e5f &&
    (localStorage["removeItem"]("login_userId"),
    localStorage["removeItem"]("login_passwordToken"),
    localStorage["removeItem"]("login_profilePicURL"),
    localStorage["removeItem"]("login_name"),
    localStorage["removeItem"]("login_socialNetworkName")),
    (_0x4410e4 = null),
    (_0x45944e = null),
    (_0x3d4b8c = null),
    (_0x2ec421 = null),
    (_0x4a81de = null),
    (_0x456cda = ![]),
    $bus["emit"]($bus["EVENTS"]["LOGOUT_COMPLETE"]);
}
async function _0x3eb7c2(_0x551d6b = !![]) {
  _0x4857c8 && (_0x551d6b = ![]);
  let _0x3c0618 = () => {};
  if (_0x4a81de === "google") _0x3c0618 = _0x5666d7;
  else {
    if (_0x4a81de === "facebook") _0x3c0618 = _0x36970e;
    else _0x4a81de === "apple" && (_0x3c0618 = _0x36cda7);
  }
  console["log"]("logging out with social network " + _0x4a81de);
  try {
    await _0x3c0618(), await _0x4d1954(_0x4410e4), _0x26c084();
  } catch (_0x16d462) {
    console["error"]("Error logging out:", _0x16d462);
  }
}
const _0x4d1954 = async (_0x1cbb42) => {
    let _0x5861e8 = _0x18e6e5 + "/logout",
      _0x10097b = {
        userId: _0x1cbb42,
        sessionId: _0x4247cc["serverInfo"]["sessionId"],
        serverId: _0x4247cc["serverInfo"]["serverId"],
      };
    try {
      await fetch(_0x5861e8, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON["stringify"](_0x10097b),
      });
    } catch (_0x404f9d) {
      return $bus["emit"]($bus["EVENTS"]["LOGOUT_FAILED"], thrownError), console["error"]("::: Account Server Logout ERROR :::", _0x404f9d), ![];
    }
    return !![];
  },
  _0xff1cd2 = (_0x335108) => {
    (_0x40eddd = _0x335108), $bus["emit"]($bus["EVENTS"]["PLAYER_ACCOUNT_DATA"], _0x335108);
  },
  _0x51b5de = async () => {
    if (!_0x456cda) {
      console["error"]("::: verifyLocalCredentials ERROR ::: User is not logged in!");
      return;
    }
    const _0x1d8344 = _0x18e6e5 + "/processLogin",
      _0x31f2ef = {
        userId: _0x4410e4,
        passwordToken: _0x45944e,
        sessionId: _0x4247cc["serverInfo"]["sessionId"],
        serverId: _0x4247cc["serverInfo"]["serverId"],
        accessToken: null,
        socialNetwork: null,
      };
    try {
      const _0x583283 = await fetch(_0x1d8344, {
          method: "POST",
          headers: {
            "Content-Type": "application/json;charset=UTF-8",
          },
          body: JSON["stringify"](_0x31f2ef),
        }),
        _0x3b99f1 = await _0x583283["json"]();
      return _0x3b99f1["success"]
        ? (_0xff1cd2(_0x3b99f1), !![])
        : (_0x3eb7c2(), console["log"]("::: verifyLocalCredentials failed ::: Needs new credentials"), ![]);
    } catch (_0x9539b2) {
      return console["error"]("::: verifyLocalCredentials ERROR :::", _0x9539b2), ![];
    }
  };
var _0x40eddd = {
  coins: -0x1,
  level: 0x0,
  xp: 0x0,
  xpNextLvl: 0x0,
};
const _0x4599e4 = async function () {
    if (!_0x456cda) return console["log"]("not logged in!"), null;
    console["log"]("loading account data...");
    let _0x4fa5ba =
      _0x18e6e5 +
      "/loadAccountData?userId=" +
      _0x4410e4 +
      "&passwordToken=" +
      _0x45944e +
      "&sessionId=" +
      _0x4247cc["serverInfo"]["sessionId"] +
      "&serverId=" +
      _0x4247cc["serverInfo"]["serverId"];
    return new Promise((_0x2728fc, _0x178d9b) => {
      $["ajax"]({
        url: _0x4fa5ba,
        type: "GET",
        success: function (_0x165847) {
          var _0x5beff8 = JSON["parse"](_0x165847);
          return (
            console["log"]("Done, result is " + _0x165847),
            (_0x40eddd = _0x5beff8),
            console["log"]("the resObj coins was", _0x5beff8["coins"]),
            _0x5beff8["coins"] == "BANNED" &&
              setInterval(function () {
                _0x1e26e6("Your account has been BANNED!", "error", 0x2710);
              }, 0x2710),
            $bus["emit"]($bus["EVENTS"]["PLAYER_ACCOUNT_DATA"], _0x5beff8),
            _0x2728fc(_0x5beff8)
          );
        },
        error: function (_0x584701, _0x86966, _0x406735) {
          return console["error"]("URL error: " + _0x406735), console["error"]("failed to refresh account data!"), _0x2728fc(null);
        },
      });
    });
  },
  _0x2f3261 = async function (_0x8e639) {
    const _0x587a3a = await _0x4599e4();
    _0x8e639 && _0x8e639(_0x587a3a);
  };

function _0x1987ee(_0x30b8ec) {
  console["log"]("Loading shop items for logged in user! " + _0x4410e4);
  let _0x3bf005 = _0x18e6e5 + "/loadShopItems?userId=" + _0x4410e4 + "&passwordToken=" + _0x45944e;
  console["log"]("@@@@@@@ Sending URL request :" + _0x3bf005),
    $["ajax"]({
      url: _0x3bf005,
      success: function (_0x2125eb) {
        var _0x26cf29 = JSON["parse"](_0x2125eb);
        _0x30b8ec(!![], _0x26cf29);
      },
      error: function (_0x58fed7, _0x1f56ad, _0x3e3522) {
        console["log"]("Shop loading-URL error: " + _0x3e3522), _0x30b8ec(![], null);
      },
    });
}
const _0x2b8bd6 = function (_0xe5fb2b, _0x3b3738) {
  if (_0x4bfbd4) console["log"]("Sending URL request to load coins for logged in user! " + _0x4410e4);
  if (!_0xe5fb2b) _0xe5fb2b = "goldDragon";
  let _0x153c48 =
    _0x18e6e5 +
    "/buyShopItem?userId=" +
    _0x4410e4 +
    "&passwordToken=" +
    _0x45944e +
    "&itemName=" +
    _0xe5fb2b +
    "&sessionId=" +
    _0x4247cc["serverInfo"]["sessionId"] +
    "&serverId=" +
    _0x4247cc["serverInfo"]["serverId"];
  if (_0x4bfbd4) console["log"]("Sending URL request :" + _0x153c48);
  $["ajax"]({
    url: _0x153c48,
    success: function (_0x10f3c5) {
      var _0x521a95 = JSON["parse"](_0x10f3c5);
      _0x3b3738(_0x521a95["success"], _0x521a95["reason"]);
    },
    error: function (_0x331543, _0x18e4a5, _0x250b87) {
      console["log"]("URL error: " + _0x250b87), _0x3b3738(![], _0x250b87);
    },
  });
};

function _0x54df21() {
  let _0x560a89 = _0x18e6e5 + "/addCoins?userId=" + _0x4410e4 + "&passwordToken=" + _0x45944e;
  if (_0x4bfbd4) console["log"]("Sending URL request :" + _0x560a89);
  $["ajax"]({
    url: _0x560a89,
    success: function (_0x4d898c) {
      if (_0x4bfbd4) _0x2f3261();
    },
    error: function (_0x52e396, _0x4c72b9, _0x5e4d0c) {
      console["log"]("URL error: " + _0x5e4d0c);
    },
  });
}

function _0x46a472() {
  let _0x23abdf = _0x18e6e5 + "/resetAccount?userId=" + _0x4410e4 + "&passwordToken=" + _0x45944e;
  if (_0x4bfbd4) console["log"]("Sending URL request :" + _0x23abdf);
  $["ajax"]({
    url: _0x23abdf,
    success: function (_0x3e46f8) {
      console["log"]("reposnse is " + _0x3e46f8), _0x2f3261();
    },
    error: function (_0xbb7719, _0x196c77, _0x192b12) {
      console["log"]("URL error: " + _0x192b12);
    },
  });
}
const _0x4db7c0 = function (_0x4d0f0e, _0x28302a, _0xb1a0a4, _0x3db163, _0x4ca4ab) {
    console["log"](
      "SUCCESSFUL LOGIN!!!",
      JSON["stringify"]({
        login_userId: _0x4410e4,
        login_passwordToken: _0x45944e,
        login_name: _0x2ec421,
        profilePicUrl: _0x3d4b8c,
        socialNetworkName: _0x4a81de,
      })
    ),
      (_0x4410e4 = _0x4d0f0e),
      (_0x45944e = _0x28302a),
      (_0x3d4b8c = _0x3db163),
      (_0x2ec421 = _0xb1a0a4),
      (_0x4a81de = _0x4ca4ab),
      (_0x456cda = !![]),
      _0x4e3e5f &&
        (console["log"]("Logged in, for login_userId " + _0x4410e4 + " login_passwordToken " + _0x45944e),
        localStorage["setItem"]("login_userId", _0x4410e4),
        localStorage["setItem"]("login_passwordToken", _0x45944e),
        localStorage["setItem"]("login_name", _0x2ec421),
        localStorage["setItem"]("login_profilePicURL", _0x3d4b8c),
        localStorage["setItem"]("login_socialNetworkName", _0x4a81de)),
      _0x51b124["loadData"](),
      $bus["emit"]($bus["EVENTS"]["LOGIN_SUCCESS"], {
        login_userId: _0x4410e4,
        login_passwordToken: _0x45944e,
        login_name: _0x2ec421,
        profilePicUrl: _0x3d4b8c,
        socialNetworkName: _0x4a81de,
      });
  },
  _0x2c6555 = function (_0x43dae4, _0xf51088) {
    if (_0x4bfbd4) console["log"]("Sending URL request to load coins for logged in user! " + _0x4410e4);
    if (!_0x43dae4) _0x43dae4 = "none";
    let _0x357e28 = _0x18e6e5 + "/playerSettings_update?userId=" + _0x4410e4 + "&passwordToken=" + _0x45944e + "&itemName=" + _0x43dae4;
    if (_0x4bfbd4) console["log"]("Sending URL request :" + _0x357e28);
    console["log"](_0x357e28),
      $["ajax"]({
        url: _0x357e28,
        success: function (_0x15408d) {
          var _0x5b8449 = JSON["parse"](_0x15408d);
          console["log"]("Done, result is " + _0x15408d), _0xf51088(_0x5b8449["success"], _0x5b8449["reason"]);
        },
        error: function (_0x2d9e65, _0x5a047a, _0x333e7d) {
          console["log"](_0x2d9e65),
            console["log"]("ajaxOptions: " + _0x5a047a),
            console["log"]("URL error: " + _0x333e7d),
            _0xf51088(![], "urlnotfound");
        },
      });
  },
  _0x3a6185 = function (_0x33b0d5) {
    if (_0x456cda) {
      if (_0x4410e4 === _0x33b0d5) return !![];
    }
    return ![];
  },
  _0x496087 = async () => {
    const _0x2f76f5 = _0x18e6e5 + "/getIncentivizedAdSkins",
      _0x4f6b8f = {
        userId: _0x4410e4,
        passwordToken: _0x45944e,
        sessionId: _0x4247cc["serverInfo"]["sessionId"],
        serverId: _0x4247cc["serverInfo"]["serverId"],
      };
    try {
      const _0x5dff82 = await fetch(_0x2f76f5, {
          method: "POST",
          headers: {
            "Content-Type": "application/json;charset=UTF-8",
          },
          body: JSON["stringify"](_0x4f6b8f),
        }),
        _0x382415 = await _0x5dff82["json"]();
      return (
        console["log"](_0x382415),
        _0x382415["success"]
          ? (console["log"]("success"), !![])
          : (console["log"]("::: getIncentivizedAdSkins failed ::: Needs new credentials"), ![])
      );
    } catch (_0x225eaf) {
      return console["error"]("::: getIncentivizedAdSkins ERROR :::", _0x225eaf), ![];
    }
  };
$["loadScript"]("https://apis.google.com/js/api:client.js", function () {
  var _0x3e7e0c = function () {
    if (typeof gapi === "undefined") return;
    gapi["load"]("auth2", function () {
      auth2 = gapi["auth2"]["init"]({
        client_id: "836408408160-bqkloin1dq47r9t4t6q1giv13tvcioab.apps.googleusercontent.com",
        cookiepolicy: "single_host_origin",
      });
    });
  };
  _0x3e7e0c();
});
async function _0x209e20() {
  const _0x106e92 = await _0x15efc5();
  if (!_0x106e92) {
    console["error"]("Could not get an initialized nativeBridge...");
    return;
  }
  _0x106e92["registerHandler"]("google-login-failed", () => {}),
    _0x106e92["registerHandler"]("google-login-success", (_0x133ed6) => {
      _0x20cef2(_0x133ed6);
    }),
    _0x106e92["registerHandler"]("google-logout-success", () => {
      _0x4a81de === "google" && _0x26c084();
    });
}
async function _0x20cef2(_0x59cc39) {
  const _0x35a814 = await _0x5da372(_0x59cc39, "google");
  !_0x35a814 && (await _0x385bed()());
}
async function _0x53dd3a() {
  const _0x455476 = _0x1a9e80();
  try {
    const _0x3c1c72 = await _0x455476();
    await _0x20cef2(_0x3c1c72);
  } catch (_0x49e4f1) {
    console["error"]("Error with google login:", _0x49e4f1["message"]),
      $bus["emit"]($bus["EVENTS"]["FINISH_SOCIAL_AUTHENTICATION"], {
        error: "Error logging in to Google: " + _0x49e4f1["message"],
      });
  }
}
async function _0x5666d7() {
  const _0x39ca35 = _0x385bed();
  try {
    return _0x39ca35();
  } catch (_0xd1b37a) {
    console["error"]("Error with google logout:", _0xd1b37a["message"]);
  }
}

function _0x1a9e80() {
  return !_0x4857c8 ? (console["log"]("resolve web google login"), _0x24c194) : (console["log"]("resolve mobile google login"), _0x2a1ed0);
}

function _0x385bed() {
  return !_0x4857c8 ? _0x5c1196 : _0x537332;
}
async function _0x24c194() {
  return (
    console["log"]("Doing web google login."),
    new Promise((_0x178e82, _0x2be320) => {
      gapi["load"]("auth2", async function () {
        console["log"]("loaded auth2");
        try {
          console["log"]("initializing auth2"),
            (auth2 =
              auth2 ||
              gapi["auth2"]["init"]({
                client_id: $config["googleAuthClientId"],
                cookiepolicy: "single_host_origin",
              })),
            console["log"]("Signing in.");
          const _0x2690e6 = await auth2["signIn"]();
          console["log"]("Getting id token.");
          const _0x4ab670 = _0x2690e6["getAuthResponse"]()["id_token"];
          return console["log"]("Received id_token", _0x4ab670), _0x178e82(_0x4ab670);
        } catch (_0x4decb2) {
          return console["error"]("Error with google login:", _0x4decb2), _0x2be320(_0x4decb2);
        }
      });
    })
  );
}
async function _0x2a1ed0() {
  const _0x5676e5 = await _0x15efc5();
  if (!_0x5676e5) throw new Error("Did not have nativeBridge");
  return new Promise((_0x9dfaba, _0x4da157) => {
    console["log"]("Calling google-login nativeBridge handler."),
      _0x5676e5["callHandler"]("google-login"),
      _0x5676e5["registerHandler"]("google-login-success", (_0x58605e) => {
        return console["log"]("Google login success!"), _0x209e20(), _0x9dfaba(_0x58605e);
      }),
      _0x5676e5["registerHandler"]("google-login-failed", (_0x51dfbe) => {
        return console["error"]("Google login from mobile device failed, error:", _0x51dfbe), _0x209e20(), _0x4da157(_0x51dfbe);
      });
  });
}
async function _0x5c1196() {
  try {
    var _0x477f89 = gapi["auth2"]["getAuthInstance"]();
    return _0x477f89["signOut"]();
  } catch (_0x5716de) {
    console["error"]("Error with web google logout:", _0x5716de);
  }
}
async function _0x537332() {
  const _0xfb3f56 = await _0x15efc5();
  if (!_0xfb3f56) throw new Error("Did not have nativeBridge");
  _0xfb3f56["callHandler"]("google-logout");
}
(window["fbAsyncInit"] = function () {
  if (typeof FB === "undefined") return;
  FB["init"]({
    appId: "342869592997869",
    cookie: !![],
    xfbml: !![],
    version: "v3.2",
    status: !![],
  }),
    FB["AppEvents"]["logPageView"]();
}),
  (function (_0x44262b, _0x28b5b1, _0x39c5f6) {
    var _0x3b744c,
      _0x4aa00a = _0x44262b["getElementsByTagName"](_0x28b5b1)[0x0];
    if (_0x44262b["getElementById"](_0x39c5f6)) return;
    (_0x3b744c = _0x44262b["createElement"](_0x28b5b1)),
      (_0x3b744c["id"] = _0x39c5f6),
      (_0x3b744c["src"] = "https://connect.facebook.net/en_US/sdk.js"),
      _0x4aa00a["parentNode"]["insertBefore"](_0x3b744c, _0x4aa00a);
  })(document, "script", "facebook-jssdk");
async function _0x3904d9() {
  const _0x1b14e3 = await _0x15efc5();
  if (!_0x1b14e3) {
    console["error"]("Could not get an initialized nativeBridge...");
    return;
  }
  _0x1b14e3["registerHandler"]("facebook-login-failed", () => {}),
    _0x1b14e3["registerHandler"]("facebook-login-success", (_0x16d38f) => {
      _0x4b8843(_0x16d38f);
    }),
    _0x1b14e3["registerHandler"]("facebook-logout-success", () => {
      _0x4a81de === "facebook" && _0x26c084();
    });
}
async function _0x52358f() {
  console["log"]("Calling mobileFacebookLogin");
  const _0x5e30e6 = await _0x15efc5();
  if (!_0x5e30e6) throw new Error("Did not have nativeBridge");
  return new Promise((_0x80a954, _0x272627) => {
    console["log"]("Calling nativeBridge facebook-login handler"),
      _0x5e30e6["callHandler"]("facebook-login"),
      _0x5e30e6["registerHandler"]("facebook-login-success", (_0x46e513) => {
        return console["log"]("nativeBridge facebook-login-success called with token:", _0x46e513), _0x3904d9(), _0x80a954(_0x46e513);
      }),
      _0x5e30e6["registerHandler"]("facebook-login-failed", (_0x2d20f3) => {
        return (
          console["error"]("nativeBridge facebook-login-failed called with error:", _0x2d20f3),
          _0x3904d9(),
          console["error"]("Facebook login from mobile device failed, error:", _0x2d20f3),
          _0x272627(_0x2d20f3)
        );
      });
  });
}
async function _0x4b8843(_0x414da6) {
  const _0x5dc5a7 = await _0x5da372(_0x414da6, "facebook");
  !_0x5dc5a7 && (await _0x248166()());
}
async function _0x122afd() {
  const _0x847f39 = _0x592d02();
  try {
    const _0xa9e185 = await _0x847f39();
    await _0x4b8843(_0xa9e185);
  } catch (_0x21fc2b) {
    console["error"]("Error with facebook login:", _0x21fc2b["message"]),
      $bus["emit"]($bus["EVENTS"]["FINISH_SOCIAL_AUTHENTICATION"], {
        error: "Error logging in to Facebook: " + _0x21fc2b["message"],
      });
  }
}
async function _0x4cabf7() {
  return new Promise((_0x48678d, _0x43ea37) => {
    FB["login"](
      function (_0x5abf08) {
        if (_0x5abf08["status"] === "connected") {
          console["log"]("Successfully got auth token from FB");
          var _0x2b5eb9 = _0x5abf08["authResponse"]["accessToken"];
          return _0x48678d(_0x2b5eb9);
        } else return _0x43ea37("Error logging in to FB.");
      },
      {
        scope: "public_profile,email",
      }
    );
  });
}

function _0x592d02() {
  return !_0x4857c8 ? _0x4cabf7 : _0x52358f;
}

function _0x248166() {
  return !_0x4857c8 ? _0x441a8b : _0x4d5ddb;
}
async function _0x36970e() {
  const _0x240b94 = _0x248166();
  try {
    return _0x240b94();
  } catch (_0x3a86ca) {
    console["error"]("Error with facebook logout:", _0x3a86ca["message"]);
  }
}
async function _0x4d5ddb() {
  const _0x477b2a = await _0x15efc5();
  if (!_0x477b2a) throw new Error("Did not have nativeBridge");
  _0x477b2a["callHandler"]("facebook-logout");
}
async function _0x441a8b() {
  return new Promise((_0x14aa26, _0x27a867) => {
    FB["logout"](function (_0x3a5d05) {
      return _0x14aa26(!![]);
    });
  });
}
let _0xc99ce7 = ![];
const _0x2b2c19 = () => typeof AppleID === "object" && AppleID["hasOwnProperty"]("auth");
!_0x15798e &&
  $["loadScript"]("https://appleid.cdn-apple.com/appleauth/static/jsapi/appleid/1/en_US/appleid.auth.js", function () {
    if (_0x2b2c19()) {
      function _0x338bdd(_0x2bfdd5) {
        var _0x21bdef = "",
          _0x87a050 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",
          _0x558052 = _0x87a050["length"];
        for (var _0x5b5f60 = 0x0; _0x5b5f60 < _0x2bfdd5; _0x5b5f60++) {
          _0x21bdef += _0x87a050["charAt"](Math["floor"](Math["random"]() * _0x558052));
        }
        return _0x21bdef;
      }
      let _0x86c5e0 = "https://mope.io";
      if (location["href"]["includes"]("edge")) _0x86c5e0 = "https://edge-webserver.mope.io";
      else location["href"]["includes"]("beta") && (_0x86c5e0 = "https://beta.mope.io");
      AppleID["auth"]["init"]({
        clientId: "io.mope.live.auth",
        scope: "name email",
        redirectURI: _0x86c5e0,
        usePopup: !![],
        state: _0x338bdd(0x7),
      }),
        (_0xc99ce7 = !![]);
    }
  });
async function _0x585344() {
  const _0x195ae8 = await _0x15efc5();
  if (!_0x195ae8) {
    console["error"]("Could not get an initialized nativeBridge...");
    return;
  }
  _0x195ae8["registerHandler"]("apple-login-failed", () => {}),
    _0x195ae8["registerHandler"]("apple-login-success", (_0x5cf78f) => {
      _0x236d9e(_0x5cf78f);
    }),
    _0x195ae8["registerHandler"]("apple-logout-success", () => {
      _0x4a81de === "apple" && _0x26c084();
    });
}
async function _0x236d9e(_0x5c7b24, _0x394d95) {
  const _0x4e4ced = _0x394d95
      ? {
          name: _0x394d95,
        }
      : null,
    _0x2e90d7 = await _0x5da372(_0x5c7b24, "apple", _0x4e4ced);
  !_0x2e90d7 && (await _0x540158()());
}
async function _0x422c2f() {
  const _0x1cc801 = _0x149139();
  try {
    const _0x5913fc = await _0x1cc801();
    await _0x236d9e(_0x5913fc);
  } catch (_0x5d46ac) {
    console["error"]("Error with apple login:", _0x5d46ac["message"]),
      $bus["emit"]($bus["EVENTS"]["FINISH_SOCIAL_AUTHENTICATION"], {
        error: "Error logging in to Apple: " + _0x5d46ac["message"],
      });
  }
}
async function _0x36cda7() {
  const _0x25f60e = _0x540158();
  try {
    return _0x25f60e();
  } catch (_0x4bdd71) {
    console["error"]("Error with apple logout:", _0x4bdd71["message"]);
  }
}

function _0x149139() {
  return !_0x4857c8 || _0x15798e ? (console["log"]("resolve web apple login"), _0x13d32c) : (console["log"]("resolve mobile apple login"), _0x3e967c);
}

function _0x540158() {
  return !_0x4857c8 || _0x15798e ? _0x177dce : _0x4a43f6;
}
async function _0x13d32c() {
  try {
    if (!_0xc99ce7) throw new Error("Failed to initialize apple auth library.");
    const _0x500da3 = await AppleID["auth"]["signIn"]();
    if (_0x500da3 && _0x500da3["authorization"] && _0x500da3["authorization"]["id_token"])
      return console["log"]("data authorization was:", _0x500da3["authorization"]), _0x500da3["authorization"]["id_token"];
    else throw new Error("Failed to get id token from apple.");
  } catch (_0x3196f0) {
    console["error"]("error signing in ", _0x3196f0);
    throw _0x3196f0;
  }
}
async function _0x3e967c() {
  const _0x2f4a4e = await _0x15efc5();
  if (!_0x2f4a4e) throw new Error("Did not have nativeBridge");
  return new Promise((_0x286d19, _0x1e4eb6) => {
    console["log"]("Calling apple-login nativeBridge handler."),
      _0x2f4a4e["callHandler"]("apple-login"),
      _0x2f4a4e["registerHandler"]("apple-login-success", (_0x4da7cb) => {
        return console["log"]("Apple login success!"), _0x585344(), _0x286d19(_0x4da7cb);
      }),
      _0x2f4a4e["registerHandler"]("apple-login-failed", (_0x5103b1) => {
        return console["error"]("Apple login from mobile device failed, error:", _0x5103b1), _0x585344(), _0x1e4eb6(_0x5103b1);
      });
  });
}
async function _0x177dce() {
  try {
    var _0x4573aa = gapi["auth2"]["getAuthInstance"]();
    return _0x4573aa["signOut"]();
  } catch (_0x6bdce8) {
    console["error"]("Error with web apple logout:", _0x6bdce8);
  }
}
async function _0x4a43f6() {
  const _0xa84192 = await _0x15efc5();
  if (!_0xa84192) throw new Error("Did not have nativeBridge");
  _0xa84192["callHandler"]("apple-logout");
}
var _0x39bd56 = null,
  _0x54a119 = +new Date();
let _0x329591 = ![];

function _0x42237a(_0xa76b01) {
  var _0x353203 = location["protocol"] == "https:" ? "https:" : "http:",
    _0x13bf44 = location["host"]["endsWith"]("mope.io") ? location["host"] : "mope.io",
    _0x37a8bc = _0x353203 + "//" + _0x13bf44;
  $["ajax"]({
    url: _0x18e6e5 + "/getXsollaToken",
    type: "GET",
    data: {
      userId: _0x4410e4,
      passwordToken: _0x45944e,
      settings_ui_version: _0x2a93ac ? "mobile" : "desktop",
      return_url: _0x37a8bc,
    },
    success: function (_0x5dbb95) {
      var _0x5801f2 = JSON["parse"](_0x5dbb95);
      _0xa76b01(_0x5801f2["success"] ? _0x5801f2["token"] : null);
    },
    error: function (_0x1889fd, _0x5e6315, _0x594ae0) {
      var _0x38c865 = JSON["parse"](_0x1889fd["responseText"]);
      console["log"]("Error getting token: " + _0x594ae0), _0x1e26e6(_0x38c865["reason"], "error", 0xa), _0xa76b01(![], null);
    },
  });
}
var _0x1c41d9 = ![];
$bus["on"]($bus["EVENTS"]["UI_OPEN_XSOLLA_SHOP"], () => {
  if (_0x4857c8) {
    alert("Please open mope.io in your browser to buy coins (can't buy them in the app yet!)");
    return;
  }
  _0x42237a(function (_0x55ec52) {
    if (_0x55ec52) {
      console["log"]("Got xsolla token " + _0x55ec52);
      var _0x4aa7ab;
      if (_0x329591) _0x4aa7ab = "https://sandbox-secure.xsolla.com/paystation2/?access_token=" + _0x55ec52;
      else _0x4aa7ab = "https://secure.xsolla.com/paystation2/?access_token=" + _0x55ec52;
      $bus["emit"]($bus["EVENTS"]["LOADED_XSOLLA_IFRAME_SRC"], _0x4aa7ab);
    }
  });
});

function _0x33c9ea(_0x12a3f1) {
  var _0x299b3f = {
      access_token: "abcdef1234567890abcdef1234567890",
    },
    _0x30b487 = document["createElement"]("script");
  (_0x30b487["type"] = "text/javascript"),
    (_0x30b487["async"] = !![]),
    (_0x30b487["src"] = "//static.xsolla.com/embed/paystation/1.0.8/widget.min.js"),
    _0x30b487["addEventListener"](
      "load",
      function (_0x2d51b2) {
        XPayStationWidget["init"](_0x299b3f);
      },
      ![]
    ),
    _0x30b487["addEventListener"]("status-done", () => {
      _0x2f3261(() => {
        $bus["emit"]($bus["EVENTS"]["XSOLLA_PAYMENT_FINISHED"]);
      });
    });
  var _0x526ece = document["getElementsByTagName"]("head")[0x0];
  _0x526ece["appendChild"](_0x30b487);
}
$bus["on"]($bus["EVENTS"]["UI_SET_GRAPHICS"], (_0x2dcb8c) => {
  _0x276555(_0x2dcb8c), _0x5b53ed();
});
(typeof _0x57ae6d === "undefined" || _0x57ae6d === null || _0x57ae6d === undefined) && (window["options_graphicsLevel"] = 0x3);
if (_0x57ae6d < 0x2) _0x57ae6d = 0x2;
$bus["emit"]($bus["EVENTS"]["INITIALIZE_DEFAULT_GRAPHICS_LEVEL"], _0x57ae6d);

function _0x276555(_0x523ce5) {
  var _0x2a0b6d = _0x523ce5 == _0x57ae6d;
  _0x57ae6d = _0x523ce5;
  if (window["localStorage"])
    try {
      window["localStorage"]["setItem"]("options_graphicsLevel", _0x57ae6d);
    } catch (_0x2c2c40) {}
  _0x2a0b6d && (_0x9d73bb = !![]);
}
var _0x119652 = 0x0,
  _0xf5b86d = 0x0,
  _0x5712d2 = +new Date(),
  _0x4a6223 = +new Date(),
  _0x1b9c19 = 0x0,
  _0x3db4e2 = 0x0;

function _0x258af6() {
  (_0x119652 += 0x1), _0x168a54 - _0x5712d2 > 0x7d0 && ((_0x5712d2 = Date["now"]()), (_0x1b9c19 = Math["round"](_0x119652 / 0x2)), (_0x119652 = 0x0));
}

function _0x350caf(_0x1470da) {
  _0x4e5a1f["setText"]("fps: " + _0x1b9c19);
}
setInterval(function () {
  _0x350caf(_0x1b9c19);
}, _0x51822d),
  $bus["on"]($bus["EVENTS"]["UI_PRESS_PLAY"], () => {
    console["log"]("google tag manager fps metric tracking start", _0x3ab380["name"]),
      gtag("event", "fps_start", {
        event_category: "client_fps",
        event_label: _0x1b9c19,
        value: _0x1b9c19,
      }),
      gtag("event", "fps_start", {
        event_category: "client_fps_" + _0x3ab380["name"],
        event_label: _0x1b9c19,
        value: _0x1b9c19,
      }),
      setTimeout(() => {
        gtag("event", "fps_30s", {
          event_category: "client_fps",
          event_label: _0x1b9c19,
          value: _0x1b9c19,
        }),
          gtag("event", "fps_30s", {
            event_category: "client_fps_" + _0x3ab380["name"],
            event_label: _0x1b9c19,
            value: _0x1b9c19,
          }),
          console["log"]("sent fps 30 seconds google tag event");
      }, 0x7530),
      setTimeout(() => {
        gtag("event", "fps_5min", {
          event_category: "client_fps",
          event_label: _0x1b9c19,
          value: _0x1b9c19,
        }),
          gtag("event", "fps_5min", {
            event_category: "client_fps_" + _0x3ab380["name"],
            event_label: _0x1b9c19,
            value: _0x1b9c19,
          }),
          console["log"]("sent fps 5 min google tag event");
      }, 0x3c * 0x3e8 * 0x5);
  });
const _0x24049a = performance["now"]();
$bus["on"]($bus["EVENTS"]["ANIMAL_CHOICE_START"], () => {
  console["log"]("::: gtag animal_choice_start :::"),
    gtag("event", "animal_choice_start", {
      event_category: "animal_choice",
      event_label: 0x0,
      value: 0x0,
    });
}),
  $bus["on"]($bus["EVENTS"]["ANIMAL_CHOICE_CONFIRMED"], () => {
    const _0x4aa91b = performance["now"](),
      _0x342316 = Math["round"]((_0x4aa91b - _0x24049a) / 0x3e8);
    console["log"]("::: gtag animal_choice_end " + _0x342316 + " :::"),
      gtag("event", "animal_choice_end", {
        event_category: "animal_choice",
        event_label: _0x342316,
        value: _0x342316,
      });
  });
let _0x30bffa = window["innerWidth"] - 0x96,
  _0x26e939 = window["innerHeight"] - 0x96;
$bus["on"]($bus["EVENTS"]["UPDATED_EXPERIENCE_BAR_POSITION"], (_0x9c6949) => {
  (_0x30bffa = _0x9c6949["right"] * window["devicePixelRatio"]), (_0x26e939 = _0x9c6949["top"] * window["devicePixelRatio"]);
});

function _0x226734(_0x25c565, _0x2d0561, _0x53936e) {
  (this["animStep"] = 0x1),
    (this["animStartT"] = _0x168a54),
    (this["animDur"] = 0xbb8),
    (this["timedOut"] = ![]),
    (this["xShift"] = _0x32639a(-0xa, 0xa)),
    (this["yShift"] = _0x32639a(-0xa, 0xa)),
    (this["anlgeShift"] = _0x32639a(-0xa, 0xa)),
    (this["text"] = new _0x413af8(0x10, "white")),
    this["text"]["setText"]((_0x25c565 >= 0x0 ? "+ " : "") + _0xd3c315(_0x25c565) + _0x2d0561),
    (this["textFontSz"] = 0x1e);
  var _0x5abd3a = "white";
  _0x25c565 > 0x2710 && ((_0x5abd3a = "#c7b753"), (this["textFontSz"] = 0x28), (this["animDur"] += 0x3e8)),
    _0x25c565 > 0x186a0 && ((_0x5abd3a = "#fdca5b"), (this["textFontSz"] = 0x2d), (this["animDur"] += 0x7d0)),
    _0x25c565 > 0xf4240 && ((_0x5abd3a = "#c7b753"), (this["textFontSz"] = 0x33), (this["animDur"] += 0x7d0)),
    _0x25c565 < 0x0 && ((_0x5abd3a = "#c65f59"), (this["animDur"] += 0x7d0)),
    (_0x5abd3a = _0x53936e === undefined ? _0x5abd3a : _0x53936e),
    this["text"]["setColor"](_0x5abd3a),
    (this["draw"] = function () {
      if (_0x3d2be2["noXpPopups"]) return;
      var _0x23a9dc = _0x549f3d((_0x168a54 - this["animStartT"]) / this["animDur"], 0x0, 0x1);
      _0x587de3["save"]();
      var _0x3ae54b = _0x30bffa,
        _0x165751 = _0x26e939 + _0x23a9dc * (-0x96 * _0x385a2a);
      _0x587de3["translate"](_0x3ae54b, _0x165751),
        _0x587de3["rotate"](_0x3d960f(this["anlgeShift"] * _0x23a9dc)),
        (_0x587de3["globalAlpha"] = 0x1 - _0x23a9dc),
        this["text"]["setFontSize"](this["textFontSz"] * _0x385a2a),
        (this["text"]["x"] = 0x0),
        (this["text"]["y"] = 0x0),
        this["text"]["draw"](),
        _0x587de3["restore"]();
      if (_0x168a54 >= this["animStartT"] + this["animDur"]) this["timedOut"] = !![];
    });
}

function _0x2154d2(_0x3f517d, _0x31fbf9, _0x1c8a0d, _0x24240d) {
  (this["animStep"] = 0x1),
    (this["animStartT"] = _0x168a54),
    (this["timedOut"] = ![]),
    (this["xShift"] = _0x32639a(-0xa, 0xa)),
    (this["yShift"] = _0x32639a(-0xa, 0xa)),
    (this["anlgeShift"] = _0x32639a(-0xa, 0xa)),
    (this["text"] = new _0x413af8(_0x31fbf9, _0x1c8a0d)),
    this["text"]["setText"](_0x3f517d),
    (this["textFontSz"] = _0x31fbf9),
    (this["animDur"] = _0x24240d),
    this["text"]["setColor"](_0x1c8a0d),
    (this["draw"] = function () {
      if (_0x1254c0) return;
      var _0x585eb9 = _0x549f3d((_0x168a54 - this["animStartT"]) / this["animDur"], 0x0, 0x1);
      _0x587de3["save"]();
      var _0x502330 = _0x645c5 / 0x2,
        _0x26e952 = _0x24f0be - 0x55 * _0x385a2a + _0x585eb9 * (-0x96 * _0x385a2a);
      _0x587de3["translate"](_0x502330, _0x26e952),
        (_0x587de3["globalAlpha"] = 0x1 - _0x585eb9),
        this["text"]["setFontSize"](this["textFontSz"] * _0x385a2a),
        (this["text"]["x"] = 0x0),
        (this["text"]["y"] = 0x0),
        this["text"]["draw"](),
        _0x587de3["restore"]();
      if (_0x168a54 >= this["animStartT"] + this["animDur"]) this["timedOut"] = !![];
    });
}
var _0x455054 = 0xc8;

function _0x2564fb() {
  var _0x3c5d71 = _0x5d2635 && _0x2423b7 < 0x1f4 ? 1.4 : 0x1;
  (_0x33ed1d["w"] = _0x33ed1d["h"] = _0x455054 * _0x385a2a * _0x3c5d71),
    (_0x3ef432["w"] = _0x3ef432["h"] = _0x455054 * _0x385a2a * _0x3c5d71),
    (_0x100e8e["w"] = _0x100e8e["h"] = _0x455054 * _0x385a2a * _0x3c5d71),
    (_0x237496["w"] = 0x3c * _0x4454f9 * _0x3c5d71),
    (_0x237496["h"] = 0x1e * _0x4454f9 * _0x3c5d71);
  const _0x42d299 = 0x32;
  (_0x33ed1d["x"] = 0x19 * _0x4454f9 * _0x3c5d71 + _0x33ed1d["w"] / 0x2),
    (_0x33ed1d["x"] -= _0x42d299),
    (_0x33ed1d["y"] = _0x24f0be - (0x28 * _0x4454f9 + _0x33ed1d["w"] / 0x2));
  _0x470460 && (_0x33ed1d["x"] = _0x645c5 - _0x33ed1d["x"]);
  _0x3ef432["x"] = _0x33ed1d["x"];
  if (!_0x5d2635) _0x3ef432["y"] = _0x33ed1d["y"];
  else _0x3ef432["y"] = _0x33ed1d["y"] - (0xa * _0x4454f9 * _0x3c5d71 + _0x3ef432["w"] / 0x2 + _0x33ed1d["w"] / 0x2);
  (_0x100e8e["x"] = _0x33ed1d["x"]), (_0x100e8e["y"] = _0x3ef432["y"] - (0xa * _0x4454f9 * _0x3c5d71 + _0x100e8e["w"] / 0x2 + _0x3ef432["w"] / 0x2));
  _0x645c5 > 0x300
    ? (_0x237496["x"] = Math["min"](_0x645c5 / 0x2 + 0x64 * _0x4454f9 * _0x3c5d71, _0x645c5 * 0.8) - 0x12c)
    : (_0x237496["x"] = _0x645c5 / 0x2);
  (_0x237496["y"] = 0xf * _0x4454f9 + _0x237496["h"] / 0x2),
    _0x1b7b44["setPosAndSize"](
      _0x237496["x"] - (_0x237496["w"] / 0x2 + 0xa * _0x4454f9 * _0x3c5d71),
      _0x237496["y"],
      0x3c * _0x4454f9 * _0x3c5d71,
      0x1e * _0x4454f9 * _0x3c5d71,
      0x1,
      0.5
    ),
    _0x46912b["setPosAndSize"](
      _0x1b7b44["x"],
      _0x1b7b44["y"] + _0x1b7b44["h"] / 0x2 + 0xa * _0x4454f9 * _0x3c5d71,
      0x3c * _0x4454f9 * _0x3c5d71,
      0x1e * _0x4454f9 * _0x3c5d71,
      0.5,
      0x0
    );
  for (var _0x569de6 = 0x0; _0x569de6 < _0x4a6165["length"]; _0x569de6++) {
    var _0x290f74 = _0x4a6165[_0x569de6];
    _0x290f74["visible"] = _0x5d2635;
  }
  (_0x3ef432["visible"] = !![]),
    (_0x100e8e["visible"] = !![]),
    (_0x1b7b44["visible"] = _0x1b7b44["touchEnabled"] = _0x5d2635),
    (_0x46912b["visible"] = _0x46912b["touchEnabled"] = _0x5d2635 && _0x4bfbd4);
}
_0x2553b6["addEventListener"]("gesturestart", function (_0x52b289) {
  _0x52b289["preventDefault"]();
});

function _0x268f5a() {
  for (var _0x462045 = 0x0; _0x462045 < _0x4a6165["length"]; _0x462045++) {
    var _0x3198ad = _0x4a6165[_0x462045];
    (_0x3198ad["pressed"] = ![]), (_0x3198ad["pressedTouchID"] = -0x1);
  }
  _0x25ba5f = ![];
}
_0x2553b6["ontouchstart"] = function (_0x5de518) {
  _0x5c1561();
  var _0x13a175 = _0x5de518["touches"];
  _0x13a175["length"] == 0x1 && _0x268f5a();
  if (!_0x37000d) return;
  for (var _0x50a56e = 0x0; _0x50a56e < _0x5de518["changedTouches"]["length"]; _0x50a56e++) {
    var _0x4d0b33 = _0x5de518["changedTouches"][_0x50a56e];
    for (var _0x34661e = 0x0; _0x34661e < _0x4a6165["length"]; _0x34661e++) {
      var _0x3a9c1a = _0x4a6165[_0x34661e],
        _0x1fc718 = _0x3a9c1a["testPosHitsButton"](_0x4d0b33["clientX"] * _0x4454f9, _0x4d0b33["clientY"] * _0x4454f9);
      if (_0x1fc718 && !_0x3a9c1a["pressed"] && _0x3a9c1a["touchEnabled"]) {
        _0x5de518["preventDefault"](),
          (_0x3a9c1a["pressed"] = !![]),
          (_0x3a9c1a["pressedTouchID"] = _0x4d0b33["identifier"]),
          _0x3a9c1a["onButtonTouchStart"]();
        return;
      }
    }
  }
  if (!_0x203786) {
    if (!_0x25ba5f) {
      var _0x4d0b33 = _0x5de518["changedTouches"][0x0];
      (_0x25ba5f = !![]),
        (_0x2cfd66 = _0x4d0b33["clientX"] * _0x4454f9),
        (_0x1d5c60 = _0x4d0b33["clientY"] * _0x4454f9),
        (_0x431753 = _0x2cfd66),
        (_0x39cf46 = _0x1d5c60),
        (_0x5dfafd = _0x4d0b33["identifier"]);
      return;
    }
  }
  (_0x1d981d = _0x5de518["touches"][0x0]["clientX"] * _0x4454f9), (_0x571bbe = _0x5de518["touches"][0x0]["clientY"] * _0x4454f9), _0x262363();
};
var _0x26cadb = 0x0,
  _0x4dc2be = 0x0,
  _0x5c2ffb = 0x0,
  _0x1c2968 = 0x1;
(_0x2553b6["ontouchmove"] = function (_0x2fac1f) {
  _0x5c1561(), _0x2fac1f["preventDefault"]();
  for (var _0x25aa87 = 0x0; _0x25aa87 < _0x2fac1f["changedTouches"]["length"]; _0x25aa87++) {
    var _0x5a2f87 = _0x2fac1f["changedTouches"][_0x25aa87];
    if (_0x5a2f87["identifier"] == _0x3ef432["pressedTouchID"]) {
      if (_0x33ed1d["pressedTouchID"] == -0x1) {
        var _0x343513 = _0x33ed1d["testPosHitsButton"](_0x5a2f87["clientX"] * _0x4454f9, _0x5a2f87["clientY"] * _0x4454f9),
          _0x2d585b = _0x33ed1d["pressed"];
        _0x33ed1d["pressed"] = _0x343513;
        if (_0x343513 && !_0x2d585b) _0x311082(_0x9ae92, !![]);
        else !_0x343513 && _0x2d585b && _0x311082(_0x9ae92, ![]);
      }
      continue;
    }
    if (!_0x203786) {
      if (_0x25ba5f && _0x5a2f87["identifier"] == _0x5dfafd) {
        var _0x1bfe75 = _0x5a2f87["clientX"] * _0x4454f9 - _0x2cfd66,
          _0x467d3d = _0x5a2f87["clientY"] * _0x4454f9 - _0x1d5c60,
          _0x48a2d4 = Math["sqrt"](_0x1bfe75 * _0x1bfe75 + _0x467d3d * _0x467d3d);
        if (_0x48a2d4 > 0x0) {
          var _0x234126 = _0x1bfe75 / _0x48a2d4,
            _0x169b2a = _0x467d3d / _0x48a2d4,
            _0x1b4222 = Math["min"](0x1, _0x48a2d4 / (_0x4d31b1 * _0x4454f9));
          if (_0x1b4222 < 0.35) _0x1b4222 = 0x0;
          var _0xa4e1b2 = Math["pow"](_0x1b4222, 0x2),
            _0x4e2dc4 = 0x12c * _0x4454f9 * _0xa4e1b2,
            _0x1a2349 = Math["atan2"](_0x169b2a, _0x234126);
          (_0xa59e32 = _0xd024c6(_0x171502, _0x1a2349)),
            (_0x1d5591 = _0x1b4222),
            (_0x431753 = _0x2cfd66 + _0x4d31b1 * _0x4454f9 * _0x234126 * _0x1b4222),
            (_0x39cf46 = _0x1d5c60 + _0x4d31b1 * _0x4454f9 * _0x169b2a * _0x1b4222),
            (_0x1d981d = _0x645c5 / 0x2 + _0x234126 * _0x4e2dc4),
            (_0x571bbe = _0x24f0be / 0x2 + _0x169b2a * _0x4e2dc4),
            _0x262363();
        }
      }
    } else (_0x1d981d = _0x5a2f87["clientX"] * _0x4454f9), (_0x571bbe = _0x5a2f87["clientY"] * _0x4454f9), _0x262363();
  }
}),
  (_0x2553b6["ontouchend"] = function (_0x23c738) {
    for (var _0x563aee = 0x0; _0x563aee < _0x23c738["changedTouches"]["length"]; _0x563aee++) {
      var _0x2ad4e2 = _0x23c738["changedTouches"][_0x563aee];
      if (_0x25ba5f && _0x2ad4e2["identifier"] == _0x5dfafd) {
        (_0x25ba5f = ![]), (_0x5dfafd = -0x1);
        continue;
      }
      for (var _0x152063 = 0x0; _0x152063 < _0x4a6165["length"]; _0x152063++) {
        var _0x2cf6cd = _0x4a6165[_0x152063];
        if (_0x2cf6cd["pressed"] && _0x2cf6cd["pressedTouchID"] == _0x2ad4e2["identifier"] && _0x2cf6cd["touchEnabled"]) {
          (_0x2cf6cd["pressed"] = ![]), (_0x2cf6cd["pressedTouchID"] = -0x1);
          if (_0x37000d) _0x2cf6cd["onButtonTouchEnd"]();
          return;
        }
      }
    }
  }),
  (_0x2553b6["ontouchcancel"] = function (_0x3c8c8f) {
    console["log"]("touch cancel"), _0x2553b6["ontouchend"](_0x3c8c8f);
  }),
  (_0x2553b6["ontouchleave"] = function (_0x404bb0) {
    console["log"]("touch leave");
  }),
  (_0x307a43["prototype"] = {
    id: 0x0,
    drawMe: !![],
    oType: _0x4e42d9,
    spawnTime: 0x0,
    rPer: 0x0,
    updateTime: 0x0,
    x: 0x0,
    y: 0x0,
    ox: 0x0,
    oy: 0x0,
    nx: 0x0,
    ny: 0x0,
    rad: 0x0,
    oRad: 0x0,
    nRad: 0x0,
    angle: 0x0,
    oAngle: 0x0,
    angleDelta: 0x0,
    moveUpdF: 0x0,
    z: 0x0,
    name: "",
    dead: ![],
    type: 0x0,
    curBiome: 0x0,
    isRectangle: ![],
    rectW: 0x0,
    rectH: 0x0,
    specType: 0x0,
    toString: function () {
      return "[GObj t=" + this["oType"] + " id=" + this["id"] + "]";
    },
  }),
  (_0x307a43["prototype"]["flag_hurt"] = ![]),
  (_0x307a43["prototype"]["hpPer"] = _0x307a43["prototype"]["hpPer_n"] = _0x307a43["prototype"]["hpBarA"] = 0x0),
  (_0x307a43["prototype"]["infectionPer"] = _0x307a43["prototype"]["infectionPer_n"] = _0x307a43["prototype"]["infectionBarA"] = 0x0),
  (_0x307a43["prototype"]["curePer"] = _0x307a43["prototype"]["curePer_n"] = _0x307a43["prototype"]["cureBarA"] = 0x0),
  (_0x307a43["prototype"]["hpBarTimeoutT"] = 0x0),
  (_0x307a43["prototype"]["alwaysPlainOutline"] = ![]),
  (_0x307a43["prototype"]["doesDrawEffectScale"] = ![]),
  (_0x307a43["prototype"]["drawEffectScale_Slow"] = ![]),
  (_0x307a43["prototype"]["customInterfaceDraw"] = ![]),
  (_0x307a43["prototype"]["animateRadOnSpawn"] = !![]),
  (_0x307a43["prototype"]["canRotate"] = function () {
    switch (this["oType"]) {
      case _0x8c41f6:
      case _0x12b332:
      case _0x584c59:
        return ![];
    }
    return !![];
  }),
  (_0x307a43["prototype"]["getObjSpecies"] = function () {
    switch (this["oType"]) {
      case _0x44a83c:
        return "/" + this["speciesType"];
    }
    return "";
  }),
  (_0x307a43["prototype"]["customDraw2"] = function (_0x17022e) {
    switch (this["oType"]) {
      case _0x94e33c:
      case _0x2b2ead:
      case _0x5aecc8:
      case _0x4a3fde:
      case _0x4e42d9:
      case _0x1ce5d9:
      case _0x3ae840:
      case _0x8c41f6:
      case _0x313ba2:
      case _0x5a8996:
      case _0x59aa31:
      case _0x1daba1:
      case _0x12b332:
      case _0x561354:
      case _0x23ad49:
      case _0x55a015:
      case _0x433f67:
      case _0x1f6f17:
      case _0x51d37c:
      case _0x30fe85:
      case _0x1b4b44:
      case _0x2dd076:
      case _0x584c59:
      case _0x3aa6d5:
      case _0x59f46b:
      case _0x3fc954:
      case _0xf6ea95:
      case _0x3a42d7:
      case _0x583c47:
      case _0xb09376:
      case _0x40a3d9:
      case _0x5caf5d:
      case _0x194737:
      case _0x39e246:
      case _0x502ba3:
      case _0x44a83c:
      case _0x1d5893:
      case _0x1f80ee:
      case _0x46bfb3:
      case _0x37c4c1:
      case _0x5b51ce:
      case _0x571e21:
      case _0x2c74b8:
        (this["doesDrawEffectScale"] = ![]), (this["drawEffectScale_Slow"] = ![]);
        {
          var _0xae4dc3 = this["getSkinImageObj"](this["objSkinPath"]);
          _0x587de3["save"](), (_0x587de3["globalAlpha"] = this["getObjAlpha"]());
          if (_0xae4dc3) {
            var _0x4f3d00 = this["getRad"]();
            if (this["canRotate"]()) _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2);
            _0x587de3["drawImage"](_0xae4dc3, -_0x4f3d00, -_0x4f3d00, 0x2 * _0x4f3d00, 0x2 * _0x4f3d00);
          } else this["drawOutlinedCircle"]("(make this obj invisible on server?)", "black");
          _0x587de3["restore"]();
        }
        break;
    }
  }),
  (_0x307a43["prototype"]["getRad"] = function () {
    switch (this["oType"]) {
      case _0x1d5893:
      case _0x2898dc:
        return this["rad"] * 1.5;
      case _0x8c41f6:
        return this["rad"] * 1.2;
      case _0x46bfb3:
      case _0x37c4c1:
        var _0x554870 = _0x2fa637[_0x204989];
        if (_0x554870 && _0x554870["lastHidingHoleID"] == this["id"]) {
          if (this["alpha"] == undefined) this["alpha"] = 0x0;
          _0x554870["flag_inHidingHole"] ? (this["alpha"] += (0.1 + this["alpha"]) * 0.1) : (this["alpha"] -= this["alpha"] * 0.1);
          if (this["alpha"] > 0x1) this["alpha"] = 0x1;
          else this["alpha"] < 0x0 && (this["alpha"] = 0x0);
          return (_0x587de3["globalAlpha"] = this["alpha"]), this["rad"];
        } else return this["innerRad"];
    }
    return this["rad"];
  }),
  (_0x307a43["prototype"]["getObjAlpha"] = function () {
    switch (this["oType"]) {
      case _0x44a83c:
        return 0.9;
    }
    return 0x1;
  }),
  (_0x307a43["prototype"]["objSkinPath"] = null),
  (_0x307a43["prototype"]["getBiomeSkin"] = function (_0x440ffb) {
    switch (this["oType"]) {
      case _0x571e21:
        _0x440ffb = (this["isEdibleOutlined"]() ? "e" : this["oType"]) + "_" + this["specType"];
        break;
      case _0x44a83c:
      case _0x94e33c:
      case _0x2b2ead:
      case _0x5aecc8:
      case _0x1d5893:
      case _0x2c74b8:
        _0x440ffb = this["isEdibleOutlined"]() ? "e" : this["curBiome"];
        break;
      case _0x3ae840:
      case _0x1ce5d9:
      case _0x8c41f6:
        _0x440ffb = this["isEdibleOutlined"]() ? "e" : this["oType"];
        this["curBiome"] == _0x5dcee3 && (_0x440ffb += "_2");
        break;
      case _0x4a3fde:
        _0x440ffb = this["isEdibleOutlined"]() ? "e" : this["curBiome"];
        this["curBiome"] == _0x5dcee3 && (_0x440ffb += "_2");
        break;
      case _0x583c47:
        _0x440ffb += "_" + this["curBiome"];
        break;
      case _0x46bfb3:
      case _0x37c4c1:
        this["curBiome"] != _0x4e58f5 && (_0x440ffb = this["curBiome"]);
        break;
    }
    return _0x440ffb;
  }),
  (_0x307a43["prototype"]["customDraw"] = function (_0x1e2f7f) {
    switch (this["oType"]) {
      case _0x94e33c:
      case _0x2b2ead:
      case _0x5aecc8:
      case _0x4a3fde:
      case _0x4e42d9:
      case _0x1ce5d9:
      case _0x3ae840:
      case _0x8c41f6:
      case _0x313ba2:
      case _0x5a8996:
      case _0x59aa31:
      case _0x1daba1:
      case _0x12b332:
      case _0x561354:
      case _0x23ad49:
      case _0x55a015:
      case _0x433f67:
      case _0x1f6f17:
      case _0x51d37c:
      case _0x30fe85:
      case _0x1b4b44:
      case _0x2dd076:
      case _0x584c59:
      case _0x3aa6d5:
      case _0x59f46b:
      case _0x3fc954:
      case _0xf6ea95:
      case _0x3a42d7:
      case _0x583c47:
      case _0xb09376:
      case _0x40a3d9:
      case _0x5caf5d:
      case _0x194737:
      case _0x39e246:
      case _0x502ba3:
      case _0x44a83c:
      case _0x1d5893:
      case _0x1f80ee:
      case _0x46bfb3:
      case _0x37c4c1:
      case _0x5b51ce:
      case _0x571e21:
      case _0x2c74b8:
        this["customDraw2"](_0x1e2f7f);
        break;
      case _0x1d5893:
        {
          _0x587de3["save"]();
          var _0x543308 = 0x0;
          if (!_0x34fedb && !(_0x57ae6d == 0x2)) {
            var _0x583fb6 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
              _0x31651f = 0x2,
              _0x24629a = 1.5;
            _0x543308 = _0x24629a * Math["sin"](((0x2 * Math["PI"]) / _0x31651f) * _0x583fb6);
          }
          var _0x31bf0b = this["curBiome"] == _0x1940a7 ? _0x190bc6 : _0x1ea401;
          _0x587de3["fillStyle"] = _0x31bf0b;
          var _0x56e33b = this["rad"] * 0.8;
          this["drawOutlinedCircle"]("", _0x31bf0b), (_0x587de3["globalAlpha"] *= 0.98);
          var _0x228566 = -_0x56e33b * 0.5,
            _0x212c8e = -_0x56e33b * 0.5 + 0xa * this["rPer"],
            _0x169326 = Math["max"](0x0, _0x56e33b * 0.65 + _0x543308) + 0x2;
          _0x440ef0(_0x228566, _0x212c8e, _0x169326, _0x31bf0b);
          var _0x228566 = _0x56e33b * 0.5,
            _0x212c8e = -_0x56e33b * 0.5 - 0xa * this["rPer"],
            _0x169326 = Math["max"](0x0, _0x56e33b * 0.73 - _0x543308);
          _0x440ef0(_0x228566, _0x212c8e, _0x169326, _0x31bf0b);
          var _0x228566 = _0x56e33b * 0.6,
            _0x212c8e = _0x56e33b * 0.4,
            _0x169326 = Math["max"](0x0, _0x56e33b * 0.78 + _0x543308);
          _0x440ef0(_0x228566, _0x212c8e, _0x169326, _0x31bf0b);
          var _0x228566 = -_0x56e33b * 0.5,
            _0x212c8e = _0x56e33b * 0.5 + 0xa * this["rPer"],
            _0x169326 = Math["max"](0x0, _0x56e33b * 0.6 + this["rPer"] - _0x543308);
          _0x440ef0(_0x228566, _0x212c8e, _0x169326, _0x31bf0b), _0x587de3["restore"]();
        }
        break;
      case _0x186096:
        {
          var _0x506dc4 = this["curBiome"] == _0x75a7e2 ? "#9b702b" : "#1AAE31";
          this["drawOutlinedCircle"]("", _0x506dc4), _0x587de3["save"]();
          var _0x543308 = 0x0;
          if (!_0x34fedb && !(_0x57ae6d == 0x2)) {
            var _0x583fb6 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
              _0x31651f = 0x2,
              _0x24629a = 1.5;
            _0x543308 = _0x24629a * Math["sin"](((0x2 * Math["PI"]) / _0x31651f) * _0x583fb6);
          }
          _0x587de3["fillStyle"] = _0x4a6b40;
          var _0x2902c4 = this["rad"] * 0.75;
          (_0x587de3["globalAlpha"] *= 0.8),
            _0x587de3["beginPath"](),
            _0x587de3["arc"](
              -_0x2902c4 * 0.5,
              -_0x2902c4 * 0.5 + 0xa * this["rPer"],
              Math["max"](0x0, _0x2902c4 * 0.65 + _0x543308),
              0x0,
              0x2 * Math["PI"]
            ),
            _0x587de3["fill"](),
            _0x587de3["beginPath"](),
            _0x587de3["arc"](
              _0x2902c4 * 0.5,
              -_0x2902c4 * 0.5 - 0xa * this["rPer"],
              Math["max"](0x0, _0x2902c4 * 0.73 - _0x543308),
              0x0,
              0x2 * Math["PI"]
            ),
            _0x587de3["fill"](),
            _0x587de3["beginPath"](),
            _0x587de3["arc"](_0x2902c4 * 0.6, _0x2902c4 * 0.4, Math["max"](0x0, _0x2902c4 * 0.78 + _0x543308), 0x0, 0x2 * Math["PI"]),
            _0x587de3["fill"](),
            _0x587de3["beginPath"](),
            _0x587de3["arc"](-_0x2902c4 * 0.5, _0x2902c4 * 0.5, Math["max"](0x0, _0x2902c4 * 0.6 + this["rPer"] - _0x543308), 0x0, 0x2 * Math["PI"]),
            _0x587de3["fill"](),
            _0x587de3["restore"]();
        }
        break;
      case _0x2898dc:
        {
          _0x587de3["save"]();
          var _0x543308 = 0x0;
          if (!_0x34fedb && !(_0x57ae6d == 0x2)) {
            var _0x583fb6 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
              _0x31651f = 0x2,
              _0x24629a = 1.5;
            _0x543308 = _0x24629a * Math["sin"](((0x2 * Math["PI"]) / _0x31651f) * _0x583fb6);
          }
          var _0x56e33b = this["rad"] * 0.8,
            _0x2e6820 = _0x190bc6;
          this["drawOutlinedCircle"]("", _0x2e6820), (_0x587de3["globalAlpha"] *= 0.98);
          var _0x228566 = -_0x56e33b * 0.5,
            _0x212c8e = -_0x56e33b * 0.5 + 0xa * this["rPer"],
            _0x169326 = Math["max"](0x0, _0x56e33b * 0.65 + _0x543308) + 0x2;
          _0x440ef0(_0x228566, _0x212c8e, _0x169326, _0x2e6820);
          var _0x228566 = _0x56e33b * 0.5,
            _0x212c8e = -_0x56e33b * 0.5 - 0xa * this["rPer"],
            _0x169326 = Math["max"](0x0, _0x56e33b * 0.73 - _0x543308);
          _0x440ef0(_0x228566, _0x212c8e, _0x169326, _0x2e6820);
          var _0x228566 = _0x56e33b * 0.6,
            _0x212c8e = _0x56e33b * 0.4,
            _0x169326 = Math["max"](0x0, _0x56e33b * 0.78 + _0x543308);
          _0x440ef0(_0x228566, _0x212c8e, _0x169326, _0x2e6820);
          var _0x228566 = -_0x56e33b * 0.5,
            _0x212c8e = _0x56e33b * 0.5 + 0xa * this["rPer"],
            _0x169326 = Math["max"](0x0, _0x56e33b * 0.6 + this["rPer"] - _0x543308);
          _0x440ef0(_0x228566, _0x212c8e, _0x169326, _0x2e6820), _0x587de3["restore"]();
        }
        break;
      case _0x583c47:
        {
          _0x587de3["save"]();
          var _0x7af4a8 = this["curBiome"] == _0x5dcee3 ? "#7790d8" : _0x2634c2;
          this["drawOutlinedCircle"]("", _0x7af4a8);
          if (!(_0x57ae6d == 0x2)) _0x587de3["rotate"](this["rPer"] * 0x2 * Math["PI"]);
          var _0x543308 = 0x0;
          if (!_0x34fedb && !(_0x57ae6d == 0x2)) {
            var _0x583fb6 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
              _0x31651f = 0x7,
              _0x24629a = 0x4;
            _0x543308 = _0x24629a * Math["sin"](((0x2 * Math["PI"]) / _0x31651f) * _0x583fb6);
          }
          if (this["curBiome"] == _0x5dcee3) _0x587de3["fillStyle"] = "#7790d8";
          else _0x587de3["fillStyle"] = _0x2634c2;
          _0x587de3["beginPath"](),
            _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, this["rad"] - _0x2c5db5 + _0x543308), 0x0, Math["PI"] * 0x2),
            _0x587de3["fill"](),
            !(_0x57ae6d == 0x2) &&
              (_0x587de3["beginPath"](),
              _0x587de3["arc"](
                this["rad"] * 0.3,
                -this["rad"] * 0.35 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.35 + _0x543308),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                this["rad"] * 0.5,
                this["rad"] * 0.5 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.4 + _0x543308),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                -this["rad"] * 0.55 * 0.707,
                +this["rad"] * 0.55 * 0.707 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.5 + _0x543308),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                -this["rad"] * 0.75,
                -this["rad"] * 0.35 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.3 + _0x543308),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"]()),
            _0x587de3["restore"]();
        }
        break;
      case _0x4e42d9:
        {
          var _0x5557b7 = _0x14b9e3;
          this["curBiome"] == _0x5dcee3 && (_0x5557b7 = "#ac443c"), this["drawOutlinedCircle"]("", _0x5557b7);
        }
        break;
      case _0x5a8996:
        {
          var _0x390291 = this["getSkinImageObj"]("img/coconut" + (this["isEdibleOutlined"]() ? "_e" : "") + ".png");
          console["log"]("drawing cococ");
          if (_0x390291) {
            var _0x2902c4 = this["rad"];
            if (this["specType2"] == 0x1) {
              if (this["angle"] == 0x0) this["angle"] = this["rPer"] * Math["PI"] * 0x2;
              (this["angle"] += 0.4), _0x587de3["rotate"](this["angle"]);
            } else {
              if (this["specType2"] == 0x2) _0x587de3["rotate"](this["angle"]);
              else _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2);
            }
            _0x587de3["drawImage"](_0x390291, -_0x2902c4, -_0x2902c4, 0x2 * _0x2902c4, 0x2 * _0x2902c4);
          }
        }
        break;
      case _0x313ba2:
        {
          var _0x390291 = this["getSkinImageObj"]("img/banana" + (this["isEdibleOutlined"]() ? "_e" : "") + ".png");
          if (_0x390291) {
            var _0x2902c4 = this["rad"];
            if (this["specType2"] == 0x1) {
              if (this["angle"] == 0x0) this["angle"] = this["rPer"] * Math["PI"] * 0x2;
              (this["angle"] += 0.4), _0x587de3["rotate"](this["angle"]);
            } else {
              if (this["specType2"] == 0x2) _0x587de3["rotate"](this["angle"]);
              else _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2);
            }
            _0x587de3["drawImage"](_0x390291, -_0x2902c4, -_0x2902c4, 0x2 * _0x2902c4, 0x2 * _0x2902c4);
          }
        }
        break;
      case _0x3a42d7:
        {
          var _0x390291 = this["getSkinImageObj"]("img/rasp" + (this["isEdibleOutlined"]() ? "_e" : "") + ".png");
          if (_0x390291) {
            var _0x2902c4 = this["rad"];
            if (this["specType2"] == 0x1) {
              if (this["angle"] == 0x0) this["angle"] = this["rPer"] * Math["PI"] * 0x2;
              (this["angle"] += 0.4), _0x587de3["rotate"](this["angle"]);
            } else {
              if (this["specType2"] == 0x2) _0x587de3["rotate"](this["angle"]);
              else _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2);
            }
            _0x587de3["drawImage"](_0x390291, -_0x2902c4, -_0x2902c4, 0x2 * _0x2902c4, 0x2 * _0x2902c4);
          }
        }
        break;
      case _0xf6ea95:
        {
          var _0x390291 = this["getSkinImageObj"]("img/pear" + (this["isEdibleOutlined"]() ? "_e" : "") + ".png");
          if (_0x390291) {
            var _0x2902c4 = this["rad"];
            if (this["specType2"] == 0x1) {
              if (this["angle"] == 0x0) this["angle"] = this["rPer"] * Math["PI"] * 0x2;
              (this["angle"] += 0.4), _0x587de3["rotate"](this["angle"]);
            } else {
              if (this["specType2"] == 0x2) _0x587de3["rotate"](this["angle"]);
              else _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2);
            }
            _0x587de3["drawImage"](_0x390291, -_0x2902c4, -_0x2902c4, 0x2 * _0x2902c4, 0x2 * _0x2902c4);
          }
        }
        break;
      case _0x584c59:
        {
          var _0x390291 = this["getSkinImageObj"]("img/seaweed" + (this["isEdibleOutlined"]() ? "_e" : "") + ".png");
          if (_0x390291) {
            var _0x2902c4 = this["rad"];
            _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
              _0x587de3["drawImage"](_0x390291, -_0x2902c4, -_0x2902c4, 0x2 * _0x2902c4, 0x2 * _0x2902c4);
          }
        }
        break;
      case _0x3aa6d5:
        {
          var _0x390291 = this["getSkinImageObj"]("img/starfish" + (this["isEdibleOutlined"]() ? "_e" : "") + ".png");
          if (_0x390291) {
            var _0x2902c4 = this["rad"];
            _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
              _0x587de3["drawImage"](_0x390291, -_0x2902c4, -_0x2902c4, 0x2 * _0x2902c4, 0x2 * _0x2902c4);
          }
        }
        break;
      case _0x1b4b44:
        {
          var _0x390291 = this["getSkinImageObj"]("img/kelp" + (this["isEdibleOutlined"]() ? "_e" : "") + ".png");
          if (_0x390291) {
            var _0x2902c4 = this["rad"];
            _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
              _0x587de3["drawImage"](_0x390291, -_0x2902c4, -_0x2902c4, 0x2 * _0x2902c4, 0x2 * _0x2902c4);
          }
        }
        break;
      case _0x2dd076:
        {
          var _0x390291 = this["getSkinImageObj"]("img/clam" + (this["isEdibleOutlined"]() ? "_e" : "") + ".png");
          if (_0x390291) {
            var _0x2902c4 = this["rad"];
            _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
              _0x587de3["drawImage"](_0x390291, -_0x2902c4, -_0x2902c4, 0x2 * _0x2902c4, 0x2 * _0x2902c4);
          }
        }
        break;
      case _0x30fe85:
        {
          var _0x390291 = this["getSkinImageObj"]("img/conch" + (this["isEdibleOutlined"]() ? "_e" : "") + ".png");
          if (_0x390291) {
            var _0x2902c4 = this["rad"] * 0x1;
            _0x587de3["save"](),
              _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
              _0x587de3["drawImage"](_0x390291, -_0x2902c4, -_0x2902c4, 0x2 * _0x2902c4, 0x2 * _0x2902c4),
              _0x587de3["restore"]();
          }
        }
        break;
      case _0x464acd:
      case _0x1fc81b: {
        break;
      }
      case _0x374904:
        {
          var _0x390291 = this["getSkinImageObj"](
            "skins/land/ostrich/" + this["speciesType"] + "/ostrichEgg" + (this["isEdibleOutlined"]() ? "_e" : "") + ".png"
          );
          if (_0x390291) {
            var _0x2902c4 = this["rad"];
            _0x587de3["save"](),
              _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
              _0x587de3["drawImage"](_0x390291, -_0x2902c4, -_0x2902c4, 0x2 * _0x2902c4, 0x2 * _0x2902c4),
              _0x587de3["restore"]();
          }
        }
        break;
      case _0x497145:
        this["drawOutlinedCircle"]("", "red");
        break;
      case _0x41e12f:
        this["drawOutlinedCircle"]("", "green");
        break;
      case _0x55d652:
        this["drawOutlinedCircle"]("", "blue");
        break;
      case _0x1398dd:
        break;
      case _0x571e21:
        {
          var _0x369e32 = "egg";
          if (this["specType"] == 0x1) _0x369e32 = "goldenegg";
          var _0x1068c9 = "img/" + _0x369e32 + (this["isEdibleOutlined"]() ? "_e" : "") + ".png";
          console["log"](_0x1068c9);
          var _0x390291 = this["getSkinImageObj"](_0x1068c9);
          if (_0x390291) {
            var _0x2902c4 = this["rad"];
            _0x587de3["save"](),
              _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
              _0x587de3["drawImage"](_0x390291, -_0x2902c4, -_0x2902c4, 0x2 * _0x2902c4, 0x2 * _0x2902c4),
              _0x587de3["restore"]();
          }
        }
        break;
      case _0x12b332:
        {
          var _0x390291 = this["getSkinImageObj"]("img/beehive" + (this["isEdibleOutlined"]() ? "_e" : "") + ".png");
          if (_0x390291) {
            var _0x2902c4 = this["rad"];
            _0x587de3["save"](),
              _0x587de3["rotate"](this["rPer"] * 0.5 * Math["PI"] * 0x2),
              _0x587de3["drawImage"](_0x390291, -_0x2902c4, -_0x2902c4, 0x2 * _0x2902c4, 0x2 * _0x2902c4),
              _0x587de3["restore"]();
          }
        }
        break;
      case _0x494ac9:
        {
          var _0x390291 = this["getSkinImageObj"]("img/desert/anthill/anthill.png");
          if (_0x390291) {
            var _0x2902c4 = this["rad"];
            _0x587de3["save"](),
              _0x587de3["rotate"](this["rPer"] * 0.5 * Math["PI"] * 0x2),
              _0x587de3["drawImage"](_0x390291, -_0x2902c4, -_0x2902c4, 0x2 * _0x2902c4, 0x2 * _0x2902c4),
              _0x587de3["restore"](),
              console["log"]("drawing anthill");
          }
        }
        break;
      case _0x433f67:
        {
          var _0x390291 = this["getSkinImageObj"]("img/honeycomb" + (this["isEdibleOutlined"]() ? "_e" : "") + ".png");
          if (_0x390291) {
            var _0x2902c4 = this["rad"];
            _0x587de3["save"](),
              _0x587de3["rotate"](this["rPer"] * 0.5 * Math["PI"] * 0x2),
              _0x587de3["drawImage"](_0x390291, -_0x2902c4, -_0x2902c4, 0x2 * _0x2902c4, 0x2 * _0x2902c4),
              _0x587de3["restore"]();
          }
        }
        break;
      case _0x52e0e9:
        {
          var _0x390291 = this["getSkinImageObj"]("img/quill.png");
          if (_0x390291) {
            var _0x2902c4 = this["rad"];
            _0x587de3["rotate"](this["angle"]), _0x587de3["drawImage"](_0x390291, -_0x2902c4, -_0x2902c4, 0x2 * _0x2902c4, 0x2 * _0x2902c4);
          }
        }
        break;
      case _0x5b51ce:
        {
          this["drawOutlinedCircle"]("", _0x20d9b6),
            _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
            _0x440ef0(this["rad"] * 0.25, this["rad"] * 0.4, (0.3 + 0.15 * this["rPer"]) * this["rad"], "#905113");
        }
        break;
      case _0x5aecc8:
        {
          var _0x1c08ed = "";
          console["log"]("Healing stone current biome: " + this["curBiome"]);
          switch (this["curBiome"]) {
            case _0x1940a7:
              _0x1c08ed = "_ocean";
              break;
            case _0x5dcee3:
              _0x1c08ed = "_arctic";
              break;
            case _0xf851ac:
            default:
              _0x1c08ed = "";
              break;
          }
          var _0x390291 = this["getSkinImageObj"]("img/healingStone" + _0x1c08ed + ".png");
          console["log"]("Healing stone image: " + image);
          if (_0x390291) {
            var _0x2902c4 = this["rad"];
            _0x587de3["save"](),
              _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
              _0x587de3["drawImage"](_0x390291, -_0x2902c4, -_0x2902c4, 0x2 * _0x2902c4, 0x2 * _0x2902c4),
              _0x587de3["restore"]();
          }
        }
        break;
      case _0x45f833:
        {
          _0x440ef0(0x0, 0x0, Math["max"](0x0, this["rad"] * 0x1), "#815427"),
            _0x440ef0(0x0, 0x0, Math["max"](0x0, this["rad"] * 0.6), "#6e4b29"),
            _0x440ef0(0x0, 0x0, Math["max"](0x0, this["rad"] * 0.5), "#543d28"),
            _0x440ef0(0x0, 0x0, Math["max"](0x0, this["rad"] * 0.45), "#3f3124"),
            _0x440ef0(0x0, 0x0, Math["max"](0x0, this["rad"] * 0.33), "#241e19"),
            _0x440ef0(0x0, 0x0, Math["max"](0x0, this["rad"] * 0.25), "#120f0d"),
            _0x440ef0(0x0, 0x0, Math["max"](0x0, this["rad"] * 0.2), _0x9d1ce2);
        }
        break;
      case _0x3c81e7:
        {
          _0x587de3["save"]();
          var _0x543308 = 0x0;
          if (!_0x34fedb && !(_0x57ae6d == 0x2)) {
            var _0x5df1cf = _0x38b128("lavalake", this["spawnTime"]);
            _0x5df1cf !== undefined && _0x5df1cf != null && (this["theFrame"] = _0x5df1cf), (_0x543308 = this["theFrame"]);
          }
          if (_0x1e2f7f) {
            var _0x2c5db5 = 0x4;
            (_0x587de3["fillStyle"] = _0x9d1ce2),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](0x0, 0x0, this["rad"], 0x0, Math["PI"] * 0x2),
              _0x587de3["fill"]();
          } else
            (_0x587de3["fillStyle"] = _0x9d1ce2),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, this["rad"] - _0x2c5db5 + _0x543308), 0x0, Math["PI"] * 0x2),
              _0x587de3["fill"](),
              !(_0x57ae6d == 0x2) &&
                (_0x587de3["beginPath"](),
                _0x587de3["arc"](
                  this["rad"] * 0.45,
                  -this["rad"] * 0.45 + 0xf * this["rPer"],
                  Math["max"](0x0, this["rad"] * 0.5 + _0x543308),
                  0x0,
                  0x2 * Math["PI"]
                ),
                _0x587de3["fill"](),
                _0x587de3["beginPath"](),
                _0x587de3["arc"](
                  this["rad"] * 0.5,
                  this["rad"] * 0.5 + 0xf * this["rPer"],
                  Math["max"](0x0, this["rad"] * 0.4 + _0x543308),
                  0x0,
                  0x2 * Math["PI"]
                ),
                _0x587de3["fill"](),
                _0x587de3["beginPath"](),
                _0x587de3["arc"](
                  -this["rad"] * 0.55 * 0.707,
                  +this["rad"] * 0.55 * 0.707 + 0xf * this["rPer"],
                  Math["max"](0x0, this["rad"] * 0.5 + _0x543308),
                  0x0,
                  0x2 * Math["PI"]
                ),
                _0x587de3["fill"](),
                _0x587de3["beginPath"](),
                _0x587de3["arc"](
                  -this["rad"] * 0.75,
                  -this["rad"] * 0.35 + 0xf * this["rPer"],
                  Math["max"](0x0, this["rad"] * 0.3 + _0x543308),
                  0x0,
                  0x2 * Math["PI"]
                ),
                _0x587de3["fill"](),
                _0x587de3["beginPath"](),
                _0x587de3["arc"](this["rad"] + 0xa * this["rPer"], 0x32 * this["rPer"], 0x8, 0x0, 0x2 * Math["PI"]),
                _0x587de3["fill"](),
                _0x587de3["beginPath"](),
                _0x587de3["arc"](this["rad"] - 0x14 * this["rPer"], 0x32 * this["rPer"], 0xa, 0x0, 0x2 * Math["PI"]),
                _0x587de3["fill"]());
          _0x587de3["restore"]();
        }
        break;
      case _0x1f2a58:
        {
          _0x587de3["save"]();
          var _0x543308 = 0x0,
            _0x583fb6 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
            _0x31651f = 0x4,
            _0x24629a = 2.5;
          _0x543308 = _0x24629a * Math["sin"](((0x2 * Math["PI"]) / _0x31651f) * _0x583fb6);
          if (_0x1e2f7f) {
            var _0x2c5db5 = 0x4;
            (_0x587de3["fillStyle"] = "#5e5348"),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](0x0, 0x0, this["rad"], 0x0, Math["PI"] * 0x2),
              _0x587de3["fill"]();
          } else {
            (_0x587de3["fillStyle"] = "#706962"),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, this["rad"] - _0x2c5db5 + _0x543308), 0x0, Math["PI"] * 0x2),
              _0x587de3["fill"]();
            !(_0x57ae6d == 0x2) &&
              (_0x587de3["beginPath"](),
              _0x587de3["arc"](
                this["rad"] * 0.45,
                -this["rad"] * 0.45 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.5 + _0x543308),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                this["rad"] * 0.5,
                this["rad"] * 0.5 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.4 + _0x543308),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                -this["rad"] * 0.55 * 0.707,
                +this["rad"] * 0.55 * 0.707 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.5 + _0x543308),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                -this["rad"] * 0.75,
                -this["rad"] * 0.35 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.3 + _0x543308),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](this["rad"] + 0xa * this["rPer"], 0x32 * this["rPer"], 0x8, 0x0, 0x2 * Math["PI"]),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](this["rad"] - 0x14 * this["rPer"], 0x32 * this["rPer"], 0xa, 0x0, 0x2 * Math["PI"]),
              _0x587de3["fill"]());
            _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0x1 - this["underwaterA"]);
            var _0x583fb6 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
              _0x31651f = 1.5,
              _0x24629a = 0x8,
              _0x369f63 = _0x24629a * Math["sin"](((0x2 * Math["PI"]) / _0x31651f) * _0x583fb6);
            if (this["flag_underWater"]) {
              _0x587de3["globalAlpha"] *= 0.5;
              if (this["animalType"] == _0x16bb4c) _0x587de3["globalAlpha"] = 0.3;
            }
            _0x587de3["fillStyle"] = "yellow";
            var _0x5bd62f = this["rad"] * 0.15;
            _0x587de3["beginPath"]();
            var _0x57c673 = 0x1;
            for (i = 0x1; i <= _0x57c673; i++) {
              _0x587de3["save"](),
                (_0x587de3["globalAlpha"] = 0.2),
                _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2 * i),
                _0x587de3["beginPath"](),
                _0x587de3["arc"](this["rad"] * -0.35, this["rad"] * -0.33, Math["max"](0x0, _0x5bd62f + _0x369f63), 0x0, Math["PI"] * 0x2),
                _0x587de3["fill"](),
                _0x587de3["beginPath"](),
                _0x587de3["arc"](this["rad"] * 0.35, this["rad"] * -0.32, Math["max"](0x0, _0x5bd62f - _0x369f63), 0x0, Math["PI"] * 0x2),
                _0x587de3["fill"](),
                _0x587de3["beginPath"](),
                _0x587de3["arc"](this["rad"] * 0.35, this["rad"] * 0.36, Math["max"](0x0, _0x5bd62f + _0x369f63), 0x0, Math["PI"] * 0x2),
                _0x587de3["fill"](),
                _0x587de3["beginPath"](),
                _0x587de3["arc"](this["rad"] * -0.35, this["rad"] * 0.35, Math["max"](0x0, _0x5bd62f - _0x369f63), 0x0, Math["PI"] * 0x2),
                _0x587de3["fill"](),
                _0x587de3["restore"]();
            }
            _0x587de3["restore"]();
          }
          _0x587de3["restore"]();
        }
        break;
      case _0x59f46b:
        {
          var _0x390291 = this["getSkinImageObj"]("img/cloudberry" + (this["isEdibleOutlined"]() ? "_e" : "") + ".png");
          if (_0x390291) {
            var _0x2902c4 = this["rad"];
            if (this["specType2"] == 0x1) {
              if (this["angle"] == 0x0) this["angle"] = this["rPer"] * Math["PI"] * 0x2;
              (this["angle"] += 0.4), _0x587de3["rotate"](this["angle"]);
            } else {
              if (this["specType2"] == 0x2) _0x587de3["rotate"](this["angle"]);
              else _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2);
            }
            _0x587de3["drawImage"](_0x390291, -_0x2902c4, -_0x2902c4, 0x2 * _0x2902c4, 0x2 * _0x2902c4);
          }
        }
        break;
      case _0x3fc954:
        {
          var _0x390291 = this["getSkinImageObj"]("img/arcticNut" + (this["isEdibleOutlined"]() ? "_e" : "") + ".png");
          if (_0x390291) {
            var _0x2902c4 = this["rad"];
            if (this["specType2"] == 0x1) {
              if (this["angle"] == 0x0) this["angle"] = this["rPer"] * Math["PI"] * 0x2;
              (this["angle"] += 0.4), _0x587de3["rotate"](this["angle"]);
            } else {
              if (this["specType2"] == 0x2) _0x587de3["rotate"](this["angle"]);
              else _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2);
            }
            _0x587de3["drawImage"](_0x390291, -_0x2902c4, -_0x2902c4, 0x2 * _0x2902c4, 0x2 * _0x2902c4);
          }
        }
        break;
      case _0x59aa31:
        {
          var _0x390291 = this["getSkinImageObj"]("img/carrot" + (this["isEdibleOutlined"]() ? "_e" : "") + ".png");
          if (_0x390291) {
            var _0x2902c4 = this["rad"];
            _0x587de3["save"](),
              _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
              _0x587de3["drawImage"](_0x390291, -_0x2902c4, -_0x2902c4, 0x2 * _0x2902c4, 0x2 * _0x2902c4),
              _0x587de3["restore"]();
          }
        }
        break;
      case _0x1f6f17:
        {
          var _0x390291 = this["getSkinImageObj"]("img/watermelon" + (this["isEdibleOutlined"]() ? "_e" : "") + ".png");
          if (_0x390291) {
            var _0x2902c4 = this["rad"];
            _0x587de3["save"](),
              _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
              _0x587de3["drawImage"](_0x390291, -_0x2902c4, -_0x2902c4, 0x2 * _0x2902c4, 0x2 * _0x2902c4),
              _0x587de3["restore"]();
          }
        }
        break;
      case _0x116a06:
        {
          _0x587de3["save"](),
            _0x440ef0(0x0, 0x0, this["rad"], !this["isEdibleOutlined"]() ? _0x7a849(this["curBiome"]) : _0xab8999),
            _0x440ef0(0x0, 0x0, Math["max"](0x0, this["rad"] - 0x2), "#74e61e"),
            _0x587de3["restore"]();
        }
        break;
      case _0x51d37c:
        {
          var _0x390291 = this["getSkinImageObj"]("img/watermelonSlice" + (this["isEdibleOutlined"]() ? "_e" : "") + ".png");
          if (_0x390291) {
            var _0x2902c4 = this["rad"];
            _0x587de3["save"](),
              _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
              _0x587de3["drawImage"](_0x390291, -_0x2902c4, -_0x2902c4, 0x2 * _0x2902c4, 0x2 * _0x2902c4),
              _0x587de3["restore"]();
          }
        }
        break;
      case _0x55a015:
      case _0x23ad49:
      case _0x561354:
        {
          var _0x303b3b = 0x0,
            _0x390291 = this["getSkinImageObj"]("img/meat" + (this["isEdibleOutlined"]() ? "_e" : "") + ".png");
          if (_0x390291) {
            var _0x2902c4 = this["rad"];
            _0x587de3["save"](),
              _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
              _0x587de3["drawImage"](_0x390291, -_0x2902c4, -_0x2902c4, 0x2 * _0x2902c4, 0x2 * _0x2902c4),
              _0x587de3["restore"]();
          }
        }
        break;
      case _0x1ce5d9:
      case _0x3ae840:
        {
          var _0x2c5db5 = 0x2,
            _0xde7329 = this["oType"] == _0x3ae840 ? 0xf : 0x9;
          (_0x587de3["fillStyle"] = this["getOutlineColor"]()),
            _0x587de3["beginPath"](),
            _0x587de3["rect"](-_0xde7329 / 0x2 - _0x2c5db5, -_0x2c5db5, _0xde7329 + _0x2c5db5 * 0x2, this["rad"] * 0.8 + _0x2c5db5 * 0x2),
            _0x587de3["fill"](),
            (_0x587de3["fillStyle"] = "#FFCA49"),
            _0x587de3["beginPath"](),
            _0x587de3["rect"](-_0xde7329 / 0x2, 0x0 + _0x2c5db5 / 0x2, _0xde7329, this["rad"] * 0.8 - _0x2c5db5 / 0x2),
            _0x587de3["fill"](),
            !(_0x57ae6d == 0x2) &&
              (_0x587de3["beginPath"](),
              _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, this["rad"]), Math["PI"], 0x2 * Math["PI"]),
              (_0x587de3["fillStyle"] = this["getOutlineColor"]()),
              _0x587de3["fill"]()),
            _0x587de3["beginPath"](),
            _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, this["rad"] - _0x2c5db5), Math["PI"], 0x2 * Math["PI"]),
            (_0x587de3["fillStyle"] = this["oType"] == _0x3ae840 ? "#B8413B" : "#CFAD59"),
            _0x587de3["fill"]();
        }
        break;
      case _0x8c41f6:
        {
          var _0x2c5db5 = 0x2;
          _0x587de3["save"]();
          var _0x543308 = 0x0;
          if (!_0x34fedb && !(_0x57ae6d == 0x2)) {
            var _0x583fb6 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
              _0x31651f = 0x2,
              _0x24629a = 1.5;
            _0x543308 = _0x24629a * Math["sin"](((0x2 * Math["PI"]) / _0x31651f) * _0x583fb6);
          }
          (_0x587de3["fillStyle"] = "#45D157"),
            (_0x587de3["globalAlpha"] *= 0.93),
            _0x587de3["beginPath"](),
            _0x587de3["arc"](
              -this["rad"] * 0.5,
              -this["rad"] * 0.5 + 0xa * this["rPer"],
              Math["max"](0x0, this["rad"] * 0.55 + _0x543308),
              0x0,
              0x2 * Math["PI"]
            ),
            _0x587de3["fill"](),
            _0x587de3["beginPath"](),
            _0x587de3["arc"](
              this["rad"] * 0.5,
              -this["rad"] * 0.5 - 0xa * this["rPer"],
              Math["max"](0x0, this["rad"] * 0.43 - _0x543308),
              0x0,
              0x2 * Math["PI"]
            ),
            _0x587de3["fill"](),
            _0x587de3["beginPath"](),
            _0x587de3["arc"](this["rad"] * 0.6, this["rad"] * 0.4, Math["max"](0x0, this["rad"] * 0.48 + _0x543308), 0x0, 0x2 * Math["PI"]),
            _0x587de3["fill"](),
            _0x587de3["beginPath"](),
            _0x587de3["arc"](
              -this["rad"] * 0.5,
              this["rad"] * 0.5,
              Math["max"](0x0, this["rad"] * 0.4 + this["rPer"] - _0x543308),
              0x0,
              0x2 * Math["PI"]
            ),
            _0x587de3["fill"](),
            _0x587de3["restore"]();
          var _0xde7329 = 0x14;
          (_0x587de3["fillStyle"] = this["getOutlineColor"]()),
            _0x587de3["beginPath"](),
            _0x587de3["rect"](-_0xde7329 / 0x2 - _0x2c5db5, -_0x2c5db5, _0xde7329 + _0x2c5db5 * 0x2, this["rad"] * 0.8 + _0x2c5db5 * 0x2),
            _0x587de3["fill"](),
            (_0x587de3["fillStyle"] = "#FFCA49"),
            _0x587de3["beginPath"](),
            _0x587de3["rect"](-_0xde7329 / 0x2, 0x0 + _0x2c5db5 / 0x2, _0xde7329, this["rad"] * 0.8 - _0x2c5db5 / 0x2),
            _0x587de3["fill"](),
            _0x587de3["beginPath"](),
            _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, this["rad"] * 0.8), Math["PI"], 0x2 * Math["PI"]),
            (_0x587de3["fillStyle"] = this["getOutlineColor"]()),
            _0x587de3["fill"](),
            _0x587de3["beginPath"](),
            _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, this["rad"] * 0.8 - _0x2c5db5), Math["PI"], 0x2 * Math["PI"]),
            (_0x587de3["fillStyle"] = "#B8413B"),
            _0x587de3["fill"]();
        }
        break;
      case _0x1daba1:
        {
          var _0x390291 = this["getSkinImageObj"]("img/lillypad" + (this["isEdibleOutlined"]() ? "_e" : "") + ".png");
          if (_0x390291) {
            var _0x2902c4 = this["rad"];
            _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
              _0x587de3["drawImage"](_0x390291, -_0x2902c4, -_0x2902c4, 0x2 * _0x2902c4, 0x2 * _0x2902c4);
          }
        }
        break;
      case _0x5aa814:
        {
          console["log"]("ERROR: " + this + " should be subclassed!");
        }
        break;
      case _0x46bfb3:
      case _0x37c4c1:
        {
          var _0x3b7910 = this["curBiome"] == _0x5dcee3 ? "#e0e0e0" : "#9F8641",
            _0x563cba = this["curBiome"] == _0x5dcee3 ? "#878787" : "#7E6A35",
            _0x3eca1f = this["curBiome"] == _0x5dcee3 ? "#666666" : "#5C4E28",
            _0x584b43 = this["curBiome"] == _0x5dcee3 ? "#434343" : "#40371D";
          if (this["curBiome"] != _0x5dcee3) this["drawOutlinedCircleRad"]("", _0x3b7910, this["innerRad"]);
          else _0x440ef0(0x0 + this["rPer"], 0x1, Math["max"](0x0, this["innerRad"]), _0x3b7910);
          !(_0x57ae6d == 0x2) && _0x440ef0(0x0 - this["rPer"], 0x0 - this["rPer"], Math["max"](0x0, this["innerRad"] - 0x7), _0x563cba);
          _0x440ef0(0x0 + this["rPer"], 0x1, Math["max"](0x0, this["innerRad"] - 0xe), _0x3eca1f),
            _0x440ef0(0x0 - this["rPer"] * 0x2 - 0x3, 0x1, Math["max"](0x0, this["innerRad"] - 18.5), _0x584b43);
          var _0x19c1fc = _0x2fa637[_0x204989];
          if (_0x19c1fc && _0x19c1fc["lastHidingHoleID"] == this["id"]) {
            if (this["alpha"] == undefined) this["alpha"] = 0x0;
            _0x19c1fc["flag_inHidingHole"] ? (this["alpha"] += (0.1 + this["alpha"]) * 0.1) : (this["alpha"] -= this["alpha"] * 0.1);
            if (this["alpha"] > 0x1) this["alpha"] = 0x1;
            else this["alpha"] < 0x0 && (this["alpha"] = 0x0);
            _0x587de3["globalAlpha"] = this["alpha"];
            var _0xc22d60 = this["rad"];
            if (this["curBiome"] != _0x5dcee3) this["drawOutlinedCircleRad"]("", _0x3b7910, _0xc22d60);
            else _0x440ef0(0x0, 0x0, Math["max"](0x0, _0xc22d60), _0x3b7910);
            _0x440ef0(0x0 - this["rPer"], 0x0 - this["rPer"], Math["max"](0x0, _0xc22d60 - 0x7), _0x563cba),
              _0x440ef0(0x0 + this["rPer"], 0x1, Math["max"](0x0, _0xc22d60 - 0xc), _0x3eca1f),
              (_0x587de3["globalAlpha"] = this["alpha"] * 0.7),
              (_0xc22d60 = _0xc22d60 * 0.7),
              _0x440ef0(0x0 - this["rPer"], 0x0 - this["rPer"], Math["max"](0x0, _0xc22d60 - 0x7), _0x584b43),
              (_0xc22d60 = _0xc22d60 * 0.5),
              (_0x587de3["globalAlpha"] = this["alpha"] * 0.3),
              _0x440ef0(0x0 - this["rPer"], 0x0 - this["rPer"], Math["max"](0x0, _0xc22d60), _0x584b43);
          }
        }
        break;
      case _0x259653:
        {
          var _0x48d397 = 0x1,
            _0x4e0f8c = 0x1;
          if (!_0x34fedb && !(_0x57ae6d == 0x2)) {
            var _0x583fb6 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
              _0x31651f = 1.2;
            (_0x48d397 = 3.5 * Math["cos"](((0x2 * Math["PI"]) / _0x31651f) * _0x583fb6)),
              (_0x4e0f8c = 2.5 * Math["sin"](((0x2 * Math["PI"]) / _0x31651f) * _0x583fb6));
          }
          this["drawOutlinedCircleRad"]("", "#4A549D", this["innerRad"]);
          !(_0x57ae6d == 0x2) &&
            _0x440ef0(
              0x0 + _0x48d397 / 0x2 - this["rPer"],
              0x0 + _0x4e0f8c / 0x2 - this["rPer"],
              Math["max"](0x0, this["innerRad"] - 0x6),
              "#444C8B"
            );
          _0x440ef0(0x0 + _0x48d397 / 4.5 + this["rPer"], 0x1 + _0x4e0f8c / 1.5, Math["max"](0x0, this["innerRad"] - 0xe), "#4A549D"),
            _0x440ef0(0x0 + _0x48d397 / 1.5 - this["rPer"] * 0x2, _0x4e0f8c, Math["max"](0x0, this["innerRad"] - 18.5 + _0x4e0f8c / 0x5), "#3F4477"),
            _0x440ef0(0x0 + _0x48d397 / 1.5 - this["rPer"] * 0x2, _0x4e0f8c, Math["max"](0x0, this["innerRad"] - 22.5 + _0x4e0f8c / 0xb), "#353860");
          var _0x19c1fc = _0x2fa637[_0x204989];
          if (_0x19c1fc && _0x19c1fc["lastHidingHoleID"] == this["id"]) {
            if (this["alpha"] == undefined) this["alpha"] = 0x0;
            _0x19c1fc["flag_inHidingHole"] ? (this["alpha"] += (0.1 + this["alpha"]) * 0.1) : (this["alpha"] -= this["alpha"] * 0.1);
            if (this["alpha"] > 0x1) this["alpha"] = 0x1;
            else this["alpha"] < 0x0 && (this["alpha"] = 0x0);
            _0x587de3["globalAlpha"] = this["alpha"];
            var _0xc22d60 = this["rad"];
            this["drawOutlinedCircle"]("", "#4A549D", _0xc22d60),
              !(_0x57ae6d == 0x2) &&
                _0x440ef0(0x0 + _0x48d397 / 0x2 - this["rPer"], 0x0 + _0x4e0f8c / 0x2 - this["rPer"], Math["max"](0x0, _0xc22d60 - 0x6), "#444C8B"),
              _0x440ef0(0x0 + _0x48d397 / 4.5 + this["rPer"], 0x1 + _0x4e0f8c / 1.5, Math["max"](0x0, _0xc22d60 - 0xe), "#4A549D"),
              (_0xc22d60 = _0xc22d60 * 0.9),
              (_0x587de3["globalAlpha"] = this["alpha"] * 0.6),
              _0x440ef0(0x0 + _0x48d397 / 3.5 - this["rPer"] * 0x2, _0x4e0f8c, Math["max"](0x0, _0xc22d60 - 18.5 + _0x4e0f8c / 0x5), "#3F4477"),
              (_0xc22d60 = _0xc22d60 * 0.7),
              (_0x587de3["globalAlpha"] = this["alpha"] * 0.3),
              _0x440ef0(0x0 + _0x48d397 / 6.5 - this["rPer"] * 0x2, _0x4e0f8c, Math["max"](0x0, _0xc22d60 - 22.5 + _0x4e0f8c / 0xb), "#353860");
          }
        }
        break;
      case _0x44a83c:
        {
          _0x587de3["save"]();
          var _0x543308 = 0x0;
          if (!_0x34fedb && !(_0x57ae6d == 0x2)) {
            var _0x583fb6 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
              _0x31651f = 0x2,
              _0x24629a = 1.5;
            _0x543308 = _0x24629a * Math["sin"](((0x2 * Math["PI"]) / _0x31651f) * _0x583fb6);
          }
          var _0x494141 = "#45D157";
          switch (this["curBiome"]) {
            case _0x1940a7:
              _0x494141 = "#786810";
              break;
            case _0x5dcee3:
              _0x494141 = "#CED0D0";
              break;
            default:
            case _0xf851ac:
              _0x494141 = "#45D157";
              break;
            case _0x75a7e2:
              _0x494141 = "#9b6f31";
              break;
          }
          (_0x587de3["fillStyle"] = _0x494141),
            (_0x587de3["globalAlpha"] *= 0.93),
            _0x587de3["beginPath"](),
            _0x587de3["arc"](
              -this["rad"] * 0.5,
              -this["rad"] * 0.5 + 0xa * this["rPer"],
              Math["max"](0x0, this["rad"] * 0.65 + _0x543308),
              0x0,
              0x2 * Math["PI"]
            ),
            _0x587de3["fill"](),
            _0x587de3["beginPath"](),
            _0x587de3["arc"](
              this["rad"] * 0.5,
              -this["rad"] * 0.5 - 0xa * this["rPer"],
              Math["max"](0x0, this["rad"] * 0.73 - _0x543308),
              0x0,
              0x2 * Math["PI"]
            ),
            _0x587de3["fill"](),
            _0x587de3["beginPath"](),
            _0x587de3["arc"](this["rad"] * 0.6, this["rad"] * 0.4, Math["max"](0x0, this["rad"] * 0.78 + _0x543308), 0x0, 0x2 * Math["PI"]),
            _0x587de3["fill"](),
            _0x587de3["beginPath"](),
            _0x587de3["arc"](
              -this["rad"] * 0.5,
              this["rad"] * 0.5,
              Math["max"](0x0, this["rad"] * 0.6 + this["rPer"] - _0x543308),
              0x0,
              0x2 * Math["PI"]
            ),
            _0x587de3["fill"](),
            _0x587de3["restore"]();
        }
        break;
      case _0x470b6e:
        {
          _0x587de3["save"]();
          if (!(_0x57ae6d == 0x2)) _0x587de3["rotate"](this["rPer"] * 0x2 * Math["PI"]);
          var _0x543308 = 0x0,
            _0x583fb6 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
            _0x31651f = 0x6,
            _0x24629a = 1.5;
          _0x543308 = _0x24629a * Math["sin"](((0x2 * Math["PI"]) / _0x31651f) * _0x583fb6);
          var _0x2c5db5 = 0x4;
          (_0x587de3["fillStyle"] = "#604729"),
            _0x587de3["beginPath"](),
            _0x587de3["arc"](0x0, 0x0, this["rad"], 0x0, Math["PI"] * 0x2),
            _0x587de3["fill"](),
            !(_0x57ae6d == 0x2) &&
              ((_0x587de3["fillStyle"] = "#8A681B"),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, this["rad"] - _0x2c5db5 + _0x543308), 0x0, Math["PI"] * 0x2),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                this["rad"] * 0.45,
                -this["rad"] * 0.45 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.5 + _0x543308),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                this["rad"] * 0.5,
                this["rad"] * 0.5 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.4 + _0x543308),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                -this["rad"] * 0.55 * 0.707,
                +this["rad"] * 0.55 * 0.707 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.5 + _0x543308),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                -this["rad"] * 0.75,
                -this["rad"] * 0.35 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.3 + _0x543308),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](this["rad"] + 0xa * this["rPer"], 0x32 * this["rPer"], 0x8, 0x0, 0x2 * Math["PI"]),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](this["rad"] - 0x14 * this["rPer"], 0x32 * this["rPer"], 0xa, 0x0, 0x2 * Math["PI"]),
              _0x587de3["fill"](),
              _0x587de3["beginPath"]()),
            _0x587de3["restore"]();
        }
        break;
      case _0x1727ca:
        {
          _0x587de3["save"]();
          if (!(_0x57ae6d == 0x2)) _0x587de3["rotate"](this["rPer"] * 0x2 * Math["PI"]);
          var _0x543308 = 0x0,
            _0x583fb6 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
            _0x31651f = 0x6,
            _0x24629a = 1.5;
          _0x543308 = _0x24629a * Math["sin"](((0x2 * Math["PI"]) / _0x31651f) * _0x583fb6);
          var _0x2c5db5 = 0x4;
          (_0x587de3["fillStyle"] = "#605649"),
            _0x587de3["beginPath"](),
            _0x587de3["arc"](0x0, 0x0, this["rad"], 0x0, Math["PI"] * 0x2),
            _0x587de3["fill"](),
            !(_0x57ae6d == 0x2) &&
              ((_0x587de3["fillStyle"] = "#5e4f36"),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, this["rad"] - _0x2c5db5 + _0x543308), 0x0, Math["PI"] * 0x2),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                this["rad"] * 0.45,
                -this["rad"] * 0.45 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.5 + _0x543308),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                this["rad"] * 0.5,
                this["rad"] * 0.5 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.4 + _0x543308),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                -this["rad"] * 0.55 * 0.707,
                +this["rad"] * 0.55 * 0.707 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.5 + _0x543308),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                -this["rad"] * 0.75,
                -this["rad"] * 0.35 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.3 + _0x543308),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](this["rad"] + 0xa * this["rPer"], 0x32 * this["rPer"], 0x8, 0x0, 0x2 * Math["PI"]),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](this["rad"] - 0x14 * this["rPer"], 0x32 * this["rPer"], 0xa, 0x0, 0x2 * Math["PI"]),
              _0x587de3["fill"](),
              _0x587de3["beginPath"]()),
            _0x587de3["restore"]();
        }
        break;
      case _0xfa0640:
        break;
      case _0x5c5573:
      case _0xe97342:
      case _0x4c4517:
      case _0x33e1fe:
        break;
      case _0x393517:
      case _0x24b846:
        var _0x583fb6 = (_0x168a54 - this["spawnTime"]) / 0x3e8;
        _0x587de3["save"](), _0x587de3["rotate"](this["angle"] + _0x3d960f(0xb4)), (_0x587de3["globalAlpha"] = 0.1 + this["cloudOpacity"]);
        var _0x390291 = this["getSkinImageObj"]("img/disasters/cloud.png");
        if (_0x390291) {
          var _0x2902c4 = this["rad"] * 0x2;
          _0x587de3["drawImage"](_0x390291, -_0x2902c4, -_0x2902c4, 0x2 * _0x2902c4, 0x2 * _0x2902c4);
        }
        var _0x543308 = 0x0,
          _0x31651f = 0x6,
          _0x24629a = 0xf;
        (_0x543308 = _0x24629a * Math["sin"](((0x2 * Math["PI"]) / _0x31651f) * _0x583fb6)), (_0x587de3["globalAlpha"] = 0.1);
        var _0x390291 = this["getSkinImageObj"]("img/disasters/cloud1.png");
        if (_0x390291) {
          var _0x2902c4 = this["rad"] * 0x2;
          (_0x2902c4 = Math["max"](0x0, _0x2902c4 - 0x5 + _0x543308)),
            _0x587de3["drawImage"](_0x390291, -_0x2902c4, -_0x2902c4, 0x2 * _0x2902c4, 0x2 * _0x2902c4);
        }
        _0x587de3["restore"]();
        break;
      case _0x5e92c5:
        {
          _0x587de3["save"]();
          if (!(_0x57ae6d == 0x2)) _0x587de3["rotate"](this["rPer"] * 0x2 * Math["PI"]);
          var _0x543308 = 1.5,
            _0x5df1cf = _0x38b128("volcano", this["spawnTime"]);
          _0x5df1cf !== undefined && _0x5df1cf != null && (this["theFrame"] = _0x5df1cf);
          _0x543308 = this["theFrame"];
          var _0x2c5db5 = 0x4;
          (_0x587de3["fillStyle"] = "#8B7833"),
            _0x587de3["beginPath"](),
            _0x587de3["arc"](0x0, 0x0, this["rad"], 0x0, Math["PI"] * 0x2),
            _0x587de3["fill"](),
            !(_0x57ae6d == 0x2) &&
              ((_0x587de3["fillStyle"] = "#98803A"),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, this["rad"] - _0x2c5db5 + _0x543308), 0x0, Math["PI"] * 0x2),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                this["rad"] * 0.45,
                -this["rad"] * 0.45 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.5 + _0x543308),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                this["rad"] * 0.5,
                this["rad"] * 0.5 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.4 + _0x543308),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                -this["rad"] * 0.55 * 0.707,
                +this["rad"] * 0.55 * 0.707 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.5 + _0x543308),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                -this["rad"] * 0.75,
                -this["rad"] * 0.35 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.3 + _0x543308),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              this["rad"] > 0x32 &&
                (_0x587de3["beginPath"](),
                _0x587de3["arc"](this["rad"] + 0xa * this["rPer"], 0x32 * this["rPer"], 0x8, 0x0, 0x2 * Math["PI"]),
                _0x587de3["fill"](),
                _0x587de3["beginPath"](),
                _0x587de3["arc"](this["rad"] - 0x14 * this["rPer"], 0x32 * this["rPer"], 0xa, 0xa, 0x0, 0x2 * Math["PI"]),
                _0x587de3["fill"]())),
            _0x587de3["restore"]();
        }
        break;
      case _0x5a5628:
        {
          _0x587de3["save"]();
          if (!(_0x57ae6d == 0x2)) _0x587de3["rotate"](this["rPer"] * 0x2 * Math["PI"]);
          var _0x543308 = 0x0,
            _0x583fb6 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
            _0x31651f = 0x6,
            _0x24629a = 1.5;
          _0x543308 = _0x24629a * Math["sin"](((0x2 * Math["PI"]) / _0x31651f) * _0x583fb6);
          var _0x2c5db5 = 0x4;
          (_0x587de3["fillStyle"] = "#8CC3C7"),
            _0x587de3["beginPath"](),
            _0x587de3["arc"](0x0, 0x0, this["rad"], 0x0, Math["PI"] * 0x2),
            _0x587de3["fill"](),
            !(_0x57ae6d == 0x2) &&
              ((_0x587de3["fillStyle"] = "#9DDADE"),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, this["rad"] - _0x2c5db5 + _0x543308), 0x0, Math["PI"] * 0x2),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                this["rad"] * 0.45,
                -this["rad"] * 0.45 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.5 + _0x543308),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                this["rad"] * 0.5,
                this["rad"] * 0.5 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.4 + _0x543308),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                -this["rad"] * 0.55 * 0.707,
                +this["rad"] * 0.55 * 0.707 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.5 + _0x543308),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                -this["rad"] * 0.75,
                -this["rad"] * 0.35 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.3 + _0x543308),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](this["rad"] + 0xa * this["rPer"], 0x32 * this["rPer"], this["specType"] == 0x0 ? 0x8 : 0x4, 0x0, 0x2 * Math["PI"]),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](this["rad"] - 0x14 * this["rPer"], 0x32 * this["rPer"], 0xa, 0x0, 0x2 * Math["PI"]),
              _0x587de3["fill"](),
              _0x587de3["beginPath"]()),
            _0x587de3["restore"]();
        }
        break;
      case _0xf2c340:
        {
          _0x587de3["save"]();
          if (!(_0x57ae6d == 0x2)) _0x587de3["rotate"](this["rPer"] * 0x2 * Math["PI"]);
          var _0x543308 = 0x0;
          if (!_0x34fedb && !(_0x57ae6d == 0x2)) {
            var _0x583fb6 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
              _0x31651f = 0x4,
              _0x24629a = 5.5;
            _0x543308 = _0x24629a * Math["sin"](((0x2 * Math["PI"]) / _0x31651f) * _0x583fb6);
          }
          var _0x2c5db5 = 0x4;
          (_0x587de3["fillStyle"] = _0x3febc7),
            _0x587de3["beginPath"](),
            _0x587de3["arc"](0x0, 0x0, this["rad"], 0x0, Math["PI"] * 0x2),
            _0x587de3["fill"]();
          if (this["curBiome"] == _0x5dcee3) _0x587de3["fillStyle"] = "#8da0d6";
          else _0x587de3["fillStyle"] = _0x2634c2;
          _0x587de3["beginPath"](),
            _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, this["rad"] - _0x2c5db5 + _0x543308), 0x0, Math["PI"] * 0x2),
            _0x587de3["fill"](),
            !(_0x57ae6d == 0x2) &&
              (_0x587de3["beginPath"](),
              _0x587de3["arc"](
                this["rad"] * 0.45,
                -this["rad"] * 0.45 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.5 + _0x543308),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                this["rad"] * 0.5,
                this["rad"] * 0.5 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.4 + _0x543308),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                -this["rad"] * 0.55 * 0.707,
                +this["rad"] * 0.55 * 0.707 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.5 + _0x543308),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                -this["rad"] * 0.75,
                -this["rad"] * 0.35 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.3 + _0x543308),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](this["rad"] + 0xa * this["rPer"], 0x32 * this["rPer"], this["specType"] == 0x0 ? 0x8 : 0x4, 0x0, 0x2 * Math["PI"]),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](this["rad"] - 0x14 * this["rPer"], 0x32 * this["rPer"], 0xa, 0x0, 0x2 * Math["PI"]),
              _0x587de3["fill"]()),
            _0x587de3["restore"]();
        }
        break;
      case _0x4d4712:
        {
          _0x587de3["save"]();
          if (!(_0x57ae6d == 0x2)) _0x587de3["rotate"](this["rPer"] * 0x2 * Math["PI"]);
          var _0x543308 = 0x0;
          if (!_0x34fedb && !(_0x57ae6d == 0x2)) {
            var _0x583fb6 = (_0x168a54 - _0x4b8b4c) / 0x3e8,
              _0x31651f = 0x5,
              _0x24629a = 5.5;
            _0x543308 = _0x24629a * Math["sin"](((0x2 * Math["PI"]) / _0x31651f) * _0x583fb6);
          }
          var _0x2c5db5 = 0x4;
          if (_0x1e2f7f) {
          } else
            (_0x587de3["fillStyle"] = _0x1b83c0),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, this["rad"] - _0x2c5db5 + _0x543308), 0x0, Math["PI"] * 0x2),
              _0x587de3["fill"](),
              !(_0x57ae6d == 0x2) &&
                (_0x587de3["beginPath"](),
                _0x587de3["arc"](this["rad"] + 0xa * this["rPer"], 0x32 * this["rPer"], 0x8, 0x0, 0x2 * Math["PI"]),
                _0x587de3["fill"](),
                _0x587de3["beginPath"](),
                _0x587de3["arc"](this["rad"] - 0x14 * this["rPer"], 0x32 * this["rPer"], 0xa, 0x0, 0x2 * Math["PI"]),
                _0x587de3["fill"]());
          _0x587de3["restore"]();
        }
        break;
      case _0x9f9bdf:
        {
          var _0x172b7e = 0x0;
          if (!_0x34fedb && !(_0x57ae6d == 0x2)) {
            var _0x583fb6 = (_0x168a54 - _0x4b8b4c) / 0x3e8,
              _0x31651f = 0x5,
              _0x24629a = -8.5;
            _0x172b7e = _0x24629a * Math["sin"](((0x2 * Math["PI"]) / _0x31651f) * _0x583fb6);
          }
          var _0x3ca46f = 0xa,
            _0x26da2a = this["x"] > _0x2c6299 / 0x2 ? 0x1 : 0x0;
          if (_0x26da2a == 0x1) {
            (_0x587de3["fillStyle"] = _0x1b83c0),
              _0x587de3["fillRect"](
                -this["rectW"] / 0x2 + _0x172b7e,
                -this["rectH"] / 0x2 + _0x172b7e + _0x3ca46f,
                this["rectW"] - _0x172b7e,
                this["rectH"] - _0x172b7e - _0x3ca46f
              ),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](-this["rectW"] / 0x2 + 0x32, -this["rectH"] / 0x2 + 0x32, 0x46 - _0x172b7e, 0x0, 0x2 * Math["PI"]),
              _0x587de3["fill"]();
            var _0x263388 = 0x23;
            _0x57deb3(
              -this["rectW"] / 0x2 + _0x263388,
              -this["rectH"] / 0x2 + _0x263388,
              this["rectW"] / 0x2 - _0x263388,
              this["rectH"] / 0x2 - _0x263388,
              this["x"],
              this["y"]
            );
          } else {
            (_0x587de3["fillStyle"] = _0x1b83c0),
              (_0x172b7e *= -0x1),
              _0x587de3["fillRect"](
                -this["rectW"] / 0x2,
                -this["rectH"] / 0x2 - _0x172b7e + _0x3ca46f,
                this["rectW"] + _0x172b7e,
                this["rectH"] + _0x172b7e - _0x3ca46f
              );
            var _0x263388 = 0x19;
            _0x57deb3(
              -this["rectW"] / 0x2 + _0x263388,
              -this["rectH"] / 0x2 + _0x263388,
              this["rectW"] / 0x2 - _0x263388,
              this["rectH"] / 0x2 - _0x263388,
              this["x"],
              this["y"]
            );
          }
        }
        break;
      case _0x194937:
        {
          _0x587de3["fillStyle"] = _0x3febc7;
          var _0x237e92 = -this["rectW"] / 0x2,
            _0x279b0c = this["rectW"] / 0x2,
            _0x3f2ff1 = -this["rectH"] / 0x2,
            _0x24f439 = this["rectH"] / 0x2;
          _0x587de3["beginPath"](), _0x587de3["moveTo"](_0x237e92, _0x3f2ff1);
          var _0x45d8e2 = 0x1e,
            _0xcab9c1 = [-0xf, 0xa, -0xa, 0xc, 0x0, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
            _0x4451f6 = 0x2d,
            _0xfb41a = 0x0,
            _0x3b54a2 = _0x2c6299 - this["x"],
            _0x16a119 = 0x0 - this["x"],
            _0x3a6b06 = _0x27ef2a - this["y"],
            _0x47dee4 = 0x0 - this["y"],
            _0x212c8e,
            _0x228566 = _0x237e92 - _0x45d8e2;
          for (_0x212c8e = _0x3f2ff1; _0x212c8e < _0x24f439; _0x212c8e += _0x4451f6) {
            _0x587de3["lineTo"](Math["min"](_0x3b54a2, Math["max"](_0x16a119, _0x228566 + _0xcab9c1[_0xfb41a])), _0x212c8e),
              (_0xfb41a = (_0xfb41a + 0x1) % _0xcab9c1["length"]);
          }
          _0x587de3["lineTo"](_0x237e92, _0x24f439), (_0x212c8e = _0x24f439 + _0x45d8e2);
          for (_0x228566 = _0x237e92; _0x228566 < _0x279b0c; _0x228566 += _0x4451f6) {
            _0x587de3["lineTo"](_0x228566, Math["min"](_0x3a6b06, Math["max"](_0x47dee4, _0x212c8e + _0xcab9c1[_0xfb41a]))),
              (_0xfb41a = (_0xfb41a + 0x1) % _0xcab9c1["length"]);
          }
          _0x587de3["lineTo"](_0x279b0c, _0x24f439), (_0x228566 = _0x279b0c + _0x45d8e2);
          for (_0x212c8e = _0x24f439; _0x212c8e > _0x3f2ff1; _0x212c8e -= _0x4451f6) {
            _0x587de3["lineTo"](Math["min"](_0x3b54a2, Math["max"](_0x16a119, _0x228566 + _0xcab9c1[_0xfb41a])), _0x212c8e),
              (_0xfb41a = (_0xfb41a + 0x1) % _0xcab9c1["length"]);
          }
          _0x587de3["lineTo"](_0x279b0c, _0x3f2ff1), (_0x212c8e = _0x3f2ff1 - _0x45d8e2);
          for (_0x228566 = _0x279b0c; _0x228566 > _0x237e92; _0x228566 -= _0x4451f6) {
            _0x587de3["lineTo"](_0x228566, Math["min"](_0x3a6b06, Math["max"](_0x47dee4, _0x212c8e + _0xcab9c1[_0xfb41a]))),
              (_0xfb41a = (_0xfb41a + 0x1) % _0xcab9c1["length"]);
          }
          _0x587de3["closePath"](), _0x587de3["fill"]();
        }
        break;
      case _0x4f7e71:
        {
          var _0x15e757 = _0x587de3["globalAlpha"];
          (_0x587de3["fillStyle"] = _0x5f5cfd), _0x587de3["fillRect"](-this["rectW"] / 0x2, -this["rectH"] / 0x2, this["rectW"], this["rectH"]);
          var _0x263388 = 0x23;
          _0x57deb3(
            -this["rectW"] / 0x2 + _0x263388,
            -this["rectH"] / 0x2 + _0x263388,
            this["rectW"] / 0x2 - _0x263388,
            this["rectH"] / 0x2 - _0x263388,
            this["x"],
            this["y"]
          );
          var _0x21d9e8 = 0xf;
          {
            _0x587de3["fillStyle"] = _0x5f5cfd;
            var _0x237e92 = -this["rectW"] / 0x2,
              _0x279b0c = this["rectW"] / 0x2,
              _0x3f2ff1 = -this["rectH"] / 0x2 + 0x3,
              _0x24f439 = -this["rectH"] / 0x2 - _0x21d9e8;
            _0x587de3["beginPath"](), _0x587de3["moveTo"](_0x237e92, _0x3f2ff1);
            var _0x45d8e2 = 0x0,
              _0xcab9c1 = [-0xf, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
              _0x4451f6 = 0x3c,
              _0xfb41a = 0x0,
              _0x3b54a2 = _0x2c6299 - this["x"],
              _0x16a119 = 0x0 - this["x"],
              _0x3a6b06 = _0x27ef2a - this["y"],
              _0x47dee4 = 0x0 - this["y"],
              _0x212c8e,
              _0x228566 = _0x237e92 - _0x45d8e2;
            _0x587de3["lineTo"](_0x237e92, _0x24f439), (_0x212c8e = _0x24f439 + _0x45d8e2);
            for (_0x228566 = _0x237e92; _0x228566 < _0x279b0c; _0x228566 += _0x4451f6) {
              _0x587de3["lineTo"](_0x228566, Math["min"](_0x3a6b06, Math["max"](_0x47dee4, _0x212c8e + _0xcab9c1[_0xfb41a]))),
                (_0xfb41a = (_0xfb41a + 0x1) % _0xcab9c1["length"]);
            }
            _0x587de3["lineTo"](_0x279b0c, _0x24f439), _0x587de3["lineTo"](_0x279b0c, _0x3f2ff1), _0x587de3["closePath"](), _0x587de3["fill"]();
          }
        }
        break;
      case _0xe065e3:
        {
          var _0x15e757 = _0x587de3["globalAlpha"];
          (_0x587de3["fillStyle"] = "#ececec"), _0x587de3["fillRect"](-this["rectW"] / 0x2, -this["rectH"] / 0x2, this["rectW"], this["rectH"]);
          var _0x237e92 = -this["rectW"] / 0x2,
            _0x279b0c = this["rectW"] / 0x2,
            _0x3f2ff1 = this["rectH"] / 0x2 - 0x14,
            _0x24f439 = this["rectH"] / 0x2;
          (snowLandWidth = this["rectW"]), (snowLandHeight = this["rectH"]), _0x587de3["beginPath"](), _0x587de3["moveTo"](_0x237e92, _0x3f2ff1);
          var _0x45d8e2 = 0x14,
            _0xcab9c1 = [-0xf, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
            _0x4451f6 = 0x3c,
            _0xfb41a = 0x0,
            _0x3b54a2 = _0x2c6299 - this["x"],
            _0x16a119 = 0x0 - this["x"],
            _0x3a6b06 = _0x27ef2a - this["y"],
            _0x47dee4 = 0x0 - this["y"],
            _0x212c8e,
            _0x228566 = _0x237e92 - _0x45d8e2;
          _0x587de3["lineTo"](_0x237e92, _0x24f439), (_0x212c8e = _0x24f439 + _0x45d8e2);
          for (_0x228566 = _0x237e92; _0x228566 < _0x279b0c; _0x228566 += _0x4451f6) {
            _0x587de3["lineTo"](_0x228566, Math["min"](_0x3a6b06, Math["max"](_0x47dee4, _0x212c8e + _0xcab9c1[_0xfb41a]))),
              (_0xfb41a = (_0xfb41a + 0x1) % _0xcab9c1["length"]);
          }
          _0x587de3["lineTo"](_0x279b0c, _0x24f439), _0x587de3["lineTo"](_0x279b0c, _0x3f2ff1), _0x587de3["closePath"](), _0x587de3["fill"]();
          var _0x263388 = 0x14;
          _0x57deb3(
            -this["rectW"] / 0x2 + _0x263388,
            -this["rectH"] / 0x2 + _0x263388,
            this["rectW"] / 0x2 - _0x263388,
            this["rectH"] / 0x2 - _0x263388,
            this["x"],
            this["y"]
          );
        }
        break;
      case _0x9c4ccf:
        {
          var _0x15e757 = _0x587de3["globalAlpha"];
          (_0x587de3["fillStyle"] = _0x2634c2), _0x587de3["fillRect"](-this["rectW"] / 0x2, -this["rectH"] / 0x2, this["rectW"], this["rectH"]);
          var _0x21d9e8 = 0xf;
          {
            _0x587de3["fillStyle"] = _0x2634c2;
            var _0x237e92 = -this["rectW"] / 0x2,
              _0x279b0c = this["rectW"] / 0x2,
              _0x3f2ff1 = -this["rectH"] / 0x2 + 0x3,
              _0x24f439 = -this["rectH"] / 0x2 - _0x21d9e8;
            _0x587de3["beginPath"](), _0x587de3["moveTo"](_0x237e92, _0x3f2ff1);
            var _0x45d8e2 = 0x0,
              _0xcab9c1 = [-0xf, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
              _0x4451f6 = 0x3c,
              _0xfb41a = 0x0,
              _0x3b54a2 = _0x2c6299 - this["x"],
              _0x16a119 = 0x0 - this["x"],
              _0x3a6b06 = _0x27ef2a - this["y"],
              _0x47dee4 = 0x0 - this["y"],
              _0x212c8e,
              _0x228566 = _0x237e92 - _0x45d8e2;
            _0x587de3["lineTo"](_0x237e92, _0x24f439), (_0x212c8e = _0x24f439 + _0x45d8e2);
            for (_0x228566 = _0x237e92; _0x228566 < _0x279b0c; _0x228566 += _0x4451f6) {
              _0x587de3["lineTo"](_0x228566, Math["min"](_0x3a6b06, Math["max"](_0x47dee4, _0x212c8e + _0xcab9c1[_0xfb41a]))),
                (_0xfb41a = (_0xfb41a + 0x1) % _0xcab9c1["length"]);
            }
            _0x587de3["lineTo"](_0x279b0c, _0x24f439), _0x587de3["lineTo"](_0x279b0c, _0x3f2ff1), _0x587de3["closePath"](), _0x587de3["fill"]();
          }
          {
            _0x587de3["fillStyle"] = _0x2634c2;
            var _0x237e92 = -this["rectW"] / 0x2,
              _0x279b0c = this["rectW"] / 0x2,
              _0x3f2ff1 = this["rectH"] / 0x2 - 0x3,
              _0x24f439 = this["rectH"] / 0x2 + _0x21d9e8;
            _0x587de3["beginPath"](), _0x587de3["moveTo"](_0x237e92, _0x3f2ff1);
            var _0x45d8e2 = 0x0,
              _0xcab9c1 = [-0xf, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
              _0x4451f6 = 0x3c,
              _0xfb41a = 0x0,
              _0x3b54a2 = _0x2c6299 - this["x"],
              _0x16a119 = 0x0 - this["x"],
              _0x3a6b06 = _0x27ef2a - this["y"],
              _0x47dee4 = 0x0 - this["y"],
              _0x212c8e,
              _0x228566 = _0x237e92 - _0x45d8e2;
            _0x587de3["lineTo"](_0x237e92, _0x24f439), (_0x212c8e = _0x24f439 + _0x45d8e2);
            for (_0x228566 = _0x237e92; _0x228566 < _0x279b0c; _0x228566 += _0x4451f6) {
              _0x587de3["lineTo"](_0x228566, Math["min"](_0x3a6b06, Math["max"](_0x47dee4, _0x212c8e + _0xcab9c1[_0xfb41a]))),
                (_0xfb41a = (_0xfb41a + 0x1) % _0xcab9c1["length"]);
            }
            _0x587de3["lineTo"](_0x279b0c, _0x24f439), _0x587de3["lineTo"](_0x279b0c, _0x3f2ff1), _0x587de3["closePath"](), _0x587de3["fill"]();
          }
          var _0x263388 = 0x14,
            _0x390291 = this["getSkinImageObj"]("img/riverCurrent" + this["riverSpecT"] + ".png");
          if (_0x390291) {
            var _0x5cdc17 = -this["rectW"] / 0x2,
              _0x2b849c = 0x64,
              _0x2b5fd3 = 0x78;
            for (i = 0x0; i < 0x28; i++) {
              var _0x2aef73 = this["riverFlowSpeedX"] * (_0x2b849c / _0x2b5fd3) * 0x3e8,
                _0x203f69 = ((_0x168a54 - this["spawnTime"]) % _0x2aef73) / _0x2aef73,
                _0x5ae3e4 = _0x2b849c,
                _0x10b27e = _0x5cdc17 + _0x5ae3e4 * _0x203f69;
              _0x587de3["drawImage"](_0x390291, _0x10b27e, -this["rectH"] / 0x2, _0x2b849c, this["rectH"]), (_0x5cdc17 += _0x2b849c);
            }
          }
        }
        break;
      case _0x4c28d1:
        {
          (_0x587de3["fillStyle"] = _0x4a6b40), _0x587de3["fillRect"](-this["rectW"] / 0x2, -this["rectH"] / 0x2, this["rectW"], this["rectH"]);
          var _0x263388 = 0x2d;
          _0x57deb3(
            -this["rectW"] / 0x2 + _0x263388,
            -this["rectH"] / 0x2 + _0x263388,
            this["rectW"] / 0x2 - _0x263388,
            this["rectH"] / 0x2 - _0x263388,
            this["x"],
            this["y"]
          );
        }
        break;
      case _0x2b2ead:
        {
          var _0x4c0c16 = this["curBiome"] == _0x75a7e2 ? _0x25193e : _0x260cd7;
          if (_0x1e2f7f) _0x440ef0(0x0, 0x0, this["rad"], this["getOutlineColor"]());
          else _0x440ef0(0x0, 0x0, this["rad"] - 1.5, _0x4c0c16);
        }
        break;
      case _0xb09376:
        {
          _0x1e2f7f
            ? ((_0x587de3["fillStyle"] = _0x3febc7),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, this["rad"]), 0x0, Math["PI"] * 0x2),
              _0x587de3["fill"]())
            : ((_0x587de3["fillStyle"] = "#E4D04C"),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](-0x5 + this["rPer"] * 0xa, -0x5 + this["rPer"] * 0xa, this["rad"] * 0.8, 0x0, 0x2 * Math["PI"]),
              _0x587de3["fill"]());
        }
        break;
      case _0x595f2d:
        var _0x543308 = 0x0,
          _0x583fb6 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
          _0x1a2f0f = _0x120bbb(_0x583fb6, 0x1, 0x5, 0x2),
          _0x926cfe = _0x120bbb(_0x583fb6, 0x1, 0.2, 0x2);
        _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0.5), _0x440ef0(0x0, 0x0, this["rad"], _0x9d1ce2);
        var _0x4c3eb1 = -(-0.2 + _0x1a2f0f) * _0x3d960f(0x5a);
        _0x587de3["save"](),
          _0x587de3["scale"](0x1, 0x1 + _0x926cfe),
          (_0x587de3["globalAlpha"] = 0.3),
          _0x587de3["rotate"](_0x4c3eb1),
          _0x440ef0(0x0, 0x0, this["rad"] - _0x1a2f0f, "#de9d23"),
          _0x587de3["restore"](),
          _0x587de3["save"](),
          _0x587de3["scale"](0x1 + _0x926cfe, 0x1),
          (_0x587de3["globalAlpha"] = 0.1),
          _0x587de3["rotate"](_0x4c3eb1),
          _0x440ef0(0x0, 0x0, this["rad"] * 0.9 - _0x1a2f0f, "yellow"),
          _0x587de3["restore"]();
        this["specType"] == 0x1 && ((_0x587de3["globalAlpha"] = 0.5), _0x440ef0(0x0, 0x0, this["rad"], "white"));
        _0x587de3["restore"]();
        break;
      case _0xa9fc9a:
        var _0x543308 = 0x0,
          _0x583fb6 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
          _0x1a2f0f = _0x120bbb(_0x583fb6, 0x1, 0x5, 0x2),
          _0x926cfe = _0x120bbb(_0x583fb6, 0x1, 0.2, 0x2);
        (_0x587de3["globalAlpha"] = 0.5), _0x440ef0(0x0, 0x0, this["rad"], _0x13663c);
        var _0x4c3eb1 = -(-0.2 + _0x1a2f0f) * _0x2f9e35;
        _0x587de3["save"](),
          _0x587de3["scale"](0x1, 0x1 + _0x926cfe),
          (_0x587de3["globalAlpha"] = 0.3),
          _0x587de3["rotate"](_0x4c3eb1),
          _0x440ef0(0x0, 0x0, this["rad"] - _0x1a2f0f, "#2CAAC4"),
          _0x587de3["restore"](),
          _0x587de3["save"](),
          _0x587de3["scale"](0x1 + _0x926cfe, 0x1),
          (_0x587de3["globalAlpha"] = 0.1),
          _0x587de3["rotate"](_0x4c3eb1),
          _0x440ef0(0x0, 0x0, this["rad"] * 0.9 - _0x1a2f0f, "white"),
          _0x587de3["restore"]();
        break;
      case _0x4a3fde:
        {
          var _0x7af4a8 = this["curBiome"] == _0x5dcee3 ? "#8fa4e0" : _0x13663c;
          if (this["specType"] == 0x1 && _0x4c4138 == _0x3cc7e2) {
            _0x587de3["save"](), _0x440ef0(0x0, 0x0, this["rad"], _0xa3f8d9), _0x587de3["restore"](), _0x587de3["save"]();
            var _0x2c5db5 = 1.5;
            _0x440ef0(0x0, 0x0, Math["max"](0x0, this["rad"] - _0x2c5db5), _0x7af4a8), _0x587de3["restore"]();
          } else this["drawOutlinedCircle"]("", _0x7af4a8);
        }
        break;
      case _0x282e37:
      case _0x44a5bd:
        {
          var _0x390291 = this["getSkinImageObj"]("img/snowball.png");
          if (_0x390291) {
            var _0x2902c4 = this["rad"];
            _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
              _0x587de3["drawImage"](_0x390291, -_0x2902c4, -_0x2902c4, 0x2 * _0x2902c4, 0x2 * _0x2902c4);
          } else this["drawOutlinedCircle"]("", "white");
        }
        break;
      case _0x2e4bf1:
        {
        }
        break;
      case _0x9bcb18:
        {
          _0x587de3["save"](),
            _0x440ef0(0x0, 0x0, this["rad"], !this["isEdibleOutlined"]() ? _0x7a849(this["curBiome"]) : _0xab8999),
            _0x440ef0(0x0, 0x0, Math["max"](0x0, this["rad"] - 0x2), _0x13663c),
            _0x587de3["restore"](),
            _0x587de3["save"]();
          var _0x31651f = 1.2,
            _0x1cf4b5 = 0.3,
            _0x495285 = 0.7,
            _0x4da7fc = 0.5 * (_0x495285 - _0x1cf4b5);
          (_0x587de3["globalAlpha"] *=
            _0x1cf4b5 + _0x4da7fc + _0x4da7fc * Math["sin"](((0x2 * Math["PI"]) / _0x31651f) * ((_0x168a54 - this["spawnTime"]) / 0x3e8))),
            (_0x587de3["globalAlpha"] *= this["effA_poison"]);
          var _0x4424c1 = 2.6;
          _0x440ef0(0x0, 0x0, this["rad"] + _0x4424c1, "#7FF600"), _0x587de3["restore"]();
        }
        break;
      case _0x27c08c:
        {
          _0x587de3["save"]();
          var _0xfd0aa9 = this["speciesType"];
          if (this["speciesType"] == 0xc8) _0xfd0aa9 = _0xfd0aa9 + "/" + this["speciesSubType"];
          var _0x19fcb2 = "skins/volcano/phoenix/" + _0xfd0aa9 + "/firetornado.png",
            _0x2b2fff = this["speciesType"] === 0x1 || this["speciesType"] === 0x2 || this["speciesType"] === 0xc8 ? 0x1 : this["mopeSeasonID"],
            _0x4c6320 = this["getSkinImageObjForSeason"](_0x19fcb2, _0x2b2fff);
          if (_0x4c6320) {
            var _0x2902c4 = this["rad"],
              _0x58d6f5 = 0x3c / 0x3c,
              _0xdc7c59 = 0x3e8 / _0x58d6f5,
              _0x203f69 = ((_0x168a54 - this["spawnTime"]) % _0xdc7c59) / _0xdc7c59,
              _0x426870 = _0x203f69 * 0x2 * Math["PI"],
              _0x58d6f5 = 0x1e / 0x3c,
              _0xdc7c59 = 0x3e8 / _0x58d6f5,
              _0x203f69 = ((_0x168a54 - this["spawnTime"]) % _0xdc7c59) / _0xdc7c59,
              _0x5f4c69 = _0x203f69 * 0x2 * Math["PI"];
            _0x587de3["save"](), _0x587de3["rotate"](_0x426870);
            var _0x2d5e04 = _0x587de3["globalAlpha"];
            _0x587de3["globalAlpha"] = 0x1 * _0x2d5e04;
            var _0x583fb6 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
              _0x31651f = 2.2,
              _0x48d397 = 6.5 * Math["cos"](((0x2 * Math["PI"]) / _0x31651f) * _0x583fb6),
              _0x4e0f8c = 6.5 * Math["sin"](((0x2 * Math["PI"]) / _0x31651f) * _0x583fb6);
            (_0x587de3["globalAlpha"] = 0x1),
              _0x587de3["drawImage"](_0x4c6320, -_0x2902c4 - _0x48d397 / 2.2, -_0x2902c4, 0x2 * _0x2902c4, 0x2 * _0x2902c4),
              _0x587de3["restore"](),
              _0x587de3["save"](),
              _0x587de3["rotate"](_0x5f4c69),
              _0x587de3["drawImage"](_0x4c6320, -_0x2902c4 - _0x48d397 / 2.2, -_0x2902c4, 0x2 * _0x2902c4, 0x2 * _0x2902c4),
              _0x587de3["restore"]();
          }
          _0x587de3["restore"]();
        }
        break;
      case _0x4b3c4f:
        {
          var _0x31651f = 0x1,
            _0x1cf4b5 = 0.15,
            _0x495285 = 0.8,
            _0x4da7fc = 0.5 * (_0x495285 - _0x1cf4b5),
            _0x33cdc4 = _0x1cf4b5 + _0x4da7fc + _0x4da7fc * Math["sin"](((0x2 * Math["PI"]) / _0x31651f) * (_0x168a54 / 0x3e8));
          _0x587de3["save"](),
            (_0x587de3["globalAlpha"] *= _0x33cdc4),
            _0x440ef0(0x0, 0x0, Math["max"](0x0, this["rad"]), "#F6EA65"),
            _0x587de3["restore"]();
          var _0x31651f = 0x1,
            _0x1cf4b5 = 0.85,
            _0x495285 = 0x1,
            _0x4da7fc = 0.5 * (_0x495285 - _0x1cf4b5),
            _0x369f63 = _0x1cf4b5 + _0x4da7fc + _0x4da7fc * Math["sin"](((0x2 * Math["PI"]) / _0x31651f) * (_0x168a54 / 0x3e8)),
            _0x51b96c = Math["trunc"](_0x168a54 / 0x12c) % 0x2,
            _0x2b2fff =
              this["animalType"] === 0xe &&
              (this["speciesType"] === 0x1 ||
                this["speciesType"] === 0x2 ||
                this["speciesType"] === 0x3 ||
                this["speciesType"] === 0x64 ||
                this["speciesType"] === 0xc8 ||
                this["speciesType"] === 0xc9 ||
                this["speciesType"] === 0xcc ||
                this["speciesType"] === 0x3e9 ||
                this["speciesType"] === 0x10f2c)
                ? 0x1
                : this["mopeSeasonID"],
            _0x390291 = this["getSkinImageObjForSeason"](_0x51b96c == 0x1 ? "img/fire.png" : "img/fire2.png", _0x2b2fff);
          if (_0x390291) {
            var _0x25fd6a = 0x0,
              _0x50be64 = this["rad"] * 0.3,
              _0x218f54 = (this["rad"] * 0x2 * (0x2 + _0x369f63 * 0x2)) / 0x3,
              _0x167259 = this["rad"] * 0x2 * _0x369f63,
              _0x93ce0d = 0.5,
              _0x2a3c6e = 0.95;
            _0x587de3["save"](),
              _0x390291 &&
                ((_0x587de3["globalAlpha"] *= this["onFireEffA"] * _0x369f63),
                _0x587de3["drawImage"](_0x390291, _0x25fd6a + _0x218f54 * -_0x93ce0d, _0x50be64 + _0x167259 * -_0x2a3c6e, _0x218f54, _0x167259)),
              _0x587de3["restore"]();
          }
        }
        break;
      case _0x3fb3b2:
        {
        }
        break;
      default:
        {
          if (this["isRectangle"])
            (_0x587de3["fillStyle"] = "black"),
              _0x587de3["fillRect"](-this["rectW"] / 0x2, -this["rectH"] / 0x2, this["rectW"], this["rectH"]),
              this["drawOutlinedCircle"]("(make this rect obj invisible on server?)", "black");
          else this["drawOutlinedCircle"]("(make this obj invisible on server?)", "black");
        }
        break;
    }
  }),
  (_0x307a43["prototype"]["beforeCustomDraw"] = function () {}),
  (_0x307a43["prototype"]["afterCustomDraw"] = function () {}),
  (_0x307a43["prototype"]["drawImage"] = function (_0x3b28f3, _0x5d6877, _0x4d033c, _0x11f666, _0x150e55, _0x320e5e) {
    if (_0x320e5e !== undefined) _0x587de3["rotate"](_0x320e5e);
    _0x587de3["drawImage"](_0x3b28f3, _0x5d6877, _0x4d033c, _0x11f666, _0x150e55);
  }),
  (_0x307a43["prototype"]["drawTranslate"] = function () {
    _0x587de3["translate"](this["x"], this["y"]);
  }),
  (_0x307a43["prototype"]["drawScaleEffect"] = function () {}),
  (_0x307a43["prototype"]["setSkinPath"] = function () {
    var _0x56ff0b = this["isEdibleOutlined"]() ? "e" : this["oType"];
    (_0x56ff0b = this["getBiomeSkin"](_0x56ff0b)),
      (_0x56ff0b = "gameobj/" + this["oType"] + this["getObjSpecies"]() + "/" + _0x56ff0b + ".png"),
      (this["objSkinPath"] = _0x56ff0b);
  }),
  (_0x307a43["prototype"]["draw"] = function (_0x727672) {
    this["moveUpdF"] = this["moveUpdate"]();
    if (this["objSkinPath"] == null) this["setSkinPath"]();
    this["beforeCustomDraw"](), _0x587de3["save"](), this["drawTranslate"](), this["drawScaleEffect"]();
    var _0x37e068 = this["getOutlineColor"](),
      _0xeb7d48 = 0x2;
    if (this["dead"]) _0x587de3["globalAlpha"] *= 0x1 - this["moveUpdF"];
    else _0x587de3["globalAlpha"] *= Math["min"](0x1, (_0x168a54 - this["spawnTime"]) / (_0x5a206b * 0x3e8));
    this["customDraw"](_0x727672), this["flag_hurt"] && this["onHurt"](), this["drawHealthBar"](), _0x587de3["restore"](), this["afterCustomDraw"]();
  }),
  (_0x307a43["prototype"]["onHurt"] = function () {
    (_0x587de3["fillStyle"] = "rgba(255,0,0,0.3)"),
      _0x587de3["beginPath"](),
      _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, this["rad"]), 0x0, Math["PI"] * 0x2),
      _0x587de3["fill"]();
  }),
  (_0x307a43["prototype"]["drawHealthBar"] = function () {
    _0x587de3["save"]();
    var _0x4f8146 = _0x168a54 < this["hpBarTimeoutT"] ? 0x1 : 0x0;
    this["hpBarA"] += (_0x4f8146 - this["hpBarA"]) * 0.04;
    if (this["hpBarA"] > 0.001) {
      this["hpPer"] += (this["hpPer_n"] - this["hpPer"]) * 0.1;
      var _0x574f69 = Math["max"](0x1, this["rad"] / 0x19),
        _0x482119 = 0x14 * _0x574f69,
        _0x5c7e7a = 0x5 * _0x574f69,
        _0x356631 = 0x0,
        _0x4425d4 = -this["rad"] - 0xa * _0x574f69;
      (_0x587de3["globalAlpha"] *= this["hpBarA"]),
        (_0x587de3["fillStyle"] = "rgba(0,0,0,0.35)"),
        _0x587de3["fillRect"](_0x356631 - _0x482119 / 0x2, _0x4425d4 - _0x5c7e7a / 0x2, _0x482119, _0x5c7e7a),
        (_0x587de3["fillStyle"] = "#16D729"),
        _0x587de3["fillRect"](_0x356631 - _0x482119 / 0x2, _0x4425d4 - _0x5c7e7a / 0x2, _0x482119 * (this["hpPer"] / 0x64), _0x5c7e7a);
    }
    _0x587de3["restore"](), this["drawInfectionBar"]();
  });
var _0xee711b = 0x5;
(_0x307a43["prototype"]["drawInfectionBar"] = function () {
  if (this["flag_underWater"]) return;
  var _0x44f8f9 = _0x168a54 < this["infectionBarTimeoutT"] ? 0x1 : 0x0;
  (this["infectionBarA"] += (_0x44f8f9 - this["infectionBarA"]) * 0.04),
    this["infectionBarA"] > 0.001 &&
      ((this["infectionPer"] += (this["infectionPer_n"] - this["infectionPer"]) * 0.1),
      this["drawBar"]("red", this["infectionBarA"], this["infectionPer"], 0x2, 6.5));
}),
  (_0x307a43["prototype"]["drawBar"] = function (_0x3d8c6f, _0x4dbf05, _0x56e652, _0x3f92be, _0x449ebd) {
    _0x587de3["save"]();
    var _0x3bbbb4 = Math["max"](0x1, this["rad"] / 0x19),
      _0x35ddb9 = 0x14 * _0x3bbbb4;
    barH = _0x3f92be * _0x3bbbb4;
    var _0x3b5a08 = 0x0,
      _0x327442 = -this["rad"] - _0x449ebd * _0x3bbbb4;
    (_0x587de3["globalAlpha"] = 0.3),
      (_0x587de3["fillStyle"] = "rgba(0,0,0,0.35)"),
      _0x587de3["fillRect"](_0x3b5a08 - _0x35ddb9 / 0x2, _0x327442 - barH / 0x2, _0x35ddb9, barH),
      (_0x587de3["globalAlpha"] = _0x4dbf05),
      (_0x587de3["fillStyle"] = _0x3d8c6f),
      _0x587de3["fillRect"](_0x3b5a08 - _0x35ddb9 / 0x2, _0x327442 - barH / 0x2, _0x35ddb9 * (_0x56e652 / 0x64), barH),
      _0x587de3["restore"]();
  }),
  (_0x307a43["prototype"]["drawChat"] = function () {
    if (this["chatLines"]["length"] < 0x1) return;
    _0x587de3["save"](),
      (_0x587de3["font"] = "10px Arial"),
      (_0x587de3["lineWidth"] = 0x1),
      (_0x587de3["textAlign"] = "center"),
      (_0x587de3["textBaseline"] = "middle");
    var _0x599c7e = this["hpBarA"] > 0.01 ? -0xa : 0x0,
      _0xc5a4ad = [];
    for (var _0x42e882 = this["chatLines"]["length"] - 0x1; _0x42e882 >= 0x0; _0x42e882--) {
      var _0x180447 = this["chatLines"][_0x42e882];
      if (!_0x29634e && _0x180447["chatTxt"]["indexOf"]("#koa:") > -0x1) continue;
      var _0x1813e0 = (this["chatLines"]["length"] - 0x1 - _0x42e882) * -0xd + _0x599c7e,
        _0x2855f4 = _0x168a54 > _0x180447["chatFadeT"] ? 0x0 : 0x1;
      (_0x180447["chatA"] += (_0x2855f4 - _0x180447["chatA"]) * 0.1), (_0x587de3["shadowOffsetX"] = 0x0), (_0x587de3["shadowOffsetY"] = 0x0);
      if (_0x180447["chatA"] < 0.02) {
        if (_0x2855f4 < 0.02) _0x180447["chatTxt"] = "";
        _0xc5a4ad["push"](_0x42e882);
        continue;
      }
      var _0x5165fb = _0x587de3["measureText"](_0x180447["chatTxt"])["width"],
        _0x50be32 = 0xa,
        _0x73c9bb = 0x1,
        _0x460e68 = 0x1;
      (_0x587de3["globalAlpha"] = 0.8 * _0x180447["chatA"]),
        (_0x587de3["fillStyle"] = _0x7a849(this["curBiome"])),
        _0x587de3["fillRect"](
          this["x"] - _0x73c9bb - _0x5165fb / 0x2,
          _0x1813e0 + this["y"] - this["rad"] - 0xa - _0x50be32 / 0x2 - _0x460e68,
          _0x5165fb + _0x73c9bb * 0x2,
          _0x50be32 + _0x460e68 * 0x2
        ),
        (_0x587de3["fillStyle"] = "#F1C34C"),
        !(_0x57ae6d == 0x2) && ((_0x587de3["shadowOffsetX"] = 0x1), (_0x587de3["shadowOffsetY"] = 0x1), (_0x587de3["shadowColor"] = "black")),
        (_0x587de3["globalAlpha"] = _0x180447["chatA"]),
        _0x587de3["fillText"](_0x180447["chatTxt"], this["x"], _0x1813e0 + this["y"] - this["rad"] - 0xa);
    }
    for (var _0x42e882 = 0x0; _0x42e882 < _0xc5a4ad["length"]; _0x42e882++) {
      this["chatLines"]["splice"](_0xc5a4ad[_0x42e882], 0x1);
    }
    _0x587de3["restore"]();
  }),
  (_0x307a43["prototype"]["getOutlineColor"] = function () {
    if (this["alwaysPlainOutline"]) return _0x53ed3f;
    if (this["isEdibleOutlined"]()) return _0xab8999;
    if (this["oType"] == _0x3fb3b2 && _0x55aa30[this["animalType"] - 0x1] > 0x0 && this["id"] != _0x204989) return _0x1fdd8a;
    var _0x3e5984 = this["curBiome"];
    if (this["flag_inWater"]) _0x3e5984 = _0x1940a7;
    else {
      if (this["flag_inLava"]) return "#c64a00";
    }
    return _0x7a849(_0x3e5984);
  }),
  (_0x307a43["prototype"]["isEdibleOutlined"] = function () {
    if (this["oType"] == _0x3fb3b2) return _0x5c622f[this["animalType"] - 0x1] > 0x0 && this["id"] != _0x204989;
    else return _0x2cf613[this["oType"] - 0x1] > 0x0;
  }),
  (_0x307a43["prototype"]["gotChat"] = function (_0x318e81) {
    if (this["chatLines"]) {
      this["chatLines"]["push"]({
        chatTxt: _0x318e81,
        chatFadeT: _0x168a54 + 0xfa0,
        chatA: 0x0,
      });
      if (this["chatLines"]["length"] > 0x5) this["chatLines"]["splice"](this["chatLines"]["length"] - 0x1, 0x1);
    }
  }),
  (_0x307a43["prototype"]["drawOutlinedCircle"] = function (_0xd03a97, _0x434d79) {
    var _0x2413ce = this["getOutlineColor"](),
      _0x379d4e = 1.5;
    if (!(_0x57ae6d == 0x2 && _0x2413ce == _0x53ed3f)) _0x440ef0(0x0, 0x0, this["rad"], _0x2413ce);
    _0x440ef0(0x0, 0x0, Math["max"](0x0, this["rad"] - _0x379d4e), _0x434d79);
  }),
  (_0x307a43["prototype"]["drawOutlinedCircleRad"] = function (_0x4308ba, _0x25624f, _0x19855d) {
    var _0x24d3dc = this["getOutlineColor"](),
      _0x1e0422 = 1.5;
    if (!(_0x57ae6d == 0x2 && _0x24d3dc == _0x53ed3f)) _0x440ef0(0x0, 0x0, _0x19855d, _0x24d3dc);
    _0x440ef0(0x0, 0x0, Math["max"](0x0, _0x19855d - _0x1e0422), _0x25624f);
  }),
  (_0x307a43["prototype"]["onLerpUpdate"] = function (_0x14f5df) {}),
  (_0x307a43["prototype"]["moveUpdate"] = function () {
    var _0x2c312d = (_0x168a54 - this["updateTime"]) / 0x3e8 / _0x5a206b;
    return (
      (_0x2c312d = 0x0 > _0x2c312d ? 0x0 : 0x1 < _0x2c312d ? 0x1 : _0x2c312d),
      (this["dead"] || !this["drawMe"]) && _0x2c312d >= 0x1 && _0xcc7181["push"](this),
      this["onLerpUpdate"](_0x2c312d),
      (this["x"] = _0x2c312d * (this["nx"] - this["ox"]) + this["ox"]),
      (this["y"] = _0x2c312d * (this["ny"] - this["oy"]) + this["oy"]),
      (this["rad"] += (this["nRad"] - this["rad"]) * 0.1),
      this["angle"] != undefined && this["lerpAngle"](_0x2c312d),
      Math["min"](0x1, _0x2c312d)
    );
  }),
  (_0x307a43["prototype"]["lerpAngle"] = function () {
    var _0x466ec1 = this["angleDelta"] * 0.1;
    (this["angleDelta"] -= _0x466ec1), (this["angle"] += _0x466ec1);
  }),
  (_0x307a43["prototype"]["readCustomData_onUpdate"] = function (_0x2d3edc) {}),
  (_0x307a43["prototype"]["readCustomData_onNewlyVisible"] = function (_0x390735) {
    (this["oType"] == _0x46bfb3 || this["oType"] == _0x37c4c1 || this["oType"] == _0x259653) && (this["innerRad"] = _0x390735["readUInt16"]() / 0x4);
  }),
  (_0x307a43["prototype"]["setObjTypes"] = function (_0x123505, _0x1defa9) {
    this["oType"] = _0x123505;
  }),
  (_0x307a43["prototype"]["clientBatchDraw"] = ![]),
  (_0x307a43["prototype"]["clientBatchDrawID"] = ![]),
  (_0x307a43["prototype"]["worldUpd_readMsgNewlyVisible"] = function (_0x58ccb4, _0x218538, _0x2346c0) {
    this["setObjTypes"](_0x218538, _0x2346c0);
    var _0x261b0f = _0x58ccb4["readUInt32"](),
      _0x5cd6fd = _0x58ccb4["readUInt32"]() / 0x4,
      _0x4efac2 = _0x58ccb4["readUInt16"]() / 0x4,
      _0x235c2f = _0x58ccb4["readUInt16"]() / 0x4;
    (this["id"] = _0x261b0f),
      (this["ox"] = this["x"] = this["nx"] = _0x4efac2),
      (this["oy"] = this["y"] = this["ny"] = _0x235c2f),
      (this["nRad"] = _0x5cd6fd),
      (this["oRad"] = this["rad"] = 0x0);
    (_0x218538 == _0x1727ca ||
      _0x218538 == _0x470b6e ||
      _0x218538 == _0x5e92c5 ||
      _0x218538 == _0x5a5628 ||
      _0x218538 == _0xf2c340 ||
      _0x218538 == _0x5aa814 ||
      _0x218538 == _0x94e33c ||
      _0x218538 == _0x2b2ead ||
      _0x218538 == _0x186096 ||
      _0x218538 == _0xb09376) &&
      (this["animateRadOnSpawn"] = ![]);
    if (!this["animateRadOnSpawn"]) this["oRad"] = this["rad"] = _0x5cd6fd;
    var _0x42e6a1 = _0x58ccb4["readUInt8"]();
    this["curBiome"] = _0x42e6a1;
    this["oType"] != _0x3fb3b2 &&
      ((this["animalType"] = _0x58ccb4["readUInt16"]()),
      (this["speciesType"] = _0x58ccb4["readUInt16"]()),
      (this["speciesSubType"] = _0x58ccb4["readUInt16"]()));
    var _0x229fa1 = _0x58ccb4["readBitGroup"](),
      _0x404556 = _0x229fa1["getBool"](),
      _0x5224ef = _0x229fa1["getBool"](),
      _0x19e993 = _0x229fa1["getBool"]();
    (this["clientBatchDraw"] = _0x229fa1["getBool"]()), (this["objGetsAngleUpdate"] = _0x19e993);
    if (this["clientBatchDraw"]) this["clientBatchDrawID"] = _0x58ccb4["readUInt16"]();
    var _0x535cb2 = null;
    _0x404556 && (_0x535cb2 = _0x2fa637[_0x58ccb4["readUInt32"]()]);
    _0x535cb2 &&
      ((this["updateTime"] = _0x168a54),
      (this["nx"] = this["x"]),
      (this["ny"] = this["y"]),
      (this["ox"] = _0x535cb2["x"]),
      (this["oy"] = _0x535cb2["y"]),
      (this["x"] = _0x535cb2["x"]),
      (this["y"] = _0x535cb2["y"]));
    if (_0x5224ef) (this["isRectangle"] = !![]), (this["rectW"] = _0x58ccb4["readUInt16"]()), (this["rectH"] = _0x58ccb4["readUInt16"]());
    else {
      var _0x5d3f66 = _0x58ccb4["readUInt8"]() * 0x2;
      this["updateAngle"](_0x5d3f66);
    }
    this["readUpdatedPropertyItem"](_0x514d97, _0x58ccb4),
      this["readUpdatedPropertyItem"](_0x4060cc, _0x58ccb4),
      this["readCustomData_onNewlyVisible"](_0x58ccb4);
  }),
  (_0x307a43["prototype"]["setRadius"] = function (_0xe6824d) {
    this["rad"] = _0xe6824d;
  }),
  (_0x307a43["prototype"]["easeAngleChanges"] = !![]),
  (_0x307a43["prototype"]["updateAngle"] = function (_0x343d80) {
    var _0x5f48e9 = this["oType"] == _0x5aa814 ? 0xb4 : 0x5a;
    if (!this["easeAngleChanges"]) this["angle"] = _0x3d960f(_0x343d80 + _0x5f48e9);
    else {
      var _0x32c5f1 = _0x3d960f(_0x343d80 + _0x5f48e9);
      (this["angleDelta"] = _0xd024c6(this["angle"], _0x32c5f1)),
        (this["oAngle"] = this["angle"]),
        this["firstPosUpd"] && ((this["oAngle"] = this["angle"] = _0x32c5f1), (this["angleDelta"] = 0x0));
    }
  }),
  (_0x307a43["prototype"]["setMovedToPos"] = function (_0x2f0883, _0x1bd93e) {
    (this["updateTime"] = _0x168a54), (this["ox"] = this["x"]), (this["oy"] = this["y"]), (this["nx"] = _0x2f0883), (this["ny"] = _0x1bd93e);
  }),
  (_0x307a43["prototype"]["setNewRad"] = function (_0x31f2b3) {
    (this["oRad"] = this["rad"]), (this["nRad"] = _0x31f2b3);
  }),
  (_0x307a43["prototype"]["worldUpd_readMsgUpdate"] = function (_0x7d76f6) {
    var _0x4bd165 = _0x7d76f6["readBitGroup"]();
    this["readUpdatedFlags"](_0x4bd165);
    var _0x189fb2 = _0x7d76f6["readUInt8"]();
    for (var _0x148a01 = 0x0; _0x148a01 < _0x189fb2; _0x148a01++) {
      var _0x4f2da2 = _0x7d76f6["readUInt16"]();
      this["readUpdatedPropertyItem"](_0x4f2da2, _0x7d76f6);
    }
    this["readCustomData_onUpdate"](_0x7d76f6), (this["firstPosUpd"] = ![]);
  }),
  (_0x307a43["prototype"]["readUpdatedPropertyItem"] = function (_0x4a15f6, _0x3be2b8) {
    if (_0x4a15f6 == _0x4573ba) {
      var _0x1f8cef = _0x3be2b8["readUInt16"]() / 0x4,
        _0xf35b3e = _0x3be2b8["readUInt16"]() / 0x4;
      this["setMovedToPos"](_0x1f8cef, _0xf35b3e);
    } else {
      if (_0x4a15f6 == _0xd7b7) {
        var _0x831722 = _0x3be2b8["readUInt16"]() / 0xa;
        this["setNewRad"](_0x831722);
      } else {
        if (_0x4a15f6 == _0x6606d8) {
          var _0x24da01 = _0x3be2b8["readUInt8"]() * 0x2;
          this["updateAngle"](_0x24da01);
        } else {
          if (_0x4a15f6 == _0x514d97) this["specType"] = _0x3be2b8["readUInt8"]();
          else {
            if (_0x4a15f6 == _0x4060cc) this["specType2"] = _0x3be2b8["readUInt8"]();
            else {
              if (_0x4a15f6 == _0x4a9b40) {
                var _0x2cdd1f = _0x3be2b8["readUInt8"]();
                this["setHpBar"](_0x2cdd1f);
              } else {
                if (_0x4a15f6 == _0x206891) this["curBiome"] = _0x3be2b8["readUInt8"]();
                else {
                  if (_0x4a15f6 == _0x19f0dc) {
                    let _0x189687 = _0x3be2b8["readUInt8"]() == 0x1;
                  } else this["readUpdatedProperty"](_0x4a15f6, _0x3be2b8);
                }
              }
            }
          }
        }
      }
    }
  });
var _0x48ae78 = 0x0;
(_0x307a43["prototype"]["readUpdatedFlags"] = function (_0x25bd34) {
  (this["flag_hurt"] = _0x25bd34["getBool"]()), (this["flag_flying"] = _0x25bd34["getBool"]());
}),
  (_0x307a43["prototype"]["readUpdatedProperty"] = function (_0x496c47, _0x3a923a) {}),
  (_0x307a43["prototype"]["setHpBar"] = function (_0x51e150) {
    (this["hpPer_n"] = _0x51e150), (this["hpBarTimeoutT"] = +new Date() + 0xbb8);
  }),
  (_0x307a43["prototype"]["killerId"] = 0x0),
  (_0x307a43["prototype"]["worldUpd_readMsgRemovedObj"] = function (_0x2da76a) {
    this["killerId"] = _0x2da76a["readUInt8"]() > 0x0 ? _0x2da76a["readUInt32"]() : 0x0;
    var _0x220f76 = this["killerId"] > 0x0 ? _0x2fa637[this["killerId"]] : undefined;
    (this["dead"] = !![]), (this["updateTime"] = _0x168a54);
    if (this["oType"] == _0x5aa814) (this["ox"] = this["x"]), (this["oy"] = this["y"]), (this["nx"] = this["x"]), (this["ny"] = this["y"]);
    else
      _0x220f76
        ? ((this["ox"] = this["x"]),
          (this["oy"] = this["y"]),
          (this["oRad"] = this["rad"]),
          (this["nx"] = _0x220f76["nx"]),
          (this["ny"] = _0x220f76["ny"]),
          (this["nRad"] = Math["min"](this["rad"], _0x220f76["rad"])),
          _0x204989 == this["killerId"] &&
            (this["oType"] == _0x3fb3b2 && !_0xd404d3 && _0x46e038("audio/bite.mp3", 0.05, _0x32639a(0.9, 1.1)),
            this["oType"] == _0x4a3fde || this["oType"] == _0x129eb7 || this["oType"] == _0xa9fc9a
              ? !_0xd404d3 && _0x46e038("audio/bloop.mp3", 0.6, _0x32639a(0.9, 1.1))
              : !_0xd404d3 && _0x46e038("audio/nom.mp3", 0.5)),
          (this["hp_n"] = 0x0))
        : ((this["ox"] = this["x"]),
          (this["oy"] = this["y"]),
          (this["oRad"] = this["rad"]),
          (this["nx"] = this["x"]),
          (this["ny"] = this["y"]),
          (this["nRad"] = 0x0));
    this["onRemovedFromGame"]();
  }),
  (_0x307a43["prototype"]["updateZ"] = function () {
    switch (this["oType"]) {
      case _0x24b846:
      case _0x393517:
      case _0xfa0640:
        this["z"] = 0xf4240;
        break;
      case _0x4c28d1:
        this["z"] = -0xdc;
        break;
      case _0x4f7e71:
      case _0xe065e3:
        this["z"] = -0xd2;
        break;
      case _0x470b6e:
      case _0x1727ca:
        this["z"] = -0xd1;
        break;
      case _0x9c4ccf:
        this["z"] = -0x9e;
        break;
      case _0x45f833:
        this["z"] = -0x8c;
        break;
      case _0x3c81e7:
        this["z"] = -0x97;
        break;
      case _0xf2c340:
      case _0x1f2a58:
        this["z"] = -0xa0;
        break;
      case _0x194937:
        this["z"] = -0x129;
        break;
      case _0x4d4712:
        this["z"] = -0x128;
        break;
      case _0x9f9bdf:
        this["z"] = -0x9d;
        break;
      case _0x5e92c5:
        this["z"] = -0x9e;
        break;
      case _0x5a5628:
        this["z"] = -0x9c;
        break;
      case _0x583c47:
        this["z"] = -0x9b;
        break;
      case _0xb09376:
        this["z"] = -0x9a;
        break;
      case _0x259653:
        this["z"] = -0x96;
        break;
      case _0x37c4c1:
        this["z"] = -0x65;
        break;
      case _0x46bfb3:
        this["z"] = -0x64;
        break;
      case _0x494ac9:
      case _0x5aecc8:
        this["z"] = -0x63;
        break;
      case _0x52e0e9:
      case _0x186096:
        this["z"] = 0x3e8;
        break;
      case _0x433f67:
        this["z"] = 0x3ea;
        break;
      case _0x2b2ead:
        this["z"] = 0x3ea;
        break;
      case _0x12b332:
      case _0x94e33c:
        this["z"] = 0x3e7;
        break;
      case _0x2e4bf1:
        this["z"] = 0x3eb;
        break;
      case _0x1d5893:
      case _0x2898dc:
      case _0x44a83c:
        this["z"] = 0x3ea + this["rad"];
        break;
      case _0x595f2d:
        this["z"] = 0x186af;
        break;
      case _0xa9fc9a:
        this["z"] = 0x186af;
        break;
      case _0x5a8996:
      case _0x313ba2:
        this["z"] = 0x3f2 + this["rad"];
        this["specType2"] == 0x1 && (this["z"] += 0x3e8);
        break;
      case _0x27c08c:
        this["z"] = 0x7d0 + this["rad"];
        break;
      case _0x4b3c4f:
      case _0x9bcb18:
        this["z"] = 0x3ee;
        break;
      case _0x3fb3b2:
        break;
      default:
        this["z"] = this["rad"];
        break;
    }
  }),
  (_0x307a43["prototype"]["updateZ_onTree"] = function (_0x461262) {
    this["oType"] == _0x3fb3b2 && this["flag_eff_isOnTree"] && (this["z"] = _0x461262 + 0x44c);
  }),
  (_0x307a43["prototype"]["showScaleEffectToPlayer"] = function () {
    var _0x22e95d = _0x2fa637[_0x204989];
    if (_0x22e95d && _0x22e95d["flag_inHidingHole"] && _0x22e95d["lastHidingHoleID"] == this["id"]) return ![];
    return !![];
  }),
  (_0x307a43["prototype"]["calculateZIndex"] = function () {
    this["updateZ"]();
    if (this["oType"] == _0x3fb3b2) {
      if (this["flag_flying"]) {
        this["z"] = 0x186a0;
        this["flag_isGrabbed"] && (this["z"] -= this["rad"]);
        if (this["flag_eff_aniInClaws"] || this["flag_usingAbility"]) this["z"] += 0x3e8;
      } else {
        if (this["flag_isInArena"]) this["z"] = 0x2710 + this["rad"];
        else {
          this["updateZ_onTree"](this["z"]);
          if (this["flag_eff_invincible"]) this["z"] += 0x3e8;
        }
      }
    } else this["updateZ_onTree"](this["z"]);
  }),
  (_0x307a43["prototype"]["mopeSeasonID"] = 0x0),
  (_0x307a43["prototype"]["skinThemeID"] = 0x0),
  (_0x307a43["prototype"]["getSkinImageObj"] = function (_0x551dcd) {
    var _0x4fda71 = "./assets/s/" + this["mopeSeasonID"] + "/" + _0x551dcd;
    return (
      this["skinThemeID"] > 0x0 && (_0x4fda71 = "./assets/t/" + this["skinThemeID"] + "/" + _0x551dcd),
      _0x2d8f34(_0x4fda71, function (_0xb6f872) {
        console["log"](_0xb6f872["src"]);
      })
    );
  }),
  (_0x307a43["prototype"]["getSkinImageObjForSeason"] = function (_0x19bf4b, _0x12e515) {
    !_0x12e515 && console["log"]("No season for skin: " + _0x19bf4b);
    var _0x466183 = "./assets/s/" + _0x12e515 + "/" + _0x19bf4b;
    return (
      this["skinThemeID"] > 0x0 && (_0x466183 = "./assets/t/" + this["skinThemeID"] + "/" + _0x19bf4b),
      _0x2d8f34(_0x466183, function (_0x332f26) {
        console["log"](_0x332f26["src"]);
      })
    );
  }),
  (_0x307a43["prototype"]["getObjImageObjForSeason"] = function (_0x15e917, _0x903170) {
    !_0x903170 && console["log"]("No season for skin: " + _0x15e917);
    var _0x20d924 = "./assets/s/" + _0x903170 + "/" + _0x15e917;
    return _0x2d8f34(_0x20d924, function (_0x3e9d09) {
      console["log"](_0x3e9d09["src"]);
    });
  }),
  (_0x307a43["prototype"]["onRemovedFromGame"] = function () {});

function _0x307a43(_0x47896b) {
  (this["oType"] = _0x47896b),
    (this["rPer"] = _0x32639a(0x0, 0x1)),
    (this["spawnTime"] = _0x168a54),
    (this["updateTime"] = _0x168a54),
    (this["firstPosUpd"] = !![]),
    (this["chatLines"] = []);
  switch (this["oType"]) {
    case _0x4e42d9:
    case _0x313ba2:
    case _0x3a42d7:
    case _0xf6ea95:
    case _0x5a8996:
    case _0x4a3fde:
    case _0x4b3c4f:
    case _0x9bcb18:
    case _0x2e4bf1:
    case _0x1ce5d9:
    case _0x3ae840:
    case _0x1daba1:
    case _0x46bfb3:
    case _0x259653:
    case _0x37c4c1:
    case _0x5b51ce:
    case _0x584c59:
    case _0x3aa6d5:
    case _0x1b4b44:
    case _0x2dd076:
    case _0x30fe85:
    case _0x59f46b:
    case _0x3fc954:
    case _0x59aa31:
    case _0x116a06:
    case _0x1f6f17:
    case _0x51d37c:
    case _0x55a015:
    case _0x23ad49:
    case _0x561354:
    case _0x571e21:
    case _0x374904:
    case _0x52e0e9:
    case _0x12b332:
    case _0x433f67:
      this["doesDrawEffectScale"] = !![];
      break;
    default:
      break;
  }
  if (this["oType"] == _0x46bfb3 || this["oType"] == _0x37c4c1 || this["oType"] == _0x259653 || this["oType"] == _0x2e4bf1)
    this["drawEffectScale_Slow"] = !![];
}
window["GameObj"] = _0x307a43;
var _0x56f077 = _0x3cc409,
  _0x48c344 = _0x307a43;
(_0x56f077["prototype"] = Object["create"](_0x48c344["prototype"])), (_0x56f077["prototype"]["constructor"] = _0x56f077);

function _0x3cc409() {
  (this["objs"] = []),
    (this["updateZ"] = function () {
      this["objs"]["length"] > 0x0 && (this["objs"][0x0]["updateZ"](), (this["z"] = this["objs"][0x0]["z"]));
    }),
    (this["draw"] = function () {
      for (var _0x4b526e = 0x0; _0x4b526e < this["objs"]["length"]; _0x4b526e++) {
        var _0x125316 = this["objs"][_0x4b526e];
        _0x125316["draw"](!![]);
      }
      for (var _0x4b526e = 0x0; _0x4b526e < this["objs"]["length"]; _0x4b526e++) {
        var _0x125316 = this["objs"][_0x4b526e];
        _0x125316["draw"](![]);
      }
    }),
    (this["addBatchedObj"] = function (_0x567a8c) {
      this["objs"]["length"] == 0x0 && ((this["oType"] = _0x567a8c["oType"]), (this["objs"] = [])), this["objs"]["push"](_0x567a8c);
    });
}
window["GameObjBatchDraw"] = _0x3cc409;
var _0x659012 = 0x1,
  _0x388c4c = 0x2,
  _0xc58c70 = 0x3,
  _0x2e6d2a = 0x4,
  _0x50c9da = 0x5,
  _0x108a58 = 0x6,
  _0x1c4f28 = 0x7,
  _0x3cc7bc = 0x8,
  _0x5a5817 = 0x9,
  _0x15f6e5 = 0xa,
  _0x16bb4c = 0xb,
  _0x1e9785 = 0xc,
  _0x8151b9 = 0xd,
  _0x1ae9e8 = 0xe,
  _0x596a1b = 0xf,
  _0x3dee49 = 0x10,
  _0x2d0ebc = 0x11,
  _0x461353 = 0x12,
  _0x261bdf = 0x13,
  _0x2429b5 = 0x14,
  _0x36f1a3 = 0x15,
  _0x4af824 = 0x16,
  _0x291edb = 0x17,
  _0x4f1c79 = 0x18,
  _0x391550 = 0x19,
  _0x573db4 = 0x1a,
  _0x15f668 = 0x1b,
  _0x33164c = 0x1c,
  _0x5ac0cd = 0x1d,
  _0x364eae = 0x1e,
  _0xd9bb61 = 0x1f,
  _0x58f094 = 0x20,
  _0x21c202 = 0x21,
  _0x50e796 = 0x22,
  _0x83a348 = 0x23,
  _0x33a471 = 0x24,
  _0x23ab49 = 0x25,
  _0x72b8ae = 0x26,
  _0x379cc3 = 0x27,
  _0x31d5ba = 0x28,
  _0x19954b = 0x29,
  _0x4a1394 = 0x2a,
  _0x5ab376 = 0x2b,
  _0x3531d4 = 0x2c,
  _0x52ce41 = 0x2d,
  _0x322b1f = 0x2e,
  _0x52066d = 0x2f,
  _0xb5d198 = 0x30,
  _0x1c2dd4 = 0x31,
  _0x1a3bd2 = 0x32,
  _0x2e22f9 = 0x33,
  _0x2a018e = 0x34,
  _0x11d87b = 0x35,
  _0x10ad1f = 0x36,
  _0x353380 = 0x37,
  _0x17ab53 = 0x38,
  _0x26c175 = 0x39,
  _0x16a65d = 0x3a,
  _0x4ca3d5 = 0x3b,
  _0x3807fc = 0x3c,
  _0x4d5dff = 0x3d,
  _0x483352 = 0x3e,
  _0x19797d = 0x3f,
  _0x3d8491 = 0x40,
  _0x58aade = 0x41,
  _0x533281 = 0x42,
  _0x3ae185 = 0x43,
  _0x3a0961 = 0x44,
  _0x3b7c87 = 0x45,
  _0x250a37 = 0x46,
  _0x5b1639 = 0x47,
  _0x448b86 = 0x48,
  _0x28027c = 0x49,
  _0x5b8090 = 0x4a,
  _0x65dffc = 0x4b,
  _0x1ee088 = 0x4c,
  _0x5d0d40 = 0x4d,
  _0x43a3bb = 0x4e,
  _0x37c0ab = 0x4f,
  _0x4da405 = 0x50,
  _0x2deb28 = 0x51,
  _0xbd9993 = 0x52,
  _0x2a2687 = 0x53,
  _0x156fde = 0x54,
  _0x4eaba8 = 0x55,
  _0x299482 = 0x56,
  _0xe68f0 = 0x57,
  _0x353123 = 0x58,
  _0x1b8b5e = 0x59,
  _0x55bfef = 0x5a,
  _0x4310c7 = 0x5b,
  _0x2e86d6 = 0x5c,
  _0x31f081 = 0x5d,
  _0x3cc7e2 = 0x5e,
  _0x321383 = 0x5f,
  _0x510716 = 0x60,
  _0x3297a2 = 0x61,
  _0x563a97 = 0x62,
  _0x30fd4c = 0x63,
  _0x5eebcf = 0x64,
  _0x6ff36b = 0x65,
  _0x205af4 = 0x66,
  _0xe72acb = 0x67,
  _0x261adf = 0x68,
  _0x5195b7 = 0x69,
  _0x511c71 = 0x6a,
  _0x4cd422 = 0x6b,
  _0x6af42d = 0x6c,
  _0x190408 = 0x6d,
  _0x442977 = 0x6e,
  _0x13567f = 0x6f,
  _0x5de5e6 = function (_0x2ec6f3) {
    var _0xcf2900 = {};
    switch (_0x2ec6f3) {
      case _0x52ce41:
        (_0xcf2900["aniName"] = "Snail"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "You're a super slow snail!"),
          (_0xcf2900["aniCol"] = "#fcc02b"),
          (_0xcf2900["skinName"] = "snail");
        break;
      case _0x659012:
        (_0xcf2900["aniName"] = "Mouse"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = ""),
          (_0xcf2900["aniCol"] = "#9BA9B9"),
          (_0xcf2900["skinName"] = "mouse");
        break;
      case _0x388c4c:
        (_0xcf2900["aniName"] = "Rabbit"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to RABBIT! \x0aPress W to burrow a hole to hide in!"),
          (_0xcf2900["aniCol"] = "#AA937E"),
          (_0xcf2900["skinName"] = "rabbit");
        break;
      case _0xc58c70:
        (_0xcf2900["aniName"] = "Pig"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to PIG!\x0a Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)"),
          (_0xcf2900["aniCol"] = "#DD6BD4"),
          (_0xcf2900["skinName"] = "pig");
        break;
      case _0x2e6d2a:
        (_0xcf2900["aniName"] = "Fox"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] =
            "UPGRADED to FOX! ,\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!"),
          (_0xcf2900["aniCol"] = "#FF9D43"),
          (_0xcf2900["skinName"] = "fox");
        break;
      case _0x50c9da:
        (_0xcf2900["aniName"] = "Deer"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] =
            "UPGRADED to DEER! \x0aPress W to dig up food! \x0aDig in mud for better food!\x0a Hint:Check water areas for new food sources!"),
          (_0xcf2900["aniCol"] = "#C4773E"),
          (_0xcf2900["skinName"] = "deer");
        break;
      case _0x108a58:
        (_0xcf2900["aniName"] = "Mole"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to MOLE!\x0a Hold W to dig underground!\x0aGo under anything, do surprise attacks!"),
          (_0xcf2900["aniCol"] = "#4C4A45"),
          (_0xcf2900["skinName"] = "mole");
        break;
      case _0x1c4f28:
        (_0xcf2900["aniName"] = "Zebra"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to ZEBRA! \x0aPress W to kick side ways!"),
          (_0xcf2900["aniCol"] = "#FFFFFF"),
          (_0xcf2900["skinName"] = "zebra");
        break;
      case _0x3cc7bc:
        (_0xcf2900["aniName"] = "Lion"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to LION!\x0a Press W to release a mighty ROAR (Rawr!)!"),
          (_0xcf2900["aniCol"] = "#f8c923"),
          (_0xcf2900["skinName"] = "lion");
        break;
      case _0x5a5817:
        (_0xcf2900["aniName"] = "CHEETAH"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to CHEETAH!\x0a Press W to get a speed boost! (Every 8 seconds)!"),
          (_0xcf2900["aniCol"] = "#CAC05B"),
          (_0xcf2900["skinName"] = "bigcat/cheetah");
        break;
      case _0x15f6e5:
        (_0xcf2900["aniName"] = "Bear"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to BEAR!\x0a Bears climb through green hills! (Press W to use your claw!)"),
          (_0xcf2900["aniCol"] = "#99591C"),
          (_0xcf2900["skinName"] = "bear");
        break;
      case _0x16bb4c:
        (_0xcf2900["aniName"] = "Croc"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] =
            "UPGRADED to CROCODILE!\x0a Press W to bite and drag around animals! \x0a+ (Now hide in water spots)+ Swim well in Mud, Lakes & Oceans!"),
          (_0xcf2900["aniCol"] = "#30F51C"),
          (_0xcf2900["skinName"] = "croc");
        break;
      case _0x8151b9:
        (_0xcf2900["aniName"] = "Hippo"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to HIPPO!\x0aHippos are great swimmers, dominate the Lakes/Oceans/Mud!"),
          (_0xcf2900["aniCol"] = "#945A99"),
          (_0xcf2900["skinName"] = "hippo");
        break;
      case _0x1e9785:
        (_0xcf2900["aniName"] = "Rhino"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to RHINO!\x0a Press W to CHARGE with your mighty horn!"),
          (_0xcf2900["aniCol"] = "#94a3a9"),
          (_0xcf2900["skinName"] = "rhino");
        break;
      case _0x596a1b:
        (_0xcf2900["aniName"] = "Shrimp"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = ""),
          (_0xcf2900["aniCol"] = "#f88e37"),
          (_0xcf2900["skinName"] = "shrimp");
        break;
      case _0x3dee49:
        (_0xcf2900["aniName"] = "Trout"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to TROUT!\x0aHint: Hold Left-click to RUN! (Uses extra water)"),
          (_0xcf2900["aniCol"] = "#ac8686"),
          (_0xcf2900["skinName"] = "trout");
        break;
      case _0x2d0ebc:
        (_0xcf2900["aniName"] = "Crab"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to CRAB!\x0a Crabs can survive on dry land!\x0a (On land, Press W to go into your shell!)"),
          (_0xcf2900["aniCol"] = "#bf2408"),
          (_0xcf2900["skinName"] = "crab");
        break;
      case _0x461353:
        (_0xcf2900["aniName"] = "Squid"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to SQUID!\x0a Squids can use INK when injured (press W!) \x0a+ you can hide in plankton bushes!"),
          (_0xcf2900["aniCol"] = "#40dda4"),
          (_0xcf2900["skinName"] = "squid");
        break;
      case _0x261bdf:
        (_0xcf2900["aniName"] = "Shark"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to SHARK!\x0a A vicious predator of the oceans!"),
          (_0xcf2900["aniCol"] = "#999fc6"),
          (_0xcf2900["skinName"] = "shark");
        break;
      case _0x4af824:
        (_0xcf2900["aniName"] = "Sea-horse"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to SEA HORSE!\x0a An agile hunter!"),
          (_0xcf2900["aniCol"] = "#73BE2F"),
          (_0xcf2900["skinName"] = "seahorse");
        break;
      case _0x291edb:
        (_0xcf2900["aniName"] = "Jellyfish"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to JELLYFISH!\x0a A slowly-turning animal that can grow quite large!"),
          (_0xcf2900["aniCol"] = "#FDB9BA"),
          (_0xcf2900["skinName"] = "jellyfish");
        break;
      case _0x36f1a3:
        (_0xcf2900["aniName"] = "Turtle"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to TURTLE!\x0a Lives well on land & water! (On land, Press W to go into your shell!)"),
          (_0xcf2900["aniCol"] = "#502E1A"),
          (_0xcf2900["skinName"] = "turtle");
        break;
      case _0x2429b5:
        (_0xcf2900["aniName"] = "Stringray"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to STINGRAY!\x0a Use electic shock (Release W key!) to shock animals! \x0a(Takes time to recharge)"),
          (_0xcf2900["aniCol"] = "#164336"),
          (_0xcf2900["skinName"] = "stingray");
        break;
      case _0x4f1c79:
        (_0xcf2900["aniName"] = "The Kraken"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] =
            "UPGRADED to THE KRAKEN!\x0a Terrorize the oceans, and be feared by all!\x0a (Release W to use whirlpool ability!)"),
          (_0xcf2900["aniCol"] = "#64a034"),
          (_0xcf2900["skinName"] = "kraken");
        break;
      case _0x391550:
        (_0xcf2900["aniName"] = "Pufferfish"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to PUFFERFISH!\x0a (Hold W to inflate- become spiky, and dangerous to touch!)"),
          (_0xcf2900["aniCol"] = "#6C5C2C"),
          (_0xcf2900["skinName"] = "pufferfish");
        break;
      case _0x573db4:
        (_0xcf2900["aniName"] = "Killer Whale"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to Killer Whale! \x0aWhales blow out water when diving! (And sometimes other loot!)"),
          (_0xcf2900["aniCol"] = "#141414"),
          (_0xcf2900["skinName"] = "killerwhale");
        break;
      case _0x15f668:
        (_0xcf2900["aniName"] = "Swordfish"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to " + _0xcf2900["aniName"] + "!\x0a (Press W to rush with your sharp nose!)"),
          (_0xcf2900["aniCol"] = "#689CD7"),
          (_0xcf2900["skinName"] = "swordfish");
        break;
      case _0x33164c:
        (_0xcf2900["aniName"] = "Gorilla"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] =
            "UPGRADED to " + _0xcf2900["aniName"] + "!\x0a Gorillas are very fast on hills/trees!\x0a Press W to throw bananas! (from trees)"),
          (_0xcf2900["aniCol"] = "#323232"),
          (_0xcf2900["skinName"] = "gorilla");
        break;
      case _0x5ac0cd:
        (_0xcf2900["aniName"] = "Octopus"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] =
            "UPGRADED to Octopus!\x0aHold W to use your 'Disguise' ability!\x0a(Hint: wait for prey to bite you- they get stunned!)"),
          (_0xcf2900["aniCol"] = "#ff8340"),
          (_0xcf2900["skinName"] = "octopus");
        break;
      case _0x1ae9e8:
        (_0xcf2900["aniName"] = "Dragon"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] =
            "UPGRADED to " + _0xcf2900["aniName"] + "!\x0a (You're amazing!) \x0aFly over everything, Hold W to shoot fire!"),
          (_0xcf2900["aniCol"] = "#22FF8A"),
          (_0xcf2900["skinName"] = "dragon");
        break;
      case _0x322b1f:
        (_0xcf2900["aniName"] = "Black Dragon"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] =
            "UPGRADED to " +
            _0xcf2900["aniName"] +
            "!\x0a Black dragons drink lava instead of water! Black dragons only heal on healing stones/lava!"),
          (_0xcf2900["aniCol"] = "black"),
          (_0xcf2900["skinName"] = "blackdragon");
        break;
      case _0x2a018e:
        (_0xcf2900["aniName"] = "Giant Spider"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to " + _0xcf2900["aniName"] + "!\x0a Place web around the game to catch prey!"),
          (_0xcf2900["aniCol"] = "black"),
          (_0xcf2900["skinName"] = "giantSpider");
        break;
      case _0x1a3bd2:
        (_0xcf2900["aniName"] = "Cobra"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to " + _0xcf2900["aniName"] + "!\x0a Hold W to Spit venom, and poison animals with your bite!"),
          (_0xcf2900["aniCol"] = "black"),
          (_0xcf2900["skinName"] = "cobra");
        break;
      case _0x2e22f9:
        (_0xcf2900["aniName"] = "Boa Constrictor"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to " + _0xcf2900["aniName"] + "!\x0a Coil and suffocate other animals!"),
          (_0xcf2900["aniCol"] = "black"),
          (_0xcf2900["skinName"] = "boaConstrictor");
        break;
      case _0x11d87b:
        (_0xcf2900["aniName"] = "T-REX"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] =
            "UPGRADED to " + _0xcf2900["aniName"] + " The Dinosaur!\x0a This ancient dinosaur has powerful jaws that can drag prey around!!"),
          (_0xcf2900["aniCol"] = "#862A2A"),
          (_0xcf2900["skinName"] = "trex");
        break;
      case _0x10ad1f:
        (_0xcf2900["aniName"] = "Tiger"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to Tiger!\x0a Tigers can launch an ambush attack (HOLD W to grow a bush) Release to attack!"),
          (_0xcf2900["aniCol"] = "#FF9000"),
          (_0xcf2900["skinName"] = "tiger");
        break;
      case _0x353380:
        (_0xcf2900["aniName"] = "Giraffe"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to Giraffe!\x0aGiraffe have huge legs and stomp anyone in their way!"),
          (_0xcf2900["aniCol"] = "#E9BD23"),
          (_0xcf2900["skinName"] = "giraffe");
        break;
      case _0x17ab53:
        (_0xcf2900["aniName"] = "Eagle"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to Eagle!\x0aEagles can fly up other animals in the air! !\x0a"),
          (_0xcf2900["aniCol"] = "#5b400d"),
          (_0xcf2900["skinName"] = "eagle");
        break;
      case _0x19954b:
        (_0xcf2900["aniName"] = "Arctic Fox"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] =
            "UPGRADED to " +
            _0xcf2900["aniName"] +
            "!\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!"),
          (_0xcf2900["aniCol"] = "#CFCFCF"),
          (_0xcf2900["skinName"] = "arctic/arcticfox");
        break;
      case _0xd9bb61:
        (_0xcf2900["aniName"] = "Arctic Hare"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to " + _0xcf2900["aniName"] + "!\x0a \x0aPress W to burrow a hole to hide in!"),
          (_0xcf2900["aniCol"] = "#D5D5D5"),
          (_0xcf2900["skinName"] = "arctic/arctichare");
        break;
      case _0x58f094:
        (_0xcf2900["aniName"] = "The Yeti!"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] =
            "UPGRADED to " + _0xcf2900["aniName"] + "!\x0a So it really exists... \x0a Hold W to turn into snow, release W to freeeeeze!"),
          (_0xcf2900["aniCol"] = "#839eb5"),
          (_0xcf2900["skinName"] = "arctic/yeti");
        break;
      case _0x21c202:
        (_0xcf2900["aniName"] = "Chipmunk"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = ""),
          (_0xcf2900["aniCol"] = "#A77C30"),
          (_0xcf2900["skinName"] = "arctic/chipmunk");
        break;
      case _0x50e796:
        (_0xcf2900["aniName"] = "Muskox"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] =
            "UPGRADED to " + _0xcf2900["aniName"] + "!\x0a Press W to charge with your horns! \x0aPlus move decently on ice!"),
          (_0xcf2900["aniCol"] = "#231f18"),
          (_0xcf2900["skinName"] = "arctic/muskox");
        break;
      case _0x83a348:
        (_0xcf2900["aniName"] = "Penguin"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to " + _0xcf2900["aniName"] + "!\x0a Left-click to run!\x0a (HOLD W to slide FAST on ice)!"),
          (_0xcf2900["aniCol"] = "#FFFFFF"),
          (_0xcf2900["skinName"] = "arctic/penguin");
        break;
      case _0x33a471:
        (_0xcf2900["aniName"] = "Polar Bear"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to " + _0xcf2900["aniName"] + "!\x0a Polar bears can climb hills! \x0a+ They're amazing swimmers!"),
          (_0xcf2900["aniCol"] = "#e4e4e4"),
          (_0xcf2900["skinName"] = "arctic/bear/bear");
        break;
      case _0x23ab49:
        (_0xcf2900["aniName"] = "Seal"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to " + _0xcf2900["aniName"] + "!\x0a Seals can slide on ice (Hold W) + can climb hills (rocks too!)"),
          (_0xcf2900["aniCol"] = "#cfcfcf"),
          (_0xcf2900["skinName"] = "arctic/seal");
        break;
      case _0x72b8ae:
        (_0xcf2900["aniName"] = "Snow leopard"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to " + _0xcf2900["aniName"] + "!\x0a Press W to get a speed boost! (Every 8 seconds)!"),
          (_0xcf2900["aniCol"] = "#cfcfcf"),
          (_0xcf2900["skinName"] = "arctic/snowleopard");
        break;
      case _0x379cc3:
        (_0xcf2900["aniName"] = "Walrus"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to " + _0xcf2900["aniName"] + "!\x0a You can slide on ice (Hold W) + can climb hills (rocks too!)"),
          (_0xcf2900["aniCol"] = "#633838"),
          (_0xcf2900["skinName"] = "arctic/walrus");
        break;
      case _0x31d5ba:
        (_0xcf2900["aniName"] = "Reindeer"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] =
            "UPGRADED to " + _0xcf2900["aniName"] + "!\x0a Press W to dig up food! \x0a Your sharp hooves let you turn very well on ice!"),
          (_0xcf2900["aniCol"] = "#a68976"),
          (_0xcf2900["skinName"] = "arctic/reindeer");
        break;
      case _0x364eae:
        (_0xcf2900["aniName"] = "Wolf"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to " + _0xcf2900["aniName"] + "!\x0a Wolf paws turn very well on ice!\x0a Press W to howl!"),
          (_0xcf2900["aniCol"] = "#6B6B6B"),
          (_0xcf2900["skinName"] = "arctic/wolf");
        break;
      case _0x4a1394:
        (_0xcf2900["aniName"] = "Wolverine"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to " + _0xcf2900["aniName"] + "!\x0a Press W to Let out a Powerful GROWL! (Knocks back prey!)"),
          (_0xcf2900["aniCol"] = "#843A0F"),
          (_0xcf2900["skinName"] = "arctic/wolverine");
        break;
      case _0x5ab376:
        (_0xcf2900["aniName"] = "Mammoth"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] =
            "UPGRADED to " +
            _0xcf2900["aniName"] +
            "!\x0a Press W to roll snowballs with your trunk!\x0a The bigger the snowball gets, the longer the freeze!"),
          (_0xcf2900["aniCol"] = "#9d4717"),
          (_0xcf2900["skinName"] = "arctic/mammoth");
        break;
      case _0x3531d4:
        (_0xcf2900["aniName"] = "Donkey"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to " + _0xcf2900["aniName"] + "!\x0a Press W to Kick any animal behind you"),
          (_0xcf2900["aniCol"] = "#8c7c64"),
          (_0xcf2900["skinName"] = "donkey");
        break;
      case _0x52066d:
        (_0xcf2900["aniName"] = "Sabertooth Tiger"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to Sabertooth Tiger!\x0aSabertooth Tigers are great swimmers, dominate the Lakes/Oceans/Mud!"),
          (_0xcf2900["aniCol"] = "#945A99"),
          (_0xcf2900["skinName"] = "sabertoothtiger");
        break;
      case _0xb5d198:
        (_0xcf2900["aniName"] = "Elephant"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to " + _0xcf2900["aniName"] + "!\x0a Use your long trunk to attack and eat food!"),
          (_0xcf2900["aniCol"] = "#945A99"),
          (_0xcf2900["skinName"] = "elephant");
        break;
      case _0x1c2dd4:
        (_0xcf2900["aniName"] = "Blue Whale"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to Blue Whale!\x0a Smash with your powerful tail!"),
          (_0xcf2900["aniCol"] = "#945A99"),
          (_0xcf2900["skinName"] = "bluewhale");
        break;
      case _0x4ca3d5:
        (_0xcf2900["aniName"] = "Duckling"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to a DUCK!"),
          (_0xcf2900["aniCol"] = "#FF9000"),
          (_0xcf2900["skinName"] = "duck/duckling");
        break;
      case _0x26c175:
        (_0xcf2900["aniName"] = "Hedgehog"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to Hedgehog!\x0a (Hold W to become spiky, and dangerous to touch!)"),
          (_0xcf2900["aniCol"] = "#5b400d"),
          (_0xcf2900["skinName"] = "hedgehog");
        break;
      case _0x4d5dff:
        (_0xcf2900["aniName"] = "King Crab"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to a KING CRAB!"),
          (_0xcf2900["aniCol"] = "#971f0e"),
          (_0xcf2900["skinName"] = "kingcrab");
        break;
      case _0x3807fc:
        (_0xcf2900["aniName"] = "Lemming"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = ""),
          (_0xcf2900["aniCol"] = "#A77C30"),
          (_0xcf2900["skinName"] = "arctic/lemming");
        break;
      case _0x483352:
        (_0xcf2900["aniName"] = "Frog"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to Frog!!"),
          (_0xcf2900["aniCol"] = "#FF9000"),
          (_0xcf2900["skinName"] = "frog/frog");
        break;
      case _0x19797d:
        (_0xcf2900["aniName"] = "Ostrich"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] =
            "UPGRADED to Ostrich! Lay eggs to hatch babies! \x0aCommand babies by placing your crosshair (right-click/W)-\x0a They can attack prey!"),
          (_0xcf2900["aniCol"] = "#FF9000"),
          (_0xcf2900["skinName"] = "ostrich/ostrich");
        break;
      case _0x3d8491:
        (_0xcf2900["aniName"] = "Pelican"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] =
            "UPGRADED to Pelican! \x0aPick up water (and prey!) in your mouth,\x0afly, and drop water on prey! (press W again)"),
          (_0xcf2900["aniCol"] = "#FF9000"),
          (_0xcf2900["skinName"] = "pelican/pelican");
        break;
      case _0x58aade:
        (_0xcf2900["aniName"] = "Falcon"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to Falcon! \x0aFly, and do a powerful dive attack! Aim it well."),
          (_0xcf2900["aniCol"] = "#FF9000"),
          (_0xcf2900["skinName"] = "falcon/falcon");
        break;
      case _0x533281:
        (_0xcf2900["aniName"] = "Snowy Owl"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to Snowy Owl!\x0a Aim the crosshair, \x0a right click/W when it's on top of prey, to attack!"),
          (_0xcf2900["aniCol"] = "#FF9000"),
          (_0xcf2900["skinName"] = "snowyowl/snowyowl");
        break;
      case _0x3b7c87:
        (_0xcf2900["aniName"] = "Baby Ostrich"),
          (_0xcf2900["aniDesc"] = ""),
          (_0xcf2900["upgradeText"] = "UPGRADED to Baby Ostrich!!"),
          (_0xcf2900["aniCol"] = "#FF9000"),
          (_0xcf2900["skinName"] = "ostrich/baby-ostrich");
        break;
      case _0x3a0961:
        (_0xcf2900["aniName"] = "Phoenix"),
          (_0xcf2900["upgradeText"] = "UPGRADED to Phoenix!\x0aCreate powerful fire tornados to burn your enemies alive!"),
          (_0xcf2900["aniCol"] = "#FF9000"),
          (_0xcf2900["skinName"] = "phoenix/phoenix");
        break;
      case _0x250a37:
        (_0xcf2900["aniName"] = "Sea Monster"),
          (_0xcf2900["upgradeText"] = "UPGRADED to Sea Monster!"),
          (_0xcf2900["aniCol"] = "#FF9000"),
          (_0xcf2900["skinName"] = "seamonster");
        break;
      case _0x5b1639:
        (_0xcf2900["aniName"] = "Land Monster"),
          (_0xcf2900["upgradeText"] = "UPGRADED to Land Monster!"),
          (_0xcf2900["aniCol"] = "#FF9000"),
          (_0xcf2900["skinName"] = "landmonster");
        break;
      case _0x448b86:
        (_0xcf2900["aniName"] = "Ice Monster"),
          (_0xcf2900["upgradeText"] = "UPGRADED to Ice Monster!"),
          (_0xcf2900["aniCol"] = "#FF9000"),
          (_0xcf2900["skinName"] = "icemonster");
        break;
      case _0x28027c:
        (_0xcf2900["aniName"] = "Dino Monster"),
          (_0xcf2900["upgradeText"] = "UPGRADED to Dino Monster!"),
          (_0xcf2900["aniCol"] = "#FF9000"),
          (_0xcf2900["skinName"] = "dinomonster");
        break;
      case _0x5b8090:
        (_0xcf2900["aniName"] = "Pigeon"),
          (_0xcf2900["upgradeText"] = "UPGRADED to Pigeon!\x0aHold W to fly around. "),
          (_0xcf2900["aniCol"] = "#FF9000"),
          (_0xcf2900["skinName"] = "pigeon/pigeon");
        break;
      case _0x65dffc:
        (_0xcf2900["aniName"] = "Toucan"),
          (_0xcf2900["upgradeText"] = "UPGRADED to Toucan!\x0aHold W to fly around. "),
          (_0xcf2900["aniCol"] = "#FF9000"),
          (_0xcf2900["skinName"] = "toucan/toucan");
        break;
      default:
        (_0xcf2900["aniName"] = "(Animal)"), (_0xcf2900["aniDesc"] = ""), (_0xcf2900["aniCol"] = "#000000"), (_0xcf2900["upgradeText"] = "UPGRADED!");
    }
    return _0xcf2900;
  };

function _0x58fd1b() {}
var _0x1d83bb = _0xe4ec38,
  _0x48c344 = _0x307a43;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344),
  (_0xe4ec38["prototype"]["abilityType"] = _0x20f85f),
  (_0xe4ec38["prototype"]["showHalloweenSkins"] = !![]),
  (_0xe4ec38["prototype"]["updateZ"] = function () {
    if (
      this["abilityType"] == _0x2cb97d ||
      this["abilityType"] == _0x30ff48 ||
      this["abilityType"] == _0x2cf6f9 ||
      this["abilityType"] == _0x5534ed ||
      this["abilityType"] == _0x4d10df ||
      this["abilityType"] == _0x602d06 ||
      this["abilityType"] == _0x4853ad
    )
      this["z"] = 0x186a2;
    else {
      if (
        this["abilityType"] == _0x4853ad ||
        this["abilityType"] == _0x4d10df ||
        this["abilityType"] == _0x4fa0a9 ||
        this["abilityType"] == _0x5c6809 ||
        this["abilityType"] == _0x1a645b ||
        this["abilityType"] == _0x3c9a9b ||
        this["abilityType"] == _0x2633db ||
        this["abilityType"] == _0x1b8b78 ||
        this["abilityType"] == _0x2e7544 ||
        this["abilityType"] == _0x2b3b0f ||
        this["abilityType"] == _0x1ef413 ||
        this["abilityType"] == _0x1b4a92 ||
        this["abilityType"] == _0x421f84 ||
        this["abilityType"] == _0x1c1a44 ||
        this["abilityType"] == _0x51b1b2 ||
        this["abilityType"] == _0x33c481 ||
        this["abilityType"] == _0xa43ca5 ||
        this["abilityType"] == _0x4abf68
      )
        this["z"] = 0x7d0;
      else {
        if (this["abilityType"] == _0x2e388a) this["z"] = 0x3ea;
        else {
          if (this["abilityType"] == _0x20275a) this["z"] = 0x2711;
          else {
            if (this["abilityType"] == _0x2b4fad) {
              if (this["specType"] == 0x1) this["z"] = 0x2711;
              else {
                if (this["specType"] == 0x2) this["z"] = 0x3f5;
                else {
                  if (this["specType"] == 0x3) this["z"] = 0x186a0;
                }
              }
            } else this["abilityType"] == _0x29c026 ? (this["z"] = 0x3f5) : (this["z"] = -0x98);
          }
        }
      }
    }
    if (this["abilityType"] == _0x3c2b00) {
      if (this["specType"] == 0x2) this["z"] = 0x2710 - this["rad"];
      else this["z"] = 0x3e9;
    }
  }),
  (_0xe4ec38["prototype"]["customDraw"] = function (_0x167b1d) {
    switch (this["abilityType"]) {
      case _0x26478a:
        _0x440ef0(0x0, 0x0, this["rad"], "#7EBCC0");
        break;
      case _0x331f6f:
      case _0x218c6a: {
        break;
      }
      case _0x533680:
        {
          _0x587de3["save"]();
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          (_0x587de3["globalAlpha"] = 0.4 * _0x3a25d5),
            _0x440ef0(0x0, 0x0, this["rad"], "#7EBCC0"),
            (_0x587de3["globalAlpha"] = 0x1 * _0x3a25d5),
            (_0x587de3["strokeStyle"] = "white"),
            _0x587de3["beginPath"]();
          var _0x33a9a0 = 0xa;
          _0x587de3["translate"](-0x5, this["rad"] * -0.7),
            _0x587de3["moveTo"](0x0, -_0x33a9a0),
            _0x587de3["lineTo"](0x0, _0x33a9a0),
            _0x587de3["moveTo"](-_0x33a9a0, -_0x33a9a0),
            _0x587de3["lineTo"](_0x33a9a0, _0x33a9a0),
            _0x587de3["moveTo"](_0x33a9a0, -_0x33a9a0),
            _0x587de3["lineTo"](-_0x33a9a0, _0x33a9a0),
            _0x587de3["moveTo"](-_0x33a9a0, 0x0),
            _0x587de3["lineTo"](_0x33a9a0, 0x0),
            (_0x587de3["lineWidth"] = 0x3),
            _0x587de3["stroke"](),
            _0x587de3["restore"]();
        }
        break;
      case _0x45cdc4:
        {
          _0x587de3["save"]();
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          (_0x587de3["globalAlpha"] = 0.15 * _0x3a25d5), _0x440ef0(0x0, 0x0, this["rad"], "#755A2A"), _0x587de3["restore"]();
        }
        break;
      case _0x1ef413:
        {
          _0x587de3["save"]();
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          _0x587de3["globalAlpha"] = 0x1 * _0x3a25d5;
          var _0x1c3d68 = this["getSkinImageObj"]("img/ability_sabertoothJawAttack.png");
          if (_0x1c3d68) {
            var _0x16a801 = Math["min"](0x1, (_0x168a54 - this["spawnTime"]) / 0xc8),
              _0x4df0f2 = this["rad"] - 2.5;
            _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
              _0x587de3["drawImage"](
                _0x1c3d68,
                0x0,
                0x0,
                _0x1c3d68["width"] * _0x16a801,
                _0x1c3d68["height"],
                -_0x4df0f2,
                -_0x4df0f2,
                0x2 * _0x4df0f2 * _0x16a801,
                0x2 * _0x4df0f2
              );
          }
          _0x587de3["restore"]();
        }
        break;
      case _0x5c6809:
        {
          _0x587de3["save"]();
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          _0x587de3["globalAlpha"] = 0x1 * _0x3a25d5;
          var _0x1c3d68 = this["getSkinImageObj"]("img/ability_claw.png");
          if (_0x1c3d68) {
            var _0x16a801 = Math["min"](0x1, (_0x168a54 - this["spawnTime"]) / 0xc8),
              _0x4df0f2 = this["rad"] - 2.5;
            _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
              _0x587de3["drawImage"](
                _0x1c3d68,
                0x0,
                0x0,
                _0x1c3d68["width"] * _0x16a801,
                _0x1c3d68["height"],
                -_0x4df0f2,
                -_0x4df0f2,
                0x2 * _0x4df0f2 * _0x16a801,
                0x2 * _0x4df0f2
              );
          }
          _0x587de3["restore"]();
        }
        break;
      case _0x602d06:
        {
          _0x587de3["save"]();
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          (_0x587de3["globalAlpha"] = 0.1 * _0x3a25d5), _0x440ef0(0x0, 0x0, this["rad"], "#5B7EC7"), (_0x587de3["globalAlpha"] = 0x1 * _0x3a25d5);
          var _0x102be7 = "img",
            _0x1c3d68 = this["getSkinImageObj"]("skins/volcano/kingdragon/" + this["speciesType"] + "/tail.png");
          if (_0x1c3d68) {
            var _0x16a801 = Math["min"](0x1, (_0x168a54 - this["spawnTime"]) / 0xc8),
              _0x4df0f2 = this["rad"] * 0.65;
            _0x587de3["rotate"](this["angle"]);
            var _0x7908a2 = 0x0,
              _0x23a770 = this["rad"],
              _0x2ca2e7 = _0x4df0f2 * 0x2,
              _0x5b714e = _0x4df0f2 * 0x2 * _0x16a801,
              _0x136a8a = 0.5,
              _0x1d5c83 = 1.25;
            _0x587de3["drawImage"](_0x1c3d68, _0x7908a2 + _0x2ca2e7 * -_0x136a8a, _0x23a770 + _0x5b714e * -_0x1d5c83, _0x2ca2e7, _0x5b714e);
          }
          _0x587de3["restore"]();
        }
        break;
      case _0x3c9a9b:
        {
          _0x587de3["save"]();
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          (_0x587de3["globalAlpha"] = 0.1 * _0x3a25d5), _0x440ef0(0x0, 0x0, this["rad"], "#5B7EC7"), (_0x587de3["globalAlpha"] = 0x1 * _0x3a25d5);
          var _0x102be7 = "skins/ocean/bluewhale/" + this["speciesType"];
          if (this["speciesSubType"] && this["speciesSubType"] > 0x0) _0x102be7 += "/" + this["speciesSubType"];
          var _0x223cb8 = this["speciesType"] === 0x1 || this["speciesType"] === 0x2 || this["speciesType"] === 0xc9 ? 0x1 : 0x2,
            _0x1c3d68 = this["getSkinImageObjForSeason"](_0x102be7 + "/ability_whaleTailHit.png", _0x223cb8);
          if (_0x1c3d68) {
            var _0x16a801 = Math["min"](0x1, (_0x168a54 - this["spawnTime"]) / 0xc8),
              _0x4df0f2 = this["rad"] * 0.85;
            _0x587de3["rotate"](this["angle"]);
            var _0x7908a2 = 0x0,
              _0x23a770 = this["rad"],
              _0x2ca2e7 = _0x4df0f2 * 0x2,
              _0x5b714e = _0x4df0f2 * 0x2 * _0x16a801,
              _0x136a8a = 0.5,
              _0x1d5c83 = 1.25;
            _0x587de3["drawImage"](_0x1c3d68, _0x7908a2 + _0x2ca2e7 * -_0x136a8a, _0x23a770 + _0x5b714e * -_0x1d5c83, _0x2ca2e7, _0x5b714e);
          }
          _0x587de3["restore"]();
        }
        break;
      case _0x4d10df:
        {
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          _0x587de3["save"]();
          var _0x6d7a72 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
            _0xa9a686 = 1.5,
            _0x462887 = 0x1,
            _0x90c0d = _0x462887 * Math["sin"](((0x2 * Math["PI"]) / _0xa9a686) * _0x6d7a72),
            _0x9b2d2b = _0x587de3["globalAlpha"];
          (_0x587de3["globalAlpha"] *= 0.6 * _0x90c0d), _0x587de3["rotate"](this["angle"]), (_0x587de3["globalAlpha"] = 0.15 * _0x3a25d5);
          if (this["specType2"] == 0x0) _0x440ef0(0x0, 0x0, this["rad"], "#96661C");
          else _0x440ef0(0x0, 0x0, this["rad"], "#e0dfde");
          _0x587de3["restore"](), _0x587de3["save"]();
          var _0x86c313 = this["specType2"] == 0x1 ? "arctic" : "land",
            _0x19a28c = "skins/" + _0x86c313 + "/bear/" + this["speciesType"] + "/slash.png",
            _0x1c3d68 = this["getSkinImageObj"](_0x19a28c);
          if (_0x1c3d68) {
            var _0x16a801 = Math["min"](0x1, (_0x168a54 - this["spawnTime"]) / 0xc8),
              _0x528bf5 = _0x549f3d((_0x168a54 - this["spawnTime"]) / 0x12c, 0x0, 0x1),
              _0x40e7d5 = -(-0.5 + _0x528bf5) * _0x2f9e35,
              _0x76c313 = this["angle"];
            _0x587de3["rotate"](this["angle"] + _0x40e7d5 * (this["specType"] == 0x0 ? 0x1 : -0x1));
            var _0x4df0f2 = -this["rad"] * 0x1,
              _0x7908a2 = 0x0,
              _0x23a770 = this["rad"],
              _0x2ca2e7 = _0x4df0f2 * 0x2,
              _0x5b714e = _0x4df0f2 * 0x2 * _0x16a801,
              _0x136a8a = 0.5,
              _0x1d5c83 = 0.8;
            _0x587de3["drawImage"](
              _0x1c3d68,
              _0x7908a2 + _0x2ca2e7 * -_0x136a8a,
              _0x23a770 + _0x5b714e * -_0x1d5c83 + _0x4df0f2,
              _0x2ca2e7,
              _0x5b714e
            );
          }
          _0x587de3["restore"]();
        }
        break;
      case _0x4853ad:
        {
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          _0x587de3["save"]();
          var _0x6d7a72 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
            _0xa9a686 = 1.5,
            _0x462887 = 0x1,
            _0x90c0d = _0x462887 * Math["sin"](((0x2 * Math["PI"]) / _0xa9a686) * _0x6d7a72),
            _0x9b2d2b = _0x587de3["globalAlpha"];
          (_0x587de3["globalAlpha"] *= 0.6 * _0x90c0d), _0x587de3["rotate"](this["angle"]), (_0x587de3["globalAlpha"] = 0.15 * _0x3a25d5);
          if (this["specType2"] == 0x0) _0x440ef0(0x0, 0x0, this["rad"], "#96661C");
          else _0x440ef0(0x0, 0x0, this["rad"], "#e0dfde");
          _0x587de3["restore"](), _0x587de3["save"]();
          var _0x102be7 = "skins/desert/gobibear/" + this["speciesType"] + "/claw" + this["specType"],
            _0x1c3d68 = this["getSkinImageObj"](_0x102be7 + ".png");
          if (_0x1c3d68) {
            var _0x16a801 = Math["min"](0x1, (_0x168a54 - this["spawnTime"]) / 0xc8),
              _0x528bf5 = _0x549f3d((_0x168a54 - this["spawnTime"]) / 0x12c, 0x0, 0x1),
              _0x40e7d5 = -(-0.5 + _0x528bf5) * _0x3d960f(0x5a),
              _0x76c313 = this["angle"];
            _0x587de3["rotate"](this["angle"] + _0x40e7d5 * (this["specType"] == 0x0 ? 0x1 : -0x1));
            var _0x4df0f2 = -this["rad"] * 0x1,
              _0x7908a2 = 0x0,
              _0x23a770 = this["rad"],
              _0x2ca2e7 = _0x4df0f2 * 0x2,
              _0x5b714e = _0x4df0f2 * 0x2 * _0x16a801,
              _0x136a8a = 0.5,
              _0x1d5c83 = 0.8;
            _0x587de3["drawImage"](
              _0x1c3d68,
              _0x7908a2 + _0x2ca2e7 * -_0x136a8a,
              _0x23a770 + _0x5b714e * -_0x1d5c83 + _0x4df0f2,
              _0x2ca2e7,
              _0x5b714e
            );
          }
          _0x587de3["restore"]();
        }
        break;
      case _0x4abf68:
        {
          var _0x6d7a72 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
            _0x32379d = _0x120bbb(_0x6d7a72, 0x1, 0.1, 0x1),
            _0x2b52f2 = 0x0,
            _0xa9a686 = 0x2,
            _0x462887 = 1.5;
          _0x2b52f2 = _0x462887 * Math["sin"](((0x2 * Math["PI"]) / _0xa9a686) * _0x6d7a72);
          var _0x54c52c = 0x1;
          for (i = 0x0; i < _0x54c52c; i++) {
            this["drawRad"] === undefined && ((this["drawRad"] = new Array()), (this["drawAngle"] = new Array()));
            this["drawRad"][i] == undefined &&
              (this["drawRad"]["push"](_0x103b73(0x5, 0xa) / 0xa), this["drawAngle"]["push"](_0x3d960f(_0x103b73(0x1, 0x168))));
            var _0x4f5004 = this["rad"] * this["drawRad"][i];
            _0x587de3["save"](), _0x587de3["rotate"](this["drawAngle"][i]), _0x587de3["save"]();
            var _0x3a25d5 = _0x587de3["globalAlpha"];
            (_0x587de3["globalAlpha"] = 0.1 - _0x32379d),
              _0x587de3["restore"](),
              _0x587de3["save"](),
              (_0x587de3["fillStyle"] = "white"),
              (_0x587de3["globalAlpha"] = 0.3 - _0x32379d);
            var _0x568206 = -_0x4f5004 * 0.6,
              _0x3a7f30 = -_0x4f5004 * 0.5 + 0xa * this["rPer"],
              _0x5b1675 = Math["max"](0x0, _0x4f5004 * 0.65 + _0x2b52f2) + 0x2;
            _0x440ef0(_0x568206, _0x3a7f30, _0x5b1675, "#654321");
            var _0x568206 = _0x4f5004 * 0.5,
              _0x3a7f30 = -_0x4f5004 * 0.5 - 0xa * this["rPer"],
              _0x5b1675 = Math["max"](0x0, _0x4f5004 * 0.73 - _0x2b52f2);
            _0x440ef0(_0x568206, _0x3a7f30, _0x5b1675, "#654321");
            var _0x568206 = _0x4f5004 * 0.6,
              _0x3a7f30 = _0x4f5004 * 0.5,
              _0x5b1675 = Math["max"](0x0, _0x4f5004 * 0.78 + _0x2b52f2);
            _0x440ef0(_0x568206, _0x3a7f30, _0x5b1675, "#654321");
            var _0x568206 = -_0x4f5004 * 0.5,
              _0x3a7f30 = _0x4f5004 * 0.5 + 0xa * this["rPer"],
              _0x5b1675 = Math["max"](0x0, _0x4f5004 * 0.6 + this["rPer"] - _0x2b52f2);
            _0x440ef0(_0x568206, _0x3a7f30, _0x5b1675, "#654321"), _0x587de3["restore"](), _0x587de3["restore"]();
          }
        }
        break;
      case _0x516caa:
        (_0x587de3["globalAlpha"] = 0.5), _0x440ef0(0x0, 0x0, this["rad"], "red");
        break;
      case _0x2cb97d:
        break;
      case _0x200999:
        break;
      case _0x5258d8:
        break;
      case _0x5781ad:
      case _0x36cab8:
      case _0x143de3:
      case _0x589e65:
      case _0x30ff48:
      case _0xa2e86:
      case _0x5a51dc:
      case _0x4c389e:
      case _0x3c4c1d:
      case _0x5d1b97:
        break;
      case _0x3c2b00:
        if (this["specType"] == 0x2) {
          var _0xa5341f = "closed",
            _0x4fb403 = "flytrap",
            _0x46a52a = "img/desert/" + _0x4fb403 + "/mouth/" + _0xa5341f + ".png",
            _0x1c3d68 = this["getSkinImageObj"](_0x46a52a);
          if (_0x1c3d68) {
            var _0x4df0f2 = this["rad"];
            _0x587de3["save"](),
              (_0x587de3["globalAlpha"] = 0.9),
              _0x587de3["rotate"](this["angle"] - _0x3d960f(-0x5a)),
              _0x587de3["drawImage"](_0x1c3d68, -_0x4df0f2, -_0x4df0f2, 0x2 * _0x4df0f2, 0x2 * _0x4df0f2),
              _0x587de3["restore"]();
          }
        } else {
        }
        break;
      case _0x2dce01:
        if (this["specType2"] == 0x1) {
          var _0x6d7a72 = _0x168a54 - this["spawnTime"],
            _0x3a25d5 = _0x587de3["globalAlpha"];
          _0x587de3["save"](), _0x587de3["rotate"](this["angle"] - -_0x2f9e35), (_0x587de3["globalAlpha"] = 0.9 * _0x3a25d5);
          if (_0x6d7a72 < 0xc8) {
            var _0x30a331 = 0x1 + Math["trunc"](_0x6d7a72 / 0x32),
              _0x46a52a = "skins/desert/camel/201/spit" + this["specType"] + "_pop" + _0x30a331 + ".png",
              _0x1c3d68 = this["getSkinImageObjForSeason"](_0x46a52a, 0x1);
            if (_0x1c3d68) {
              var _0x4df0f2 = this["rad"];
              _0x587de3["save"](),
                _0x587de3["drawImage"](_0x1c3d68, -_0x4df0f2, -_0x4df0f2, 0x2 * _0x4df0f2, 0x2 * _0x4df0f2),
                _0x587de3["restore"]();
            }
          } else {
            var _0x46a52a = "skins/desert/camel/201/spit" + this["specType"] + "_pop4.png",
              _0x1c3d68 = this["getSkinImageObjForSeason"](_0x46a52a, 0x1);
            if (_0x1c3d68) {
              var _0x4df0f2 = this["rad"];
              _0x587de3["save"](),
                _0x587de3["drawImage"](_0x1c3d68, -_0x4df0f2, -_0x4df0f2, 0x2 * _0x4df0f2, 0x2 * _0x4df0f2),
                _0x587de3["restore"]();
            }
          }
          _0x587de3["restore"]();
        } else {
          _0x587de3["save"]();
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          (_0x587de3["globalAlpha"] = 0.15 * _0x3a25d5), _0x440ef0(0x0, 0x0, this["rad"], "black"), _0x587de3["restore"]();
        }
        break;
      case _0x5534ed:
        {
          (this["drawEffectScale_Slow"] = !![]),
            (this["doesDrawEffectScale"] = !![]),
            (_0x587de3["globalAlpha"] = 0.2),
            _0x440ef0(0x0, 0x0, this["rad"] * 0.85, "white");
          var _0x371d06 = this["specType"] == 0x3 ? "_e" : "",
            _0x1c3d68 = this["getSkinImageObj"]("img/target" + _0x371d06 + ".png");
          if (_0x1c3d68) {
            var _0x4df0f2 = this["rad"];
            _0x587de3["save"](),
              (_0x587de3["globalAlpha"] = 0.5),
              _0x587de3["drawImage"](_0x1c3d68, -_0x4df0f2, -_0x4df0f2, 0x2 * _0x4df0f2, 0x2 * _0x4df0f2),
              _0x587de3["restore"]();
          }
          _0x587de3["save"]();
          if (this["is1v1Target"] == 0x1 && this["timerTxt"] != null)
            (_0x587de3["globalAlpha"] = 0x1), (this["timerTxt"]["x"] = 0x0), (this["timerTxt"]["y"] = 0x0), this["timerTxt"]["draw"]();
          else
            this["is1v1Target"] == 0x2 &&
              this["timerTxt"] != null &&
              ((_0x587de3["globalAlpha"] = 0x1), (this["timerTxt"]["x"] = 0x0), (this["timerTxt"]["y"] = 0x0), this["timerTxt"]["draw"]());
          _0x587de3["restore"]();
        }
        break;
      case _0x2cf6f9:
        {
          _0x587de3["globalAlpha"] = 0.5;
        }
        break;
      case _0x1b8b78:
        {
          _0x587de3["save"]();
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          (_0x587de3["globalAlpha"] = 0.05 * _0x3a25d5), _0x440ef0(0x0, 0x0, this["rad"], "#B32E10"), (_0x587de3["globalAlpha"] = 0x1 * _0x3a25d5);
          var _0x102be7 = "skins/ocean/kingcrab/" + this["speciesType"],
            _0x223cb8 = this["speciesType"] === 0x1 || this["speciesType"] === 0x2 || this["speciesType"] === 0xcc ? 0x1 : 0x2,
            _0x1c3d68 = this["getSkinImageObjForSeason"](_0x102be7 + "/ability_crabSmash" + this["specType"] + ".png", _0x223cb8);
          if (_0x1c3d68) {
            var _0x528bf5 = _0x549f3d((_0x168a54 - this["spawnTime"]) / 0xc8, 0x0, 0x1),
              _0x13a9db = this["specType"] == 0x1 ? -0x1 : 0x1,
              _0x40e7d5 = -(-0.2 + _0x528bf5) * _0x3d960f(-0x5a * _0x13a9db);
            _0x40e7d5 = _0x13a9db * (0.3 + _0x528bf5) + _0x3d960f(_0x13a9db * -0x1e);
            var _0x4df0f2 = this["rad"] * 0.6;
            _0x587de3["rotate"](this["angle"] + _0x40e7d5);
            var _0x7908a2 = 0x0,
              _0x23a770 = this["rad"],
              _0x2ca2e7 = _0x4df0f2 * 0x2 * 0.7,
              _0x5b714e = _0x4df0f2 * 0x2,
              _0x136a8a = 0.75,
              _0x1d5c83 = 0.95;
            this["specType"] == 0x1 && ((_0x136a8a = 0.25), (_0x1d5c83 = 0.95)),
              _0x587de3["drawImage"](_0x1c3d68, _0x7908a2 + _0x2ca2e7 * -_0x136a8a, _0x23a770 + _0x5b714e * -_0x1d5c83, _0x2ca2e7, _0x5b714e);
          }
          _0x587de3["restore"]();
        }
        break;
      case _0x2633db:
        {
          _0x587de3["save"]();
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          (_0x587de3["globalAlpha"] = 0.05 * _0x3a25d5), _0x440ef0(0x0, 0x0, this["rad"], "#E4E7C8"), (_0x587de3["globalAlpha"] = 0x1 * _0x3a25d5);
          var _0x102be7 = "skins/land/elephant/" + this["speciesType"],
            _0x1c3d68 = this["getSkinImageObj"](_0x102be7 + "/ability_elephantTrunkSmack.png");
          console["log"](_0x102be7);
          if (_0x1c3d68) {
            var _0x528bf5 = _0x549f3d((_0x168a54 - this["spawnTime"]) / 0x12c, 0x0, 0x1),
              _0x40e7d5 = -(-0.5 + _0x528bf5) * _0x2f9e35,
              _0x4df0f2 = this["rad"] * 0.6;
            _0x587de3["rotate"](this["angle"] + _0x40e7d5);
            var _0x7908a2 = 0x0,
              _0x23a770 = this["rad"],
              _0x2ca2e7 = _0x4df0f2 * 0x2 * 0.7,
              _0x5b714e = _0x4df0f2 * 0x2,
              _0x136a8a = 0.75,
              _0x1d5c83 = 0.95;
            _0x587de3["drawImage"](_0x1c3d68, _0x7908a2 + _0x2ca2e7 * -_0x136a8a, _0x23a770 + _0x5b714e * -_0x1d5c83, _0x2ca2e7, _0x5b714e);
          }
          _0x587de3["restore"]();
        }
        break;
      case _0x1a645b:
        {
        }
        break;
      case _0x2e7544:
        {
          _0x587de3["save"]();
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          (_0x587de3["globalAlpha"] = 0.25 * _0x3a25d5), _0x440ef0(0x0, 0x0, this["rad"], "#44d31f"), (_0x587de3["globalAlpha"] = 0x1 * _0x3a25d5);
          var _0x223cb8 = this["speciesType"] === 0x1 || this["speciesType"] === 0x64 || this["speciesType"] === 0xc9 ? 0x1 : 0x2,
            _0x1c3d68 = this["getSkinImageObjForSeason"]("skins/land/croc/" + this["speciesType"] + "/ability.png", _0x223cb8);
          if (_0x1c3d68) {
            var _0x16a801 = Math["min"](0x1, (_0x168a54 - this["spawnTime"]) / 0xc8),
              _0x4df0f2 = this["rad"] * 0.6;
            _0x587de3["rotate"](this["angle"]);
            var _0x7908a2 = 0x0,
              _0x23a770 = this["rad"],
              _0x2ca2e7 = _0x4df0f2 * 2.5,
              _0x5b714e = _0x4df0f2 * 2.5 * _0x16a801,
              _0x136a8a = 0.5,
              _0x1d5c83 = 0.95;
            _0x587de3["drawImage"](_0x1c3d68, _0x7908a2 + _0x2ca2e7 * -_0x136a8a, _0x23a770 + _0x5b714e * -_0x1d5c83, _0x2ca2e7, _0x5b714e),
              _0x587de3["rotate"](Math["PI"]);
            var _0x7908a2 = 0x0,
              _0x23a770 = this["rad"] * 0.5,
              _0x2ca2e7 = _0x4df0f2 * 2.5,
              _0x5b714e = _0x4df0f2 * 2.5 * _0x16a801,
              _0x136a8a = 0.5,
              _0x1d5c83 = 0.95;
            _0x587de3["drawImage"](_0x1c3d68, _0x7908a2 + _0x2ca2e7 * -_0x136a8a, _0x23a770 + _0x5b714e * -_0x1d5c83, _0x2ca2e7, _0x5b714e);
          }
          _0x587de3["restore"]();
        }
        break;
      case _0x2b3b0f:
        {
          _0x587de3["save"]();
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          (_0x587de3["globalAlpha"] = 0.25 * _0x3a25d5), _0x440ef0(0x0, 0x0, this["rad"], "#44d31f");
          var _0x223cb8 = this["speciesType"] === 0x1 || this["speciesType"] === 0x2 ? 0x1 : this["mopeSeasonID"],
            _0x102be7 = "skins/land/boaconstrictor/" + this["speciesType"];
          _0x587de3["globalAlpha"] = 0x1 * _0x3a25d5;
          var _0x1c3d68 = this["getSkinImageObjForSeason"](_0x102be7 + "/ability_boabite.png", _0x223cb8);
          if (_0x1c3d68) {
            var _0x16a801 = Math["min"](0x1, (_0x168a54 - this["spawnTime"]) / 0xc8),
              _0x4df0f2 = this["rad"] * 0.6;
            _0x587de3["rotate"](this["angle"]);
            var _0x7908a2 = 0x0,
              _0x23a770 = this["rad"],
              _0x2ca2e7 = _0x4df0f2 * 2.5,
              _0x5b714e = _0x4df0f2 * 2.5 * _0x16a801,
              _0x136a8a = 0.5,
              _0x1d5c83 = 0.95;
            _0x587de3["drawImage"](_0x1c3d68, _0x7908a2 + _0x2ca2e7 * -_0x136a8a, _0x23a770 + _0x5b714e * -_0x1d5c83, _0x2ca2e7, _0x5b714e),
              _0x587de3["rotate"](Math["PI"]);
            var _0x7908a2 = 0x0,
              _0x23a770 = this["rad"] * 0.5,
              _0x2ca2e7 = _0x4df0f2 * 2.5,
              _0x5b714e = _0x4df0f2 * 2.5 * _0x16a801,
              _0x136a8a = 0.5,
              _0x1d5c83 = 0.95;
            _0x587de3["drawImage"](_0x1c3d68, _0x7908a2 + _0x2ca2e7 * -_0x136a8a, _0x23a770 + _0x5b714e * -_0x1d5c83, _0x2ca2e7, _0x5b714e);
          }
          _0x587de3["restore"]();
        }
        break;
      case _0x3718b1:
        {
          _0x587de3["save"]();
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          (_0x587de3["globalAlpha"] = 0.1 * _0x3a25d5), _0x440ef0(0x0, 0x0, this["rad"], "#755A2A"), (_0x587de3["globalAlpha"] = 0x1 * _0x3a25d5);
          var _0x102be7 = "skins/land/",
            _0x223cb8 = this["speciesType"] === 0xcc ? 0x1 : this["mopeSeasonID"],
            _0x1c3d68 = this["getSkinImageObjForSeason"](_0x102be7 + "/tiger/" + this["speciesType"] + "/ability_tigerJump.png", _0x223cb8);
          if (_0x1c3d68) {
            var _0x16a801 = Math["min"](0x1, (_0x168a54 - this["spawnTime"]) / 0x64),
              _0x4df0f2 = this["rad"] * 1.1;
            _0x587de3["rotate"](this["angle"]);
            var _0x7908a2 = 0x0,
              _0x23a770 = this["rad"],
              _0x2ca2e7 = _0x4df0f2 * 0x2,
              _0x5b714e = _0x4df0f2 * 0x2 * _0x16a801,
              _0x136a8a = 0.5,
              _0x1d5c83 = 0x1;
            _0x587de3["drawImage"](_0x1c3d68, _0x7908a2 + _0x2ca2e7 * -_0x136a8a, _0x23a770 + _0x5b714e * -_0x1d5c83, _0x2ca2e7, _0x5b714e);
          }
          _0x587de3["restore"]();
        }
        break;
      case _0x1c1a44:
        {
          _0x587de3["save"]();
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          (_0x587de3["globalAlpha"] = 0.05 * _0x3a25d5), _0x440ef0(0x0, 0x0, this["rad"], "#44d31f"), (_0x587de3["globalAlpha"] = 0x1 * _0x3a25d5);
          var _0xedc626 = this["getSkinImageObj"]("img/ability_pounce2.png"),
            _0x84d538 = this["getSkinImageObj"]("img/ability_pounce1.png");
          if (_0xedc626 && _0x84d538) {
            var _0x16a801 = Math["min"](0x1, (_0x168a54 - this["spawnTime"]) / 0xc8),
              _0x4df0f2 = this["rad"] * 0.4;
            _0x587de3["rotate"](this["angle"]);
            var _0x7908a2 = 0x0,
              _0x23a770 = this["rad"],
              _0x2ca2e7 = _0x4df0f2 * 2.5,
              _0x5b714e = _0x4df0f2 * 2.5 * _0x16a801,
              _0x136a8a = 0.5,
              _0x1d5c83 = 0.95;
            _0x587de3["drawImage"](_0xedc626, _0x7908a2 + _0x2ca2e7 * -_0x136a8a, _0x23a770 + _0x5b714e * -_0x1d5c83, _0x2ca2e7, _0x5b714e),
              (_0x4df0f2 = this["rad"] * 0.6);
            var _0x7908a2 = 0x0,
              _0x23a770 = this["rad"] * 0.5,
              _0x2ca2e7 = _0x4df0f2 * 2.5,
              _0x5b714e = _0x4df0f2 * 2.5 * _0x16a801,
              _0x136a8a = 0.5,
              _0x1d5c83 = 0.95;
            _0x587de3["drawImage"](_0x84d538, _0x7908a2 + _0x2ca2e7 * -_0x136a8a, _0x23a770 + _0x5b714e * -_0x1d5c83, _0x2ca2e7, _0x5b714e);
          }
          _0x587de3["restore"]();
        }
        break;
      case _0x421f84:
        {
          _0x587de3["save"]();
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          (_0x587de3["globalAlpha"] = 0.05 * _0x3a25d5), _0x440ef0(0x0, 0x0, this["rad"], "#E4E7C8"), (_0x587de3["globalAlpha"] = 0x1 * _0x3a25d5);
          var _0x1215ca = "skins/land/tiger/" + this["speciesType"] + "/ability_tigerSlash" + this["specType"] + ".png",
            _0x1c3d68 = this["getSkinImageObj"](_0x1215ca);
          if (_0x1c3d68) {
            var _0x528bf5 = _0x549f3d((_0x168a54 - this["spawnTime"]) / 0x12c, 0x0, 0x1),
              _0x40e7d5 = (this["specType"] == 0x1 ? 0x1 : -0x1) * (-0.6 + _0x528bf5) * _0x3d960f(0x5a),
              _0x4df0f2 = this["rad"] * 1.2;
            _0x587de3["rotate"](this["angle"] + _0x40e7d5);
            var _0x7908a2 = 0x0,
              _0x23a770 = this["rad"],
              _0x2ca2e7 = _0x4df0f2 * 0x2 * 0.7,
              _0x5b714e = _0x4df0f2 * 0x2,
              _0x136a8a = 0.2,
              _0x1d5c83 = 0.5;
            _0x587de3["drawImage"](_0x1c3d68, _0x7908a2 + _0x2ca2e7 * -_0x136a8a, _0x23a770 + _0x5b714e * -_0x1d5c83, _0x2ca2e7, _0x5b714e);
          }
          _0x587de3["restore"]();
        }
        break;
      case _0x33c481:
        {
          _0x587de3["save"]();
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          _0x587de3["globalAlpha"] = 0x1 * _0x3a25d5;
          var _0x223cb8 =
              this["speciesType"] === 0xc9 || this["speciesType"] === 0x2 || this["speciesType"] === 0x1 || this["speciesType"] === 0x64
                ? 0x1
                : this["mopeSeasonID"],
            _0x5721ad = _0x223cb8 === 0x1 ? "" : this["specType"],
            _0x37b5f9 = "skins/land/zebra/" + this["speciesType"] + "/kick" + _0x5721ad + ".png";
          console["log"](_0x37b5f9);
          var _0x1c3d68 = this["getSkinImageObjForSeason"](_0x37b5f9, _0x223cb8);
          if (_0x1c3d68) {
            var _0x16a801 = Math["min"](0x1, (_0x168a54 - this["spawnTime"]) / 0xc8),
              _0x4df0f2 = this["rad"] * 0.6;
            _0x587de3["rotate"](this["angle"]);
            var _0x7908a2 = 0x0,
              _0x23a770 = this["rad"],
              _0x2ca2e7 = _0x4df0f2 * 0x2,
              _0x5b714e = _0x4df0f2 * 0x3 * _0x16a801,
              _0x136a8a = 0.3,
              _0x1d5c83 = 0x1;
            _0x587de3["drawImage"](_0x1c3d68, _0x7908a2 + _0x2ca2e7 * -_0x136a8a, _0x23a770 + _0x5b714e * -_0x1d5c83, _0x2ca2e7, _0x5b714e);
          }
          _0x587de3["restore"]();
        }
        break;
      case _0x51b1b2:
        {
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          _0x587de3["save"]();
          let _0x2f335e = 0x1;
          var _0x9b2d2b = _0x587de3["globalAlpha"];
          (_0x587de3["globalAlpha"] *= 0.6 * _0x2f335e),
            _0x587de3["rotate"](this["angle"]),
            (_0x587de3["globalAlpha"] = 0.15 * _0x3a25d5),
            _0x440ef0(this["rad"] * 0.3, 0x0, this["rad"] * (0.9 + 0.12 * _0x2f335e), "#E4E7C8"),
            _0x440ef0(-this["rad"] * 0.3, 0x0, this["rad"] * (1.05 + 0.09 * _0x2f335e), "#E4E7C8"),
            (_0x587de3["globalAlpha"] = _0x9b2d2b),
            _0x587de3["restore"](),
            _0x587de3["save"]();
          let _0x4c1aba = "skins/land/giraffe/" + this["speciesType"];
          this["speciesType"] == 0xca && (_0x4c1aba += "/" + this["speciesSubType"]);
          _0x4c1aba += "/stomp.png";
          var _0x1c3d68 = this["getSkinImageObj"](_0x4c1aba);
          if (_0x1c3d68) {
            var _0x16a801 = Math["min"](0x1, (_0x168a54 - this["spawnTime"]) / 0xc8),
              _0x76c313 = this["angle"];
            _0x587de3["rotate"](_0x76c313);
            var _0x4df0f2 = -this["rad"] * 0x1,
              _0x7908a2 = 0x0,
              _0x23a770 = this["rad"],
              _0x2ca2e7 = _0x4df0f2 * 0x3,
              _0x5b714e = _0x4df0f2 * 0x2 * _0x16a801,
              _0x136a8a = 0.5,
              _0x1d5c83 = 0.7;
            _0x587de3["drawImage"](
              _0x1c3d68,
              _0x7908a2 + _0x2ca2e7 * -_0x136a8a,
              _0x23a770 + _0x5b714e * -_0x1d5c83 + _0x4df0f2,
              _0x2ca2e7,
              _0x5b714e
            );
          }
          _0x587de3["restore"]();
        }
        break;
      case _0xa43ca5:
        {
          _0x587de3["save"]();
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          (_0x587de3["globalAlpha"] = 0x1 * _0x3a25d5), _0x587de3["rotate"](this["angle"]);
          var _0x223cb8 = this["speciesType"] === 0x1 || this["speciesType"] === 0x2 || this["speciesType"] === 0xc9 ? 0x1 : this["mopeSeasonID"],
            _0x1c3d68 = this["getSkinImageObjForSeason"]("skins/ocean/shark/" + this["speciesType"] + "/ability.png", _0x223cb8);
          if (_0x1c3d68) {
            var _0x32379d = Math["min"](0x1, (_0x168a54 - this["spawnTime"]) / 0xc8);
            _0x587de3["globalAlpha"] = 0.9;
            var _0x4df0f2 = -this["rad"] * 1.75,
              _0x7908a2 = 0x0,
              _0x23a770 = this["rad"],
              _0x2ca2e7 = _0x4df0f2 * 0x2,
              _0x5b714e = _0x4df0f2 * 0x2 * _0x32379d,
              _0x136a8a = 0.5,
              _0x1d5c83 = 0.9;
            _0x587de3["drawImage"](
              _0x1c3d68,
              _0x7908a2 + _0x2ca2e7 * -_0x136a8a,
              _0x23a770 + _0x5b714e * -_0x1d5c83 + _0x4df0f2,
              _0x2ca2e7,
              _0x5b714e
            );
          }
          _0x587de3["restore"]();
        }
        break;
      case _0x2ca99e:
        {
          _0x587de3["save"]();
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          _0x587de3["globalAlpha"] = 0.5 * _0x3a25d5;
          var _0x4df0f2 = this["rad"],
            _0x6d7a72 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
            _0xa9a686 = 2.2,
            _0x238f57 = 6.5 * Math["cos"](((0x2 * Math["PI"]) / _0xa9a686) * _0x6d7a72),
            _0x3210d8 = 6.5 * Math["sin"](((0x2 * Math["PI"]) / _0xa9a686) * _0x6d7a72);
          (_0x587de3["globalAlpha"] = 0.3 * _0x3a25d5),
            _0x440ef0(0x0, 0x0, _0x4df0f2, _0x9d1ce2),
            (_0x587de3["globalAlpha"] = 0.5 * _0x3a25d5),
            _0x440ef0(0x0 + _0x238f57 / 4.5 + this["rPer"], 0x1 + _0x3210d8 / 1.5, Math["max"](0x0, _0x4df0f2 - 0xe), "#de9d23"),
            _0x587de3["restore"]();
        }
        break;
      case _0x20275a:
        {
          _0x587de3["save"]();
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          _0x587de3["globalAlpha"] = 0.5 * _0x3a25d5;
          var _0x4df0f2 = this["rad"],
            _0x6d7a72 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
            _0xa9a686 = 2.2,
            _0x238f57 = 6.5 * Math["cos"](((0x2 * Math["PI"]) / _0xa9a686) * _0x6d7a72),
            _0x3210d8 = 6.5 * Math["sin"](((0x2 * Math["PI"]) / _0xa9a686) * _0x6d7a72);
          (_0x587de3["globalAlpha"] = 0.3 * _0x3a25d5),
            _0x440ef0(0x0, 0x0, _0x4df0f2, "#2CAAC4"),
            (_0x587de3["globalAlpha"] = 0.5 * _0x3a25d5),
            _0x440ef0(0x0 + _0x238f57 / 4.5 + this["rPer"], 0x1 + _0x3210d8 / 1.5, Math["max"](0x0, _0x4df0f2 - 0xe), "#29A0BA"),
            _0x440ef0(0x0 + _0x238f57 / 1.5 - this["rPer"] * 0x2, _0x3210d8, Math["max"](0x0, _0x4df0f2 - 38.5 + _0x3210d8 / 0x5), "#2B8CAA"),
            _0x440ef0(0x0 + _0x238f57 / 1.5 - this["rPer"] * 0x2, _0x3210d8, Math["max"](0x0, _0x4df0f2 - 54.5 + _0x3210d8 / 0xb), "#28829E"),
            _0x587de3["restore"]();
        }
        break;
      case _0x2b4fad: {
        if (this["specType"] == 0x0 || this["specType"] == 0x2 || this["specType"] == 0x3) {
          _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0.3);
          var _0x4883e4 = "",
            _0x1c3d68 = this["getSkinImageObj"]("skins/ocean/pelican/" + this["speciesType"] + "/ability_pelican" + _0x4883e4 + ".png");
          if (_0x1c3d68) {
            var _0x4df0f2 = -this["rad"] * 1.5;
            _0x587de3["rotate"](this["angle"]);
            var _0x7908a2 = 0x0,
              _0x23a770 = this["rad"],
              _0x2ca2e7 = _0x4df0f2,
              _0x5b714e = _0x4df0f2,
              _0x136a8a = 0.5,
              _0x1d5c83 = 0.5;
            _0x587de3["drawImage"](
              _0x1c3d68,
              _0x7908a2 + _0x2ca2e7 * -_0x136a8a,
              _0x23a770 + _0x5b714e * -_0x1d5c83 + _0x4df0f2,
              _0x2ca2e7,
              _0x5b714e
            );
          }
          _0x587de3["restore"]();
        }
        break;
      }
      case _0x1b4a92:
        {
          if (this["specType"] == 0x0) {
            _0x587de3["save"]();
            var _0x3a25d5 = _0x587de3["globalAlpha"];
            (_0x587de3["globalAlpha"] = 0.15 * _0x3a25d5), (_0x587de3["globalAlpha"] = 0x1 * _0x3a25d5);
            var _0x1c3d68 = this["getSkinImageObjForSeason"](
              "skins/land/trex/" + this["speciesType"] + "/ability_trexBite.png",
              this["mopeSeasonID"]
            );
            if (_0x1c3d68) {
              var _0x16a801 = Math["min"](0x1, (_0x168a54 - this["spawnTime"]) / 0xc8),
                _0x4df0f2 = this["rad"] * 0.6;
              _0x587de3["rotate"](this["angle"]);
              var _0x7908a2 = 0x0,
                _0x23a770 = this["rad"],
                _0x2ca2e7 = _0x4df0f2 * 2.5,
                _0x5b714e = _0x4df0f2 * 2.5 * _0x16a801,
                _0x136a8a = 0.5,
                _0x1d5c83 = 0.95;
              _0x587de3["drawImage"](_0x1c3d68, _0x7908a2 + _0x2ca2e7 * -_0x136a8a, _0x23a770 + _0x5b714e * -_0x1d5c83, _0x2ca2e7, _0x5b714e),
                _0x587de3["rotate"](Math["PI"]);
              var _0x7908a2 = 0x0,
                _0x23a770 = this["rad"] * 0.5,
                _0x2ca2e7 = _0x4df0f2 * 2.5,
                _0x5b714e = _0x4df0f2 * 2.5 * _0x16a801,
                _0x136a8a = 0.5,
                _0x1d5c83 = 0.95;
              _0x587de3["drawImage"](_0x1c3d68, _0x7908a2 + _0x2ca2e7 * -_0x136a8a, _0x23a770 + _0x5b714e * -_0x1d5c83, _0x2ca2e7, _0x5b714e);
            }
            var _0x1c3d68 = this["getSkinImageObj"]("skins/land/trex/" + this["speciesType"] + "/trex-head.png", this["mopeSeasonID"]);
            if (_0x1c3d68) {
              var _0x16a801 = Math["min"](0x1, (_0x168a54 - this["spawnTime"]) / 0xc8),
                _0x4df0f2 = this["rad"] * 1.5;
              _0x587de3["rotate"](_0x3d960f(0xb4));
              var _0x7908a2 = 0x0,
                _0x23a770 = this["rad"],
                _0x2ca2e7 = _0x4df0f2 * 0x2,
                _0x5b714e = _0x4df0f2 * 0x2 * _0x16a801,
                _0x136a8a = 0.5,
                _0x1d5c83 = -1.25;
              _0x587de3["drawImage"](_0x1c3d68, _0x7908a2 + _0x2ca2e7 * -_0x136a8a, _0x1d5c83 * _0x4df0f2, _0x2ca2e7, _0x5b714e);
            }
            _0x587de3["restore"]();
          }
        }
        break;
      case _0x2059c1:
        {
          _0x587de3["save"]();
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          (_0x587de3["globalAlpha"] = 0.15 * _0x3a25d5), _0x440ef0(0x0, 0x0, this["rad"], "#6D7471"), _0x587de3["restore"]();
        }
        break;
      case _0x2408ce:
        {
          _0x587de3["save"]();
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          (_0x587de3["globalAlpha"] = 0.15 * _0x3a25d5), _0x440ef0(0x0, 0x0, this["rad"], "#6D7471"), _0x587de3["restore"]();
        }
        break;
      case _0x4e1dcf:
        {
          _0x587de3["save"]();
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          (_0x587de3["globalAlpha"] = 0.15 * _0x3a25d5), _0x440ef0(0x0, 0x0, this["rad"], "#6D7471"), _0x587de3["restore"]();
        }
        break;
      case _0x29bac7:
        {
          _0x587de3["save"]();
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          (_0x587de3["globalAlpha"] = 0.15 * _0x3a25d5), _0x440ef0(0x0, 0x0, this["rad"], "#f2f2f2"), _0x587de3["restore"]();
        }
        break;
      case _0x2e388a:
        {
          _0x587de3["save"](), _0x587de3["rotate"](this["angle"] + _0x3d960f(0xb4));
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          _0x587de3["globalAlpha"] = 0.8 * _0x3a25d5;
          var _0x1c3d68 = this["getSkinImageObj"]("img/wave.png");
          if (_0x1c3d68) {
            var _0x4df0f2 = this["rad"];
            _0x587de3["drawImage"](_0x1c3d68, -_0x4df0f2, -_0x4df0f2, 0x2 * _0x4df0f2, 0x2 * _0x4df0f2);
          }
          _0x587de3["restore"]();
        }
        break;
      case _0x16de96:
        {
          if (this["animalType"] !== undefined && this["animalType"] == _0x8151b9 && this["speciesType"] == 0xcc) {
            _0x587de3["save"]();
            var _0x3a25d5 = _0x587de3["globalAlpha"];
            _0x587de3["globalAlpha"] = 0.9 * _0x3a25d5;
            var _0x223cb8 = 0x1,
              _0x1c3d68 = this["getSkinImageObjForSeason"]("skins/land/hippo/204/roar.png", _0x223cb8);
            if (_0x1c3d68) {
              var _0x4df0f2 = this["rad"];
              _0x587de3["drawImage"](_0x1c3d68, -_0x4df0f2, -_0x4df0f2, 0x2 * _0x4df0f2, 0x2 * _0x4df0f2);
            }
            _0x587de3["restore"]();
          } else {
            _0x587de3["save"]();
            var _0x3a25d5 = _0x587de3["globalAlpha"];
            (_0x587de3["globalAlpha"] = 0.2 * _0x3a25d5), _0x440ef0(0x0, 0x0, this["rad"], "#746B3E"), _0x587de3["restore"]();
          }
        }
        break;
      case _0x40acce:
        {
          _0x587de3["save"]();
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          (_0x587de3["globalAlpha"] = 0.5 * _0x3a25d5),
            _0x440ef0(0x0, 0x0, this["rad"], "#62C5FF"),
            (_0x587de3["globalAlpha"] = 0x1 * _0x3a25d5),
            (_0x587de3["strokeStyle"] = "#62C5FF"),
            _0x587de3["beginPath"]();
          var _0x27b164 = this["rad"] * -0.7,
            _0x24eec8 = -0x5,
            _0x502eb6 = 0xa;
          _0x587de3["moveTo"](_0x27b164, _0x24eec8),
            _0x587de3["lineTo"](_0x27b164 - _0x502eb6 * 0.4, _0x24eec8 + _0x502eb6),
            _0x587de3["lineTo"](_0x27b164 + _0x502eb6 * 0.4, _0x24eec8 + _0x502eb6 * 0.7),
            _0x587de3["lineTo"](_0x27b164 + _0x502eb6 * 0.4 * 0.5, _0x24eec8 + _0x502eb6 * 0x2),
            (_0x587de3["lineWidth"] = 0x3),
            _0x587de3["stroke"](),
            _0x587de3["restore"]();
        }
        break;
      case _0x3cc7a4:
        {
          if (_0x34fedb || _0x57ae6d != 0x3) {
            var _0x2e79e2 = this["getSkinImageObj"]("img/whirlpool2.png");
            if (_0x2e79e2) {
              var _0x4df0f2 = this["rad"];
              _0x587de3["save"](),
                (_0x587de3["globalAlpha"] = 0.5),
                _0x587de3["drawImage"](_0x2e79e2, -_0x4df0f2, -_0x4df0f2, 0x2 * _0x4df0f2, 0x2 * _0x4df0f2),
                _0x587de3["restore"]();
            } else _0x440ef0(0x0, 0x0, this["rad"], "#2D93B0");
          } else {
            _0x587de3["save"]();
            var _0x4df0f2 = Math["max"](0x0, this["rad"] - 0x1e),
              _0x3a25d5 = _0x587de3["globalAlpha"],
              _0x6d7a72 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
              _0xa9a686 = 2.2,
              _0x238f57 = 10.5 * Math["cos"](((0x2 * Math["PI"]) / _0xa9a686) * _0x6d7a72),
              _0x3210d8 = 6.5 * Math["sin"](((0x2 * Math["PI"]) / _0xa9a686) * _0x6d7a72);
            (_0x587de3["globalAlpha"] = 0.05 * _0x3a25d5),
              _0x440ef0(
                0x0 + _0x238f57 + 0x1e / 0x2 - this["rPer"],
                0x0 + _0x3210d8 + 0x28 / 0x2 - this["rPer"],
                Math["max"](0x0, _0x4df0f2 - 0x6),
                "white"
              ),
              (_0x587de3["globalAlpha"] = 0.1 * _0x3a25d5),
              _0x440ef0(
                0x0 + _0x238f57 + 0x1e / 0x2 - this["rPer"],
                0x0 + _0x3210d8 / 0x2 - this["rPer"],
                Math["max"](0x0, _0x4df0f2 - 0x6),
                "#2D93B0"
              ),
              (_0x587de3["globalAlpha"] = 0.15 * _0x3a25d5),
              _0x440ef0(0x0 + _0x238f57 / 1.5 - this["rPer"] * 0x2, _0x3210d8, Math["max"](0x0, _0x4df0f2 - 54.5 + _0x3210d8 / 0xb), "#28829E"),
              _0x587de3["restore"](),
              _0x587de3["save"]();
            var _0x3a25d5 = _0x587de3["globalAlpha"],
              _0x4df0f2 = Math["max"](0x0, this["rad"] - 0x1e),
              _0x6d7a72 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
              _0xa9a686 = 3.2,
              _0x238f57 = 0x32 * Math["cos"](((0x2 * Math["PI"]) / _0xa9a686) * _0x6d7a72),
              _0x3210d8 = 0x32 * Math["sin"](((0x2 * Math["PI"]) / _0xa9a686) * _0x6d7a72);
            (_0x587de3["globalAlpha"] = 0.05 * _0x3a25d5),
              _0x440ef0(0x0, 0x0, _0x4df0f2, "#2CAAC4"),
              (_0x587de3["globalAlpha"] = 0.15 * _0x3a25d5),
              _0x440ef0(0x0 + _0x238f57 / 0x2 - this["rPer"], 0x0 + _0x3210d8 / 0x2 - this["rPer"], Math["max"](0x0, _0x4df0f2 * 0.95), "#2D93B0"),
              (_0x587de3["globalAlpha"] = 0.25 * _0x3a25d5),
              _0x440ef0(0x0 + _0x238f57 / 4.5 + this["rPer"], 0x1 + _0x3210d8 / 1.5, Math["max"](0x0, _0x4df0f2 * 0.85), "#28829E"),
              _0x587de3["restore"]();
            var _0x2e79e2 = this["getSkinImageObj"]("img/whirlpool2.png");
            if (_0x2e79e2) {
              var _0x4df0f2 = this["rad"] - 0x1e,
                _0x23fd7a = 0x5 / 0x3c,
                _0x7963d7 = 0x3e8 / _0x23fd7a,
                _0x16a801 = ((_0x168a54 - this["spawnTime"]) % _0x7963d7) / _0x7963d7,
                _0x22a438 = _0x16a801 * 0x2 * Math["PI"];
              (_0x23fd7a = 0x8 / 0x3c),
                (_0x7963d7 = 0x3e8 / _0x23fd7a),
                (_0x16a801 = ((_0x168a54 - this["spawnTime"]) % _0x7963d7) / _0x7963d7),
                (rotation2 = _0x16a801 * 0x2 * Math["PI"]),
                _0x587de3["save"](),
                _0x587de3["rotate"](_0x22a438);
              var _0x3a25d5 = _0x587de3["globalAlpha"];
              _0x587de3["globalAlpha"] = 0.1;
              var _0x6d7a72 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
                _0xa9a686 = 2.2,
                _0x238f57 = 6.5 * Math["cos"](((0x2 * Math["PI"]) / _0xa9a686) * _0x6d7a72),
                _0x3210d8 = 6.5 * Math["sin"](((0x2 * Math["PI"]) / _0xa9a686) * _0x6d7a72);
              (_0x587de3["globalAlpha"] = 0.2),
                _0x587de3["drawImage"](_0x2e79e2, -_0x4df0f2 - _0x238f57 + 0x1e / 2.2, -_0x4df0f2, 0x2 * _0x4df0f2, 0x2 * _0x4df0f2),
                _0x587de3["restore"](),
                _0x587de3["save"](),
                (_0x587de3["globalAlpha"] = 0.1),
                _0x587de3["rotate"](rotation2 * 0.8),
                _0x587de3["drawImage"](_0x2e79e2, -_0x4df0f2 - _0x238f57 / 2.2, -_0x4df0f2, 0x2 * _0x4df0f2, 0x2 * _0x4df0f2),
                _0x587de3["restore"](),
                _0x587de3["save"](),
                (_0x587de3["globalAlpha"] = 0.2),
                _0x587de3["rotate"](rotation2),
                _0x587de3["drawImage"](_0x2e79e2, -_0x4df0f2 - _0x238f57 - 0x14 / 2.2, -_0x4df0f2, 0x2 * _0x4df0f2, 0x2 * _0x4df0f2),
                _0x587de3["restore"](),
                _0x587de3["save"](),
                (_0x587de3["globalAlpha"] = 0.2),
                _0x587de3["rotate"](rotation2),
                _0x587de3["drawImage"](_0x2e79e2, -_0x4df0f2 - _0x238f57 / 2.2, -_0x4df0f2, 0x2 * _0x4df0f2, 0x2 * _0x4df0f2),
                _0x587de3["restore"](),
                _0x587de3["save"](),
                (_0x587de3["globalAlpha"] = 0.2),
                _0x587de3["rotate"](_0x22a438),
                _0x587de3["drawImage"](_0x2e79e2, -_0x4df0f2 - _0x238f57 / 2.2, -_0x4df0f2, 0x2 * _0x4df0f2, 0x2 * _0x4df0f2),
                _0x587de3["restore"](),
                _0x587de3["save"](),
                (_0x587de3["globalAlpha"] = 0.2),
                _0x587de3["rotate"](_0x22a438),
                _0x587de3["drawImage"](_0x2e79e2, -_0x4df0f2 - _0x238f57 / 2.2, -_0x4df0f2, 0x2 * _0x4df0f2, 0x2 * _0x4df0f2),
                _0x587de3["restore"]();
            }
          }
        }
        break;
      case _0x34f882:
        {
          _0x587de3["save"]();
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          _0x587de3["globalAlpha"] = 0.5 * _0x3a25d5;
          var _0x4df0f2 = Math["max"](0x0, this["rad"] - 0x1e),
            _0x6d7a72 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
            _0xa9a686 = 2.2,
            _0x238f57 = 6.5 * Math["cos"](((0x2 * Math["PI"]) / _0xa9a686) * _0x6d7a72),
            _0x3210d8 = 6.5 * Math["sin"](((0x2 * Math["PI"]) / _0xa9a686) * _0x6d7a72);
          (_0x587de3["globalAlpha"] = 0.4 * _0x3a25d5),
            _0x440ef0(0x0, 0x0, _0x4df0f2, "#2CAAC4"),
            (_0x587de3["globalAlpha"] = 0.7 * _0x3a25d5),
            !(_0x57ae6d == 0x2) &&
              _0x440ef0(0x0 + _0x238f57 / 0x2 - this["rPer"], 0x0 + _0x3210d8 / 0x2 - this["rPer"], Math["max"](0x0, _0x4df0f2 - 0x6), "#2D93B0"),
            _0x440ef0(0x0 + _0x238f57 / 4.5 + this["rPer"], 0x1 + _0x3210d8 / 1.5, Math["max"](0x0, _0x4df0f2 - 0xe), "#29A0BA"),
            _0x440ef0(0x0 + _0x238f57 / 1.5 - this["rPer"] * 0x2, _0x3210d8, Math["max"](0x0, _0x4df0f2 - 38.5 + _0x3210d8 / 0x5), "#2B8CAA"),
            _0x440ef0(0x0 + _0x238f57 / 1.5 - this["rPer"] * 0x2, _0x3210d8, Math["max"](0x0, _0x4df0f2 - 54.5 + _0x3210d8 / 0xb), "#28829E"),
            _0x587de3["restore"]();
        }
        break;
      case _0x4ce01:
        {
          _0x587de3["save"]();
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          if (!(_0x57ae6d == 0x2)) _0x587de3["rotate"](this["rPer"] * 0x2 * Math["PI"]);
          var _0x2b52f2 = 0x0,
            _0x6d7a72 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
            _0xa9a686 = 0x6,
            _0x462887 = 1.5;
          (_0x2b52f2 = _0x462887 * Math["sin"](((0x2 * Math["PI"]) / _0xa9a686) * _0x6d7a72)), (_0x587de3["globalAlpha"] = 0.7 * _0x3a25d5);
          var _0x2d22eb = 0x4;
          (_0x587de3["fillStyle"] = "black"),
            _0x587de3["beginPath"](),
            _0x587de3["arc"](0x0, 0x0, this["rad"], 0x0, Math["PI"] * 0x2),
            _0x587de3["fill"](),
            !(_0x57ae6d == 0x2) &&
              ((_0x587de3["fillStyle"] = "black"),
              (_0x587de3["globalAlpha"] = 0.5 * _0x3a25d5),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, this["rad"] - _0x2d22eb + _0x2b52f2), 0x0, Math["PI"] * 0x2),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                this["rad"] * 0.45,
                -this["rad"] * 0.45 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.5 + _0x2b52f2),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                this["rad"] * 0.5,
                this["rad"] * 0.5 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.4 + _0x2b52f2),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                -this["rad"] * 0.55 * 0.707,
                +this["rad"] * 0.55 * 0.707 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.5 + _0x2b52f2),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](
                -this["rad"] * 0.75,
                -this["rad"] * 0.35 + 0xf * this["rPer"],
                Math["max"](0x0, this["rad"] * 0.3 + _0x2b52f2),
                0x0,
                0x2 * Math["PI"]
              ),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](this["rad"] + 0xa * this["rPer"], 0x32 * this["rPer"], 0x8, 0x0, 0x2 * Math["PI"]),
              _0x587de3["fill"](),
              _0x587de3["beginPath"](),
              _0x587de3["beginPath"](),
              _0x587de3["arc"](this["rad"] - 0x14 * this["rPer"], 0x32 * this["rPer"], 0xa, 0x0, 0x2 * Math["PI"]),
              _0x587de3["fill"](),
              _0x587de3["beginPath"]()),
            _0x587de3["restore"]();
        }
        break;
      case _0x35a024:
        {
          _0x587de3["save"]();
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          (_0x587de3["globalAlpha"] = 0.25 * _0x3a25d5), _0x440ef0(0x0, 0x0, this["rad"], "#9F8641"), _0x587de3["restore"]();
        }
        break;
      case _0x1ba073:
        {
          _0x587de3["save"]();
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          (_0x587de3["globalAlpha"] = 0.25 * _0x3a25d5), _0x440ef0(0x0, 0x0, this["rad"], "#785228"), _0x587de3["restore"]();
        }
        break;
      default:
        {
          _0x587de3["save"]();
          var _0x3a25d5 = _0x587de3["globalAlpha"];
          (_0x587de3["globalAlpha"] = 0.15 * _0x3a25d5), _0x440ef0(0x0, 0x0, this["rad"], "black"), _0x587de3["restore"]();
        }
        break;
    }
  }),
  (_0xe4ec38["prototype"]["setObjTypes"] = function (_0x5f155a, _0x2098ca) {
    (this["oType"] = _0x5f155a), (this["abilityType"] = _0x2098ca);
  }),
  (_0xe4ec38["prototype"]["skinThemeID"] = 0x0),
  (_0xe4ec38["prototype"]["mopeSeasonID"] = 0x0),
  (_0xe4ec38["prototype"]["readCustomData_onNewlyVisible"] = function (_0xeb480d) {
    (this["specType"] = _0xeb480d["readUInt8"]()),
      (this["specType2"] = _0xeb480d["readUInt8"]()),
      (this["skinThemeID"] = _0xeb480d["readUInt8"]()),
      (this["mopeSeasonID"] = _0xeb480d["readUInt8"]()),
      (this["abilityType"] == _0x533680 ||
        this["abilityType"] == _0x2408ce ||
        this["abilityType"] == _0x2e388a ||
        this["abilityType"] == _0x16de96 ||
        this["abilityType"] == _0x1ba073) &&
        (this["rad"] = this["oRad"] = 0x0);
  }),
  (_0xe4ec38["prototype"]["updateTimer"] = function () {
    this["timer"] = Math["round"](this["timer"]);
    var _0x50d1b8 = this["timer"];
    this["setTimer"](_0x50d1b8);
  }),
  (_0xe4ec38["prototype"]["timerTxt"] = null),
  (_0xe4ec38["prototype"]["setTimer"] = function (_0x474805) {
    var _0x28acad = "" + _0x474805;
    null == this["timerTxt"]
      ? ((this["timerTxt"] = new _0x413af8(0x14, "#FFFFFF")),
        (this["timerTxt"]["strokeW"] = 0x2),
        (this["timerTxt"]["multiLine"] = !![]),
        (this["timerTxt"]["renderScale"] = 0x5),
        this["timerTxt"]["setText"](_0x28acad))
      : (this["timerTxt"]["setFontSize"](0x14), this["timerTxt"]["setText"](_0x28acad));
  });

function _0xe4ec38() {
  _0xe4ec38["superClass"]["call"](this, _0x5aa814),
    (_0xe4ec38["prototype"]["easeAngleChanges"] = ![]),
    this["abilityType"] == _0x3c2b00 && (this["doesDrawEffectScale"] = this["drawEffectScale_Slow"] = !![]);
}
(window["AbilityObj"] = _0xe4ec38), _0x17bf26["setCustomClassForGameObjType"](_0xe4ec38, _0x5aa814);
var _0x1d83bb = _0xac947d,
  _0x48c344 = _0xe4ec38;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344),
  (_0xac947d["prototype"]["customDraw"] = function (_0x3db7fe) {
    _0x587de3["save"]();
    var _0x3be52c = _0x587de3["globalAlpha"];
    _0x587de3["rotate"](this["angle"]),
      (_0x587de3["globalAlpha"] = 0.05 * _0x3be52c),
      _0x440ef0(0x0, 0x0, this["rad"], "#E4E7C8"),
      (_0x587de3["globalAlpha"] = 0x1 * _0x3be52c);
    var _0x5f3e20 = "skins/land/elephant/" + this["speciesType"],
      _0x38c02f = this["getSkinImageObj"](_0x5f3e20 + "/ability_elephantTrunkSmack.png");
    if (_0x38c02f) {
      var _0x21d9ef = _0x549f3d((_0x168a54 - this["spawnTime"]) / 0x12c, 0x0, 0x1),
        _0x1e9806 = -(-0.5 + _0x21d9ef) * _0x2f9e35,
        _0x51a9b = this["rad"] * 0.6;
      _0x587de3["save"](), _0x587de3["rotate"](_0x1e9806);
      var _0x12c893 = 0x0,
        _0x13624d = this["rad"],
        _0x468ca0 = _0x51a9b * 0x2 * 0.7,
        _0x1038c4 = _0x51a9b * 0x2,
        _0x245ad0 = 0.75,
        _0x494635 = 0.95;
      _0x587de3["drawImage"](_0x38c02f, _0x12c893 + _0x468ca0 * -_0x245ad0, _0x13624d + _0x1038c4 * -_0x494635, _0x468ca0, _0x1038c4),
        _0x587de3["restore"]();
    }
    _0x587de3["restore"]();
  }),
  (_0xac947d["prototype"]["getSkinImageObj"] = function (_0xb09c2d) {
    var _0x16c135 = this["speciesType"] === 0x1 || this["speciesType"] === 0x2 || this["speciesType"] === 0xc9 ? 0x1 : 0x2,
      _0x44b70c = "./assets/s/" + _0x16c135 + "/" + _0xb09c2d;
    return (
      this["skinThemeID"] > 0x0 && (_0x44b70c = "./assets/t/" + this["skinThemeID"] + "/" + _0xb09c2d),
      _0x2d8f34(_0x44b70c, function (_0x21b79a) {
        console["log"](_0x21b79a["src"]);
      })
    );
  }),
  (_0xac947d["prototype"]["readCustomData_onNewlyVisible"] = function (_0x2c4af2) {
    _0xac947d["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x2c4af2);
  }),
  (_0xac947d["prototype"]["readCustomData_onUpdate"] = function (_0x287b42) {
    _0xac947d["superClass"]["prototype"]["readCustomData_onUpdate"]["call"](this, _0x287b42);
  });

function _0xac947d() {
  _0xac947d["superClass"]["call"](this);
}
(window["AbilityObjElephant"] = _0xac947d), _0x17bf26["setCustomClassForGameObjType"](_0xac947d, _0x5aa814, _0x2633db);
var _0x1d83bb = _0x3a81b5,
  _0x48c344 = _0xe4ec38;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344),
  (_0x3a81b5["prototype"]["customDraw"] = function (_0xcb51d9) {
    var _0x11724a = _0x587de3["globalAlpha"];
    _0x587de3["save"]();
    var _0x44886d = (_0x168a54 - this["spawnTime"]) / 0x3e8,
      _0x514b27 = 1.5,
      _0x3c4d2a = 0x1,
      _0x430891 = _0x3c4d2a * Math["sin"](((0x2 * Math["PI"]) / _0x514b27) * _0x44886d),
      _0x2a92d9 = _0x587de3["globalAlpha"];
    (_0x587de3["globalAlpha"] *= 0.6 * _0x430891), _0x587de3["rotate"](this["angle"]), (_0x587de3["globalAlpha"] = 0.15 * _0x11724a);
    if (this["specType2"] == 0x0 && this["aniSpecies"]) _0x440ef0(0x0, 0x0, this["rad"], "#96661C");
    else _0x440ef0(0x0, 0x0, this["rad"], "#e0dfde");
    _0x587de3["restore"](), _0x587de3["save"]();
    var _0x31989b = "skins/";
    this["animalType"] === 0x24
      ? (_0x31989b += "arctic/bear/" + this["aniSpecies"] + "/slash.png")
      : (_0x31989b += "land/bear/" + this["aniSpecies"] + "/slash.png");
    var _0x5215d4 = this["getSkinImageObj"](_0x31989b);
    if (_0x5215d4) {
      var _0x79253f = Math["min"](0x1, (_0x168a54 - this["spawnTime"]) / 0xc8),
        _0x1cdc2d = _0x549f3d((_0x168a54 - this["spawnTime"]) / 0x12c, 0x0, 0x1),
        _0x5374a8 = -(-0.5 + _0x1cdc2d) * _0x2f9e35,
        _0xbc0d59 = this["angle"];
      _0x587de3["rotate"](this["angle"] + _0x5374a8 * (this["specType"] == 0x0 ? 0x1 : -0x1));
      var _0x519df4 = -this["rad"] * 0x1,
        _0x54c44c = 0x0,
        _0x2c572d = this["rad"],
        _0x27c901 = _0x519df4 * 0x2,
        _0x376c03 = _0x519df4 * 0x2 * _0x79253f,
        _0x2c0606 = 0.5,
        _0x4aff6b = 0.8;
      _0x587de3["drawImage"](_0x5215d4, _0x54c44c + _0x27c901 * -_0x2c0606, _0x2c572d + _0x376c03 * -_0x4aff6b + _0x519df4, _0x27c901, _0x376c03);
    }
    _0x587de3["restore"]();
  }),
  (_0x3a81b5["prototype"]["getSkinImageObj"] = function (_0x3aaf71) {
    var _0x28355d = this["mopeSeasonID"];
    return (
      this["animalType"] === 0x24 && (_0x28355d = this["speciesType"] === 0xc9 ? 0x1 : this["mopeSeasonID"]),
      this["getSkinImageObjForSeason"](_0x3aaf71, _0x28355d)
    );
  }),
  (_0x3a81b5["prototype"]["readCustomData_onNewlyVisible"] = function (_0x398ec0) {
    _0x3a81b5["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x398ec0), (this["aniSpecies"] = _0x398ec0["readUInt8"]());
  });

function _0x3a81b5() {
  _0x3a81b5["superClass"]["call"](this);
}
(window["BearSlash"] = _0x3a81b5), _0x17bf26["setCustomClassForGameObjType"](_0x3a81b5, _0x5aa814, _0x4d10df);
var _0x1d83bb = _0x3799d1,
  _0x48c344 = _0x307a43;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344),
  (_0x3799d1["prototype"]["animalType"] = _0x659012),
  (_0x3799d1["prototype"]["season"] = 0x1),
  (_0x3799d1["prototype"]["animalSpecies"] = 0x0),
  (_0x3799d1["prototype"]["animalSubSpecies"] = 0x0),
  (_0x3799d1["prototype"]["nickName"] = ""),
  (_0x3799d1["prototype"]["skinImgName"] = null),
  (_0x3799d1["prototype"]["skinNotLoadedColor"] = "#75ce67"),
  (_0x3799d1["prototype"]["flag_fullAlpha"] = ![]),
  (_0x3799d1["prototype"]["flag_lowWat"] = ![]),
  (_0x3799d1["prototype"]["flag_tailBitten"] = ![]),
  (_0x3799d1["prototype"]["flag_underWater"] = ![]),
  (_0x3799d1["prototype"]["flag_eff_stunned"] = ![]),
  (_0x3799d1["prototype"]["flag_eff_frozen"] = ![]),
  (_0x3799d1["prototype"]["flag_eff_virusInfection"] = ![]),
  (_0x3799d1["prototype"]["flag_usingAbility"] = ![]),
  (_0x3799d1["prototype"]["flag_eff_invincible"] = ![]),
  (_0x3799d1["prototype"]["flag_eff_healing"] = _0x3799d1["prototype"]["flag_eff_poison"] = _0x3799d1["prototype"]["flag_eff_bleeding"] = ![]),
  (_0x3799d1["prototype"]["flag_eff_hot"] = ![]),
  (_0x3799d1["prototype"]["flag_eff_aloeveraHealing"] = ![]),
  (_0x3799d1["prototype"]["flag_iceSliding"] = ![]),
  (_0x3799d1["prototype"]["underwaterA"] = 0x0),
  0x4,
  (_0x3799d1["prototype"]["nickNameA"] = 0x0),
  (_0x3799d1["prototype"]["bleedingA"] = 0x0),
  (_0x3799d1["prototype"]["stunA"] = 0x0),
  (_0x3799d1["prototype"]["frozenEffA"] =
    _0x3799d1["prototype"]["onFireEffA"] =
    _0x3799d1["prototype"]["effA_healing"] =
    _0x3799d1["prototype"]["effA_hot"] =
      0x0),
  (_0x3799d1["prototype"]["effA_aloeveraHealing"] =
    _0x3799d1["prototype"]["effA_poison"] =
    _0x3799d1["prototype"]["effA_bleeding"] =
    _0x3799d1["prototype"]["effA_stunk"] =
      0x0),
  (_0x3799d1["prototype"]["effA_constricted"] = _0x3799d1["prototype"]["effA_slimed"] = _0x3799d1["prototype"]["effA_webStuck"] = 0x0),
  (_0x3799d1["prototype"]["effA_speared"] = 0x0),
  (_0x3799d1["prototype"]["effA_dirtStuck"] = 0x0),
  (_0x3799d1["prototype"]["nameA"] = 0x0),
  (_0x3799d1["prototype"]["loadedSkinImg"] = null),
  (_0x3799d1["prototype"]["outlineW"] = null),
  (_0x3799d1["prototype"]["teamID"] = 0x0),
  (_0x3799d1["prototype"]["wins1v1"] = 0x0),
  (_0x3799d1["prototype"]["birdNoAnimationFlyWingAngle"] = -0.2),
  (_0x3799d1["prototype"]["getNameSize"] = function () {
    return 0xa;
  }),
  (_0x3799d1["prototype"]["setNick"] = function (_0x21bed2) {
    (this["nickName"] = _0x21bed2),
      null == this["nickTXT"]
        ? ((this["nickTXT"] = new _0x413af8(this["getNameSize"](), "white")),
          (this["nickTXT"]["strokeW"] = 1.5),
          (this["nickTXT"]["multiLine"] = !![]),
          (this["nickTXT"]["renderScale"] = 0x5),
          this["nickTXT"]["setText"](this["nickName"]))
        : (this["nickTXT"]["setFontSize"](this["getNameSize"]()), this["nickTXT"]["setText"](this["nickName"]));
  }),
  (_0x3799d1["prototype"]["getOutlineColor"] = function () {
    var _0x1ae833 = this["curBiome"];
    if (this["id"] > 0x0) {
      var _0x1d18b2 = _0x2fa637[_0x204989];
      if (this["alwaysPlainOutline"]) return _0x53ed3f;
      var _0x9c16f0 = _0x3a1189 != _0xc95c89 || (_0x1d18b2 && _0x1d18b2["teamID"] != this["teamID"] && this["teamID"] != 0x0);
      if (_0x9c16f0) {
        if (this["isEdibleOutlined"]()) return _0xab8999;
        if (_0x55aa30[this["animalType"] - 0x1] > 0x0 && this["id"] != _0x204989) return _0x1fdd8a;
      }
      if (this["flag_inWater"]) _0x1ae833 = _0x1940a7;
      if (_0x26612d != null && this["id"] == _0x26612d["id"] && !_0x34fedb) return "cyan";
    }
    return _0x7a849(_0x1ae833);
  }),
  (_0x3799d1["prototype"]["drawEyeAtPos"] = function (_0x47fe13, _0x3c4ba6) {
    var _0x28b1c8 = 4.5;
    _0x587de3["beginPath"](),
      _0x587de3["arc"](_0x47fe13, _0x3c4ba6, _0x28b1c8, 0x0, Math["PI"] * 0x2),
      (_0x587de3["fillStyle"] = "black"),
      _0x587de3["fill"](),
      _0x587de3["beginPath"](),
      (_0x587de3["fillStyle"] = "white");
    var _0x37cb3b = _0x47fe13 - 0x2,
      _0xa400d4 = _0x3c4ba6 - 0x1;
    _0x587de3["arc"](_0x37cb3b, _0xa400d4, _0x28b1c8 * 0.22, 0x0, Math["PI"] * 0x2), _0x587de3["fill"]();
  }),
  (_0x3799d1["prototype"]["animalInfo"] = function () {
    var _0x46d31c = {};
    switch (this["animalType"]) {
      case _0x52ce41:
        (_0x46d31c["aniName"] = "Snail"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "You're a super slow snail!"),
          (_0x46d31c["aniCol"] = "#fcc02b"),
          (_0x46d31c["skinName"] = "snail");
        break;
      case _0x659012:
        (_0x46d31c["aniName"] = "Mouse"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "You're a tiny mouse, eat food to grow!"),
          (_0x46d31c["aniCol"] = "#9BA9B9"),
          (_0x46d31c["skinName"] = "mouse");
        break;
      case _0x388c4c:
        (_0x46d31c["aniName"] = "Rabbit"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to RABBIT! \x0aPress W to burrow a hole to hide in!"),
          (_0x46d31c["aniCol"] = "#AA937E"),
          (_0x46d31c["skinName"] = "rabbit");
        break;
      case _0xc58c70:
        (_0x46d31c["aniName"] = "Pig"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to PIG!\x0a Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)"),
          (_0x46d31c["aniCol"] = "#DD6BD4"),
          (_0x46d31c["skinName"] = "pig");
        break;
      case _0x2e6d2a:
        (_0x46d31c["aniName"] = "Fox"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] =
            "UPGRADED to FOX! ,\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!"),
          (_0x46d31c["aniCol"] = "#FF9D43"),
          (_0x46d31c["skinName"] = "fox");
        break;
      case _0x50c9da:
        (_0x46d31c["aniName"] = "Deer"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] =
            "UPGRADED to DEER! \x0aPress W to dig up food! \x0aDig in mud for better food!\x0a Hint:Check water areas for new food sources!"),
          (_0x46d31c["aniCol"] = "#C4773E"),
          (_0x46d31c["skinName"] = "deer");
        break;
      case _0x108a58:
        (_0x46d31c["aniName"] = "Mole"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to MOLE!\x0a Hold W to dig underground!\x0aGo under anything, do surprise attacks!"),
          (_0x46d31c["aniCol"] = "#4C4A45"),
          (_0x46d31c["skinName"] = "mole");
        break;
      case _0x1c4f28:
        (_0x46d31c["aniName"] = "Zebra"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to ZEBRA! \x0aPress W to kick side ways!"),
          (_0x46d31c["aniCol"] = "#FFFFFF"),
          (_0x46d31c["skinName"] = "zebra");
        break;
      case _0x3cc7bc:
        (_0x46d31c["aniName"] = "Lion"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to LION!\x0a Press W to release a mighty ROAR (Rawr!)!"),
          (_0x46d31c["aniCol"] = "#f8c923"),
          (_0x46d31c["skinName"] = "lion");
        break;
      case _0x15f6e5:
        (_0x46d31c["aniName"] = "Bear"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to BEAR!\x0a Bears climb through green hills! (Press W to use your claw!)"),
          (_0x46d31c["aniCol"] = "#99591C"),
          (_0x46d31c["skinName"] = "bear");
        break;
      case _0x16bb4c:
        (_0x46d31c["aniName"] = "Croc"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] =
            "UPGRADED to CROCODILE!\x0a Press W to bite and drag around animals! \x0a+ (Now hide in water spots)+ Swim well in Mud, Lakes & Oceans!"),
          (_0x46d31c["aniCol"] = "#30F51C"),
          (_0x46d31c["skinName"] = "croc");
        break;
      case _0x8151b9:
        (_0x46d31c["aniName"] = "Hippo"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to HIPPO!\x0aHippos are great swimmers, dominate the Lakes/Oceans/Mud!"),
          (_0x46d31c["aniCol"] = "#945A99"),
          (_0x46d31c["skinName"] = "hippo");
        break;
      case _0x1e9785:
        (_0x46d31c["aniName"] = "Rhino"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to RHINO!\x0a Press W to CHARGE with your mighty horn!"),
          (_0x46d31c["aniCol"] = "#94a3a9"),
          (_0x46d31c["skinName"] = "rhino");
        break;
      case _0x596a1b:
        (_0x46d31c["aniName"] = "Shrimp"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["aniCol"] = "#f88e37"),
          (_0x46d31c["skinName"] = "shrimp"),
          (_0x46d31c["upgradeText"] = "You're a tiny shrimp, eat food to grow bigger!");
        break;
      case _0x3dee49:
        (_0x46d31c["aniName"] = "Trout"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to TROUT!\x0aHint: Hold Left-click to RUN! (Uses extra water)"),
          (_0x46d31c["aniCol"] = "#ac8686"),
          (_0x46d31c["skinName"] = "trout");
        break;
      case _0x2d0ebc:
        (_0x46d31c["aniName"] = "Crab"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to CRAB!\x0a Crabs can survive on dry land!\x0a (On land, Press W to go into your shell!)"),
          (_0x46d31c["aniCol"] = "#bf2408"),
          (_0x46d31c["skinName"] = "crab");
        break;
      case _0x461353:
        (_0x46d31c["aniName"] = "Squid"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to SQUID!\x0a Squids can use INK when injured (press W!) \x0a+ you can hide in plankton bushes!"),
          (_0x46d31c["aniCol"] = "#40dda4"),
          (_0x46d31c["skinName"] = "squid");
        break;
      case _0x261bdf:
        (_0x46d31c["aniName"] = "Shark"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to SHARK!\x0a A vicious predator of the oceans!"),
          (_0x46d31c["aniCol"] = "#999fc6"),
          (_0x46d31c["skinName"] = "shark");
        break;
      case _0x4af824:
        (_0x46d31c["aniName"] = "Sea-horse"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to SEA HORSE!\x0a An agile hunter!"),
          (_0x46d31c["aniCol"] = "#73BE2F"),
          (_0x46d31c["skinName"] = "seahorse");
        break;
      case _0x291edb:
        (_0x46d31c["aniName"] = "Jellyfish"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to JELLYFISH!\x0a A slowly-turning animal that can grow quite large!"),
          (_0x46d31c["aniCol"] = "#FDB9BA"),
          (_0x46d31c["skinName"] = "jellyfish");
        break;
      case _0x36f1a3:
        (_0x46d31c["aniName"] = "Turtle"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to TURTLE!\x0a Lives well on land & water! (On land, Press W to go into your shell!)"),
          (_0x46d31c["aniCol"] = "#502E1A"),
          (_0x46d31c["skinName"] = "turtle");
        break;
      case _0x2429b5:
        (_0x46d31c["aniName"] = "Stringray"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to STINGRAY!\x0a Use electic shock (Release W key!) to shock animals! \x0a(Takes time to recharge)"),
          (_0x46d31c["aniCol"] = "#164336"),
          (_0x46d31c["skinName"] = "stingray");
        break;
      case _0x4f1c79:
        (_0x46d31c["aniName"] = "The Kraken"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] =
            "UPGRADED to THE KRAKEN!\x0a Terrorize the oceans, and be feared by all!\x0a (Release W to use whirlpool ability!)"),
          (_0x46d31c["aniCol"] = "#64a034"),
          (_0x46d31c["skinName"] = "kraken");
        break;
      case _0x391550:
        (_0x46d31c["aniName"] = "Pufferfish"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to PUFFERFISH!\x0a (Hold W to inflate- become spiky, and dangerous to touch!)"),
          (_0x46d31c["aniCol"] = "#6C5C2C"),
          (_0x46d31c["skinName"] = "pufferfish");
        break;
      case _0x573db4:
        (_0x46d31c["aniName"] = "Killer Whale"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to Killer Whale! \x0aWhales blow out water when diving! (And sometimes other loot!)"),
          (_0x46d31c["aniCol"] = "#141414"),
          (_0x46d31c["skinName"] = "killerwhale");
        break;
      case _0x15f668:
        (_0x46d31c["aniName"] = "Swordfish"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to " + _0x46d31c["aniName"] + "!\x0a (Press W to rush with your sharp nose!)"),
          (_0x46d31c["aniCol"] = "#689CD7"),
          (_0x46d31c["skinName"] = "swordfish");
        break;
      case _0x33164c:
        (_0x46d31c["aniName"] = "Gorilla"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] =
            "UPGRADED to " + _0x46d31c["aniName"] + "!\x0a Gorillas are very fast on hills/trees!\x0a Press W to throw bananas! (from trees)"),
          (_0x46d31c["aniCol"] = "#323232"),
          (_0x46d31c["skinName"] = "gorilla");
        break;
      case _0x5ac0cd:
        (_0x46d31c["aniName"] = "Octopus"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] =
            "UPGRADED to Octopus!\x0aHold W to use your 'Disguise' ability!\x0a(Hint: wait for prey to bite you- they get stunned!)"),
          (_0x46d31c["aniCol"] = "#ff8340"),
          (_0x46d31c["skinName"] = "octopus");
        break;
      case _0x1ae9e8:
        (_0x46d31c["aniName"] = "Dragon"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] =
            "UPGRADED to " + _0x46d31c["aniName"] + "!\x0a (You're amazing!) \x0aFly over everything, Hold W to shoot fire!"),
          (_0x46d31c["aniCol"] = "#22FF8A"),
          (_0x46d31c["skinName"] = "dragon");
        break;
      case _0x322b1f:
        (_0x46d31c["aniName"] = "Black Dragon"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] =
            "UPGRADED to " +
            _0x46d31c["aniName"] +
            "!\x0a Black dragons drink lava instead of water! Black dragons only heal on healing stones/lava!"),
          (_0x46d31c["aniCol"] = "black"),
          (_0x46d31c["skinName"] = "blackdragon");
        break;
      case _0x2a018e:
        (_0x46d31c["aniName"] = "Giant Spider"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to " + _0x46d31c["aniName"] + "!\x0a Place web around the game to catch prey!"),
          (_0x46d31c["aniCol"] = "black"),
          (_0x46d31c["skinName"] = "giantSpider");
        break;
      case _0x1a3bd2:
        (_0x46d31c["aniName"] = "Cobra"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to " + _0x46d31c["aniName"] + "!\x0a Hold W to Spit venom, and poison animals with your bite!"),
          (_0x46d31c["aniCol"] = "black"),
          (_0x46d31c["skinName"] = "cobra");
        break;
      case _0x2e22f9:
        (_0x46d31c["aniName"] = "Boa Constrictor"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to " + _0x46d31c["aniName"] + "!\x0a Coil and suffocate other animals!"),
          (_0x46d31c["aniCol"] = "black"),
          (_0x46d31c["skinName"] = "boaConstrictor");
        break;
      case _0x11d87b:
        (_0x46d31c["aniName"] = "T-REX"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] =
            "UPGRADED to " + _0x46d31c["aniName"] + " The Dinosaur!\x0a This ancient dinosaur has powerful jaws that can drag prey around!!"),
          (_0x46d31c["aniCol"] = "#862A2A"),
          (_0x46d31c["skinName"] = "trex");
        break;
      case _0x353380:
        (_0x46d31c["aniName"] = "Giraffe"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to Giraffe!\x0aGiraffe have huge legs and stomp anyone in their way!"),
          (_0x46d31c["aniCol"] = "#E9BD23"),
          (_0x46d31c["skinName"] = "giraffe");
        break;
      case _0x17ab53:
        (_0x46d31c["aniName"] = "Eagle"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to Eagle!\x0aEagles can fly up other animals in the air! !\x0a"),
          (_0x46d31c["aniCol"] = "#5b400d"),
          (_0x46d31c["skinName"] = "eagle");
        break;
      case _0x19954b:
        (_0x46d31c["aniName"] = "Arctic Fox"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] =
            "UPGRADED to " +
            _0x46d31c["aniName"] +
            "!\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!"),
          (_0x46d31c["aniCol"] = "#CFCFCF"),
          (_0x46d31c["skinName"] = "arctic/arcticfox");
        break;
      case _0xd9bb61:
        (_0x46d31c["aniName"] = "Arctic Hare"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to " + _0x46d31c["aniName"] + "!\x0a \x0aPress W to burrow a hole to hide in!"),
          (_0x46d31c["aniCol"] = "#D5D5D5"),
          (_0x46d31c["skinName"] = "arctic/arctichare");
        break;
      case _0x58f094:
        (_0x46d31c["aniName"] = "The Yeti!"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] =
            "UPGRADED to " + _0x46d31c["aniName"] + "!\x0a So it really exists... \x0a Hold W to turn into snow, release W to freeeeeze!"),
          (_0x46d31c["aniCol"] = "#839eb5"),
          (_0x46d31c["skinName"] = "arctic/yeti");
        break;
      case _0x21c202:
        (_0x46d31c["aniName"] = "Chipmunk"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = ""),
          (_0x46d31c["aniCol"] = "#A77C30"),
          (_0x46d31c["skinName"] = "arctic/chipmunk");
        break;
      case _0x50e796:
        (_0x46d31c["aniName"] = "Muskox"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] =
            "UPGRADED to " + _0x46d31c["aniName"] + "!\x0a Press W to charge with your horns! \x0aPlus move decently on ice!"),
          (_0x46d31c["aniCol"] = "#231f18"),
          (_0x46d31c["skinName"] = "arctic/muskox");
        break;
      case _0x83a348:
        (_0x46d31c["aniName"] = "Penguin"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to " + _0x46d31c["aniName"] + "!\x0a Left-click to run!\x0a (HOLD W to slide FAST on ice)!"),
          (_0x46d31c["aniCol"] = "#FFFFFF"),
          (_0x46d31c["skinName"] = "arctic/penguin");
        break;
      case _0x33a471:
        (_0x46d31c["aniName"] = "Polar Bear"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to " + _0x46d31c["aniName"] + "!\x0a Polar bears can climb hills! \x0a+ They're amazing swimmers!"),
          (_0x46d31c["aniCol"] = "#e4e4e4"),
          (_0x46d31c["skinName"] = "arctic/bear/bear");
        break;
      case _0x23ab49:
        (_0x46d31c["aniName"] = "Seal"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to " + _0x46d31c["aniName"] + "!\x0a Seals can slide on ice (Hold W) + can climb hills (rocks too!)"),
          (_0x46d31c["aniCol"] = "#cfcfcf"),
          (_0x46d31c["skinName"] = "arctic/seal");
        break;
      case _0x72b8ae:
        (_0x46d31c["aniName"] = "Snow leopard"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to " + _0x46d31c["aniName"] + "!\x0a Press W to get a speed boost! (Every 8 seconds)!"),
          (_0x46d31c["aniCol"] = "#cfcfcf"),
          (_0x46d31c["skinName"] = "arctic/snowleopard");
        break;
      case _0x379cc3:
        (_0x46d31c["aniName"] = "Walrus"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to " + _0x46d31c["aniName"] + "!\x0a You can slide on ice (Hold W) + can climb hills (rocks too!)"),
          (_0x46d31c["aniCol"] = "#633838"),
          (_0x46d31c["skinName"] = "arctic/walrus");
        break;
      case _0x31d5ba:
        (_0x46d31c["aniName"] = "Reindeer"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] =
            "UPGRADED to " + _0x46d31c["aniName"] + "!\x0a Press W to dig up food! \x0a Your sharp hooves let you turn very well on ice!"),
          (_0x46d31c["aniCol"] = "#a68976"),
          (_0x46d31c["skinName"] = "arctic/reindeer");
        break;
      case _0x364eae:
        (_0x46d31c["aniName"] = "Wolf"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to " + _0x46d31c["aniName"] + "!\x0a Wolf paws turn very well on ice!\x0a Press W to howl!"),
          (_0x46d31c["aniCol"] = "#6B6B6B"),
          (_0x46d31c["skinName"] = "arctic/wolf");
        break;
      case _0x4a1394:
        (_0x46d31c["aniName"] = "Wolverine"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to " + _0x46d31c["aniName"] + "!\x0a Press W to Let out a Powerful GROWL! (Knocks back prey!)"),
          (_0x46d31c["aniCol"] = "#843A0F"),
          (_0x46d31c["skinName"] = "arctic/wolverine");
        break;
      case _0x5ab376:
        (_0x46d31c["aniName"] = "Mammoth"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] =
            "UPGRADED to " +
            _0x46d31c["aniName"] +
            "!\x0a Press W to roll snowballs with your trunk!\x0a The bigger the snowball gets, the longer the freeze!"),
          (_0x46d31c["aniCol"] = "#9d4717"),
          (_0x46d31c["skinName"] = "arctic/mammoth");
        break;
      case _0x3531d4:
        (_0x46d31c["aniName"] = "Donkey"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to " + _0x46d31c["aniName"] + "!\x0a Press W to Kick any animal behind you"),
          (_0x46d31c["aniCol"] = "#8c7c64"),
          (_0x46d31c["skinName"] = "donkey");
        break;
      case _0x52066d:
        (_0x46d31c["aniName"] = "Sabertooth Tiger"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to Sabertooth Tiger!\x0aSabertooth Tigers are great swimmers, dominate the Lakes/Oceans/Mud!"),
          (_0x46d31c["aniCol"] = "#945A99"),
          (_0x46d31c["skinName"] = "sabertoothtiger");
        break;
      case _0xb5d198:
        (_0x46d31c["aniName"] = "Elephant"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to " + _0x46d31c["aniName"] + "!\x0a Use your long trunk to attack and eat food!"),
          (_0x46d31c["aniCol"] = "#945A99"),
          (_0x46d31c["skinName"] = "elephant");
        break;
      case _0x1c2dd4:
        (_0x46d31c["aniName"] = "Blue Whale"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to Blue Whale!\x0a Smash with your powerful tail!"),
          (_0x46d31c["aniCol"] = "#945A99"),
          (_0x46d31c["skinName"] = "bluewhale");
        break;
      case _0x26c175:
        (_0x46d31c["aniName"] = "Hedgehog"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to Hedgehog!\x0a (Hold W to become spiky, and dangerous to touch!)"),
          (_0x46d31c["aniCol"] = "#5b400d"),
          (_0x46d31c["skinName"] = "hedgehog");
        break;
      case _0x4d5dff:
        (_0x46d31c["aniName"] = "King Crab"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to a KING CRAB!"),
          (_0x46d31c["aniCol"] = "#971f0e"),
          (_0x46d31c["skinName"] = "kingcrab");
        break;
      case _0x3807fc:
        (_0x46d31c["aniName"] = "Lemming"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = ""),
          (_0x46d31c["aniCol"] = "#A77C30"),
          (_0x46d31c["skinName"] = "arctic/lemming");
        break;
      case _0x483352:
        (_0x46d31c["aniName"] = "Frog"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to Frog!!"),
          (_0x46d31c["aniCol"] = "#FF9000"),
          (_0x46d31c["skinName"] = "frog/frog");
        break;
      case _0x19797d:
        (_0x46d31c["aniName"] = "Ostrich"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] =
            "UPGRADED to Ostrich! Lay eggs to hatch babies! \x0aCommand babies by placing your crosshair (right-click/W)-\x0a They can attack prey!"),
          (_0x46d31c["aniCol"] = "#FF9000"),
          (_0x46d31c["skinName"] = "ostrich/ostrich");
        break;
      case _0x3d8491:
        (_0x46d31c["aniName"] = "Pelican"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] =
            "UPGRADED to Pelican! \x0aPick up water (and prey!) in your mouth,\x0afly, and drop water on prey! (press W again)"),
          (_0x46d31c["aniCol"] = "#FF9000"),
          (_0x46d31c["skinName"] = "pelican/pelican");
        break;
      case _0x58aade:
        (_0x46d31c["aniName"] = "Falcon"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to Falcon! \x0aFly, and do a powerful dive attack! Aim it well."),
          (_0x46d31c["aniCol"] = "#FF9000"),
          (_0x46d31c["skinName"] = "falcon/falcon");
        break;
      case _0x533281:
        (_0x46d31c["aniName"] = "Snowy Owl"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to Snowy Owl!\x0a Aim the crosshair, \x0a right click/W when it's on top of prey, to attack!"),
          (_0x46d31c["aniCol"] = "#FF9000"),
          (_0x46d31c["skinName"] = "snowyowl/snowyowl");
        break;
      case _0x3b7c87:
        (_0x46d31c["aniName"] = "Baby Ostrich"),
          (_0x46d31c["aniDesc"] = ""),
          (_0x46d31c["upgradeText"] = "UPGRADED to Baby Ostrich!!"),
          (_0x46d31c["aniCol"] = "#FF9000"),
          (_0x46d31c["skinName"] = "ostrich/ostrich-baby");
        break;
      case _0x3a0961:
        (_0x46d31c["aniName"] = "Phoenix"),
          (_0x46d31c["upgradeText"] = "UPGRADED to Phoenix!\x0aCreate powerful fire tornados to burn your enemies alive!"),
          (_0x46d31c["aniCol"] = "#FF9000"),
          (_0x46d31c["skinName"] = "phoenix/phoenix");
        break;
      case _0x250a37:
        (_0x46d31c["aniName"] = "Sea Monster"),
          (_0x46d31c["upgradeText"] = "UPGRADED to Sea Monster!"),
          (_0x46d31c["aniCol"] = "#FF9000"),
          (_0x46d31c["skinName"] = "seamonster");
        break;
      case _0x5b1639:
        (_0x46d31c["aniName"] = "Land Monster"),
          (_0x46d31c["upgradeText"] = "UPGRADED to Land Monster!"),
          (_0x46d31c["aniCol"] = "#FF9000"),
          (_0x46d31c["skinName"] = "landmonster");
        break;
      case _0x448b86:
        (_0x46d31c["aniName"] = "Ice Monster"),
          (_0x46d31c["upgradeText"] = "UPGRADED to Ice Monster!"),
          (_0x46d31c["aniCol"] = "#FF9000"),
          (_0x46d31c["skinName"] = "icemonster");
        break;
      case _0x28027c:
        (_0x46d31c["aniName"] = "Dino Monster"),
          (_0x46d31c["upgradeText"] = "UPGRADED to Dino Monster!"),
          (_0x46d31c["aniCol"] = "#FF9000"),
          (_0x46d31c["skinName"] = "dinomonster");
        break;
      case _0x5b8090:
        (_0x46d31c["aniName"] = "Pigeon"),
          (_0x46d31c["upgradeText"] = "UPGRADED to Pigeon!\x0aHold right click (or W) to fly!\x0a"),
          (_0x46d31c["aniCol"] = "#FF9000"),
          (_0x46d31c["skinName"] = "pigeon/pigeon");
        break;
      case _0x65dffc:
        (_0x46d31c["aniName"] = "Toucan"),
          (_0x46d31c["upgradeText"] =
            "UPGRADED to Toucan!\x0aHold right click (or W) to fly!(HINT: Start flying from a fruit tree or bush to throw fruit upon landing!)"),
          (_0x46d31c["aniCol"] = "#FF9000"),
          (_0x46d31c["skinName"] = "toucan/toucan");
        break;
      default:
        (_0x46d31c["aniName"] = "(Animal)"), (_0x46d31c["aniDesc"] = ""), (_0x46d31c["aniCol"] = "#000000"), (_0x46d31c["upgradeText"] = "UPGRADED!");
    }
    return _0x46d31c;
  }),
  (_0x3799d1["prototype"]["loadAnimalSkinImg"] = function () {
    var _0x101fb8 = this["getSkinName"]();
    (this["loadedSkinImg"] = null), _0x101fb8 && !_0x9f2d1d && (this["loadedSkinImg"] = this["getSkinImageObj"]("skins/" + _0x101fb8 + ".png"));
  }),
  (_0x3799d1["prototype"]["loadAnimalSkinImgAsync"] = async function () {
    var _0x374cb4 = this["getSkinName"]();
    this["loadedSkinImg"] = await this["getSkinImageObjAsync"]("skins/" + _0x374cb4 + ".png");
  }),
  (_0x3799d1["prototype"]["getIdealOpacity"] = function () {
    return this["flag_usingDiveAbility"] ||
      (this["flag_usingAbility"] && (this["animalType"] == _0x108a58 || this["animalType"] == _0x5ac0cd || this["animalType"] == _0x58f094))
      ? 0x0
      : 0x1;
  }),
  (_0x3799d1["prototype"]["isAnimalInside1v1Arena"] = function () {
    if (_0x20d55b != null && _0x34fedb) {
      if (_0x20d55b["p1ID"] == this["id"] || _0x20d55b["p2ID"] == this["id"]) return !![];
    } else {
      if (_0x3e6fd0[this["id"]] || (_0x3e6fd0[_0x204989] && _0x204989 == this["id"])) return !![];
    }
    return ![];
  }),
  (_0x3799d1["prototype"]["setStealth"] = function () {
    if (this["isAnimalInside1v1Arena"]() || this["flag_isInArena"]) this["idealOp"] = 0.6;
    else (this["flag_stealth"] || this["flag_inHidingHole"]) && (this["idealOp"] = 0.2);
  }),
  (_0x3799d1["prototype"]["setOpacityForFlyingAnimals"] = function (_0x345533) {
    if (this["gabbedByAniID"] == this["id"] || this["grabbedAniID"] == this["id"]) return;
    this["id"] != _0x204989 && (this["idealOp"] = 0.6);
  }),
  (_0x3799d1["prototype"]["getImageDataKey"] = function () {
    return (
      this["animalType"] +
      "__" +
      this["animalSpecies"] +
      "__" +
      this["animalSubSpecies"] +
      "__" +
      this["animalPremiumSkin"] +
      "__" +
      this["mopeSeasonID"] +
      "__" +
      this["skinThemeID"]
    );
  });
const _0x49ceb2 = {},
  _0x270f86 = "cached_animal_image_data_keys",
  _0x580377 = () => {
    if (_0x4e3e5f) {
      const _0x56fb10 = localStorage["getItem"](_0x270f86);
      console["error"]("KEYS:", _0x56fb10),
        _0x56fb10 &&
          JSON["parse"](_0x56fb10)["forEach"]((_0x2dd134) => {
            _0x49ceb2[_0x2dd134] = localStorage["getItem"](_0x2dd134);
          });
    }
  };
(_0x3799d1["prototype"]["getUpgradeImagePath"] = function () {
  let _0x2d2031 = this["animalInfo"]()["skinName"],
    _0x280914 = "";
  if (!_0x2d2031 || _0x2d2031["toLowerCase"]()["includes"]("scorpion") || this["animalSpecies"] == 0xc8)
    _0x280914 = this["getSkinImagePath"]("skins/" + this["getSkinName"]()) + ".ui.png";
  else _0x280914 = this["getSkinImagePath"]("skins/" + _0x2d2031 + ".ui.png");
  return _0x280914;
}),
  (_0x3799d1["prototype"]["getImageData"] = async function () {
    const _0x47ef64 = this["getImageDataKey"]();
    if (_0x47ef64 in _0x49ceb2) return _0x49ceb2[_0x47ef64];
    (this["flag_fullAlpha"] = !![]), (this["buttonScaleF"] = 0x1), (this["imgSizeF"] = 0x1);
    var _0x3147be = this["animalInfo"](),
      _0xc78ccd = _0x3147be["aniCol"];
    return (
      (this["skinImgName"] = _0x3147be["skinName"]),
      (this["skinNotLoadedColor"] = _0xc78ccd),
      await this["loadAnimalSkinImgAsync"](),
      this["draw"](),
      new Promise((_0x3414fe, _0x1016c8) => {
        setTimeout(() => {
          const _0x21b718 = document["createElement"]("canvas"),
            _0x26c957 = 0x8c,
            _0x304626 = 0x6e;
          (_0x21b718["width"] = _0x26c957), (_0x21b718["height"] = _0x26c957);
          const _0x2aec16 = window["ctx"];
          (window["ctx"] = _0x21b718["getContext"]("2d")),
            (this["w"] = _0x304626),
            (this["h"] = _0x304626),
            (this["rad"] = _0x304626 / 0x2),
            (this["skinRad"] = _0x304626 / 0x2),
            (this["idealOp"] = 0x1),
            (this["underwaterA"] = 0x0),
            window["ctx"]["translate"](_0x26c957 / 0x2, _0x26c957 / 0x2),
            (window["ctx"]["globalAlpha"] = 0x1),
            this["draw"]();
          const _0x2db63a = _0x21b718["toDataURL"]();
          (window["ctx"] = _0x2aec16), (_0x49ceb2[_0x47ef64] = _0x2db63a);
          if (_0x4e3e5f)
            try {
              localStorage["setItem"](_0x270f86, JSON["stringify"](Object["keys"](_0x49ceb2))), localStorage["setItem"](_0x47ef64, _0x2db63a);
            } catch (_0xcaac2e) {}
          return _0x3414fe(_0x2db63a);
        }, 0x3e8);
      })
    );
  }),
  (_0x3799d1["prototype"]["idealOp"] = 0x1),
  (_0x3799d1["prototype"]["customDraw"] = function (_0x467514) {
    this["preLoad"]();
    var _0x4c015b = this["animalInfo"](),
      _0x379e3b = _0x4c015b["aniCol"];
    (this["skinImgName"] = _0x4c015b["skinName"]), (this["skinNotLoadedColor"] = _0x379e3b);
    switch (this["animalType"]) {
      case _0x391550:
      case _0x50e796:
      case _0x15f668:
      case _0x36f1a3:
      case _0x16bb4c:
        tailLen = this["rad"] * 0.16;
        break;
    }
    this["loadAnimalSkinImg"](), _0x587de3["save"](), _0x587de3["rotate"](this["angle"]);
    var _0x4421d4 = 0x0,
      _0x379369 = (_0x168a54 - this["spawnTime"]) / 0x3e8;
    if (this["flag_eff_wobbling"]) {
      var _0x2f81e0 = _0x120bbb(_0x379369, 1.25, 0.1, 0x2);
      this["rad"] += _0x2f81e0;
    }
    (this["idealOp"] = this["getIdealOpacity"]()), this["setStealth"]();
    if (this["flag_flying"]) this["setOpacityForFlyingAnimals"]();
    this["flag_fullAlpha"]
      ? (_0x587de3["globalAlpha"] = 0x1)
      : ((this["underwaterA"] += (this["idealOp"] - this["underwaterA"]) * 0.1), (_0x587de3["globalAlpha"] *= this["underwaterA"]));
    if (this["flag_eff_invincible"]) {
      var _0x2b1d29 = 0x1,
        _0x110b65 = 0.3,
        _0x1ca25f = 0x1,
        _0x230cf8 = 0.5 * (_0x1ca25f - _0x110b65);
      _0x587de3["globalAlpha"] *=
        _0x110b65 + _0x230cf8 + _0x230cf8 * Math["sin"](((0x2 * Math["PI"]) / _0x2b1d29) * ((_0x168a54 - this["spawnTime"]) / 0x3e8));
    }
    this["outlineW"] = 0x2 + _0x4421d4;
    if (!(this["dead"] || this["flag_underWater"] || (this["animalType"] == _0x108a58 && this["flag_usingAbility"]))) {
      if (!this["flag_underWater"]) {
        var _0x59dc7d = this["getOutlineColor"]();
        if (
          this["killerId"] == 0x0 &&
          !((this["flag_flying"] && this["id"] == _0x204989) || (_0x57ae6d == 0x2 && !(_0x59dc7d == _0xab8999 || _0x59dc7d == _0x1fdd8a)))
        )
          this["teamID"] > 0x0 &&
            _0x11b99a != null &&
            _0x3a1189 == _0xc95c89 &&
            (_0x587de3["save"](),
            (_0x587de3["globalAlpha"] = this["isAnimalInside1v1Arena"]() ? 0.3 : this["idealOp"]),
            _0x440ef0(0x0, 0x0, this["rad"] + 0x2, _0x11b99a["getTeamColor"](this["teamID"])),
            _0x587de3["restore"]()),
            this["drawAnimalUnderSkinCircle"](_0x59dc7d);
        else this["outlineW"] = 0x0;
      }
    }
    this["drawUnderEffects"]();
    if (this["canDrawAnimalSkin"]()) this["drawAnimalSkin"](_0x59dc7d);
    this["drawUnderWater"]();
    if (this["animalPremiumSkin"] != 0x0 && !this["flag_eff_shivering"]) this["sparkleAnim"]();
    _0x587de3["restore"](), this["drawTopEffects"](), this["drawLowWaterDrop"]();
    if (!this["flag_isInArena"]) {
      if (this["id"] == _0x204989 && this["flag_viewing1v1Invite"]) {
      } else {
        if (!this["flag_usingDiveAbility"]) this["drawNickName"](_0x188601 == null ? this["idealOp"] : 0.2);
      }
    }
    this["drawZombieEffect"]();
  }),
  (_0x3799d1["prototype"]["canDrawAnimalSkin"] = function () {
    return !![];
  }),
  (_0x3799d1["prototype"]["drawZombieEffect"] = function () {
    this["effecT_isZombie"] &&
      (_0x587de3["save"](), (_0x587de3["globalAlpha"] = 0.6), _0x440ef0(0x0, 0x0, this["skinRad"], "#B6CF40"), _0x587de3["restore"]());
  }),
  (_0x3799d1["prototype"]["drawLowWaterDrop"] = function () {
    if (this["flag_lowWat"]) {
      var _0x4a049e = 1.2,
        _0x52599a = 0.2,
        _0x4fedb4 = 0.8,
        _0x5c0d48 = 0.5 * (_0x4fedb4 - _0x52599a),
        _0x34c198 = _0x52599a + _0x5c0d48 + _0x5c0d48 * Math["sin"](((0x2 * Math["PI"]) / _0x4a049e) * (_0x168a54 / 0x3e8));
      _0x587de3["save"](), (_0x587de3["globalAlpha"] = _0x34c198);
      if (
        this["animalType"] == _0x322b1f ||
        this["animalType"] == _0x3a0961 ||
        this["animalType"] == _0x5b1639 ||
        (this["animalType"] == _0x65dffc && this["animalSpecies"] == 0x4)
      )
        _0x587de3["fillStyle"] = _0x9d1ce2;
      else {
        if (this["animalType"] == _0x250a37) _0x587de3["fillStyle"] = _0x5c1655;
        else {
          if (this["animalType"] == _0x510716) _0x587de3["fillStyle"] = _0x53c27f;
          else _0x587de3["fillStyle"] = _0x13663c;
        }
      }
      _0x587de3["beginPath"](), _0x587de3["arc"](0x0, this["rad"] + 0x5, 0x5, 0x0, Math["PI"] * 0x2), _0x587de3["fill"](), _0x587de3["restore"]();
    }
  }),
  (_0x3799d1["prototype"]["sparkleInterval"] = 0x5),
  (_0x3799d1["prototype"]["sparklDuration"] = 0x3),
  (_0x3799d1["prototype"]["sparkleNext"] = 0x0),
  (_0x3799d1["prototype"]["sparkleAniT"] = 0x0),
  (_0x3799d1["prototype"]["setSparkleInterval"] = function (_0x13d280, _0x181e6e) {
    (this["sparkleInterval"] = _0x13d280), (this["sparklDuration"] = _0x181e6e), this["setSparkleXY"]();
  }),
  (_0x3799d1["prototype"]["seSparkle"] = function () {
    (this["sparkleAniT"] = +new Date() + 0x3e8 * this["sparklDuration"]),
      (this["sparkleNext"] = this["sparkleAniT"] + 0x3e8 * this["sparkleInterval"]),
      this["setSparkleXY"]();
  }),
  (_0x3799d1["prototype"]["isMouseHovering"] = ![]),
  (_0x3799d1["prototype"]["sparkleAnim"] = function () {
    if (this["animalPremiumSkin"] && (_0x168a54 - this["spawnTime"]) / 0x3e8 > 0x5) {
      if (this["id"] > 0x0 || (this["id"] == 0x0 && this["isMouseHovering"]))
        +new Date() > this["sparkleNext"] && (this["seSparkle"](), this["setSparkleXY"]());
      if (this["sparkleAniT"] > +new Date()) this["showSparkling"]();
    }
  }),
  (_0x3799d1["prototype"]["sparkleAng"] = 0x0),
  (_0x3799d1["prototype"]["sparkleX"] = 0x0),
  (_0x3799d1["prototype"]["sparkleY"] = 0x0),
  (_0x3799d1["prototype"]["setSparkleXY"] = function () {
    var _0x530406 = this["rad"] / 0x2,
      _0x41101a = _0x530406 * 0.3,
      _0x24f1d0 = _0x530406,
      _0x458721 = _0x103b73(_0x41101a, _0x24f1d0),
      _0x1d39eb = _0x103b73(_0x41101a, _0x24f1d0);
    (_0x458721 *= Math["random"]() * 0xa > 0x5 ? -0x1 : 0x1),
      (_0x1d39eb *= Math["random"]() * 0xa > 0x5 ? -0x1 : 0x1),
      (this["sparkleX"] = _0x458721),
      (this["sparkleY"] = _0x1d39eb);
  }),
  (_0x3799d1["prototype"]["showSparkling"] = function () {
    var _0x91c4c2 = 0x5;
    _0x587de3["save"]();
    var _0x2faf8e = 1.5,
      _0x2e4c4e = 0.3,
      _0x19be5d = 0x1,
      _0x20a81b = 0.5 * (_0x19be5d - _0x2e4c4e);
    (_0x587de3["globalAlpha"] *=
      _0x2e4c4e + _0x20a81b + _0x20a81b * Math["sin"](((0x2 * Math["PI"]) / _0x2faf8e) * ((_0x168a54 - this["spawnTime"]) / 0x3e8))),
      (this["sparkleAng"] += 0.5);
    var _0x3ae4f8 = 0x1,
      _0x1b2913 = 0x0;
    _0x587de3["fillStyle"] = "#faffb6";
    for (i = 0x0; i < 0x3; i++) {
      _0x587de3["save"](),
        _0x587de3["translate"](this["sparkleX"], this["sparkleY"]),
        _0x587de3["rotate"](_0x3d960f(this["sparkleAng"])),
        _0x587de3["save"](),
        _0x587de3["rotate"](_0x3d960f(_0x1b2913)),
        _0x587de3["scale"](_0x3ae4f8 * 0.5, _0x91c4c2),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](0x0, 0x0, _0x3ae4f8, 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        _0x587de3["restore"](),
        (_0x1b2913 += 0x3c),
        _0x587de3["restore"]();
    }
    _0x587de3["beginPath"](),
      _0x587de3["arc"](this["sparkleX"], this["sparkleY"], _0x3ae4f8, 0x0, Math["PI"] * 0x2),
      _0x587de3["fill"](),
      _0x587de3["restore"]();
  }),
  (_0x3799d1["prototype"]["shakeOffsetX"] = 0x0),
  (_0x3799d1["prototype"]["shakeOffsetY"] = 0x0),
  (_0x3799d1["prototype"]["drawAnimalSkin"] = function (_0x284616) {
    _0x587de3["save"]();
    if (this["flag_eff_shivering"]) {
      var _0x1c9f78 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
        _0x3c23b9 = 0.1,
        _0x11974c = this["rad"] * this["shiverF"];
      this["shakeOffsetX"] = _0x11974c * Math["sin"](((0x2 * Math["PI"]) / _0x3c23b9) * _0x1c9f78);
      var _0x3c23b9 = 0.05,
        _0x11974c = this["rad"] * this["shiverF"];
      (this["shakeOffsetY"] = _0x11974c * Math["sin"](((0x2 * Math["PI"]) / _0x3c23b9) * _0x1c9f78)),
        _0x587de3["translate"](-this["shakeOffsetX"], -this["shakeOffsetY"]);
    }
    this["drawPropsUnderSkin"](), this["beforeDrawAnimalSkin"]();
    if (this["id"] > 0x0) this["drawUnderSkinTail"](_0x284616);
    this["drawUnderSkinImgOutline"](),
      this["drawUnderSkinImg"](),
      this["drawSkinImg"](),
      this["drawOnTopOfSkinImg"](),
      this["drawPropsTopOfSkin"](),
      this["drawStatueEffect"](),
      _0x587de3["restore"]();
  }),
  (_0x3799d1["prototype"]["drawStatueEffect"] = function () {
    if (this["flag_eff_statue"]) {
      var _0xe6cc93 = null;
      switch (this["eff_statueType"]) {
        case 0x1:
          _0xe6cc93 = "snowball";
          break;
        case 0x2:
          _0xe6cc93 = "goldball";
          break;
      }
      if (_0xe6cc93) {
        var _0x398907 = this["getSkinImageObj"]("img/" + _0xe6cc93 + ".png");
        if (_0x398907) {
          _0x587de3["save"](), (_0x587de3["globalAlpha"] = _0x204989 == this["id"] ? 0.7 : 0x1);
          var _0x27b3a7 = this["rad"] * 1.2;
          _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
            _0x587de3["drawImage"](_0x398907, -_0x27b3a7, -_0x27b3a7, 0x2 * _0x27b3a7, 0x2 * _0x27b3a7),
            _0x587de3["restore"]();
        }
      }
    }
  }),
  (_0x3799d1["prototype"]["propsEnabled"] = ![]),
  (_0x3799d1["prototype"]["drawPropsUnderSkin"] = function (_0x5a847b) {
    if (this["propsEnabled"]) {
      if (this["animalType"] == _0x659012) {
      }
    }
  }),
  (_0x3799d1["prototype"]["drawPropsTopOfSkin"] = function (_0x3b6161) {
    this["propsEnabled"] &&
      this["animalType"] == _0x659012 &&
      (this["drawProp"]("scarfs", 0x1), this["drawProp"]("glasses", 0x0), this["drawProp"]("hats", 0x1));
  }),
  (_0x3799d1["prototype"]["drawProp"] = function (_0x2d2f66, _0x33294d) {
    var _0x15e177 = this["skinScale"],
      _0x1c57f5 = this["skinRad"] + 0.9,
      _0x2cd579 = this["getSkinImageObj"]("props/" + this["animalType"] + "/" + _0x2d2f66 + "/" + _0x33294d + ".png");
    _0x2cd579 &&
      _0x587de3["drawImage"](_0x2cd579, -_0x1c57f5 * _0x15e177, -_0x1c57f5 * _0x15e177, 0x2 * _0x1c57f5 * _0x15e177, 0x2 * _0x1c57f5 * _0x15e177);
  }),
  (_0x3799d1["prototype"]["beforeDrawAnimalSkin"] = function (_0x2ef16e) {}),
  (_0x3799d1["prototype"]["drawUnderSkinTail"] = function (_0x68b34) {
    if (this["killerId"] > 0x0 || this["flag_underWater"]) return;
    if (this["animalType"] != _0x388c4c && this["animalType"] != _0x659012 && this["animalType"] != _0x2d0ebc) {
      var _0x2e6402 = this["animalInfo"](),
        _0x1bca61 = _0x2e6402["aniCol"],
        _0x27cbbe = this["rad"] * 0.1,
        _0x4a41ec = (_0x168a54 - this["spawnTime"]) / 0x3e8,
        _0xfd0018 = 0x5,
        _0x3a5d3c = 0x4,
        _0x315310 = _0x3a5d3c * Math["sin"](((0x2 * Math["PI"]) / _0xfd0018) * _0x4a41ec),
        _0x37e7fc = this["outlineW"] * 2.5,
        _0x83935 = 0x19,
        _0x39fdcf = Math["PI"] / 0xb4;
      if (this["flag_tailBitten"]) _0x587de3["fillStyle"] = _0x1fdd8a;
      else {
        var _0x5ec5c6 = this["animalType"];
        _0x416480[_0x5ec5c6 - 0x1] > 0x0 && this["id"] != _0x204989 ? (_0x587de3["fillStyle"] = _0xab8999) : (_0x587de3["fillStyle"] = _0x68b34);
      }
      !(_0x57ae6d == 0x2 && _0x587de3["fillStyle"] != _0x53ed3f) &&
        (_0x587de3["beginPath"](),
        _0x587de3["moveTo"](
          (this["rad"] - this["outlineW"] + 0x1) * Math["cos"]((0x10e + _0x83935 / 0x2 + _0x37e7fc) * _0x39fdcf),
          (this["rad"] - this["outlineW"] + 0x1) * Math["sin"]((0x10e + _0x83935 / 0x2) * _0x39fdcf)
        ),
        _0x587de3["lineTo"](
          (this["rad"] - this["outlineW"] + 0x1) * Math["cos"]((0x10e - _0x83935 / 0x2 - _0x37e7fc) * _0x39fdcf),
          (this["rad"] - this["outlineW"] + 0x1) * Math["sin"]((0x10e - _0x83935 / 0x2) * _0x39fdcf)
        ),
        _0x587de3["lineTo"](
          (this["rad"] + _0x27cbbe + this["outlineW"]) * Math["cos"]((0x10e + _0x315310) * _0x39fdcf),
          (this["rad"] + _0x27cbbe + this["outlineW"]) * Math["sin"]((0x10e + _0x315310) * _0x39fdcf)
        ),
        _0x587de3["lineTo"](
          (this["rad"] - this["outlineW"] + 0x1) * Math["cos"]((0x10e + _0x83935 / 0x2 + _0x37e7fc) * _0x39fdcf),
          (this["rad"] - this["outlineW"] + 0x1) * Math["sin"]((0x10e + _0x83935 / 0x2) * _0x39fdcf)
        ),
        _0x587de3["fill"]()),
        !(_0x57ae6d == 0x2) &&
          (!this["loadedSkinImg"] || this["flag_tailBitten"]) &&
          ((_0x587de3["fillStyle"] = this["flag_tailBitten"] ? _0x1fdd8a : _0x1bca61),
          _0x587de3["beginPath"](),
          _0x587de3["moveTo"](
            (this["rad"] - this["outlineW"]) * Math["cos"]((0x10e + _0x83935 / 0x2) * _0x39fdcf),
            (this["rad"] - this["outlineW"]) * Math["sin"]((0x10e + _0x83935 / 0x2) * _0x39fdcf)
          ),
          _0x587de3["lineTo"](
            (this["rad"] - this["outlineW"]) * Math["cos"]((0x10e - _0x83935 / 0x2) * _0x39fdcf),
            (this["rad"] - this["outlineW"]) * Math["sin"]((0x10e - _0x83935 / 0x2) * _0x39fdcf)
          ),
          _0x587de3["lineTo"](
            (this["rad"] + _0x27cbbe) * Math["cos"]((0x10e + _0x315310) * _0x39fdcf),
            (this["rad"] + _0x27cbbe) * Math["sin"]((0x10e + _0x315310) * _0x39fdcf)
          ),
          _0x587de3["lineTo"](
            (this["rad"] - this["outlineW"]) * Math["cos"]((0x10e + _0x83935 / 0x2) * _0x39fdcf),
            (this["rad"] - this["outlineW"]) * Math["sin"]((0x10e + _0x83935 / 0x2) * _0x39fdcf)
          ),
          _0x587de3["fill"]());
    }
  }),
  (_0x3799d1["prototype"]["drawAnimalUnderSkinCircle"] = function (_0x50c51f) {
    if (!this["flag_isGrabbed"]) {
      if (this["playerNumberFor1v1Arena"] == 0x1) _0x50c51f = "cyan";
      else {
        if (this["playerNumberFor1v1Arena"] == 0x2) _0x50c51f = "yellow";
        else this["flag_eff_isOnSpiderWeb"] && (_0x50c51f = "white");
      }
      _0x587de3["save"](),
        (_0x587de3["globalAlpha"] = this["isAnimalInside1v1Arena"]() ? 0.3 : this["idealOp"]),
        _0x440ef0(0x0, 0x0, this["rad"], _0x50c51f),
        _0x587de3["restore"]();
    }
  }),
  (_0x3799d1["prototype"]["devMode_num"] = 0x0),
  (_0x3799d1["prototype"]["hasMultipleSpecies"] = function () {
    return ![];
  }),
  (_0x3799d1["prototype"]["drawNickName"] = function (_0x2971de) {
    if (_0x2971de == 0x0) return;
    var _0x372cb0 = _0x2971de;
    this["nickNameA"] += (_0x372cb0 - this["nickNameA"]) * 0.1;
    if (this["nickName"] && this["nickTXT"] && !_0x417709) {
      _0x587de3["save"]();
      if (this["dead"]) _0x587de3["globalAlpha"] *= 0x1 - this["moveUpdF"];
      else _0x587de3["globalAlpha"] = 0x1;
      (_0x587de3["globalAlpha"] *= this["nickNameA"]), (this["nickTXT"]["x"] = 0x0), (this["nickTXT"]["y"] = this["rad"] + 0x9);
      var _0x48552b = "#FFFFFF";
      if (this["flag_isDevMode"])
        switch (this["devMode_num"]) {
          case 0x8:
            if (!this["flag_hideDevPrint"]) {
              if (_0x26612d != null && _0x26612d["id"] == this["id"]) _0x48552b = "cyan";
              else _0x48552b = "yellow";
            }
            break;
          case 0x1:
            _0x48552b = "#e23ca6";
            break;
          case 0x2:
            break;
          case 0x3:
            _0x48552b = "#ee3030";
            break;
          default:
            break;
        }
      this["nickTXT"]["setColor"](_0x48552b), this["nickTXT"]["draw"](), _0x587de3["restore"]();
    }
  }),
  (_0x3799d1["prototype"]["drawHealthBar"] = function () {
    _0x3799d1["superClass"]["prototype"]["drawHealthBar"]["call"](this), this["drawInfectionBar"]();
  }),
  (_0x3799d1["prototype"]["drawInfectionBar"] = function () {
    if (this["flag_underWater"]) return;
    var _0x5ca297 = _0x168a54 < this["infectionBarTimeoutT"] ? 0x1 : 0x0;
    (this["infectionBarA"] += (_0x5ca297 - this["infectionBarA"]) * 0.04),
      this["infectionBarA"] > 0.001 &&
        ((this["infectionPer"] += (this["infectionPer_n"] - this["infectionPer"]) * 0.1),
        this["drawBar"]("red", this["infectionBarA"], this["infectionPer"], 0x2, 6.5));
  }),
  (_0x3799d1["prototype"]["drawUnderWater"] = function () {
    (this["flag_usingDiveAbility"] || (this["flag_usingAbility"] && this["animalType"] == _0x108a58)) &&
      (_0x587de3["save"](), this["drawWhenUnderwater"](), _0x587de3["restore"]());
  }),
  (_0x3799d1["prototype"]["drawUnderSkinImgOutline"] = function () {
    if (this["flag_eff_stunk"]) {
      _0x587de3["save"]();
      var _0x1ea0e4 = 0x1,
        _0x8ef5f4 = 0.3,
        _0x284c2b = 0x1,
        _0x374d35 = 0.5 * (_0x284c2b - _0x8ef5f4),
        _0x459a89 = _0x8ef5f4 + _0x374d35 + _0x374d35 * Math["sin"](((0x2 * Math["PI"]) / _0x1ea0e4) * ((_0x168a54 - this["spawnTime"]) / 0x3e8));
      _0x587de3["globalAlpha"] *= _0x459a89;
      var _0x3d598b = 2.6;
      _0x440ef0(0x0, 0x0, this["rad"] + _0x3d598b * _0x459a89, "brown"), _0x587de3["restore"]();
    }
    if (this["flag_iceSliding"]) {
      var _0x114ed2 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
        _0x1ea0e4 = 0.75,
        _0x2c6196 = 0x1,
        _0x31071c = _0x2c6196 * Math["sin"](((0x2 * Math["PI"]) / _0x1ea0e4) * _0x114ed2),
        _0x417cdd = _0x587de3["globalAlpha"];
      (_0x587de3["globalAlpha"] *= 0.8 - 0.2 * _0x31071c),
        _0x440ef0(0x0, this["rad"] * 0.3, this["rad"] * (0.9 + 0.15 * _0x31071c), "#7BB7BB"),
        _0x440ef0(0x0, -this["rad"] * 0.3, this["rad"] * (1.05 + 0.1 * _0x31071c), "#7BB7BB"),
        (_0x587de3["globalAlpha"] = _0x417cdd);
    }
    if (this["flag_usingAbility"] && (this["animalType"] == _0x50c9da || this["animalType"] == _0x31d5ba)) {
      var _0x114ed2 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
        _0x1ea0e4 = 1.5,
        _0x2c6196 = 0x1,
        _0x31071c = _0x2c6196 * Math["sin"](((0x2 * Math["PI"]) / _0x1ea0e4) * _0x114ed2),
        _0x417cdd = _0x587de3["globalAlpha"];
      (_0x587de3["globalAlpha"] *= 0.8),
        _0x440ef0(0x0, this["rad"] * 0.3, this["rad"] * (0.9 + 0.12 * _0x31071c), "#7F582B"),
        _0x440ef0(0x0, -this["rad"] * 0.3, this["rad"] * (1.05 + 0.09 * _0x31071c), "#7F582B"),
        (_0x587de3["globalAlpha"] = _0x417cdd);
    }
    var _0x2881a8 = this["flag_eff_frozen"] || this["flag_cold"] ? 0x1 : 0x0;
    this["frozenEffA"] += (_0x2881a8 - this["frozenEffA"]) * 0.1;
    if (this["frozenEffA"] > 0.01) {
      var _0x417cdd = _0x587de3["globalAlpha"];
      _0x587de3["globalAlpha"] *= this["frozenEffA"];
      var _0x3d598b = 1.6;
      _0x440ef0(0x0, 0x0, this["rad"] + _0x3d598b * this["frozenEffA"], "white"), (_0x587de3["globalAlpha"] = _0x417cdd);
    }
    var _0x2881a8 = this["flag_eff_healing"] ? 0x1 : 0x0;
    this["effA_healing"] += (_0x2881a8 - this["effA_healing"]) * 0.1;
    if (this["effA_healing"] > 0.01) {
      _0x587de3["save"](), (_0x587de3["globalAlpha"] *= this["effA_healing"]);
      var _0x3d598b = 2.6;
      _0x440ef0(0x0, 0x0, this["rad"] + _0x3d598b * this["effA_healing"], "purple"), _0x587de3["restore"]();
    }
    this["effect_aloeveraHeal"](!![]), this["effect_sanitized"](!![]);
    var _0x2881a8 = this["flag_eff_hot"] ? 0x1 : 0x0;
    this["effA_hot"] += (_0x2881a8 - this["effA_hot"]) * 0.1;
    if (this["effA_hot"] > 0.01) {
      _0x587de3["save"]();
      var _0x1ea0e4 = 1.2,
        _0x8ef5f4 = 0.3,
        _0x284c2b = 0x1,
        _0x374d35 = 0.5 * (_0x284c2b - _0x8ef5f4);
      _0x587de3["globalAlpha"] *=
        _0x8ef5f4 + _0x374d35 + _0x374d35 * Math["sin"](((0x2 * Math["PI"]) / _0x1ea0e4) * ((_0x168a54 - this["spawnTime"]) / 0x3e8));
      var _0x3d598b = 2.6;
      _0x440ef0(0x0, 0x0, this["rad"] + _0x3d598b * this["effA_hot"], "rgba(249, 212, 77, 0.5)"), _0x587de3["restore"]();
    }
    var _0x2881a8 = this["flag_eff_poison"] ? 0x1 : 0x0;
    this["effA_poison"] += (_0x2881a8 - this["effA_poison"]) * 0.1;
    if (this["effA_poison"] > 0.01) {
      _0x587de3["save"]();
      var _0x1ea0e4 = 1.2,
        _0x8ef5f4 = 0.3,
        _0x284c2b = 0x1,
        _0x374d35 = 0.5 * (_0x284c2b - _0x8ef5f4);
      (_0x587de3["globalAlpha"] *=
        _0x8ef5f4 + _0x374d35 + _0x374d35 * Math["sin"](((0x2 * Math["PI"]) / _0x1ea0e4) * ((_0x168a54 - this["spawnTime"]) / 0x3e8))),
        (_0x587de3["globalAlpha"] *= this["effA_poison"]);
      var _0x3d598b = 2.6;
      _0x440ef0(0x0, 0x0, this["rad"] + _0x3d598b * this["effA_poison"], "#7FF600"), _0x587de3["restore"]();
    }
    var _0x2881a8 = this["flag_eff_bleeding"] || this["flag_eff_wobbling"] ? 0x1 : 0x0;
    this["effA_bleeding"] += (_0x2881a8 - this["effA_bleeding"]) * 0.1;
    if (this["effA_bleeding"] > 0.01) {
      _0x587de3["save"]();
      var _0x1ea0e4 = 1.2,
        _0x8ef5f4 = 0.3,
        _0x284c2b = 0x1,
        _0x374d35 = 0.5 * (_0x284c2b - _0x8ef5f4);
      (_0x587de3["globalAlpha"] *=
        _0x8ef5f4 + _0x374d35 + _0x374d35 * Math["sin"](((0x2 * Math["PI"]) / _0x1ea0e4) * ((_0x168a54 - this["spawnTime"]) / 0x3e8))),
        (_0x587de3["globalAlpha"] *= this["effA_bleeding"]);
      var _0x3d598b = 2.6,
        _0x5576be = this["flag_eff_wobbling"] ? "brown" : "red";
      _0x440ef0(0x0, 0x0, this["rad"] + _0x3d598b * this["effA_bleeding"], _0x5576be), _0x587de3["restore"]();
    }
    var _0x2881a8 = this["flag_eff_slimed"] ? 0x1 : 0x0;
    this["effA_slimed"] += (_0x2881a8 - this["effA_slimed"]) * 0.1;
    if (this["effA_slimed"] > 0.01) {
      _0x587de3["save"]();
      var _0x1ea0e4 = 1.2,
        _0x8ef5f4 = 0.3,
        _0x284c2b = 0x1,
        _0x374d35 = 0.5 * (_0x284c2b - _0x8ef5f4);
      (_0x587de3["globalAlpha"] *=
        _0x8ef5f4 + _0x374d35 + _0x374d35 * Math["sin"](((0x2 * Math["PI"]) / _0x1ea0e4) * ((_0x168a54 - this["spawnTime"]) / 0x3e8))),
        (_0x587de3["globalAlpha"] *= this["effA_slimed"]);
      var _0x3d598b = 2.6;
      _0x440ef0(0x0, 0x0, this["rad"] + _0x3d598b * this["effA_slimed"], "grey"), _0x587de3["restore"]();
    }
  }),
  (_0x3799d1["prototype"]["drawUnderSkinImg"] = function () {}),
  (_0x3799d1["prototype"]["drawUnderwaterBubbles"] = function () {
    return;
    var _0x1f5cd7 = 0x1f4 / 0x154,
      _0x24e1c8 = "water";
    switch (this["diveType"]) {
      case 0x0:
        _0x24e1c8 = "water";
        break;
      case 0x1:
        _0x24e1c8 = "lava";
        break;
      case 0x2:
        _0x24e1c8 = "mud";
        break;
    }
    var _0x4211c1 = this["getSkinImageObjForSeason"]("skins/" + _0x24e1c8 + "_dive.png", 0x2);
    if (_0x4211c1) {
      _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0x1);
      var _0x5fa2e5 = this["rad"] - this["outlineW"];
      _0x587de3["drawImage"](_0x4211c1, -_0x5fa2e5 * _0x1f5cd7, -_0x5fa2e5 * _0x1f5cd7, 0x2 * _0x5fa2e5 * _0x1f5cd7, 0x2 * _0x5fa2e5 * _0x1f5cd7),
        _0x587de3["restore"]();
    } else {
      _0x587de3["save"]();
      var _0x5d82cf = (_0x168a54 - this["spawnTime"]) / 0x3e8,
        _0x459f2d = 1.5,
        _0xf41d07 = 0x1,
        _0x373acb = _0xf41d07 * Math["sin"](((0x2 * Math["PI"]) / _0x459f2d) * _0x5d82cf);
      if (this["animalType"] == _0x16bb4c) _0x587de3["globalAlpha"] *= 0.3;
      var _0x203123 = this["flag_inWater"] ? "#4E71C3" : "#7E6A35";
      if (this["animalType"] == _0x3a0961) _0x203123 = "#f9d43b";
      _0x587de3["fillStyle"] = _0x203123;
      var _0x4ae993 = this["rad"] * 0.2;
      _0x587de3["beginPath"](),
        _0x587de3["arc"](this["rad"] * -0.35, this["rad"] * -0.33, Math["max"](0x0, _0x4ae993 + _0x373acb), 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](this["rad"] * 0.35, this["rad"] * -0.32, Math["max"](0x0, _0x4ae993 - _0x373acb), 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](this["rad"] * 0.35, this["rad"] * 0.36, Math["max"](0x0, _0x4ae993 + _0x373acb), 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](this["rad"] * -0.35, this["rad"] * 0.35, Math["max"](0x0, _0x4ae993 - _0x373acb), 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        _0x587de3["restore"]();
    }
  }),
  (_0x3799d1["prototype"]["drawUnderwaterCustomization"] = function (_0x29987c, _0x376b39) {
    if (this["flag_usingDiveAbility"]) {
      var _0x18cb00 = "water";
      switch (this["diveType"]) {
        case 0x0:
          _0x18cb00 = "ocean";
          break;
        case 0x1:
          _0x18cb00 = "lava";
          break;
        case 0x2:
          _0x18cb00 = "mud";
          break;
        case 0x3:
          _0x18cb00 = "waterspot";
          break;
        case 0x4:
          _0x18cb00 = "arcticwaterspot";
          break;
        case 0x5:
          _0x18cb00 = "arcticlake";
          break;
        case 0x6:
          _0x18cb00 = "oasis";
          break;
        case 0x7:
          _0x18cb00 = "deathlake";
          break;
      }
      if (!(_0x57ae6d == 0x2) && !_0x34fedb) {
        var _0x1b7e17 = Math["trunc"](_0x168a54 / 0x50) % 0x9;
        (_0x1b7e17 = Math["max"](0x1, _0x1b7e17)),
          (_0x1b7e17 = Math["min"](0x8, _0x1b7e17)),
          (_0x18cb00 = "skins/dive/" + _0x18cb00 + "dive" + _0x1b7e17 + ".png");
        var _0x34b17e = this["getObjImageObjForSeason"](_0x18cb00, 0x2);
        if (_0x34b17e) {
          _0x587de3["save"]();
          {
            _0x587de3["globalAlpha"] = 0x1;
            var _0x19cfa5 = this["rad"] * 1.2;
            _0x587de3["drawImage"](_0x34b17e, -_0x19cfa5, -_0x19cfa5, _0x19cfa5 * 0x2, _0x19cfa5 * 0x2);
          }
          _0x587de3["restore"]();
        }
      } else {
        _0x18cb00 = "skins/dive/" + _0x18cb00 + "dive.png";
        var _0x34b17e = this["getObjImageObjForSeason"](_0x18cb00, 0x2);
        if (_0x34b17e) {
          _0x587de3["save"]();
          {
            _0x587de3["globalAlpha"] = 0x1;
            var _0x19cfa5 = this["rad"] * 1.2;
            _0x587de3["drawImage"](_0x34b17e, -_0x19cfa5, -_0x19cfa5, _0x19cfa5 * 0x2, _0x19cfa5 * 0x2);
          }
          _0x587de3["restore"]();
        }
      }
    }
  }),
  (_0x3799d1["prototype"]["drawWhenUnderwater"] = function () {
    this["drawUnderwaterCustomization"](0x1, 0x1);
  }),
  (_0x3799d1["prototype"]["shiveringStartT"] = 0x0),
  (_0x3799d1["prototype"]["flag_eff_shivering"] = ![]),
  (_0x3799d1["prototype"]["flag_inHidingHole"] = ![]),
  (_0x3799d1["prototype"]["effect_shivering"] = function () {
    if (this["shiveringStartT"] == 0x0 && this["flag_eff_shivering"]) this["shiveringStartT"] = +new Date();
    else {
      if (!this["flag_eff_shivering"]) this["shiveringStartT"] = 0x0;
    }
    if (this["flag_eff_shivering"]) {
      var _0x4ef6da = (+new Date() - this["shiveringStartT"]) * 0xa;
      _0x4ef6da % 0xa == 0x0 &&
        ((this["eff_shiver_shakeX"] = Math["round"](Math["random"]() * 0xa)), (this["eff_shiver_shakeX"] = Math["round"](Math["random"]() * 0xa)));
    }
  });
if (this["effA_healing"] > 0.01) {
  _0x587de3["save"]();
  var _0x1c381f = 0.3;
  (_0x587de3["globalAlpha"] *= _0x1c381f * this["effA_healing"]),
    _0x440ef0(0x0, 0x0, Math["max"](0x0, this["rad"] - this["outlineW"]), "#ef24ed"),
    _0x587de3["restore"]();
}
(_0x3799d1["prototype"]["effect_sanitized"] = function (_0x318eaf) {
  var _0xbf2575 = this["flag_eff_sanitized"] ? 0.9 : 0x0;
  if (this["effA__sanitized"] == undefined) this["effA__sanitized"] = 0x0;
  this["effA__sanitized"] += (_0xbf2575 - this["effA__sanitized"]) * 0.1;
  if (this["effA__sanitized"] > 0.01) {
    var _0x46c1d6 = 0.3,
      _0x2f3439 = 0.8,
      _0x1237f9 = 0.2,
      _0x4d2aa2 = 0.4,
      _0x5bd7c3 = 0.5 * (_0x4d2aa2 - _0x1237f9),
      _0x21c7d5 = _0x1237f9 + _0x5bd7c3 + _0x5bd7c3 * Math["sin"](((0x2 * Math["PI"]) / _0x2f3439) * ((_0x168a54 - this["spawnTime"]) / 0x3e8));
    if (_0x318eaf) {
      _0x587de3["save"](), (_0x587de3["globalAlpha"] *= _0x21c7d5);
      var _0x14ae04 = 2.6;
      _0x440ef0(0x0, 0x0, this["rad"] + _0x14ae04 * this["effA__sanitized"], "white"), _0x587de3["restore"]();
    } else
      _0x587de3["save"](),
        (_0x587de3["globalAlpha"] *= _0x21c7d5),
        _0x440ef0(0x0, 0x0, Math["max"](0x0, this["rad"]), "#bbc94d"),
        _0x587de3["restore"]();
  }
}),
  (_0x3799d1["prototype"]["effect_aloeveraHeal"] = function (_0x382125) {
    var _0x305ab0 = this["flag_eff_aloeveraHealing"] ? 0.9 : 0x0;
    if (this["effA_aloeveraHealing"] == undefined) this["effA_aloeveraHealing"] = 0x0;
    this["effA_aloeveraHealing"] += (_0x305ab0 - this["effA_aloeveraHealing"]) * 0.1;
    if (this["effA_aloeveraHealing"] > 0.01) {
      var _0x1d95e6 = 0.3,
        _0x4bacbc = 0.8,
        _0x52474c = 0.2,
        _0x3d8a0d = 0.4,
        _0x4ced17 = 0.5 * (_0x3d8a0d - _0x52474c),
        _0x1c99ec = _0x52474c + _0x4ced17 + _0x4ced17 * Math["sin"](((0x2 * Math["PI"]) / _0x4bacbc) * ((_0x168a54 - this["spawnTime"]) / 0x3e8));
      if (_0x382125) {
        _0x587de3["save"](), (_0x587de3["globalAlpha"] *= _0x1c99ec);
        var _0x1e7b66 = 2.6;
        _0x440ef0(0x0, 0x0, this["rad"] + _0x1e7b66 * this["effA_aloeveraHealing"], "#bbc94d"), _0x587de3["restore"]();
      } else
        _0x587de3["save"](),
          (_0x587de3["globalAlpha"] *= _0x1c99ec),
          _0x440ef0(0x0, 0x0, Math["max"](0x0, this["rad"]), "#bbc94d"),
          _0x587de3["restore"]();
    }
  }),
  (_0x3799d1["prototype"]["effect_sweatPoisoned"] = function () {
    var _0x26ea89 = this["flag_eff_sweatPoisoned"] ? 0x1 : 0x0;
    if (this["effA_sweatPoisoned"] == undefined) this["effA_sweatPoisoned"] = 0x0;
    this["effA_sweatPoisoned"] += (_0x26ea89 - this["effA_sweatPoisoned"]) * 0.1;
    if (this["effA_sweatPoisoned"] > 0.01) {
      _0x587de3["save"]();
      var _0x1737a2 = 0.3,
        _0x45d8d4 = 1.2,
        _0x4ae3b2 = 0.3,
        _0x2f167f = 0x1,
        _0x5e4161 = 0.5 * (_0x2f167f - _0x4ae3b2);
      (_0x587de3["globalAlpha"] *=
        _0x4ae3b2 + _0x5e4161 + _0x5e4161 * Math["sin"](((0x2 * Math["PI"]) / _0x45d8d4) * ((_0x168a54 - this["spawnTime"]) / 0x3e8))),
        _0x440ef0(0x0, 0x0, Math["max"](0x0, this["rad"] - this["outlineW"]), _0xea26d5),
        _0x587de3["restore"]();
    }
  }),
  (_0x3799d1["prototype"]["skinRad"] = 0x0),
  (_0x3799d1["prototype"]["skinScale"] = 0x0),
  (_0x3799d1["prototype"]["setSkinScale"] = function () {
    var _0x3897aa = 0x1f4 / 0x154,
      _0x2ff14b = this["rad"] - this["outlineW"];
    (this["skinRad"] = _0x2ff14b), (this["skinScale"] = _0x3897aa);
  }),
  (_0x3799d1["prototype"]["getAniRadius"] = function (_0x4833fd) {
    if (this["flag_usingDiveAbility"]) return _0x4833fd * 0.7;
    return _0x4833fd;
  }),
  (_0x3799d1["prototype"]["basicDrawSkinImg"] = function () {
    this["setSkinScale"]();
    var _0x15dbb7 = this["skinScale"],
      _0x4a9cf7 = this["getAniRadius"](this["skinRad"]);
    this["loadedSkinImg"]
      ? _0x587de3["drawImage"](
          this["loadedSkinImg"],
          -_0x4a9cf7 * _0x15dbb7,
          -_0x4a9cf7 * _0x15dbb7,
          0x2 * _0x4a9cf7 * _0x15dbb7,
          0x2 * _0x4a9cf7 * _0x15dbb7
        )
      : ((_0x587de3["fillStyle"] = this["skinNotLoadedColor"]),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, this["rad"] - this["outlineW"]), 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"]());
  }),
  (_0x3799d1["prototype"]["preLoad"] = function () {}),
  (_0x3799d1["prototype"]["shiverF"] = 0.02),
  (_0x3799d1["prototype"]["drawSkinImg"] = function () {
    this["basicDrawSkinImg"](), this["drawSkinCustomization"]();
  }),
  (_0x3799d1["prototype"]["drawSkinCustomization"] = function () {}),
  (_0x3799d1["prototype"]["drawOnTopOfSkinImg"] = function () {
    if (!this["loadedSkinImg"]) {
      _0x587de3["save"]();
      var _0x34ff63 = Math["max"](0x1, this["rad"] / 0x19);
      _0x587de3["scale"](_0x34ff63, _0x34ff63),
        this["drawEyeAtPos"](0x6, this["rad"] * 0.32),
        this["drawEyeAtPos"](-0x6, this["rad"] * 0.32),
        _0x587de3["restore"]();
    }
    if (this["animalType"] == _0x1e9785) {
      (_0x587de3["fillStyle"] = "#E5CF79"), _0x587de3["beginPath"]();
      var _0x35f092 = this["rad"] - this["outlineW"],
        _0x59eec3 = _0x35f092 * 0x1;
      _0x587de3["moveTo"](_0x35f092 * -0.16, _0x59eec3),
        _0x587de3["lineTo"](0x0, _0x35f092 * (this["flag_usingAbility"] ? 1.41 : 0.7)),
        _0x587de3["lineTo"](_0x35f092 * 0.153, _0x59eec3),
        _0x587de3["closePath"](),
        _0x587de3["fill"]();
    }
    if (this["flag_usingAbility"] && this["animalType"] == _0x58f094) {
      _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0x1 - this["underwaterA"]);
      var _0x1aab35 = this["getSkinImageObj"]("img/snowball.png");
      if (_0x1aab35) {
        var _0x35f092 = this["rad"];
        _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
          _0x587de3["drawImage"](_0x1aab35, -_0x35f092, -_0x35f092, 0x2 * _0x35f092, 0x2 * _0x35f092);
      } else this["drawOutlinedCircle"]("", "white");
      _0x587de3["restore"]();
    }
  }),
  (_0x3799d1["prototype"]["drawUnderEffects"] = function () {
    if (this["flag_eff_dirty"]) {
      if (this["effA_dirtStuck"] > 0.01) {
        _0x587de3["save"]();
        var _0x145591 = 0.9;
        _0x587de3["globalAlpha"] *= _0x145591 * this["effA_dirtStuck"];
        var _0x590d91 = this["getImageObjForPath"]("img/dirt/dirt_below.png");
        if (_0x590d91) {
          var _0x4e6421 = this["skinScale"],
            _0x4ac012 = this["skinRad"] - 0x2;
          _0x587de3["drawImage"](_0x590d91, -_0x4ac012 * _0x4e6421, -_0x4ac012 * _0x4e6421, 0x2 * _0x4ac012 * _0x4e6421, 0x2 * _0x4ac012 * _0x4e6421);
        }
        _0x587de3["restore"]();
      }
    }
  });
var _0x244e97 = 0x1,
  _0x10e902 = 0.5;
(_0x3799d1["prototype"]["maskStartT"] = 0x0),
  (_0x3799d1["prototype"]["wasWearingMask"] = ![]),
  (_0x3799d1["prototype"]["drawProtectiveMask"] = function () {
    if (!this["flag_eff_wearingMask"]) {
      this["wasWearingMask"] = ![];
      return;
    }
    !this["wasWearingMask"] && ((this["wasWearingMask"] = !![]), (this["maskStartT"] = _0x168a54));
    _0x587de3["save"]();
    var _0x935bde = this["getSkinImageObj"]("img/viralpandemic/mask.png"),
      _0x39487d = this["getSkinImageObj"]("img/viralpandemic/mask-outline.png");
    if (_0x935bde && _0x39487d) {
      var _0x1b14fc = this["rad"] * 0.7 + this["rPer"],
        _0x4b28ef = _0x1b14fc * 0.1;
      if (this["animalType"] == _0x28027c) _0x4b28ef = _0x1b14fc * 0.2;
      else {
        if (this["animalType"] == _0x11d87b) (_0x1b14fc = this["rad"] * 0.6), (_0x4b28ef = _0x1b14fc * 0x1);
        else {
          if (
            this["animalType"] == _0x4f1c79 ||
            this["animalType"] == _0x4d5dff ||
            this["animalType"] == _0x58f094 ||
            this["animalType"] == _0x5ac0cd
          )
            _0x4b28ef = _0x1b14fc * -0.05;
          else {
            if (this["animalType"] == _0x2a018e) _0x4b28ef = _0x1b14fc * -0.2;
            else {
              if (this["animalType"] == _0x563a97) _0x4b28ef = _0x1b14fc * 0x0;
              else {
                if (
                  this["animalType"] == _0x43a3bb ||
                  this["animalType"] == _0x19797d ||
                  this["animalType"] == _0x15f6e5 ||
                  this["animalType"] == _0x33a471 ||
                  this["animalType"] == _0x3297a2
                )
                  (_0x1b14fc = this["rad"] * 0.5), (_0x4b28ef = _0x1b14fc * 0.4);
                else {
                  if (this["animalType"] == _0x58aade)
                    (_0x1b14fc = this["rad"] * 0.5), (_0x4b28ef = _0x1b14fc * 0.6), this["flag_usingAbility"] && (_0x4b28ef = _0x1b14fc * 1.3);
                  else {
                    if (this["animalType"] == _0x17ab53)
                      (_0x1b14fc = this["rad"] * 0.55), (_0x4b28ef = _0x1b14fc * 0.5), this["flag_usingAbility"] && (_0x4b28ef = _0x1b14fc * 0x1);
                    else {
                      if (this["animalType"] == _0x2e86d6) {
                        (_0x1b14fc = this["rad"] * 0.43), (_0x4b28ef = _0x1b14fc * 0x1);
                        if (this["flag_usingAbility"]) {
                          if (this["specType"] == 0x1) (_0x1b14fc = this["rad"] * 0.45), (_0x4b28ef = _0x1b14fc * 1.3);
                          else this["specType"] == 0x2 && ((_0x1b14fc = this["rad"] * 0.5), (_0x4b28ef = _0x1b14fc * 1.9));
                        }
                      } else {
                        if (this["animalType"] == _0x3d8491)
                          (_0x1b14fc = this["rad"] * 0.5), (_0x4b28ef = _0x1b14fc * 0.55), this["flag_usingAbility"] && (_0x4b28ef = _0x1b14fc * 0.8);
                        else {
                          if (this["animalType"] == _0x65dffc)
                            (_0x1b14fc = this["rad"] * 0.55),
                              (_0x4b28ef = _0x1b14fc * 0x0),
                              this["flag_usingAbility"] && (_0x4b28ef = _0x1b14fc * 0.5);
                          else {
                            if (this["animalType"] == _0x533281)
                              (_0x1b14fc = this["rad"] * 0.4),
                                (_0x4b28ef = _0x1b14fc * 1.1),
                                this["flag_usingAbility"] && ((_0x1b14fc = this["rad"] * 0.5), (_0x4b28ef = _0x1b14fc * _0x244e97));
                            else {
                              if (this["animalType"] == _0x1ee088)
                                (_0x1b14fc = this["rad"] * 0.5),
                                  (_0x4b28ef = _0x1b14fc * 0.5),
                                  this["flag_usingAbility"] && ((_0x1b14fc = this["rad"] * 0.5), (_0x4b28ef = _0x1b14fc * 0x1));
                              else {
                                if (this["animalType"] == _0x2deb28)
                                  (_0x1b14fc = this["rad"] * 0.4),
                                    (_0x4b28ef = _0x1b14fc * 0x1),
                                    this["flag_usingAbility"] &&
                                      (console["log"](this["specType"]), (_0x1b14fc = this["rad"] * 0.5), (_0x4b28ef = _0x1b14fc * 0x1));
                                else {
                                  if (this["animalType"] == _0x5d0d40) {
                                    (_0x1b14fc = this["rad"] * 0.4), (_0x4b28ef = _0x1b14fc * 0x1);
                                    if (this["flag_usingAbility"]) {
                                      _0x587de3["restore"]();
                                      return;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      var _0x8b51f0 = 0x1,
        _0x4c1bc2 = (_0x168a54 - this["maskStartT"]) / 0x3e8;
      if (_0x4c1bc2 > 0x50)
        var _0x3f6cac = 0x1,
          _0x35929c = 0.3,
          _0x29af28 = 0.5,
          _0x4edc83 = 0.5 * (_0x29af28 - _0x35929c),
          _0x8b51f0 = _0x35929c + _0x4edc83 + _0x4edc83 * Math["sin"](((0x2 * Math["PI"]) / _0x3f6cac) * (_0x168a54 / 0x3e8));
      var _0x315443 = 0.8;
      if (this["flag_inHidingHole"]) _0x315443 = 0.6;
      else {
        if (this["flag_underWater"]) _0x315443 = this["idealOp"];
      }
      (_0x587de3["globalAlpha"] = _0x315443 * _0x8b51f0),
        _0x587de3["rotate"](this["angle"]),
        _0x587de3["drawImage"](_0x935bde, -_0x1b14fc, _0x4b28ef, 0x2 * _0x1b14fc, 0x2 * _0x1b14fc),
        _0x587de3["drawImage"](_0x39487d, -_0x1b14fc, _0x4b28ef, 0x2 * _0x1b14fc, 0x2 * _0x1b14fc);
    }
    _0x587de3["restore"]();
  }),
  (_0x3799d1["prototype"]["drawTopEffects"] = function () {
    this["effect_aloeveraHeal"]();
    var _0x1149dd = this["flag_eff_stunned"] ? 0x1 : 0x0;
    this["stunA"] += (_0x1149dd - this["stunA"]) * 0.1;
    if (this["stunA"] > 0.01) {
      _0x587de3["save"]();
      var _0x40c97a = 2.5,
        _0x586730 = (_0x168a54 % (_0x40c97a * 0x3e8)) / (_0x40c97a * 0x3e8);
      _0x587de3["rotate"](_0x586730 * (0x2 * Math["PI"])), (_0x587de3["globalAlpha"] *= this["stunA"]);
      var _0x528e27 = this["rad"] * 0.2,
        _0x209f4c = (_0x168a54 - this["spawnTime"]) / 0x3e8,
        _0x8f4e2f = 0x1,
        _0x56abba = 0.5 + _0x528e27 * 0.07,
        _0x1c8325 = _0x56abba * Math["sin"](((0x2 * Math["PI"]) / _0x8f4e2f) * _0x209f4c);
      (_0x587de3["fillStyle"] = "#F3D444"),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](this["rad"] * -0.22, this["rad"] * -0.22, Math["max"](0x0, _0x528e27 + _0x1c8325), 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](this["rad"] * 0.22, this["rad"] * -0.22, Math["max"](0x0, _0x528e27 - _0x1c8325), 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](this["rad"] * 0.22, this["rad"] * 0.22, Math["max"](0x0, _0x528e27 + _0x1c8325), 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](this["rad"] * -0.22, this["rad"] * 0.22, Math["max"](0x0, _0x528e27 - _0x1c8325), 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        _0x587de3["restore"]();
    }
    var _0x1149dd = this["flag_eff_onFire"] ? 0x1 : 0x0;
    this["onFireEffA"] += (_0x1149dd - this["onFireEffA"]) * 0.1;
    if (this["onFireEffA"] > 0.01) {
      var _0x8f4e2f = 0x1,
        _0x1c10f4 = 0.15,
        _0x2c2ba2 = 0.4,
        _0x128a1b = 0.5 * (_0x2c2ba2 - _0x1c10f4),
        _0x313ff9 = _0x1c10f4 + _0x128a1b + _0x128a1b * Math["sin"](((0x2 * Math["PI"]) / _0x8f4e2f) * (_0x168a54 / 0x3e8));
      _0x587de3["save"](),
        (_0x587de3["globalAlpha"] *= _0x313ff9 * this["onFireEffA"]),
        _0x440ef0(0x0, 0x0, Math["max"](0x0, this["rad"]), "orange"),
        _0x587de3["restore"]();
      var _0x1b0d82 = 0x2;
      if (!(_0x57ae6d == 0x2)) {
        var _0x8f4e2f = 0x1,
          _0x1c10f4 = 0.5,
          _0x2c2ba2 = 0x1,
          _0x128a1b = 0.5 * (_0x2c2ba2 - _0x1c10f4),
          _0x1c8325 = _0x1c10f4 + _0x128a1b + _0x128a1b * Math["sin"](((0x2 * Math["PI"]) / _0x8f4e2f) * (_0x168a54 / 0x3e8)),
          _0x5b924b = Math["trunc"](_0x168a54 / 0x64) % 0x5,
          _0x46747a = Math["trunc"](_0x168a54 / 0x96) % 0x5,
          _0x514f4f = this["getImageObjForPath"]("gameobj/70/0/" + _0x5b924b + ".png", _0x1b0d82),
          _0x34bf3b = this["getImageObjForPath"]("gameobj/70/0/" + _0x46747a + ".png", _0x1b0d82);
        if (_0x514f4f || _0x34bf3b) {
          var _0x40c989 = 0x0 - this["rad"] * 0.3,
            _0x550af0 = this["rad"] * 0.2 - this["rad"] * 0.3,
            _0x4923d9 = (this["rad"] * 0x1 * (0x2 + _0x1c8325 * 0x2)) / 0x3,
            _0x241161 = this["rad"] * 0x1 * _0x1c8325,
            _0x348f46 = 0.5,
            _0x41aa84 = 0.95;
          _0x587de3["save"](),
            _0x514f4f &&
              ((_0x587de3["globalAlpha"] *= this["onFireEffA"] * _0x1c8325),
              _0x587de3["drawImage"](_0x514f4f, _0x40c989 + _0x4923d9 * -_0x348f46, _0x550af0 + _0x241161 * -_0x41aa84, _0x4923d9, _0x241161)),
            _0x34bf3b &&
              ((_0x587de3["globalAlpha"] *= this["onFireEffA"] * _0x1c8325),
              _0x587de3["drawImage"](
                _0x34bf3b,
                _0x40c989 + this["rad"] * 0.5 + _0x4923d9 * -_0x348f46,
                _0x550af0 + this["rad"] * 0.5 + _0x241161 * -_0x41aa84,
                _0x4923d9,
                _0x241161
              )),
            _0x587de3["restore"]();
        }
      } else {
        var _0x8f4e2f = 0x1,
          _0x1c10f4 = 0.5,
          _0x2c2ba2 = 0x1,
          _0x128a1b = 0.5 * (_0x2c2ba2 - _0x1c10f4),
          _0x1c8325 = _0x1c10f4 + _0x128a1b + _0x128a1b * Math["sin"](((0x2 * Math["PI"]) / _0x8f4e2f) * (_0x168a54 / 0x3e8)),
          _0x514f4f = this["getImageObjForPath"]("gameobj/70/0.png", _0x1b0d82);
        if (_0x514f4f) {
          var _0x40c989 = 0x0 - this["rad"] * 0.3,
            _0x550af0 = this["rad"] * 0.2 - this["rad"] * 0.3,
            _0x4923d9 = (this["rad"] * 0x1 * (0x2 + _0x1c8325 * 0x2)) / 0x3,
            _0x241161 = this["rad"] * 0x1 * _0x1c8325,
            _0x348f46 = 0.5,
            _0x41aa84 = 0.95;
          _0x587de3["save"](),
            (_0x587de3["globalAlpha"] *= this["onFireEffA"] * _0x1c8325),
            _0x587de3["drawImage"](_0x514f4f, _0x40c989 + _0x4923d9 * -_0x348f46, _0x550af0 + _0x241161 * -_0x41aa84, _0x4923d9, _0x241161),
            (_0x587de3["globalAlpha"] *= this["onFireEffA"] * _0x1c8325),
            _0x587de3["drawImage"](
              _0x514f4f,
              _0x40c989 + this["rad"] * 0.5 + _0x4923d9 * -_0x348f46,
              _0x550af0 + this["rad"] * 0.5 + _0x241161 * -_0x41aa84,
              _0x4923d9,
              _0x241161
            ),
            _0x587de3["restore"]();
        }
      }
    }
    if (this["frozenEffA"] > 0.01 && this["flag_eff_frozen"]) {
      _0x587de3["save"]();
      var _0x40c97a = 0x7,
        _0x586730 = (_0x168a54 % (_0x40c97a * 0x3e8)) / (_0x40c97a * 0x3e8);
      _0x587de3["rotate"](_0x586730 * (0x2 * Math["PI"])), (_0x587de3["globalAlpha"] *= this["frozenEffA"]);
      var _0x528e27 = this["rad"] * 0.2,
        _0x209f4c = (_0x168a54 - this["spawnTime"]) / 0x3e8,
        _0x8f4e2f = 0x1,
        _0x56abba = 0.5 + _0x528e27 * 0.07,
        _0x1c8325 = _0x56abba * Math["sin"](((0x2 * Math["PI"]) / _0x8f4e2f) * _0x209f4c);
      _0x587de3["fillStyle"] = "white";
      var _0x27645e = this["rad"] * 0.27;
      _0x587de3["beginPath"](),
        _0x587de3["arc"](-_0x27645e, -_0x27645e, Math["max"](0x0, _0x528e27 + _0x1c8325), 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](_0x27645e, -_0x27645e, Math["max"](0x0, _0x528e27 - _0x1c8325), 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](_0x27645e, _0x27645e, Math["max"](0x0, _0x528e27 + _0x1c8325), 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](-_0x27645e, _0x27645e, Math["max"](0x0, _0x528e27 - _0x1c8325), 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        _0x587de3["restore"]();
    }
    if (this["frozenEffA"] > 0.01) {
      _0x587de3["save"]();
      var _0x525400 = 0.3;
      (_0x587de3["globalAlpha"] *= _0x525400 * this["frozenEffA"]),
        _0x440ef0(0x0, 0x0, Math["max"](0x0, this["rad"] - this["outlineW"]), "white"),
        _0x587de3["restore"]();
    }
    if (this["effA_healing"] > 0.01) {
      _0x587de3["save"]();
      var _0x525400 = 0.3;
      (_0x587de3["globalAlpha"] *= _0x525400 * this["effA_healing"]),
        _0x440ef0(0x0, 0x0, Math["max"](0x0, this["rad"] - this["outlineW"]), "#ef24ed"),
        _0x587de3["restore"]();
    }
    this["effect_sweatPoisoned"]();
    if (this["effA_hot"] > 0.01) {
      _0x587de3["save"]();
      var _0x525400 = 0.3,
        _0x8f4e2f = 1.2,
        _0x1c10f4 = 0.3,
        _0x2c2ba2 = 0x1,
        _0x128a1b = 0.5 * (_0x2c2ba2 - _0x1c10f4);
      (_0x587de3["globalAlpha"] *=
        _0x1c10f4 + _0x128a1b + _0x128a1b * Math["sin"](((0x2 * Math["PI"]) / _0x8f4e2f) * ((_0x168a54 - this["spawnTime"]) / 0x3e8))),
        _0x440ef0(0x0, 0x0, Math["max"](0x0, this["rad"] - this["outlineW"]), "rgba(249, 212, 77, 0.3)"),
        _0x587de3["restore"]();
    }
    if (this["effA_poison"] > 0.01) {
      _0x587de3["save"]();
      var _0x525400 = 0.3;
      _0x587de3["globalAlpha"] *= _0x525400 * this["effA_poison"];
      var _0x8f4e2f = 1.2,
        _0x1c10f4 = 0.3,
        _0x2c2ba2 = 0x1,
        _0x128a1b = 0.5 * (_0x2c2ba2 - _0x1c10f4);
      (_0x587de3["globalAlpha"] *=
        _0x1c10f4 + _0x128a1b + _0x128a1b * Math["sin"](((0x2 * Math["PI"]) / _0x8f4e2f) * ((_0x168a54 - this["spawnTime"]) / 0x3e8))),
        _0x440ef0(0x0, 0x0, Math["max"](0x0, this["rad"] - this["outlineW"]), "#9FDA00"),
        _0x587de3["restore"]();
    }
    var _0x1149dd = this["flag_eff_bleeding"] ? 0.8 : 0x0;
    this["effA_bleeding"] += (_0x1149dd - this["effA_bleeding"]) * 0.1;
    if (this["effA_bleeding"] > 0.01) {
      _0x587de3["save"]();
      var _0x8f4e2f = 1.2,
        _0x1c10f4 = 0.3,
        _0x2c2ba2 = 0x1,
        _0x128a1b = 0.3 * (_0x2c2ba2 - _0x1c10f4);
      (_0x587de3["globalAlpha"] *=
        _0x1c10f4 + _0x128a1b + _0x128a1b * Math["sin"](((0x2 * Math["PI"]) / _0x8f4e2f) * ((_0x168a54 - this["spawnTime"]) / 0x3e8))),
        (_0x587de3["globalAlpha"] *= this["effA_bleeding"]);
      var _0x53fe30 = -2.6;
      _0x440ef0(0x0, 0x0, this["rad"] + _0x53fe30 * this["effA_bleeding"], "red"), _0x587de3["restore"]();
    }
    var _0x1149dd = this["flag_eff_slimed"] ? 0.8 : 0x0;
    this["effA_slimed"] += (_0x1149dd - this["effA_slimed"]) * 0.1;
    if (this["effA_slimed"] > 0.01) {
      _0x587de3["save"]();
      var _0x8f4e2f = 1.2,
        _0x1c10f4 = 0.3,
        _0x2c2ba2 = 0x1,
        _0x128a1b = 0.3 * (_0x2c2ba2 - _0x1c10f4);
      (_0x587de3["globalAlpha"] *=
        _0x1c10f4 + _0x128a1b + _0x128a1b * Math["sin"](((0x2 * Math["PI"]) / _0x8f4e2f) * ((_0x168a54 - this["spawnTime"]) / 0x3e8))),
        (_0x587de3["globalAlpha"] *= this["effA_slimed"]);
      var _0x53fe30 = -2.6;
      _0x440ef0(0x0, 0x0, this["rad"] + _0x53fe30 * this["effA_slimed"], "grey"), _0x587de3["restore"]();
    }
    var _0x1149dd = this["flag_eff_stunk"] ? 0.8 : 0x0;
    this["effA_stunk"] += (_0x1149dd - this["effA_stunk"]) * 0.1;
    if (this["effA_stunk"] > 0.01) {
      _0x587de3["save"]();
      var _0x8f4e2f = 1.2,
        _0x1c10f4 = 0.3,
        _0x2c2ba2 = 0x1,
        _0x128a1b = 0.3 * (_0x2c2ba2 - _0x1c10f4);
      (_0x587de3["globalAlpha"] *=
        _0x1c10f4 + _0x128a1b + _0x128a1b * Math["sin"](((0x2 * Math["PI"]) / _0x8f4e2f) * ((_0x168a54 - this["spawnTime"]) / 0x3e8))),
        (_0x587de3["globalAlpha"] *= this["effA_stunk"]);
      var _0x53fe30 = -2.6;
      _0x440ef0(0x0, 0x0, this["rad"] + _0x53fe30 * this["effA_stunk"], "brown"), _0x587de3["restore"]();
    }
    if (this["animalType"] == _0x2a018e && this["flag_usingAbility"]) {
      var _0x8f4e2f = 0.75,
        _0x56abba = 0x1,
        _0x1c8325 = _0x56abba * Math["sin"](((0x2 * Math["PI"]) / _0x8f4e2f) * _0x209f4c),
        _0x52ed4c = _0x587de3["globalAlpha"];
      (_0x587de3["globalAlpha"] *= 0.8 - 0.2 * _0x1c8325),
        _0x440ef0(this["rad"] * 0.15, -this["rad"] * 1.27, this["rad"] * (0.1 + 0.05 * _0x1c8325), "#efefef"),
        _0x440ef0(-this["rad"] * 0.15, -this["rad"] * 1.27, this["rad"] * (0.1 - 0.05 * _0x1c8325), "#efefef"),
        (_0x587de3["globalAlpha"] = _0x52ed4c);
    }
    var _0x1149dd = this["flag_webStuck"] ? 0x1 : 0x0;
    this["effA_webStuck"] += (_0x1149dd - this["effA_webStuck"]) * 0.02;
    if (this["effA_webStuck"] > 0.01) {
      _0x587de3["save"]();
      var _0x525400 = 0.9;
      _0x587de3["globalAlpha"] *= _0x525400 * this["effA_webStuck"];
      var _0x514f4f = this["getImageObjForPath"]("img/web/" + this["eff_webStuckType"] + "/spiderWeb_stuck.png");
      if (_0x514f4f) {
        var _0x509ac7 = this["rad"] * 1.3;
        _0x587de3["rotate"](this["angle"]), _0x587de3["drawImage"](_0x514f4f, -_0x509ac7, -_0x509ac7, 0x2 * _0x509ac7, 0x2 * _0x509ac7);
      }
      _0x587de3["restore"]();
    }
    this["effectDirt"]();
    var _0x1149dd = this["flag_constricted"] ? 0x1 : 0x0;
    this["effA_constricted"] += (_0x1149dd - this["effA_constricted"]) * 0.04;
    if (this["effA_constricted"] > 0.01) {
      _0x587de3["save"]();
      var _0x525400 = 0.9;
      _0x587de3["globalAlpha"] *= _0x525400 * this["effA_constricted"];
      var _0xf29c1c = "skins/land/boaconstrictor/" + this["eff_constrictedSpecies"];
      if (this["eff_constrictedSubSpecies"] !== undefined && this["eff_constrictedSubSpecies"] > 0x0)
        _0xf29c1c += "/" + this["eff_constrictedSubSpecies"];
      var _0x214f47 = this["eff_constrictedSpecies"] === 0x1 || this["eff_constrictedSpecies"] === 0x2 ? 0x1 : this["mopeSeasonID"];
      console["log"]("constrict img: " + _0xf29c1c);
      var _0x514f4f = this["getSkinImageObjForSeason"](_0xf29c1c + "/constrict.png", _0x214f47);
      if (_0x514f4f) {
        var _0x509ac7 = this["rad"] * 1.3;
        _0x587de3["rotate"](this["angle"]), _0x587de3["drawImage"](_0x514f4f, -_0x509ac7, -_0x509ac7, 0x2 * _0x509ac7, 0x2 * _0x509ac7);
      }
      _0x587de3["restore"]();
    }
    this["drawProtectiveMask"]();
  }),
  (_0x3799d1["prototype"]["effectDirt"] = function () {
    if (this["effA_dirtStuck"] == undefined) this["effA_dirtStuck"] = 0x0;
    var _0x3e81df = this["flag_eff_dirty"] ? 0x1 : 0x0;
    this["effA_dirtStuck"] += (_0x3e81df - this["effA_dirtStuck"]) * 0.02;
    if (this["effA_dirtStuck"] > 0.01) {
      _0x587de3["save"](), _0x587de3["rotate"](this["angle"]);
      var _0x42376e = 0.9;
      _0x587de3["globalAlpha"] *= _0x42376e * this["effA_dirtStuck"];
      var _0x4d56b4 = this["getImageObjForPath"]("img/dirt/" + this["eff_dirtType"] + "/0.png");
      if (_0x4d56b4) {
        var _0x1a3d2e = this["skinScale"],
          _0x266bcf = this["skinRad"];
        _0x587de3["drawImage"](_0x4d56b4, -_0x266bcf * _0x1a3d2e, -_0x266bcf * _0x1a3d2e, 0x2 * _0x266bcf * _0x1a3d2e, 0x2 * _0x266bcf * _0x1a3d2e);
      }
      var _0x4d56b4 = this["getImageObjForPath"]("img/dirt/" + this["eff_dirtType"] + "/1.png");
      if (_0x4d56b4) {
        var _0x1a3d2e = this["skinScale"],
          _0x266bcf = this["skinRad"];
        _0x587de3["drawImage"](_0x4d56b4, -_0x266bcf * _0x1a3d2e, -_0x266bcf * _0x1a3d2e, 0x2 * _0x266bcf * _0x1a3d2e, 0x2 * _0x266bcf * _0x1a3d2e);
      }
      _0x587de3["restore"]();
    }
  }),
  (_0x3799d1["prototype"]["getSpeciesPath"] = function (_0x1fd6e4) {
    return _0x1fd6e4 + "/" + this["animalSpecies"];
  }),
  (_0x3799d1["prototype"]["getWing"] = function (_0x3df3b0, _0xf9de0d, _0x4bcd7a) {
    var _0x21b1b1 = "skins/" + (_0x4bcd7a ? this["getSpeciesPath"](_0x3df3b0) + "/" : _0x3df3b0 + "/");
    return (_0x21b1b1 += _0x3df3b0 + "_wing" + _0xf9de0d + ".png"), _0x21b1b1;
  }),
  (_0x3799d1["prototype"]["getHead"] = function (_0x1c03e9, _0x1bae1d) {
    var _0x1bc639 = "skins/" + (_0x1bae1d ? this["getSpeciesPath"](_0x1c03e9) + "/" : _0x1c03e9 + "/");
    return (_0x1bc639 += _0x1c03e9 + "_head.png"), _0x1bc639;
  }),
  (_0x3799d1["prototype"]["getSkinName"] = function () {
    var _0x81c518 = this["skinImgName"];
    switch (this["animalType"]) {
      case _0x391550:
      case _0x50e796:
      case _0x15f668:
      case _0x36f1a3:
      case _0x52ce41:
      case _0x1a3bd2:
      case _0x2e22f9:
      case _0x26c175:
        var _0x460235 = "";
        if (this["flag_usingAbility"]) _0x81c518 = _0x460235 + _0x81c518 + "2";
        break;
      case _0x10ad1f:
        this["z"] = this["z"] * 0x2;
        if (this["flag_usingAbility"] && this["specType"] == 0x4) _0x81c518 = _0x81c518 + "2";
        break;
    }
    return this["getPremiumSkin"](_0x81c518);
  }),
  (_0x3799d1["prototype"]["getPremiumSkinFolder"] = function () {
    switch (this["animalPremiumSkin"]) {
      case 0x1:
        return "premium/golden/";
      case 0x2:
        return "premium/locked/";
    }
    return "";
  }),
  (_0x3799d1["prototype"]["getPremiumSkin"] = function (_0x2752b0) {
    return this["getPremiumSkinFolder"]() + _0x2752b0;
  }),
  (_0x3799d1["prototype"]["onAnimalSpeciesSet"] = function () {}),
  (_0x3799d1["prototype"]["setObjTypes"] = function (_0x1cee53, _0x415f3a) {
    (this["oType"] = _0x1cee53), (this["animalType"] = _0x415f3a);
  }),
  (_0x3799d1["prototype"]["readCustomData_onNewlyVisible"] = function (_0x207c7d) {
    _0x3799d1["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x207c7d);
    var _0x1ed76f = _0x207c7d["readString"]();
    (this["nickName"] = _0x1ed76f && _0x1ed76f["length"] > 0x0 ? _0x1ed76f : "mope.io"),
      (this["animalSpecies"] = _0x207c7d["readUInt8"]()),
      (this["animalSubSpecies"] = _0x207c7d["readUInt8"]()),
      (this["animalPremiumSkin"] = _0x207c7d["readUInt8"]()),
      (this["skinThemeID"] = _0x207c7d["readUInt8"]()),
      (this["mopeSeasonID"] = _0x207c7d["readUInt8"]()),
      this["onAnimalSpeciesSet"]();
    this["animalPremiumSkin"] > 0x0 && this["setSparkleInterval"](_0x103b73(0x5, 0xa), _0x103b73(0x2, 0x3));
    this["setNick"](this["nickName"]);
    var _0x4a4dc3 = _0x207c7d["readBitGroup"]();
    this["readUpdatedFlags"](_0x4a4dc3),
      this["flag_webStuck"] && this["readUpdatedProperty"](_0x35223a, _0x207c7d),
      this["readUpdatedProperty"](_0x3f85b7, _0x207c7d);
  }),
  (_0x3799d1["prototype"]["custom_canvas"] = null),
  (_0x3799d1["prototype"]["drawCanvas"] = function () {
    if (!this["custom_canvas"]) {
      this["custom_canvas"] = document["createElement"]("canvas");
      var _0x18f215 = this["rad"] * 0x14,
        _0x3b8b2e = this["rad"] * 0x14;
      (this["custom_canvas"]["width"] = _0x18f215), (this["custom_canvas"]["height"] = _0x3b8b2e);
      var _0x4d8716 = this["custom_canvas"]["getContext"]("2d");
      _0x4d8716["save"](),
        (_0x4d8716["filter"] = "blur(4px)"),
        (_0x4d8716["globalAlpha"] = 0x1),
        (_0x4d8716["fillStyle"] = "black"),
        _0x4d8716["fillRect"](0x0, 0x0, this["custom_canvas"]["width"] * 0x2, this["custom_canvas"]["height"] * 0x2),
        (_0x4d8716["globalCompositeOperation"] = "xor"),
        _0x4d8716["beginPath"](),
        _0x4d8716["arc"](_0x18f215 / 0x2, _0x18f215 / 0x2, this["rad"] + 0x5, 0x0, 0x2 * Math["PI"]),
        (_0x4d8716["fillStyle"] = "red"),
        _0x4d8716["fill"](),
        _0x4d8716["restore"]();
    }
    this["custom_canvas"] != null &&
      (_0x587de3["save"](),
      (_0x587de3["globalAlpha"] = 0.5),
      _0x587de3["drawImage"](
        this["custom_canvas"],
        -this["custom_canvas"]["width"] / 0x2,
        -this["custom_canvas"]["height"] / 0x2,
        this["custom_canvas"]["width"],
        this["custom_canvas"]["height"]
      ),
      _0x587de3["restore"]());
  }),
  (_0x3799d1["prototype"]["updateAngle"] = function (_0x166d32) {
    var _0x43c54a = _0x3d960f(_0x166d32 - 0x5a);
    (this["angleDelta"] = _0xd024c6(this["angle"], _0x43c54a)),
      (this["oAngle"] = this["angle"]),
      this["firstPosUpd"] && ((this["oAngle"] = this["angle"] = _0x43c54a), (this["angleDelta"] = 0x0));
  }),
  (_0x3799d1["prototype"]["readUpdatedFlags"] = function (_0x394cb6) {
    _0x3799d1["superClass"]["prototype"]["readUpdatedFlags"]["call"](this, _0x394cb6),
      (this["flag_lowWat"] = _0x394cb6["getBool"]()),
      (this["flag_underWater"] = _0x394cb6["getBool"]()),
      (this["flag_usingDiveAbility"] = _0x394cb6["getBool"]()),
      (this["flag_eff_invincible"] = _0x394cb6["getBool"]()),
      (this["flag_usingAbility"] = _0x394cb6["getBool"]()),
      (this["flag_tailBitten"] = _0x394cb6["getBool"]()),
      (this["flag_eff_stunned"] = _0x394cb6["getBool"]()),
      (this["flag_iceSliding"] = _0x394cb6["getBool"]()),
      (this["flag_eff_frozen"] = _0x394cb6["getBool"]()),
      (this["flag_eff_onFire"] = _0x394cb6["getBool"]()),
      (this["flag_eff_healing"] = _0x394cb6["getBool"]()),
      (this["flag_eff_poison"] = _0x394cb6["getBool"]()),
      (this["flag_constricted"] = _0x394cb6["getBool"]()),
      (this["flag_webStuck"] = _0x394cb6["getBool"]()),
      (this["flag_stealth"] = _0x394cb6["getBool"]()),
      (this["flag_eff_bleeding"] = _0x394cb6["getBool"]()),
      (this["flag_flying"] = _0x394cb6["getBool"]()),
      (this["flag_isGrabbed"] = _0x394cb6["getBool"]()),
      (this["flag_eff_aniInClaws"] = _0x394cb6["getBool"]()),
      (this["flag_eff_stunk"] = _0x394cb6["getBool"]()),
      (this["flag_cold"] = _0x394cb6["getBool"]()),
      (this["flag_inWater"] = _0x394cb6["getBool"]()),
      (this["flag_inLava"] = _0x394cb6["getBool"]()),
      (this["flag_canClimbHill"] = _0x394cb6["getBool"]()),
      (this["flag_isClimbingHill"] = _0x394cb6["getBool"]()),
      (this["flag_isDevMode"] = _0x394cb6["getBool"]()),
      (this["flag_eff_slimed"] = _0x394cb6["getBool"]()),
      (this["flag_eff_wobbling"] = _0x394cb6["getBool"]()),
      (this["flag_eff_hot"] = _0x394cb6["getBool"]()),
      (this["flag_eff_sweatPoisoned"] = _0x394cb6["getBool"]()),
      (this["flag_eff_shivering"] = _0x394cb6["getBool"]()),
      (this["flag_inHidingHole"] = _0x394cb6["getBool"]()),
      (this["flag_eff_grabbedByFlytrap"] = _0x394cb6["getBool"]()),
      (this["flag_eff_aloeveraHealing"] = _0x394cb6["getBool"]()),
      (this["flag_eff_tossedInAir"] = _0x394cb6["getBool"]()),
      (this["flag_eff_isOnSpiderWeb"] = _0x394cb6["getBool"]()),
      (this["flag_fliesLikeDragon"] = _0x394cb6["getBool"]()),
      (this["flag_eff_isInMud"] = _0x394cb6["getBool"]()),
      (this["flag_eff_statue"] = _0x394cb6["getBool"]()),
      (this["flag_eff_isOnTree"] = _0x394cb6["getBool"]()),
      (this["flag_eff_isUnderTree"] = _0x394cb6["getBool"]()),
      (this["flag_speared"] = _0x394cb6["getBool"]()),
      (this["flag_eff_dirty"] = _0x394cb6["getBool"]()),
      (this["flag_eff_virusInfection"] = _0x394cb6["getBool"]()),
      (this["flag_eff_wearingMask"] = _0x394cb6["getBool"]()),
      (this["flag_eff_sanitized"] = _0x394cb6["getBool"]()),
      (this["flag_viewing1v1Invite"] = _0x394cb6["getBool"]()),
      (this["flag_can1v1"] = _0x394cb6["getBool"]()),
      (this["flag_isInArena"] = _0x394cb6["getBool"]());
    if (this["flag_isDevMode"]) this["flag_hideDevPrint"] = _0x394cb6["getBool"]();
  }),
  (_0x3799d1["prototype"]["readUpdatedProperty"] = function (_0x39f5f7, _0x48d75e) {
    if (_0x39f5f7 == _0x4cf8cb) {
      this["wins1v1"] = _0x48d75e["readUInt16"]();
      if (_0x4ec648 && this["flag_can1v1"]) {
        let _0x4b5cb7 = "\x0a(wins:" + this["wins1v1"] + ")";
        this["nickTXT"]["setText"](this["nickName"] + _0x4b5cb7), (this["winsAddedInNick"] = !![]);
      } else this["winsAddedInNick"] && ((this["winsAddedInNick"] = ![]), this["nickTXT"]["setText"](this["nickName"]));
    } else {
      if (_0x39f5f7 == _0x41ac3) (this["devMode_num"] = _0x48d75e["readUInt8"]()), console["log"](this["devMode_num"]);
      else {
        if (_0x39f5f7 == _0x3f1c5a) this["playerNumberFor1v1Arena"] = _0x48d75e["readUInt8"]();
        else {
          if (_0x39f5f7 == _0x23adc9) this["diveType"] = _0x48d75e["readUInt8"]();
          else {
            if (_0x39f5f7 == _0x3a216a) this["eff_statueType"] = _0x48d75e["readUInt8"]();
            else {
              if (_0x39f5f7 == _0x21667a) this["eff_constrictedSpecies"] = _0x48d75e["readUInt16"]();
              else {
                if (_0x39f5f7 == _0xa40cc4) this["eff_constrictedSubSpecies"] = _0x48d75e["readUInt16"]();
                else {
                  if (_0x39f5f7 == _0x35223a) this["eff_webStuckType"] = _0x48d75e["readUInt8"]();
                  else {
                    if (_0x39f5f7 == _0x407dcc) this["eff_dirtType"] = _0x48d75e["readUInt8"]();
                    else {
                      if (_0x39f5f7 == _0x493a29) {
                        let _0x2ff176 = _0x48d75e["readUInt8"]();
                        this["infectionBarA"] < 0.001 && (this["infectionPer"] = _0x2ff176),
                          (this["infectionPer_n"] = _0x2ff176),
                          (this["infectionBarTimeoutT"] = +new Date() + 0xbb8);
                      } else {
                        if (_0x39f5f7 == _0x20a0c9)
                          (this["lastHidingHoleID"] = _0x48d75e["readUInt32"]()), (this["hidingHoleVisibilityRad"] = _0x48d75e["readUInt16"]() / 0x4);
                        else {
                          if (_0x39f5f7 == _0x21dbce) {
                            let _0x324818 = _0x48d75e["readUInt8"]();
                            this["infectionBarA"] < 0.001 && (this["infectionPer"] = _0x324818),
                              (this["infectionPer_n"] = _0x324818),
                              (this["infectionBarTimeoutT"] = +new Date() + 0xbb8);
                          } else {
                            if (_0x39f5f7 == _0x57788b) this["lava"] = _0x48d75e["readUInt8"]();
                            else {
                              if (_0x39f5f7 == _0x1bc190) {
                                let _0x46e8eb = _0x48d75e["readUInt16"]() / 0x4,
                                  _0x5e2017 = _0x48d75e["readUInt16"]() / 0x4;
                                _0x46e8eb > 0x0 && _0x5e2017 > 0x0
                                  ? ((this["hasDevTarget"] = _0x204989 == this["id"]),
                                    (this["target_ox"] = this["devTargetX"]),
                                    (this["target_oy"] = this["devTargetY"]),
                                    (this["target_nx"] = _0x46e8eb),
                                    (this["target_ny"] = _0x5e2017))
                                  : (this["hasDevTarget"] = ![]);
                              } else
                                _0x39f5f7 == _0x3f85b7
                                  ? (this["teamID"] = _0x48d75e["readUInt8"]())
                                  : this["customUpdatedProperty"](_0x39f5f7, _0x48d75e);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }),
  (_0x3799d1["prototype"]["devTargetX"] = 0x0),
  (_0x3799d1["prototype"]["devTargetY"] = 0x0),
  (_0x3799d1["prototype"]["target_ox"] = 0x0),
  (_0x3799d1["prototype"]["target_oy"] = 0x0),
  (_0x3799d1["prototype"]["target_nx"] = 0x0),
  (_0x3799d1["prototype"]["target_ny"] = 0x0),
  (_0x3799d1["prototype"]["hasDevTarget"] = ![]),
  (_0x3799d1["prototype"]["onLerpUpdate"] = function (_0x5ef0c4) {
    this["hasDevTarget"] &&
      ((this["devTargetX"] = _0x5ef0c4 * (this["target_nx"] - this["target_ox"]) + this["target_ox"]),
      (this["devTargetY"] = _0x5ef0c4 * (this["target_ny"] - this["target_oy"]) + this["target_oy"]));
  }),
  (_0x3799d1["prototype"]["beforeCustomDraw"] = function (_0x3a176e) {
    this["hasDevTarget"] &&
      (console["log"](this["devTargetX"] + ":" + this["devTargetY"]),
      _0x587de3["save"](),
      (_0x587de3["strokeStyle"] = "yellow"),
      (_0x587de3["lineWidth"] = 0x2),
      (_0x587de3["globalAlpha"] = 0x1),
      _0x587de3["beginPath"](),
      _0x587de3["moveTo"](this["x"], this["y"]),
      _0x587de3["lineTo"](this["devTargetX"], this["devTargetY"]),
      _0x587de3["stroke"](),
      _0x587de3["restore"]());
  }),
  (_0x3799d1["prototype"]["customUpdatedProperty"] = function (_0x4f9119, _0x50b3dc) {}),
  (_0x3799d1["prototype"]["diveType"] = 0x0),
  (_0x3799d1["prototype"]["lastHidingHoleID"] = 0x0),
  (_0x3799d1["prototype"]["hidingHoleVisibilityRad"] = 0x0),
  (_0x3799d1["prototype"]["winsAddedInNick"] = ![]);

function _0x3799d1(_0x4c138b, _0x1978f5) {
  _0x3799d1["superClass"]["call"](this, _0x3fb3b2), (this["animalType"] = _0x1978f5);
}
(_0x3799d1["prototype"]["getAbilityInfo"] = function (_0x4f35ea) {
  if (this["animalType"] == _0x33a471) {
    var _0xe37cb2 = {};
    return (
      (_0xe37cb2["abilName"] = "Claw Slash!"),
      (_0xe37cb2["abilImg"] = "skins/arctic/bear/clawslash.png"),
      (_0xe37cb2["skinThemeID"] = this["skinThemeID"]),
      (_0xe37cb2["mopeSeasonID"] = this["mopeSeasonID"]),
      _0xe37cb2
    );
  } else return _0x1cbaa4(_0x4f35ea);
}),
  (_0x3799d1["prototype"]["calculateZIndex"] = function () {
    this["updateZ"]();
    if (_0x34fedb && _0x204989 == this["id"]) this["z"] = 0x7d0 + this["rad"];
    else {
      if (this["flag_eff_grabbedByFlytrap"]) this["z"] = 0x44c + this["rad"];
      else {
        if (this["flag_eff_tossedInAir"]) this["z"] = 0x4b0 + this["rad"];
        else {
          if (this["flag_flying"]) {
            this["z"] = 0x186a0;
            if (this["flag_isGrabbed"]) this["z"] -= this["rad"];
            else this["z"] += this["rad"];
            this["flag_eff_aniInClaws"] && (this["z"] += 0x3e8), this["specType2"] == 0x64 && (this["z"] = 0x3f6);
          } else {
            if (this["flag_underWater"] || (this["flag_usingAbility"] && this["animalType"] == _0x108a58)) this["z"] = -0x97;
            else {
              if (
                this["flag_usingAbility"] &&
                (this["animalType"] == _0x17ab53 || this["animalType"] == _0x3d8491 || this["animalType"] == _0x4eaba8)
              )
                this["z"] = 0x2711 + this["rad"];
              else {
                if (
                  (this["flag_canClimbHill"] && this["animalType"] != _0x4eaba8) ||
                  this["animalType"] == _0x15f6e5 ||
                  this["animalType"] == _0x1e9785 ||
                  this["animalType"] == _0x33164c ||
                  this["animalType"] == _0x33a471 ||
                  this["animalType"] == _0x2d0ebc ||
                  this["animalType"] == _0x36f1a3 ||
                  this["animalType"] == _0x23ab49 ||
                  this["animalType"] == _0x379cc3 ||
                  this["animalType"] == _0x58f094 ||
                  this["animalType"] == _0x52066d ||
                  this["animalType"] == _0x2e22f9 ||
                  this["animalType"] == _0x2a018e
                )
                  this["z"] = 0x3e8 + this["rad"];
                else {
                  if (this["animalType"] == _0x322b1f) this["z"] = 0x3f1 + this["rad"];
                  else {
                    if (this["animalType"] == _0x11d87b) this["z"] = 0x3f0 + (this["flag_usingAbility"] ? 0x1 : 0x0) + this["rad"];
                    else this["z"] = this["rad"] * 1.5;
                  }
                }
              }
              if (this["flag_fliesLikeDragon"] || this["flag_isInArena"]) this["z"] += 0x7d0;
            }
          }
        }
      }
    }
    this["updateZ_onTree"](this["z"]);
  }),
  (_0x3799d1["prototype"]["canDrawDark"] = function () {
    if (this["flag_inHidingHole"]) return !![];
    return ![];
  });
var _0x5b343a = null;
(_0x3799d1["prototype"]["drawDark"] = function () {
  if (!this["canDrawDark"]()) {
    console["log"]("cant draw darkness!");
    return;
  }
  if (_0x5b343a == null) {
    _0x5b343a = document["createElement"]("canvas");
    var _0x51ab25 = this["rad"] * 0xa,
      _0x22d8bc = this["rad"] * 0xa;
    (_0x5b343a["width"] = _0x51ab25), (_0x5b343a["height"] = _0x22d8bc);
    var _0x51dd1c = _0x5b343a["getContext"]("2d");
    _0x51dd1c["save"](),
      (_0x51dd1c["filter"] = "blur(2px)"),
      (_0x51dd1c["globalAlpha"] = 0x1),
      (_0x51dd1c["fillStyle"] = "black"),
      _0x51dd1c["fillRect"](0x0, 0x0, _0x5b343a["width"], _0x5b343a["height"]),
      (_0x51dd1c["globalCompositeOperation"] = "xor"),
      _0x51dd1c["beginPath"](),
      _0x51dd1c["arc"](_0x51ab25 / 0x2, _0x51ab25 / 0x2, this["rad"] - 0x3, 0x0, 0x2 * Math["PI"]),
      (_0x51dd1c["fillStyle"] = "blue"),
      _0x51dd1c["fill"](),
      _0x51dd1c["restore"]();
  }
  _0x5b343a != null &&
    (_0x587de3["save"](),
    (_0x587de3["globalAlpha"] = 0.5),
    _0x587de3["drawImage"](_0x5b343a, -_0x5b343a["width"] / 0x2, -_0x5b343a["height"] / 0x2, _0x5b343a["width"], _0x5b343a["height"]),
    _0x587de3["restore"]());
}),
  (_0x3799d1["prototype"]["skinThemeID"] = 0x0),
  (_0x3799d1["prototype"]["getSkinImagePath"] = function (_0x27af1d) {
    var _0x18a67d = "";
    if (this["skinThemeID"] != 0x0 && (this["animalSpecies"] == 0x0 || (this["animalSpecies"] == 0x1 && this["animalType"] == _0x5195b7)))
      _0x18a67d = "./assets/t/" + this["skinThemeID"] + "/" + _0x27af1d;
    else {
      var _0x39a3cb = _0x27af1d["includes"]("_dive") ? 0x2 : this["mopeSeasonID"];
      _0x18a67d = "./assets/s/" + _0x39a3cb + "/" + _0x27af1d;
    }
    return _0x18a67d;
  }),
  (_0x3799d1["prototype"]["getSkinImagePathForShop"] = function (_0x1dbb58) {
    var _0x3cfec2 = "";
    if (this["skinThemeID"] != 0x0 && this["animalSpecies"] == 0x0) _0x3cfec2 = "./assets/t/" + this["skinThemeID"] + "/skins/" + _0x1dbb58;
    else _0x3cfec2 = "./assets/s/" + this["mopeSeasonID"] + "/skins/" + _0x1dbb58;
    return _0x3cfec2;
  }),
  (_0x3799d1["prototype"]["getSkinImageObj"] = function (_0x42778d) {
    var _0x2d3d81 = this["getSkinImagePath"](_0x42778d);
    return _0x2d8f34(_0x2d3d81, function (_0x3cb5ba) {
      console["log"](_0x3cb5ba["src"]);
    });
  }),
  (_0x3799d1["prototype"]["getSkinImageObjAsync"] = async function (_0x511629) {
    var _0x19bc4c = this["getSkinImagePath"](_0x511629);
    return _0x4e994b(_0x19bc4c);
  }),
  (_0x3799d1["prototype"]["getImagePath"] = function (_0x5bad03, _0x5bff22) {
    const _0x981bc2 = _0x5bff22 === undefined ? this["mopeSeasonID"] : _0x5bff22;
    var _0x50ff7f = "";
    return (_0x50ff7f = "./assets/s/" + _0x981bc2 + "/" + _0x5bad03), _0x50ff7f;
  }),
  (_0x3799d1["prototype"]["getImageObjForPath"] = function (_0x3c15eb, _0x4fbc86) {
    var _0x238fdb = this["getImagePath"](_0x3c15eb, _0x4fbc86);
    return _0x2d8f34(_0x238fdb, function (_0x283e50) {
      console["log"](_0x283e50["src"]);
    });
  }),
  (_0x3799d1["prototype"]["setRadius"] = function (_0x12b75a) {
    this["rad"] = _0x12b75a;
  }),
  (window["Animal"] = _0x3799d1),
  _0x17bf26["setCustomClassForGameObjType"](_0x3799d1, _0x3fb3b2);
var _0x1d83bb = _0x13bce2,
  _0x48c344 = _0x307a43;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344),
  (_0x13bce2["prototype"]["animalType"] = _0x659012),
  (_0x13bce2["prototype"]["animalSpecies"] = 0x0),
  (_0x13bce2["prototype"]["animalSubSpecies"] = 0x0),
  (_0x13bce2["prototype"]["segmentNum"] = 0x0),
  (_0x13bce2["prototype"]["updateZ"] = function () {
    this["z"] = 0x1e - this["segmentNum"];
  }),
  (_0x13bce2["prototype"]["customDraw"] = function (_0x447fb3) {
    _0x587de3["save"]();
    var _0x355748 = this["segmentNum"],
      _0x3c6c67 = this["getSkinImageObj"]("skins/deathworm/segment_" + _0x355748 + ".png");
    if (_0x3c6c67) {
      var _0x2af1df = this["rad"] * 0x2;
      _0x587de3["rotate"](this["angle"]), _0x587de3["drawImage"](_0x3c6c67, -_0x2af1df, -_0x2af1df, 0x2 * _0x2af1df, 0x2 * _0x2af1df);
    }
    _0x587de3["restore"]();
  }),
  (_0x13bce2["prototype"]["readCustomData_onNewlyVisible"] = function (_0x20bdb7) {
    _0x13bce2["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x20bdb7),
      (this["segmentNum"] = _0x20bdb7["readUInt8"]()),
      (this["animalSpecies"] = _0x20bdb7["readUInt8"]()),
      (this["animalSubSpecies"] = _0x20bdb7["readUInt8"]()),
      (this["animalPremiumSkin"] = _0x20bdb7["readUInt8"]()),
      console["log"]("segment num: " + this["segmentNum"]);
  });

function _0x13bce2(_0xd8d17d, _0x25067b) {
  _0x13bce2["superClass"]["call"](this, _0x2e7271), (this["animalType"] = _0x25067b);
}
(window["AnimalBody"] = _0x13bce2), _0x17bf26["setCustomClassForGameObjType"](_0x13bce2, _0x2e7271);
var _0x48c344 = _0x307a43;
(_0x7e0a9b["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x7e0a9b["prototype"]["constructor"] = _0x7e0a9b),
  (_0x7e0a9b["superClass"] = _0x48c344),
  (_0x7e0a9b["prototype"]["updateZ"] = function () {
    this["z"] = 0x3ea;
  }),
  (_0x7e0a9b["prototype"]["readUpdatedProperty"] = function (_0x394e3d, _0x7e59be) {
    _0x394e3d == _0x425fda && (this["webTransparency"] = _0x7e59be["readUInt8"]());
  }),
  (_0x7e0a9b["prototype"]["readCustomData_onNewlyVisible"] = function (_0x18b45f) {
    (this["webTransparency"] = _0x18b45f["readUInt8"]()), (this["webType"] = _0x18b45f["readUInt8"]());
  }),
  (_0x7e0a9b["prototype"]["customDraw"] = function (_0x492ec4) {
    _0x587de3["save"](), (_0x587de3["globalAlpha"] *= (this["webTransparency"] / 0x64) * 0.9);
    var _0x3683bc = this["getSkinImageObj"]("img/web/" + this["webType"] + "/spiderWeb.png");
    if (_0x3683bc) {
      var _0x526ba5 = this["rad"];
      _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
        _0x587de3["drawImage"](_0x3683bc, -_0x526ba5, -_0x526ba5, 0x2 * _0x526ba5, 0x2 * _0x526ba5);
    }
    _0x587de3["restore"]();
  });

function _0x7e0a9b() {
  _0x7e0a9b["superClass"]["call"](this, _0x2e4bf1),
    (this["webTransparency"] = 0x0),
    (this["doesDrawEffectScale"] = !![]),
    (this["drawEffectScale_Slow"] = !![]);
}
(window["SpiderWeb"] = _0x7e0a9b), _0x17bf26["setCustomClassForGameObjType"](_0x7e0a9b, _0x2e4bf1);
var _0x48c344 = _0x3799d1;
(_0x489d3d["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x489d3d["prototype"]["constructor"] = _0x489d3d),
  (_0x489d3d["superClass"] = _0x48c344),
  (_0x489d3d["prototype"]["animalInfo"] = function () {
    var _0x5d9609 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x5d9609["aniName"] = "Octopus";
        break;
      case 0xc8:
        _0x5d9609["aniName"] = "Vampire Squid";
        break;
      case 0xc9:
        _0x5d9609["aniName"] = "Fuchsia Tiger";
        break;
      case 0xca:
        _0x5d9609["aniName"] = "Na Kika";
        break;
    }
    return (
      (_0x5d9609["skinName"] = this["getSkinName"]()),
      (_0x5d9609["aniDesc"] = ""),
      (_0x5d9609["upgradeText"] =
        "UPGRADED to " +
        _0x5d9609["aniName"] +
        "!\x0aPress W to use your 'Disguise' ability!\x0a(Hint: wait for prey to bite you- they get stunned!)"),
      (_0x5d9609["aniCol"] = "#ff8340"),
      _0x5d9609
    );
  }),
  (_0x489d3d["prototype"]["getSkinName"] = function () {
    let _0x2fe080 = this["getSpeciesPath"]() + "/octopus";
    return (_0x2fe080 += this["specType"] == 0x0 ? "" : 0x1), _0x2fe080;
  }),
  (_0x489d3d["prototype"]["getSpeciesPath"] = function () {
    return "ocean/octopus/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x489d3d["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x489d3d["prototype"]["getAbilityInfo"] = function (_0x1cf238) {
    var _0x376813 = {};
    return (
      (_0x376813["abilName"] = "Disguise"),
      (_0x376813["abilImg"] = "abilities/Disguise.svg"),
      (_0x376813["skinThemeID"] = this["skinThemeID"]),
      (_0x376813["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x376813
    );
  }),
  (_0x489d3d["prototype"]["drawUnderSkinImg"] = function () {
    if (this["animalSpecies"] == 0xc8) return;
    var _0x1e11d9 = 0x1f4 / 0x154,
      _0x3e35c8 = this["getSkinImageObj"]("skins/" + this["getSpeciesPath"]() + "/head.png");
    if (_0x3e35c8) {
      _0x587de3["save"]();
      var _0x736bca = 1.1,
        _0x2729f0 = this["rad"] - this["outlineW"];
      _0x587de3["drawImage"](
        _0x3e35c8,
        -_0x2729f0 * _0x1e11d9,
        -_0x2729f0 * _0x736bca * _0x1e11d9,
        0x2 * _0x2729f0 * _0x1e11d9,
        0x2 * _0x2729f0 * _0x1e11d9
      ),
        _0x587de3["restore"]();
    }
  }),
  (_0x489d3d["prototype"]["readCustomData_onNewlyVisible"] = function (_0x1d88e2) {
    _0x489d3d["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x1d88e2);
    var _0x350351 = _0x1d88e2["readUInt8"]() > 0x0;
    if (_0x350351) {
      var _0x2d8123 = _0x1d88e2["readUInt8"]() > 0x0,
        _0xc50ab = _0x1d88e2["readUInt16"]();
      this["createDisguiseAniObj"](_0x2d8123, _0xc50ab);
    }
  }),
  (_0x489d3d["prototype"]["customUpdatedProperty"] = function (_0x14acb0, _0x2071ad) {
    if (_0x14acb0 == _0x898796) {
      var _0x3ed4f6 = _0x2071ad["readUInt8"]() > 0x0;
      if (_0x3ed4f6) {
        var _0x31f257 = _0x2071ad["readUInt8"]() > 0x0,
          _0x386368 = _0x2071ad["readUInt16"]();
        this["createDisguiseAniObj"](_0x31f257, _0x386368);
      } else this["octoDrawObj"] = null;
    }
  }),
  (_0x489d3d["prototype"]["createDisguiseAniObj"] = function (_0x3835f5, _0x43ba52) {
    if (this["octoDrawObj"] == null) {
      var _0x3513ed = _0x3835f5 ? _0x3fb3b2 : _0x43ba52,
        _0x3fb344 = _0x3835f5 ? _0x43ba52 : null,
        _0x335af8 = _0x17bf26["createGameObjOfOType"](_0x3513ed, _0x3fb344);
      if (_0x3835f5) _0x335af8["animalType"] = _0x3fb344;
      (_0x335af8["oRad"] = this["oRad"]),
        (_0x335af8["nRad"] = this["nRad"]),
        (_0x335af8["curBiome"] = this["curBiome"]),
        (this["octoDrawObj"] = _0x335af8),
        (this["octoDrawObj"]["mopeSeasonID"] = 0x2);
    }
  }),
  (_0x489d3d["prototype"]["drawUnderSkinImgOutline"] = function () {
    _0x489d3d["superClass"]["prototype"]["drawUnderSkinImgOutline"]["call"](this);
  }),
  (_0x489d3d["prototype"]["drawOnTopOfSkinImg"] = function () {
    _0x489d3d["superClass"]["prototype"]["drawOnTopOfSkinImg"]["call"](this);
    if (this["flag_usingAbility"]) {
      _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0x1 - this["underwaterA"]);
      if (this["octoDisguiseObjT"] == _0x3ae840) this["octoDrawObj"]["nRad"] = 0x19;
      else {
        if (this["octoDisguiseObjT"] == _0x5b51ce) this["octoDrawObj"]["nRad"] = 0x11;
        else {
          if (this["octoDisguiseObjT"] == _0x5aecc8) this["octoDrawObj"]["nRad"] = 0xf;
          else {
            if (this["octoDisguiseObjT"] == _0x259653) (this["octoDrawObj"]["nRad"] = 0xf), (this["octoDrawObj"]["innerRad"] = 0x23);
            else this["octoDrawObj"]["nRad"] = this["rad"];
          }
        }
      }
      (this["octoDrawObj"]["mopeSeasonID"] = 0x2), this["octoDrawObj"]["draw"](), _0x587de3["restore"]();
    }
  }),
  (_0x489d3d["prototype"]["drawWhenUnderwater"] = function () {
    _0x489d3d["superClass"]["prototype"]["drawWhenUnderwater"]["call"](this);
  }),
  (_0x489d3d["prototype"]["octoDisguiseObjT"] = 0x0),
  (_0x489d3d["prototype"]["octoIsAnimal"] = ![]),
  (_0x489d3d["prototype"]["drawHealthBar"] = function () {
    if (this["flag_usingAbility"]) {
      if (this["octoIsAnimal"])
        _0x489d3d["superClass"]["prototype"]["drawNickName"]["call"](this, 0x1),
          (this["octoDrawObj"]["curBiome"] = this["curBiome"]),
          (this["hpPer_n"] = 0x2),
          (this["hpPer"] = 0x19),
          (this["hpBarA"] = 0x1);
      else return;
    }
    _0x587de3["save"]();
    var _0x53bfa5 = _0x168a54 < this["hpBarTimeoutT"] ? 0x1 : 0x0;
    this["hpBarA"] += (_0x53bfa5 - this["hpBarA"]) * 0.04;
    if (this["hpBarA"] > 0.001) {
      this["hpPer"] += (this["hpPer_n"] - this["hpPer"]) * 0.1;
      var _0x3b8537 = Math["max"](0x1, this["rad"] / 0x19),
        _0x2cfc3d = 0x14 * _0x3b8537,
        _0x474be6 = 0x5 * _0x3b8537,
        _0x437787 = 0x0,
        _0x116ad6 = -this["rad"] - 0xa * _0x3b8537;
      (_0x587de3["globalAlpha"] *= this["hpBarA"]),
        (_0x587de3["fillStyle"] = "rgba(0,0,0,0.35)"),
        _0x587de3["fillRect"](_0x437787 - _0x2cfc3d / 0x2, _0x116ad6 - _0x474be6 / 0x2, _0x2cfc3d, _0x474be6),
        (_0x587de3["fillStyle"] = "#16D729");
      var _0x5bd876 = _0x2cfc3d * (this["hpPer"] / 0x64);
      if (this["flag_usingAbility"] && this["octoIsAnimal"]) _0x5bd876 = _0x2cfc3d * (0x19 / 0x64);
      _0x587de3["fillRect"](_0x437787 - _0x2cfc3d / 0x2, _0x116ad6 - _0x474be6 / 0x2, _0x5bd876, _0x474be6);
    }
    _0x587de3["restore"]();
  });

function _0x489d3d() {
  _0x489d3d["superClass"]["call"](this, _0x3fb3b2);
}
(window["Octopus"] = _0x489d3d), _0x17bf26["setCustomClassForGameObjType"](_0x489d3d, _0x3fb3b2, _0x5ac0cd);
var _0x48c344 = _0x3799d1;
(_0x3e8a62["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x3e8a62["prototype"]["constructor"] = _0x3e8a62),
  (_0x3e8a62["superClass"] = _0x48c344),
  (_0x3e8a62["prototype"]["animalData"] = {}),
  (_0x3e8a62["prototype"]["animalInfo"] = function () {
    if (this["animalData"][this["animalSpecies"]] == undefined) {
      const _0x3d9bc6 =
        this["animalSpecies"] === 0x0
          ? "Bald Eagle"
          : this["animalSpecies"] === 0x1
          ? "Golden Eagle"
          : this["animalSpecies"] === 0x2
          ? "Shahbaz"
          : "Golden Shahbaz";
      this["animalData"][this["animalSpecies"]] = {
        info: {
          aniName: _0x3d9bc6,
          aniCol: "#5b400d",
          upgradeText:
            "UPGRADED to " +
            _0x3d9bc6 +
            "!\x0a                      Eagles can fly up other animals in the air!\x0a                      " +
            (this["animalSpecies"] === 0x1
              ? "(Can even pick monsters!)"
              : this["animalSpecies"] === 0x2
              ? "(Shahbaz picks anything including Black Dragon)"
              : this["animalSpecies"] === 0x3
              ? "(Shahbaz picks everything!)"
              : ""),
        },
        ability: {
          abilName: "Fly with prey",
          abilImg: "abilities/Fly.svg",
          speciesType: this["animalSpecies"],
          skinThemeID: this["skinThemeID"],
          mopeSeasonID: this["mopeSeasonID"],
        },
        skin: (() => {
          const _0x1f789f =
              this["mopeSeasonID"] === 0x2 && this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0 ? "/" + this["animalSubSpecies"] : "",
            _0x81f075 = "land/eagle/" + this["animalSpecies"] + _0x1f789f + "/eagle";
          return {
            path: ["" + _0x81f075, _0x81f075 + "1", _0x81f075 + "2", _0x81f075 + "3"],
            wing1: "skins/" + _0x81f075 + "_wing1.png",
            wing2: "skins/" + _0x81f075 + "_wing2.png",
            head: "skins/" + _0x81f075 + "_head.png",
            head1: "skins/" + _0x81f075 + "_head1.png",
            head2: "skins/" + _0x81f075 + "_head2.png",
          };
        })(),
      };
    }
    return this["animalData"][this["animalSpecies"]]["info"];
  }),
  (_0x3e8a62["prototype"]["getSkinName"] = function () {
    return this["animalData"][this["animalSpecies"]]["skin"]["path"][this["specType"]];
  }),
  (_0x3e8a62["prototype"]["getWing"] = function (_0x4d809e) {
    if (_0x4d809e == 0x1) return this["animalData"][this["animalSpecies"]]["skin"]["wing1"];
    else return this["animalData"][this["animalSpecies"]]["skin"]["wing2"];
  }),
  (_0x3e8a62["prototype"]["getHead"] = function () {
    if (this["specType"] == 0x1) return this["animalData"][this["animalSpecies"]]["skin"]["head2"];
    else return this["animalData"][this["animalSpecies"]]["skin"]["head"];
  }),
  (_0x3e8a62["prototype"]["getAbilityInfo"] = function (_0x4780f6) {
    return this["animalData"][this["animalSpecies"]]["ability"];
  }),
  (_0x3e8a62["prototype"]["ANIMATION_NAME"] = "eagle"),
  (_0x3e8a62["prototype"]["drawUnderSkinImg"] = function () {
    if (this["skinThemeID"] != 0x3) return;
    if (this["flag_flying"] && !this["flag_isGrabbed"]) {
      _0x587de3["save"]();
      var _0x311cf8 = _0x38b128(this["ANIMATION_NAME"], this["spawnTime"]);
      _0x311cf8 !== undefined && _0x311cf8 != null && (this["theFrame"] = _0x311cf8);
      var _0x18b489 = !(_0x57ae6d == 0x2 || _0x34fedb) ? this["theFrame"] : this["birdNoAnimationFlyWingAngle"],
        _0x55f549 = this["getSkinImageObj"](this["getWing"](0x1));
      if (_0x55f549) {
        _0x587de3["save"]();
        var _0x4edb3 = -(-0.2 + _0x18b489) * _0x2f9e35,
          _0x11df9b = this["rad"] * 0.8;
        _0x587de3["rotate"](_0x4edb3);
        var _0x1d2ff0 = 0x0,
          _0x11a512 = this["rad"],
          _0x37db19 = _0x11df9b * 0x2 * 0.7,
          _0x22e9aa = _0x11df9b * 0x2,
          _0x49823f = -0.2,
          _0x417da6 = 1.2;
        _0x587de3["drawImage"](_0x55f549, _0x1d2ff0 + _0x37db19 * -_0x49823f, _0x11a512 + _0x22e9aa * -_0x417da6, _0x37db19, _0x22e9aa),
          _0x587de3["restore"]();
      }
      var _0x55f549 = this["getSkinImageObj"](this["getWing"](0x2));
      if (_0x55f549) {
        _0x587de3["save"]();
        var _0x4edb3 = -(-0.2 + _0x18b489) * _0x3d960f(-0x5a),
          _0x11df9b = this["rad"] * 0.8;
        _0x587de3["rotate"](_0x4edb3);
        var _0x1d2ff0 = 0x0,
          _0x11a512 = this["rad"],
          _0x37db19 = _0x11df9b * 0x2 * 0.7,
          _0x22e9aa = _0x11df9b * 0x2,
          _0x49823f = 1.2,
          _0x417da6 = 1.2;
        _0x587de3["drawImage"](_0x55f549, _0x1d2ff0 + _0x37db19 * -_0x49823f, _0x11a512 + _0x22e9aa * -_0x417da6, _0x37db19, _0x22e9aa),
          _0x587de3["restore"]();
      }
      _0x587de3["restore"]();
    }
  }),
  (_0x3e8a62["prototype"]["drawSkinCustomization"] = function () {
    if (this["skinThemeID"] == 0x3) return;
    if (!this["flag_usingAbility"]) return;
    var _0x496415 = 0x1f4 / 0x154;
    {
      if (this["flag_flying"] && !this["flag_isGrabbed"]) {
        _0x587de3["save"]();
        var _0x516fff = _0x38b128(this["ANIMATION_NAME"], this["spawnTime"]);
        _0x516fff !== undefined && _0x516fff != null && (this["theFrame"] = _0x516fff);
        var _0x2d7a40 = !(_0x57ae6d == 0x2 || _0x34fedb) ? this["theFrame"] : this["birdNoAnimationFlyWingAngle"],
          _0x47e26d = this["getSkinImageObj"](this["getWing"](0x1));
        if (_0x47e26d) {
          _0x587de3["save"]();
          var _0x1c1ae1 = -(-0.2 + _0x2d7a40) * _0x2f9e35,
            _0xa9d422 = this["rad"] * 0.8;
          _0x587de3["rotate"](_0x3d960f(0x2d) + _0x1c1ae1);
          var _0x84ddaf = 0x0,
            _0x32b85b = this["rad"],
            _0xe8db6b = _0xa9d422 * 0x2 * 0.62,
            _0x3f6514 = _0xa9d422 * 2.5,
            _0xecd0c0 = 0.2,
            _0x4d945e = 1.7;
          _0x587de3["drawImage"](_0x47e26d, _0x84ddaf + _0xe8db6b * -_0xecd0c0, _0x32b85b + _0x3f6514 * -_0x4d945e, _0xe8db6b, _0x3f6514),
            _0x587de3["restore"]();
        }
        var _0x47e26d = this["getSkinImageObj"](this["getWing"](0x2));
        if (_0x47e26d) {
          _0x587de3["save"]();
          var _0x1c1ae1 = -(-0.2 + _0x2d7a40) * _0x3d960f(-0x5a),
            _0xa9d422 = this["rad"] * 0.8;
          _0x587de3["rotate"](_0x3d960f(-0x2d) + _0x1c1ae1);
          var _0x84ddaf = 0x0,
            _0x32b85b = this["rad"],
            _0xe8db6b = _0xa9d422 * 0x2 * 0.62,
            _0x3f6514 = _0xa9d422 * 2.5,
            _0xecd0c0 = 0.8,
            _0x4d945e = 1.7;
          _0x587de3["drawImage"](_0x47e26d, _0x84ddaf + _0xe8db6b * -_0xecd0c0, _0x32b85b + _0x3f6514 * -_0x4d945e, _0xe8db6b, _0x3f6514),
            _0x587de3["restore"]();
        }
        _0x587de3["restore"]();
      } else {
        if (this["specType"] == 0x1 && this["skinThemeID"] != 0x3) {
          _0x587de3["save"]();
          var _0x2ab961 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
            _0x2d7a40 = !(_0x57ae6d == 0x2) ? _0x120bbb(_0x2ab961, 0.7, 0.3, 0x2) : 0x0,
            _0x47e26d = this["getSkinImageObj"](this["getWing"](0x1));
          if (_0x47e26d) {
            _0x587de3["save"]();
            var _0x1c1ae1 = -(-0.2 + _0x2d7a40) * _0x3d960f(0x2d),
              _0xa9d422 = this["rad"] * 0.8;
            _0x587de3["rotate"](_0x3d960f(0xf) + _0x1c1ae1);
            var _0x84ddaf = 0x0,
              _0x32b85b = this["rad"],
              _0xe8db6b = _0xa9d422 * 0x2 * 0.8,
              _0x3f6514 = _0xa9d422 * 2.2,
              _0xecd0c0 = 0x0,
              _0x4d945e = 1.5;
            _0x587de3["drawImage"](_0x47e26d, _0x84ddaf + _0xe8db6b * -_0xecd0c0, _0x32b85b + _0x3f6514 * -_0x4d945e, _0xe8db6b, _0x3f6514),
              _0x587de3["restore"]();
          }
          var _0x47e26d = this["getSkinImageObj"](this["getWing"](0x2));
          if (_0x47e26d) {
            _0x587de3["save"]();
            var _0x1c1ae1 = -(-0.2 + _0x2d7a40) * _0x3d960f(-0x2d),
              _0xa9d422 = this["rad"] * 0.8;
            _0x587de3["rotate"](_0x3d960f(-0xf) + _0x1c1ae1);
            var _0x84ddaf = 0x0,
              _0x32b85b = this["rad"],
              _0xe8db6b = _0xa9d422 * 0x2 * 0.8,
              _0x3f6514 = _0xa9d422 * 2.2,
              _0xecd0c0 = 0x1,
              _0x4d945e = 1.5;
            _0x587de3["drawImage"](_0x47e26d, _0x84ddaf + _0xe8db6b * -_0xecd0c0, _0x32b85b + _0x3f6514 * -_0x4d945e, _0xe8db6b, _0x3f6514),
              _0x587de3["restore"]();
          }
          _0x587de3["restore"]();
        }
      }
      if (this["specType"] != 0x0 && this["specType"] != undefined) {
        var _0x26c2d3 = -0.05;
        this["flag_flying"] ? (_0x26c2d3 = 0.1) : this["animalSpecies"] == 0x2 && (_0x26c2d3 = -0.075);
        var _0x24bf83 = this["getSkinImageObj"](this["getHead"]());
        if (_0x24bf83) {
          _0x587de3["save"]();
          var _0xa9d422 = this["rad"];
          _0x587de3["drawImage"](
            _0x24bf83,
            -_0xa9d422 * _0x496415,
            (-_0xa9d422 + _0xa9d422 * _0x26c2d3) * _0x496415,
            0x2 * _0xa9d422 * _0x496415,
            0x2 * _0xa9d422 * _0x496415
          ),
            _0x587de3["restore"]();
        }
      }
    }
  });

function _0x3e8a62() {
  _0x3e8a62["superClass"]["call"](this, _0x3fb3b2);
}
(window["Eagle"] = _0x3e8a62), _0x17bf26["setCustomClassForGameObjType"](_0x3e8a62, _0x3fb3b2, _0x17ab53);
var _0x48c344 = _0x3799d1;
(_0x34b969["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x34b969["prototype"]["constructor"] = _0x34b969),
  (_0x34b969["superClass"] = _0x48c344),
  (_0x34b969["prototype"]["getSkinName"] = function () {
    return "land/ostrich/" + this["animalSpecies"] + this["getSubSpecies"]() + "/ostrich";
  }),
  (_0x34b969["prototype"]["getSubSpecies"] = function () {
    return this["animalSpecies"] === 0xcc ? "/" + this["animalSubSpecies"] : "";
  }),
  (_0x34b969["prototype"]["animalInfo"] = function () {
    var _0x3f3418 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x3f3418["aniName"] = "Ostrich!";
        break;
      case 0x1:
        _0x3f3418["aniName"] = "Golden Ostrich!";
        break;
      case 0x2:
        _0x3f3418["aniName"] = "Ruffled Ostrich!";
        break;
      case 0xdc:
        _0x3f3418["aniName"] = "Sunset Ostrich";
        break;
      case 0xcc:
        _0x3f3418["aniName"] = "Necromancer Ostrich!";
        break;
    }
    return (
      (_0x3f3418["skinName"] = "land/ostrich/" + this["animalSpecies"] + this["getSubSpecies"]() + "/ostrich"),
      (_0x3f3418["aniDesc"] = ""),
      (_0x3f3418["upgradeText"] =
        "UPGRADED to " +
        _0x3f3418["aniName"] +
        "! Lay eggs to hatch babies! \x0aCommand babies by placing your crosshair (right-click/W)-\x0a They can attack prey!"),
      (_0x3f3418["aniCol"] = "#FF9000"),
      _0x3f3418
    );
  }),
  (_0x34b969["prototype"]["getAbilityInfo"] = function (_0x1e74a7) {
    var _0x4ca4e7 = {};
    return (
      (_0x4ca4e7["abilName"] = "Command Babies!"),
      (_0x4ca4e7["abilImg"] = "abilities/Hypnotize.svg"),
      (_0x4ca4e7["skinThemeID"] = this["skinThemeID"]),
      (_0x4ca4e7["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x4ca4e7
    );
  }),
  (_0x34b969["prototype"]["getSkinImageObj"] = function (_0xa366c8) {
    var _0x3b11f0 = this["animalSpecies"] === 0x1 || this["animalSpecies"] === 0x2 || this["animalSpecies"] === 0xcc ? 0x1 : this["mopeSeasonID"];
    return this["getSkinImageObjForSeason"](_0xa366c8, _0x3b11f0);
  });

function _0x34b969() {
  _0x34b969["superClass"]["call"](this, _0x3fb3b2);
}
(window["Ostrich"] = _0x34b969), _0x17bf26["setCustomClassForGameObjType"](_0x34b969, _0x3fb3b2, _0x19797d);
var _0x48c344 = _0x3799d1;
(_0x244824["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x244824["prototype"]["constructor"] = _0x244824),
  (_0x244824["superClass"] = _0x48c344),
  (_0x244824["prototype"]["getSkinName"] = function () {
    return "land/ostrich/" + this["animalSpecies"] + "/ostrich-baby";
  }),
  (_0x244824["prototype"]["isEdibleOutlined"] = function () {
    if (this["mommyID"] == _0x204989) return ![];
    var _0x3eb746 = _0x2fa637[_0x204989];
    if (_0x3eb746) {
      var _0x5898e9 = _0x3eb746["animalType"];
      if (_0x5898e9 == _0x8151b9 || _0x5898e9 == _0x2e22f9 || _0x5898e9 == _0x573db4) return ![];
    }
    return _0x244824["superClass"]["prototype"]["isEdibleOutlined"]["call"](this);
  }),
  (_0x244824["prototype"]["getSkinImageObj"] = function (_0x4953f7) {
    var _0x15c64b = this["animalSpecies"] === 0x1 || this["animalSpecies"] === 0x2 || this["animalSpecies"] === 0xcc ? 0x1 : this["mopeSeasonID"];
    return this["getSkinImageObjForSeason"](_0x4953f7, _0x15c64b);
  }),
  (_0x244824["prototype"]["readCustomData_onNewlyVisible"] = function (_0x45dfd9) {
    _0x244824["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x45dfd9), (this["mommyID"] = _0x45dfd9["readUInt32"]());
  });

function _0x244824() {
  _0x244824["superClass"]["call"](this, _0x3fb3b2);
}
(window["OstrichBaby"] = _0x244824), _0x17bf26["setCustomClassForGameObjType"](_0x244824, _0x3fb3b2, _0x3b7c87);
var _0x28b6ad = _0x28b6ad,
  _0x48c344 = _0x3799d1;
(_0x28b6ad["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x28b6ad["prototype"]["constructor"] = _0x28b6ad),
  (_0x28b6ad["superClass"] = _0x48c344),
  (_0x28b6ad["prototype"]["getSkinName"] = function () {
    var _0x193968 = this["getSpeciesPath"]("land/falcon") + "/falcon";
    return (_0x193968 += this["specType"] == 0x0 ? "" : this["specType"]), _0x193968;
  }),
  (_0x28b6ad["prototype"]["animalInfo"] = function () {
    var _0x4cfca8 = {},
      _0x5b652f = "";
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x4cfca8["aniName"] = "Falcon";
        break;
      case 0x1:
        (_0x4cfca8["aniName"] = "Predator"), (_0x5b652f = "\x0a(No apex is safe from Predator!)");
        break;
      case 0x2:
        (_0x4cfca8["aniName"] = "Shaheen"), (_0x5b652f = "\x0a(Shaheen flies longer and swoop everything!)");
        break;
      case 0xca:
        _0x4cfca8["aniName"] = "Meteor Falcon";
        break;
    }
    return (
      (_0x4cfca8["upgradeText"] = "UPGRADED to " + _0x4cfca8["aniName"] + "! \x0aFly, and do a powerful dive attack! Aim it well." + _0x5b652f),
      (_0x4cfca8["aniCol"] = "#FF9000"),
      (_0x4cfca8["skinName"] = "land/falcon/" + this["animalSpecies"] + "/falcon" + (this["specType"] == 0x0 ? "" : this["specType"])),
      _0x4cfca8
    );
  }),
  (_0x28b6ad["prototype"]["getWing"] = function (_0x52b1a3, _0x1226a0, _0x9ef49e) {
    _0x9ef49e = !![];
    var _0x10cc5a = "skins/land/" + (_0x9ef49e ? this["getSpeciesPath"](_0x52b1a3) + "/" : _0x52b1a3 + "/");
    return (_0x10cc5a += _0x52b1a3 + "_wing" + _0x1226a0 + ".png"), _0x10cc5a;
  }),
  (_0x28b6ad["prototype"]["getHead"] = function (_0x34b948, _0x28b5af, _0x556609) {
    _0x556609 = !![];
    var _0x1ff4dc = "skins/land/" + (_0x556609 ? this["getSpeciesPath"](_0x34b948) + "/" : _0x34b948 + "/");
    return (_0x1ff4dc += _0x34b948 + "_head.png"), _0x1ff4dc;
  }),
  (_0x28b6ad["prototype"]["getAbilityInfo"] = function (_0x30f199) {
    var _0x74dc99 = {};
    return (
      (_0x74dc99["abilName"] = "Sky dive"),
      (_0x74dc99["abilImg"] = "abilities/SkyDive.svg"),
      (_0x74dc99["speciesType"] = this["animalSpecies"]),
      (_0x74dc99["skinThemeID"] = this["skinThemeID"]),
      (_0x74dc99["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x74dc99
    );
  }),
  (_0x28b6ad["prototype"]["drawSkinCustomization"] = function () {
    if (!this["flag_usingAbility"]) return;
    var _0x42ab58 = "skins",
      _0x243e62 = 0x1f4 / 0x154;
    if (this["flag_flying"] && !this["flag_isGrabbed"] && this["specType"] == 0x1) {
      _0x587de3["save"]();
      var _0x26c5ee = _0x38b128("bird", this["spawnTime"]);
      _0x26c5ee !== undefined && _0x26c5ee != null && (this["theFrame"] = _0x26c5ee);
      var _0x46045c = !(_0x57ae6d == 0x2 || _0x34fedb) ? this["theFrame"] : this["birdNoAnimationFlyWingAngle"],
        _0x2a4e55 = this["getSkinImageObj"](this["getWing"]("falcon", 0x1, ![]));
      if (_0x2a4e55) {
        _0x587de3["save"]();
        var _0x54890d = -(-0.2 + _0x46045c) * _0x3d960f(0x50),
          _0x36e152 = this["rad"] * 0.8;
        _0x587de3["rotate"](_0x3d960f(0x19) + _0x54890d);
        var _0x2eee82 = 0x0,
          _0x22fc65 = this["rad"],
          _0x4ce8fa = _0x36e152 * 0x2 * 0.65,
          _0x2de2b5 = _0x36e152 * 2.5,
          _0x31626a = 0x0,
          _0x50ae3d = 1.5;
        _0x587de3["drawImage"](_0x2a4e55, _0x2eee82 + _0x4ce8fa * -_0x31626a, _0x22fc65 + _0x2de2b5 * -_0x50ae3d, _0x4ce8fa, _0x2de2b5),
          _0x587de3["restore"]();
      }
      var _0x2a4e55 = this["getSkinImageObj"](this["getWing"]("falcon", 0x2, ![]));
      if (_0x2a4e55) {
        _0x587de3["save"]();
        var _0x54890d = -(-0.2 + _0x46045c) * _0x3d960f(-0x50),
          _0x36e152 = this["rad"] * 0.8;
        _0x587de3["rotate"](_0x3d960f(-0x19) + _0x54890d);
        var _0x2eee82 = 0x0,
          _0x22fc65 = this["rad"],
          _0x4ce8fa = _0x36e152 * 0x2 * 0.65,
          _0x2de2b5 = _0x36e152 * 2.5,
          _0x31626a = 0x1,
          _0x50ae3d = 1.5;
        _0x587de3["drawImage"](_0x2a4e55, _0x2eee82 + _0x4ce8fa * -_0x31626a, _0x22fc65 + _0x2de2b5 * -_0x50ae3d, _0x4ce8fa, _0x2de2b5),
          _0x587de3["restore"]();
      }
      _0x587de3["restore"]();
    } else {
      if (this["flag_flying"] && this["specType"] == 0x2) {
        _0x587de3["save"]();
        var _0x556175 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
          _0x46045c = !(_0x57ae6d == 0x2) ? _0x120bbb(_0x556175, 0.7, 0.3, 0x2) : 0x0,
          _0x2a4e55 = this["getSkinImageObj"](this["getWing"]("falcon", 0x1, ![]));
        if (_0x2a4e55) {
          _0x587de3["save"]();
          var _0x54890d = -(-0.2 + 0x0) * _0x3d960f(0x19),
            _0x36e152 = this["rad"] * 0.8;
          _0x587de3["rotate"](_0x54890d);
          var _0x2eee82 = 0x0,
            _0x22fc65 = this["rad"],
            _0x4ce8fa = _0x36e152 * 0x2 * 0.7,
            _0x2de2b5 = _0x36e152 * 2.2,
            _0x31626a = 0x0,
            _0x50ae3d = 1.5;
          _0x587de3["drawImage"](_0x2a4e55, _0x2eee82 + _0x4ce8fa * -_0x31626a, _0x22fc65 + _0x2de2b5 * -_0x50ae3d, _0x4ce8fa, _0x2de2b5),
            _0x587de3["restore"]();
        }
        var _0x2a4e55 = this["getSkinImageObj"](this["getWing"]("falcon", 0x2, ![]));
        if (_0x2a4e55) {
          _0x587de3["save"]();
          var _0x54890d = -(-0.2 + 0x0) * _0x3d960f(-0x19),
            _0x36e152 = this["rad"] * 0.8;
          _0x587de3["rotate"](_0x54890d);
          var _0x2eee82 = 0x0,
            _0x22fc65 = this["rad"],
            _0x4ce8fa = _0x36e152 * 0x2 * 0.7,
            _0x2de2b5 = _0x36e152 * 2.2,
            _0x31626a = 0x1,
            _0x50ae3d = 1.5;
          _0x587de3["drawImage"](_0x2a4e55, _0x2eee82 + _0x4ce8fa * -_0x31626a, _0x22fc65 + _0x2de2b5 * -_0x50ae3d, _0x4ce8fa, _0x2de2b5),
            _0x587de3["restore"]();
        }
        _0x587de3["restore"]();
      } else {
        if (this["flag_flying"] && this["specType"] == 0x3) {
          _0x587de3["save"]();
          var _0x556175 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
            _0x46045c = !(_0x57ae6d == 0x2) ? _0x120bbb(_0x556175, 0.5, 0.4, 0x2) : 0x0,
            _0x2a4e55 = this["getSkinImageObj"](this["getWing"]("falcon", 0x1, !![]));
          if (_0x2a4e55) {
            _0x587de3["save"]();
            var _0x54890d = -(-0.2 + _0x46045c) * _0x3d960f(0x2d),
              _0x36e152 = this["rad"] * 0.8;
            _0x587de3["rotate"](_0x3d960f(0xf) + _0x54890d);
            var _0x2eee82 = 0x0,
              _0x22fc65 = this["rad"],
              _0x4ce8fa = _0x36e152 * 0x2 * 0x1,
              _0x2de2b5 = _0x36e152 * 2.2,
              _0x31626a = 0x0,
              _0x50ae3d = 1.5;
            _0x587de3["drawImage"](_0x2a4e55, _0x2eee82 + _0x4ce8fa * -_0x31626a, _0x22fc65 + _0x2de2b5 * -_0x50ae3d, _0x4ce8fa, _0x2de2b5),
              _0x587de3["restore"]();
          }
          var _0x2a4e55 = this["getSkinImageObj"](this["getWing"]("falcon", 0x2, !![]));
          if (_0x2a4e55) {
            _0x587de3["save"]();
            var _0x54890d = -(-0.2 + _0x46045c) * _0x3d960f(-0x2d),
              _0x36e152 = this["rad"] * 0.8;
            _0x587de3["rotate"](_0x3d960f(-0xf) + _0x54890d);
            var _0x2eee82 = 0x0,
              _0x22fc65 = this["rad"],
              _0x4ce8fa = _0x36e152 * 0x2 * 0x1,
              _0x2de2b5 = _0x36e152 * 2.2,
              _0x31626a = 0x1,
              _0x50ae3d = 1.5;
            _0x587de3["drawImage"](_0x2a4e55, _0x2eee82 + _0x4ce8fa * -_0x31626a, _0x22fc65 + _0x2de2b5 * -_0x50ae3d, _0x4ce8fa, _0x2de2b5),
              _0x587de3["restore"]();
          }
          _0x587de3["restore"]();
        }
      }
    }
    if (this["specType"] != 0x0 && this["specType"] != undefined) {
      var _0x3a7346 = this["getSkinImageObj"](this["getHead"]("/falcon", !![]));
      if (_0x3a7346) {
        _0x587de3["save"]();
        var _0x36e152 = this["rad"] * (this["specType"] == 0x3 ? 1.2 : 0x1),
          _0x527ff = _0x36e152 * 0.2;
        if (this["specType"] == 0x3) _0x527ff = _0x36e152 * -0.15;
        _0x587de3["drawImage"](
          _0x3a7346,
          -_0x36e152 * _0x243e62,
          (-_0x36e152 + _0x527ff) * _0x243e62,
          0x2 * _0x36e152 * _0x243e62,
          0x2 * _0x36e152 * _0x243e62
        ),
          _0x587de3["restore"]();
      }
    }
  });

function _0x28b6ad() {
  _0x28b6ad["superClass"]["call"](this, _0x3fb3b2);
}
(window["Falcon"] = _0x28b6ad), _0x17bf26["setCustomClassForGameObjType"](_0x28b6ad, _0x3fb3b2, _0x58aade);
var _0x48c344 = _0x3799d1;
(_0xeba15e["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0xeba15e["prototype"]["constructor"] = _0xeba15e),
  (_0xeba15e["superClass"] = _0x48c344),
  (_0xeba15e["prototype"]["animalInfo"] = function () {
    var _0x275a90 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x275a90["aniName"] = "Snowy Owl";
        break;
      case 0xc9:
        _0x275a90["aniName"] = "Owlrigami";
        break;
    }
    return (
      (_0x275a90["skinName"] = this["getSkinName"]()),
      (_0x275a90["aniDesc"] = ""),
      (_0x275a90["upgradeText"] =
        "UPGRADED to " + _0x275a90["aniName"] + "!\x0aAim the crosshair\x0aright-click / press W when its on top of prey to attack"),
      (_0x275a90["aniCol"] = "#633838"),
      _0x275a90
    );
  }),
  (_0xeba15e["prototype"]["getSkinName"] = function () {
    let _0x47d814 = this["getSpeciesPath"]() + "/snowyowl";
    return (_0x47d814 += this["specType"] == 0x0 ? "" : this["specType"]), _0x47d814;
  }),
  (_0xeba15e["prototype"]["getSpeciesPath"] = function () {
    return "arctic/snowyowl/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0xeba15e["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0xeba15e["prototype"]["getWing"] = function (_0x22094d) {
    var _0xc162b6 = "skins/" + this["getSpeciesPath"]();
    return (_0xc162b6 += "/snowyowl_wing" + _0x22094d + ".png"), _0xc162b6;
  }),
  (_0xeba15e["prototype"]["getHead"] = function () {
    var _0x2f67dd = "skins/" + this["getSpeciesPath"]();
    return (_0x2f67dd += "/snowyowl_head.png"), _0x2f67dd;
  }),
  (_0xeba15e["prototype"]["getAbilityInfo"] = function (_0x3075bb) {
    var _0x2dc080 = {};
    return (
      (_0x2dc080["abilName"] = "Target Prey!"),
      (_0x2dc080["abilImg"] = "abilities/Target.svg"),
      (_0x2dc080["skinThemeID"] = this["skinThemeID"]),
      (_0x2dc080["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x2dc080
    );
  }),
  (_0xeba15e["prototype"]["drawSkinCustomization"] = function () {
    if (!this["flag_usingAbility"]) return;
    var _0x5032ed = "skins",
      _0x2af363 = 0x1f4 / 0x154;
    if (this["flag_flying"] && !this["flag_isGrabbed"] && this["specType"] == 0x1) {
      _0x587de3["save"]();
      var _0x4a0956 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
        _0x1c0c8b = !(_0x57ae6d == 0x2 || _0x34fedb) ? _0x120bbb(_0x4a0956, 0.7, 0.4, 0x2) : this["birdNoAnimationFlyWingAngle"],
        _0x47b742 = this["getSkinImageObj"](this["getWing"](0x1));
      if (_0x47b742) {
        _0x587de3["save"]();
        var _0x22979b = -(-0.2 + _0x1c0c8b) * _0x3d960f(0x50),
          _0x9851a4 = this["rad"] * 0.8;
        _0x587de3["rotate"](_0x3d960f(0x19) + _0x22979b);
        var _0x30997b = 0x0,
          _0x372539 = this["rad"],
          _0x274940 = _0x9851a4 * 0x2 * 0.65,
          _0x34f1ca = _0x9851a4 * 2.5,
          _0x24814c = 0x0,
          _0x14c263 = 1.5;
        _0x587de3["drawImage"](_0x47b742, _0x30997b + _0x274940 * -_0x24814c, _0x372539 + _0x34f1ca * -_0x14c263, _0x274940, _0x34f1ca),
          _0x587de3["restore"]();
      }
      var _0x47b742 = this["getSkinImageObj"](this["getWing"](0x2));
      if (_0x47b742) {
        _0x587de3["save"]();
        var _0x22979b = -(-0.2 + _0x1c0c8b) * _0x3d960f(-0x50),
          _0x9851a4 = this["rad"] * 0.8;
        _0x587de3["rotate"](_0x3d960f(-0x19) + _0x22979b);
        var _0x30997b = 0x0,
          _0x372539 = this["rad"],
          _0x274940 = _0x9851a4 * 0x2 * 0.65,
          _0x34f1ca = _0x9851a4 * 2.5,
          _0x24814c = 0x1,
          _0x14c263 = 1.5;
        _0x587de3["drawImage"](_0x47b742, _0x30997b + _0x274940 * -_0x24814c, _0x372539 + _0x34f1ca * -_0x14c263, _0x274940, _0x34f1ca),
          _0x587de3["restore"]();
      }
      _0x587de3["restore"]();
    } else {
      if (this["flag_flying"] && this["specType"] == 0x2) {
        _0x587de3["save"]();
        var _0x4a0956 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
          _0x1c0c8b = !(_0x57ae6d == 0x2) ? _0x120bbb(_0x4a0956, 0.7, 0.3, 0x2) : 0x0,
          _0x47b742 = this["getSkinImageObj"](this["getWing"](0x1));
        if (_0x47b742) {
          _0x587de3["save"]();
          var _0x22979b = -(-0.2 + _0x1c0c8b) * _0x3d960f(0x2d),
            _0x9851a4 = this["rad"] * 0.8;
          _0x587de3["rotate"](_0x3d960f(0xf) + _0x22979b);
          var _0x30997b = 0x0,
            _0x372539 = this["rad"],
            _0x274940 = _0x9851a4 * 0x2 * 0.7,
            _0x34f1ca = _0x9851a4 * 2.2,
            _0x24814c = 0x0,
            _0x14c263 = 1.5;
          _0x587de3["drawImage"](_0x47b742, _0x30997b + _0x274940 * -_0x24814c, _0x372539 + _0x34f1ca * -_0x14c263, _0x274940, _0x34f1ca),
            _0x587de3["restore"]();
        }
        var _0x47b742 = this["getSkinImageObj"](this["getWing"](0x2));
        if (_0x47b742) {
          _0x587de3["save"]();
          var _0x22979b = -(-0.2 + _0x1c0c8b) * _0x3d960f(-0x2d),
            _0x9851a4 = this["rad"] * 0.8;
          _0x587de3["rotate"](_0x3d960f(-0xf) + _0x22979b);
          var _0x30997b = 0x0,
            _0x372539 = this["rad"],
            _0x274940 = _0x9851a4 * 0x2 * 0.7,
            _0x34f1ca = _0x9851a4 * 2.2,
            _0x24814c = 0x1,
            _0x14c263 = 1.5;
          _0x587de3["drawImage"](_0x47b742, _0x30997b + _0x274940 * -_0x24814c, _0x372539 + _0x34f1ca * -_0x14c263, _0x274940, _0x34f1ca),
            _0x587de3["restore"]();
        }
        _0x587de3["restore"]();
      } else {
        if (this["flag_flying"] && this["specType"] == 0x3) {
          _0x587de3["save"]();
          var _0x4a0956 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
            _0x1c0c8b = !(_0x57ae6d == 0x2) ? _0x120bbb(_0x4a0956, 0.5, 0.5, 0x2) : 0x0,
            _0x47b742 = this["getSkinImageObj"](this["getWing"](0x1));
          if (_0x47b742) {
            _0x587de3["save"]();
            var _0x22979b = -(-0.2 + _0x1c0c8b) * _0x3d960f(0x2d),
              _0x9851a4 = this["rad"] * 0.8;
            _0x587de3["rotate"](_0x3d960f(0x19) + _0x22979b);
            var _0x30997b = 0x0,
              _0x372539 = this["rad"],
              _0x274940 = _0x9851a4 * 0x2 * 0.7,
              _0x34f1ca = _0x9851a4 * 2.2,
              _0x24814c = 0x0,
              _0x14c263 = 1.5;
            _0x587de3["drawImage"](_0x47b742, _0x30997b + _0x274940 * -_0x24814c, _0x372539 + _0x34f1ca * -_0x14c263, _0x274940, _0x34f1ca),
              _0x587de3["restore"]();
          }
          var _0x47b742 = this["getSkinImageObj"](this["getWing"](0x2));
          if (_0x47b742) {
            _0x587de3["save"]();
            var _0x22979b = -(-0.2 + _0x1c0c8b) * _0x3d960f(-0x2d),
              _0x9851a4 = this["rad"] * 0.8;
            _0x587de3["rotate"](_0x3d960f(-0x19) + _0x22979b);
            var _0x30997b = 0x0,
              _0x372539 = this["rad"],
              _0x274940 = _0x9851a4 * 0x2 * 0.7,
              _0x34f1ca = _0x9851a4 * 2.2,
              _0x24814c = 0x1,
              _0x14c263 = 1.5;
            _0x587de3["drawImage"](_0x47b742, _0x30997b + _0x274940 * -_0x24814c, _0x372539 + _0x34f1ca * -_0x14c263, _0x274940, _0x34f1ca),
              _0x587de3["restore"]();
          }
          _0x587de3["restore"]();
        }
      }
    }
    if (this["specType"] != 0x0 && this["specType"] != undefined) {
      var _0x3d795e = this["getSkinImageObj"](this["getHead"]());
      if (_0x3d795e) {
        _0x587de3["save"]();
        var _0x9851a4 = this["rad"];
        _0x587de3["drawImage"](
          _0x3d795e,
          -_0x9851a4 * _0x2af363,
          (-_0x9851a4 + _0x9851a4 * 0.1) * _0x2af363,
          0x2 * _0x9851a4 * _0x2af363,
          0x2 * _0x9851a4 * _0x2af363
        ),
          _0x587de3["restore"]();
      }
    }
  });

function _0xeba15e() {
  _0xeba15e["superClass"]["call"](this, _0x3fb3b2);
}
(window["SnowyOwl"] = _0xeba15e), _0x17bf26["setCustomClassForGameObjType"](_0xeba15e, _0x3fb3b2, _0x533281);
var _0x51fa97 = _0x51fa97,
  _0x48c344 = _0x3799d1;
(_0x51fa97["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x51fa97["prototype"]["constructor"] = _0x51fa97),
  (_0x51fa97["superClass"] = _0x48c344),
  (_0x51fa97["prototype"]["getSpeciesPath"] = function (_0x364c43) {
    return "ocean/" + _0x364c43 + "/" + this["animalSpecies"];
  }),
  (_0x51fa97["prototype"]["getSkinName"] = function () {
    return this["getSpeciesPath"]("pelican") + "/pelican" + (this["specType"] == 0x0 ? "" : this["specType"]);
  }),
  (_0x51fa97["prototype"]["getAbilityInfo"] = function (_0x9f31dc) {
    var _0x12f667 = {};
    return (
      (_0x12f667["abilName"] = "Fly with water"),
      (_0x12f667["abilImg"] = "abilities/PelicanFlyWithWater.svg"),
      (_0x12f667["skinThemeID"] = this["skinThemeID"]),
      (_0x12f667["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x12f667
    );
  }),
  (_0x51fa97["prototype"]["drawSkinCustomization"] = function () {
    if (!this["flag_usingAbility"]) return;
    var _0x470791 = 0x1f4 / 0x154,
      _0x225ac1 = this["rad"] - this["outlineW"],
      _0x180cba = "skins";
    if (this["flag_flying"]) {
      var _0x5cbd33 = "";
      (_0x5cbd33 = "pelican"), _0x587de3["save"]();
      var _0x5a2f56 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
        _0x9b509e = !(_0x57ae6d == 0x2 || _0x34fedb) ? _0x120bbb(_0x5a2f56, 0.9, 0.3, 0x2) : this["birdNoAnimationFlyWingAngle"],
        _0x358288 = this["getSkinImageObj"](this["getWing"]("pelican", 0x1, !![]));
      if (_0x358288) {
        _0x587de3["save"]();
        var _0xc06f2e = -(-0.2 + _0x9b509e) * _0x2f9e35,
          _0x225ac1 = this["rad"] * 0.8;
        _0x587de3["rotate"](_0x3d960f(0x2d) + _0xc06f2e);
        var _0xa0f529 = 0x0,
          _0x2ac425 = this["rad"],
          _0x5e6289 = _0x225ac1 * 0x2 * 0.6,
          _0x343717 = _0x225ac1 * 2.3,
          _0x3e760b = 0x0,
          _0x554f25 = 1.7;
        _0x587de3["drawImage"](_0x358288, _0xa0f529 + _0x5e6289 * -_0x3e760b, _0x2ac425 + _0x343717 * -_0x554f25, _0x5e6289, _0x343717),
          _0x587de3["restore"]();
      }
      var _0x358288 = this["getSkinImageObj"](this["getWing"]("pelican", 0x2, !![]));
      if (_0x358288) {
        _0x587de3["save"]();
        var _0xc06f2e = -(-0.2 + _0x9b509e) * _0x3d960f(-0x5a),
          _0x225ac1 = this["rad"] * 0.8;
        _0x587de3["rotate"](_0x3d960f(-0x2d) + _0xc06f2e);
        var _0xa0f529 = 0x0,
          _0x2ac425 = this["rad"],
          _0x5e6289 = _0x225ac1 * 0x2 * 0.6,
          _0x343717 = _0x225ac1 * 2.3,
          _0x3e760b = 0x1,
          _0x554f25 = 1.7;
        _0x587de3["drawImage"](_0x358288, _0xa0f529 + _0x5e6289 * -_0x3e760b, _0x2ac425 + _0x343717 * -_0x554f25, _0x5e6289, _0x343717),
          _0x587de3["restore"]();
      }
      _0x587de3["restore"]();
    } else {
      if (this["specType"] == 0x1) {
        var _0x5cbd33 = "";
        (_0x5cbd33 = "pelican"), _0x587de3["save"]();
        var _0x5a2f56 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
          _0x9b509e = !(_0x57ae6d == 0x2) ? _0x120bbb(_0x5a2f56, 0.9, 0.3, 0x2) : 0x0,
          _0x358288 = this["getSkinImageObj"](this["getWing"]("pelican", 0xb, !![]));
        if (_0x358288) {
          _0x587de3["save"]();
          var _0xc06f2e = -(-0.2 + _0x9b509e) * _0x3d960f(0x2d),
            _0x225ac1 = this["rad"] * 0.8;
          _0x587de3["rotate"](_0x3d960f(0x2d) + _0xc06f2e);
          var _0xa0f529 = 0x0,
            _0x2ac425 = this["rad"],
            _0x5e6289 = _0x225ac1 * 0x2 * 0.7,
            _0x343717 = _0x225ac1 * 2.2,
            _0x3e760b = 0x0,
            _0x554f25 = 1.7;
          _0x587de3["drawImage"](_0x358288, _0xa0f529 + _0x5e6289 * -_0x3e760b, _0x2ac425 + _0x343717 * -_0x554f25, _0x5e6289, _0x343717),
            _0x587de3["restore"]();
        }
        var _0x358288 = this["getSkinImageObj"](this["getWing"]("pelican", 0x15, !![]));
        if (_0x358288) {
          _0x587de3["save"]();
          var _0xc06f2e = -(-0.2 + _0x9b509e) * _0x3d960f(-0x2d),
            _0x225ac1 = this["rad"] * 0.8;
          _0x587de3["rotate"](_0x3d960f(-0x2d) + _0xc06f2e);
          var _0xa0f529 = 0x0,
            _0x2ac425 = this["rad"],
            _0x5e6289 = _0x225ac1 * 0x2 * 0.7,
            _0x343717 = _0x225ac1 * 2.2,
            _0x3e760b = 0x1,
            _0x554f25 = 1.7;
          _0x587de3["drawImage"](_0x358288, _0xa0f529 + _0x5e6289 * -_0x3e760b, _0x2ac425 + _0x343717 * -_0x554f25, _0x5e6289, _0x343717),
            _0x587de3["restore"]();
        }
        _0x587de3["restore"]();
      }
    }
    if (this["specType"] != 0x0 && !this["flag_isGrabbed"]) {
      if (this["specType"] == 0x2) {
        var _0x4d5c81 = _0x180cba + "/" + this["getSpeciesPath"]("pelican") + "/ability_pelican.png",
          _0x4553a9 = this["getSkinImageObj"](_0x4d5c81);
        if (_0x4553a9) {
          _0x587de3["save"](), _0x587de3["rotate"](_0x3d960f(0xb4));
          var _0x225ac1 = this["rad"] * 0.3,
            _0x18846f = this["rad"] * 0x1;
          _0x587de3["drawImage"](
            _0x4553a9,
            -_0x225ac1 * _0x470791,
            -_0x225ac1 - _0x18846f * _0x470791,
            0x2 * _0x225ac1 * _0x470791,
            0x2 * _0x225ac1 * _0x470791
          ),
            _0x587de3["restore"]();
        }
      }
      var _0x18c54a = this["getSkinImageObj"](this["getHead"]("pelican", !![]));
      if (_0x18c54a) {
        _0x587de3["save"]();
        var _0x225ac1 = this["rad"] * 0x1,
          _0x18846f = -this["rad"] * 0.3;
        _0x587de3["drawImage"](
          _0x18c54a,
          -_0x225ac1 * _0x470791,
          -_0x225ac1 + _0x18846f * _0x470791,
          0x2 * _0x225ac1 * _0x470791,
          0x2 * _0x225ac1 * _0x470791
        ),
          _0x587de3["restore"]();
      }
    }
  });

function _0x51fa97() {
  _0x51fa97["superClass"]["call"](this, _0x3fb3b2);
}
(window["Pelican"] = _0x51fa97), _0x17bf26["setCustomClassForGameObjType"](_0x51fa97, _0x3fb3b2, _0x3d8491);
var _0x48c344 = _0x3799d1;
(_0x48b8d5["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x48b8d5["prototype"]["constructor"] = _0x48b8d5),
  (_0x48b8d5["superClass"] = _0x48c344),
  (_0x48b8d5["prototype"]["updateZ"] = function () {
    this["z"] = 0x3eb + this["rad"];
  }),
  (_0x48b8d5["prototype"]["getSkinName"] = function () {
    var _0x2e89d0 = "";
    if (this["flag_usingAbility"] && !this["flag_underWater"]) _0x2e89d0 = "2";
    return "frog/frog" + _0x2e89d0;
  }),
  (_0x48b8d5["prototype"]["drawUnderSkinImg"] = function () {
    if (this["flag_usingAbility"] && !this["flag_underWater"]) {
      var _0x43823d = this["rad"] - this["outlineW"],
        _0xebd59e = 0x1f4 / 0x154,
        _0x491cad = this["getSkinImageObj"]("./skins/frog/frogLegs.png");
      if (_0x491cad)
        _0x587de3["drawImage"](
          _0x491cad,
          -_0x43823d * _0xebd59e,
          (-_0x43823d - _0x43823d) * _0xebd59e,
          0x2 * _0x43823d * _0xebd59e,
          0x2 * _0x43823d * _0xebd59e
        );
    }
  }),
  (_0x48b8d5["prototype"]["canDrawAnimalSkin"] = function () {
    return !this["flag_underWater"];
  }),
  (_0x48b8d5["prototype"]["drawUnderWater"] = function () {
    this["flag_underWater"] &&
      (_0x587de3["save"](),
      (_0x587de3["globalAlpha"] = 0.2),
      _0x587de3["scale"](0x1, 1.5),
      _0x440ef0(0x0, 0x0, this["rad"] * 0.5, "#598b30"),
      _0x440ef0(0x0, this["rad"] * -0.6, this["rad"] * 0.3, "#64a034"),
      _0x587de3["restore"]());
  });

function _0x48b8d5() {
  _0x48b8d5["superClass"]["call"](this, _0x3fb3b2);
}
(window["Frog"] = _0x48b8d5), _0x17bf26["setCustomClassForGameObjType"](_0x48b8d5, _0x3fb3b2, _0x483352);
var _0x1d83bb = _0x182ca0,
  _0x48c344 = _0x3799d1;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344),
  (_0x182ca0["prototype"]["isAttacking"] = ![]),
  (_0x182ca0["prototype"]["objSkinPath"] = {}),
  (_0x182ca0["prototype"]["getSkinName"] = function () {
    return this["objSkinPath"][this["getSkinIndex"]()]["skin"];
  }),
  (_0x182ca0["prototype"]["getSkinIndex"] = function () {
    if (this["animalSpecies"] == 0x2 && (this["isAttacking"] || this["flag_usingAbility"])) return 0x3;
    return this["animalSpecies"];
  }),
  (_0x182ca0["prototype"]["setSkinPath"] = function () {}),
  (_0x182ca0["prototype"]["onAnimalSpeciesSet"] = function () {
    let _0x4550f8 = this["animalSpecies"],
      _0xf1e3de = "",
      {
        skin: _0xc55a66,
        wing1: _0x2c39ca,
        wing2: _0xaf34b8,
        head: _0x5b11f8,
      } = {
        skin: "duck/" + _0x4550f8 + "/duck" + _0xf1e3de,
        wing1: "skins/duck/" + _0x4550f8 + "/duck_wing1.png",
        wing2: "skins/duck/" + _0x4550f8 + "/duck_wing2.png",
        head: "skins/duck/" + _0x4550f8 + "/duck_head.png",
      };
    (this["objSkinPath"][_0x4550f8] = {
      skin: _0xc55a66,
      wing1: _0x2c39ca,
      wing2: _0xaf34b8,
      head: _0x5b11f8,
    }),
      _0x4550f8 === 0x2 &&
        ((_0xf1e3de = 0x1),
        ({
          skin: _0xc55a66,
          wing1: _0x2c39ca,
          wing2: _0xaf34b8,
          head: _0x5b11f8,
        } = {
          skin: "duck/" + _0x4550f8 + "/duck" + _0xf1e3de,
          wing1: "skins/duck/" + _0x4550f8 + "/duck_wing1.png",
          wing2: "skins/duck/" + _0x4550f8 + "/duck_wing2.png",
          head: "skins/duck/" + _0x4550f8 + "/duck_head.png",
        }),
        (this["objSkinPath"][0x3] = {
          skin: _0xc55a66,
          wing1: _0x2c39ca,
          wing2: _0xaf34b8,
          head: _0x5b11f8,
        }));
  }),
  (_0x1d83bb["prototype"]["drawSkinCustomization"] = function () {
    this["isAttacking"] && this["animalSpecies"] == 0x2 && this["angryGooseAnimation"](),
      this["flag_usingAbility"] && this["animalSpecies"] == 0x2 && this["flyingAnimation"]();
  }),
  (_0x182ca0["prototype"]["angryGooseAnimation"] = function () {
    var _0x16925d = this["skinScale"];
    _0x587de3["save"]();
    var _0x316ef7 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
      _0x25f8ab = !(_0x57ae6d == 0x2 || _0x34fedb) ? _0x120bbb(_0x316ef7, 0.5, 0.3, 0x2) : this["birdNoAnimationFlyWingAngle"],
      _0x22bd2b = this["getSkinImageObj"](this["objSkinPath"][this["getSkinIndex"]()]["wing1"]);
    if (_0x22bd2b) {
      _0x587de3["save"]();
      var _0x2ef7e6 = -(-0.2 + _0x25f8ab) * _0x3d960f(0xf),
        _0x434b7e = this["rad"] * 0.8;
      _0x587de3["rotate"](_0x3d960f(0xf) + _0x2ef7e6);
      var _0x2a5bbc = 0x0,
        _0x3c6742 = this["rad"],
        _0x3f8030 = _0x434b7e * 0x2 * 0.7,
        _0x23d0e8 = _0x434b7e * 2.2,
        _0x122b35 = 0x0,
        _0x57b6cc = 1.5;
      _0x587de3["drawImage"](_0x22bd2b, _0x2a5bbc + _0x3f8030 * -_0x122b35, _0x3c6742 + _0x23d0e8 * -_0x57b6cc, _0x3f8030, _0x23d0e8),
        _0x587de3["restore"]();
    }
    var _0x22bd2b = this["getSkinImageObj"](this["objSkinPath"][this["getSkinIndex"]()]["wing2"]);
    if (_0x22bd2b) {
      _0x587de3["save"]();
      var _0x2ef7e6 = -(-0.2 + _0x25f8ab) * _0x3d960f(-0xf),
        _0x434b7e = this["rad"] * 0.8;
      _0x587de3["rotate"](_0x3d960f(-0xf) + _0x2ef7e6);
      var _0x2a5bbc = 0x0,
        _0x3c6742 = this["rad"],
        _0x3f8030 = _0x434b7e * 0x2 * 0.7,
        _0x23d0e8 = _0x434b7e * 2.2,
        _0x122b35 = 0x1,
        _0x57b6cc = 1.5;
      _0x587de3["drawImage"](_0x22bd2b, _0x2a5bbc + _0x3f8030 * -_0x122b35, _0x3c6742 + _0x23d0e8 * -_0x57b6cc, _0x3f8030, _0x23d0e8),
        _0x587de3["restore"]();
    }
    var _0x159a00 = this["getSkinImageObj"](this["objSkinPath"][this["getSkinIndex"]()]["head"]);
    if (_0x159a00) {
      _0x587de3["save"]();
      var _0x434b7e = this["rad"] * 0x1,
        _0x418b9b = -this["rad"] * 0.1;
      _0x587de3["drawImage"](
        _0x159a00,
        -_0x434b7e * _0x16925d,
        -_0x434b7e + _0x418b9b * _0x16925d,
        0x2 * _0x434b7e * _0x16925d,
        0x2 * _0x434b7e * _0x16925d
      ),
        _0x587de3["restore"]();
    }
    _0x587de3["restore"]();
  }),
  (_0x182ca0["prototype"]["skinScale"] = 0x1f4 / 0x154),
  (_0x182ca0["prototype"]["flyingAnimation"] = function () {
    var _0x498b3c = this["skinScale"];
    if (this["flag_flying"] && !this["flag_isGrabbed"]) {
      _0x587de3["save"]();
      var _0x4b8328 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
        _0x4d1ba2 = !(_0x57ae6d == 0x2 || _0x34fedb) ? _0x120bbb(_0x4b8328, 0.5, 0.3, 0x2) : this["birdNoAnimationFlyWingAngle"],
        _0x1cf281 = this["getSkinImageObj"](this["objSkinPath"][this["getSkinIndex"]()]["wing1"]);
      if (_0x1cf281) {
        _0x587de3["save"]();
        var _0x459dfa = -(-0.2 + _0x4d1ba2) * _0x2f9e35,
          _0x40e7a6 = this["rad"] * 0.8;
        _0x587de3["rotate"](_0x3d960f(0x2d) + _0x459dfa);
        var _0x28367a = 0x0,
          _0x4e9a0d = this["rad"],
          _0x1ca609 = _0x40e7a6 * 0x2 * 0.62,
          _0x3267e2 = _0x40e7a6 * 2.5,
          _0x262bfd = 0.2,
          _0x17f852 = 1.7;
        _0x587de3["drawImage"](_0x1cf281, _0x28367a + _0x1ca609 * -_0x262bfd, _0x4e9a0d + _0x3267e2 * -_0x17f852, _0x1ca609, _0x3267e2),
          _0x587de3["restore"]();
      }
      var _0x1cf281 = this["getSkinImageObj"](this["objSkinPath"][this["getSkinIndex"]()]["wing2"]);
      if (_0x1cf281) {
        _0x587de3["save"]();
        var _0x459dfa = -(-0.2 + _0x4d1ba2) * _0x3d960f(-0x5a),
          _0x40e7a6 = this["rad"] * 0.8;
        _0x587de3["rotate"](_0x3d960f(-0x2d) + _0x459dfa);
        var _0x28367a = 0x0,
          _0x4e9a0d = this["rad"],
          _0x1ca609 = _0x40e7a6 * 0x2 * 0.62,
          _0x3267e2 = _0x40e7a6 * 2.5,
          _0x262bfd = 0.8,
          _0x17f852 = 1.7;
        _0x587de3["drawImage"](_0x1cf281, _0x28367a + _0x1ca609 * -_0x262bfd, _0x4e9a0d + _0x3267e2 * -_0x17f852, _0x1ca609, _0x3267e2),
          _0x587de3["restore"]();
      }
      _0x587de3["restore"]();
    }
    if (this["specType"] != 0x0 && this["specType"] != undefined) {
      var _0x1c5ee8 = this["getSkinImageObj"](this["objSkinPath"][this["getSkinIndex"]()]["head"]);
      if (_0x1c5ee8) {
        _0x587de3["save"]();
        var _0x40e7a6 = this["rad"];
        _0x587de3["drawImage"](
          _0x1c5ee8,
          -_0x40e7a6 * _0x498b3c,
          (-_0x40e7a6 + _0x40e7a6 * 0.1) * _0x498b3c,
          0x2 * _0x40e7a6 * _0x498b3c,
          0x2 * _0x40e7a6 * _0x498b3c
        ),
          _0x587de3["restore"]();
      }
    }
  }),
  (_0x182ca0["prototype"]["readCustomData_onNewlyVisible"] = function (_0x4cbf4a) {
    _0x182ca0["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x4cbf4a), (this["isAttacking"] = _0x4cbf4a["readUInt8"]());
  }),
  (_0x182ca0["prototype"]["readCustomData_onUpdate"] = function (_0x1ae01a) {
    _0x182ca0["superClass"]["prototype"]["readCustomData_onUpdate"]["call"](this, _0x1ae01a), (this["isAttacking"] = _0x1ae01a["readUInt8"]());
  });

function _0x182ca0() {
  _0x48c344["call"](this, _0x3fb3b2);
}
(window["Duck"] = _0x182ca0), _0x17bf26["setCustomClassForGameObjType"](_0x182ca0, _0x3fb3b2, _0x16a65d);
var _0x48c344 = _0x3799d1;
(_0x23660b["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x23660b["prototype"]["constructor"] = _0x23660b),
  (_0x23660b["superClass"] = _0x48c344),
  (_0x23660b["prototype"]["setSkinPath"] = function () {
    this["objSkinPath"] = "duck/duckling";
  }),
  (_0x23660b["prototype"]["getSkinName"] = function () {
    return this["objSkinPath"];
  });

function _0x23660b() {
  _0x23660b["superClass"]["call"](this, _0x3fb3b2);
}
(window["Duckling"] = _0x23660b), _0x17bf26["setCustomClassForGameObjType"](_0x23660b, _0x3fb3b2, _0x4ca3d5);
var _0x48c344 = _0x3799d1;
(_0x2748c0["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x2748c0["prototype"]["constructor"] = _0x2748c0),
  (_0x2748c0["superClass"] = _0x48c344),
  (_0x2748c0["prototype"]["updateZ"] = function () {
    this["z"] = 0x2710 + this["rad"];
  }),
  (_0x2748c0["prototype"]["canUseTailslap"] = ![]),
  (_0x2748c0["prototype"]["tailState"] = 0x0),
  (_0x2748c0["prototype"]["getSkinName"] = function () {
    return "volcano/blackdragon/" + this["animalSpecies"] + "/blackdragon";
  }),
  (_0x2748c0["prototype"]["leftWingAnim"] = null),
  (_0x2748c0["prototype"]["drawSkinCustomization"] = function () {
    if (this["flag_underWater"]) return;
    var _0x293bc0 = 0x1f4 / 0x154,
      _0x454a22 = this["lava"],
      _0x2b8b13 = 0x32;
    if (_0x454a22 < _0x2b8b13) {
      var _0x409821 = _0x454a22 / _0x2b8b13,
        _0x6fa5 = this["getSkinImageObj"]("skins/volcano/blackdragon/" + this["animalSpecies"] + "/wings.png");
      if (_0x6fa5) {
        _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0x1 - _0x409821);
        var _0x5bdc72 = this["rad"] - this["outlineW"];
        _0x587de3["drawImage"](_0x6fa5, -_0x5bdc72 * _0x293bc0, -_0x5bdc72 * _0x293bc0, 0x2 * _0x5bdc72 * _0x293bc0, 0x2 * _0x5bdc72 * _0x293bc0),
          _0x587de3["restore"]();
      }
    }
  }),
  (_0x2748c0["prototype"]["animalInfo"] = function () {
    var _0x1c4716 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x1c4716["aniName"] = "Black Dragon";
        break;
      case 0x1:
        _0x1c4716["aniName"] = "Golden Black Dragon";
        break;
      case 0x2:
        _0x1c4716["aniName"] = "Azure Bringer";
        break;
      case 0xcc:
        _0x1c4716["aniName"] = "Violet Dusk Black Dragon";
        break;
      default:
        break;
    }
    return (
      (_0x1c4716["aniCol"] = "#FF9000"),
      (_0x1c4716["skinName"] = this["getSkinName"]()),
      (_0x1c4716["upgradeText"] = "UPGRADED to " + _0x1c4716["aniName"]),
      (_0x1c4716["upgradeText"] += "!\x0a Black dragons drink lava instead of water! Black dragons only heal on healing stones/lava!"),
      (_0x1c4716["aniCol"] = "black"),
      _0x1c4716
    );
  }),
  (_0x2748c0["prototype"]["getAbilityInfo"] = function (_0x1545fd) {
    var _0x2d5bec = {};
    _0x2d5bec["abilName"] = "Multi Fireballs";
    var _0x39bdca = 0x0;
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x39bdca = 0x1;
        break;
      case 0x1:
        _0x39bdca = 0x2;
        break;
      case 0x2:
        _0x39bdca = 0x7;
        break;
    }
    return (
      (_0x2d5bec["speciesType"] = _0x39bdca),
      (_0x2d5bec["abilImg"] = "abilities/Fireball.svg"),
      (_0x2d5bec["skinThemeID"] = this["skinThemeID"]),
      (_0x2d5bec["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x2d5bec
    );
  });

function _0x2748c0() {
  (this["lava"] = 0x64), _0x2748c0["superClass"]["call"](this, _0x3fb3b2);
}
(window["BlackDragon"] = _0x2748c0), _0x17bf26["setCustomClassForGameObjType"](_0x2748c0, _0x3fb3b2, _0x322b1f);
var _0xf9a6d3 = _0xf9a6d3,
  _0x48c344 = _0x3799d1;
(_0xf9a6d3["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0xf9a6d3["prototype"]["constructor"] = _0xf9a6d3),
  (_0xf9a6d3["superClass"] = _0x48c344),
  (_0xf9a6d3["prototype"]["getSkinName"] = function () {
    return (
      "/honeybee/0/" + this["animalSubSpecies"] + "/honeybee" + (this["specType"] == 0x0 || this["specType"] == undefined ? "" : this["specType"])
    );
  }),
  (_0xf9a6d3["prototype"]["drawSkinCustomization"] = function () {
    _0x587de3["save"]();
    var _0x4671b7 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
      _0xaa50d7 = !(_0x57ae6d == 0x2 || _0x34fedb || _0x1ad900) ? _0x120bbb(_0x4671b7, 0.2, 0.3, 0x2) : 0x0,
      _0x967db7 = !(_0x57ae6d == 0x2 || _0x34fedb || _0x1ad900) ? _0x120bbb(_0x4671b7, 0.2, 0.3, 0x2) : 0x0,
      _0x42b14f = this["rad"] * 0.6,
      _0x784e5d = 0x1e,
      _0x5510bd = 0x2,
      _0x502ad2 = 0x14,
      _0x2df3d6 = this["getSkinImageObj"]("skins/honeybee/0/" + this["animalSubSpecies"] + "/honeybee_wing2.png");
    if (_0x2df3d6) {
      _0x587de3["save"]();
      var _0x546086 = -(-_0x5510bd + _0x967db7) * _0x3d960f(-(_0x784e5d - 0x5));
      (_0x587de3["globalAlpha"] = 0.6), _0x587de3["rotate"](_0x3d960f(-_0x502ad2 + 0xa) + _0x546086);
      var _0x22a4ec = 0x0,
        _0x28a728 = this["rad"],
        _0x2cd7d9 = _0x42b14f * 0x2 * 0.7,
        _0x5c0cad = _0x42b14f * 2.3,
        _0x40b3b6 = 0.5,
        _0x277f1f = 1.6;
      _0x587de3["drawImage"](_0x2df3d6, _0x22a4ec + _0x2cd7d9 * -_0x40b3b6, _0x28a728 + _0x5c0cad * -_0x277f1f, _0x2cd7d9, _0x5c0cad),
        _0x587de3["restore"]();
    }
    var _0x2df3d6 = this["getSkinImageObj"]("skins/honeybee/0/" + this["animalSubSpecies"] + "/honeybee_wing1.png");
    if (_0x2df3d6) {
      _0x587de3["save"]();
      var _0x546086 = -(-_0x5510bd + _0x967db7) * _0x3d960f(_0x784e5d - 0x5);
      (_0x587de3["globalAlpha"] = 0.6), _0x587de3["rotate"](_0x3d960f(_0x502ad2 - 0xa) + _0x546086);
      var _0x22a4ec = 0x0,
        _0x28a728 = this["rad"],
        _0x2cd7d9 = _0x42b14f * 2.3 * 0.7,
        _0x5c0cad = _0x42b14f * 2.3,
        _0x40b3b6 = 0.5,
        _0x277f1f = 1.6;
      _0x587de3["drawImage"](_0x2df3d6, _0x22a4ec + _0x2cd7d9 * -_0x40b3b6, _0x28a728 + _0x5c0cad * -_0x277f1f, _0x2cd7d9, _0x5c0cad),
        _0x587de3["restore"]();
    }
    var _0x2df3d6 = this["getSkinImageObj"]("skins/honeybee/0/" + this["animalSubSpecies"] + "/honeybee_wing1.png");
    if (_0x2df3d6) {
      _0x587de3["save"]();
      var _0x546086 = -(-_0x5510bd + _0xaa50d7) * _0x3d960f(_0x784e5d);
      (_0x587de3["globalAlpha"] = 0.5), _0x587de3["rotate"](_0x3d960f(_0x502ad2) + _0x546086);
      var _0x22a4ec = 0x0,
        _0x28a728 = this["rad"],
        _0x2cd7d9 = _0x42b14f * 0x2 * 0.7,
        _0x5c0cad = _0x42b14f * 2.3,
        _0x40b3b6 = 0.5,
        _0x277f1f = 1.7;
      _0x587de3["drawImage"](_0x2df3d6, _0x22a4ec + _0x2cd7d9 * -_0x40b3b6, _0x28a728 + _0x5c0cad * -_0x277f1f, _0x2cd7d9, _0x5c0cad),
        _0x587de3["restore"]();
    }
    var _0x2df3d6 = this["getSkinImageObj"]("skins/honeybee/0/" + this["animalSubSpecies"] + "/honeybee_wing2.png");
    if (_0x2df3d6) {
      _0x587de3["save"]();
      var _0x546086 = -(-_0x5510bd + _0xaa50d7) * _0x3d960f(-_0x784e5d);
      (_0x587de3["globalAlpha"] = 0.5), _0x587de3["rotate"](_0x3d960f(-_0x502ad2) + _0x546086);
      var _0x22a4ec = 0x0,
        _0x28a728 = this["rad"],
        _0x2cd7d9 = _0x42b14f * 0x2 * 0.7,
        _0x5c0cad = _0x42b14f * 2.3,
        _0x40b3b6 = 0.5,
        _0x277f1f = 1.7;
      _0x587de3["drawImage"](_0x2df3d6, _0x22a4ec + _0x2cd7d9 * -_0x40b3b6, _0x28a728 + _0x5c0cad * -_0x277f1f, _0x2cd7d9, _0x5c0cad),
        _0x587de3["restore"]();
    }
    _0x587de3["restore"]();
  });

function _0xf9a6d3() {
  _0xf9a6d3["superClass"]["call"](this, _0x3fb3b2);
}
(window["Honeybee"] = _0xf9a6d3), _0x17bf26["setCustomClassForGameObjType"](_0xf9a6d3, _0x3fb3b2, _0x3ae185);
var _0x39465c = _0x39465c,
  _0x48c344 = _0x3799d1;
(_0x39465c["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x39465c["prototype"]["constructor"] = _0x39465c),
  (_0x39465c["superClass"] = _0x48c344),
  (_0x39465c["prototype"]["animalInfo"] = function () {
    var _0x39bab5 = {},
      _0x2267a5 = this["animalSpecies"];
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x39bab5["aniName"] = "The Phoenix";
        break;
      case 0x1:
        _0x39bab5["aniName"] = "Golden Phoenix";
        break;
      case 0x2:
        _0x39bab5["aniName"] = "Alpha Phoenix";
        break;
      case 0xc8:
        _0x2267a5 = "/" + this["animalSubSpecies"];
        switch (this["animalSubSpecies"]) {
          case 0x0:
            _0x39bab5["aniName"] = "Aqua Phoenix";
            break;
          case 0x1:
            _0x39bab5["aniName"] = "Ice Phoenix";
            break;
          case 0x2:
            _0x39bab5["aniName"] = "Ash Phoenix";
            break;
          case 0x3:
            _0x39bab5["aniName"] = "Red Giant Phoenix";
            break;
        }
        break;
    }
    return (
      (_0x39bab5["aniCol"] = "#FF9000"),
      (_0x39bab5["skinName"] = "/volcano/phoenix/" + _0x2267a5 + "/phoenix"),
      (_0x39bab5["upgradeText"] = "UPGRADED to " + _0x39bab5["aniName"] + "!\x0aPhoenix shoot Firetornados to burn their prey alive!"),
      _0x39bab5
    );
  }),
  (_0x39465c["prototype"]["getSkinImageObj"] = function (_0x968dd9) {
    var _0x658a76 = this["animalSpecies"] === 0x1 || this["animalSpecies"] === 0x2 || this["animalSpecies"] === 0xc8 ? 0x1 : this["mopeSeasonID"];
    return this["getSkinImageObjForSeason"](_0x968dd9, _0x658a76);
  }),
  (_0x39465c["prototype"]["getAbilityInfo"] = function (_0x11854b) {
    var _0xb9bf5c = {},
      _0x376ce2 = this["animalSpecies"];
    return (
      this["animalSpecies"] == 0xc8 && (_0x376ce2 += "/" + this["animalSubSpecies"]),
      (_0xb9bf5c["abilName"] = "Fire Tornado!"),
      (_0xb9bf5c["abilImg"] = "abilities/Firestorm.svg"),
      (_0xb9bf5c["skinThemeID"] = this["skinThemeID"]),
      (_0xb9bf5c["mopeSeasonID"] = this["mopeSeasonID"]),
      _0xb9bf5c
    );
  }),
  (_0x39465c["prototype"]["getSkinName"] = function () {
    var _0x2a09f5 = this["animalSpecies"];
    return (
      this["animalSpecies"] == 0xc8 && (_0x2a09f5 += "/" + this["animalSubSpecies"]),
      "/volcano/phoenix/" + _0x2a09f5 + "/phoenix" + (this["specType"] == 0x0 || this["specType"] == undefined ? "" : this["specType"])
    );
  }),
  (_0x39465c["prototype"]["getSkinPart"] = function (_0x516861) {
    var _0x32fdad = this["animalSpecies"];
    return (
      this["animalSpecies"] == 0xc8 && (_0x32fdad += "/" + this["animalSubSpecies"]),
      this["getSkinImageObj"]("skins/volcano/phoenix/" + _0x32fdad + "/" + _0x516861 + ".png")
    );
  }),
  (_0x39465c["prototype"]["drawSkinImg"] = function () {
    if (!(_0x57ae6d == 0x2 || _0x34fedb || _0x5f39f2)) {
      var _0x48f3d7 = 0x1f4 / 0x154,
        _0xb7eb09 = this["rad"] - this["outlineW"],
        _0x10d5ad = this["getSkinPart"]("phoenix_body"),
        _0x1616db = this["getSkinPart"]("phoenix_head"),
        _0x360256 = Math["trunc"](_0x168a54 / 0xa6) % 0x6,
        _0x43f69c = this["getSkinPart"]("/tail_mid/tail_mid_" + _0x360256);
      if (_0x43f69c)
        _0x587de3["drawImage"](_0x43f69c, -_0xb7eb09 * _0x48f3d7, -_0xb7eb09 * _0x48f3d7, 0x2 * _0xb7eb09 * _0x48f3d7, 0x2 * _0xb7eb09 * _0x48f3d7);
      var _0x360256 = Math["trunc"](_0x168a54 / 0xa6) % 0x6,
        _0x3ad130 = Math["trunc"](_0x168a54 / 0xfa) % 0x6,
        _0x38f0fc = this["getSkinPart"]("/tail/tail_" + _0x360256),
        _0x5beb60 = this["getSkinPart"]("tail_flipped/tail_" + _0x3ad130);
      if (_0x38f0fc)
        _0x587de3["drawImage"](_0x38f0fc, -_0xb7eb09 * _0x48f3d7, -_0xb7eb09 * _0x48f3d7, 0x2 * _0xb7eb09 * _0x48f3d7, 0x2 * _0xb7eb09 * _0x48f3d7);
      if (_0x5beb60)
        _0x587de3["drawImage"](_0x5beb60, -_0xb7eb09 * _0x48f3d7, -_0xb7eb09 * _0x48f3d7, 0x2 * _0xb7eb09 * _0x48f3d7, 0x2 * _0xb7eb09 * _0x48f3d7);
      if (_0x10d5ad)
        _0x587de3["drawImage"](_0x10d5ad, -_0xb7eb09 * _0x48f3d7, -_0xb7eb09 * _0x48f3d7, 0x2 * _0xb7eb09 * _0x48f3d7, 0x2 * _0xb7eb09 * _0x48f3d7);
      var _0x4f0d00 = Math["trunc"](_0x168a54 / 0x7d) % 0x8,
        _0x375d4e = Math["trunc"](_0x168a54 / 0x96) % 0x8,
        _0x8b5a94 = this["getSkinPart"]("wing_flame_orange/wing_flame_orange_" + _0x4f0d00),
        _0xe0b36b = this["getSkinPart"]("wing_flame_yellow/wing_flame_yellow_" + _0x375d4e);
      if (_0x8b5a94)
        _0x587de3["drawImage"](_0x8b5a94, -_0xb7eb09 * _0x48f3d7, -_0xb7eb09 * _0x48f3d7, 0x2 * _0xb7eb09 * _0x48f3d7, 0x2 * _0xb7eb09 * _0x48f3d7);
      if (_0xe0b36b)
        _0x587de3["drawImage"](_0xe0b36b, -_0xb7eb09 * _0x48f3d7, -_0xb7eb09 * _0x48f3d7, 0x2 * _0xb7eb09 * _0x48f3d7, 0x2 * _0xb7eb09 * _0x48f3d7);
      var _0x3611a1 = this["getSkinPart"]("wing_flame_orange_flipped/wing_flame_orange_" + _0x4f0d00),
        _0x20e16d = this["getSkinPart"]("wing_flame_yellow_flipped/wing_flame_yellow_" + _0x375d4e);
      if (_0x3611a1)
        _0x587de3["drawImage"](_0x3611a1, -_0xb7eb09 * _0x48f3d7, -_0xb7eb09 * _0x48f3d7, 0x2 * _0xb7eb09 * _0x48f3d7, 0x2 * _0xb7eb09 * _0x48f3d7);
      if (_0x20e16d)
        _0x587de3["drawImage"](_0x20e16d, -_0xb7eb09 * _0x48f3d7, -_0xb7eb09 * _0x48f3d7, 0x2 * _0xb7eb09 * _0x48f3d7, 0x2 * _0xb7eb09 * _0x48f3d7);
      if (_0x1616db)
        _0x587de3["drawImage"](_0x1616db, -_0xb7eb09 * _0x48f3d7, -_0xb7eb09 * _0x48f3d7, 0x2 * _0xb7eb09 * _0x48f3d7, 0x2 * _0xb7eb09 * _0x48f3d7);
    } else _0x39465c["superClass"]["prototype"]["drawSkinImg"]["call"](this);
  });

function _0x39465c() {
  _0x39465c["superClass"]["call"](this, _0x3fb3b2);
}
(window["Phoenix"] = _0x39465c), _0x17bf26["setCustomClassForGameObjType"](_0x39465c, _0x3fb3b2, _0x3a0961);
var _0x9b02ba = _0x9b02ba,
  _0x48c344 = _0x3799d1;
(_0x9b02ba["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x9b02ba["prototype"]["constructor"] = _0x9b02ba),
  (_0x9b02ba["superClass"] = _0x48c344),
  (_0x9b02ba["prototype"]["animalInfo"] = function () {
    var _0xbf1adb = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0xbf1adb["aniName"] = "Pigeon";
        break;
      case 0x1:
        (_0xbf1adb["aniName"] = "Rare White Dove"), (_0xbf1adb["upgradeText"] += "\x0a(Doves fly faster!)");
        break;
      case 0xca:
        _0xbf1adb["aniName"] = "Thug Pigeon";
        break;
    }
    return (
      (_0xbf1adb["aniCol"] = "#FF9000"),
      (_0xbf1adb["skinName"] = this["getSkinName"]()),
      (_0xbf1adb["upgradeText"] = "UPGRADED to " + _0xbf1adb["aniName"] + "!\x0aHold W to fly around. "),
      _0xbf1adb
    );
  }),
  (_0x9b02ba["prototype"]["getSkinName"] = function () {
    let _0x544452 = this["getSpeciesPath"]() + "/pigeon";
    return (_0x544452 += this["specType"] == 0x0 ? "" : this["specType"]), _0x544452;
  }),
  (_0x9b02ba["prototype"]["getSpeciesPath"] = function () {
    return "land/pigeon/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x9b02ba["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x9b02ba["prototype"]["getWing"] = function (_0x441f5a) {
    var _0x2b7ead = "skins/" + this["getSpeciesPath"]();
    return (_0x2b7ead += "/pigeon_wing" + _0x441f5a + ".png"), _0x2b7ead;
  }),
  (_0x9b02ba["prototype"]["getHead"] = function () {
    var _0x124b93 = "skins/" + this["getSpeciesPath"]();
    return (_0x124b93 += "/pigeon_head.png"), _0x124b93;
  }),
  (_0x9b02ba["prototype"]["theFrame"] = 0x0),
  (_0x9b02ba["prototype"]["drawSkinCustomization"] = function () {
    if (!this["flag_usingAbility"]) return;
    var _0x49c448 = "skins";
    {
      var _0x4590a1 = 0x1f4 / 0x154;
      if (this["flag_flying"] && !this["flag_isGrabbed"]) {
        _0x587de3["save"]();
        var _0x1fafdd = _0x38b128("bird", this["spawnTime"]);
        _0x1fafdd !== undefined && _0x1fafdd != null && (this["theFrame"] = _0x1fafdd);
        var _0x62893e = !(_0x57ae6d == 0x2 || _0x34fedb) ? this["theFrame"] : this["birdNoAnimationFlyWingAngle"],
          _0x26cd3b = this["getSkinImageObj"](this["getWing"](0x1));
        if (_0x26cd3b) {
          _0x587de3["save"]();
          var _0x484309 = -(-0.2 + _0x62893e) * _0x2f9e35,
            _0x32269b = this["rad"] * 0.8;
          _0x587de3["rotate"](_0x25461f + _0x484309);
          var _0x493293 = 0x0,
            _0x4484b2 = this["rad"],
            _0xe1e3f5 = _0x32269b * 0x2 * 0.62,
            _0x5665af = _0x32269b * 2.5,
            _0xb92dd6 = 0.2,
            _0xf738e = 1.7;
          _0x587de3["drawImage"](_0x26cd3b, _0x493293 + _0xe1e3f5 * -_0xb92dd6, _0x4484b2 + _0x5665af * -_0xf738e, _0xe1e3f5, _0x5665af),
            _0x587de3["restore"]();
        }
        var _0x26cd3b = this["getSkinImageObj"](this["getWing"](0x2));
        if (_0x26cd3b) {
          _0x587de3["save"]();
          var _0x484309 = -(-0.2 + _0x62893e) * _0x3d960f(-0x5a),
            _0x32269b = this["rad"] * 0.8;
          _0x587de3["rotate"](_0x3d960f(-0x2d) + _0x484309);
          var _0x493293 = 0x0,
            _0x4484b2 = this["rad"],
            _0xe1e3f5 = _0x32269b * 0x2 * 0.62,
            _0x5665af = _0x32269b * 2.5,
            _0xb92dd6 = 0.8,
            _0xf738e = 1.7;
          _0x587de3["drawImage"](_0x26cd3b, _0x493293 + _0xe1e3f5 * -_0xb92dd6, _0x4484b2 + _0x5665af * -_0xf738e, _0xe1e3f5, _0x5665af),
            _0x587de3["restore"]();
        }
        _0x587de3["restore"]();
      }
      if (this["specType"] != 0x0 && this["specType"] != undefined) {
        var _0x198eb9 = this["getSkinImageObj"](this["getHead"]());
        if (_0x198eb9) {
          _0x587de3["save"]();
          var _0x32269b = this["rad"];
          _0x587de3["drawImage"](
            _0x198eb9,
            -_0x32269b * _0x4590a1,
            (-_0x32269b + _0x32269b * 0.1) * _0x4590a1,
            0x2 * _0x32269b * _0x4590a1,
            0x2 * _0x32269b * _0x4590a1
          ),
            _0x587de3["restore"]();
        }
      }
    }
  });

function _0x9b02ba() {
  _0x9b02ba["superClass"]["call"](this, _0x3fb3b2);
}
(window["Pigeon"] = _0x9b02ba), _0x17bf26["setCustomClassForGameObjType"](_0x9b02ba, _0x3fb3b2, _0x5b8090);
var _0x746182 = _0x746182,
  _0x48c344 = _0x3799d1;
(_0x746182["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x746182["prototype"]["constructor"] = _0x746182),
  (_0x746182["superClass"] = _0x48c344),
  (_0x746182["prototype"]["getSpeciesPath"] = function (_0x2b97dd) {
    var _0xdd0c1d = "/land/" + _0x2b97dd + "/" + this["animalSpecies"] + (this["animalSpecies"] == 0x4 ? "/" + this["animalSubSpecies"] : "");
    return _0xdd0c1d;
  }),
  (_0x746182["prototype"]["getWing"] = function (_0x2b6964, _0x50ece4, _0x5ec9c6) {
    var _0x4bb3ea = "skins/";
    switch (this["animalSpecies"]) {
      case 0x5:
      case 0x6:
      case 0xc8:
      case 0xdc:
        _0x4bb3ea += this["getSpeciesPath"](_0x2b6964);
        break;
      default:
        _0x4bb3ea += "land/" + _0x2b6964;
    }
    switch (_0x50ece4) {
      case 0x1:
        _0x4bb3ea += "/" + _0x2b6964 + "_wing1.png";
        break;
      case 0x2:
        _0x4bb3ea += "/" + _0x2b6964 + "_wing2.png";
        break;
    }
    return _0x4bb3ea;
  }),
  (_0x746182["prototype"]["animalInfo"] = function () {
    var _0x267c5c = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x267c5c["aniName"] = "Toco Toucan";
        break;
      case 0x1:
        _0x267c5c["aniName"] = "Choco Toucan";
        break;
      case 0x2:
        _0x267c5c["aniName"] = "Keel-Billed Toucan";
        break;
      case 0x3:
        _0x267c5c["aniName"] = "Fiery Toucan";
        break;
      case 0x4:
        switch (this["animalSubSpecies"]) {
          case 0x0:
            _0x267c5c["aniName"] = "Lava Toucan";
            break;
          case 0x1:
            _0x267c5c["aniName"] = "Ice Toucan";
            break;
          case 0x2:
            _0x267c5c["aniName"] = "Aqua Toucan";
            break;
        }
        break;
      case 0x5:
        _0x267c5c["aniName"] = "Pakistan Toucan";
        break;
      case 0x6:
        _0x267c5c["aniName"] = "Prisma Toucan";
        break;
      case 0x64:
        _0x267c5c["aniName"] = "The Dapper";
        break;
      case 0xc8:
        _0x267c5c["aniName"] = "Ice Toucan";
        break;
      case 0xca:
        _0x267c5c["aniName"] = "Corpse Flower Toucan";
        break;
      case 0xdc:
        _0x267c5c["aniName"] = "Molten Toucan";
        break;
    }
    return (
      (_0x267c5c["upgradeText"] =
        "UPGRADED to " +
        _0x267c5c["aniName"] +
        "!\x0aHold right click (or W) to fly!\x0a(HINT: Start flying from a fruit tree or bush to throw fruit upon landing!)"),
      (_0x267c5c["aniCol"] = "#FF9000"),
      (_0x267c5c["skinName"] = this["getSpeciesPath"]("toucan") + "/toucan"),
      _0x267c5c
    );
  }),
  (_0x746182["prototype"]["getSkinName"] = function () {
    var _0x300a91 = this["getSpeciesPath"]("toucan") + "/toucan" + (this["specType"] == 0x0 ? "" : this["specType"]);
    return _0x300a91;
  }),
  (_0x746182["prototype"]["drawSkinCustomization"] = function () {
    var _0xb7469 = 0x1f4 / 0x154;
    if (!this["flag_usingAbility"]) {
      this["drawBeak"]();
      return;
    }
    {
      if (this["flag_flying"] && !this["flag_isGrabbed"]) {
        _0x587de3["save"]();
        var _0x11a94c = _0x38b128("bird", this["spawnTime"]);
        _0x11a94c !== undefined && _0x11a94c != null && (this["theFrame"] = _0x11a94c);
        var _0x7fae08 = !(_0x57ae6d == 0x2 || _0x34fedb) ? this["theFrame"] : this["birdNoAnimationFlyWingAngle"],
          _0x1a96ab = this["getSkinImageObj"](this["getWing"]("toucan", 0x1, !![]));
        if (_0x1a96ab) {
          _0x587de3["save"]();
          var _0x5a4eb9 = -(-0.2 + _0x7fae08) * _0x2f9e35,
            _0x2d5321 = this["rad"] * 0.8;
          _0x587de3["rotate"](_0x3d960f(0x2d) + _0x5a4eb9);
          var _0x467916 = 0x0,
            _0x595cd8 = this["rad"],
            _0x531b95 = _0x2d5321 * 0x2 * 0.62,
            _0x400c4d = _0x2d5321 * 2.5,
            _0x1cfd53 = 0.2,
            _0x13ba21 = 1.7;
          _0x587de3["drawImage"](_0x1a96ab, _0x467916 + _0x531b95 * -_0x1cfd53, _0x595cd8 + _0x400c4d * -_0x13ba21, _0x531b95, _0x400c4d),
            _0x587de3["restore"]();
        }
        var _0x1a96ab = this["getSkinImageObj"](this["getWing"]("toucan", 0x2, !![]));
        if (_0x1a96ab) {
          _0x587de3["save"]();
          var _0x5a4eb9 = -(-0.2 + _0x7fae08) * _0x3d960f(-0x5a),
            _0x2d5321 = this["rad"] * 0.8;
          _0x587de3["rotate"](_0x3d960f(-0x2d) + _0x5a4eb9);
          var _0x467916 = 0x0,
            _0x595cd8 = this["rad"],
            _0x531b95 = _0x2d5321 * 0x2 * 0.62,
            _0x400c4d = _0x2d5321 * 2.5,
            _0x1cfd53 = 0.8,
            _0x13ba21 = 1.7;
          _0x587de3["drawImage"](_0x1a96ab, _0x467916 + _0x531b95 * -_0x1cfd53, _0x595cd8 + _0x400c4d * -_0x13ba21, _0x531b95, _0x400c4d),
            _0x587de3["restore"]();
        }
        _0x587de3["restore"]();
      }
      if (this["specType"] != 0x0 && this["specType"] != undefined) {
        var _0x5bb556 = this["getSkinImageObj"](this["getHead"]("toucan", !![]));
        if (_0x5bb556) {
          _0x587de3["save"]();
          var _0x2d5321 = this["rad"];
          _0x587de3["drawImage"](
            _0x5bb556,
            -_0x2d5321 * _0xb7469,
            (-_0x2d5321 + _0x2d5321 * 0.1) * _0xb7469,
            0x2 * _0x2d5321 * _0xb7469,
            0x2 * _0x2d5321 * _0xb7469
          ),
            _0x587de3["restore"]();
        }
        this["drawBeak"]();
      }
    }
  }),
  (_0x746182["prototype"]["drawBeak"] = function () {
    var _0x2b5e41 = 0x1f4 / 0x154,
      _0x2710bb = this["flag_flying"] && !this["flag_isGrabbed"] ? 0.25 : 0.1,
      _0x4e8bdc = "skins/" + this["getSpeciesPath"]("toucan") + "/toucan_beak.png",
      _0x545e71 = this["getSkinImageObj"](_0x4e8bdc);
    if (_0x545e71) {
      _0x587de3["save"]();
      var _0x5d1bce = this["rad"];
      _0x587de3["drawImage"](
        _0x545e71,
        -_0x5d1bce * _0x2b5e41,
        (-_0x5d1bce + _0x5d1bce * _0x2710bb) * _0x2b5e41,
        0x2 * _0x5d1bce * _0x2b5e41,
        0x2 * _0x5d1bce * _0x2b5e41
      ),
        _0x587de3["restore"]();
    }
  });

function _0x746182() {
  _0x746182["superClass"]["call"](this, _0x3fb3b2), (this["doesDrawEffectScale"] = ![]);
}
(window["Toucan"] = _0x746182), _0x17bf26["setCustomClassForGameObjType"](_0x746182, _0x3fb3b2, _0x65dffc);
var _0x24115a = _0x24115a,
  _0x48c344 = _0x3799d1;
(_0x24115a["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x24115a["prototype"]["constructor"] = _0x24115a),
  (_0x24115a["superClass"] = _0x48c344),
  (_0x24115a["prototype"]["animalInfo"] = function () {
    var _0x53712d = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x53712d["aniName"] = "Tiger";
        break;
      case 0x1:
        _0x53712d["aniName"] = "rare White Tiger";
        break;
      case 0xcc:
        _0x53712d["aniName"] = "Chimera Tiger";
        break;
    }
    return (
      (_0x53712d["aniDesc"] = ""),
      (_0x53712d["upgradeText"] = "UPGRADED to " + _0x53712d["aniName"] + "!\x0a Tigers can launch an ambush attack (HOLD W to grow a bush)!"),
      (_0x53712d["aniCol"] = "#FF9000"),
      (_0x53712d["skinName"] = this["getSkinName"]()),
      _0x53712d
    );
  }),
  (_0x24115a["prototype"]["getSkinName"] = function () {
    let _0x496a65 = this["getSpeciesPath"]() + "/tiger";
    return (_0x496a65 += this["specType"] == 0x0 ? "" : this["specType"]), _0x496a65;
  }),
  (_0x24115a["prototype"]["getSpeciesPath"] = function () {
    return "land/tiger/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x24115a["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x24115a["prototype"]["getSkinImageObj"] = function (_0x223aef) {
    var _0x377263 = this["animalSpecies"] === 0xcc ? 0x1 : this["mopeSeasonID"];
    return this["getSkinImageObjForSeason"](_0x223aef, _0x377263);
  });

function _0x24115a() {
  _0x24115a["superClass"]["call"](this, _0x3fb3b2);
}
(window["Tiger"] = _0x24115a), _0x17bf26["setCustomClassForGameObjType"](_0x24115a, _0x3fb3b2, _0x10ad1f);
var _0x48c344 = _0x3799d1;
(_0x1398f2["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1398f2["prototype"]["constructor"] = _0x1398f2),
  (_0x1398f2["superClass"] = _0x48c344),
  (_0x1398f2["prototype"]["animalInfo"] = function () {
    var _0x10ef44 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x10ef44["aniName"] = "Cobra";
        break;
      case 0x64:
        _0x10ef44["aniName"] = "Wyrmous";
        break;
      case 0xc8:
        _0x10ef44["aniName"] = "Celestial Cobra";
        break;
    }
    return (
      (_0x10ef44["skinName"] = this["getSkinName"]()),
      (_0x10ef44["aniDesc"] = ""),
      (_0x10ef44["upgradeText"] = "UPGRADED to " + _0x10ef44["aniName"] + "!\x0a Hold W to Spit venom, and poison animals with your bite!"),
      (_0x10ef44["aniCol"] = "black"),
      _0x10ef44
    );
  }),
  (_0x1398f2["prototype"]["getAbilityInfo"] = function (_0x374b58) {
    var _0x1fc7fb = {};
    return (
      (_0x1fc7fb["abilName"] = "Venom Spit"),
      (_0x1fc7fb["abilImg"] = "abilities/Spit.svg"),
      (_0x1fc7fb["skinThemeID"] = this["skinThemeID"]),
      (_0x1fc7fb["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x1fc7fb
    );
  }),
  (_0x1398f2["prototype"]["getSkinName"] = function () {
    let _0x2550d9 = this["getSpeciesPath"]() + "/cobra";
    return (_0x2550d9 += this["flag_usingAbility"] ? "2" : ""), _0x2550d9;
  }),
  (_0x1398f2["prototype"]["getSpeciesPath"] = function () {
    return "land/cobra/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x1398f2["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x1398f2["prototype"]["drawUnderSkinImg"] = function () {
    if (this["flag_usingAbility"]) return;
    var _0x4fb428 = this["rad"] - this["outlineW"],
      _0x2f06f7 = 0x1f4 / 0x154,
      _0x8b2ef0 = "skins/" + this["getSpeciesPath"]() + "/tongue.png",
      _0x448693 = this["getSkinImageObj"](_0x8b2ef0),
      _0x39c1ea = (_0x168a54 - this["spawnTime"]) / 0x3e8,
      _0x22c779 = _0x57ae6d == 0x2 ? 0x0 : _0x120bbb(_0x39c1ea, 0.5, 0x5, 0.5),
      _0x148db3 = _0x57ae6d == 0x2 ? 0x0 : 0x5;
    _0x448693 &&
      _0x587de3["drawImage"](
        _0x448693,
        -_0x4fb428 * _0x2f06f7,
        -(_0x4fb428 + _0x148db3 + _0x22c779) * _0x2f06f7,
        0x2 * _0x4fb428 * _0x2f06f7,
        0x2 * _0x4fb428 * _0x2f06f7
      );
  });

function _0x1398f2() {
  _0x1398f2["superClass"]["call"](this, _0x3fb3b2);
}
(window["Cobra"] = _0x1398f2), _0x17bf26["setCustomClassForGameObjType"](_0x1398f2, _0x3fb3b2, _0x1a3bd2);
var _0x22a786 = _0x22a786,
  _0x48c344 = _0x307a43;
(_0x22a786["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x22a786["prototype"]["constructor"] = _0x22a786),
  (_0x22a786["superClass"] = _0x48c344),
  (_0x22a786["prototype"]["skinPath"] = {}),
  (_0x22a786["prototype"]["updateZ"] = function () {
    this["z"] = 0x3ed;
  }),
  (_0x22a786["prototype"]["customDraw"] = function (_0x12b835) {
    if (!(_0x57ae6d == 0x2) && !_0x34fedb) {
      var _0x4b2959 = Math["trunc"](_0x168a54 / 0x78) % 0x5,
        _0x3cddb9 = this["getSkinImageObj"](this["skinPath"][_0x4b2959]);
      if (_0x3cddb9) {
        var _0x350d5c = 0x0,
          _0x46c2c4 = this["rad"] * 0.4,
          _0xac8baf = (this["rad"] * 0x2 * (0x2 + 0x2)) / 0x3,
          _0x594e93 = this["rad"] * 0x2,
          _0x56575b = 0.5,
          _0x5ac89f = 0.95;
        _0x587de3["save"](),
          _0x587de3["rotate"](_0x3d960f(0x0)),
          _0x587de3["drawImage"](_0x3cddb9, _0x350d5c + _0xac8baf * -_0x56575b, _0x46c2c4 + _0x594e93 * -_0x5ac89f, _0xac8baf, _0x594e93),
          _0x587de3["restore"]();
      }
    } else {
      var _0x3cddb9 = this["getSkinImageObj"](this["skinPath"][0x0]);
      if (_0x3cddb9) {
        var _0x350d5c = 0x0,
          _0x46c2c4 = this["rad"] * 0.4,
          _0xac8baf = (this["rad"] * 0x2 * (0x2 + 0x2)) / 0x3,
          _0x594e93 = this["rad"] * 0x2,
          _0x56575b = 0.5,
          _0x5ac89f = 0.95;
        _0x587de3["save"](),
          _0x587de3["rotate"](_0x3d960f(0x0)),
          _0x587de3["drawImage"](_0x3cddb9, _0x350d5c + _0xac8baf * -_0x56575b, _0x46c2c4 + _0x594e93 * -_0x5ac89f, _0xac8baf, _0x594e93),
          _0x587de3["restore"]();
      }
    }
  }),
  (_0x22a786["prototype"]["readCustomData_onNewlyVisible"] = function (_0x36a57f) {
    _0x22a786["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x36a57f),
      (this["speciesType"] = _0x36a57f["readUInt16"]()),
      (this["speciesSubType"] = _0x36a57f["readUInt16"]());
    for (var _0x54ca94 = 0x0; _0x54ca94 <= 0x5; _0x54ca94++)
      this["skinPath"][_0x54ca94] = "gameobj/" + this["oType"] + "/" + this["speciesType"] + "/" + _0x54ca94 + ".png";
  });

function _0x22a786() {
  _0x22a786["superClass"]["call"](this, _0x4a8382),
    (this["webTransparency"] = 0x0),
    (this["doesDrawEffectScale"] = !![]),
    (this["drawEffectScale_Slow"] = !![]);
}
(window["Fire"] = _0x22a786), _0x17bf26["setCustomClassForGameObjType"](_0x22a786, _0x4a8382);
var _0x48c344 = _0x307a43;
(_0x1c9a04["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1c9a04["prototype"]["constructor"] = _0x1c9a04),
  (_0x1c9a04["superClass"] = _0x48c344),
  (_0x1c9a04["prototype"]["updateZ"] = function () {
    this["z"] = 0x3ed;
  }),
  (_0x1c9a04["prototype"]["skinPath"] = {}),
  (_0x1c9a04["prototype"]["ANIMATION_NAME"] = "fireball"),
  (_0x1c9a04["prototype"]["customDraw"] = function (_0x519c6d) {
    if (!(_0x57ae6d == 0x2) && !_0x34fedb) {
      let _0x1a46b9 = _0x38b128(this["ANIMATION_NAME"], this["spawnTime"]);
      if (_0x1a46b9 == null || _0x1a46b9 == NaN) _0x1a46b9 = 0x0;
      var _0x573290 = Math["trunc"](_0x168a54 / 0x78) % 0x5,
        _0x54f0a9 = this["getSkinImageObj"](this["skinPath"][_0x573290]);
      if (_0x54f0a9) {
        var _0x4ff44a = 0x0,
          _0x4a16d1 = this["rad"] * 0.4,
          _0x2187ed = (this["rad"] * 0x2 * (0x2 + _0x1a46b9 * 0x2)) / 0x3,
          _0x3ff13e = this["rad"] * 3.5 * _0x1a46b9,
          _0x409a95 = 0.5,
          _0x330c47 = 0.95;
        _0x587de3["save"]();
        {
          (_0x587de3["globalAlpha"] *= this["onFireEffA"] * _0x1a46b9),
            _0x587de3["rotate"](this["angle"]),
            _0x587de3["drawImage"](_0x54f0a9, _0x4ff44a + _0x2187ed * -_0x409a95, _0x4a16d1 + _0x3ff13e * -_0x330c47, _0x2187ed, _0x3ff13e);
        }
        _0x587de3["restore"]();
      }
    } else {
      var _0x54f0a9 = this["getSkinImageObj"](this["skinPath"][0x0]);
      if (_0x54f0a9) {
        var _0x4ff44a = 0x0,
          _0x4a16d1 = this["rad"] * 0.4,
          _0x2187ed = (this["rad"] * 0x2 * (0x2 + 0x2)) / 0x3,
          _0x3ff13e = this["rad"] * 3.5,
          _0x409a95 = 0.5,
          _0x330c47 = 0.95;
        _0x587de3["save"]();
        {
          _0x587de3["rotate"](this["angle"]),
            _0x587de3["drawImage"](_0x54f0a9, _0x4ff44a + _0x2187ed * -_0x409a95, _0x4a16d1 + _0x3ff13e * -_0x330c47, _0x2187ed, _0x3ff13e);
        }
        _0x587de3["restore"]();
      }
    }
  }),
  (_0x1c9a04["prototype"]["readCustomData_onNewlyVisible"] = function (_0x4b52e6) {
    _0x1c9a04["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x4b52e6),
      (this["speciesType"] = _0x4b52e6["readUInt16"]()),
      (this["speciesSubType"] = _0x4b52e6["readUInt16"]());
    for (var _0x4eb947 = 0x0; _0x4eb947 <= 0x5; _0x4eb947++)
      this["skinPath"][_0x4eb947] = "gameobj/" + this["oType"] + "/" + this["speciesType"] + "/" + _0x4eb947 + ".png";
  });

function _0x1c9a04() {
  _0x1c9a04["superClass"]["call"](this, _0x4b3c4f);
}
(window["FireBall"] = _0x1c9a04), _0x17bf26["setCustomClassForGameObjType"](_0x1c9a04, _0x4b3c4f);
var _0x48c344 = _0x307a43;
(_0x159836["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x159836["prototype"]["constructor"] = _0x159836),
  (_0x159836["superClass"] = _0x48c344),
  (_0x159836["prototype"]["nickName"] = "mope.io"),
  (_0x159836["prototype"]["fadeAway"] = ![]),
  (_0x159836["prototype"]["webTransparency"] = 0x64),
  (_0x159836["prototype"]["carcassType"] = 0x0),
  (_0x159836["prototype"]["updateZ"] = function () {
    if (this["flag_flying"]) this["z"] = 0x186a0 + this["rad"] / 0xa;
    else this["z"] = -0x64;
  }),
  (_0x159836["prototype"]["getNameSize"] = function () {
    return 0x6;
  }),
  (_0x159836["prototype"]["setNick"] = function (_0xd6a8b9) {
    (this["nickName"] = _0xd6a8b9),
      null == this["nickTXT"]
        ? ((this["nickTXT"] = new _0x413af8(this["getNameSize"](), "#FFFFFF")),
          (this["nickTXT"]["strokeW"] = 1.5),
          (this["nickTXT"]["renderScale"] = 0x5),
          this["nickTXT"]["setText"](this["nickName"]))
        : (this["nickTXT"]["setFontSize"](this["getNameSize"]()), this["nickTXT"]["setText"](this["nickName"]));
  }),
  (_0x159836["prototype"]["customDraw"] = function (_0x2c5cba) {
    _0x587de3["save"]();
    var _0x5d07a9 = 0.3;
    if (this["fadeAway"]) {
      var _0xdb731c = this["webTransparency"] / 0x64;
      (_0x587de3["globalAlpha"] = _0xdb731c), (_0x5d07a9 = Math["min"](_0x5d07a9, _0xdb731c));
    } else _0x587de3["globalAlpha"] = 0.8;
    var _0x47557d = this["getSkinImageObj"]("gameobj/" + this["oType"] + "/" + this["oType"] + ".png");
    if (_0x47557d) {
      var _0x2a9eeb = this["rad"];
      _0x587de3["rotate"](this["angle"]), _0x587de3["drawImage"](_0x47557d, -_0x2a9eeb, -_0x2a9eeb, 0x2 * _0x2a9eeb, 0x2 * _0x2a9eeb);
    }
    _0x587de3["restore"](), this["drawNickName"](_0x5d07a9);
  }),
  (_0x159836["prototype"]["drawNickName"] = function (_0x364c28) {
    if (!this["spawnedFromDeadAni"]) return;
    this["nickName"] &&
      this["nickTXT"] &&
      !_0x417709 &&
      (_0x587de3["save"](),
      (_0x587de3["globalAlpha"] = _0x364c28),
      (this["nickTXT"]["x"] = 0x0),
      (this["nickTXT"]["y"] = this["rad"]),
      this["nickTXT"]["draw"](),
      _0x587de3["restore"]());
  }),
  (_0x159836["prototype"]["spawnedFromDeadAni"] = ![]),
  (_0x159836["prototype"]["readCustomData_onNewlyVisible"] = function (_0x54f2a8) {
    (this["spawnedFromDeadAni"] = _0x54f2a8["readUInt8"]() == 0x1),
      (this["animalType"] = _0x54f2a8["readUInt16"]()),
      (this["animalHomeBiome"] = _0x54f2a8["readUInt8"]());
    var _0x1cd39d = _0x54f2a8["readString"]();
    this["fadeAway"] = _0x54f2a8["readUInt8"]() == 0x1;
    if (this["fadeAway"]) this["webTransparency"] = _0x54f2a8["readUInt16"]();
    if (this["spawnedFromDeadAni"]) this["setNick"](_0x1cd39d ? _0x1cd39d : "mope.io");
  }),
  (_0x159836["prototype"]["readUpdatedProperty"] = function (_0x5eb461, _0x58c566) {
    if (_0x5eb461 == _0x1726e0) this["flag_flying"] = _0x58c566["readUInt8"]() == 0x1;
    else _0x5eb461 == _0x462054 && (this["webTransparency"] = _0x58c566["readUInt16"]());
  });

function _0x159836() {
  _0x159836["superClass"]["call"](this, _0x37b373), (this["shrinkedRad"] = 0x0);
}
(window["AnimalCarcass"] = _0x159836), _0x17bf26["setCustomClassForGameObjType"](_0x159836, _0x37b373);
var _0x48c344 = _0x307a43;
(_0x6a74f4["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x6a74f4["prototype"]["constructor"] = _0x6a74f4),
  (_0x6a74f4["superClass"] = _0x48c344),
  (_0x6a74f4["prototype"]["chilliType"] = 0x0),
  (_0x6a74f4["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"];
  }),
  (_0x6a74f4["prototype"]["setSkinPath"] = function () {
    var _0x55172a = this["isEdibleOutlined"]() ? "e" : this["oType"];
    (_0x55172a += "_" + this["chilliType"]), (this["objSkinPath"] = "gameobj/" + this["oType"] + "/" + _0x55172a + ".png");
  }),
  (_0x6a74f4["prototype"]["customDraw"] = function (_0x1b2a4d) {
    _0x587de3["save"]();
    var _0x3454d5 = this["getSkinImageObj"](this["objSkinPath"]);
    if (_0x3454d5) {
      var _0x5ce316 = this["rad"];
      if (this["specType2"] == 0x1) {
        if (this["angle"] == 0x0) this["angle"] = this["rPer"] * Math["PI"] * 0x2;
        (this["angle"] += 0.4), _0x587de3["rotate"](this["angle"]);
      } else {
        if (this["specType2"] == 0x2) _0x587de3["rotate"](this["angle"]);
        else _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2);
      }
      _0x587de3["drawImage"](_0x3454d5, -_0x5ce316, -_0x5ce316, 0x2 * _0x5ce316, 0x2 * _0x5ce316);
    }
    _0x587de3["restore"]();
  }),
  (_0x6a74f4["prototype"]["readCustomData_onNewlyVisible"] = function (_0x246b36) {
    this["chilliType"] = _0x246b36["readUInt8"]();
  });

function _0x6a74f4() {
  _0x6a74f4["superClass"]["call"](this, _0x5de1eb), (this["doesDrawEffectScale"] = ![]);
}
(window["Chilli"] = _0x6a74f4), _0x17bf26["setCustomClassForGameObjType"](_0x6a74f4, _0x5de1eb);
var _0x18d9b8 = _0x18d9b8,
  _0x48c344 = _0x3799d1;
(_0x18d9b8["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x18d9b8["prototype"]["constructor"] = _0x18d9b8),
  (_0x18d9b8["superClass"] = _0x48c344),
  (_0x18d9b8["prototype"]["objSkinSpotsCanvas"] = null),
  (_0x18d9b8["prototype"]["animalInfo"] = function () {
    var _0x110f32 = {};
    this["animalName"] = "";
    switch (this["animalSpecies"]) {
      case 0x0:
        (_0x110f32["aniName"] = "Cheetah"),
          (_0x110f32["upgradeText"] = "UPGRADED to Cheetah!\x0a Press W to get a speed boost!"),
          (this["animalName"] = "cheetah");
        break;
      case 0x1:
        (_0x110f32["aniName"] = "Jaguar"),
          (_0x110f32["upgradeText"] = "UPGRADED to JAGUAR!\x0a Press W to get a speed boost!\x0a(Jaguars can climb hills!)"),
          (this["animalName"] = "jaguar");
        break;
      case 0x2:
        (_0x110f32["aniName"] = "Leopard"),
          (_0x110f32["upgradeText"] = "UPGRADED to LEOPARD!\x0a Press W to get a speed boost!\x0a(Leopards can dive longer)"),
          (this["animalName"] = "leopard");
        break;
      case 0x3:
        (_0x110f32["aniName"] = "Black Panther"),
          (_0x110f32["upgradeText"] = "UPGRADED to Black Panther!\x0a Press W to get a speed boost!\x0a(Black Panthers are fast on mud)"),
          (this["animalName"] = "blackpanther");
        break;
      case 0x64:
        (_0x110f32["aniName"] = "Big Cookie"),
          (_0x110f32["upgradeText"] = "UPGRADED to Big Cookie!\x0a Press W to get a speed boost!\x0a(Big Cookies are fast on mud)"),
          (this["animalName"] = "100/bigcat");
        break;
      case 0xca:
        (_0x110f32["aniName"] = "C.M.Y.K NeoN Cheetak"),
          (_0x110f32["upgradeText"] = "UPGRADED to C.M.Y.K NeoN Cheetak!\x0a Press W to get a speed boost!\x0a(Genie Cheetah are fast on mud)"),
          (this["animalName"] = "cheetah");
        break;
      case 0xcc:
        (_0x110f32["aniName"] = "Genie Cheetah"),
          (_0x110f32["upgradeText"] = "UPGRADED to Genie Cheetah!\x0a Press W to get a speed boost!\x0a(Genie Cheetah are fast on mud)"),
          (this["animalName"] = "genie_cheetah");
        break;
    }
    return (_0x110f32["aniCol"] = "#CAC05B"), (_0x110f32["skinName"] = this["getSkinName"]()), _0x110f32;
  }),
  (_0x18d9b8["prototype"]["getSkinName"] = function () {
    return this["getSpeciesPath"]() + "/" + this["animalName"];
  }),
  (_0x18d9b8["prototype"]["getSpeciesPath"] = function () {
    return "land/bigcat/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x18d9b8["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  });

function _0x18d9b8() {
  _0x18d9b8["superClass"]["call"](this, _0x3fb3b2);
}
(window["BigCat"] = _0x18d9b8), _0x17bf26["setCustomClassForGameObjType"](_0x18d9b8, _0x3fb3b2, _0x5a5817);

function _0x570133(_0x58f989, _0x5621c7, _0x151969, _0x22d5c2, _0x19a09a, _0x42f9f5, _0x2292d0) {
  var _0x2f93d5 = _0x385a2a;
  (this["x"] = _0x58f989),
    (this["y"] = _0x5621c7),
    (this["w"] = _0x151969),
    (this["h"] = _0x22d5c2),
    (this["label"] = _0x19a09a),
    (this["font"] = Number(_0x42f9f5) ? Number(_0x42f9f5) : 0x1e),
    (this["isVisible"] = !![]),
    (this["hoverColor"] = "#16932A"),
    (this["defaultColor"] = "#0aa633"),
    (this["alpha"] = 0x1),
    (this["txtAlpha"] = 0x1),
    (this["ctx"] = _0x2292d0 === undefined || _0x2292d0 == null ? _0x587de3 : _0x2292d0),
    (this["labelColor"] = "white"),
    (this["buttonTXT"] = new _0x413af8(0xc, this["labelColor"])),
    (this["buttonTXT"]["renderScale"] = 1.5),
    (this["drawButtonRect"] = !![]),
    (this["isHighLighted"] = ![]),
    (this["showLabeleOnHover"] = ![]),
    (this["textShadow"] = ![]),
    (this["buttonScaleF"] = 0x1),
    (this["strokeWidth"] = 0x4 * _0x2f93d5),
    (this["setLabelColor"] = function (_0x590288) {
      (this["buttonTXT"] = new _0x413af8(0xc, _0x590288)), (this["buttonTXT"]["renderScale"] = 1.5);
    }),
    (this["testPosHitsButton"] = function (_0x5da1a5, _0x123b12) {
      var _0x274b91 = this["x"],
        _0x2eee04 = this["x"] + this["w"],
        _0x419691 = this["y"],
        _0x20c61c = this["y"] + this["h"];
      if (_0x5da1a5 < _0x274b91 || _0x5da1a5 > _0x2eee04) return ![];
      if (_0x123b12 < _0x419691 || _0x123b12 > _0x20c61c) return ![];
      else return !![];
    }),
    (this["setPosAndSize"] = function (_0x45a3b7, _0x24ed60, _0x3d3b8c, _0x333c94, _0x5d3009, _0x9f219) {
      (this["w"] = _0x3d3b8c),
        (this["h"] = _0x333c94),
        (this["x"] = _0x45a3b7 + _0x3d3b8c * (0.5 - _0x5d3009)),
        (this["y"] = _0x24ed60 + _0x333c94 * (0.5 - _0x9f219));
    }),
    (this["draw"] = function () {
      if (!this["isVisible"]) return;
      this["update"](),
        this["ctx"]["save"](),
        this["ctx"]["translate"](this["x"], this["y"]),
        this["ctx"]["scale"](this["buttonScaleF"], this["buttonScaleF"]);
      var _0x2ca1bb = this["alpha"];
      this["drawButtonRect"] &&
        ((this["ctx"]["fillStyle"] = this["defaultColor"]),
        (this["ctx"]["strokeStyle"] = "#116c17"),
        (this["ctx"]["lineWidth"] = this["strokeWidth"]),
        this["roundRect"](0x0, 0x0, this["w"], this["h"], 0x5, !![], !![]),
        this["isHighLighted"] &&
          ((this["ctx"]["fillStyle"] = this["hoverColor"]), this["roundRect"](0x0, 0x0, this["w"], this["h"], 0x5, !![], ![])));
      if (!this["showLabeleOnHover"]) (this["ctx"]["globalAlpha"] = this["txtAlpha"]), this["drawText"](this["w"] / 0x2, this["h"] / 0x2);
      else this["isHighLighted"] && this["showLabeleOnHover"] && this["drawTextOnHowever"]();
      this["ctx"]["restore"](), this["onAfterDraw"]();
    }),
    (this["drawTextOnHowever"] = function () {
      this["drawText"](this["w"] / 0x2, this["h"] / 0x2);
    }),
    (this["beforeDrawText"] = function () {}),
    (this["drawText"] = function (_0x483a6b, _0x42eae9) {
      this["buttonTXT"]["setText"](this["label"]),
        (this["buttonTXT"]["strokeW"] = this["isHighLighted"] && !this["textShadow"] ? 0x0 : 0x1),
        this["buttonTXT"]["setFontSize"](this["font"]),
        this["buttonTXT"]["setColor"](this["labelColor"]),
        (this["buttonTXT"]["x"] = _0x483a6b),
        (this["buttonTXT"]["y"] = _0x42eae9),
        this["beforeDrawText"](),
        this["buttonTXT"]["draw"]();
    }),
    (this["roundRect"] = function (_0x550f8c, _0x17e06a, _0x3d650f, _0x3135f4, _0x1bc37b, _0x5097a8, _0x379588) {
      typeof _0x379588 == "undefined" && (_0x379588 = !![]);
      typeof _0x1bc37b === "undefined" && (_0x1bc37b = 0x5);
      if (typeof _0x1bc37b === "number")
        _0x1bc37b = {
          tl: _0x1bc37b,
          tr: _0x1bc37b,
          br: _0x1bc37b,
          bl: _0x1bc37b,
        };
      else {
        var _0x1c5084 = {
          tl: 0x0,
          tr: 0x0,
          br: 0x0,
          bl: 0x0,
        };
        for (var _0x263e24 in _0x1c5084) {
          _0x1bc37b[_0x263e24] = _0x1bc37b[_0x263e24] || _0x1c5084[_0x263e24];
        }
      }
      (this["ctx"]["globalAlpha"] = this["alpha"]),
        (this["ctx"]["lineWidth"] = 0x2),
        this["ctx"]["beginPath"](),
        this["ctx"]["moveTo"](_0x550f8c + _0x1bc37b["tl"], _0x17e06a),
        this["ctx"]["lineTo"](_0x550f8c + _0x3d650f - _0x1bc37b["tr"], _0x17e06a),
        this["ctx"]["quadraticCurveTo"](_0x550f8c + _0x3d650f, _0x17e06a, _0x550f8c + _0x3d650f, _0x17e06a + _0x1bc37b["tr"]),
        this["ctx"]["lineTo"](_0x550f8c + _0x3d650f, _0x17e06a + _0x3135f4 - _0x1bc37b["br"]),
        this["ctx"]["quadraticCurveTo"](_0x550f8c + _0x3d650f, _0x17e06a + _0x3135f4, _0x550f8c + _0x3d650f - _0x1bc37b["br"], _0x17e06a + _0x3135f4),
        this["ctx"]["lineTo"](_0x550f8c + _0x1bc37b["bl"], _0x17e06a + _0x3135f4),
        this["ctx"]["quadraticCurveTo"](_0x550f8c, _0x17e06a + _0x3135f4, _0x550f8c, _0x17e06a + _0x3135f4 - _0x1bc37b["bl"]),
        this["ctx"]["lineTo"](_0x550f8c, _0x17e06a + _0x1bc37b["tl"]),
        this["ctx"]["quadraticCurveTo"](_0x550f8c, _0x17e06a, _0x550f8c + _0x1bc37b["tl"], _0x17e06a),
        this["ctx"]["closePath"]();
      if (_0x5097a8) this["ctx"]["fill"]();
      if (_0x379588) this["ctx"]["stroke"]();
    }),
    (this["onClick"] = function () {}),
    (this["onMouseMove"] = function () {}),
    (this["onMouseIn"] = function () {}),
    (this["onMouseOut"] = function () {}),
    (this["isMouseIn"] = ![]),
    (this["setMouseRawPos"] = function (_0x198f97, _0x236d3b) {
      (this["rawX"] = _0x198f97),
        (this["rawY"] = _0x236d3b),
        this["testPosHitsButton"](this["rawX"], this["rawY"])
          ? !this["isMouseIn"] && ((this["isMouseIn"] = !![]), this["onMouseIn"]())
          : this["isMouseIn"] && ((this["isMouseIn"] = ![]), this["onMouseOut"]());
    }),
    (this["update"] = function () {}),
    (this["onInterfaceReset"] = function () {
      _0x5583b4(this["label"] + ".onInterfaceReset");
    }),
    (this["onAfterDraw"] = function () {});
}
(window["InterfaceButton"] = _0x570133),
  (_0x353ac5["prototype"] = {
    mode: 0x0,
    state: 0x0,
    myPlayer: null,
  }),
  (_0x353ac5["prototype"]["chatAllowed"] = !![]),
  (_0x353ac5["prototype"]["isHalloween"] = ![]),
  (_0x353ac5["prototype"]["stamp"] = 0x0),
  (_0x353ac5["prototype"]["interface"] = function () {}),
  (_0x353ac5["prototype"]["drawMap"] = function () {}),
  (_0x353ac5["prototype"]["interfaceReset"] = function () {}),
  (_0x353ac5["prototype"]["main"] = function (_0x342e5d) {}),
  (_0x353ac5["prototype"]["onInit"] = function (_0x5687e7) {}),
  (_0x353ac5["prototype"]["drawCustomObjs"] = function (_0x3884fe) {}),
  (_0x353ac5["prototype"]["worldUpdate"] = function (_0x147ca8) {}),
  (_0x353ac5["prototype"]["setPlayer"] = function () {
    this["myPlayer"] = _0x2fa637[_0x204989];
  });

function _0x353ac5() {}
window["GameMode"] = _0x353ac5;
var _0x48c344 = _0x353ac5;
(_0x2d38ce["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x2d38ce["prototype"]["constructor"] = _0x2d38ce),
  (_0x2d38ce["superClass"] = _0x48c344),
  (_0x2d38ce["prototype"]["safeArea"] = null);

function _0x2d38ce(_0x1f4fed) {
  (this["mode"] = _0x1f4fed), (this["stamp"] = +new Date()), (this["chatAllowed"] = !![]), this["createInterfaceButtons"]();
}
(_0x2d38ce["prototype"]["wastedPopups"] = []),
  (_0x2d38ce["prototype"]["playerDisplayNum"] = 0x0),
  (_0x2d38ce["prototype"]["setServerPlayerCount"] = function () {
    _0x1ad1ae["setText"](_0x4acd30(_0x4d2768) + " online"), (this["playerDisplayNum"] = this["playerDisplayNum"] == 0x0 ? 0x1 : 0x0);
  }),
  (_0x2d38ce["prototype"]["interface"] = function () {
    if (this["state"] == -0x1 || this["mode"] != _0x3a1189) return;
    if (_0x37000d)
      for (var _0x4baa81 = this["wastedPopups"]["length"] - 0x1; _0x4baa81 >= 0x0; _0x4baa81--) {
        var _0x291576 = this["wastedPopups"][_0x4baa81];
        _0x291576["draw"]();
        if (_0x291576["timedOut"]) this["wastedPopups"]["splice"](_0x4baa81, 0x1);
      }
    if (this["endScreenCanvas"] != null) {
      this["endScreenCanvas"]["width"] &&
        _0x587de3["drawImage"](
          this["endScreenCanvas"],
          _0x645c5 / 0x2 - this["endScreenCanvas"]["width"] / 0x2,
          0xf * _0x4454f9,
          this["endScreenCanvas"]["width"],
          this["endScreenCanvas"]["height"]
        );
      if (!_0x37000d || isGhost) _0x98c3df(!![]);
    }
    this["drawInterfaceButtons"]();
  }),
  (_0x2d38ce["prototype"]["interfaceReset"] = function () {
    (this["endScreenCanvas"] = null),
      (this["dangerCircleMiniMapCanvas"] = null),
      (this["wastedPopups"] = []),
      (this["lastWastedPopupT"] = 0x0),
      (this["playercount"] = 0x0),
      (this["safeArea"] = null);
    if (this["interfaceButtons"])
      for (var _0x4c419e = 0x0; _0x4c419e < this["interfaceButtons"]["length"]; _0x4c419e++) {
        var _0x52c52b = this["interfaceButtons"][_0x4c419e];
        _0x52c52b["onInterfaceReset"]();
      }
    this["interfaceButtons"] = [];
  }),
  (_0x2d38ce["prototype"]["onInit"] = function () {}),
  (_0x2d38ce["prototype"]["playercount"] = 0x0),
  (_0x2d38ce["prototype"]["setPlayerCount"] = function (_0xf6eff3) {
    this["playercount"] = _0xf6eff3;
  }),
  (_0x2d38ce["prototype"]["showPlayerCount"] = function () {
    _0x587de3["save"]();
    var _0x3afde7 = _0x645c5 / 0x2,
      _0x518869 = 0x32 * _0x385a2a,
      _0x5a7999 = 0x12c * _0x385a2a;
    (_0x587de3["globalAlpha"] = 0.35), (_0x587de3["fillStyle"] = "black");
    var _0x454a77 = 0x1e * _0x385a2a;
    _0x587de3["fillRect"](_0x3afde7 - _0x5a7999 / 0x2, _0x454a77, _0x5a7999, _0x518869),
      (_0x587de3["globalAlpha"] = 0x1),
      (_0x587de3["fillStyle"] = "white"),
      (_0x587de3["font"] = 0x1e * _0x385a2a + "px Arial"),
      (_0x587de3["lineWidth"] = 0x1),
      (_0x587de3["textAlign"] = "center"),
      (_0x587de3["textBaseline"] = "middle"),
      (_0x587de3["shadowOffsetX"] = 0x1),
      (_0x587de3["shadowOffsetY"] = 0x1),
      (_0x587de3["shadowColor"] = "black"),
      (_0x454a77 += 0x19 * _0x385a2a);
    var _0xd02c94 = " player";
    if (this["playercount"] > 0x1) _0xd02c94 += "s";
    if (this["state"] == battleRoyal_inProgress) _0xd02c94 += " alive!";
    else {
      if (this["state"] == _0x3731c9 || this["state"] == battleRoyal_ready) _0xd02c94 += " joined";
    }
    _0x587de3["fillText"](this["playercount"] + _0xd02c94, _0x3afde7, _0x454a77), _0x587de3["restore"]();
  }),
  (_0x2d38ce["prototype"]["lbCanvas"] = null),
  (_0x2d38ce["prototype"]["leaderboard"] = function (_0x5b210c) {
    if (this["lbCanvas"] == null) this["lbCanvas"] = document["createElement"]("canvas");
    if (_0x5b210c) {
      var _0x4a9a1d = this["lbCanvas"]["getContext"]("2d"),
        _0x1b0ae9 = 0x37,
        _0x34f383 = 0x16;
      (_0x1b0ae9 = _0x1b0ae9 + _0x34f383 * _0x5b210c["length"]),
        (this["lbCanvas"]["width"] = 0x10e),
        (this["lbCanvas"]["height"] = _0x1b0ae9),
        (_0x4a9a1d["globalAlpha"] = 0.2),
        (_0x4a9a1d["fillStyle"] = "#000000"),
        _0x4a9a1d["fillRect"](0x0, 0x0, this["lbCanvas"]["width"], this["lbCanvas"]["height"]),
        (_0x4a9a1d["globalAlpha"] = 0x1),
        (_0x4a9a1d["fillStyle"] = "#FFFFFF");
      var _0x550777 = _0x3ab380["name"];
      _0x4a9a1d["font"] = "24px Arial";
      !(_0x57ae6d == 0x2) && ((_0x4a9a1d["shadowOffsetX"] = 0x1), (_0x4a9a1d["shadowOffsetY"] = 0x1));
      (_0x4a9a1d["shadowColor"] = "black"),
        _0x4a9a1d["fillText"](_0x550777, this["lbCanvas"]["width"] / 0x2 - _0x4a9a1d["measureText"](_0x550777)["width"] / 0x2, 0x28);
      var _0x2372e5;
      _0x4a9a1d["textAlign"] = "left";
      for (_0x4a9a1d["font"] = "17px Arial", _0x2372e5 = 0x0; _0x2372e5 < _0x5b210c["length"]; ++_0x2372e5) {
        (_0x550777 = _0x417709 ? "" : _0x5b210c[_0x2372e5]["name"] || "mope.io"),
          (_0x550777 += " (" + _0x105fd1(_0x5b210c[_0x2372e5]["xp"]) + ")"),
          (_0x4a9a1d["fillStyle"] = "#FFFFFF"),
          _0x4a9a1d["fillText"](_0x550777, 0xf, 0x41 + _0x34f383 * _0x2372e5);
      }
    }
  }),
  (_0x2d38ce["prototype"]["drawLeaderboard"] = function () {
    if (_0x37000d) {
      if (!_0x226297)
        _0x1878d2 &&
          _0x1878d2["width"] &&
          _0x587de3["drawImage"](_0x1878d2, 0xa * _0x4454f9, 0xa * _0x4454f9, _0x1878d2["width"] * _0x385a2a, _0x1878d2["height"] * _0x385a2a);
    }
  }),
  (_0x2d38ce["prototype"]["btnPlayAgain"] = null),
  (_0x2d38ce["prototype"]["showStats"] = !![]),
  (_0x2d38ce["prototype"]["interfaceButtons"] = []),
  (_0x2d38ce["prototype"]["createInterfaceButtons"] = function () {
    this["interfaceButtons"] = [];
  }),
  (_0x2d38ce["prototype"]["drawInterfaceButtons"] = function () {
    if (this["interfaceButtons"])
      for (var _0x3deac1 = 0x0; _0x3deac1 < this["interfaceButtons"]["length"]; _0x3deac1++) {
        var _0x537d20 = this["interfaceButtons"][_0x3deac1];
        _0x537d20["isVisible"] && _0x537d20["draw"]();
      }
  }),
  (_0x2d38ce["prototype"]["onResize"] = function () {
    this["drawInterfaceButtons"]();
  }),
  (_0x2d38ce["prototype"]["readPlayerStats"] = function (_0x462913) {
    var _0x561b30 = [];
    return (
      (_0x561b30["rank"] = _0x462913["readUInt16"]()),
      (_0x561b30["timeAlive"] = _0x462913["readUInt16"]()),
      (_0x561b30["totalKills"] = _0x462913["readUInt16"]()),
      (_0x561b30["topRank"] = _0x462913["readUInt16"]()),
      (_0x561b30["maxXP"] = _0x462913["readUInt32"]()),
      (_0x561b30["killedBy"] = _0x462913["readString"]()),
      _0x561b30
    );
  }),
  (_0x2d38ce["prototype"]["playerInfo"] = function (_0x27a1ec) {
    if (isGhost && !_0x588326) {
      var _0x4f5193 = this["readPlayerStats"](_0x27a1ec);
      this["buildEndScreenHTML"](_0x4f5193);
    } else !isGhost && (this["endScreenCanvas"] = null);
  }),
  (_0x2d38ce["prototype"]["playerWorldUpdate"] = function (_0x1f6a60) {}),
  (_0x2d38ce["prototype"]["worldUpdate"] = function (_0x2133bf) {}),
  (_0x2d38ce["prototype"]["drawMap"] = function () {
    if (_0x37000d) {
      if (_0x34fedb) return;
      if (_0x1eb893) _0x1eb893["drawMap"]();
      this["drawLeaderboard"]();
    }
  }),
  (_0x2d38ce["prototype"]["pieChartCanvas"] = null),
  (_0x2d38ce["prototype"]["teamColors"] = {
    0x0: "white",
    0x1: "#B6CF40",
  }),
  (_0x2d38ce["prototype"]["endScreenDisplayed"] = ![]),
  (_0x2d38ce["prototype"]["buildEndScreenHTML"] = function (_0x2a8101) {
    if (this["endScreenDisplayed"]) return;
    this["endScreenDisplayed"] = !![];
    var _0xfd8fe5 = "";
    (_0xfd8fe5 += "<div class='msg'>YOU WERE #" + _0x2a8101["rank"] + "</div>"),
      (_0xfd8fe5 += "<div class='row'>"),
      (_0xfd8fe5 += "<div class='label'>Killed by:</div>"),
      (_0xfd8fe5 += "<div class='value2'>" + _0x2a8101["killedBy"] + "</div>"),
      (_0xfd8fe5 += "</div>"),
      (_0xfd8fe5 += "<div class='row'>"),
      (_0xfd8fe5 += "<div class='col1'>"),
      (_0xfd8fe5 += "<div class='label'>Time alive:</div>"),
      (_0xfd8fe5 += "<div class='value'>" + _0x167d19(_0x2a8101["timeAlive"]) + "</div>"),
      (_0xfd8fe5 += "</div>"),
      (_0xfd8fe5 += "<div class='col2'>"),
      (_0xfd8fe5 += "<div class='label'>Total kills:</div>"),
      (_0xfd8fe5 += "<div class='value'>" + _0x2a8101["totalKills"] + "</div>"),
      (_0xfd8fe5 += "</div>"),
      (_0xfd8fe5 += "</div>"),
      (_0xfd8fe5 += "<div class='row'>"),
      (_0xfd8fe5 += "<div class='col1'>"),
      (_0xfd8fe5 += "<div class='label'>Top rank:</div>"),
      (_0xfd8fe5 += "<div class='value'>" + _0x2a8101["topRank"] + "</div>"),
      (_0xfd8fe5 += "</div>"),
      (_0xfd8fe5 += "<div class='col2'>"),
      (_0xfd8fe5 += "<div class='label'>Max xp:</div>"),
      (_0xfd8fe5 += "<div class='value'>" + _0x105fd1(_0x2a8101["maxXP"]) + "</div>"),
      (_0xfd8fe5 += "</div>"),
      (_0xfd8fe5 += "</div>"),
      (_0xfd8fe5 += "<div style='clear:both;'></div>"),
      (_0xfd8fe5 += "<div class='btnDiv'>"),
      (_0xfd8fe5 += "<button id='btnMopeOptions' class='btn'>      CONTINUE      </button>"),
      (_0xfd8fe5 += "</div>"),
      (_0xfd8fe5 += "<div style='clear:both;'></div>");
    var _0x15849c = document["getElementById"]("endScreen");
    _0x15849c && ((_0x15849c["innerHTML"] = _0xfd8fe5), (_0x15849c["style"]["display"] = "block")), (!_0x37000d || isGhost) && _0x2365d4();
  }),
  (_0x2d38ce["prototype"]["endScreenCanvas"] = null),
  (_0x2d38ce["prototype"]["buildEndScreen"] = function (_0x5be33a, _0x100df0) {
    if (this["endScreenCanvas"] == null) this["endScreenCanvas"] = document["createElement"]("canvas");
    if (this["endScreenCanvas"] == null) return;
    var _0x4bd76c = this["endScreenCanvas"]["getContext"]("2d"),
      _0x51d608 = 0x37,
      _0x11aef6 = 0x28,
      _0x53548e = 0x5,
      _0x406ec3 = 0xf0,
      _0x5ee4ae = 0x1a4;
    (_0x51d608 = _0x406ec3 + _0x53548e * 0x2),
      (this["endScreenCanvas"]["width"] = _0x5ee4ae + _0x53548e * 0x2),
      (this["endScreenCanvas"]["height"] = _0x51d608),
      (_0x4bd76c["globalAlpha"] = 0.2),
      (_0x4bd76c["fillStyle"] = "#000000"),
      _0x4bd76c["fillRect"](0x0, 0x0, this["endScreenCanvas"]["width"], this["endScreenCanvas"]["height"]),
      (_0x4bd76c["fillStyle"] = "#000000"),
      _0x4bd76c["fillRect"](
        _0x53548e,
        _0x53548e,
        this["endScreenCanvas"]["width"] - _0x53548e * 0x2,
        this["endScreenCanvas"]["height"] - _0x53548e * 0x2
      );
    var _0x4327c3 = _0x53548e;
    (_0x4bd76c["globalAlpha"] = 0x1), (_0x4bd76c["fillStyle"] = "#FFFFFF"), (_0x4bd76c["font"] = "30px Arial"), (_0x4327c3 += 0x37);
    var _0x1dbb1d = "Final Stats";
    (_0x4bd76c["font"] = "30px Arial"),
      _0x4bd76c["fillText"](_0x1dbb1d, this["endScreenCanvas"]["width"] / 0x2 - _0x4bd76c["measureText"](_0x1dbb1d)["width"] / 0x2, _0x4327c3),
      (_0x4bd76c["font"] = "20px Arial"),
      (_0x4327c3 += 0x2d),
      (_0x1dbb1d = "You were #" + _0x100df0["rank"]),
      _0x4bd76c["fillText"](_0x1dbb1d, this["endScreenCanvas"]["width"] / 0x2 - _0x4bd76c["measureText"](_0x1dbb1d)["width"] / 0x2, _0x4327c3),
      (_0x4327c3 += 0x28);
    var _0x25b8da = _0x167d19(_0x100df0["timeAlive"]),
      _0x3802ab = _0x53548e + 0xf;
    _0x1f442f(_0x4bd76c, "Killed by", _0x100df0["killedBy"], _0x3802ab, _0x4327c3),
      (_0x4327c3 += 0x28),
      _0x1f442f(_0x4bd76c, "Time Alive", _0x167d19(_0x100df0["timeAlive"]), _0x3802ab, _0x4327c3),
      (_0x3802ab += 0xd2),
      _0x1f442f(_0x4bd76c, "Total Kills", _0x100df0["totalKills"], _0x3802ab, _0x4327c3),
      (_0x4327c3 += 0x28),
      (_0x3802ab = _0x53548e + 0xf),
      _0x1f442f(_0x4bd76c, "Top rank", _0x100df0["topRank"], _0x3802ab, _0x4327c3),
      (_0x3802ab += 0xd2),
      _0x1f442f(_0x4bd76c, "Max XP", _0x105fd1(_0x100df0["maxXP"]), _0x3802ab, _0x4327c3),
      (_0x4327c3 += 0x32);
  }),
  (_0x2d38ce["prototype"]["lastWastedPopupT"] = 0x0),
  (_0x2d38ce["prototype"]["onPlayerWasted"] = function (_0xd71e1c) {
    if ((_0x168a54 - this["lastWastedPopupT"]) / 0x3e8 > 0.7) {
      this["lastWastedPopupT"] = _0x168a54;
      var _0x31b033 = new _0x2154d2(_0xd71e1c + " wasted!", 0x28, "red", 0x5dc);
      this["wastedPopups"]["push"](_0x31b033);
    }
  }),
  (_0x2d38ce["prototype"]["lastWastedPopupT"] = 0x0),
  (_0x2d38ce["prototype"]["msgDisplayPlayersOnMiniMap"] = function (_0x5949d1) {
    _0x198146 = [];
    var _0x783538 = _0x5949d1["readUInt16"]();
    for (var _0x61075 = 0x0; _0x61075 < _0x783538; _0x61075++) {
      _0x198146["push"]({
        id: _0x5949d1["readUInt32"](),
        x: _0x5949d1["readUInt32"]() / 0x64,
        y: _0x5949d1["readUInt32"]() / 0x64,
        rad: 0x3,
      });
    }
  }),
  (window["FreeForAll"] = _0x2d38ce);
var _0x48c344 = _0x353ac5;
(_0x20bd24["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x20bd24["prototype"]["constructor"] = _0x20bd24),
  (_0x20bd24["superClass"] = _0x48c344),
  (_0x20bd24["prototype"]["safeArea"] = null);
var _0x36e8a1 = ![];

function _0x20bd24(_0x5e5f75) {
  (this["mode"] = _0x4406b7),
    (this["chatAllowed"] = !![]),
    this["createInterfaceButtons"](),
    console["log"]("@@@@@@@@@@@@@@@@@@@@@@@@@@ zombe mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"),
    console["log"]("@@@@@@@@@@@@@@@@@@@@@@@@@@ zombe mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"),
    console["log"]("@@@@@@@@@@@@@@@@@@@@@@@@@@ zombe mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"),
    console["log"]("@@@@@@@@@@@@@@@@@@@@@@@@@@ zombe mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"),
    console["log"]("@@@@@@@@@@@@@@@@@@@@@@@@@@ zombe mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
}
(_0x20bd24["prototype"]["wastedPopups"] = []),
  (_0x20bd24["prototype"]["playerDisplayNum"] = 0x0),
  (_0x20bd24["prototype"]["setServerPlayerCount"] = function () {
    if (this["playerDisplayNum"] == 0x0) _0x1ad1ae["setText"](_0x4acd30(_0x4d2768) + " mopers");
    else _0x1ad1ae["setText"](_0x4acd30(_0x5919a3) + " on server");
    this["playerDisplayNum"] = this["playerDisplayNum"] == 0x0 ? 0x1 : 0x0;
  }),
  (_0x20bd24["prototype"]["interface"] = function () {
    if (this["state"] == -0x1 || this["mode"] != _0x3a1189) return;
    if (_0x37000d)
      for (var _0x80c6a3 = this["wastedPopups"]["length"] - 0x1; _0x80c6a3 >= 0x0; _0x80c6a3--) {
        var _0x440b70 = this["wastedPopups"][_0x80c6a3];
        _0x440b70["draw"]();
        if (_0x440b70["timedOut"]) this["wastedPopups"]["splice"](_0x80c6a3, 0x1);
      }
    if (this["endScreenCanvas"] != null) {
      this["endScreenCanvas"]["width"] &&
        _0x587de3["drawImage"](
          this["endScreenCanvas"],
          _0x645c5 / 0x2 - this["endScreenCanvas"]["width"] / 0x2,
          0xf * _0x4454f9,
          this["endScreenCanvas"]["width"],
          this["endScreenCanvas"]["height"]
        );
      if (!_0x37000d || isGhost) _0x98c3df(!![]);
    }
    this["drawInterfaceButtons"]();
  }),
  (_0x20bd24["prototype"]["interfaceReset"] = function () {
    (this["endScreenCanvas"] = null),
      (this["dangerCircleMiniMapCanvas"] = null),
      (this["wastedPopups"] = []),
      (this["lastWastedPopupT"] = 0x0),
      (this["playercount"] = 0x0),
      (this["safeArea"] = null),
      (_0x4b6a6a = null),
      (_0x1172e2 = null);
    if (this["interfaceButtons"])
      for (var _0x3bb05e = 0x0; _0x3bb05e < this["interfaceButtons"]["length"]; _0x3bb05e++) {
        var _0x2c772a = this["interfaceButtons"][_0x3bb05e];
        _0x2c772a["onInterfaceReset"]();
      }
    this["interfaceButtons"] = [];
  }),
  (_0x20bd24["prototype"]["onInit"] = function () {}),
  (_0x20bd24["prototype"]["playercount"] = 0x0),
  (_0x20bd24["prototype"]["setPlayerCount"] = function (_0x5629a7) {
    this["playercount"] = _0x5629a7;
  }),
  (_0x20bd24["prototype"]["showPlayerCount"] = function () {
    _0x587de3["save"]();
    var _0x192a72 = _0x645c5 / 0x2,
      _0x5e6b8a = 0x32 * _0x385a2a,
      _0x1320e2 = 0x12c * _0x385a2a;
    (_0x587de3["globalAlpha"] = 0.35), (_0x587de3["fillStyle"] = "black");
    var _0x2c16cf = 0x1e * _0x385a2a;
    _0x587de3["fillRect"](_0x192a72 - _0x1320e2 / 0x2, _0x2c16cf, _0x1320e2, _0x5e6b8a),
      (_0x587de3["globalAlpha"] = 0x1),
      (_0x587de3["fillStyle"] = "white"),
      (_0x587de3["font"] = 0x1e * _0x385a2a + "px Arial"),
      (_0x587de3["lineWidth"] = 0x1),
      (_0x587de3["textAlign"] = "center"),
      (_0x587de3["textBaseline"] = "middle"),
      (_0x587de3["shadowOffsetX"] = 0x1),
      (_0x587de3["shadowOffsetY"] = 0x1),
      (_0x587de3["shadowColor"] = "black"),
      (_0x2c16cf += 0x19 * _0x385a2a);
    var _0x2de649 = " player";
    if (this["playercount"] > 0x1) _0x2de649 += "s";
    if (this["state"] == battleRoyal_inProgress) _0x2de649 += " alive!";
    else {
      if (this["state"] == _0x3731c9 || this["state"] == battleRoyal_ready) _0x2de649 += " joined";
    }
    _0x587de3["fillText"](this["playercount"] + _0x2de649, _0x192a72, _0x2c16cf), _0x587de3["restore"]();
  }),
  (_0x20bd24["prototype"]["lbCanvas"] = null),
  (_0x20bd24["prototype"]["leaderboard"] = function (_0x560ad7) {
    if (this["lbCanvas"] == null) this["lbCanvas"] = document["createElement"]("canvas");
    if (_0x560ad7) {
      var _0x42097d = this["lbCanvas"]["getContext"]("2d"),
        _0x41fa16 = 0x37,
        _0x812637 = 0x16;
      (_0x41fa16 = _0x41fa16 + _0x812637 * _0x560ad7["length"]),
        (this["lbCanvas"]["width"] = 0x10e),
        (this["lbCanvas"]["height"] = _0x41fa16),
        (_0x42097d["globalAlpha"] = 0.2),
        (_0x42097d["fillStyle"] = "#000000"),
        _0x42097d["fillRect"](0x0, 0x0, this["lbCanvas"]["width"], this["lbCanvas"]["height"]),
        (_0x42097d["globalAlpha"] = 0x1),
        (_0x42097d["fillStyle"] = "#FFFFFF");
      var _0xdf18 = _0x3ab380["name"];
      _0x42097d["font"] = "24px Arial";
      !options_lowGraphics && ((_0x42097d["shadowOffsetX"] = 0x1), (_0x42097d["shadowOffsetY"] = 0x1));
      (_0x42097d["shadowColor"] = "black"),
        _0x42097d["fillText"](_0xdf18, this["lbCanvas"]["width"] / 0x2 - _0x42097d["measureText"](_0xdf18)["width"] / 0x2, 0x28);
      var _0x3bbc88;
      _0x42097d["textAlign"] = "left";
      for (_0x42097d["font"] = "17px Arial", _0x3bbc88 = 0x0; _0x3bbc88 < _0x560ad7["length"]; ++_0x3bbc88) {
        (_0xdf18 = _0x417709 ? "" : _0x560ad7[_0x3bbc88]["name"] || "mope.io"),
          (_0xdf18 += " (" + _0x105fd1(_0x560ad7[_0x3bbc88]["xp"]) + ")"),
          (_0x42097d["fillStyle"] = "#FFFFFF"),
          _0x42097d["fillText"](_0xdf18, 0xf, 0x41 + _0x812637 * _0x3bbc88);
      }
    }
  }),
  (_0x20bd24["prototype"]["drawLeaderboard"] = function () {
    _0x37000d &&
      this["pieChartCanvas"] != null &&
      this["pieChartCanvas"]["width"] &&
      _0x587de3["drawImage"](
        this["pieChartCanvas"],
        0x14 * _0x4454f9,
        0x14 * _0x4454f9,
        this["pieChartCanvas"]["width"],
        this["pieChartCanvas"]["height"]
      ),
      _0x324122();
  }),
  (_0x20bd24["prototype"]["btnPlayAgain"] = null),
  (_0x20bd24["prototype"]["showStats"] = !![]),
  (_0x20bd24["prototype"]["interfaceButtons"] = []),
  (_0x20bd24["prototype"]["createInterfaceButtons"] = function () {
    this["interfaceButtons"] = [];
  }),
  (_0x20bd24["prototype"]["drawInterfaceButtons"] = function () {
    if (this["interfaceButtons"])
      for (var _0x553af8 = 0x0; _0x553af8 < this["interfaceButtons"]["length"]; _0x553af8++) {
        var _0x3c1e47 = this["interfaceButtons"][_0x553af8];
        _0x3c1e47["isVisible"] && _0x3c1e47["draw"]();
      }
  }),
  (_0x20bd24["prototype"]["onResize"] = function () {
    this["drawInterfaceButtons"]();
  }),
  (_0x20bd24["prototype"]["readPlayerStats"] = function (_0xb11792) {
    var _0x2f8a1b = [];
    return (
      (_0x2f8a1b["rank"] = _0xb11792["readUInt16"]()),
      (_0x2f8a1b["timeAlive"] = _0xb11792["readUInt16"]()),
      (_0x2f8a1b["totalKills"] = _0xb11792["readUInt16"]()),
      (_0x2f8a1b["topRank"] = _0xb11792["readUInt16"]()),
      (_0x2f8a1b["maxXP"] = _0xb11792["readUInt32"]()),
      (_0x2f8a1b["killedBy"] = _0xb11792["readString"]()),
      _0x2f8a1b
    );
  }),
  (_0x20bd24["prototype"]["playerInfo"] = function (_0x224d94) {
    if (isGhost && !_0x588326) {
      var _0x2596dc = this["readPlayerStats"](_0x224d94);
      this["buildEndScreenHTML"](_0x2596dc);
    } else !isGhost && (this["endScreenCanvas"] = null);
  }),
  (_0x20bd24["prototype"]["worldUpdate"] = function (_0x3bb9c5) {
    var _0x101fe5 = minimapW / 0xc8,
      _0x2d4952 = minimapH / 0xc8,
      _0x22f97f = _0x3bb9c5["readUInt32"]() * _0x101fe5,
      _0x4ef505 = _0x3bb9c5["readUInt32"]() * _0x2d4952,
      _0x8da757 = _0x3bb9c5["readUInt32"]() * 0x5;
    (_0x4b6a6a = {
      x: _0x22f97f,
      y: _0x4ef505,
      rad: _0x8da757 * (minimapW / _0x2c6299),
    }),
      (this["nonZombiePlayersCount"] = _0x3bb9c5["readUInt16"]()),
      (this["zombieCount"] = _0x3bb9c5["readUInt16"]());
    if (!_0x36e8a1) {
      this["zombiePlayers"] = [];
      for (i = 0x0; i < this["zombieCount"]; i++) {
        var _0x22f97f = _0x3bb9c5["readUInt16"]() / 0x4,
          _0x4ef505 = _0x3bb9c5["readUInt16"]() / 0x4,
          _0x3755ff = _0x3bb9c5["readUInt16"]() / 0xa;
        this["zombiePlayers"]["push"]({
          x: _0x22f97f,
          y: _0x4ef505,
          rad: _0x3755ff,
        });
      }
    }
  });
var _0x1172e2 = null;

function _0x324122() {
  if (!_0x1172e2) _0x1172e2 = document["createElement"]("canvas");
  (_0x1172e2["width"] = minimapW), (_0x1172e2["height"] = minimapH);
  var _0x469153 = _0x1172e2["getContext"]("2d");
  _0x469153["clearRect"](0x0, 0x0, _0x1172e2["width"], _0x1172e2["height"]), _0x469153["save"]();
  var _0x8afd99 = Math["max"](0x3, _0x4b6a6a["rad"]),
    _0x25809c = _0x4b6a6a["x"],
    _0x511272 = _0x4b6a6a["y"];
  _0x469153["translate"](_0x25809c, _0x511272),
    _0x469153["save"](),
    (_0x469153["globalAlpha"] = 0x1),
    _0x2a797f(_0x469153, 0x0, 0x0, _0x4b6a6a["rad"], 0x5, "white"),
    _0x469153["restore"]();
  var _0x29fdab = _0x385a2a * minimapW * 1.5,
    _0x27777b = _0x385a2a * minimapH * 1.5,
    _0x2a268b = 0x1,
    _0x377a6f = "red";
  _0x16c746(_0x469153, _0x4b6a6a["rad"], Math["PI"] * 0x0, _0x377a6f, _0x2a268b, _0x29fdab, _0x27777b),
    _0x16c746(_0x469153, _0x4b6a6a["rad"], Math["PI"] * 0.5, _0x377a6f, _0x2a268b, _0x29fdab, _0x27777b),
    _0x16c746(_0x469153, _0x4b6a6a["rad"], Math["PI"] * 0x1, _0x377a6f, _0x2a268b, _0x29fdab, _0x27777b),
    _0x16c746(_0x469153, _0x4b6a6a["rad"], Math["PI"] * 1.5, _0x377a6f, _0x2a268b, _0x29fdab, _0x27777b),
    _0x469153["restore"](),
    _0x1172e2 &&
      _0x587de3["drawImage"](
        _0x1172e2,
        _0x645c5 - (0xa * _0x4454f9 + _0x4f607c["width"] * _0x385a2a),
        0xa * _0x4454f9,
        minimapW * _0x385a2a,
        minimapH * _0x385a2a
      );
}
(_0x20bd24["prototype"]["drawZombiePlayers"] = function () {
  if (this["zombiePlayers"])
    for (t = 0x0; t < this["zombiePlayers"]["length"]; t++) {
      _0x35d11f(this["zombiePlayers"][t], "#adff32", 0x1);
    }
}),
  (_0x20bd24["prototype"]["drawMap"] = function () {
    this["buildPieChart"]();
    if (!_0x36e8a1) this["drawZombiePlayers"]();
  }),
  (_0x20bd24["prototype"]["pieChartCanvas"] = null),
  (_0x20bd24["prototype"]["teamColors"] = {
    0x0: "white",
    0x1: "#B6CF40",
  }),
  (_0x20bd24["prototype"]["buildPieChart"] = function () {
    if (this["pieChartCanvas"] == null) this["pieChartCanvas"] = document["createElement"]("canvas");
    if (this["pieChartCanvas"] == null) return;
    var _0xfe0717 = this["pieChartCanvas"]["getContext"]("2d"),
      _0x3bf878 = {
        0x0: this["nonZombiePlayersCount"],
        0x1: this["zombieCount"],
      };
    _0x3ddcad = _0x36e8a1 ? 0x1 : 0x0;
    var _0x182842 = new _0x1c48ab({
        pad: 0x1e,
        canvas: this["pieChartCanvas"],
        data: _0x3bf878,
        colors: this["teamColors"],
      }),
      _0x4d2667 = 0x37,
      _0x58a115 = 0x28,
      _0x3a54f7 = 0x5,
      _0x138bee = 0xc8,
      _0x12ab1b = 0xc8;
    (_0x4d2667 = _0x138bee + _0x3a54f7 * 0x2),
      (this["pieChartCanvas"]["width"] = _0x12ab1b + _0x3a54f7 * 0x2),
      (this["pieChartCanvas"]["height"] = _0x4d2667),
      _0x182842["draw"](),
      (_0xfe0717["globalAlpha"] = 0.2);
    var _0xc18092 = _0x3a54f7;
    (_0xfe0717["globalAlpha"] = 0.5), (_0xfe0717["fillStyle"] = "white"), (_0xfe0717["font"] = "20px Arial");
    var _0xc18092 = 0xc8;
    (str = _0x3ab380["name"]),
      _0xfe0717["fillText"](str, this["pieChartCanvas"]["width"] / 0x2 - _0xfe0717["measureText"](str)["width"] / 0x2 - 0xf, _0xc18092);
  }),
  (_0x20bd24["prototype"]["endScreenDisplayed"] = ![]),
  (_0x20bd24["prototype"]["buildEndScreenHTML"] = function (_0x44fcfe) {
    if (this["endScreenDisplayed"]) return;
    this["endScreenDisplayed"] = !![];
    var _0x2906dc = "";
    (_0x2906dc += "<div class='msg'>YOU WERE #" + _0x44fcfe["rank"] + "</div>"),
      (_0x2906dc += "<div class='row'>"),
      (_0x2906dc += "<div class='label'>Killed by:</div>"),
      (_0x2906dc += "<div class='value2'>" + _0x44fcfe["killedBy"] + "</div>"),
      (_0x2906dc += "</div>"),
      (_0x2906dc += "<div class='row'>"),
      (_0x2906dc += "<div class='col1'>"),
      (_0x2906dc += "<div class='label'>Time alive:</div>"),
      (_0x2906dc += "<div class='value'>" + _0x167d19(_0x44fcfe["timeAlive"]) + "</div>"),
      (_0x2906dc += "</div>"),
      (_0x2906dc += "<div class='col2'>"),
      (_0x2906dc += "<div class='label'>Total kills:</div>"),
      (_0x2906dc += "<div class='value'>" + _0x44fcfe["totalKills"] + "</div>"),
      (_0x2906dc += "</div>"),
      (_0x2906dc += "</div>"),
      (_0x2906dc += "<div class='row'>"),
      (_0x2906dc += "<div class='col1'>"),
      (_0x2906dc += "<div class='label'>Top rank:</div>"),
      (_0x2906dc += "<div class='value'>" + _0x44fcfe["topRank"] + "</div>"),
      (_0x2906dc += "</div>"),
      (_0x2906dc += "<div class='col2'>"),
      (_0x2906dc += "<div class='label'>Max xp:</div>"),
      (_0x2906dc += "<div class='value'>" + _0x105fd1(_0x44fcfe["maxXP"]) + "</div>"),
      (_0x2906dc += "</div>"),
      (_0x2906dc += "</div>"),
      (_0x2906dc += "<div style='clear:both;'></div>"),
      (_0x2906dc += "<div class='btnDiv'>"),
      (_0x2906dc += "<button id='btnMopeOptions' class='btn'>      CONTINUE      </button>"),
      (_0x2906dc += "</div>"),
      (_0x2906dc += "<div style='clear:both;'></div>");
    var _0x10e2af = document["getElementById"]("endScreen");
    _0x10e2af && ((_0x10e2af["innerHTML"] = _0x2906dc), (_0x10e2af["style"]["display"] = "block")), (!_0x37000d || isGhost) && _0x2365d4();
  }),
  (_0x20bd24["prototype"]["endScreenCanvas"] = null),
  (_0x20bd24["prototype"]["buildEndScreen"] = function (_0x4ade5a, _0x1d35e1) {
    if (this["endScreenCanvas"] == null) this["endScreenCanvas"] = document["createElement"]("canvas");
    if (this["endScreenCanvas"] == null) return;
    var _0x59877a = this["endScreenCanvas"]["getContext"]("2d"),
      _0x390862 = 0x37,
      _0x30856c = 0x28,
      _0x2e9d80 = 0x5,
      _0x51767f = 0xf0,
      _0x3715bb = 0x1a4;
    (_0x390862 = _0x51767f + _0x2e9d80 * 0x2),
      (this["endScreenCanvas"]["width"] = _0x3715bb + _0x2e9d80 * 0x2),
      (this["endScreenCanvas"]["height"] = _0x390862),
      (_0x59877a["globalAlpha"] = 0.2),
      (_0x59877a["fillStyle"] = "#000000"),
      _0x59877a["fillRect"](0x0, 0x0, this["endScreenCanvas"]["width"], this["endScreenCanvas"]["height"]),
      (_0x59877a["fillStyle"] = "#000000"),
      _0x59877a["fillRect"](
        _0x2e9d80,
        _0x2e9d80,
        this["endScreenCanvas"]["width"] - _0x2e9d80 * 0x2,
        this["endScreenCanvas"]["height"] - _0x2e9d80 * 0x2
      );
    var _0x206da7 = _0x2e9d80;
    (_0x59877a["globalAlpha"] = 0x1), (_0x59877a["fillStyle"] = "#FFFFFF"), (_0x59877a["font"] = "30px Arial"), (_0x206da7 += 0x37);
    var _0x18868b = "Final Stats";
    (_0x59877a["font"] = "30px Arial"),
      _0x59877a["fillText"](_0x18868b, this["endScreenCanvas"]["width"] / 0x2 - _0x59877a["measureText"](_0x18868b)["width"] / 0x2, _0x206da7),
      (_0x59877a["font"] = "20px Arial"),
      (_0x206da7 += 0x2d),
      (_0x18868b = "You were #" + _0x1d35e1["rank"]),
      _0x59877a["fillText"](_0x18868b, this["endScreenCanvas"]["width"] / 0x2 - _0x59877a["measureText"](_0x18868b)["width"] / 0x2, _0x206da7),
      (_0x206da7 += 0x28);
    var _0x12ab09 = _0x167d19(_0x1d35e1["timeAlive"]),
      _0x3a1c85 = _0x2e9d80 + 0xf;
    _0x1f442f(_0x59877a, "Killed by", _0x1d35e1["killedBy"], _0x3a1c85, _0x206da7),
      (_0x206da7 += 0x28),
      _0x1f442f(_0x59877a, "Time Alive", _0x167d19(_0x1d35e1["timeAlive"]), _0x3a1c85, _0x206da7),
      (_0x3a1c85 += 0xd2),
      _0x1f442f(_0x59877a, "Total Kills", _0x1d35e1["totalKills"], _0x3a1c85, _0x206da7),
      (_0x206da7 += 0x28),
      (_0x3a1c85 = _0x2e9d80 + 0xf),
      _0x1f442f(_0x59877a, "Top rank", _0x1d35e1["topRank"], _0x3a1c85, _0x206da7),
      (_0x3a1c85 += 0xd2),
      _0x1f442f(_0x59877a, "Max XP", _0x105fd1(_0x1d35e1["maxXP"]), _0x3a1c85, _0x206da7),
      (_0x206da7 += 0x32);
  });
var _0x16c746 = function (_0x4681ac, _0x30cef4, _0x9e867d, _0x5d8a9d, _0x2f5cba, _0x518792, _0x2d0fb3) {
  _0x4681ac["save"](),
    (_0x4681ac["globalAlpha"] = _0x2f5cba),
    (_0x4681ac["fillStyle"] = _0x5d8a9d),
    _0x4681ac["rotate"](_0x9e867d),
    _0x4681ac["save"](),
    (_0x4681ac["strokeStyle"] = "white"),
    _0x4681ac["beginPath"](),
    _0x4681ac["arc"](0x0, 0x0, _0x30cef4, 0x0, Math["PI"] * 0.5, ![]),
    _0x4681ac["stroke"](),
    _0x4681ac["restore"](),
    _0x4681ac["save"](),
    _0x4681ac["beginPath"](),
    _0x4681ac["arc"](0x0, 0x0, _0x30cef4, 0x0, Math["PI"] * 0.5, ![]),
    _0x4681ac["lineTo"](0x0, _0x518792),
    _0x4681ac["lineTo"](_0x2d0fb3, _0x518792),
    _0x4681ac["lineTo"](_0x2d0fb3, 0x0),
    _0x4681ac["closePath"](),
    _0x4681ac["fill"](),
    _0x4681ac["restore"](),
    _0x4681ac["restore"]();
};
(_0x20bd24["prototype"]["lastWastedPopupT"] = 0x0),
  (_0x20bd24["prototype"]["onPlayerWasted"] = function (_0x23e326) {
    if ((_0x168a54 - this["lastWastedPopupT"]) / 0x3e8 > 0.7) {
      this["lastWastedPopupT"] = _0x168a54;
      var _0x26c9e3 = new _0x2154d2(_0x23e326 + " wasted!", 0x28, "red", 0x5dc);
      this["wastedPopups"]["push"](_0x26c9e3);
    }
  }),
  (window["ZombieMode"] = _0x20bd24);
var _0x48c344 = _0x353ac5;
(_0x230eed["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x230eed["prototype"]["constructor"] = _0x230eed),
  (_0x230eed["superClass"] = _0x48c344),
  (_0x230eed["prototype"]["safeArea"] = null);
var _0x36e8a1 = ![];
(_0x230eed["prototype"]["wastedPopups"] = []),
  (_0x230eed["prototype"]["playerDisplayNum"] = 0x0),
  (_0x230eed["prototype"]["setServerPlayerCount"] = function () {
    if (this["playerDisplayNum"] == 0x0) _0x1ad1ae["setText"](_0x4acd30(_0x4d2768) + " mopers");
    else _0x1ad1ae["setText"](_0x4acd30(_0x5919a3) + " on server");
    this["playerDisplayNum"] = this["playerDisplayNum"] == 0x0 ? 0x1 : 0x0;
  }),
  (_0x230eed["prototype"]["interface"] = function () {
    if (this["state"] == -0x1 || this["mode"] != _0x3a1189) return;
    if (_0x37000d)
      for (var _0x17fba5 = this["wastedPopups"]["length"] - 0x1; _0x17fba5 >= 0x0; _0x17fba5--) {
        var _0x201b75 = this["wastedPopups"][_0x17fba5];
        _0x201b75["draw"]();
        if (_0x201b75["timedOut"]) this["wastedPopups"]["splice"](_0x17fba5, 0x1);
      }
    if (this["endScreenCanvas"] != null) {
      this["endScreenCanvas"]["width"] &&
        _0x587de3["drawImage"](
          this["endScreenCanvas"],
          _0x645c5 / 0x2 - this["endScreenCanvas"]["width"] / 0x2,
          0xf * _0x4454f9,
          this["endScreenCanvas"]["width"],
          this["endScreenCanvas"]["height"]
        );
      if (!_0x37000d || isGhost) _0x98c3df(!![]);
    }
    this["drawInterfaceButtons"](), this["gameMode_screenMsg"]();
  }),
  (_0x230eed["prototype"]["interfaceReset"] = function () {
    (this["endScreenCanvas"] = null),
      (this["dangerCircleMiniMapCanvas"] = null),
      (this["wastedPopups"] = []),
      (this["lastWastedPopupT"] = 0x0),
      (this["playercount"] = 0x0),
      (this["safeArea"] = null),
      (_0x4b6a6a = null),
      (_0x1172e2 = null);
    if (this["interfaceButtons"])
      for (var _0xe7a746 = 0x0; _0xe7a746 < this["interfaceButtons"]["length"]; _0xe7a746++) {
        var _0x2ed288 = this["interfaceButtons"][_0xe7a746];
        _0x2ed288["onInterfaceReset"]();
      }
    this["interfaceButtons"] = [];
  }),
  (_0x230eed["prototype"]["onInit"] = function () {}),
  (_0x230eed["prototype"]["playercount"] = 0x0),
  (_0x230eed["prototype"]["setPlayerCount"] = function (_0x5447dc) {
    this["playercount"] = _0x5447dc;
  }),
  (_0x230eed["prototype"]["showPlayerCount"] = function () {
    _0x587de3["save"]();
    var _0x28d93f = _0x645c5 / 0x2,
      _0x560be8 = 0x32 * _0x385a2a,
      _0x1b56e1 = 0x12c * _0x385a2a;
    (_0x587de3["globalAlpha"] = 0.35), (_0x587de3["fillStyle"] = "black");
    var _0x2ba5df = 0x1e * _0x385a2a;
    _0x587de3["fillRect"](_0x28d93f - _0x1b56e1 / 0x2, _0x2ba5df, _0x1b56e1, _0x560be8),
      (_0x587de3["globalAlpha"] = 0x1),
      (_0x587de3["fillStyle"] = "white"),
      (_0x587de3["font"] = 0x1e * _0x385a2a + "px Arial"),
      (_0x587de3["lineWidth"] = 0x1),
      (_0x587de3["textAlign"] = "center"),
      (_0x587de3["textBaseline"] = "middle"),
      (_0x587de3["shadowOffsetX"] = 0x1),
      (_0x587de3["shadowOffsetY"] = 0x1),
      (_0x587de3["shadowColor"] = "black"),
      (_0x2ba5df += 0x19 * _0x385a2a);
    var _0x33f572 = " player";
    if (this["playercount"] > 0x1) _0x33f572 += "s";
    if (this["state"] == battleRoyal_inProgress) _0x33f572 += " alive!";
    else {
      if (this["state"] == _0x3731c9 || this["state"] == battleRoyal_ready) _0x33f572 += " joined";
    }
    _0x587de3["fillText"](this["playercount"] + _0x33f572, _0x28d93f, _0x2ba5df), _0x587de3["restore"]();
  }),
  (_0x230eed["prototype"]["lbCanvas"] = null),
  (_0x230eed["prototype"]["leaderboard"] = function (_0x3f4a87) {
    if (this["lbCanvas"] == null) this["lbCanvas"] = document["createElement"]("canvas");
    if (_0x3f4a87) {
      var _0x208dac = this["lbCanvas"]["getContext"]("2d"),
        _0x523ea7 = 0x37,
        _0x215f4e = 0x16;
      (_0x523ea7 = _0x523ea7 + _0x215f4e * _0x3f4a87["length"]),
        (this["lbCanvas"]["width"] = 0x10e),
        (this["lbCanvas"]["height"] = _0x523ea7),
        (_0x208dac["globalAlpha"] = 0.2),
        (_0x208dac["fillStyle"] = "#000000"),
        _0x208dac["fillRect"](0x0, 0x0, this["lbCanvas"]["width"], this["lbCanvas"]["height"]),
        (_0x208dac["globalAlpha"] = 0x1),
        (_0x208dac["fillStyle"] = "#FFFFFF");
      var _0x354638 = _0x3ab380["name"];
      _0x208dac["font"] = "24px Arial";
      !options_lowGraphics && ((_0x208dac["shadowOffsetX"] = 0x1), (_0x208dac["shadowOffsetY"] = 0x1));
      (_0x208dac["shadowColor"] = "black"),
        _0x208dac["fillText"](_0x354638, this["lbCanvas"]["width"] / 0x2 - _0x208dac["measureText"](_0x354638)["width"] / 0x2, 0x28);
      var _0x80351d;
      _0x208dac["textAlign"] = "left";
      for (_0x208dac["font"] = "17px Arial", _0x80351d = 0x0; _0x80351d < _0x3f4a87["length"]; ++_0x80351d) {
        (_0x354638 = _0x417709 ? "" : _0x3f4a87[_0x80351d]["name"] || "mope.io"),
          (_0x354638 += " (" + _0x105fd1(_0x3f4a87[_0x80351d]["xp"]) + ")"),
          (_0x208dac["fillStyle"] = "#FFFFFF"),
          _0x208dac["fillText"](_0x354638, 0xf, 0x41 + _0x215f4e * _0x80351d);
      }
    }
  }),
  (_0x230eed["prototype"]["drawLeaderboard"] = function () {
    _0x37000d &&
      this["pieChartCanvas"] != null &&
      this["pieChartCanvas"]["width"] &&
      _0x587de3["drawImage"](
        this["pieChartCanvas"],
        0x14 * _0x4454f9,
        0x14 * _0x4454f9,
        this["pieChartCanvas"]["width"],
        this["pieChartCanvas"]["height"]
      );
    if (_0x4b6a6a) _0x324122();
  }),
  (_0x230eed["prototype"]["btnPlayAgain"] = null),
  (_0x230eed["prototype"]["showStats"] = !![]),
  (_0x230eed["prototype"]["interfaceButtons"] = []),
  (_0x230eed["prototype"]["createInterfaceButtons"] = function () {
    this["interfaceButtons"] = [];
  }),
  (_0x230eed["prototype"]["drawInterfaceButtons"] = function () {
    if (this["interfaceButtons"])
      for (var _0x14c37d = 0x0; _0x14c37d < this["interfaceButtons"]["length"]; _0x14c37d++) {
        var _0x17c7c5 = this["interfaceButtons"][_0x14c37d];
        _0x17c7c5["isVisible"] && _0x17c7c5["draw"]();
      }
  }),
  (_0x230eed["prototype"]["onResize"] = function () {
    this["drawInterfaceButtons"]();
  }),
  (_0x230eed["prototype"]["readPlayerStats"] = function (_0xf2baef) {
    var _0x3f1110 = [];
    return (
      (_0x3f1110["rank"] = _0xf2baef["readUInt16"]()),
      (_0x3f1110["timeAlive"] = _0xf2baef["readUInt16"]()),
      (_0x3f1110["totalKills"] = _0xf2baef["readUInt16"]()),
      (_0x3f1110["topRank"] = _0xf2baef["readUInt16"]()),
      (_0x3f1110["maxXP"] = _0xf2baef["readUInt32"]()),
      (_0x3f1110["killedBy"] = _0xf2baef["readString"]()),
      _0x3f1110
    );
  }),
  (_0x230eed["prototype"]["playerInfo"] = function (_0xe5fdb3) {
    if (isGhost && !_0x588326) {
      var _0x2b3b63 = this["readPlayerStats"](_0xe5fdb3);
      this["buildEndScreenHTML"](_0x2b3b63);
    } else !isGhost && (this["endScreenCanvas"] = null);
  });
var _0x3731c9 = 0x0,
  _0x113d0f = 0x1,
  _0x113d0f = 0x1,
  _0x1244b4 = 0x2,
  _0xea7d92 = 0x4,
  _0x35cdfb = 0x4;
(_0x230eed["prototype"]["worldUpdate"] = function (_0x1259d4) {
  _0x4e591f = _0x1259d4["readUInt8"]();
  if (_0x4e591f == _0x1244b4) {
    var _0x516920 = minimapW / 0xc8,
      _0x56c73c = minimapH / 0xc8,
      _0x449b95 = _0x1259d4["readUInt32"]() * _0x516920,
      _0x1dfbd1 = _0x1259d4["readUInt32"]() * _0x56c73c,
      _0x58436f = _0x1259d4["readUInt32"]() * 0x5;
    _0x4b6a6a = {
      x: _0x449b95,
      y: _0x1dfbd1,
      rad: _0x58436f * (minimapW / _0x2c6299),
    };
  } else _0x4b6a6a = null;
}),
  (_0x230eed["prototype"]["handleMessage"] = function (_0x4f2ccf) {
    var _0x5715c2 = _0x4f2ccf["readUInt8"]();
    switch (_0x5715c2) {
      case _0x57b756: {
        var _0x103384 = _0x4f2ccf["readString"]();
        this["setStatusBarMessage"](_0x103384, 0xf);
        break;
      }
      case _0x9f9a7c: {
        (this["alivePlayers"] = _0x4f2ccf["readUInt16"]()), (this["playerCountMsg"] = _0x4f2ccf["readString"]()), this["setPlayerCountMsg"]();
        break;
      }
      case _0x2172bc: {
        this["timeRemain"] = _0x4f2ccf["readUInt16"]();
        break;
      }
      case 0x21:
        {
          var _0x5960c0 = _0x4f2ccf["readUInt16"]();
          (isGhost = !![]), (this["showStats"] = !![]), (_0x226297 = ![]), _0x5c1561();
        }
        break;
      case 0x22:
        {
          (_0x3661c9 = "You WON!"),
            (respawnXp = 0x0),
            (_0x37aa31 = 0x50),
            (_0x22c01a = "limegreen"),
            (_0x44b5d9 = +new Date() + 0x1388),
            (_0x226297 = ![]),
            _0x5c1561();
        }
        break;
      case 0x23:
        {
        }
        break;
      case 0x24:
        {
          var _0x70fca0 = _0x4f2ccf["readUInt8"](),
            _0x1b8832 = [];
          for (_0x10d0e7 = 0x0; _0x10d0e7 < _0x70fca0; ++_0x10d0e7) {
            _0x1b8832["push"]({
              name: _0x4f2ccf["readString"](),
              xp: _0x4f2ccf["readUInt32"](),
            });
          }
          this["leaderboard"](_0x1b8832);
        }
        break;
      case 0x25:
        {
          var _0x2339bd = _0x4f2ccf["readUInt16"](),
            _0x5782ed = _0x167d19(_0x2339bd);
          if (this["state"] == 0x4) {
            var _0x103384 = "Game restarts in " + _0x5782ed;
            if (_0x2339bd < 0x3) _0x103384 = "Starting new game";
            this["setMessage"](_0x103384, 0x1f4);
          } else {
            var _0x103384 = "Battle begins in " + _0x5782ed;
            if (_0x2339bd < 0x3) {
              if (_0x5782ed == "") _0x103384 = "Starting new battle!";
              else _0x103384 = "Starting new battle! (" + _0x5782ed + ")";
            }
            this["setMessage"](_0x103384, 0x1f4), _0x2339bd == 0x0 && _0x2afdb6("SURVIVE!", 0x9c4);
          }
        }
        break;
      case 0x26:
        {
          this["playersJoined"] = _0x4f2ccf["readUInt16"]();
          if (this["playersJoined"] > 0x0) this["setPlayerCount"](this["playersJoined"]);
        }
        break;
      case 0x27:
        {
          var _0x2339bd = _0x4f2ccf["readUInt16"](),
            _0x5782ed = _0x167d19(_0x2339bd);
          if (!isGhost) {
            var _0x103384 = "Heatwave expanding in " + _0x5782ed;
            if (_0x2339bd < 0x4) _0x103384 = "Heatwave expands now!";
            this["setMessage"](_0x103384, 0x1f4), _0x2339bd == 0x0 && _0x2afdb6("STAY SAFE!", 0x9c4);
          }
        }
        break;
      case 0x28:
        {
          if (isGhost) this["setMessage"]("You have been eliminated!", 0x1f4);
          else this["setMessage"]("Stay in safe area!", 0x1f4);
        }
        break;
      case 0x29:
        {
          (_0x4e591f = this["state"] = _0x4f2ccf["readUInt8"]()), (this["playersJoined"] = _0x4f2ccf["readUInt16"]());
          if (this["playersJoined"] > 0x0) this["setPlayerCount"](this["playersJoined"]);
          if (this["state"] == _0x3731c9) this["setMessage"]("Waiting for players", 0x3e8);
          else this["state"] == battleRoyal_gameReset && _0x532a55();
        }
        break;
      case 0x2a:
        {
          var _0x47d9c7 = _0x4f2ccf["readUInt8"]() == 0x1;
          if (_0x47d9c7) this["setMessage"]("You WON!", 0x3a98);
          else this["setMessage"]("You LOST!", 0x3a98);
        }
        break;
      case 0x2b:
        {
          (_0x3bea8f = !![]), _0x4980cd() && _0x31cd27["close"]();
        }
        break;
      case 0x2c:
        {
          var _0x4a2ffb = _0x4f2ccf["readString"]();
          if (_0x4a2ffb && _0x4a2ffb["length"] > 0x0) this["onPlayerWasted"](_0x4a2ffb);
        }
        break;
      case 0x2d:
        {
          console["log"]("Msg_battleroyal_endScreen");
          var _0x35d7c9 = null,
            _0x3814fd = 0x0;
          !_0x32740c
            ? ((_0x35d7c9 = this["readPlayerStats"](_0x4f2ccf)), (_0x3814fd = _0x35d7c9["totalPlayers"]))
            : (_0x3814fd = _0x4f2ccf["readUInt16"]());
          var _0x4ad2a2 = [];
          if (_0x3814fd > 0x0) {
            if (_0x3814fd > 0x5) _0x3814fd = 0x5;
            for (var _0x10d0e7 = 0x0; _0x10d0e7 < _0x3814fd; ++_0x10d0e7) {
              _0x4ad2a2["push"]({
                playerName: _0x4f2ccf["readString"](),
                wins: _0x4f2ccf["readUInt8"](),
              });
            }
          }
          (_0x4ad2a2 != null || _0x35d7c9 != null) && ((this["endScreenDisplayed"] = ![]), this["buildEndScreenHTML"](_0x4ad2a2, _0x35d7c9));
        }
        break;
      case 0x2e: {
        var _0x2339bd = _0x4f2ccf["readUInt16"]();
        if (_0x2339bd == 0x0) this["setMessage"]("Battle Ended", 0x1f4);
        else {
          var _0x5782ed = _0x167d19(_0x2339bd);
          if (!isGhost) this["setMessage"]("Battle Ending in " + _0x5782ed, 0x1f4);
        }
      }
      case 0x30: {
        var _0x35d7c9 = this["readPlayerStats"](_0x4f2ccf);
        this["buildEndScreen"](null, _0x35d7c9);
      }
    }
  });
var _0x1172e2 = null;

function _0x324122() {
  if (!_0x1172e2) _0x1172e2 = document["createElement"]("canvas");
  (_0x1172e2["width"] = minimapW), (_0x1172e2["height"] = minimapH);
  var _0x531258 = _0x1172e2["getContext"]("2d");
  _0x531258["clearRect"](0x0, 0x0, _0x1172e2["width"], _0x1172e2["height"]), _0x531258["save"]();
  var _0x57fb6a = Math["max"](0x3, _0x4b6a6a["rad"]),
    _0xa9bd9 = _0x4b6a6a["x"],
    _0x57e637 = _0x4b6a6a["y"];
  _0x531258["translate"](_0xa9bd9, _0x57e637),
    _0x531258["save"](),
    (_0x531258["globalAlpha"] = 0x1),
    _0x2a797f(_0x531258, 0x0, 0x0, _0x4b6a6a["rad"], 0x5, "white"),
    _0x531258["restore"]();
  var _0x49e21a = _0x385a2a * minimapW * 1.5,
    _0x1790cc = _0x385a2a * minimapH * 1.5,
    _0x50cc55 = 0x1,
    _0x44cc6a = "red";
  _0x16c746(_0x531258, _0x4b6a6a["rad"], Math["PI"] * 0x0, _0x44cc6a, _0x50cc55, _0x49e21a, _0x1790cc),
    _0x16c746(_0x531258, _0x4b6a6a["rad"], Math["PI"] * 0.5, _0x44cc6a, _0x50cc55, _0x49e21a, _0x1790cc),
    _0x16c746(_0x531258, _0x4b6a6a["rad"], Math["PI"] * 0x1, _0x44cc6a, _0x50cc55, _0x49e21a, _0x1790cc),
    _0x16c746(_0x531258, _0x4b6a6a["rad"], Math["PI"] * 1.5, _0x44cc6a, _0x50cc55, _0x49e21a, _0x1790cc),
    _0x531258["restore"](),
    _0x1172e2 &&
      _0x587de3["drawImage"](
        _0x1172e2,
        _0x645c5 - (0xa * _0x4454f9 + _0x4f607c["width"] * _0x385a2a),
        0xa * _0x4454f9,
        minimapW * _0x385a2a,
        minimapH * _0x385a2a
      );
}
(_0x230eed["prototype"]["drawZombiePlayers"] = function () {
  if (this["zombiePlayers"])
    for (t = 0x0; t < this["zombiePlayers"]["length"]; t++) {
      _0x35d11f(this["zombiePlayers"][t], "#adff32", 0x1);
    }
}),
  (_0x230eed["prototype"]["drawMap"] = function () {
    this["buildPieChart"]();
    if (!_0x36e8a1) this["drawZombiePlayers"]();
  }),
  (_0x230eed["prototype"]["pieChartCanvas"] = null),
  (_0x230eed["prototype"]["teamColors"] = {
    0x0: "white",
    0x1: "#B6CF40",
  }),
  (_0x230eed["prototype"]["buildPieChart"] = function () {
    if (this["pieChartCanvas"] == null) this["pieChartCanvas"] = document["createElement"]("canvas");
    if (this["pieChartCanvas"] == null) return;
    var _0x46da6e = this["pieChartCanvas"]["getContext"]("2d"),
      _0x2a9d13 = {
        0x0: this["nonZombiePlayersCount"],
        0x1: this["zombieCount"],
      };
    _0x3ddcad = _0x36e8a1 ? 0x1 : 0x0;
    var _0x25c857 = new _0x1c48ab({
        pad: 0x1e,
        canvas: this["pieChartCanvas"],
        data: _0x2a9d13,
        colors: this["teamColors"],
      }),
      _0x369162 = 0x37,
      _0x2800a9 = 0x28,
      _0x4642d3 = 0x5,
      _0x1cc756 = 0xc8,
      _0x4ea83f = 0xc8;
    (_0x369162 = _0x1cc756 + _0x4642d3 * 0x2),
      (this["pieChartCanvas"]["width"] = _0x4ea83f + _0x4642d3 * 0x2),
      (this["pieChartCanvas"]["height"] = _0x369162),
      _0x25c857["draw"](),
      (_0x46da6e["globalAlpha"] = 0.2);
    var _0x32298e = _0x4642d3;
    (_0x46da6e["globalAlpha"] = 0.5), (_0x46da6e["fillStyle"] = "white"), (_0x46da6e["font"] = "20px Arial");
    var _0x32298e = 0xc8;
    (str = _0x3ab380["name"]),
      _0x46da6e["fillText"](str, this["pieChartCanvas"]["width"] / 0x2 - _0x46da6e["measureText"](str)["width"] / 0x2 - 0xf, _0x32298e);
  }),
  (_0x230eed["prototype"]["endScreenDisplayed"] = ![]),
  (_0x230eed["prototype"]["buildEndScreenHTML"] = function (_0x18ea07) {
    if (this["endScreenDisplayed"]) return;
    this["endScreenDisplayed"] = !![];
    var _0x151ec7 = "";
    (_0x151ec7 += "<div class='msg'>YOU WERE #" + _0x18ea07["rank"] + "</div>"),
      (_0x151ec7 += "<div class='row'>"),
      (_0x151ec7 += "<div class='label'>Killed by:</div>"),
      (_0x151ec7 += "<div class='value2'>" + _0x18ea07["killedBy"] + "</div>"),
      (_0x151ec7 += "</div>"),
      (_0x151ec7 += "<div class='row'>"),
      (_0x151ec7 += "<div class='col1'>"),
      (_0x151ec7 += "<div class='label'>Time alive:</div>"),
      (_0x151ec7 += "<div class='value'>" + _0x167d19(_0x18ea07["timeAlive"]) + "</div>"),
      (_0x151ec7 += "</div>"),
      (_0x151ec7 += "<div class='col2'>"),
      (_0x151ec7 += "<div class='label'>Total kills:</div>"),
      (_0x151ec7 += "<div class='value'>" + _0x18ea07["totalKills"] + "</div>"),
      (_0x151ec7 += "</div>"),
      (_0x151ec7 += "</div>"),
      (_0x151ec7 += "<div class='row'>"),
      (_0x151ec7 += "<div class='col1'>"),
      (_0x151ec7 += "<div class='label'>Top rank:</div>"),
      (_0x151ec7 += "<div class='value'>" + _0x18ea07["topRank"] + "</div>"),
      (_0x151ec7 += "</div>"),
      (_0x151ec7 += "<div class='col2'>"),
      (_0x151ec7 += "<div class='label'>Max xp:</div>"),
      (_0x151ec7 += "<div class='value'>" + _0x105fd1(_0x18ea07["maxXP"]) + "</div>"),
      (_0x151ec7 += "</div>"),
      (_0x151ec7 += "</div>"),
      (_0x151ec7 += "<div style='clear:both;'></div>"),
      (_0x151ec7 += "<div class='btnDiv'>"),
      (_0x151ec7 += "<button id='btnMopeOptions' class='btn'>      CONTINUE      </button>"),
      (_0x151ec7 += "</div>"),
      (_0x151ec7 += "<div style='clear:both;'></div>");
    var _0x50036b = document["getElementById"]("endScreen");
    _0x50036b && ((_0x50036b["innerHTML"] = _0x151ec7), (_0x50036b["style"]["display"] = "block")), (!_0x37000d || isGhost) && _0x98c3df(!![]);
  }),
  (_0x230eed["prototype"]["endScreenCanvas"] = null),
  (_0x230eed["prototype"]["buildEndScreen"] = function (_0x1b98e6, _0xd2b16c) {
    if (this["endScreenCanvas"] == null) this["endScreenCanvas"] = document["createElement"]("canvas");
    if (this["endScreenCanvas"] == null) return;
    var _0x38c4ca = this["endScreenCanvas"]["getContext"]("2d"),
      _0x3ce357 = 0x37,
      _0x1572d1 = 0x28,
      _0x5a17c1 = 0x5,
      _0x35a147 = 0xf0,
      _0x47a78f = 0x1a4;
    (_0x3ce357 = _0x35a147 + _0x5a17c1 * 0x2),
      (this["endScreenCanvas"]["width"] = _0x47a78f + _0x5a17c1 * 0x2),
      (this["endScreenCanvas"]["height"] = _0x3ce357),
      (_0x38c4ca["globalAlpha"] = 0.2),
      (_0x38c4ca["fillStyle"] = "#000000"),
      _0x38c4ca["fillRect"](0x0, 0x0, this["endScreenCanvas"]["width"], this["endScreenCanvas"]["height"]),
      (_0x38c4ca["fillStyle"] = "#000000"),
      _0x38c4ca["fillRect"](
        _0x5a17c1,
        _0x5a17c1,
        this["endScreenCanvas"]["width"] - _0x5a17c1 * 0x2,
        this["endScreenCanvas"]["height"] - _0x5a17c1 * 0x2
      );
    var _0x3556a2 = _0x5a17c1;
    (_0x38c4ca["globalAlpha"] = 0x1), (_0x38c4ca["fillStyle"] = "#FFFFFF"), (_0x38c4ca["font"] = "30px Arial"), (_0x3556a2 += 0x37);
    var _0xbe3524 = "Final Stats";
    (_0x38c4ca["font"] = "30px Arial"),
      _0x38c4ca["fillText"](_0xbe3524, this["endScreenCanvas"]["width"] / 0x2 - _0x38c4ca["measureText"](_0xbe3524)["width"] / 0x2, _0x3556a2),
      (_0x38c4ca["font"] = "20px Arial"),
      (_0x3556a2 += 0x2d),
      (_0xbe3524 = "You were #" + _0xd2b16c["rank"]),
      _0x38c4ca["fillText"](_0xbe3524, this["endScreenCanvas"]["width"] / 0x2 - _0x38c4ca["measureText"](_0xbe3524)["width"] / 0x2, _0x3556a2),
      (_0x3556a2 += 0x28);
    var _0x3436d6 = _0x167d19(_0xd2b16c["timeAlive"]),
      _0x1f592c = _0x5a17c1 + 0xf;
    _0x1f442f(_0x38c4ca, "Killed by", _0xd2b16c["killedBy"], _0x1f592c, _0x3556a2),
      (_0x3556a2 += 0x28),
      _0x1f442f(_0x38c4ca, "Time Alive", _0x167d19(_0xd2b16c["timeAlive"]), _0x1f592c, _0x3556a2),
      (_0x1f592c += 0xd2),
      _0x1f442f(_0x38c4ca, "Total Kills", _0xd2b16c["totalKills"], _0x1f592c, _0x3556a2),
      (_0x3556a2 += 0x28),
      (_0x1f592c = _0x5a17c1 + 0xf),
      _0x1f442f(_0x38c4ca, "Top rank", _0xd2b16c["topRank"], _0x1f592c, _0x3556a2),
      (_0x1f592c += 0xd2),
      _0x1f442f(_0x38c4ca, "Max XP", _0x105fd1(_0xd2b16c["maxXP"]), _0x1f592c, _0x3556a2),
      (_0x3556a2 += 0x32);
  });
var _0x16c746 = function (_0x235b4a, _0x302217, _0x541f9e, _0x4b6223, _0xf6ceeb, _0x44189b, _0x165a81) {
  _0x235b4a["save"](),
    (_0x235b4a["globalAlpha"] = _0xf6ceeb),
    (_0x235b4a["fillStyle"] = _0x4b6223),
    _0x235b4a["rotate"](_0x541f9e),
    _0x235b4a["save"](),
    (_0x235b4a["strokeStyle"] = "white"),
    _0x235b4a["beginPath"](),
    _0x235b4a["arc"](0x0, 0x0, _0x302217, 0x0, Math["PI"] * 0.5, ![]),
    _0x235b4a["stroke"](),
    _0x235b4a["restore"](),
    _0x235b4a["save"](),
    _0x235b4a["beginPath"](),
    _0x235b4a["arc"](0x0, 0x0, _0x302217, 0x0, Math["PI"] * 0.5, ![]),
    _0x235b4a["lineTo"](0x0, _0x44189b),
    _0x235b4a["lineTo"](_0x165a81, _0x44189b),
    _0x235b4a["lineTo"](_0x165a81, 0x0),
    _0x235b4a["closePath"](),
    _0x235b4a["fill"](),
    _0x235b4a["restore"](),
    _0x235b4a["restore"]();
};
(_0x230eed["prototype"]["lastWastedPopupT"] = 0x0),
  (_0x230eed["prototype"]["onPlayerWasted"] = function (_0x590fca) {
    if ((_0x168a54 - this["lastWastedPopupT"]) / 0x3e8 > 0.7) {
      this["lastWastedPopupT"] = _0x168a54;
      var _0x56544f = new _0x2154d2(_0x590fca + " wasted!", 0x28, "red", 0x5dc);
      this["wastedPopups"]["push"](_0x56544f);
    }
  }),
  (_0x230eed["prototype"]["screenTextEndT"] = 0x0),
  (_0x230eed["prototype"]["screenTextMsg"] = ""),
  (_0x230eed["prototype"]["setMessage"] = function (_0x2b7fd6, _0x4b6724) {
    this["screenTextMsg"] = _0x2b7fd6;
    if (_0x4b6724 == 0x0) this["screenTextEndT"] = +new Date() + _0x4b6724;
    else this["screenTextEndT"] = +new Date() + _0x4b6724;
  }),
  (_0x230eed["prototype"]["screenMessage"] = function () {
    var _0x1232f1 = 0x1,
      _0x31b80a = (this["screenTextEndT"] - _0x168a54) / 0x3e8 / _0x1232f1;
    _0x31b80a = 0x0 > _0x31b80a ? 0x0 : 0x1 < _0x31b80a ? 0x1 : _0x31b80a;
    if (_0x31b80a > 0x0) {
      _0x587de3["save"]();
      var _0x52969f = _0x645c5 / 0x2,
        _0x37399d = 0x3c * _0x385a2a,
        _0x44f09c = (_0x645c5 / 0x2 - 0x64) * _0x385a2a;
      (_0x587de3["globalAlpha"] = 0.35), (_0x587de3["fillStyle"] = "black");
      var _0x2dbe71 = _0x24f0be - _0x24f0be * 0.2;
      _0x587de3["fillRect"](_0x52969f - _0x44f09c / 0x2, _0x2dbe71 - _0x37399d / 0x2, _0x44f09c, _0x37399d),
        (_0x587de3["globalAlpha"] = 0x1),
        (_0x587de3["globalAlpha"] = _0x31b80a),
        (_0x587de3["globalAlpha"] = 0x1),
        (_0x587de3["fillStyle"] = "white"),
        (_0x587de3["font"] = 0x28 * _0x385a2a + "px Arial"),
        (_0x587de3["lineWidth"] = 0x1),
        (_0x587de3["textAlign"] = "center"),
        (_0x587de3["textBaseline"] = "middle"),
        (_0x587de3["shadowOffsetX"] = 0x1),
        (_0x587de3["shadowOffsetY"] = 0x1),
        (_0x587de3["shadowColor"] = "black"),
        _0x587de3["fillText"](this["screenTextMsg"], _0x645c5 / 0x2, _0x2dbe71),
        _0x587de3["restore"]();
    }
  });
var _0x372902 = new Array();
(_0x230eed["prototype"]["setStatusBarMessage"] = function (_0x4a4e74, _0x55c2d0) {
  var _0x32ada6 = 0x28,
    _0x5de5a2 = 0x1,
    _0x1204de = "white",
    _0x5b58c7 = _0x645c5 / 0x2,
    _0x12c45d = _0x24f0be - _0x24f0be * 0.15,
    _0x2a5c33 = _0x645c5 / 0x2 - 0x64,
    _0x290157 = 0x3c,
    _0x3e97ed = "black",
    _0x23f8a1 = 0.1,
    _0x478714 = +new Date() + _0x55c2d0 * 0x3e8;
  this["msg_statusbar"] = {
    txt: _0x4a4e74,
    txt_size: _0x32ada6,
    txt_alpha: _0x5de5a2,
    txt_color: _0x1204de,
    x: _0x5b58c7,
    y: _0x12c45d,
    bg_w: _0x2a5c33,
    bg_h: _0x290157,
    bg_color: _0x3e97ed,
    bg_alpha: _0x23f8a1,
    dur: _0x478714,
  };
}),
  (_0x230eed["prototype"]["msg_statusbar"] = null),
  (_0x230eed["prototype"]["msg_playerCount"] = null);
var _0x388f88 = 0.1;
(_0x230eed["prototype"]["setPlayerCountMsg"] = function () {
  var _0x2bc129 = 0x14,
    _0x3baf51 = 0x1,
    _0x18572f = "white",
    _0x45af65 = _0x645c5 / 0x2,
    _0x535a0b = 0x1e,
    _0x2b002b = 0x64,
    _0x4bf1aa = 0x28,
    _0x495573 = "black",
    _0x1084a0 = 0.1,
    _0x10add5 = "";
  this["playerCountMsg"] != "alive"
    ? ((_0x4bf1aa = 0x46), (_0x10add5 = this["playerCountMsg"] + "\x0a" + this["alivePlayers"] + " joined"))
    : (_0x10add5 = this["alivePlayers"] + " alive");
  var _0x132768 = +new Date() + 0x3c * 0x3e8;
  this["msg_playerCount"] = {
    txt: _0x10add5,
    txt_size: _0x2bc129,
    txt_alpha: _0x3baf51,
    txt_color: _0x18572f,
    x: _0x45af65,
    y: _0x535a0b,
    bg_w: _0x2b002b,
    bg_h: _0x4bf1aa,
    bg_color: _0x495573,
    bg_alpha: _0x1084a0,
    dur: _0x132768,
  };
}),
  (_0x230eed["prototype"]["gameMode_screenMsg"] = function () {
    if (this["msg_statusbar"]) {
      this["drawMessage"](this["msg_statusbar"]);
      if (this["msg_statusbar"]["dur"] - _0x168a54 < 0x0) this["msg_statusbar"] = null;
    }
    this["msg_playerCount"] && this["drawMessage"](this["msg_playerCount"]);
  }),
  (_0x230eed["prototype"]["drawMessage"] = function (_0x3147f1) {
    if (_0x3147f1 && _0x3147f1["txt"])
      this["drawMessageBar"](
        _0x3147f1["txt"],
        _0x3147f1["txt_size"],
        _0x3147f1["txt_alpha"],
        _0x3147f1["txt_color"],
        _0x3147f1["x"],
        _0x3147f1["y"],
        _0x3147f1["bg_w"],
        _0x3147f1["bg_h"],
        _0x3147f1["bg_color"],
        _0x3147f1["bg_alpha"],
        _0x3147f1["dur"]
      );
  }),
  (_0x230eed["prototype"]["drawMessageBar"] = function (
    _0x3ab7dd,
    _0x5d22fd,
    _0x1e5e5d,
    _0x5545a0,
    _0x5ad28d,
    _0x3b3381,
    _0x472f52,
    _0x19e5fe,
    _0x34f3de,
    _0x38888e,
    _0x43db3c
  ) {
    var _0x103344 = 0x1;
    {
      _0x587de3["save"](),
        (_0x587de3["globalAlpha"] = _0x38888e),
        (_0x587de3["fillStyle"] = _0x34f3de),
        (_0x5d22fd = _0x5d22fd * _0x385a2a),
        (_0x587de3["font"] = _0x5d22fd + "px Arial");
      var _0x1c4aef = _0x5ad28d,
        _0x31f324 = _0x3b3381,
        _0x2aea72 = _0x3ab7dd["split"]("\x0a"),
        _0x4547df = _0x5d22fd * _0x2aea72["length"] * 1.5 * _0x385a2a,
        _0x10f455 = 0x0;
      for (var _0x236b2f = 0x0; _0x236b2f < _0x2aea72["length"]; ++_0x236b2f) {
        _0x10f455 = Math["max"](_0x10f455, _0x587de3["measureText"](_0x2aea72[_0x236b2f])["width"]);
      }
      (_0x10f455 = _0x10f455 * 1.5 * _0x385a2a),
        _0x587de3["fillRect"](_0x1c4aef - _0x10f455 / 0x2, _0x31f324 - _0x4547df / 0x2, _0x10f455, _0x4547df),
        (_0x587de3["globalAlpha"] = _0x1e5e5d),
        (_0x587de3["fillStyle"] = _0x5545a0),
        (_0x587de3["lineWidth"] = 0x1),
        (_0x587de3["textAlign"] = "center"),
        (_0x587de3["textBaseline"] = "middle"),
        (_0x587de3["shadowOffsetX"] = 0x1),
        (_0x587de3["shadowOffsetY"] = 0x1),
        (_0x587de3["shadowColor"] = "black");
      if (_0x2aea72["length"] > 0x1) _0x31f324 -= 0xa * _0x385a2a;
      else _0x31f324 += 0x5 * _0x385a2a;
      for (var _0x236b2f = 0x0; _0x236b2f < _0x2aea72["length"]; _0x236b2f++) {
        _0x587de3["fillText"](_0x2aea72[_0x236b2f], _0x1c4aef, _0x31f324), (_0x31f324 += _0x5d22fd * (_0x236b2f + 0x1));
      }
      _0x587de3["restore"]();
    }
  });

function _0x230eed(_0xfb15e) {
  (this["mode"] = _0x442f2f), (this["chatAllowed"] = !![]), this["createInterfaceButtons"]();
}
window["BattleRoyale"] = _0x230eed;
var _0x1c48ab = function (_0x1792f9) {
    (this["options"] = _0x1792f9),
      (this["radius"] = _0x1792f9["radius"]),
      (this["pad"] = _0x1792f9["pad"]),
      (this["canvas"] = _0x1792f9["canvas"]),
      (this["_ctx"] = this["canvas"]["getContext"]("2d")),
      (this["colors"] = _0x1792f9["colors"]),
      (this["radius"] = Math["min"](this["canvas"]["width"] / 0x2, this["canvas"]["height"] / 0x2)),
      (this["draw"] = function () {
        var _0x1759ac = 0x0,
          _0x5f05b8 = 0x0;
        this["_ctx"]["save"](),
          (this["_ctx"]["globalAlpha"] = 0.3),
          this["drawCircle"](
            this["canvas"]["width"] / 0x2 - this["pad"] / 0x2,
            this["canvas"]["height"] / 0x2 - this["pad"] / 0x2,
            this["radius"] - this["pad"],
            "white"
          ),
          this["_ctx"]["restore"]();
        for (var _0x3b3240 in this["options"]["data"]) {
          var _0x13bca4 = this["options"]["data"][_0x3b3240];
          _0x1759ac += _0x13bca4;
        }
        var _0x1ec663 = 0x0;
        for (_0x3b3240 in this["options"]["data"]) {
          this["_ctx"]["save"](), (this["_ctx"]["lineWidth"] = 0x4), (this["_ctx"]["strokeStyle"] = "white"), (this["_ctx"]["globalAlpha"] = 0.3);
          var _0x3c1ce0 = 0x0;
          _0x3ddcad == _0x3b3240 && ((this["_ctx"]["globalAlpha"] = 0.6), (_0x3c1ce0 = 0x8));
          _0x13bca4 = this["options"]["data"][_0x3b3240];
          var _0x20ff1b = (0x2 * Math["PI"] * _0x13bca4) / _0x1759ac;
          this["drawPieSlice"](
            this["canvas"]["width"] / 0x2 - this["pad"] / 0x2,
            this["canvas"]["height"] / 0x2 - this["pad"] / 0x2,
            this["radius"] - this["pad"],
            _0x1ec663,
            _0x1ec663 + _0x20ff1b,
            this["colors"][_0x3b3240],
            _0x3c1ce0
          ),
            this["_ctx"]["restore"](),
            (_0x1ec663 += _0x20ff1b),
            _0x5f05b8++;
        }
      }),
      (this["drawPieSlice"] = function (_0x2b3d20, _0x84680c, _0x1d5ad0, _0x370521, _0x1f5a09, _0xdb83d8, _0xeb147b) {
        (this["_ctx"]["fillStyle"] = _0xdb83d8),
          this["_ctx"]["beginPath"](),
          this["_ctx"]["moveTo"](_0x2b3d20, _0x84680c),
          this["_ctx"]["arc"](_0x2b3d20, _0x84680c, _0x1d5ad0 + _0xeb147b, _0x370521, _0x1f5a09),
          this["_ctx"]["closePath"](),
          this["_ctx"]["fill"]();
        if (_0xeb147b > 0x0) this["_ctx"]["stroke"]();
      }),
      (this["drawCircle"] = function (_0x119a2b, _0xbe93e6, _0x17425b, _0x38f5c4) {
        (this["_ctx"]["fillStyle"] = _0x38f5c4),
          this["_ctx"]["beginPath"](),
          this["_ctx"]["moveTo"](_0x119a2b, _0xbe93e6),
          this["_ctx"]["arc"](_0x119a2b, _0xbe93e6, _0x17425b, 0x0, Math["PI"] * 0x2),
          this["_ctx"]["closePath"](),
          this["_ctx"]["fill"]();
      });
  },
  _0x48c344 = _0x353ac5;
(_0x588d05["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x588d05["prototype"]["constructor"] = _0x588d05),
  (_0x588d05["superClass"] = _0x48c344),
  (_0x588d05["prototype"]["safeArea"] = null),
  (_0x588d05["prototype"]["teamColors"] = {
    0x0: "#cccccc",
    0x1: "#ffff00",
    0x2: "#01effc",
    0x3: "#bb00ff",
  });

function _0x588d05() {
  (this["mode"] = _0xc95c89), this["createInterfaceButtons"]();
}
(_0x588d05["prototype"]["wastedPopups"] = []),
  (_0x588d05["prototype"]["playerDisplayNum"] = 0x0),
  (_0x588d05["prototype"]["eventText"] = null),
  (_0x588d05["prototype"]["setServerPlayerCount"] = function () {
    switch (this["playerDisplayNum"]) {
      case 0x1:
      case 0x2:
        _0x1ad1ae["setText"]("On Server: " + _0x4acd30(_0x43b61f) + " playing " + nPlayersUnique + " unqiue"), this["playerDisplayNum"]++;
        break;
      case 0x3:
      case 0x4:
        _0x1ad1ae["setText"]("Modes Total: " + gamemodes_alive + " playing, " + gamemodes_unique + " unique"), this["playerDisplayNum"]++;
        break;
      case 0x5:
        var _0x27ea69 = (gamemodes_unique / _0x4d2768) * 0x64;
        _0x1ad1ae["setText"]("Milestone 2: " + _0x4acd30(_0x27ea69["toFixed"](0x2)) + "% (" + gamemodes_unique + " of " + _0x4d2768 + ")"),
          this["playerDisplayNum"]++;
        break;
      case 0x6:
        this["playerDisplayNum"] = 0x0;
        break;
      default:
        _0x1ad1ae["setText"](_0x4acd30(_0x4d2768) + " across Mope!"), this["playerDisplayNum"]++;
        break;
    }
  });
const _0x3ab37c = 0x1,
  _0x3a6480 = 0x2,
  _0x2d72c2 = 0x3,
  _0x72efe2 = 0x4,
  _0x2728cb = 0x5,
  _0x493ac0 = 0x6,
  _0xd7b3b1 = 0x7;
(_0x588d05["prototype"]["socketMessages"] = function (_0x532a16) {
  var _0x1b355c = _0x532a16["readUInt8"]();
  switch (_0x1b355c) {
    case _0x3ab37c: {
      let _0x3fcb2a = _0x532a16["readUInt8"](),
        _0x282ea8 = _0x532a16["readString"]();
      (_0x282ea8 = "Nice, your team has unlocked '" + _0x282ea8 + "' buff."), this["showBuffMessage"]("success", _0x282ea8, _0x3fcb2a, 0x6);
      break;
    }
    case _0x3a6480: {
      let _0x453b26 = _0x532a16["readUInt8"](),
        _0x4995c3 = _0x532a16["readString"]();
      (_0x4995c3 = "Oh no, '" + _0x4995c3 + "' buff has been compromised!"), this["showBuffMessage"]("error", _0x4995c3, _0x453b26, 0x6);
      if (this["isApocalypseInprogress"]) {
      }
      break;
    }
    case _0x2d72c2: {
      console["log"]("APOCALYPSE_STARTED"),
        (this["apocalypseType"] = _0x532a16["readString"]()),
        (this["triggeredByTeamID"] = _0x532a16["readUInt8"]()),
        (this["apocalypseStatus"] = _0x532a16["readString"]()),
        (this["timeLeft"] = _0x532a16["readUInt16"]() / 0x64);
      break;
    }
    case _0x72efe2: {
      console["log"]("APOCALYPSE_ENDED"),
        (this["apocalypseType"] = null),
        (this["triggeredByTeamID"] = 0x0),
        (this["apocalypseStatus"] = null),
        (this["timeLeft"] = 0x0),
        _0x1e26e6("Apocalypse is over. Now, you can go anywhere freely!", "success", 0x6),
        $bus["emit"]($bus["EVENTS"]["SET_APOCALYPSE_ONGOING"], {
          isOngoing: ![],
          timeLeft: 0x0,
        });
      break;
    }
    case _0x2728cb: {
      this["isApocalypseInprogress"] = _0x532a16["readUInt8"]() == 0x1;
      this["isApocalypseInprogress"] &&
        ((this["apocalypseType"] = _0x532a16["readString"]()),
        (this["triggeredByTeamID"] = _0x532a16["readUInt8"]()),
        (this["apocalypseStatus"] = _0x532a16["readString"]()),
        (this["timeLeft"] = _0x532a16["readUInt16"]() / 0x64),
        $bus["emit"]($bus["EVENTS"]["SET_APOCALYPSE_ONGOING"], {
          isOngoing: this["isApocalypseInprogress"],
          timeLeft: this["timeLeft"],
        }));
      break;
    }
    case _0x493ac0: {
      (this["team1"] = _0x532a16["readUInt16"]()),
        (this["team2"] = _0x532a16["readUInt16"]()),
        (this["team3"] = _0x532a16["readUInt16"]()),
        this["updatePieChart"]({
          0x1: this["team1"],
          0x2: this["team2"],
          0x3: this["team3"],
        }),
        this["drawPieLeaderboard"]();
      break;
    }
    case _0xd7b3b1: {
      let _0x89b453 = _0x532a16["readUInt8"]();
      this["capturedStones"] = [];
      for (var _0x4b4b5b = 0x0; _0x4b4b5b < _0x89b453; _0x4b4b5b++) {
        this["capturedStones"]["push"]({
          stoneBuffID: _0x532a16["readUInt8"](),
          hp: _0x532a16["readUInt8"]() / 0x64,
        });
      }
      $bus["emit"]($bus["EVENTS"]["SET_STONE_BUFFS"], this["capturedStones"]);
      break;
    }
  }
}),
  (_0x588d05["prototype"]["getStoneBuffIcon"] = function (_0x331880) {
    switch (_0x331880) {
      case 0x1:
        return "/assets/s/2/gameobj/78/incentive/1.png";
      case 0x2:
        return "/assets/s/2/gameobj/78/incentive/2.png";
      case 0x3:
        return "/assets/s/2/gameobj/78/incentive/3.png";
      case 0x4:
        return "/assets/s/2/gameobj/78/incentive/4.png";
      case 0x5:
        return "/assets/s/2/gameobj/78/incentive/5.png";
      case 0x6:
        return "/assets/s/2/gameobj/78/incentive/6.png";
      case 0x7:
        return "/assets/s/2/gameobj/78/incentive/7.png";
      case 0x8:
        return "/assets/s/2/gameobj/78/incentive/8.png";
      case 0x9:
        return "/assets/s/2/gameobj/78/incentive/9.png";
      case 0xa:
        return "/assets/s/2/gameobj/78/incentive/10.png";
      case 0xb:
        return "/assets/s/2/gameobj/78/incentive/11.png";
      case 0xc:
        return "/assets/s/2/gameobj/78/incentive/12.png";
      case 0xd:
        return "/assets/s/2/gameobj/78/incentive/13.png";
    }
  }),
  (_0x588d05["prototype"]["showBuffMessage"] = function (_0xc08697, _0x315fda, _0x3bc2ce, _0x25daf8) {
    _0x5090c5();
    var _0x3aaf37 = document["getElementsByTagName"]("body")[0x0];
    if (_0x3aaf37) {
      let _0x1cc56d = document["getElementById"]("gameAreaWrapper"),
        _0x5d03cc = _0x404ce0("mopeshop-popup"),
        _0x59fba0 = this["getStoneBuffIcon"](_0x3bc2ce),
        _0x526214 = _0x404ce0("mopeshop-popup-icon", "");
      _0x526214["innerHTML"] = "<img src='" + _0x59fba0 + "'/>";
      let _0x34dca3 = _0x404ce0("msg", _0xc08697),
        _0x11259d = _0x404ce0("text");
      _0x11259d["innerHTML"] = _0x315fda;
      let _0x3f347a = _0x404ce0("closeMsg", "");
      (_0x3f347a["onclick"] = function () {
        _0x5090c5();
      }),
        _0x34dca3["appendChild"](_0x526214),
        _0x34dca3["appendChild"](_0x3f347a),
        _0x34dca3["appendChild"](_0x11259d),
        _0x5d03cc["appendChild"](_0x34dca3),
        _0x3aaf37["insertBefore"](_0x5d03cc, _0x1cc56d),
        _0x25daf8 !== undefined && _0x25daf8 > 0x0 && setTimeout(_0x5090c5, _0x25daf8 * 0x3e8);
    }
  }),
  (_0x588d05["prototype"]["interface"] = function () {
    if (this["state"] == -0x1 || this["mode"] != _0x3a1189) return;
    _0x37000d &&
      this["pieChartCanvas"] != null &&
      this["pieChartCanvas"]["width"] &&
      _0x587de3["drawImage"](this["pieChartCanvas"], 0x0, 0x0, this["pieChartCanvas"]["width"], this["pieChartCanvas"]["height"]),
      this["drawInterfaceButtons"]();
  }),
  (_0x588d05["prototype"]["drawMap"] = function () {
    if (_0x37000d) {
      if (_0x34fedb) return;
      this["drawPieLeaderboard"](), this["drawTeamPlayers"](), _0x1eb893 && _0x1eb893["drawMap"](), this["onApocalypseUpdated"]();
    }
  }),
  (_0x588d05["prototype"]["interfaceReset"] = function () {
    (this["endScreenCanvas"] = null),
      (this["dangerCircleMiniMapCanvas"] = null),
      (this["wastedPopups"] = []),
      (this["lastWastedPopupT"] = 0x0),
      (this["playercount"] = 0x0),
      (this["safeArea"] = null);
    if (this["interfaceButtons"])
      for (var _0x1155f0 = 0x0; _0x1155f0 < this["interfaceButtons"]["length"]; _0x1155f0++) {
        var _0x1e65dc = this["interfaceButtons"][_0x1155f0];
        _0x1e65dc["onInterfaceReset"]();
      }
    this["interfaceButtons"] = [];
  }),
  (_0x588d05["prototype"]["onInit"] = function () {}),
  (_0x588d05["prototype"]["playercount"] = 0x0),
  (_0x588d05["prototype"]["setPlayerCount"] = function (_0x587c45) {
    this["playercount"] = _0x587c45;
  }),
  (_0x588d05["prototype"]["showPlayerCount"] = function () {
    _0x587de3["save"]();
    var _0x483d12 = _0x645c5 / 0x2,
      _0x485b77 = 0x32 * _0x385a2a,
      _0x47fae8 = 0x12c * _0x385a2a;
    (_0x587de3["globalAlpha"] = 0.35), (_0x587de3["fillStyle"] = "black");
    var _0x15b4f8 = 0x1e * _0x385a2a;
    _0x587de3["fillRect"](_0x483d12 - _0x47fae8 / 0x2, _0x15b4f8, _0x47fae8, _0x485b77),
      (_0x587de3["globalAlpha"] = 0x1),
      (_0x587de3["fillStyle"] = "white"),
      (_0x587de3["font"] = 0x1e * _0x385a2a + "px Arial"),
      (_0x587de3["lineWidth"] = 0x1),
      (_0x587de3["textAlign"] = "center"),
      (_0x587de3["textBaseline"] = "middle"),
      (_0x587de3["shadowOffsetX"] = 0x1),
      (_0x587de3["shadowOffsetY"] = 0x1),
      (_0x587de3["shadowColor"] = "black"),
      (_0x15b4f8 += 0x19 * _0x385a2a);
    var _0x10ed48 = " player";
    if (this["playercount"] > 0x1) _0x10ed48 += "s";
    if (this["state"] == battleRoyal_inProgress) _0x10ed48 += " alive!";
    else {
      if (this["state"] == _0x3731c9 || this["state"] == battleRoyal_ready) _0x10ed48 += " joined";
    }
    _0x587de3["fillText"](this["playercount"] + _0x10ed48, _0x483d12, _0x15b4f8), _0x587de3["restore"]();
  }),
  (_0x588d05["prototype"]["lbCanvas"] = null),
  (_0x588d05["prototype"]["leaderboard"] = function (_0x335c79) {}),
  (_0x588d05["prototype"]["btnPlayAgain"] = null),
  (_0x588d05["prototype"]["showStats"] = !![]),
  (_0x588d05["prototype"]["interfaceButtons"] = []),
  (_0x588d05["prototype"]["createInterfaceButtons"] = function () {
    this["interfaceButtons"] = [];
  }),
  (_0x588d05["prototype"]["drawInterfaceButtons"] = function () {
    if (this["interfaceButtons"])
      for (var _0x3cdfcc = 0x0; _0x3cdfcc < this["interfaceButtons"]["length"]; _0x3cdfcc++) {
        var _0x55b4d2 = this["interfaceButtons"][_0x3cdfcc];
        _0x55b4d2["isVisible"] && _0x55b4d2["draw"]();
      }
  }),
  (_0x588d05["prototype"]["onResize"] = function () {
    this["drawInterfaceButtons"]();
  }),
  (_0x588d05["prototype"]["playerInfo"] = function (_0x283add) {}),
  (_0x588d05["prototype"]["playerWorldUpdate"] = function (_0x3d346c) {
    return;
    (this["team1"] = _0x3d346c["readUInt16"]()),
      (this["team2"] = _0x3d346c["readUInt16"]()),
      (this["team3"] = _0x3d346c["readUInt16"]()),
      (this["isApocalypseInprogress"] = _0x3d346c["readUInt8"]() == 0x1);
    this["isApocalypseInprogress"]
      ? ((this["apocalypseType"] = _0x3d346c["readString"]()),
        (this["triggeredByTeamID"] = _0x3d346c["readUInt8"]()),
        (this["apocalypseStatus"] = _0x3d346c["readString"]()),
        (this["timeLeft"] = _0x3d346c["readUInt16"]() / 0x64),
        $bus["emit"]($bus["EVENTS"]["SET_APOCALYPSE_ONGOING"], {
          isOngoing: this["isApocalypseInprogress"],
          timeLeft: this["timeLeft"],
        }))
      : $bus["emit"]($bus["EVENTS"]["SET_APOCALYPSE_ONGOING"], {
          isOngoing: ![],
          timeLeft: 0x0,
        });
    let _0x517da7 = _0x3d346c["readUInt8"]();
    this["capturedStones"] = [];
    for (var _0x367ddd = 0x0; _0x367ddd < _0x517da7; _0x367ddd++) {
      this["capturedStones"]["push"]({
        stoneBuffID: _0x3d346c["readUInt8"](),
        hp: _0x3d346c["readUInt8"]() / 0x64,
      });
    }
    $bus["emit"]($bus["EVENTS"]["SET_STONE_BUFFS"], this["capturedStones"]);
  }),
  (_0x588d05["prototype"]["onApocalypseUpdated"] = function () {
    this["isApocalypseInprogress"] &&
      (this["eventText"] == null && ((this["eventText"] = new _0x413af8(0x14, "white")), this["eventText"]["setFontSize"](0x1c * _0x385a2a)),
      this["eventText"] && ((this["eventText"]["x"] = _0x645c5 / 0x2), (this["eventText"]["y"] = _0x24f0be * 0.2), this["eventText"]["draw"]()));
  }),
  (_0x588d05["prototype"]["bonusRoundTimer"] = null),
  (_0x588d05["prototype"]["pieChartCanvas"] = null),
  (_0x588d05["prototype"]["setBonusRoundTimer"] = function (_0xafc5f) {
    var _0xdb1342 = "" + _0xafc5f;
    null == this["bonusRoundTimer"]
      ? ((this["bonusRoundTimer"] = new _0x413af8(0x28, "#FFFFFF")),
        (this["bonusRoundTimer"]["strokeW"] = 0x2),
        (this["bonusRoundTimer"]["multiLine"] = !![]),
        (this["bonusRoundTimer"]["renderScale"] = 0x5),
        this["bonusRoundTimer"]["setText"](_0xdb1342))
      : (this["bonusRoundTimer"]["setFontSize"](0x28), this["bonusRoundTimer"]["setText"](_0xdb1342));
  }),
  (_0x588d05["prototype"]["drawMiniMapObjects"] = function (_0x43726d) {
    if (this["teamStones"])
      for (let _0x599e30 = 0x0; _0x599e30 < this["teamStones"]["length"]; _0x599e30++) {
        let _0x19b49a = this["teamStones"][_0x599e30];
        _0x19b49a && ((_0x19b49a["c"] = "black"), _0x43726d["drawCircle"](_0x19b49a));
      }
  }),
  (_0x588d05["prototype"]["teamStones"] = []),
  (_0x588d05["prototype"]["teamModePieChart"] = null),
  (_0x588d05["prototype"]["updatePieChart"] = function (_0x2cac3c) {
    this["pieChartCanvas"] == null &&
      ((this["pieChartCanvas"] = document["createElement"]("canvas")),
      (this["teamModePieChart"] = new _0x1c48ab({
        pad: 0x1e,
        canvas: this["pieChartCanvas"],
        colors: this["teamColors"],
      })));
    if (this["teamModePieChart"]) this["teamModePieChart"]["setData"](_0x2cac3c);
  }),
  (_0x588d05["prototype"]["drawPieLeaderboard"] = function () {
    if (this["pieChartCanvas"] == null) return;
    var _0x37c2aa = this["pieChartCanvas"]["getContext"]("2d"),
      _0x50393a = 0x5,
      _0x3e0724 = 0xc8,
      _0x2a032d = 0xc8;
    (this["pieChartCanvas"]["width"] = _0x3e0724),
      (this["pieChartCanvas"]["height"] = _0x2a032d + 0x14),
      this["teamModePieChart"]["draw"](),
      (_0x37c2aa["globalAlpha"] = 0.2);
    var _0x974d95 = _0x50393a;
    (_0x37c2aa["globalAlpha"] = 0.5), (_0x37c2aa["fillStyle"] = "white"), (_0x37c2aa["font"] = "20px Arial");
    var _0x974d95 = 0xd2;
    (str = _0x3ab380["name"]),
      _0x37c2aa["fillText"](str, this["pieChartCanvas"]["width"] / 0x2 - _0x37c2aa["measureText"](str)["width"] / 0x2, _0x974d95);
  }),
  (_0x588d05["prototype"]["inviteScreenCanvas"] = null),
  (_0x588d05["prototype"]["endScreenCanvas"] = null),
  (_0x588d05["prototype"]["endScreenDisplayed"] = ![]);
var _0x1c48ab = function (_0x2a51a0) {
  (this["options"] = _0x2a51a0),
    (this["radius"] = _0x2a51a0["radius"]),
    (this["pad"] = _0x2a51a0["pad"]),
    (this["canvas"] = _0x2a51a0["canvas"]),
    (this["_ctx"] = this["canvas"]["getContext"]("2d")),
    (this["colors"] = _0x2a51a0["colors"]),
    (this["radius"] = Math["min"](this["canvas"]["width"] / 0x2, this["canvas"]["height"] / 0x2)),
    (this["showBg"] = ![]),
    (this["setData"] = function (_0x3ab070) {
      this["options"]["data"] = _0x3ab070;
    }),
    (this["draw"] = function () {
      var _0x35ef63 = 0x0,
        _0xb9a2b7 = 0x0;
      this["showBg"] &&
        (this["_ctx"]["save"](),
        this["_ctx"]["beginPath"](),
        (this["_ctx"]["globalAlpha"] = 0.1),
        (this["_ctx"]["fillStyle"] = "black"),
        this["_ctx"]["rect"](0x0, 0x0, this["canvas"]["width"], this["canvas"]["height"]),
        this["_ctx"]["fill"](),
        this["_ctx"]["restore"]());
      var _0x2204a0 = this["canvas"]["width"] / 0x2,
        _0x541fdf = this["canvas"]["height"] / 0x2;
      this["_ctx"]["save"](),
        (this["_ctx"]["globalAlpha"] = 0.3),
        this["drawCircle"](_0x2204a0, _0x541fdf, this["radius"], "white"),
        this["_ctx"]["restore"]();
      for (var _0x4c7252 in this["options"]["data"]) {
        var _0x441949 = this["options"]["data"][_0x4c7252];
        _0x35ef63 += _0x441949;
      }
      var _0x5220b6 = 0x0;
      for (_0x4c7252 in this["options"]["data"]) {
        this["_ctx"]["save"](), (this["_ctx"]["lineWidth"] = 0x4), (this["_ctx"]["strokeStyle"] = "white"), (this["_ctx"]["globalAlpha"] = 0.3);
        var _0x2fce73 = 0x0;
        _0x3ddcad == _0x4c7252 && ((this["_ctx"]["globalAlpha"] = 0.6), (_0x2fce73 = 0x8));
        _0x441949 = this["options"]["data"][_0x4c7252];
        var _0x203c42 = (0x2 * Math["PI"] * _0x441949) / _0x35ef63;
        this["drawPieSlice"](_0x2204a0, _0x541fdf, this["radius"], _0x5220b6, _0x5220b6 + _0x203c42, this["colors"][_0x4c7252], _0x2fce73),
          this["_ctx"]["restore"](),
          (_0x5220b6 += _0x203c42),
          _0xb9a2b7++;
      }
    }),
    (this["drawPieSlice"] = function (_0x4604cd, _0x34ec9e, _0x1d5a18, _0x5b8494, _0x4c4a68, _0x12edbf, _0x29aded) {
      (this["_ctx"]["fillStyle"] = _0x12edbf),
        this["_ctx"]["beginPath"](),
        this["_ctx"]["moveTo"](_0x4604cd, _0x34ec9e),
        this["_ctx"]["arc"](_0x4604cd, _0x34ec9e, _0x1d5a18 + _0x29aded, _0x5b8494, _0x4c4a68),
        this["_ctx"]["closePath"](),
        this["_ctx"]["fill"]();
      if (_0x29aded > 0x0) this["_ctx"]["stroke"]();
    }),
    (this["drawCircle"] = function (_0x2d4150, _0x4e3c68, _0x72cf95, _0x2b1fd3) {
      (this["_ctx"]["fillStyle"] = _0x2b1fd3),
        this["_ctx"]["beginPath"](),
        this["_ctx"]["moveTo"](_0x2d4150, _0x4e3c68),
        this["_ctx"]["arc"](_0x2d4150, _0x4e3c68, _0x72cf95, 0x0, Math["PI"] * 0x2),
        this["_ctx"]["closePath"](),
        this["_ctx"]["fill"]();
    });
};
(_0x588d05["prototype"]["stonesCanvas"] = null),
  (_0x588d05["prototype"]["getSkinImageObj"] = function (_0x419acc) {
    var _0x979d97 = "./assets/s/2/" + _0x419acc;
    return _0x2d8f34(_0x979d97, function (_0x37d1e1) {});
  }),
  (_0x588d05["prototype"]["playerUI"] = []),
  (_0x588d05["prototype"]["drawPlayerUI"] = function (_0x1c19cb) {}),
  (_0x588d05["prototype"]["drawStoneCount"] = function (_0x2880b7, _0x50d399, _0x352c00, _0x1ad6ad) {
    _0x2880b7["save"](), (_0x2880b7["globalAlpha"] = 0.5);
    let _0xf7428f = "./assets/s/2/gameobj/78/stone" + _0x50d399 + ".png",
      _0x103a31 = _0x2d8f34(_0xf7428f);
    _0x103a31 &&
      (_0x2880b7["drawImage"](_0x103a31, 0xa, _0x1ad6ad, 0x28, 0x28),
      (_0x1ad6ad += 0x32),
      (_0x2880b7["fillStyle"] = "black"),
      _0x2880b7["fillText"](_0x352c00 + "", 0x3c, _0x1ad6ad - 0x12)),
      _0x2880b7["restore"]();
  }),
  (_0x588d05["prototype"]["drawTeamPlayers"] = function () {
    if (this["teamPlayers"]) {
      var _0x2154f6 = this["teamColors"][_0x3ddcad];
      for (t = 0x0; t < this["teamPlayers"]["length"]; t++) {
        _0x35d11f(this["teamPlayers"][t], _0x2154f6, 0x1);
      }
    }
  }),
  (_0x588d05["prototype"]["getTeamColor"] = function (_0x23f19e) {
    switch (_0x23f19e) {
      case 0x1:
        return "yellow";
      case 0x2:
        return "cyan";
      case 0x3:
        return "purple";
    }
    return "gray";
  }),
  (_0x588d05["prototype"]["msgDisplayPlayersOnMiniMap"] = function (_0x28b45e) {
    _0x198146 = [];
    var _0x3f9554 = _0x28b45e["readUInt16"]();
    for (var _0x32ffdb = 0x0; _0x32ffdb < _0x3f9554; _0x32ffdb++) {
      _0x198146["push"]({
        teamID: _0x28b45e["readUInt16"](),
        x: _0x28b45e["readUInt32"]() / 0x64,
        y: _0x28b45e["readUInt32"]() / 0x64,
        rad: 0x3,
      });
    }
  }),
  (_0x588d05["prototype"]["readGameRoomPropertyUpdate"] = function (_0x17174f) {
    var _0x4a9a77 = _0x17174f["readUInt8"]();
    for (var _0x3c4b0c = 0x0; _0x3c4b0c < _0x4a9a77; _0x3c4b0c++) {
      var _0x378348 = _0x17174f["readUInt8"]();
      this["readUpdatedPropertyItem"](_0x378348, _0x17174f);
    }
  }),
  (_0x588d05["prototype"]["readUpdatedPropertyItem"] = function (_0x389a50, _0x346722) {
    if (_0x389a50 == _0x83445c) console["log"]("TEAMMODE_APOCALYPSE_STARTED"), (this["isApocalypseInprogress"] = _0x346722["readUInt8"]() == 0x1);
    else {
      if (_0x389a50 == _0x1aeed5)
        console["log"]("TEAMMODE_APOCALYPSE_ENDED"),
          (this["isApocalypseInprogress"] = _0x346722["readUInt8"]() == 0x1),
          $bus["emit"]($bus["EVENTS"]["SET_APOCALYPSE_ONGOING"], {
            isOngoing: ![],
            timeLeft: 0x0,
          });
      else {
        if (_0x389a50 == _0x34ff80) {
          console["log"]("TEAMMODE_APOCALYPSE_TIME_LEFT");
          let _0x5008bf = _0x346722["readUInt16"]();
          $bus["emit"]($bus["EVENTS"]["SET_APOCALYPSE_ONGOING"], {
            isOngoing: this["isApocalypseInprogress"],
            timeLeft: _0x5008bf,
          });
        }
      }
    }
  }),
  (window["TeamMode"] = _0x588d05);
var _0x48c344 = _0x353ac5;
(_0x2a684b["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x2a684b["prototype"]["constructor"] = _0x2a684b),
  (_0x2a684b["superClass"] = _0x48c344),
  (_0x2a684b["prototype"]["safeArea"] = null);

function _0x2a684b(_0x47481a) {
  (this["mode"] = _0x47481a), (this["stamp"] = +new Date()), (this["chatAllowed"] = !![]), this["createInterfaceButtons"]();
}
(_0x2a684b["prototype"]["wastedPopups"] = []),
  (_0x2a684b["prototype"]["playerDisplayNum"] = 0x0),
  (_0x2a684b["prototype"]["setServerPlayerCount"] = function () {
    _0x1ad1ae["setText"](_0x4acd30(_0x4d2768) + " online"), (this["playerDisplayNum"] = this["playerDisplayNum"] == 0x0 ? 0x1 : 0x0);
  }),
  (_0x2a684b["prototype"]["interface"] = function () {
    if (this["state"] == -0x1 || this["mode"] != _0x3a1189) return;
    if (_0x37000d)
      for (var _0x471661 = this["wastedPopups"]["length"] - 0x1; _0x471661 >= 0x0; _0x471661--) {
        var _0x3523a8 = this["wastedPopups"][_0x471661];
        _0x3523a8["draw"]();
        if (_0x3523a8["timedOut"]) this["wastedPopups"]["splice"](_0x471661, 0x1);
      }
    if (this["endScreenCanvas"] != null) {
      this["endScreenCanvas"]["width"] &&
        _0x587de3["drawImage"](
          this["endScreenCanvas"],
          _0x645c5 / 0x2 - this["endScreenCanvas"]["width"] / 0x2,
          0xf * _0x4454f9,
          this["endScreenCanvas"]["width"],
          this["endScreenCanvas"]["height"]
        );
      if (!_0x37000d || isGhost) _0x98c3df(!![]);
    }
    this["drawInterfaceButtons"]();
  }),
  (_0x2a684b["prototype"]["interfaceReset"] = function () {
    (this["endScreenCanvas"] = null),
      (this["dangerCircleMiniMapCanvas"] = null),
      (this["wastedPopups"] = []),
      (this["lastWastedPopupT"] = 0x0),
      (this["playercount"] = 0x0),
      (this["safeArea"] = null);
    if (this["interfaceButtons"])
      for (var _0x29fbd7 = 0x0; _0x29fbd7 < this["interfaceButtons"]["length"]; _0x29fbd7++) {
        var _0x31f312 = this["interfaceButtons"][_0x29fbd7];
        _0x31f312["onInterfaceReset"]();
      }
    this["interfaceButtons"] = [];
  }),
  (_0x2a684b["prototype"]["onInit"] = function () {}),
  (_0x2a684b["prototype"]["playercount"] = 0x0),
  (_0x2a684b["prototype"]["setPlayerCount"] = function (_0x6f3d12) {
    this["playercount"] = _0x6f3d12;
  }),
  (_0x2a684b["prototype"]["showPlayerCount"] = function () {
    _0x587de3["save"]();
    var _0x220a8a = _0x645c5 / 0x2,
      _0x2d5ecb = 0x32 * _0x385a2a,
      _0x2af96a = 0x12c * _0x385a2a;
    (_0x587de3["globalAlpha"] = 0.35), (_0x587de3["fillStyle"] = "black");
    var _0x3afaf8 = 0x1e * _0x385a2a;
    _0x587de3["fillRect"](_0x220a8a - _0x2af96a / 0x2, _0x3afaf8, _0x2af96a, _0x2d5ecb),
      (_0x587de3["globalAlpha"] = 0x1),
      (_0x587de3["fillStyle"] = "white"),
      (_0x587de3["font"] = 0x1e * _0x385a2a + "px Arial"),
      (_0x587de3["lineWidth"] = 0x1),
      (_0x587de3["textAlign"] = "center"),
      (_0x587de3["textBaseline"] = "middle"),
      (_0x587de3["shadowOffsetX"] = 0x1),
      (_0x587de3["shadowOffsetY"] = 0x1),
      (_0x587de3["shadowColor"] = "black"),
      (_0x3afaf8 += 0x19 * _0x385a2a);
    var _0x5e5dcb = " player";
    if (this["playercount"] > 0x1) _0x5e5dcb += "s";
    if (this["state"] == battleRoyal_inProgress) _0x5e5dcb += " alive!";
    else {
      if (this["state"] == _0x3731c9 || this["state"] == battleRoyal_ready) _0x5e5dcb += " joined";
    }
    _0x587de3["fillText"](this["playercount"] + _0x5e5dcb, _0x220a8a, _0x3afaf8), _0x587de3["restore"]();
  }),
  (_0x2a684b["prototype"]["lbCanvas"] = null),
  (_0x2a684b["prototype"]["leaderboard"] = function (_0x57ea70) {
    if (this["lbCanvas"] == null) this["lbCanvas"] = document["createElement"]("canvas");
    if (_0x57ea70) {
      var _0x25676c = this["lbCanvas"]["getContext"]("2d"),
        _0x4a1655 = 0x37,
        _0x5705ce = 0x16;
      (_0x4a1655 = _0x4a1655 + _0x5705ce * _0x57ea70["length"]),
        (this["lbCanvas"]["width"] = 0x10e),
        (this["lbCanvas"]["height"] = _0x4a1655),
        (_0x25676c["globalAlpha"] = 0.2),
        (_0x25676c["fillStyle"] = "#000000"),
        _0x25676c["fillRect"](0x0, 0x0, this["lbCanvas"]["width"], this["lbCanvas"]["height"]),
        (_0x25676c["globalAlpha"] = 0x1),
        (_0x25676c["fillStyle"] = "#FFFFFF");
      var _0x521fc8 = _0x3ab380["name"];
      _0x25676c["font"] = "24px Arial";
      !(_0x57ae6d == 0x2) && ((_0x25676c["shadowOffsetX"] = 0x1), (_0x25676c["shadowOffsetY"] = 0x1));
      (_0x25676c["shadowColor"] = "black"),
        _0x25676c["fillText"](_0x521fc8, this["lbCanvas"]["width"] / 0x2 - _0x25676c["measureText"](_0x521fc8)["width"] / 0x2, 0x28);
      var _0x40ee34;
      _0x25676c["textAlign"] = "left";
      for (_0x25676c["font"] = "17px Arial", _0x40ee34 = 0x0; _0x40ee34 < _0x57ea70["length"]; ++_0x40ee34) {
        (_0x521fc8 = _0x417709 ? "" : _0x57ea70[_0x40ee34]["name"] || "mope.io"),
          (_0x521fc8 += " (" + _0x105fd1(_0x57ea70[_0x40ee34]["xp"]) + ")"),
          (_0x25676c["fillStyle"] = "#FFFFFF"),
          _0x25676c["fillText"](_0x521fc8, 0xf, 0x41 + _0x5705ce * _0x40ee34);
      }
    }
  }),
  (_0x2a684b["prototype"]["drawLeaderboard"] = function () {
    if (_0x37000d) {
      if (!_0x226297)
        _0x1878d2 &&
          _0x1878d2["width"] &&
          _0x587de3["drawImage"](_0x1878d2, 0xa * _0x4454f9, 0xa * _0x4454f9, _0x1878d2["width"] * _0x385a2a, _0x1878d2["height"] * _0x385a2a);
    }
  }),
  (_0x2a684b["prototype"]["btnPlayAgain"] = null),
  (_0x2a684b["prototype"]["showStats"] = !![]),
  (_0x2a684b["prototype"]["interfaceButtons"] = []),
  (_0x2a684b["prototype"]["createInterfaceButtons"] = function () {
    this["interfaceButtons"] = [];
  }),
  (_0x2a684b["prototype"]["drawInterfaceButtons"] = function () {
    if (this["interfaceButtons"])
      for (var _0xeca0a0 = 0x0; _0xeca0a0 < this["interfaceButtons"]["length"]; _0xeca0a0++) {
        var _0x186209 = this["interfaceButtons"][_0xeca0a0];
        _0x186209["isVisible"] && _0x186209["draw"]();
      }
  }),
  (_0x2a684b["prototype"]["onResize"] = function () {
    this["drawInterfaceButtons"]();
  }),
  (_0x2a684b["prototype"]["readPlayerStats"] = function (_0x21c981) {
    var _0x1c6c5e = [];
    return (
      (_0x1c6c5e["rank"] = _0x21c981["readUInt16"]()),
      (_0x1c6c5e["timeAlive"] = _0x21c981["readUInt16"]()),
      (_0x1c6c5e["totalKills"] = _0x21c981["readUInt16"]()),
      (_0x1c6c5e["topRank"] = _0x21c981["readUInt16"]()),
      (_0x1c6c5e["maxXP"] = _0x21c981["readUInt32"]()),
      (_0x1c6c5e["killedBy"] = _0x21c981["readString"]()),
      _0x1c6c5e
    );
  }),
  (_0x2a684b["prototype"]["playerInfo"] = function (_0x3542da) {
    if (isGhost && !_0x588326) {
      var _0x106712 = this["readPlayerStats"](_0x3542da);
      this["buildEndScreenHTML"](_0x106712);
    } else !isGhost && (this["endScreenCanvas"] = null);
  }),
  (_0x2a684b["prototype"]["playerWorldUpdate"] = function (_0xb237ba) {}),
  (_0x2a684b["prototype"]["worldUpdate"] = function (_0x125557) {}),
  (_0x2a684b["prototype"]["drawMap"] = function () {
    if (_0x37000d) {
      if (_0x34fedb) return;
      if (_0x1eb893) _0x1eb893["drawMap"]();
      this["drawLeaderboard"]();
    }
  }),
  (_0x2a684b["prototype"]["pieChartCanvas"] = null),
  (_0x2a684b["prototype"]["teamColors"] = {
    0x0: "white",
    0x1: "#B6CF40",
  }),
  (_0x2a684b["prototype"]["endScreenDisplayed"] = ![]),
  (_0x2a684b["prototype"]["buildEndScreenHTML"] = function (_0x26d9f9) {
    if (this["endScreenDisplayed"]) return;
    this["endScreenDisplayed"] = !![];
    var _0x3afe32 = "";
    (_0x3afe32 += "<div class='msg'>YOU WERE #" + _0x26d9f9["rank"] + "</div>"),
      (_0x3afe32 += "<div class='row'>"),
      (_0x3afe32 += "<div class='label'>Killed by:</div>"),
      (_0x3afe32 += "<div class='value2'>" + _0x26d9f9["killedBy"] + "</div>"),
      (_0x3afe32 += "</div>"),
      (_0x3afe32 += "<div class='row'>"),
      (_0x3afe32 += "<div class='col1'>"),
      (_0x3afe32 += "<div class='label'>Time alive:</div>"),
      (_0x3afe32 += "<div class='value'>" + _0x167d19(_0x26d9f9["timeAlive"]) + "</div>"),
      (_0x3afe32 += "</div>"),
      (_0x3afe32 += "<div class='col2'>"),
      (_0x3afe32 += "<div class='label'>Total kills:</div>"),
      (_0x3afe32 += "<div class='value'>" + _0x26d9f9["totalKills"] + "</div>"),
      (_0x3afe32 += "</div>"),
      (_0x3afe32 += "</div>"),
      (_0x3afe32 += "<div class='row'>"),
      (_0x3afe32 += "<div class='col1'>"),
      (_0x3afe32 += "<div class='label'>Top rank:</div>"),
      (_0x3afe32 += "<div class='value'>" + _0x26d9f9["topRank"] + "</div>"),
      (_0x3afe32 += "</div>"),
      (_0x3afe32 += "<div class='col2'>"),
      (_0x3afe32 += "<div class='label'>Max xp:</div>"),
      (_0x3afe32 += "<div class='value'>" + _0x105fd1(_0x26d9f9["maxXP"]) + "</div>"),
      (_0x3afe32 += "</div>"),
      (_0x3afe32 += "</div>"),
      (_0x3afe32 += "<div style='clear:both;'></div>"),
      (_0x3afe32 += "<div class='btnDiv'>"),
      (_0x3afe32 += "<button id='btnMopeOptions' class='btn'>      CONTINUE      </button>"),
      (_0x3afe32 += "</div>"),
      (_0x3afe32 += "<div style='clear:both;'></div>");
    var _0x30607f = document["getElementById"]("endScreen");
    _0x30607f && ((_0x30607f["innerHTML"] = _0x3afe32), (_0x30607f["style"]["display"] = "block")), (!_0x37000d || isGhost) && _0x2365d4();
  }),
  (_0x2a684b["prototype"]["endScreenCanvas"] = null),
  (_0x2a684b["prototype"]["buildEndScreen"] = function (_0x3c3145, _0x316807) {
    if (this["endScreenCanvas"] == null) this["endScreenCanvas"] = document["createElement"]("canvas");
    if (this["endScreenCanvas"] == null) return;
    var _0x4b481f = this["endScreenCanvas"]["getContext"]("2d"),
      _0x2ccf98 = 0x37,
      _0xc5ba28 = 0x28,
      _0x477d3c = 0x5,
      _0x18bc8c = 0xf0,
      _0x23ba5e = 0x1a4;
    (_0x2ccf98 = _0x18bc8c + _0x477d3c * 0x2),
      (this["endScreenCanvas"]["width"] = _0x23ba5e + _0x477d3c * 0x2),
      (this["endScreenCanvas"]["height"] = _0x2ccf98),
      (_0x4b481f["globalAlpha"] = 0.2),
      (_0x4b481f["fillStyle"] = "#000000"),
      _0x4b481f["fillRect"](0x0, 0x0, this["endScreenCanvas"]["width"], this["endScreenCanvas"]["height"]),
      (_0x4b481f["fillStyle"] = "#000000"),
      _0x4b481f["fillRect"](
        _0x477d3c,
        _0x477d3c,
        this["endScreenCanvas"]["width"] - _0x477d3c * 0x2,
        this["endScreenCanvas"]["height"] - _0x477d3c * 0x2
      );
    var _0xca9042 = _0x477d3c;
    (_0x4b481f["globalAlpha"] = 0x1), (_0x4b481f["fillStyle"] = "#FFFFFF"), (_0x4b481f["font"] = "30px Arial"), (_0xca9042 += 0x37);
    var _0x3b5d5e = "Final Stats";
    (_0x4b481f["font"] = "30px Arial"),
      _0x4b481f["fillText"](_0x3b5d5e, this["endScreenCanvas"]["width"] / 0x2 - _0x4b481f["measureText"](_0x3b5d5e)["width"] / 0x2, _0xca9042),
      (_0x4b481f["font"] = "20px Arial"),
      (_0xca9042 += 0x2d),
      (_0x3b5d5e = "You were #" + _0x316807["rank"]),
      _0x4b481f["fillText"](_0x3b5d5e, this["endScreenCanvas"]["width"] / 0x2 - _0x4b481f["measureText"](_0x3b5d5e)["width"] / 0x2, _0xca9042),
      (_0xca9042 += 0x28);
    var _0x37fe44 = _0x167d19(_0x316807["timeAlive"]),
      _0x19462b = _0x477d3c + 0xf;
    _0x1f442f(_0x4b481f, "Killed by", _0x316807["killedBy"], _0x19462b, _0xca9042),
      (_0xca9042 += 0x28),
      _0x1f442f(_0x4b481f, "Time Alive", _0x167d19(_0x316807["timeAlive"]), _0x19462b, _0xca9042),
      (_0x19462b += 0xd2),
      _0x1f442f(_0x4b481f, "Total Kills", _0x316807["totalKills"], _0x19462b, _0xca9042),
      (_0xca9042 += 0x28),
      (_0x19462b = _0x477d3c + 0xf),
      _0x1f442f(_0x4b481f, "Top rank", _0x316807["topRank"], _0x19462b, _0xca9042),
      (_0x19462b += 0xd2),
      _0x1f442f(_0x4b481f, "Max XP", _0x105fd1(_0x316807["maxXP"]), _0x19462b, _0xca9042),
      (_0xca9042 += 0x32);
  }),
  (_0x2a684b["prototype"]["lastWastedPopupT"] = 0x0),
  (_0x2a684b["prototype"]["onPlayerWasted"] = function (_0x26a181) {
    if ((_0x168a54 - this["lastWastedPopupT"]) / 0x3e8 > 0.7) {
      this["lastWastedPopupT"] = _0x168a54;
      var _0x4bb9b6 = new _0x2154d2(_0x26a181 + " wasted!", 0x28, "red", 0x5dc);
      this["wastedPopups"]["push"](_0x4bb9b6);
    }
  }),
  (_0x2a684b["prototype"]["lastWastedPopupT"] = 0x0),
  (_0x2a684b["prototype"]["msgDisplayPlayersOnMiniMap"] = function (_0x4ab537) {
    _0x198146 = [];
    var _0x4df449 = _0x4ab537["readUInt16"]();
    for (var _0x4c7f6f = 0x0; _0x4c7f6f < _0x4df449; _0x4c7f6f++) {
      _0x198146["push"]({
        id: _0x4ab537["readUInt32"](),
        x: _0x4ab537["readUInt32"]() / 0x64,
        y: _0x4ab537["readUInt32"]() / 0x64,
        rad: 0x3,
      });
    }
  }),
  (window["WildMope"] = _0x2a684b);

function _0x1e26e6(_0xc32dd1, _0x2565ea, _0x30bb31) {
  _0x5090c5();
  var _0x655216 = document["getElementsByTagName"]("body")[0x0];
  if (_0x655216) {
    var _0x12d632 = document["getElementById"]("gameAreaWrapper"),
      _0x3315c5 = _0x404ce0("mopeshop-popup"),
      _0x36b5d9 = _0x404ce0("msg", _0x2565ea),
      _0x131b99 = _0x404ce0("text");
    _0x131b99["innerHTML"] = _0xc32dd1;
    var _0x316208 = _0x404ce0("closeMsg", "");
    (_0x316208["onclick"] = function () {
      _0x5090c5();
    }),
      _0x36b5d9["appendChild"](_0x316208),
      _0x36b5d9["appendChild"](_0x131b99),
      _0x3315c5["appendChild"](_0x36b5d9),
      _0x655216["insertBefore"](_0x3315c5, _0x12d632),
      _0x30bb31 !== undefined && _0x30bb31 > 0x0 && (console["log"]("timeout:" + _0x30bb31), setTimeout(_0x5090c5, _0x30bb31 * 0x3e8));
  }
}

function _0x5090c5() {
  var _0xa8919 = document["getElementById"]("mopeshop-popup");
  if (_0xa8919) _0xa8919["parentNode"]["removeChild"](_0xa8919);
}

function _0x404ce0(_0x3a693e, _0x211157) {
  var _0x457fd4 = _0x1f8853("div", _0x3a693e, _0x211157);
  return _0x457fd4;
}

function _0x307519(_0x47696d, _0x2158b5, _0x44b2d4) {
  var _0x24dd97 = _0x1f8853("div", _0x47696d, _0x2158b5);
  return (_0x24dd97["innerHTML"] = _0x44b2d4), _0x24dd97;
}
const _0x1624f3 = [];

function _0x1f8853(_0x5d7ff8, _0x34ec4d, _0x5527f4) {
  if (_0x5d7ff8 == undefined) return null;
  var _0x14be93 = document["createElement"](_0x5d7ff8);
  if (_0x34ec4d !== undefined) _0x14be93["id"] = _0x34ec4d;
  if (_0x5527f4 !== undefined) _0x14be93["className"] = _0x5527f4;
  return _0x14be93;
}

function _0xe02e86() {
  var _0x4764a9 = _0x40eddd["coins"];
  if (_0x4764a9 > -0x1) {
    if (("" + _0x4764a9)["length"] > 0xa) return ("" + _0x4764a9)["substring"](0x0, 0x4) + " PI.COINS";
    return _0x4764a9;
  } else return "LOGIN";
}

function _0x21e2d8() {
  return _0x40eddd["coins"] > -0x1;
}

function _0x403646(_0x2bf80a) {
  _0x2bf80a && _0x51b124 ? _0x51b124["loadData"](_0x2bf80a) : ((_0x51b124 = new _0x2f2e34()), _0x51b124["loadData"]());
}
var _0x49e298 = {
  customClassesForOType: {},
  setCustomClassForShopItem: function (_0x38b63b, _0xfc7d24, _0xf02c94) {
    !this["customClassesForOType"][_0xfc7d24] &&
      (this["customClassesForOType"][_0xfc7d24] = {
        oTypeMainClass: null,
        secondaryTypeClasses: {},
      });
    var _0x48e41d = this["customClassesForOType"][_0xfc7d24];
    if (_0xf02c94 == null) {
      if (_0x48e41d["oTypeMainClass"] != null)
        console["log"](
          "ERROR 'GameObjType.setCustomClassForGameObjType': a class (" +
            this["customClassesForOType"][_0xfc7d24] +
            ") is already set for oType " +
            _0xfc7d24 +
            "! Check for duplicate calls!"
        );
      _0x48e41d["oTypeMainClass"] = _0x38b63b;
    } else {
      if (_0xf02c94 in _0x48e41d["secondaryTypeClasses"])
        console["log"](
          "ERROR 'GameObjType.setCustomClassForGameObjType': a class is already set for oType " +
            _0xfc7d24 +
            " AND secondaryType (eg. animalType) " +
            _0xf02c94 +
            "! Check for duplicate calls!"
        );
      _0x48e41d["secondaryTypeClasses"][_0xf02c94] = _0x38b63b;
    }
    this["onClassSet"](_0x38b63b, _0xfc7d24, _0xf02c94);
  },
  getClassForGameObjType: function (_0x333c4c, _0x1f7ca4) {
    if (_0x333c4c in this["customClassesForOType"]) {
      var _0x4736dd = this["customClassesForOType"][_0x333c4c];
      if (_0x1f7ca4 == null || _0x1f7ca4 == 0x0) return _0x4736dd["oTypeMainClass"];
      else {
        if (_0x1f7ca4 in _0x4736dd["secondaryTypeClasses"]) return _0x4736dd["secondaryTypeClasses"][_0x1f7ca4];
        else return _0x4736dd["oTypeMainClass"];
      }
    } else return _0x118b41;
  },
  newlyVis_createGameObjFromMsg: function (_0x570c40, _0xf54208) {
    var _0x3e2d60 = _0xf54208["oType"],
      _0x1d78c2 = null;
    _0x3e2d60 == _0x3fb3b2 && (_0x1d78c2 = _0xf54208["animalType"]);
    var _0x16681f = _0x49e298["createGameObjOfOType"](_0x3e2d60, _0x1d78c2);
    return (_0x16681f["itemType"] = _0x570c40), _0x16681f["worldUpd_readMsgNewlyVisible"](_0xf54208, _0x3e2d60, _0x1d78c2), _0x16681f;
  },
  createGameObjOfOType: function (_0x2142e0, _0x326741) {
    var _0x214f87 = this["getClassForGameObjType"](_0x2142e0, _0x326741),
      _0x2842af = new _0x214f87(_0x2142e0, _0x326741);
    return _0x2842af;
  },
  onClassSet: function (_0x13429b) {},
};
_0x118b41["prototype"] = {
  id: 0x0,
  oType: 0x0,
  itemType: null,
};

function _0x118b41(_0x1f7188) {
  this["oType"] = _0x1f7188;
}
(_0x118b41["prototype"]["setObjTypes"] = function (_0x25b0f6, _0x4ee85c) {
  this["oType"] = _0x25b0f6;
}),
  (_0x118b41["prototype"]["loadShopData"] = function (_0xce1c90) {
    (this["data"] = _0xce1c90),
      (this["id"] = _0xce1c90["id"]),
      (this["itemType"] = _0xce1c90["itemType"]),
      (this["coinsPrice"] = _0xce1c90["coinsPrice"]);
  }),
  (_0x118b41["prototype"]["worldUpd_readMsgNewlyVisible"] = function (_0x256818, _0x27f573, _0x3c1e46) {
    this["setObjTypes"](_0x27f573, _0x3c1e46), this["loadShopData"](_0x256818);
  }),
  (_0x118b41["prototype"]["getImage"] = function () {
    return null;
  }),
  (_0x118b41["prototype"]["generateHtml"] = function () {}),
  (window["ShopItem"] = _0x118b41);
var _0x1d83bb = _0x2bcfe3,
  _0x48c344 = _0x118b41;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344);

function _0x2bcfe3() {
  _0x2bcfe3["superClass"]["call"](this, 0x3e8), (this["oType"] = 0x3e8), (this["itemType"] = 0x1);
}
(_0x2bcfe3["prototype"]["prefix"] = null),
  (_0x2bcfe3["prototype"]["bonus"] = 0x0),
  (_0x2bcfe3["prototype"]["loadShopData"] = function (_0xa1e782) {
    _0x2bcfe3["superClass"]["prototype"]["loadShopData"]["call"](this, _0xa1e782),
      (this["prefix"] = _0xa1e782["prefix"]),
      (this["bonus"] = _0xa1e782["bonus"]),
      (this["value"] = _0xa1e782["value"]);
  }),
  (_0x2bcfe3["prototype"]["worldUpd_readMsgNewlyVisible"] = function (_0x1a6591, _0x403da4, _0x5ee9f8) {
    this["loadShopData"](_0x1a6591);
  }),
  _0x49e298["setCustomClassForShopItem"](_0x2bcfe3, 0x3e8),
  (window["MopeCoin"] = _0x2bcfe3);
var _0x1d83bb = _0x1581ed,
  _0x48c344 = _0x118b41;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344);

function _0x1581ed(_0x264656, _0x3a7dae) {
  _0x1581ed["superClass"]["call"](this, _0x3fb3b2), (this["animalType"] = _0x3a7dae), this["setBiome"](this["animalType"]);
}
(_0x1581ed["prototype"]["setBiome"] = function (_0x128cc2) {
  switch (_0x128cc2) {
    case _0x28027c:
    case _0x1ae9e8:
    case _0x11d87b:
    case _0x2a018e:
    case _0x43a3bb:
    case _0xb5d198:
    case _0x8151b9:
    case _0x2e22f9:
    case _0x19797d:
      (this["biome"] = _0xf851ac), (this["biomeName"] = "Land");
      break;
    case _0x250a37:
    case _0x4d5dff:
    case _0x4f1c79:
    case _0x1c2dd4:
    case _0x573db4:
      (this["biome"] = _0x1940a7), (this["biomeName"] = "Ocean");
      break;
    case _0x448b86:
    case _0x58f094:
    case _0x5ab376:
    case _0x52066d:
      (this["biome"] = _0x5dcee3), (this["biomeName"] = "Arctic");
      break;
    case _0x5eebcf:
    case _0x322b1f:
    case _0x5b1639:
    case _0x3a0961:
      (this["biome"] = _0x4e58f5), (this["biomeName"] = "Volcano");
      break;
    case _0x321383:
    case _0x510716:
    case _0x563a97:
    case _0x3cc7e2:
      (this["biome"] = _0x75a7e2), (this["biomeName"] = "Desert");
      break;
    default:
      break;
  }
}),
  (_0x1581ed["prototype"]["loadShopData"] = function (_0x15b49c) {
    _0x1581ed["superClass"]["prototype"]["loadShopData"]["call"](this, _0x15b49c),
      (this["animalSpecies"] = _0x15b49c["animalSpecies"]),
      (this["shopImg"] = "shop/" + _0x15b49c["shopImg"]),
      (this["skinImage"] = _0x15b49c["skinImage"]),
      (this["skinName"] = _0x15b49c["skinName"]),
      (this["saleType"] = _0x15b49c["saleType"]),
      (this["salePrice"] = _0x15b49c["salePrice"]);
  }),
  (_0x1581ed["prototype"]["setObjTypes"] = function (_0x496553, _0x524169) {
    this["animalType"] = _0x524169;
  }),
  (_0x1581ed["prototype"]["getAnimalName"] = function () {
    switch (this["animalType"]) {
      case _0x388c4c:
        return "rabbit";
      case _0xc58c70:
        return "pig";
      case _0x2e6d2a:
        return "fox";
      case _0x50c9da:
        return "deer";
      case _0x108a58:
        return "mole";
      case _0x1c4f28:
        return "zebra";
      case _0x3cc7bc:
        return "lion";
      case _0x5a5817:
        return "bigcat";
      case _0x15f6e5:
        return "bear";
      case _0x16bb4c:
        return "croc";
      case _0x1e9785:
        return "rhino";
      case _0x8151b9:
        return "hippo";
      case _0x1ae9e8:
        return "dragon";
      case _0x596a1b:
        return "shrimp";
      case _0x3dee49:
        return "trout";
      case _0x2d0ebc:
        return "crab";
      case _0x461353:
        return "squid";
      case _0x261bdf:
        return "shark";
      case _0x2429b5:
        return "stingray";
      case _0x36f1a3:
        return "turtle";
      case _0x4af824:
        return "seahorse";
      case _0x291edb:
        return "jellyfish";
      case _0x4f1c79:
        return "kraken";
      case _0x391550:
        return "pufferfish";
      case _0x573db4:
        return "killerwhale";
      case _0x15f668:
        return "swordfish";
      case _0x33164c:
        return "gorilla";
      case _0x5ac0cd:
        return "octopus";
      case _0x364eae:
        return "wolf";
      case _0xd9bb61:
        return "arctichare";
      case _0x58f094:
        return "yeti";
      case _0x21c202:
        return "chipmunk";
      case _0x50e796:
        return "muskox";
      case _0x83a348:
        return "penguin";
      case _0x33a471:
        return "polarbear";
      case _0x23ab49:
        return "seal";
      case _0x72b8ae:
        return "snowleopard";
      case _0x379cc3:
        return "walrus";
      case _0x31d5ba:
        return "reindeer";
      case _0x19954b:
        return "arcticfox";
      case _0x4a1394:
        return "wolverine";
      case _0x5ab376:
        return "mammoth";
      case _0x3531d4:
        return "donkey";
      case _0x52ce41:
        return "snail";
      case _0x322b1f:
        return "blackdragon";
      case _0x52066d:
        return "sabertoothtiger";
      case _0xb5d198:
        return "elephant";
      case _0x1c2dd4:
        return "bluewhale";
      case _0x1a3bd2:
        return "cobra";
      case _0x2e22f9:
        return "boaconstrictor";
      case _0x2a018e:
        return "giantspider";
      case _0x11d87b:
        return "trex";
      case _0x10ad1f:
        return "tiger";
      case _0x353380:
        return "giraffe";
      case _0x17ab53:
        return "eagle";
      case _0x26c175:
        return "hedgehog";
      case _0x16a65d:
        return "duck";
      case _0x4ca3d5:
        return "duckling";
      case _0x3807fc:
        return "lemming";
      case _0x4d5dff:
        return "kingcrab";
      case _0x483352:
        return "frog";
      case _0x19797d:
        return "ostrich";
      case _0x3d8491:
        return "pelican";
      case _0x58aade:
        return "falcon";
      case _0x533281:
        return "snowyowl";
      case _0x3ae185:
        return "honeybee";
      case _0x3a0961:
        return "phoenix";
      case _0x3b7c87:
        return "ostrichbaby";
      case _0x250a37:
        return "seamonster";
      case _0x5b1639:
        return "landmonster";
      case _0x448b86:
        return "icemonster";
      case _0x28027c:
        return "dinomonster";
      case _0x5b8090:
        return "pigeon";
      case _0x65dffc:
        return "toucan";
      case _0x1ee088:
        return "macaw";
      case _0x5d0d40:
        return "flamingo";
      case _0x43a3bb:
        return "cassowary";
      case _0x37c0ab:
        return "chicken";
      case _0x4da405:
        return "woodpecker";
      case _0x2deb28:
        return "peacock";
      case _0xbd9993:
        return "kangaroorat";
      case _0x2a2687:
        return "desertchipmunk";
      case _0x156fde:
        return "meerkat";
      case _0x4eaba8:
        return "gazelle";
      case _0x299482:
        return "armadillo";
      case _0xe68f0:
        return "fennecfox";
      case _0x353123:
        return "camel";
      case _0x1b8b5e:
        return "warthog";
      case _0x55bfef:
        return "hyena";
      case _0x4310c7:
        return "rattlesnake";
      case _0x2e86d6:
        return "vulture";
      case _0x31f081:
        return "bison";
      case _0x3cc7e2:
        return "komododragon";
      case _0x321383:
        return "giantscorpion";
      case _0x510716:
        return "pterodactyl";
      case _0x3297a2:
        return "gobibear";
      case _0x563a97:
        return "blackwidow";
      case _0x30fd4c:
        return "bulletant";
      case _0x5195b7:
        return "markhor";
    }
  }),
  (_0x1581ed["prototype"]["getSkinPath"] = function (_0x187873) {
    var _0x368814 = this["animalSpecies"] > 0x0 ? this["animalSpecies"] : "",
      _0x4e4926 = _0x51b124["ifMultiAssetSkin"](this["animalType"], this["skinImage"]),
      _0x1e8ab0 = this["skinImage"] == undefined ? this["shopImg"] : "skins/" + _0x4e4926;
    if (_0x187873) _0x1e8ab0 += _0x187873;
    return _0x1e8ab0 + ".png";
  }),
  (_0x1581ed["prototype"]["getShopImageSrc"] = function () {
    return "assets/s/" + this["data"]["season"] + "/" + this["getSkinPath"]();
  }),
  (_0x1581ed["prototype"]["getImage"] = function () {
    var _0x413b4f = new Image();
    return (
      (_0x413b4f["className"] = "animalSkin_" + this["animalType"]),
      (_0x413b4f["src"] = "assets/s/" + this["data"]["season"] + "/" + this["getSkinPath"]()),
      _0x413b4f
    );
  }),
  (_0x1581ed["prototype"]["getImagePromo"] = function (_0xf743c8) {
    var _0xa6e63d = new Image();
    return (
      (_0xa6e63d["className"] = "animalSkin_" + this["animalType"]),
      (_0xa6e63d["src"] = "assets/s/" + this["data"]["season"] + "/" + this["getSkinPath"](_0xf743c8)),
      console["log"]("promo: " + _0xa6e63d["src"]),
      _0xa6e63d
    );
  }),
  (_0x1581ed["prototype"]["getSkinName"] = function () {
    var _0xbec1e9 = this["skinName"];
    return _0xbec1e9["replace"]("\x0a", "<br>");
  }),
  (window["AnimalSkin"] = _0x1581ed),
  _0x49e298["setCustomClassForShopItem"](_0x1581ed, _0x3fb3b2);

function _0x2f2e34() {}
(_0x2f2e34["prototype"]["items"] = []),
  (_0x2f2e34["prototype"]["datatab"] = []),
  (_0x2f2e34["prototype"]["showSeason"] = !![]),
  (_0x2f2e34["prototype"]["getPackageInfo"] = function (_0x2c4748) {}),
  (_0x2f2e34["prototype"]["getFeatureInfo"] = function (_0x5cef82) {
    switch (_0x5cef82) {
      case "feature_1v1redemption_5credits":
        return {
          title: "5 Redemption Credits",
        };
      case "feature_1v1redemption_10credits":
        return {
          title: "10 Redemption Credits",
        };
      case "feature_1v1redemption_20credits":
        return {
          title: "20 Redemption Credits",
        };
    }
  }),
  (_0x2f2e34["prototype"]["getAnimalInfo"] = function (_0x51be12) {
    switch (_0x51be12) {
      case "halloween_wyrmous":
        return [_0x1a3bd2, 0x64, "Wyrmous", "land/cobra/100/cobra"];
      case "halloween_equusthulhu":
        return [_0x3531d4, 0x64, "Equusthulhu", "land/donkey/100/donkey"];
      case "halloween_frostaline":
        return [_0x72b8ae, 0x64, "Frostaline", "arctic/snowleopard/100/snowleopard"];
      case "halloween_pufferMace":
        return [_0x391550, 0x64, "Puffermace", "ocean/pufferfish/100/pufferfish"];
      case "halloween_carnageodactyl":
        return [_0x510716, 0x64, "Carnageodactyl", "desert/pterodactyl/100/pterodactyl_ability"];
      case "halloween_mrDollar":
        return [_0x11d87b, 0x64, "Mr. Dollar", "land/trex/100/trex"];
      case "halloween_wendigoDeer":
        return [_0x50c9da, 0x64, "The Wendigo", "land/deer/100/deer"];
      case "halloween_cactiRat":
        return [_0xbd9993, 0x64, "Cacti Rat", "desert/kangaroorat/100/kangaroorat"];
      case "halloween_hiPower":
        return [_0x8151b9, 0x64, "Swampster", "land/hippo/100/hippo"];
      case "halloween_puumpkat":
        return [_0x156fde, 0x64, "Puumpkat", "desert/meerkat/100/meerkat"];
      case "halloween_doomedarius":
        return [_0x353123, 0x64, "The Doomedarius", "desert/camel/100/camel"];
      case "halloween_roboMouse":
        return [_0x659012, 0x64, "Robo Mouse", "land/mouse/100/mouse"];
      case "halloween_uncleSam":
        return [_0x16bb4c, 0x64, "Uncle Sam", "land/croc/100/croc"];
      case "halloween_zombieMole":
        return [_0x108a58, 0x64, "Zombie Mole", "land/mole/100/mole"];
      case "halloween_flammyHart":
        return [_0x4eaba8, 0x64, "Flammy Hart", "desert/gazelle/100/gazelle"];
      case "halloween_gummyViper":
        return [_0x4310c7, 0x64, "Gummy Viper", "desert/rattlesnake/100/rattlesnake"];
      case "halloween_grimRipper":
        return [_0x33164c, 0x64, "Grim Reaper", "land/gorilla/100/gorilla"];
      case "halloween_bigCookie":
        return [_0x5a5817, 0x64, "Big Cookie", "land/bigcat/100/bigcat"];
      case "halloween_gargolgon":
        return [_0x1ae9e8, 0x64, "The Gargon", "land/dragon/100/dragon"];
      case "halloween_candyRus":
        return [_0x379cc3, 0x64, "Candy Rus", "arctic/walrus/100/walrus"];
      case "halloween_mantilian":
        return [_0x3cc7bc, 0x64, "The Mantilian", "land/lion/100/lion"];
      case "halloween_phantomRay":
        return [_0x2429b5, 0x64, "Phantom Ray", "ocean/stingray/100/stingray"];
      case "halloween_suitedToucan":
        return [_0x65dffc, 0x64, "The Dapper", "land/toucan/100/toucan"];
      case "halloween_vulgeist":
        return [_0x2e86d6, 0x64, "The Vulgeist", "desert/vulture/100/vulture"];
      case "halloween_burlone":
        return [_0x1b8b5e, 0x64, "The Burlone", "desert/warthog/100/warthog"];
      case "halloween_unicornze":
        return [_0x1c4f28, 0x64, "Unicornze", "land/zebra/100/zebra"];
      case "gold_blackDragon":
        return [_0x322b1f, 0x1, "Golden\x0aBlack Dragon", "volcano/blackdragon/1/blackdragon"];
      case "gold_kingDragon":
        return [_0x5eebcf, 0x1, "Golden\x0aKing Dragon", "volcano/kingdragon/1/kingdragon"];
      case "gold_Dragon":
        return [_0x1ae9e8, 0x1, "Golden\x0aDragon", "land/dragon/1/dragon"];
      case "gold_kraken":
        return [_0x4f1c79, 0x1, "Golden\x0aKraken", "ocean/kraken/1/kraken"];
      case "gold_yeti":
        return [_0x58f094, 0x1, "Golden\x0aYeti", "arctic/yeti/1/yeti"];
      case "gold_trex":
        return [_0x11d87b, 0x1, "Golden\x0aT.Rex", "land/trex/1/trex"];
      case "gold_kingCrab":
        return [_0x4d5dff, 0x1, "GoldenCrab", "ocean/kingcrab/1/kingcrab"];
      case "gold_phoenix":
        return [_0x3a0961, 0x1, "Golden\x0aPhoenix", "volcano/phoenix/1/phoenix"];
      case "gold_pterodactyl":
        return [_0x510716, 0x1, "Golden\x0aPterodactyl", "desert/pterodactyl/1/pterodactyl_ability"];
      case "gold_iceMonster":
        return [_0x448b86, 0x1, "Golden\x0aIce Monster", "arctic/icemonster/1/icemonster"];
      case "gold_dinoMonster":
        return [_0x28027c, 0x1, "Golden\x0aDino Monster", "land/dinomonster/1/dinomonster"];
      case "gold_seaMonster":
        return [_0x250a37, 0x1, "Golden\x0aSea Monster", "ocean/seamonster/1/seamonster"];
      case "gold_landMonster":
        return [_0x5b1639, 0x1, "Golden\x0aLand Monster", "volcano/landmonster/1/landmonster"];
      case "gold_giantScorion":
        return [_0x321383, 0x1, "Golden\x0aGiant Scorpion", "desert/scorpion/1/giantscorpion"];
      case "gold_bluewhale":
        return [_0x1c2dd4, 0x1, "Golden\x0aBlue Whale", "ocean/bluewhale/1/bluewhale"];
      case "gold_elephant":
        return [_0xb5d198, 0x1, "Golden\x0aElephant", "land/elephant/1/elephant"];
      case "gold_cassowary":
        return [_0x43a3bb, 0x1, "Golden\x0aCassowary", "land/cassowary/1/cassowary"];
      case "gold_giantspider":
        return [_0x2a018e, 0x1, "Golden\x0aGiant Spider", "land/giantspider/1/giantspider"];
      case "gold_blackwidow":
        return [_0x563a97, 0x1, "Golden\x0aBlackwidow", "desert/blackwidow/1/blackwidow"];
      case "gold_mammoth":
        return [_0x5ab376, 0x1, "Golden\x0aMammoth", "arctic/mammoth/1/mammoth"];
      case "gold_hippo":
        return [_0x8151b9, 0x1, "Golden\x0aHippo", "land/hippo/1/hippo"];
      case "gold_ostrich":
        return [_0x19797d, 0x1, "Golden\x0aOstrich", "land/ostrich/1/ostrich"];
      case "gold_boa":
        return [_0x2e22f9, 0x1, "Golden\x0aBoa", "land/boaconstrictor/1/boaconstrictor"];
      case "gold_komodo":
        return [_0x3cc7e2, 0x1, "Golden\x0aKomodo", "desert/komododragon/1/komodo"];
      case "gold_killerwhale":
        return [_0x573db4, 0x1, "Golden\x0aKiller Whale", "ocean/killerwhale/1/killerwhale"];
      case "gold_sabertooth":
        return [_0x52066d, 0x1, "Golden\x0aSabertooth", "arctic/sabertooth/1/sabertooth"];
      case "skin_blueDragon":
        return [_0x322b1f, 0x2, "The\x0aAzure Bringer", "volcano/blackdragon/2/blackdragon"];
      case "skin_kingRipper":
        return [_0x5eebcf, 0x2, "King\x0aRipper", "volcano/kingdragon/2/kingdragon"];
      case "skin_kingStan":
        return [_0x5eebcf, 0x3, "King\x0aStan", "volcano/kingdragon/3/kingdragon"];
      case "skin_kingShah":
        return [_0x5eebcf, 0x4, "King\x0aShah", "volcano/kingdragon/4/kingdragon"];
      case "skin_dragon_gray":
        return [_0x1ae9e8, 0x2, "Knight\x0aDragon", "land/dragon/2/dragon"];
      case "skin_kraken_cyan":
        return [_0x4f1c79, 0x2, "Chromatic\x0aKraken", "ocean/kraken/2/kraken"];
      case "skin_yeti_emerald":
        return [_0x58f094, 0x2, "Emerald\x0aYeti", "arctic/yeti/2/yeti"];
      case "skin_snowman":
        return [_0x6ff36b, 0x1, "The\x0aSnowman", "arctic/snowman/1/snowman"];
      case "skin_snowgirl":
        return [_0x6ff36b, 0x2, "The\x0aSnowgirl", "arctic/snowman/2/snowgirl"];
      case "skin_trex_gray":
        return [_0x11d87b, 0x2, "Ember\x0aT.Rex", "land/trex/2/trex"];
      case "skin_kingCrab":
        return [_0x4d5dff, 0x2, "Amethyst\x0aCrab", "ocean/kingcrab/2/kingcrab"];
      case "skin_phoenix_blue":
        return [_0x3a0961, 0x2, "Alpha\x0aPhoenix", "volcano/phoenix/2/phoenix"];
      case "skin_pterodactyl_green":
        return [_0x510716, 0x2, "Emerald\x0aPterodactyl", "desert/pterodactyl/2/pterodactyl_ability"];
      case "skin_iceMonster":
        return [_0x448b86, 0x2, "Amethyst\x0aMonster", "arctic/icemonster/2/icemonster"];
      case "skin_dinoMonster":
        return [_0x28027c, 0x2, "Citrine\x0aMonster", "land/dinomonster/2/dinomonster"];
      case "skin_seaMonster":
        return [_0x250a37, 0x2, "Sapphire\x0aMonster", "ocean/seamonster/2/seamonster"];
      case "skin_landMonster":
        return [_0x5b1639, 0x2, "Titanite\x0aMonster", "volcano/landmonster/2/landmonster"];
      case "skin_orangeScorpion":
        return [_0x321383, 0x2, "Carnelian\x0aScorpion", "desert/scorpion/2/giantscorpion"];
      case "skin_bluewhale":
        return [_0x1c2dd4, 0x2, "Albino\x0aBlue Whale", "ocean/bluewhale/2/bluewhale"];
      case "skin_elephant":
        return [_0xb5d198, 0x2, "White\x0aElephant", "land/elephant/2/elephant"];
      case "skin_cassowary":
        return [_0x43a3bb, 0x2, "Cotton\x0aCassowary", "land/cassowary/2/cassowary"];
      case "skin_giantspider":
        return [_0x2a018e, 0x2, "Goliath\x0aSpider", "land/giantspider/2/giantspider"];
      case "skin_blackwidow":
        return [_0x563a97, 0x2, "Queen\x0aBlackwidow", "desert/blackwidow/2/blackwidow"];
      case "skin_mammoth":
        return [_0x5ab376, 0x2, "Black\x0aMammoth", "arctic/mammoth/2/mammoth"];
      case "skin_hippo":
        return [_0x8151b9, 0x2, "Pygmy\x0aHippo", "land/hippo/2/hippo"];
      case "skin_ostrich":
        return [_0x19797d, 0x2, "Ruffled\x0aOstrich", "land/ostrich/2/ostrich"];
      case "skin_boa":
        return [_0x2e22f9, 0x2, "Tree\x0aBoa", "land/boaconstrictor/2/boaconstrictor"];
      case "skin_komodo":
        return [_0x3cc7e2, 0x2, "Night\x0aKomodo", "desert/komododragon/2/komodo"];
      case "skin_killerwhale":
        return [_0x573db4, 0x2, "Albino\x0aOrca", "ocean/killerwhale/2/killerwhale"];
      case "skin_sabertooth":
        return [_0x52066d, 0x2, "Margala\x0aSabertooth", "arctic/sabertooth/2/sabertooth"];
      case "skin_tigerShark":
        return [_0x261bdf, 0x2, "Tiger\x0aShark", "ocean/shark/1/shark", !![]];
      case "skin_hamerHeadShark":
        return [_0x261bdf, 0x3, "Hammerhead\x0aShark", "ocean/shark/2/shark", !![]];
      case "skin_panda":
        return [_0x15f6e5, 0x2, "Panda", "land/panda/panda", !![]];
      case "skin_zonkey":
        return [_0x3531d4, 0x3, "Zonkey", "land/donkey/2/zonkey", !![]];
      case "skin_okapi":
        return [_0x1c4f28, 0x2, "Okapi", "land/okapi/okapi", !![]];
      case "skin_giantCroc":
        return [_0x16bb4c, 0x2, "Giant\x0aCrocodile", "land/croc/1/croc", !![]];
      case "skin_purpleMouse":
        return [_0x659012, 0x2, "Purple\x0aMouse", "land/mouse/2/mouse", !![]];
      case "skin_prismaToucan":
        return [_0x65dffc, 0x6, "Prisma\x0aToucan", "land/toucan/6/toucan", !![]];
      case "gold_mouse":
        return [_0x659012, 0x2, "Golden\x0aMouse", "land/mouse/1/mouse", !![]];
      case "skin_queenScarlet":
        return [_0x5eebcf, 0x5, "Queen\x0aScarlet", "volcano/kingdragon/5/kingdragon", !![]];
      case "skin_queenCeleste":
        return [_0x5eebcf, 0x6, "Queen\x0aCeleste", "volcano/kingdragon/6/kingdragon", !![]];
      case "skin_bigFoot":
        return [_0x511c71, 0x1, "The\x0aBigfoot", "land/bigfoot/thebigfoot", !![]];
      case "skin_woollyRhino":
        return [_0x1e9785, 0x3, "Woolly\x0aRhino", "land/rhino/3/rhino", !![]];
    }
    return null;
  }),
  (_0x2f2e34["prototype"]["loadData"] = function () {
    _0x1987ee(function (_0x230f88, _0x154f4e) {
      var _0x33ea8d = {
        shopItems: [],
        settings: [],
      };
      if (!_0x230f88) {
        _0x1e26e6("Could not connect to AccountServer!", "itemDoesntExist", 0x5);
        return;
      }
      console["log"](_0x154f4e);
      if (_0x154f4e) {
        for (var _0x4a28cf = 0x0; _0x4a28cf < _0x154f4e["shopItems"]["length"]; _0x4a28cf++) {
          var _0x5a5762 = _0x154f4e["shopItems"][_0x4a28cf];
          _0x5a5762["purchasedByPlayer"] && (_0x5a5762["coinsPrice"] = -0x1), _0x33ea8d["shopItems"]["push"](_0x5a5762);
        }
        if (_0x154f4e["settings"])
          for (var _0x4a28cf = 0x0; _0x4a28cf < _0x154f4e["settings"]["length"]; _0x4a28cf++) {
            _0x33ea8d["settings"]["push"](_0x154f4e["settings"][_0x4a28cf]);
          }
      }
      var _0x164025 = {
          tab: "Skins",
          shopItems: [],
        },
        _0x1096a5 = {
          tab: "Golden",
          shopItems: [],
        },
        _0x40e15d = {
          tab: "Locked",
          shopItems: [],
        },
        _0x20be50 = {
          tab: "Halloween",
          shopItems: [],
        },
        _0x16fb67 = {
          tab: "Deals",
          shopItems: [],
        },
        _0x3cf76c = {
          tab: "Features",
          shopItems: [],
        },
        _0x11ac42 = [],
        _0x20287c = [_0x164025, _0x3cf76c, _0x16fb67];
      for (_0x4a28cf = 0x0; _0x4a28cf < _0x33ea8d["shopItems"]["length"]; _0x4a28cf++) {
        var _0x2665c3 = _0x33ea8d["shopItems"][_0x4a28cf];
        switch (_0x2665c3["shopCategory"]) {
          case "halloween":
          case "locked":
          case "gold":
            {
              var _0x25a162 = _0x2f2e34["prototype"]["getAnimalInfo"](_0x2665c3["itemName"], _0x2665c3);
              _0x25a162 &&
                ((_0x2665c3["id"] = _0x2665c3["itemName"]),
                (_0x2665c3["oType"] = _0x3fb3b2),
                (_0x2665c3["animalType"] = _0x25a162[0x0]),
                (_0x2665c3["animalSpecies"] = _0x25a162[0x1]),
                (_0x2665c3["skinName"] = _0x25a162[0x2]),
                (_0x2665c3["skinImage"] = _0x25a162[0x3]),
                _0x164025["shopItems"]["push"](_0x2665c3));
            }
            break;
          case "feature":
            {
              if (_0x2665c3["itemType"] == "animal") {
                var _0x25a162 = _0x2f2e34["prototype"]["getAnimalInfo"](_0x2665c3["itemName"]);
                _0x25a162
                  ? ((_0x2665c3["id"] = _0x2665c3["itemName"]),
                    (_0x2665c3["oType"] = _0x3fb3b2),
                    (_0x2665c3["animalType"] = _0x25a162[0x0]),
                    (_0x2665c3["animalSpecies"] = _0x25a162[0x1]),
                    (_0x2665c3["skinName"] = _0x25a162[0x2]),
                    (_0x2665c3["skinImage"] = _0x25a162[0x3]),
                    _0x3cf76c["shopItems"]["push"](_0x2665c3))
                  : console["log"]("No animal type data for shop item " + _0x2665c3["itemName"]);
              } else {
                if (_0x2665c3["itemType"] == "feature") {
                  var _0x4357ed = _0x2f2e34["prototype"]["getFeatureInfo"](_0x2665c3["itemName"]) || {
                    title: "Feature",
                  };
                  (_0x2665c3["id"] = _0x2665c3["itemName"]),
                    (_0x2665c3["oType"] = _0x36cf4f),
                    (_0x2665c3["title"] = _0x4357ed["title"]),
                    _0x3cf76c["shopItems"]["push"](_0x2665c3);
                }
              }
            }
            break;
          case "deal":
            {
              (_0x2665c3["id"] = _0x2665c3["itemName"]), (_0x2665c3["oType"] = _0x5038f9), _0x16fb67["shopItems"]["push"](_0x2665c3);
            }
            break;
          default:
        }
      }
      var _0x59178d = {
        skins: _0x20287c,
      };
      _0x2f2e34["prototype"]["shop"] = {
        ownedSkins: [],
        ownedAnimals: [],
        ownedDeals: [],
        ownedProps: [],
        settings: _0x33ea8d["settings"],
        skins: [],
        props: [],
        banners: _0x33ea8d["banners"],
      };
      var _0x47a691 = [],
        _0x4d0ae2 = [];
      for (t = 0x0; t < _0x59178d["skins"]["length"]; t++) {
        var _0x11bd22 = _0x59178d["skins"][t];
        for (_0x4a28cf = 0x0; _0x4a28cf < _0x11bd22["shopItems"]["length"]; _0x4a28cf++) {
          var _0x85fd13 = _0x11bd22["shopItems"][_0x4a28cf],
            _0x5b33d7 = _0x49e298["newlyVis_createGameObjFromMsg"](_0x85fd13["itemType"], _0x85fd13);
          if (_0x85fd13["isTemporary"]) _0x5b33d7["isTemporary"] = !![];
          if (_0x5b33d7["coinsPrice"] == -0x1 && _0x5b33d7["data"]["itemType"] == "skin")
            !_0x2f2e34["prototype"]["shop"]["ownedSkins"][_0x85fd13["itemName"]] &&
              ((_0x2f2e34["prototype"]["shop"]["ownedSkins"][_0x85fd13["itemName"]] = _0x5b33d7),
              _0x2f2e34["prototype"]["shop"]["ownedSkins"]["push"](_0x5b33d7));
          else {
            if (_0x5b33d7["coinsPrice"] == -0x1 && _0x5b33d7["data"]["itemType"] == "animal")
              !_0x2f2e34["prototype"]["shop"]["ownedAnimals"][_0x85fd13["itemName"]] &&
                ((_0x2f2e34["prototype"]["shop"]["ownedAnimals"][_0x85fd13["itemName"]] = _0x5b33d7),
                _0x2f2e34["prototype"]["shop"]["ownedAnimals"]["push"](_0x5b33d7));
            else
              _0x5b33d7["coinsPrice"] == -0x1 &&
                _0x5b33d7["data"]["itemType"] == "deal" &&
                _0x2f2e34["prototype"]["shop"]["ownedDeals"]["push"](_0x5b33d7);
          }
          if (_0x85fd13["saleType"] > -0x1 && _0x85fd13["canBuy"] == !![]) _0x47a691["push"](_0x5b33d7);
          else _0x4d0ae2["push"](_0x5b33d7);
        }
      }
      _0x2f2e34["prototype"]["shop"]["allItems"] = _0x47a691;
      for (d = 0x0; d < _0x2f2e34["prototype"]["shop"]["ownedDeals"]["length"]; d++) {
        var _0x77d792 = _0x2f2e34["prototype"]["shop"]["ownedDeals"][d];
        for (s = 0x0; s < _0x47a691["length"]; s++) {
          var _0x85fd13 = _0x47a691[s];
          _0x85fd13["data"]["promotions"] !== undefined &&
            _0x85fd13["data"]["promotions"]["length"] > 0x0 &&
            _0x85fd13["data"]["promotions"]["indexOf"](_0x77d792["itemName"]) > -0x1 &&
            (console["log"](_0x47a691[s]),
            (_0x85fd13["coinsPrice"] = -0x1),
            !_0x2f2e34["prototype"]["shop"]["ownedSkins"][_0x85fd13["data"]["itemName"]] &&
              _0x2f2e34["prototype"]["shop"]["ownedSkins"]["push"](_0x85fd13));
        }
        for (s = 0x0; s < _0x4d0ae2["length"]; s++) {
          var _0x85fd13 = _0x4d0ae2[s];
          _0x85fd13["data"]["promotions"] !== undefined &&
            _0x85fd13["data"]["promotions"]["length"] > 0x0 &&
            _0x85fd13["data"]["promotions"]["indexOf"](_0x77d792["itemName"]) > -0x1 &&
            ((_0x85fd13["coinsPrice"] = -0x1),
            !_0x2f2e34["prototype"]["shop"]["ownedSkins"][_0x85fd13["data"]["itemName"]] &&
              _0x2f2e34["prototype"]["shop"]["ownedSkins"]["push"](_0x85fd13));
        }
      }
      for (_0x4a28cf = 0x0; _0x4a28cf < _0x2f2e34["prototype"]["shop"]["allItems"]["length"]; _0x4a28cf++) {
        _0x2f2e34["prototype"]["shop"]["allItems"][_0x2f2e34["prototype"]["shop"]["allItems"][_0x4a28cf]["data"]["itemName"]] =
          _0x2f2e34["prototype"]["shop"]["allItems"][_0x4a28cf];
      }
      for (t = 0x0; t < _0x59178d["skins"]["length"]; t++) {
        var _0x11bd22 = _0x59178d["skins"][t],
          _0xcb75d7 = _0x11bd22["tab"],
          _0x18bf47 = {
            name: _0xcb75d7,
            items: [],
          };
        _0x2f2e34["prototype"]["shop"]["skins"]["push"](_0x18bf47), (_0x2f2e34["prototype"]["shop"]["skins"][_0xcb75d7] = _0x18bf47);
        for (_0x4a28cf = 0x0; _0x4a28cf < _0x11bd22["shopItems"]["length"]; _0x4a28cf++) {
          var _0x85fd13 = _0x11bd22["shopItems"][_0x4a28cf];
          for (a = 0x0; a < _0x47a691["length"]; a++) {
            var _0x251b02 = _0x47a691[a];
            _0x85fd13["id"] == _0x251b02["id"] && _0x251b02["coinsPrice"] > -0x1 && _0x18bf47["items"]["push"](_0x251b02);
          }
        }
      }
      $bus["emit"]($bus["EVENTS"]["LOADED_SHOP_DATA"], {
        shopData: {
          ..._0x2f2e34["prototype"]["shop"],
        },
        responseObject: _0x154f4e,
      });
    });
  }),
  (_0x2f2e34["prototype"]["ownedItems"] = new Array()),
  (_0x2f2e34["prototype"]["shop"] = null),
  (_0x2f2e34["prototype"]["shopDiv"] = null),
  (_0x2f2e34["prototype"]["callback"] = null);
var _0x50e89b = 0x0,
  _0x4b9577 = 0x1,
  _0x33290f = 0x2;
(_0x2f2e34["prototype"]["upgradeMenu_callback"] = null),
  $bus["on"]($bus["EVENTS"]["UI_PURCHASE_SHOP_ITEM"], (_0x310ef2) => {
    _0x2b8bd6(_0x310ef2, function (_0x3fa5f2, _0xe412ce) {
      if (_0x3fa5f2)
        $bus["emit"]($bus["EVENTS"]["PURCHASE_ITEM_RESPONSE"], {
          success: !![],
          itemName: _0x310ef2,
        }),
          _0x2f3261(),
          _0x403646();
      else
        switch (_0xe412ce) {
          case "alreadyowned":
            $bus["emit"]($bus["EVENTS"]["PURCHASE_ITEM_RESPONSE"], {
              success: ![],
              itemName: _0x310ef2,
              error: "AccountServer: item already purchased!",
            });
            break;
          case "cantafford":
            $bus["emit"]($bus["EVENTS"]["PURCHASE_ITEM_RESPONSE"], {
              success: ![],
              itemName: _0x310ef2,
              error: "AccountServer: not enough coins to buy this!",
            });
            break;
          case "itemDoesntExist":
            $bus["emit"]($bus["EVENTS"]["PURCHASE_ITEM_RESPONSE"], {
              success: ![],
              itemName: _0x310ef2,
              error: "AccountServer: Item doesn't exist!",
            });
            break;
          default:
            $bus["emit"]($bus["EVENTS"]["PURCHASE_ITEM_RESPONSE"], {
              success: ![],
              itemName: _0x310ef2,
              error: "Failed to purchase item",
            });
            break;
        }
    });
  }),
  (_0x2f2e34["prototype"]["getSkinPath"] = function (_0xd66b53, _0x451e62) {
    console["log"]("getskin path");
    var _0x57dd46 = _0x17bf26["createGameObjOfOType"](_0x3fb3b2, _0xd66b53);
    (_0x57dd46["animalType"] = _0xd66b53),
      (_0x57dd46["animalSpecies"] = 0x0),
      (_0x57dd46["animalSubSpecies"] = 0x0),
      (_0x57dd46["animalPremiumSkin"] = 0x0),
      (_0x57dd46["curBiome"] = 0x0),
      (_0x57dd46["lava"] = 0x64),
      (_0x57dd46["mopeSeasonID"] = 0x0),
      (_0x57dd46["skinThemeID"] = _0x451e62);
    var _0x3c1009 = _0x57dd46["animalInfo"](),
      _0xc55712 = _0x57dd46["getSkinImagePathForShop"](_0x3c1009["skinName"]);
    return (_0xc55712 = this["ifMultiAssetSkin"](_0xd66b53, _0xc55712)), _0xc55712 + ".png";
  }),
  (_0x2f2e34["prototype"]["ifMultiAssetSkin"] = function (_0x2c0135, _0x332f09) {
    switch (_0x2c0135) {
      case 0x13:
      case 0x1d:
      case 0x1b:
      case 0x14:
      case 0x12:
      case 0x17:
      case _0x391550:
        _0x332f09 = _0x332f09;
        break;
    }
    return _0x332f09;
  }),
  (_0x2f2e34["prototype"]["getPostFixForItem"] = function (_0x55372b) {
    switch (_0x55372b) {
      case "halloween_pufferMace":
        return "1";
    }
    return null;
  }),
  (_0x2f2e34["prototype"]["createField"] = function (_0x37c70e, _0x5b408b, _0x5ae899, _0x54b41f, _0x2bdb5b) {
    var _0x28d849 = _0x404ce0("", _0x5ae899),
      _0x37c70e = _0x404ce0("", _0x54b41f),
      _0x5b408b = _0x404ce0("", _0x2bdb5b);
    return _0x28d849["appendChild"](_0x37c70e), _0x28d849["appendChild"](_0x5b408b), _0x28d849;
  }),
  (_0x2f2e34["prototype"]["addCloseButton"] = function (_0x2cb742) {
    var _0x21feeb = _0x1f8853("div", "close-shop");
    (_0x21feeb["onclick"] = function () {
      closeShop();
    }),
      (_0x21feeb["innerHTML"] = "X"),
      _0x2cb742["appendChild"](_0x21feeb);
  }),
  (_0x2f2e34["prototype"]["updateCoinsBalance"] = function () {
    console["log"]("coins balance updated");
    var _0x40a14c = _0x40eddd;
    (_0x40a14c["level"] = Math["round"](_0x103b73(0x1, 0xa))), (_0x40a14c["xp"] = 0x32), (_0x40a14c["xpNextLvl"] = _0x40a14c["xp"] + 0x12c);
    var _0x125c16 = Math["round"](_0x40a14c["xp"]),
      _0x4bc9f8 = document["getElementById"]("coins");
    if (_0x4bc9f8) {
      _0x4bc9f8["innerHTML"] = this["coinsFormat"](_0xe02e86());
      var _0x5514bc = document["getElementById"]("userxp-barbar"),
        _0x522ac1 = document["getElementById"]("userxp-val"),
        _0x12cc2c = document["getElementById"]("userxp-star");
      (_0x522ac1["innerHTML"] = _0x125c16 + " / " + _0x40a14c["xpNextLvl"]),
        (_0x125c16 = (_0x125c16 / _0x40a14c["xpNextLvl"]) * 0x64),
        (_0x5514bc["style"]["width"] = _0x125c16 + "px"),
        (_0x12cc2c["innerHTML"] = _0x40a14c["level"]);
    }
    var _0x4baf21 = document["getElementById"]("coins2");
    if (_0x4baf21) {
      _0x4baf21["innerHTML"] = _0xe02e86();
      var _0x5514bc = document["getElementById"]("userxp-barbar2"),
        _0x522ac1 = document["getElementById"]("userxp-val2"),
        _0x12cc2c = document["getElementById"]("userxp-star2");
      (_0x522ac1["innerHTML"] = _0x125c16 + " / " + _0x40a14c["xpNextLvl"]),
        (_0x125c16 = (_0x125c16 / _0x40a14c["xpNextLvl"]) * 0x64),
        (_0x5514bc["style"]["width"] = _0x125c16 + "px"),
        (_0x12cc2c["innerHTML"] = _0x40a14c["level"]);
    }
  }),
  (_0x2f2e34["prototype"]["coinsFormat"] = function (_0x76c661) {
    console["log"]("coinsFormat");
    var _0x4466d9 = "" + _0x76c661;
    return (_0x4466d9 = _0x4466d9["toString"]()["replace"](/\B(?=(\d{3})+(?!\d))/g, ",")), _0x4466d9;
  }),
  (_0x2f2e34["prototype"]["enableClothingShop"] = ![]),
  (_0x2f2e34["prototype"]["getItemByName"] = function (_0x1ffde4) {
    if (this["shop"]["allItems"])
      for (i = 0x0; i < this["shop"]["allItems"]["length"]; i++) {
        if (this["shop"]["allItems"][i]["itemName"] == _0x1ffde4) return this["shop"]["allItems"][i];
      }
    return null;
  }),
  (_0x2f2e34["prototype"]["deleteTab"] = function () {
    var _0x5ae37a = document["getElementById"]("shop_div");
    _0x5ae37a && _0x5ae37a["parentNode"]["removeChild"](_0x5ae37a);
  }),
  (_0x2f2e34["prototype"]["getShopFilters"] = function () {}),
  $bus["on"]($bus["EVENTS"]["PLAY_CLICK_SOUND"], () => {
    _0x50f00f();
  }),
  (_0x2f2e34["prototype"]["props"] = {
    hatsColor: "",
    beardsColor: "",
    glassesColor: "",
    scarfsColor: "",
  }),
  (_0x2f2e34["prototype"]["propBought"] = {
    hats: {
      white: 0x1,
      red: 0x0,
      green: 0x0,
      blue: 0x1,
      pink: 0x0,
      gold: 0x0,
    },
    beards: {
      white: 0x0,
      red: 0x1,
      green: 0x0,
      blue: 0x0,
      pink: 0x0,
      gold: 0x1,
    },
    glasses: {
      white: 0x0,
      red: 0x1,
      green: 0x1,
      blue: 0x0,
      pink: 0x0,
      gold: 0x0,
    },
    scarfs: {
      white: 0x0,
      red: 0x1,
      green: 0x0,
      blue: 0x1,
      pink: 0x0,
      gold: 0x1,
    },
  }),
  (_0x2f2e34["prototype"]["hasBoughtProp"] = function (_0x37bd96, _0x3dcc72) {
    var _0x3a3e35 = this["propBought"][_0x37bd96][_0x3dcc72];
    if (_0x3a3e35 === 0x1) return !![];
    return ![];
  }),
  (_0x2f2e34["prototype"]["isPropSelected"] = function (_0x56a1da, _0x3dc636) {
    var _0x9c56a0 = this["getPropColorNum"](_0x3dc636),
      _0x5323a3 = this["props"][_0x56a1da + "Color"];
    return _0x5323a3 === _0x9c56a0;
  }),
  (_0x2f2e34["prototype"]["showProp"] = function (_0x2e2c5f) {
    var _0x3d4fcd = document["getElementById"]("propDisplay");
    _0x3d4fcd["style"]["display"] = "block";
    var _0x52baeb = document["getElementById"]("btn-" + _0x2e2c5f);
    if (_0x52baeb) {
      var _0x1ced72 = document["getElementById"]("btn-hats"),
        _0x46fd45 = document["getElementById"]("btn-glasses"),
        _0x299f34 = document["getElementById"]("btn-beards"),
        _0x1495a3 = document["getElementById"]("btn-scarfs");
      (_0x1ced72["className"] = "clothingbtn"),
        (_0x46fd45["className"] = "clothingbtn"),
        (_0x299f34["className"] = "clothingbtn"),
        (_0x1495a3["className"] = "clothingbtn"),
        (_0x52baeb["className"] = "clothingbtn selected");
      var _0xccd329 = document["getElementById"]("propColors");
      _0xccd329["innerHTML"] = "";
      var _0xcbe6ef = _0x1f8853(
          "div",
          "propColor-white",
          "propColor propColor-white" +
            (this["isPropSelected"](_0x2e2c5f, "white") ? " selected" : "") +
            (this["hasBoughtProp"](_0x2e2c5f, "white") ? " bought" : "")
        ),
        _0x39461a = _0x1f8853(
          "div",
          "propColor-red",
          "propColor propColor-red" +
            (this["isPropSelected"](_0x2e2c5f, "red") ? " selected" : "") +
            (this["hasBoughtProp"](_0x2e2c5f, "red") ? " bought" : "")
        ),
        _0x1a821d = _0x1f8853(
          "div",
          "propColor-green",
          "propColor propColor-green" +
            (this["isPropSelected"](_0x2e2c5f, "green") ? " selected" : "") +
            (this["hasBoughtProp"](_0x2e2c5f, "green") ? " bought" : "")
        ),
        _0x42a4dc = _0x1f8853(
          "div",
          "propColor-blue",
          "propColor propColor-blue" +
            (this["isPropSelected"](_0x2e2c5f, "blue") ? " selected" : "") +
            (this["hasBoughtProp"](_0x2e2c5f, "blue") ? " bought" : "")
        ),
        _0x589608 = _0x1f8853(
          "div",
          "propColor-pink",
          "propColor propColor-pink" +
            (this["isPropSelected"](_0x2e2c5f, "pink") ? " selected" : "") +
            (this["hasBoughtProp"](_0x2e2c5f, "pink") ? " bought" : "")
        ),
        _0x26c540 = _0x1f8853(
          "div",
          "propColor-gold",
          "propColor propColor-gold" +
            (this["isPropSelected"](_0x2e2c5f, "gold") ? " selected" : "") +
            (this["hasBoughtProp"](_0x2e2c5f, "gold") ? " bought" : "")
        );
      _0xcbe6ef["appendChild"](_0x1f8853("div", "", "color")),
        _0x39461a["appendChild"](_0x1f8853("div", "", "color")),
        _0x1a821d["appendChild"](_0x1f8853("div", "", "color")),
        _0x42a4dc["appendChild"](_0x1f8853("div", "", "color")),
        _0x589608["appendChild"](_0x1f8853("div", "", "color")),
        _0x26c540["appendChild"](_0x1f8853("div", "", "color")),
        (_0xcbe6ef["onclick"] = function () {
          _0x51b124["setPropColor"](_0x2e2c5f, "white");
        }),
        (_0x39461a["onclick"] = function () {
          _0x51b124["setPropColor"](_0x2e2c5f, "red");
        }),
        (_0x1a821d["onclick"] = function () {
          _0x51b124["setPropColor"](_0x2e2c5f, "green");
        }),
        (_0x42a4dc["onclick"] = function () {
          _0x51b124["setPropColor"](_0x2e2c5f, "blue");
        }),
        (_0x589608["onclick"] = function () {
          _0x51b124["setPropColor"](_0x2e2c5f, "pink");
        }),
        (_0x26c540["onclick"] = function () {
          _0x51b124["setPropColor"](_0x2e2c5f, "gold");
        }),
        _0xccd329["appendChild"](_0xcbe6ef),
        _0xccd329["appendChild"](_0x39461a),
        _0xccd329["appendChild"](_0x1a821d),
        _0xccd329["appendChild"](_0x42a4dc),
        _0xccd329["appendChild"](_0x589608),
        _0xccd329["appendChild"](_0x26c540);
      var _0xec0216 = document["getElementById"]("propBuyDiv");
      _0xec0216["innerHTML"] = "";
    }
  }),
  (_0x2f2e34["prototype"]["propAnimal"] = null),
  (_0x2f2e34["prototype"]["updatePropsForAnimal"] = function () {
    console["log"](this["props"]);
    var _0x2d0107 = _0x659012,
      _0x81ed16 = _0x17bf26["createGameObjOfOType"](_0x3fb3b2, _0x2d0107);
    (_0x81ed16["animalType"] = _0x2d0107),
      (_0x81ed16["animalSpecies"] = 0x0),
      (_0x81ed16["animalSubSpecies"] = 0x0),
      (_0x81ed16["animalPremiumSkin"] = 0x0);
    var _0x2ea4b0 = _0x404ce0("", "propimg"),
      _0x4e91dc = _0x404ce0("", "propimg"),
      _0x3459ba = _0x404ce0("", "propimg"),
      _0x2f2f11 = _0x404ce0("", "propimg"),
      _0x334bce = _0x404ce0("", "propimg"),
      _0x13fc77 = document["getElementById"]("propAnimal");
    _0x13fc77["innerHTML"] = "";
    var _0x86dd8b = "skins/" + _0x81ed16["animalInfo"]()["skinName"] + ".png",
      _0x392076 = "/props/" + _0x2d0107 + "/beards/" + this["props"]["beardsColor"] + ".png",
      _0xa9481e = "/props/" + _0x2d0107 + "/hats/" + this["props"]["hatsColor"] + ".png",
      _0x11287d = "/props/" + _0x2d0107 + "/scarfs/" + this["props"]["scarfsColor"] + ".png",
      _0x320932 = "/props/" + _0x2d0107 + "/glasses/" + this["props"]["glassesColor"] + ".png";
    console["log"](_0x392076),
      (_0x4e91dc["style"]["backgroundImage"] = "url(" + _0x392076 + ")"),
      (_0x2ea4b0["style"]["backgroundImage"] = "url(" + _0x86dd8b + ")"),
      (_0x3459ba["style"]["backgroundImage"] = "url(" + _0xa9481e + ")"),
      (_0x2f2f11["style"]["backgroundImage"] = "url(" + _0x11287d + ")"),
      (_0x334bce["style"]["backgroundImage"] = "url(" + _0x320932 + ")"),
      _0x13fc77["appendChild"](_0x4e91dc),
      _0x13fc77["appendChild"](_0x2ea4b0),
      _0x13fc77["appendChild"](_0x2f2f11),
      _0x13fc77["appendChild"](_0x334bce),
      _0x13fc77["appendChild"](_0x3459ba);
  }),
  (_0x2f2e34["prototype"]["getPropColorNum"] = function (_0x453161) {
    switch (_0x453161) {
      case "white":
        return 0x0;
      case "red":
        return 0x1;
      case "green":
        return 0x2;
      case "blue":
        return 0x3;
      case "pink":
        return 0x4;
      case "gold":
        return 0x5;
    }
  }),
  (_0x2f2e34["prototype"]["setPropColor"] = function (_0x2b5165, _0x4fca5d) {
    var _0x34487b = _0x2b5165 + "Color",
      _0x1045c6 = document["getElementById"]("propColor-" + _0x4fca5d),
      _0x1882af = document["getElementById"]("propColor-red"),
      _0x268ca2 = document["getElementById"]("propColor-green"),
      _0x1c39f6 = document["getElementById"]("propColor-blue"),
      _0xc918da = document["getElementById"]("propColor-pink"),
      _0x9cb071 = document["getElementById"]("propColor-white"),
      _0x354eb1 = document["getElementById"]("propColor-gold");
    (_0x1882af["className"] = "propColor propColor-red" + (this["hasBoughtProp"](_0x2b5165, "red") ? " bought" : "")),
      (_0x268ca2["className"] = "propColor propColor-green" + (this["hasBoughtProp"](_0x2b5165, "green") ? " bought" : "")),
      (_0x1c39f6["className"] = "propColor propColor-blue" + (this["hasBoughtProp"](_0x2b5165, "blue") ? " bought" : "")),
      (_0xc918da["className"] = "propColor propColor-pink" + (this["hasBoughtProp"](_0x2b5165, "pink") ? " bought" : "")),
      (_0x9cb071["className"] = "propColor propColor-white" + (this["hasBoughtProp"](_0x2b5165, "white") ? " bought" : "")),
      (_0x354eb1["className"] = "propColor propColor-gold" + (this["hasBoughtProp"](_0x2b5165, "gold") ? " bought" : ""));
    var _0x338ac6 = document["getElementById"]("propBuyDiv");
    _0x338ac6["innerHTML"] = "";
    var _0x33c58a = _0x1f8853("div", "propBuyBtn", "buybutton");
    _0x33c58a["onclick"] = function () {
      alert("buy prop: " + _0x2b5165 + " color: " + _0x4fca5d);
    };
    if (this["isPropSelected"](_0x2b5165, _0x4fca5d)) (this["props"][_0x34487b] = ""), (_0x1045c6["className"] = "propColor propColor-" + _0x4fca5d);
    else {
      (this["props"][_0x34487b] = this["getPropColorNum"](_0x4fca5d)), (_0x1045c6["className"] = "propColor propColor-" + _0x4fca5d + " selected");
      if (!this["hasBoughtProp"](_0x2b5165, _0x4fca5d)) {
        var _0x21415a = new Image();
        (_0x21415a["className"] = "buycoin-img"), (_0x21415a["src"] = "shop/mopecoin.png");
        var _0x1713df = _0x1f8853("span", "", "buycoin-price");
        (_0x1713df["innerHTML"] = 0x64 + this["getPropColorNum"](_0x4fca5d) * 0x64),
          _0x33c58a["appendChild"](_0x21415a),
          _0x33c58a["appendChild"](_0x1713df),
          _0x338ac6["appendChild"](_0x33c58a);
      }
    }
    this["updatePropsForAnimal"]();
  }),
  (_0x2f2e34["prototype"]["curTabPage"] = 0x0),
  (_0x2f2e34["prototype"]["version"] = 0.2),
  (_0x2f2e34["prototype"]["playerSettings_update"] = function (_0x3d4311) {
    console["log"]("update: " + _0x3d4311),
      _0x2c6555(_0x3d4311, function (_0x550c0c, _0x466462) {
        if (_0x550c0c)
          _0x1e26e6("Settings updated successfully!", "success", 0x5),
            $bus["emit"]($bus["EVENTS"]["SHOP_SETTING_CHANGED"], _0x3d4311),
            _0x2f3261(),
            _0x403646(!![]);
        else
          switch (_0x466462) {
            case "alreadyowned":
              _0x1e26e6("AccountServer: item already purchased!", _0x466462, 0xf);
              break;
            case "cantafford":
              _0x1e26e6("AccountServer: not enough coins to buy this!", _0x466462, 0xf);
              break;
            case "urlnotfound":
              _0x1e26e6("AccountServer: Can't reach server at this moment!", "itemDoesntExist", 0xf);
              break;
          }
      });
  }),
  (window["MopeShop"] = _0x2f2e34);
var _0x51b124 = new _0x2f2e34();
$bus["on"]($bus["EVENTS"]["UI_SHOP_SETTING_ACTION"], (_0x20b7e1) => {
  _0x51b124["playerSettings_update"](_0x20b7e1);
});

function _0x5ca0d2(_0xd2e6ce) {
  var _0x7d6a06 = _0x1f8853("input", "txtCopy");
  _0x7d6a06["setAttribute"]("type", "text"),
    _0x7d6a06["setAttribute"]("value", _0xd2e6ce),
    console["log"](_0x7d6a06),
    _0x7d6a06["select"](),
    _0x7d6a06["setSelectionRange"](0x0, 0x1869f),
    document["execCommand"]("copy"),
    alert("Copied the text: " + _0x7d6a06["value"]);
}
_0x51b124["loadData"](),
  (_0x2f2e34["prototype"]["getAnimalInfo"] = function (_0x453c0c, _0x46c975) {
    switch (_0x453c0c) {
      case "sampleTestSkin":
        return [_0x659012, 0xfa, "Sample Mouse", "land/mouse/250/mouse"];
      case "summer21_seamonster":
        return [_0x250a37, 0xc9, "Ancient Tortoise", "ocean/seamonster/201/seamonster"];
      case "summer21_puffer":
        return [_0x391550, 0xc9, "Omniball Puffer", "ocean/pufferfish/201/pufferfish"];
      case "summer21_turtle":
        return [_0x36f1a3, 0xc9, "Kiwi Turtle", "ocean/turtle/201/turtle"];
      case "summer21_octopus":
        return [_0x5ac0cd, 0xc9, "Fuchsia Tiger", "ocean/octopus/201/octopus.ui"];
      case "summer21_orca":
        return [_0x573db4, 0xc9, "Lifeguard Orca", "ocean/killerwhale/201/killerwhale"];
      case "summer21_iceMonster":
        return [_0x448b86, 0xc9, "Cryo Coach Monster", "arctic/icemonster/201/icemonster"];
      case "summer21_mammoth":
        return [_0x5ab376, 0xc9, "Lost Tourist", "arctic/mammoth/201/mammoth"];
      case "summer21_crab":
        return [_0x2d0ebc, 0xc9, "Coconut Crab", "ocean/crab/201/crab"];
      case "summer21_hare":
        return [_0xd9bb61, 0xc9, "Snow Cone Hare", "arctic/arctichare/201/arctichare"];
      case "summer21_shrimp":
        return [_0x596a1b, 0xc9, "Chef Shrimp", "ocean/shrimp/201/shrimp"];
      case "summer21_walrus":
        return [_0x379cc3, 0xc9, "Walrusmelon", "arctic/walrus/201/walrus"];
      case "summer21_squid":
        return [_0x461353, 0xc9, "Seacoast Squid", "ocean/squid/201/squid.ui"];
      case "summer21_fox":
        return [_0x2e6d2a, 0xc9, "Forest Sprit Fox", "arctic/arcticfox/201/arcticfox"];
      case "summer21_seal":
        return [_0x23ab49, 0xc9, "Hawaiian Monk", "arctic/seal/201/seal"];
      case "summer21_wolf":
        return [_0x364eae, 0xc9, "Pineapple Wolf", "arctic/wolf/201/wolf"];
      case "summer21_markhor":
        return [_0x5195b7, 0xc9, "Fruity Ice Markhor", "arctic/markhor/201/1/markhor"];
      case "summer21_warthog":
        return [_0x1b8b5e, 0xc9, "Flame Tiki", "desert/warthog/201/warthog"];
      case "summer21_chicken":
        return [_0x37c0ab, 0xc9, "Countryside Chick", "land/chicken/201/chicken"];
      case "summer21_owl":
        return [_0x533281, 0xc9, "Snowy Owrigami", "arctic/snowyowl/201/snowyowl"];
      case "summer21_zebra":
        return [_0x1c4f28, 0xc9, "Playground Zebra", "land/zebra/201/zebra"];
      case "summer21_croc":
        return [_0x16bb4c, 0xc9, "Big Hoss", "land/croc/201/croc"];
      case "summer21_meerkat":
        return [_0x156fde, 0xc9, "Scubakat", "desert/meerkat/201/meerkat"];
      case "summer21_rhino":
        return [_0x1e9785, 0xc9, "Shrub Rhino", "land/rhino/201/rhino"];
      case "summer21_elephant":
        return [_0xb5d198, 0xc9, "Leiphant", "land/elephant/201/elephant"];
      case "summer21_pig":
        return [_0xc58c70, 0xc9, "Floaty Pig", "land/pig/201/pig"];
      case "summer21_camel":
        return [_0x353123, 0xc9, "Balloon Warrior", "desert/camel/201/camel"];
      case "summer21_hyena":
        return [_0x55bfef, 0xc9, "DJ Hyena", "desert/hyena/201/hyena"];
      case "summer21_gorilla":
        return [_0x33164c, 0xc9, "Explorer Ape", "land/gorilla/201/gorilla"];
      case "summer21_squishyYeti":
        return [_0x58f094, 0xc9, "Squishy Yeti", "arctic/yeti/201/yeti"];
      case "summer21_squishyKraken":
        return [_0x4f1c79, 0xc9, "Squishy Kraken", "ocean/kraken/201/kraken"];
      case "summer21_squishyDragon":
        return [_0x1ae9e8, 0xc9, "Squishy Dragon", "land/dragon/201/dragon"];
      case "summer21_mermaidWhale":
        return [_0x1c2dd4, 0xc9, "Mermaid Whale", "ocean/bluewhale/201/bluewhale"];
      case "summer21_seafoamJellyfish":
        return [_0x291edb, 0xc9, "Seafoam Jellyfish", "ocean/jellyfish/201/jellyfish"];
      case "summer21_bubblyMouse":
        return [_0x659012, 0xc9, "Bubbly Mouse", "land/mouse/201/mouse"];
      case "summer21_surfboardChomper":
        return [_0x261bdf, 0xc9, "Surfboard Chomper", "ocean/shark/201/shark"];
      case "summer21_surferPenguin":
        return [_0x83a348, 0xc9, "Surfer Penguin", "arctic/penguin/201/penguin"];
      case "summer21_waterGunHorse":
        return [_0x4af824, 0xc9, "Water Gun Horse", "ocean/seahorse/201/seahorse"];
      case "summer21_sunburnReindeer":
        return [_0x31d5ba, 0xc9, "Sunburn Reindeer", "arctic/reindeer/201/reindeer"];
      case "summer21_surfboardSwordfish":
        return [_0x15f668, 0xc9, "Surfboardfish", "ocean/swordfish/201/swordfish"];
      case "summer21_popsicleTrout":
        return [_0x3dee49, 0xc9, "Popsicle Trout", "ocean/trout/201/trout"];
      case "summer21_playfulChipmunk":
        return [_0x21c202, 0xc9, "Playful Munk", "arctic/chipmunk/201/chipmunk"];
      case "summer21_fireworkOx":
        return [_0x50e796, 0xc9, "Fireworks Ox", "arctic/muskox/201/muskox"];
      case "summer21_chocolateStingray":
        return [_0x2429b5, 0xc9, "Chocolate Ray", "ocean/stingray/201/stingray.ui"];
      case "summer21_connoisseurBear":
        return [_0x33a471, 0xc9, "Cola Connoisseur", "arctic/bear/201/bear"];
      case "summer21_coralQueen":
        return [_0x72b8ae, 0xc9, "Coral Queen", "arctic/snowleopard/201/snowleopard"];
      case "summer21_strawbertoothTiger":
        return [_0x52066d, 0xc9, "Strawbertooth", "arctic/sabertooth/201/sabertooth"];
      case "skin_leatherBackTurtle":
        return [_0x36f1a3, 0xc8, "Leather Back\x0aTurtle", "ocean/turtle/200/turtle"];
      case "skin_celestialCobra":
        return [_0x1a3bd2, 0xc8, "Celestial Cobra", "land/cobra/200/cobra"];
      case "skin_brazenBull":
        return [_0x50e796, 0xc8, "Brazen Bull", "arctic/muskox/200/muskox"];
      case "skin_luckyCharmMonster":
        return [_0x250a37, 0xc8, "Luckycharm Monster", "ocean/seamonster/200/seamonster"];
      case "skin_iceToucan":
        return [_0x65dffc, 0xc8, "Ice Toucan", "land/toucan/200/toucan"];
      case "skin_clowoudLion":
        return [_0x3cc7bc, 0xc8, "Clowoud Lion", "land/lion/200/0/lion"];
      case "skin_sunsetClowoudLion":
        return [_0x3cc7bc, 0xc8, "Sunset\x0aClowoud Lion", "land/lion/200/1/lion"];
      case "skin_stormClowoudLion":
        return [_0x3cc7bc, 0xc8, "Storm\x0aClowoud Lion", "land/lion/200/2/lion"];
      case "skin_kaijuRex":
        return [_0x11d87b, 0xc8, "Kaiju Rex", "land/trex/200/trex"];
      case "skin_warTHog":
        return [_0x1b8b5e, 0xc8, "WarT. Hog", "desert/warthog/200/warthog"];
      case "skin_velvetChimp":
        return [_0x2a2687, 0xc8, "Velvet\x0aChipmunk", "desert/chipmunk/200/chipmunk"];
      case "skin_aquaPhoenix":
        return [_0x3a0961, 0xc8, "Aqua Phoenix", "volcano/phoenix/200/0/phoenix"];
      case "skin_icePhoenix":
        return [_0x3a0961, 0xc8, "Ice Phoenix", "volcano/phoenix/200/1/phoenix"];
      case "skin_ashPhoenix":
        return [_0x3a0961, 0xc8, "Ash Phoenix", "volcano/phoenix/200/2/phoenix"];
      case "skin_redGiantPhoenix":
        return [_0x3a0961, 0xc8, "Red Giant\x0aPhoenix", "volcano/phoenix/200/3/phoenix"];
      case "skin_goofyDragon":
        return [_0x1ae9e8, 0xc8, "Goofy Dragon", "land/dragon/200/0/dragon"];
      case "skin_desertDragon":
        return [_0x1ae9e8, 0xc8, "Desert Dragon", "land/dragon/200/1/dragon"];
      case "skin_forgeDragon":
        return [_0x1ae9e8, 0xc8, "Forge Dragon", "land/dragon/200/2/dragon"];
      case "skin_mythicalSerpent":
        return [_0x1ae9e8, 0xc8, "Mythical Serpent", "land/dragon/200/3/dragon"];
      case "skin_fireyDragon":
        return [_0x1ae9e8, 0xc8, "Firey Dragon", "land/dragon/200/4/dragon"];
      case "skin_technoSaber":
        return [_0x52066d, 0xc8, "Techno\x0aSabertooth", "arctic/sabertooth/200/sabertooth"];
      case "skin_iceFox":
        return [_0x19954b, 0xc8, "Ice Fox", "arctic/arcticfox/200/arcticfox"];
      case "skin_clownfish":
        return [_0x3dee49, 0xc8, "Clownfish", "ocean/trout/200/trout"];
      case "skin_tullyMonster":
        return [_0x4af824, 0xc8, "Tully\x0aMonster", "ocean/seahorse/200/seahorse"];
      case "skin_vampireSquid":
        return [_0x5ac0cd, 0xc8, "Vampire\x0aSquid", "ocean/octopus/200/octopus"];
      case "skin_cuttlefish":
        return [_0x461353, 0xc8, "Cuttle Fish", "ocean/squid/200/squid"];
      case "skin_deluxeShrimp":
        return [_0x596a1b, 0xc8, "Deluxe\x0aShrimp", "ocean/shrimp/200/shrimp"];
      case "skin_monochromeRabbit":
        return [_0x388c4c, 0xc8, "Monochrome\x0aRabbit", "land/rabbit/200/rabbit"];
      case "skin_nightFox":
        return [_0x2e6d2a, 0xc8, "Thief of\x0aThe Night", "land/fox/200/fox"];
      case "skin_plagueRaptor":
        return [_0x2deb28, 0xc8, "Plague\x0aRaptor", "land/peacock/200/peacock.ui"];
      case "skin_titanBison":
        return [_0x31f081, 0xc8, "Titan Bison", "desert/bison/200/bison"];
      case "skin_dowagerVarande":
        return [_0x3cc7e2, 0xc8, "Dowager Varande", "desert/komododragon/200/0/komodo"];
      case "skin_emeprorVarande":
        return [_0x3cc7e2, 0xc8, "Emepror Varande", "desert/komododragon/200/1/komodo"];
      case "skin_rubyDevil":
        return [_0x28027c, 0xc8, "Ruby Devil", "land/dinomonster/200/dinomonster"];
      case "skin_metalicCrab":
        return [_0x2d0ebc, 0xc8, "Metallic Crab", "ocean/crab/200/crab"];
      case "skin_queenFlame":
        return [_0x5eebcf, 0xc8, "Queen Flame", "volcano/kingdragon/200/kingdragon"];
      case "halloween_wyrmous":
        return [_0x1a3bd2, 0x64, "Wyrmous", "land/cobra/100/cobra"];
      case "halloween_equusthulhu":
        return [_0x3531d4, 0x64, "Equusthulhu", "land/donkey/100/donkey"];
      case "halloween_frostaline":
        return [_0x72b8ae, 0x64, "Frostaline", "arctic/snowleopard/100/snowleopard"];
      case "halloween_pufferMace":
        return [_0x391550, 0x64, "Puffermace", "ocean/pufferfish/100/pufferfish"];
      case "halloween_carnageodactyl":
        return [_0x510716, 0x64, "Carnageodactyl", "desert/pterodactyl/100/pterodactyl_ability"];
      case "halloween_mrDollar":
        return [_0x11d87b, 0x64, "Mr. Dollar", "land/trex/100/trex"];
      case "halloween_wendigoDeer":
        return [_0x50c9da, 0x64, "The Wendigo", "land/deer/100/deer"];
      case "halloween_cactiRat":
        return [_0xbd9993, 0x64, "Cacti Rat", "desert/kangaroorat/100/kangaroorat"];
      case "halloween_hiPower":
        return [_0x8151b9, 0x64, "Swampster", "land/hippo/100/hippo"];
      case "halloween_puumpkat":
        return [_0x156fde, 0x64, "Puumpkat", "desert/meerkat/100/meerkat"];
      case "halloween_doomedarius":
        return [_0x353123, 0x64, "The Doomedarius", "desert/camel/100/camel"];
      case "halloween_roboMouse":
        return [_0x659012, 0x64, "Robo Mouse", "land/mouse/100/mouse"];
      case "halloween_uncleSam":
        return [_0x16bb4c, 0x64, "Uncle Sam", "land/croc/100/croc"];
      case "halloween_zombieMole":
        return [_0x108a58, 0x64, "Zombie Mole", "land/mole/100/mole"];
      case "halloween_flammyHart":
        return [_0x4eaba8, 0x64, "Flammy Hart", "desert/gazelle/100/gazelle"];
      case "halloween_gummyViper":
        return [_0x4310c7, 0x64, "Gummy Viper", "desert/rattlesnake/100/rattlesnake"];
      case "halloween_grimRipper":
        return [_0x33164c, 0x64, "Grim Reaper", "land/gorilla/100/gorilla"];
      case "halloween_bigCookie":
        return [_0x5a5817, 0x64, "Big Cookie", "land/bigcat/100/bigcat"];
      case "halloween_gargolgon":
        return [_0x1ae9e8, 0x64, "The Gargon", "land/dragon/100/dragon"];
      case "halloween_candyRus":
        return [_0x379cc3, 0x64, "Candy Rus", "arctic/walrus/100/walrus"];
      case "halloween_mantilian":
        return [_0x3cc7bc, 0x64, "The Mantilian", "land/lion/100/lion"];
      case "halloween_phantomRay":
        return [_0x2429b5, 0x64, "Phantom Ray", "ocean/stingray/100/stingray"];
      case "halloween_suitedToucan":
        return [_0x65dffc, 0x64, "The Dapper", "land/toucan/100/toucan"];
      case "halloween_vulgeist":
        return [_0x2e86d6, 0x64, "The Vulgeist", "desert/vulture/100/vulture"];
      case "halloween_burlone":
        return [_0x1b8b5e, 0x64, "The Burlone", "desert/warthog/100/warthog"];
      case "halloween_unicornze":
        return [_0x1c4f28, 0x64, "Unicornze", "land/zebra/100/zebra"];
      case "gold_blackDragon":
        return [_0x322b1f, 0x1, "Golden\x0aBlack Dragon", "volcano/blackdragon/1/blackdragon"];
      case "gold_kingDragon":
        return [_0x5eebcf, 0x1, "Golden\x0aKing Dragon", "volcano/kingdragon/1/kingdragon"];
      case "gold_Dragon":
        return [_0x1ae9e8, 0x1, "Golden\x0aDragon", "land/dragon/1/dragon"];
      case "gold_kraken":
        return [_0x4f1c79, 0x1, "Golden\x0aKraken", "ocean/kraken/1/kraken"];
      case "gold_yeti":
        return [_0x58f094, 0x1, "Golden\x0aYeti", "arctic/yeti/1/yeti"];
      case "gold_trex":
        return [_0x11d87b, 0x1, "Golden\x0aT.Rex", "land/trex/1/trex"];
      case "gold_kingCrab":
        return [_0x4d5dff, 0x1, "Golden\x0aCrab", "ocean/kingcrab/1/kingcrab"];
      case "gold_phoenix":
        return [_0x3a0961, 0x1, "Golden\x0aPhoenix", "volcano/phoenix/1/phoenix"];
      case "gold_pterodactyl":
        return [_0x510716, 0x1, "Golden\x0aPterodactyl", "desert/pterodactyl/1/pterodactyl_ability"];
      case "gold_iceMonster":
        return [_0x448b86, 0x1, "Golden\x0aIce Monster", "arctic/icemonster/1/icemonster"];
      case "gold_dinoMonster":
        return [_0x28027c, 0x1, "Golden\x0aDino Monster", "land/dinomonster/1/dinomonster"];
      case "gold_seaMonster":
        return [_0x250a37, 0x1, "Golden\x0aSea Monster", "ocean/seamonster/1/seamonster"];
      case "gold_landMonster":
        return [_0x5b1639, 0x1, "Golden\x0aLand Monster", "volcano/landmonster/1/landmonster"];
      case "gold_giantScorion":
        return [_0x321383, 0x1, "Golden\x0aGiant Scorpion", "desert/scorpion/1/giantscorpion"];
      case "gold_bluewhale":
        return [_0x1c2dd4, 0x1, "Golden\x0aBlue Whale", "ocean/bluewhale/1/bluewhale"];
      case "gold_elephant":
        return [_0xb5d198, 0x1, "Golden\x0aElephant", "land/elephant/1/elephant"];
      case "gold_cassowary":
        return [_0x43a3bb, 0x1, "Golden\x0aCassowary", "land/cassowary/1/cassowary"];
      case "gold_giantspider":
        return [_0x2a018e, 0x1, "Golden\x0aGiant Spider", "land/giantspider/1/giantspider"];
      case "gold_blackwidow":
        return [_0x563a97, 0x1, "Golden\x0aBlackwidow", "desert/blackwidow/1/blackwidow"];
      case "gold_mammoth":
        return [_0x5ab376, 0x1, "Golden\x0aMammoth", "arctic/mammoth/1/mammoth"];
      case "gold_hippo":
        return [_0x8151b9, 0x1, "Golden\x0aHippo", "land/hippo/1/hippo"];
      case "gold_ostrich":
        return [_0x19797d, 0x1, "Golden\x0aOstrich", "land/ostrich/1/ostrich"];
      case "gold_boa":
        return [_0x2e22f9, 0x1, "Golden\x0aBoa", "land/boaconstrictor/1/boaconstrictor"];
      case "gold_komodo":
        return [_0x3cc7e2, 0x1, "Golden\x0aKomodo", "desert/komododragon/1/komodo"];
      case "gold_killerwhale":
        return [_0x573db4, 0x1, "Golden\x0aKiller Whale", "ocean/killerwhale/1/killerwhale"];
      case "gold_sabertooth":
        return [_0x52066d, 0x1, "Golden\x0aSabertooth", "arctic/sabertooth/1/sabertooth"];
      case "skin_blueDragon":
        return [_0x322b1f, 0x2, "The\x0aAzure Bringer", "volcano/blackdragon/2/blackdragon"];
      case "skin_kingRipper":
        return [_0x5eebcf, 0x2, "King\x0aRipper", "volcano/kingdragon/2/kingdragon"];
      case "skin_kingStan":
        return [_0x5eebcf, 0x3, "King\x0aStan", "volcano/kingdragon/3/kingdragon"];
      case "skin_kingShah":
        return [_0x5eebcf, 0x4, "King\x0aShah", "volcano/kingdragon/4/kingdragon"];
      case "skin_dragon_gray":
        return [_0x1ae9e8, 0x2, "Knight\x0aDragon", "land/dragon/2/dragon"];
      case "skin_kraken_cyan":
        return [_0x4f1c79, 0x2, "Chromatic\x0aKraken", "ocean/kraken/2/kraken"];
      case "skin_yeti_emerald":
        return [_0x58f094, 0x2, "Emerald\x0aYeti", "arctic/yeti/2/yeti"];
      case "skin_snowman":
        return [_0x6ff36b, 0x1, "The\x0aSnowman", "arctic/snowman/1/snowman"];
      case "skin_snowgirl":
        return [_0x6ff36b, 0x2, "The\x0aSnowgirl", "arctic/snowman/2/snowgirl"];
      case "skin_trex_gray":
        return [_0x11d87b, 0x2, "Ember\x0aT.Rex", "land/trex/2/trex"];
      case "skin_kingCrab":
        return [_0x4d5dff, 0x2, "Amethyst\x0aCrab", "ocean/kingcrab/2/kingcrab"];
      case "skin_phoenix_blue":
        return [_0x3a0961, 0x2, "Alpha\x0aPhoenix", "volcano/phoenix/2/phoenix"];
      case "skin_pterodactyl_green":
        return [_0x510716, 0x2, "Emerald\x0aPterodactyl", "desert/pterodactyl/2/pterodactyl_ability"];
      case "skin_iceMonster":
        return [_0x448b86, 0x2, "Amethyst\x0aMonster", "arctic/icemonster/2/icemonster"];
      case "skin_dinoMonster":
        return [_0x28027c, 0x2, "Citrine\x0aMonster", "land/dinomonster/2/dinomonster"];
      case "skin_seaMonster":
        return [_0x250a37, 0x2, "Sapphire\x0aMonster", "ocean/seamonster/2/seamonster"];
      case "skin_landMonster":
        return [_0x5b1639, 0x2, "Titanite\x0aMonster", "volcano/landmonster/2/landmonster"];
      case "skin_orangeScorpion":
        return [_0x321383, 0x2, "Carnelian\x0aScorpion", "desert/scorpion/2/giantscorpion"];
      case "skin_bluewhale":
        return [_0x1c2dd4, 0x2, "Albino\x0aBlue Whale", "ocean/bluewhale/2/bluewhale"];
      case "skin_elephant":
        return [_0xb5d198, 0x2, "White\x0aElephant", "land/elephant/2/elephant"];
      case "skin_cassowary":
        return [_0x43a3bb, 0x2, "Cotton\x0aCassowary", "land/cassowary/2/cassowary"];
      case "skin_giantspider":
        return [_0x2a018e, 0x2, "Goliath\x0aSpider", "land/giantspider/2/giantspider"];
      case "skin_blackwidow":
        return [_0x563a97, 0x2, "Queen\x0aBlackwidow", "desert/blackwidow/2/blackwidow"];
      case "skin_mammoth":
        return [_0x5ab376, 0x2, "Black\x0aMammoth", "arctic/mammoth/2/mammoth"];
      case "skin_hippo":
        return [_0x8151b9, 0x2, "Pygmy\x0aHippo", "land/hippo/2/hippo"];
      case "skin_ostrich":
        return [_0x19797d, 0x2, "Ruffled\x0aOstrich", "land/ostrich/2/ostrich"];
      case "skin_boa":
        return [_0x2e22f9, 0x2, "Tree\x0aBoa", "land/boaconstrictor/2/boaconstrictor"];
      case "skin_komodo":
        return [_0x3cc7e2, 0x2, "Night\x0aKomodo", "desert/komododragon/2/komodo"];
      case "skin_killerwhale":
        return [_0x573db4, 0x2, "Albino\x0aOrca", "ocean/killerwhale/2/killerwhale"];
      case "skin_sabertooth":
        return [_0x52066d, 0x2, "Margala\x0aSabertooth", "arctic/sabertooth/2/sabertooth"];
      case "skin_tigerShark":
        return [_0x261bdf, 0x2, "Tiger\x0aShark", "ocean/shark/1/shark"];
      case "skin_hamerHeadShark":
        return [_0x261bdf, 0x3, "Hammerhead\x0aShark", "ocean/shark/2/shark"];
      case "skin_panda":
        return [_0x15f6e5, 0x2, "Panda", "land/panda/panda"];
      case "skin_zonkey":
        return [_0x3531d4, 0x3, "Zonkey", "land/donkey/2/zonkey"];
      case "skin_okapi":
        return [_0x1c4f28, 0x2, "Okapi", "land/okapi/okapi"];
      case "skin_giantCroc":
        return [_0x16bb4c, 0x1, "Giant\x0aCrocodile", "land/croc/1/croc"];
      case "skin_purpleMouse":
        return [_0x659012, 0x2, "Purple\x0aMouse", "land/mouse/2/mouse"];
      case "skin_prismaToucan":
        return [_0x65dffc, 0x6, "Prisma\x0aToucan", "land/toucan/6/toucan"];
      case "gold_mouse":
        return [_0x659012, 0x2, "Golden\x0aMouse", "land/mouse/1/mouse"];
      case "skin_queenScarlet":
        return [_0x5eebcf, 0x5, "Queen\x0aScarlet", "volcano/kingdragon/5/kingdragon"];
      case "skin_queenCeleste":
        return [_0x5eebcf, 0x6, "Queen\x0aCeleste", "volcano/kingdragon/6/kingdragon"];
      case "skin_bigFoot":
        return [_0x511c71, 0x1, "The\x0aBigfoot", "land/bigfoot/1/thebigfoot"];
      case "skin_woollyRhino":
        return [_0x1e9785, 0x3, "Woolly\x0aRhino", "land/rhino/3/rhino"];
      case "darkPlagueRat":
        return [_0x659012, 0xcc, "Dark Plague\x0aRat", "land/mouse/204/0/mouse"];
      case "lightPlagueRat":
        return [_0x659012, 0xcc, "Light Plague\x0aRat", "land/mouse/204/1/mouse"];
      case "carrotRabbit":
        return [_0x388c4c, 0xcc, "Carrot\x0aRabbit", "land/rabbit/204/rabbit"];
      case "darkMatterCrab":
        return [_0x2d0ebc, 0xcc, "Dark Matter\x0aCrab", "ocean/crab/204/crab"];
      case "necromancerMeerkat":
        return [_0x156fde, 0xcc, "Necromancer\x0aMeerkat", "desert/meerkat/204/meerkat"];
      case "butcherPig":
        return [_0xc58c70, 0xcc, "Butcher\x0aPig", "land/pig/204/0/pig"];
      case "hotdogPig":
        return [_0xc58c70, 0xcc, "Hot Dog\x0aPig", "land/pig/204/1/pig"];
      case "voidScuttlingSquid":
        return [_0x461353, 0xcc, "Void Scuttling\x0aSquid", "ocean/squid/204/squid"];
      case "spideer":
        return [_0x31d5ba, 0xcc, "Spideer", "arctic/reindeer/204/reindeer"];
      case "blackAsuraFox":
        return [_0x2e6d2a, 0xcc, "Black Asura\x0aFox", "land/fox/204/fox"];
      case "candyCornWarthog":
        return [_0x1b8b5e, 0xcc, "Candy Corn\x0aWarthog", "desert/warthog/204/warthog"];
      case "phantomGorilla":
        return [_0x33164c, 0xcc, "Phantom\x0aGorilla", "land/gorilla/204/gorilla.ui"];
      case "martianLeopard":
        return [_0x72b8ae, 0xcc, "Martian\x0aLeopard", "arctic/snowleopard/204/snowleopard"];
      case "genieCheetah":
        return [_0x5a5817, 0xcc, "Genie\x0aCheetah", "land/bigcat/204/cheetah"];
      case "chimeraTiger":
        return [_0x10ad1f, 0xcc, "Chimera\x0aTiger", "land/tiger/204/tiger"];
      case "acidHusk":
        return [_0x2e86d6, 0xcc, "Acid\x0aHusk", "desert/vulture/204/vulture"];
      case "acutiRhino":
        return [_0x1e9785, 0xcc, "Acuti\x0aRhino", "land/rhino/204/rhino"];
      case "goldenDevilGoat":
        return [_0x5195b7, 0xcc, "Golden Devil\x0aGoat", "arctic/markhor/204/2/markhor"];
      case "sunHippo":
        return [_0x8151b9, 0xcc, "Sun\x0aHippo", "land/hippo/204/hippo"];
      case "smileSpider":
        return [_0x2a018e, 0xcc, "Smile\x0aSpider", "land/giantspider/204/giantspider"];
      case "bloodwidowSpider":
        return [_0x563a97, 0xcc, "Bloodwidow\x0aSpider", "desert/blackwidow/204/blackwidow"];
      case "basiliskCassowary":
        return [_0x43a3bb, 0xcc, "Basilisk\x0aCassowary", "land/cassowary/204/cassowary"];
      case "magmaDragon":
        return [_0x1ae9e8, 0xcc, "Magma\x0aDragon", "land/dragon/204/dragon"];
      case "plasmacoreKingCrab":
        return [_0x4d5dff, 0xcc, "Plasma-core King\x0aCrab", "ocean/kingcrab/204/kingcrab"];
      case "frostWolf":
        return [_0x58f094, 0xcc, "Frost\x0aWolf", "arctic/yeti/204/yeti"];
      case "tartarusRex":
        return [_0x11d87b, 0xcc, "Tartarus\x0aRex", "land/trex/204/trex"];
      case "cthulhuKraken":
        return [_0x4f1c79, 0xcc, "Cthulhu\x0aKraken", "ocean/kraken/204/kraken"];
      case "necromus":
        return [_0x5b1639, 0xcc, "Necromus", "volcano/landmonster/204/0/landmonster"];
      case "planetEaterMonster":
        return [_0x5b1639, 0xcc, "Planet Eater\x0aMonster", "volcano/landmonster/204/1/landmonster"];
      case "bloodCrystalMonster":
        return [_0x448b86, 0xcc, "Blood Crystal\x0aMonster", "arctic/icemonster/204/icemonster"];
      case "superMouse":
        return [_0x659012, 0xca, "Super Mouse", "land/mouse/202/mouse"];
      case "sushiShrimp":
        return [_0x596a1b, 0xca, "Sushi Shrimp", "ocean/shrimp/202/shrimp"];
      case "plasmaRat":
        return [_0xbd9993, 0xca, "Plasma Rat", "desert/kangaroorat/202/kangaroorat"];
      case "chipmonk":
        return [_0x21c202, 0xca, "Chipmonk", "desert/chipmunk/202/chipmunk"];
      case "jackapole":
        return [_0x388c4c, 0xca, "Jackapole", "land/rabbit/202/0/rabbit"];
      case "thugPigeon":
        return [_0x5b8090, 0xca, "Thug Pigeon", "land/pigeon/202/pigeon"];
      case "royalGuppy":
        return [_0x3dee49, 0xca, "Royal Guppy", "ocean/trout/202/trout"];
      case "hollowRabbit":
        return [_0x388c4c, 0xca, "Hollow Rabbit", "land/rabbit/202/1/rabbit"];
      case "ratMunk":
        return [_0x2a2687, 0xca, "Ratmunk", "desert/chipmunk/202/chipmunk"];
      case "toxicMole":
        return [_0x108a58, 0xca, "Toxic Mole", "land/mole/202/0/mole"];
      case "lightningLord":
        return [_0x37c0ab, 0xca, "Lightning Lord", "land/chicken/202/chicken"];
      case "ufoPigeon":
        return [_0x83a348, 0xca, "UFO Pigeon", "arctic/penguin/202/penguin"];
      case "cytokineticMole":
        return [_0x108a58, 0xca, "Cytokinetic Mole", "land/mole/202/1/mole"];
      case "piggyBank":
        return [_0xc58c70, 0xca, "Piggy Bank", "land/pig/202/pig"];
      case "jackhammer":
        return [_0x4da405, 0xca, "Jackhammer", "land/woodpecker/202/woodpecker"];
      case "leafySeadragon":
        return [_0x4af824, 0xca, "Leafy Seadragon", "ocean/seahorse/202/seahorse"];
      case "soapySeal":
        return [_0x23ab49, 0xca, "Soapy Seal", "arctic/seal/202/seal"];
      case "windupKakapo":
        return [_0x190408, 0xca, "Wind-up Kakapo", "forest/kakapo/202/kakapo"];
      case "mevazor":
        return [_0x50c9da, 0xca, "Mevazor", "land/deer/202/0/deer"];
      case "flyMango":
        return [_0x5d0d40, 0xca, "Fly Mango", "ocean/flamingo/202/flamingo"];
      case "psychedelicSquid":
        return [_0x461353, 0xca, "Psychedelic Squid", "ocean/squid/202/squid"];
      case "piebaldCosmos":
        return [_0x31d5ba, 0xca, "Piebald Cosmos", "arctic/reindeer/202/reindeer"];
      case "retroNeonGazelle":
        return [_0x4eaba8, 0xca, "Retro Neon Gazelle", "desert/gazelle/202/gazelle"];
      case "divineDeer":
        return [_0x50c9da, 0xca, "Divine Deer", "land/deer/202/1/deer"];
      case "grassHedgehog":
        return [_0x26c175, 0xca, "Grass Hedgehog", "land/hedgehog/202/hedgehog"];
      case "spectrumPeacock":
        return [_0x2deb28, 0xca, "Spectrum Peacock", "land/peacock/202/peacock"];
      case "discoJellyfish":
        return [_0x291edb, 0xca, "Disco Jellyfish", "ocean/jellyfish/202/0/jellyfish"];
      case "iceFox":
        return [_0x19954b, 0xca, "Ice Fox", "arctic/arcticfox/202/arcticfox"];
      case "fireFox":
        return [_0xe68f0, 0xca, "Fire Fox", "desert/fennecfox/202/1/fennecfox"];
      case "muscipulaRaven":
        return [_0x6af42d, 0xca, "Muscipula Raven", "forest/raven/202/raven"];
      case "sneakyFox":
        return [_0x2e6d2a, 0xca, "Sneaky Fox", "land/fox/202/fox"];
      case "twistedHorror":
        return [_0x291edb, 0xca, "Twisted Horror", "ocean/jellyfish/202/1/jellyfish"];
      case "purpleFireFox":
        return [_0xe68f0, 0xca, "Purple Fire Fox", "desert/fennecfox/202/1/fennecfox"];
      case "synthZebra":
        return [_0x1c4f28, 0xca, "Synth Zebra", "land/zebra/202/zebra"];
      case "moltenGlassTurtle":
        return [_0x36f1a3, 0xca, "Molten Glass Turtle", "ocean/turtle/202/turtle"];
      case "monitorMuskox":
        return [_0x50e796, 0xca, "Monitor Muskox", "arctic/muskox/202/muskox"];
      case "headlessMule":
        return [_0x3531d4, 0xca, "Headless Mule", "land/donkey/202/donkey"];
      case "quilinGiraffe":
        return [_0x353380, 0xca, "Quilin Giraffe", "land/giraffe/202/0/giraffe"];
      case "etherStingray":
        return [_0x2429b5, 0xca, "Ether Stingray", "ocean/stingray/202/0/stingray"];
      case "potatoWalrus":
        return [_0x379cc3, 0xca, "Potato Walrus", "arctic/walrus/202/walrus"];
      case "fungalCamel":
        return [_0x353123, 0xca, "Fungal Camel", "desert/camel/202/camel"];
      case "draquorum":
        return [_0x353380, 0xca, "Draquorum", "land/giraffe/202/1/giraffe"];
      case "pancakeStingray":
        return [_0x2429b5, 0xca, "Pancake Stingray", "ocean/stingray/202/1/stingray"];
      case "kongrilla":
        return [_0x33164c, 0xca, "Kongrilla", "land/gorilla/202/gorilla"];
      case "corpseFlowerToucan":
        return [_0x65dffc, 0xca, "Corpse Flower Toucan", "land/toucan/202/toucan"];
      case "ballonPufferfish":
        return [_0x391550, 0xca, "Balloon Pufferfish", "ocean/pufferfish/202/pufferfish"];
      case "astralLeopard":
        return [_0x72b8ae, 0xca, "Astral Leopard", "arctic/snowleopard/202/snowleopard"];
      case "cmykNeonCheetah":
        return [_0x5a5817, 0xca, "C.M.Y.K NeoN Cheetak", "land/bigcat/202/cheetah"];
      case "beekeeperBear":
        return [_0x15f6e5, 0xca, "Beekeeper Bear", "land/bear/202/bear"];
      case "dalmatianPelican":
        return [_0x3d8491, 0xca, "Dalmatian Pelican", "ocean/pelican/202/pelican"];
      case "rocketSwordfish":
        return [_0x15f668, 0xca, "Rocket Swordfish", "ocean/swordfish/202/swordfish"];
      case "okamiWolf":
        return [_0x364eae, 0xca, "Okami Wolf", "arctic/wolf/202/wolf"];
      case "anubisHyena":
        return [_0x55bfef, 0xca, "Anubis Hyena", "desert/hyena/202/hyena"];
      case "gobeeBear":
        return [_0x3297a2, 0xca, "Gobee Bear", "desert/gobibear/202/gobibear"];
      case "chimeraLion":
        return [_0x3cc7bc, 0xca, "Chimera Lion", "land/lion/202/lion"];
      case "meteorFalcon":
        return [_0x58aade, 0xca, "Meteor Falcon", "land/falcon/202/falcon"];
      case "naKika":
        return [_0x5ac0cd, 0xca, "Na Kika", "ocean/octopus/202/octopus"];
      case "waterBear":
        return [_0x33a471, 0xca, "Water Bear", "arctic/bear/202/bear"];
      case "croczilla":
        return [_0x16bb4c, 0xca, "Croczilla", "land/croc/202/0/croc"];
      case "ammit":
        return [_0x16bb4c, 0xca, "Ammit", "land/croc/202/1/croc"];
      case "cottonCandyRhino":
        return [_0x1e9785, 0xca, "Cotton Candy Rhino", "land/rhino/202/rhino"];
      case "floralWolverine":
        return [_0x4a1394, 0xca, "Floral Wolverine", "arctic/wolverine/202/wolverine"];
      case "minotaur":
        return [_0x31f081, 0xca, "Minotaur", "desert/bison/202/bison"];
      case "planetHippo":
        return [_0x8151b9, 0xca, "Planet Hippo", "land/hippo/202/hippo"];
      case "seaAngelOrca":
        return [_0x573db4, 0xca, "Sea Angel Orca", "ocean/killerwhale/202/killerwhale"];
      case "icefangSabertooth":
        return [_0x52066d, 0xca, "Ice-Fang Sabertooth", "arctic/sabertooth/202/sabertooth"];
      case "galaxyKomodoDragon":
        return [_0x3cc7e2, 0xca, "Galaxy Komodo Dragon", "desert/komododragon/202/komododragon"];
      case "sapphireCaveSpider":
        return [_0x2a018e, 0xca, "Sapphire Cave Spider", "land/giantspider/202/giantspider"];
      case "pastelCassowary":
        return [_0x43a3bb, 0xca, "Pastel Cassowary", "land/cassowary/202/cassowary"];
      case "whaleboat":
        return [_0x1c2dd4, 0xca, "Whale Boat", "ocean/bluewhale/202/1/bluewhale"];
      case "acidMammoth":
        return [_0x5ab376, 0xca, "Acid Mammoth", "arctic/mammoth/202/0/mammoth"];
      case "iceWizardElephant":
        return [_0xb5d198, 0xca, "Ice Wizard Elephant", "land/elephant/202/elephant"];
      case "ancientIslandMonster":
        return [_0x1c2dd4, 0xca, "Ancient Island Monster", "ocean/bluewhale/202/0/bluewhale"];
      case "crystalGolem":
        return [_0x5ab376, 0xca, "Crystal Golem", "arctic/mammoth/202/1/mammoth"];
      case "aberrantDragon":
        return [_0x1ae9e8, 0xca, "Aberrant Dragon", "land/dragon/202/0/dragon"];
      case "agDragon":
        return [_0x1ae9e8, 0xce, "AG Dragon", "land/dragon/206/dragon"];
      case "hyporevenantRex":
        return [_0x11d87b, 0xca, "Hyporevenant Rex", "land/trex/202/0/trex"];
      case "giantSquid":
        return [_0x4f1c79, 0xca, "Giant Squid", "ocean/kraken/202/0/kraken"];
      case "lovelyYeti":
        return [_0x58f094, 0xca, "Lovely Yeti", "arctic/yeti/202/0/yeti"];
      case "abyssalKingCrab":
        return [_0x4d5dff, 0xca, "Abyssal King Crab", "ocean/kingcrab/202/kingcrab"];
      case "hydrothothKraken":
        return [_0x4f1c79, 0xca, "Hydrothoth Kraken", "ocean/kraken/202/1/kraken"];
      case "frostEyeDemon":
        return [_0x58f094, 0xca, "Frosty Eye Demon", "arctic/yeti/202/1/yeti"];
      case "ghoulDragon":
        return [_0x1ae9e8, 0xca, "Ghoul Dragon", "land/dragon/202/1/dragon"];
      case "tankMonster":
        return [_0x28027c, 0xca, "Tank Monster", "land/dinomonster/202/dinomonster"];
      case "fighterJet":
        return [_0x5b1639, 0xca, "Fighter Jet", "volcano/landmonster/202/landmonster"];
      case "submarineMonster":
        return [_0x250a37, 0xca, "Submarine Monster", "ocean/seamonster/202/seamonster"];
      case "kingGraveyard1":
        return [_0x5eebcf, 0xca, "King Graveyard", "volcano/kingdragon/202/kingdragon"];
      case "fairyRabbit":
        return [_0x388c4c, 0xdc, "Fairy Rabbit", "land/rabbit/220/rabbit"];
      case "darkMatterWarthog":
        return [_0x1b8b5e, 0xca, "Dark Matter Warthog", "desert/warthog/220/warthog"];
      case "fumigatorPig":
        return [_0xc58c70, 0xdc, "Fumigator Pig", "land/pig/220/pig"];
      case "moltenToucan":
        return [_0x65dffc, 0xdc, "Molten Toucan", "land/toucan/220/toucan.ui"];
      case "summonerWolverine":
        return [_0x4a1394, 0xdc, "Summoner Wolverine", "arctic/wolverine/220/wolverine"];
      case "golemMammoth":
        return [_0x5ab376, 0xdc, "Golem Mammoth", "arctic/mammoth/220/mammoth"];
      case "glacialDemon":
        return [_0x58f094, 0xdc, "Glacial Demon", "arctic/yeti/220/yeti"];
      case "cordyceraDino":
        return [_0x28027c, 0xdc, "Cordycera Dino", "land/dinomonster/220/dinomonster"];
      case "blazingIceMonster":
        return [_0x448b86, 0xdc, "BlazingIce Monster", "arctic/icemonster/220/icemonster"];
      case "bioMutantTRex":
        return [_0x11d87b, 0xdc, "Bio Mutant T-rex", "land/trex/220/trex"];
      case "sunsetOstrich":
        return [_0x19797d, 0xdc, "Sunset Ostrich", "land/ostrich/220/ostrich"];
      case "lightwaveElephant":
        return [_0xb5d198, 0xdc, "Lightwave Elephant", "land/elephant/220/elephant"];
      case "inkRhino":
        return [_0x1e9785, 0xdc, "Ink Rhino", "land/rhino/220/rhino"];
      case "dimensionalMonster":
        return [_0x250a37, 0xdc, "Dimensional Monster", "ocean/seamonster/220/seamonster"];
      case "nebuladonScorpion":
        return [_0x321383, 0xdc, "Nebuladon Scorpion", "desert/scorpion/220/giantscorpion"];
      case "ghastlyJadeLion":
        return [_0x3cc7bc, 0xdc, "Ghastly Jade Lion", "land/lion/220/lion"];
      case "belphegor":
        return [_0x5b1639, 0xdc, "Belphegor", "volcano/landmonster/220/landmonster"];
      case "muscipulaRaven":
        return [_0x6af42d, 0xdc, "Muscipula Raven", "forest/raven/220/raven"];
      case "behemothHiveDragon":
        return [_0x1ae9e8, 0xdc, "Behemoth Hive Dragon", "land/dragon/220/dragon"];
      case "okamiWolf":
        return [_0x364eae, 0xdc, "Okami Wolf", "arctic/wolf/220/wolf"];
      case "starCrusherCrab":
        return [_0x4d5dff, 0xdc, "Star Crusher Crab", "ocean/kingcrab/220/kingcrab"];
      case "drBrainiopod":
        return [_0x4f1c79, 0xdc, "Dr. Brainiopod", "ocean/kraken/220/kraken"];
      case "xmas22_iceHuskTrout":
        return [_0x3dee49, 0xde, "Ice Husk Trout", "ocean/trout/222/trout"];
      case "xmas22_jollyRabbit":
        return [_0x388c4c, 0xde, "Jolly Rabbit", "land/rabbit/222/rabbit"];
      case "xmas22_peppermintLandMonster":
        return [_0x5b1639, 0xde, "Peppermint Land Monster", "volcano/landmonster/222/landmonster"];
      case "xmas22_gingerbreadKraken":
        return [_0x4f1c79, 0xde, "Gingerbread Kraken", "ocean/kraken/222/kraken"];
      case "val23_wolverine":
        return [_0x4a1394, 0x0, "Valentine Wolverine", "arctic/wolverine/0/223/wolverine"];
      case "val23_orca":
        return [_0x573db4, 0x0, "Valentine Orca", "ocean/killerwhale/0/223/killerwhale"];
      case "val23_mamoth":
        return [_0x5ab376, 0x0, "Valentine Mammoth", "arctic/mammoth/0/223/mammoth"];
      case "val23_whale":
        return [_0x1c2dd4, 0x0, "Valentine Whale", "ocean/bluewhale/0/223/bluewhale"];
      case "val23_walrus":
        return [_0x379cc3, 0x0, "Valentine Walrus", "arctic/walrus/0/223/walrus"];
      case "val23_stingray":
        return [_0x2429b5, 0x0, "Valentine Stingray", "ocean/stingray/0/223/stingray"];
      case "val23_snowleopard":
        return [_0x72b8ae, 0x0, "Valentine Snow Leopard", "arctic/snowleopard/0/223/snowleopard"];
      case "val23_gorilla":
        return [_0x33164c, 0x0, "Valentine Gorilla", "land/gorilla/0/223/gorilla"];
    }
    return null;
  });
var _0x1d83bb = _0x381303,
  _0x48c344 = _0x118b41;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344);

function _0x381303() {
  _0x381303["superClass"]["call"](this, _0x5038f9);
}
(_0x381303["prototype"]["loadShopData"] = function (_0x302cb8) {
  _0x381303["superClass"]["prototype"]["loadShopData"]["call"](this, _0x302cb8),
    (this["itemName"] = _0x302cb8["itemName"]),
    (this["title"] = _0x302cb8["title"]),
    (this["saleType"] = _0x302cb8["saleType"]),
    (this["salePrice"] = _0x302cb8["salePrice"]);
}),
  (_0x381303["prototype"]["getShopImageSrc"] = function () {
    return "shop/deals/" + this["itemName"]["toLowerCase"]() + ".png";
  }),
  (_0x381303["prototype"]["getImage"] = function () {
    var _0x5cd35d = new Image();
    return (_0x5cd35d["className"] = "shopdeal"), (_0x5cd35d["src"] = "shop/deals/" + this["itemName"]["toLowerCase"]() + ".png"), _0x5cd35d;
  }),
  (_0x381303["prototype"]["getTitle"] = function () {
    var _0x338638 = "" + this["title"];
    return _0x338638["replace"]("\x0a", "<br>")["toUpperCase"]();
  }),
  (_0x381303["prototype"]["generateHtml"] = function (_0x5edba0) {
    var _0x6f8669 = "item deal" + (this["coinsPrice"] == -0x1 ? " itemOwned buyItem" : " buyItem") + " " + this["itemName"];
    if (_0x5edba0 == _0x4b9577) _0x6f8669 = _0x6f8669 + " confirm_deal";
    var _0x34de97 = _0x404ce0("", _0x6f8669),
      _0x42b756 = _0x404ce0("", "image " + "biome_" + this["biome"]),
      _0x1f3285 = _0x404ce0("", "price"),
      _0x234971 = _0x404ce0("", "orig-value");
    _0x34de97["setAttribute"]("title", this["getTitle"]()["replace"]("<BR>", " ")), (_0x1f3285["innerHTML"] = this["getTitle"]());
    var _0x39cc27 = this["getImage"]();
    _0x42b756["appendChild"](_0x39cc27);
    if (this["coinsPrice"] > 0x0) {
      var _0x4486ed = "";
      if (this["saleType"] == 0x1) _0x4486ed = "NEW BUNDLE";
      else {
        if (this["saleType"] == 0x2) _0x4486ed = "SALE BUNDLE";
      }
      if (_0x4486ed != "") {
        var _0x2946a4 = _0x404ce0("newItem_" + this["animalType"], "newItem");
        (_0x2946a4["innerHTML"] = _0x4486ed), _0x34de97["appendChild"](_0x2946a4);
      }
    }
    _0x34de97["appendChild"](_0x42b756), _0x34de97["appendChild"](_0x1f3285);
    if (this["saleType"] == 0x2) {
      var _0x4148e2 = new Image();
      (_0x4148e2["className"] = "buycoin-img"), (_0x4148e2["src"] = "shop/mopecoin.png");
      var _0x249449 = _0x1f8853("span", "", "buycoin-price");
      (_0x249449["innerHTML"] = this["coinsPrice"]), _0x234971["appendChild"](_0x4148e2), _0x234971["appendChild"](_0x249449);
    }
    if (this["coinsPrice"] > 0x0) _0x34de97["appendChild"](_0x234971), _0x34de97["appendChild"](this["btn"]["generateHtml"](_0x5edba0));
    else {
    }
    return _0x34de97;
  }),
  (_0x381303["prototype"]["fillItemDetails"] = function (_0x28e372) {
    var _0x5a4987 = _0x404ce0("bundleSkins", "bundleSkins_" + this["itemName"]);
    _0x28e372["appendChild"](_0x5a4987);
    if (this["data"]["aniTypes"] == undefined)
      for (i = 0x0; i < _0x51b124["shop"]["allItems"]["length"]; i++) {
        var _0x2c831d = _0x51b124["shop"]["allItems"][i];
        console["log"](_0x2c831d["data"]);
        if (_0x2c831d["data"]["shopCategory"] == "halloween")
          console["log"](_0x2c831d["data"]["promotions"] + " = " + this["itemName"]["toLowerCase"]());
        if (
          _0x2c831d &&
          _0x2c831d["data"]["promotions"] &&
          _0x2c831d["data"]["promotions"]["toLowerCase"]()["indexOf"](this["itemName"]["toLowerCase"]()) > -0x1
        ) {
          var _0x4413ba = _0x51b124["getPostFixForItem"](_0x2c831d["data"]["itemName"]),
            _0x3c49c0 = _0x2c831d["getImagePromo"](_0x4413ba);
          (_0x3c49c0["className"] = "bundleSkinImg" + (_0x2c831d["coinsPrice"] == -0x1 ? " bought" : "")),
            (_0x3c49c0["width"] = "40px"),
            _0x5a4987["appendChild"](_0x3c49c0);
        }
      }
    else {
      if (this["data"]["aniTypes"] != undefined)
        for (i = 0x0; i < this["data"]["aniTypes"]["length"]; i++) {
          if (this["data"]["aniTypes"][i] == 0x3e8) continue;
          var _0x1a2cff = _0x51b124["getSkinPath"](this["data"]["aniTypes"][i], this["data"]["theme"]);
          console["log"](_0x1a2cff);
          var _0x3c49c0 = new Image();
          (_0x3c49c0["src"] = _0x1a2cff),
            (_0x3c49c0["className"] = "bundleSkinImg aniTypes"),
            (_0x3c49c0["width"] = "40px"),
            _0x5a4987["appendChild"](_0x3c49c0);
        }
    }
  }),
  (window["ShopDeal"] = _0x381303);
var _0x5038f9 = 0x3;
_0x49e298["setCustomClassForShopItem"](_0x381303, _0x5038f9);
var _0x1d83bb = _0x4e23fa,
  _0x48c344 = _0x118b41;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344);

function _0x4e23fa() {
  _0x4e23fa["superClass"]["call"](this, _0x5038f9);
}
(_0x4e23fa["prototype"]["loadShopData"] = function (_0xbb4d62) {
  _0x4e23fa["superClass"]["prototype"]["loadShopData"]["call"](this, _0xbb4d62),
    (this["itemName"] = _0xbb4d62["itemName"]),
    (this["title"] = _0xbb4d62["title"]),
    (this["credits"] = _0xbb4d62["credits"]),
    (this["saleType"] = _0xbb4d62["saleType"]),
    (this["salePrice"] = _0xbb4d62["salePrice"]);
}),
  (_0x4e23fa["prototype"]["getShopImageSrc"] = function () {
    return "shop/feature/" + this["itemName"]["toLowerCase"]() + ".png";
  }),
  (_0x4e23fa["prototype"]["getImage"] = function () {
    var _0x57ef96 = new Image();
    return (_0x57ef96["className"] = "shopFeature"), (_0x57ef96["src"] = "shop/feature/" + this["itemName"]["toLowerCase"]() + ".png"), _0x57ef96;
  }),
  (_0x4e23fa["prototype"]["getTitle"] = function () {
    var _0x15906f = "" + this["title"];
    return _0x15906f["replace"]("\x0a", "<br>")["toUpperCase"]();
  }),
  (_0x4e23fa["prototype"]["generateHtml"] = function (_0x3e7468) {
    var _0xcf367f = "item feature " + (this["coinsPrice"] == -0x1 ? " itemOwned" : " buyItem") + " " + this["itemName"];
    if (_0x3e7468 == _0x4b9577) _0xcf367f = _0xcf367f + " confirm_item";
    var _0x3c4633 = _0x404ce0("", _0xcf367f),
      _0x1f7108 = _0x404ce0("", "image " + "biome_" + this["biome"]),
      _0x303b6a = _0x404ce0("", "price");
    _0x303b6a["innerHTML"] = this["title"];
    var _0x5d678b = this["getImage"]();
    _0x1f7108["appendChild"](_0x5d678b);
    if (this["coinsPrice"] > 0x0) {
      var _0xd68a0b = "";
      if (this["saleType"] == 0x1) _0xd68a0b = "NEW";
      else {
        if (this["saleType"] == 0x2) _0xd68a0b = "SALE";
      }
      if (_0xd68a0b != "") {
        var _0x14afc3 = _0x404ce0("newItem_" + this["animalType"], "newItem");
        (_0x14afc3["innerHTML"] = _0xd68a0b), _0x3c4633["appendChild"](_0x14afc3);
      }
    }
    _0x3c4633["appendChild"](_0x1f7108), _0x3c4633["appendChild"](_0x303b6a);
    if (this["coinsPrice"] > 0x0) _0x3c4633["appendChild"](this["btn"]["generateHtml"](_0x3e7468));
    else {
      if (_0x3e7468 != _0x33290f) var _0x22c800 = this;
    }
    return _0x3c4633;
  }),
  (_0x4e23fa["prototype"]["fillItemDetails"] = function (_0x24f3a7) {
    var _0x17f639 = _0x404ce0("bundleSkins", "bundleSkins_" + this["itemName"]);
    _0x24f3a7["appendChild"](_0x17f639);
    if (this["data"]["aniTypes"] == undefined)
      for (i = 0x0; i < _0x51b124["shop"]["allItems"]["length"]; i++) {
        var _0x5d015b = _0x51b124["shop"]["allItems"][i];
        if (
          _0x5d015b &&
          _0x5d015b["data"]["promotions"] &&
          _0x5d015b["data"]["promotions"]["toLowerCase"]()["indexOf"](this["itemName"]["toLowerCase"]()) > -0x1
        ) {
          var _0x53ae0b = _0x51b124["getPostFixForItem"](_0x5d015b["data"]["itemName"]),
            _0x57a50c = _0x5d015b["getImagePromo"](_0x53ae0b);
          (_0x57a50c["className"] = "bundleSkinImg" + (_0x5d015b["coinsPrice"] == -0x1 ? " bought" : "")),
            (_0x57a50c["width"] = "40px"),
            _0x17f639["appendChild"](_0x57a50c);
        }
      }
    else
      for (i = 0x0; i < this["data"]["aniTypes"]["length"]; i++) {
        if (this["data"]["aniTypes"][i] == 0x3e8) continue;
        var _0x116b3a = _0x51b124["getSkinPath"](this["data"]["aniTypes"][i], this["data"]["theme"]);
        console["log"](_0x116b3a);
        var _0x57a50c = new Image();
        (_0x57a50c["src"] = _0x116b3a),
          (_0x57a50c["className"] = "bundleSkinImg aniTypes"),
          (_0x57a50c["width"] = "40px"),
          _0x17f639["appendChild"](_0x57a50c);
      }
  }),
  (window["ShopFeature"] = _0x4e23fa);
var _0x36cf4f = 0x4;
_0x49e298["setCustomClassForShopItem"](_0x4e23fa, _0x36cf4f);
var _0x1d83bb = _0x507c8e,
  _0x48c344 = _0x118b41;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344);
var _0x23a74f = 0x3e9;

function _0x507c8e(_0x13f7d4, _0x1d9e4a) {
  _0x507c8e["superClass"]["call"](this, _0x23a74f);
}
(_0x507c8e["prototype"]["data"] = null),
  (_0x507c8e["prototype"]["loadShopData"] = function (_0x1dbba7) {
    _0x507c8e["superClass"]["prototype"]["loadShopData"]["call"](this, _0x1dbba7), (this["data"] = _0x1dbba7), this["getPropType"]();
  }),
  (_0x507c8e["prototype"]["itemType"] = null),
  (_0x507c8e["prototype"]["propType"] = null),
  (_0x507c8e["prototype"]["propColor"] = null),
  (_0x507c8e["prototype"]["getPropType"] = function () {
    if (this["data"] == null) return;
    var _0x56e3e1 = this["data"]["id"]["split"]("_");
    _0x56e3e1["length"] == 0x3 && ((this["itemType"] = _0x56e3e1[0x0]), (this["propType"] = _0x56e3e1[0x1]), (this["propColor"] = _0x56e3e1[0x2]));
  }),
  (window["PropItem"] = _0x507c8e),
  _0x49e298["setCustomClassForShopItem"](_0x507c8e, _0x23a74f);

function _0x3bcfd7(_0x5b65b6) {
  (this["tabs"] = {
    titles: new Array(),
  }),
    (this["data"] = _0x5b65b6),
    (this["load"] = function () {
      for (i = 0x0; i < this["data"]["length"]; i++) {
        var _0x155349 = this["data"][i]["itemType"];
        this["tabs"][_0x155349] === undefined && (this["tabs"]["titles"]["push"](_0x155349), (this["tabs"][_0x155349] = new Array())),
          this["tabs"][_0x155349]["push"](this["data"][i]);
      }
    });
}
var _0x1d83bb = _0x20420e,
  _0x48c344 = _0xe4ec38;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344),
  (_0x1d83bb["prototype"]["arenaState"] = 0x0),
  (_0x1d83bb["prototype"]["fightNumber"] = 0x0),
  (_0x1d83bb["prototype"]["climaxType"] = 0x1),
  (_0x1d83bb["prototype"]["timer"] = 0x0),
  (_0x1d83bb["prototype"]["timerTxt"] = null),
  (_0x1d83bb["prototype"]["p1Name"] = null),
  (_0x1d83bb["prototype"]["p2Name"] = null),
  (_0x1d83bb["prototype"]["p1Bites"] = 0x0),
  (_0x1d83bb["prototype"]["p2Bites"] = 0x0),
  (_0x1d83bb["prototype"]["arenaRad"] = 0xa),
  (_0x1d83bb["prototype"]["nArenaRad"] = 0xa),
  (_0x1d83bb["prototype"]["oArenaRad"] = 0xa),
  (_0x1d83bb["prototype"]["isCountdownTimer"] = !![]),
  (_0x1d83bb["prototype"]["p1PushRemain"] = 0x0),
  (_0x1d83bb["prototype"]["p1DashRemain"] = 0x0),
  (_0x1d83bb["prototype"]["p2PushRemain"] = 0x0),
  (_0x1d83bb["prototype"]["p2DashRemain"] = 0x0),
  (_0x20420e["prototype"]["setTimer"] = function (_0x21ec15) {
    var _0x4b7eeb = "",
      _0x4824fe = 0x19;
    if (this["isCountdownTimer"]) _0x4b7eeb = "" + _0x21ec15;
    else {
      _0x4824fe = 0xf;
      if (this["isCpuVsPlayer"]) _0x4b7eeb = "1v1 REDEMPTION";
      else {
        if (this["arenaModeType"] == 0x2) _0x4b7eeb = "MATCH #" + this["fightNumber"];
        else _0x4b7eeb = "FIGHT\x0a#" + this["fightNumber"];
      }
      _0x4b7eeb = _0x3ab380["name"] + "\x0a" + _0x4b7eeb;
    }
    if (this["isCountdownTimer"]) _0x4824fe = Number(_0x21ec15) ? 0x1e : _0x4824fe;
    null == this["timerTxt"]
      ? ((this["timerTxt"] = new _0x413af8(_0x4824fe, "#FFFFFF")),
        (this["timerTxt"]["strokeW"] = 0x2),
        (this["timerTxt"]["multiLine"] = !![]),
        (this["timerTxt"]["renderScale"] = 0x5),
        this["timerTxt"]["setText"](_0x4b7eeb))
      : (this["timerTxt"]["setFontSize"](_0x4824fe), this["timerTxt"]["setText"](_0x4b7eeb));
    var _0x29f525 = "MOPE";
    if (this["arenaModeType"] == 0x1) _0x29f525 = "NOOB";
    else {
      if (this["arenaModeType"] == 0x2) _0x29f525 = "PRO";
    }
    var _0x1994a0 = this["climaxType"] == 0x1 ? "LAST " + _0x29f525 + " STANDING" : this["maxBitesToWin"] + " BITES WINS";
    null == this["climaxTxt"]
      ? ((this["climaxTxt"] = new _0x413af8(_0x4824fe, "#FFFFFF")),
        (this["climaxTxt"]["strokeW"] = 0x2),
        (this["climaxTxt"]["multiLine"] = !![]),
        (this["climaxTxt"]["renderScale"] = 0x5),
        this["climaxTxt"]["setText"](_0x1994a0))
      : (this["climaxTxt"]["setFontSize"](0xf), this["climaxTxt"]["setText"](_0x1994a0));
  }),
  (_0x20420e["prototype"]["playerFontSize"] = 0xa),
  (_0x20420e["prototype"]["setP1"] = function (_0x4cda4d) {
    var _0x3928fc = "" + _0x4cda4d;
    null == this["p1Name"]
      ? ((this["p1Name"] = new _0x413af8(this["playerFontSize"], "cyan")),
        (this["p1Name"]["strokeW"] = 0x2),
        (this["p1Name"]["multiLine"] = !![]),
        (this["p1Name"]["renderScale"] = 0x2),
        this["p1Name"]["setText"](_0x3928fc))
      : (this["p1Name"]["setFontSize"](this["playerFontSize"]), this["p1Name"]["setText"](_0x3928fc));
  }),
  (_0x20420e["prototype"]["setP2"] = function (_0x300212) {
    var _0x18166a = "" + _0x300212;
    null == this["p2Name"]
      ? ((this["p2Name"] = new _0x413af8(this["playerFontSize"], "yellow")),
        (this["p2Name"]["strokeW"] = 0x2),
        (this["p2Name"]["multiLine"] = !![]),
        (this["p2Name"]["renderScale"] = 0x2),
        this["p2Name"]["setText"](_0x18166a))
      : (this["p2Name"]["setFontSize"](this["playerFontSize"]), this["p2Name"]["setText"](_0x18166a));
  }),
  (_0x20420e["prototype"]["updateZ"] = function () {
    this["z"] = 0x186a2;
  }),
  (_0x20420e["prototype"]["dotX"] = 0.33),
  (_0x20420e["prototype"]["dotY"] = 0.77);
var _0x48b14d = 0x23,
  _0x1afc9f = 0.72,
  _0x2a95d8 = 0.2,
  _0x5e0399 = 0.65,
  _0xa98ac5 = 0xa;
(_0x20420e["prototype"]["glowEffect"] = 0x0),
  (_0x20420e["prototype"]["ver"] = 0x2),
  (_0x20420e["prototype"]["customDraw"] = function (_0x1e5e14) {
    if (_0x34fedb && _0x540d00 && _0x25b741 == this["id"]) this["drawCanvas"]();
    (this["arenaState"] == 0x2 || this["arenaState"] == 0x3) && this["displayEndScreen"]();
    _0x587de3["save"](),
      _0x587de3["rotate"](-0.5 * Math["PI"]),
      _0x587de3["save"](),
      (_0x587de3["globalAlpha"] = 0.065),
      _0x587de3["beginPath"](),
      _0x587de3["arc"](0x0, 0x0, this["rad"], 0x0, 0x2 * Math["PI"], ![]),
      _0x587de3["arc"](0x0, 0x0, this["arenaRad"], 0x0, 0x2 * Math["PI"], !![]),
      (_0x587de3["fillStyle"] = "red"),
      _0x587de3["closePath"](),
      _0x587de3["fill"](),
      _0x587de3["restore"]();
    if (_0x25b741 == this["id"]) {
      if (_0x25b741 == this["id"] && this["arenaState"] == 0x1) {
        _0x587de3["save"](), (_0x587de3["lineWidth"] = 0x4), (_0x587de3["globalAlpha"] = 0.5);
        var _0x2e18bd = -0x2 * this["timeoutAngle"];
        if (this["closingAngleSet"]) {
          var _0x4e0a88 = -0x2 * this["arenaClosingAngle"];
          _0x587de3["save"](),
            _0x587de3["beginPath"](),
            _0x587de3["arc"](0x0, 0x0, this["rad"] - 0x2, _0x4e0a88 * Math["PI"], _0x2e18bd * Math["PI"]),
            (_0x587de3["strokeStyle"] = "red"),
            _0x587de3["stroke"](),
            _0x587de3["restore"](),
            _0x587de3["save"](),
            _0x587de3["beginPath"](),
            _0x587de3["arc"](0x0, 0x0, this["rad"] - 0x2, 0x0, _0x4e0a88 * Math["PI"]),
            (_0x587de3["strokeStyle"] = "#32ff00"),
            _0x587de3["stroke"](),
            _0x587de3["restore"]();
        } else
          _0x587de3["beginPath"](),
            _0x587de3["arc"](0x0, 0x0, this["rad"] - 0x2, 0x0, _0x2e18bd * Math["PI"]),
            (_0x587de3["strokeStyle"] = "#32ff00"),
            _0x587de3["stroke"]();
        _0x587de3["restore"]();
      }
      if (this["showTimerAngle"]) {
        _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0.5);
        var _0x297dad = -0x2 * this["timerAngle"];
        _0x587de3["beginPath"](),
          (_0x587de3["lineWidth"] = 0x2),
          _0x587de3["arc"](0x0, 0x0, this["arenaRad"] + 0x2, 0x0, _0x297dad * Math["PI"]),
          (_0x587de3["strokeStyle"] = "red"),
          _0x587de3["stroke"](),
          _0x587de3["restore"]();
      }
    }
    _0x587de3["restore"]();
    if (this["timerTxt"] != null) {
      if (this["arenaState"] == 0x0) (this["timerTxt"]["x"] = 0x0), (this["timerTxt"]["y"] = 0x0), this["timerTxt"]["draw"]();
      else {
        if (this["arenaState"] == 0x1)
          (this["timerTxt"]["x"] = 0x0),
            (this["timerTxt"]["y"] = -this["rad"] * 0.9),
            this["timerTxt"]["draw"](),
            this["climaxTxt"] != null && ((this["climaxTxt"]["x"] = 0x0), (this["climaxTxt"]["y"] = this["rad"] * 0.85), this["climaxTxt"]["draw"]());
        else
          (this["arenaState"] == 0x2 || this["arenaState"] == 0x3) &&
            ((this["timerTxt"]["x"] = 0x0),
            (this["timerTxt"]["y"] = 0x0),
            this["timerTxt"]["draw"](),
            this["climaxTxt"] != null &&
              ((this["climaxTxt"]["x"] = 0x0), (this["climaxTxt"]["y"] = this["rad"] * 0.85), this["climaxTxt"]["draw"]()));
      }
    }
    var _0x16549d = 0xf,
      _0x3ece15 = this["rad"] / 0x2 + this["rad"] * 0.05;
    if (this["p1Name"] != null) {
      (this["p1Name"]["x"] = -this["rad"] / 0x2), (this["p1Name"]["y"] = -this["rad"] * 0.65), this["p1Name"]["draw"]();
      if (!this["isCpuVsPlayer"]) {
        var _0x389f3f = 0x0,
          _0x452cfb = -this["rad"] * _0x1afc9f;
        (_0x389f3f -= _0x48b14d), (_0x452cfb -= _0x16549d * 0x2);
        var _0x1d148f = this["getSkinImageObj"]("img/fire/0/0.png");
        for (i = 0x0; i < this["getLives"](); i++) {
          _0x389f3f -= _0x16549d * 2.2;
          if (_0x1d148f) {
            _0x587de3["save"]();
            if (this["roundsWon_p1"] > 0x0 && i + 0x1 <= this["roundsWon_p1"]) _0x587de3["globalAlpha"] = 0.8;
            else _0x587de3["globalAlpha"] = 0.2;
            _0x587de3["drawImage"](_0x1d148f, _0x389f3f - _0x16549d, _0x452cfb - _0x16549d, _0x16549d * 0x2, _0x16549d * 0x2), _0x587de3["restore"]();
          }
        }
      }
    }
    if (this["p2Name"] != null) {
      (this["p2Name"]["x"] = this["rad"] / 0x2), (this["p2Name"]["y"] = -this["rad"] * 0.65), this["p2Name"]["draw"]();
      if (!this["isCpuVsPlayer"]) {
        var _0x389f3f = 0x0,
          _0x452cfb = -this["rad"] * _0x1afc9f;
        (_0x389f3f = _0x48b14d), (_0x452cfb -= _0x16549d * 0x2);
        var _0x1d148f = this["getSkinImageObj"]("img/fire/0/0.png");
        for (i = 0x0; i < this["getLives"](); i++) {
          _0x389f3f += _0x16549d * 2.2;
          if (_0x1d148f) {
            _0x587de3["save"]();
            if (this["roundsWon_p2"] > 0x0 && i + 0x1 <= this["roundsWon_p2"]) _0x587de3["globalAlpha"] = 0.8;
            else _0x587de3["globalAlpha"] = 0.2;
            _0x587de3["drawImage"](_0x1d148f, _0x389f3f - _0x16549d, _0x452cfb - _0x16549d, _0x16549d * 0x2, _0x16549d * 0x2), _0x587de3["restore"]();
          }
        }
      }
    }
    if (_0x204989 != 0x0 && this["id"] == _0x25b741 && this["arenaState"] == 0x0) {
    }
  });
var _0x38d10f = 0x1,
  _0x419b8a = 0x3,
  _0x25a04e = 0x5,
  _0x21bead = 0x9;
(_0x20420e["prototype"]["getLives"] = function () {
  switch (this["fightType"]) {
    case _0x38d10f:
      return 0x1;
    case _0x419b8a:
      return 0x2;
    case _0x25a04e:
      return 0x3;
    case _0x21bead:
      return 0x5;
  }
  return 0x1;
}),
  (_0x20420e["prototype"]["hasAdLoaded"] = ![]),
  (_0x20420e["prototype"]["isCpuVsPlayer"] = ![]),
  (_0x20420e["prototype"]["arenaModeType"] = 0x0),
  (_0x20420e["prototype"]["canPush"] = ![]),
  (_0x20420e["prototype"]["canDash"] = ![]),
  (_0x20420e["prototype"]["isDarkTheme"] = ![]),
  (_0x20420e["prototype"]["custom_canvas"] = null),
  (_0x20420e["prototype"]["drawCanvas"] = function () {
    if (this["custom_canvas"] == null) {
      this["custom_canvas"] = document["createElement"]("canvas");
      var _0x1536a2 = this["rad"] * 0xa,
        _0x3bf0e1 = this["rad"] * 0xa;
      (this["custom_canvas"]["width"] = _0x1536a2), (this["custom_canvas"]["height"] = _0x3bf0e1);
      var _0x345fec = this["custom_canvas"]["getContext"]("2d");
      _0x345fec["save"](),
        (_0x345fec["globalAlpha"] = 0x1),
        (_0x345fec["fillStyle"] = "black"),
        _0x345fec["fillRect"](0x0, 0x0, this["custom_canvas"]["width"], this["custom_canvas"]["height"]),
        (_0x345fec["globalCompositeOperation"] = "xor"),
        _0x345fec["beginPath"](),
        _0x345fec["arc"](_0x1536a2 / 0x2, _0x1536a2 / 0x2, this["rad"], 0x0, 0x2 * Math["PI"]),
        (_0x345fec["fillStyle"] = "blue"),
        _0x345fec["fill"](),
        _0x345fec["restore"]();
    }
    this["custom_canvas"] != null &&
      (_0x587de3["save"](),
      (_0x587de3["globalAlpha"] = 0.5),
      _0x587de3["drawImage"](
        this["custom_canvas"],
        -this["custom_canvas"]["width"] / 0x2,
        -this["custom_canvas"]["height"] / 0x2,
        this["custom_canvas"]["width"],
        this["custom_canvas"]["height"]
      ),
      _0x587de3["restore"]());
  }),
  (_0x20420e["prototype"]["timerAngle"] = 0x0),
  (_0x20420e["prototype"]["nTimerAngle"] = 0x0),
  (_0x20420e["prototype"]["showTimerAngle"] = !![]),
  (_0x20420e["prototype"]["nTimeoutAngle"] = 0x0),
  (_0x20420e["prototype"]["timeoutAngle"] = 0x0),
  (_0x20420e["prototype"]["arenaTimeoutLeft"] = 0x0),
  (_0x20420e["prototype"]["isArenaClosing"] = ![]),
  (_0x20420e["prototype"]["closingAngleSet"] = ![]),
  (_0x20420e["prototype"]["arenaClosingAngle"] = 0x0),
  (_0x20420e["prototype"]["onLerpUpdate"] = function (_0x2f476a) {
    _0x20420e["superClass"]["prototype"]["onLerpUpdate"]["call"](this, _0x2f476a),
      (this["arenaRad"] += (this["nArenaRad"] - this["arenaRad"]) * 0.1),
      (this["timerAngle"] += (this["nTimerAngle"] - this["timerAngle"]) * 0.1),
      (this["timeoutAngle"] += (this["nTimeoutAngle"] - this["timeoutAngle"]) * 0.1);
  }),
  (_0x20420e["prototype"]["timeLeft"] = 0x0),
  (_0x20420e["prototype"]["fightType"] = 0x0),
  (_0x20420e["prototype"]["rounds"] = 0x0),
  (_0x20420e["prototype"]["roundsWon_p1"] = 0x0),
  (_0x20420e["prototype"]["roundsWon_p2"] = 0x0),
  (_0x20420e["prototype"]["resetArena"] = ![]),
  (_0x20420e["prototype"]["player1DarkTheme"] = ![]),
  (_0x20420e["prototype"]["player2DarkTheme"] = ![]),
  (_0x20420e["prototype"]["readCustomData_onNewlyVisible"] = function (_0x27a9f4) {
    _0x20420e["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x27a9f4),
      (this["fightType"] = _0x27a9f4["readUInt8"]()),
      (this["arenaState"] = _0x27a9f4["readUInt8"]()),
      (this["rounds"] = _0x27a9f4["readUInt8"]()),
      (this["p1"] = _0x27a9f4["readString"]()),
      (this["p2"] = _0x27a9f4["readString"]()),
      (this["arenaModeType"] = _0x27a9f4["readUInt8"]()),
      (this["isCpuVsPlayer"] = this["arenaModeType"] == 0x1 || this["arenaModeType"] == 0x2),
      (this["p1Wins"] = _0x27a9f4["readUInt8"]()),
      (this["p2Wins"] = _0x27a9f4["readUInt8"]()),
      (this["fightNumber"] = _0x27a9f4["readUInt16"]());
    var _0x12e879 = _0x27a9f4["readUInt16"]() / 0x64;
    (this["oArenaRad"] = this["arenaRad"]), (this["nArenaRad"] = _0x12e879), this["setNames"](), (this["climaxType"] = _0x27a9f4["readUInt8"]());
    if (this["climaxType"] == 0x2) this["maxBitesToWin"] = _0x27a9f4["readUInt8"]();
    (this["canPush"] = _0x27a9f4["readUInt8"]() == 0x1), (this["canDash"] = _0x27a9f4["readUInt8"]() == 0x1);
  }),
  (_0x20420e["prototype"]["readUpdatedProperty"] = function (_0x4c2cda, _0x46f0b4) {
    if (_0x4c2cda == _0x174d6) this["arenaState"] = _0x46f0b4["readUInt8"]();
    else {
      if (_0x4c2cda == _0x17fe93) this["rounds"] = _0x46f0b4["readUInt8"]();
      else {
        if (_0x4c2cda == _0x5648a8) {
          var _0xf026c8 = _0x46f0b4["readUInt16"]() / 0x64;
          (this["oArenaRad"] = this["arenaRad"]), (this["nArenaRad"] = _0xf026c8);
        } else {
          if (_0x4c2cda == _0x263cc5) {
            (this["closingAngleSet"] = this["isArenaClosing"] = ![]),
              (this["timer"] = _0x46f0b4["readUInt16"]() / 0x64),
              (this["isCountdownTimer"] = !![]);
            if (this["timer"] < 0x17) this["updateTimer"]();
          } else {
            if (_0x4c2cda == _0x1cb3a1)
              (this["timer"] = _0x46f0b4["readUInt16"]() / 0x64),
                (this["isCountdownTimer"] = ![]),
                this["updateTimer"](),
                (this["displayAds"] = ![]),
                (this["adShown"] = ![]);
            else {
              if (_0x4c2cda == _0x13660a) (this["timeLeft"] = _0x46f0b4["readUInt16"]()), (this["nTimerAngle"] = this["timeLeft"] / 0x3e8);
              else {
                if (_0x4c2cda == _0x5a479c) this["showTimerAngle"] = _0x46f0b4["readUInt8"]() == 0x1;
                else {
                  if (_0x4c2cda == _0x59099f)
                    (this["isArenaClosing"] = _0x46f0b4["readUInt8"]() == 0x1),
                      this["isArenaClosing"] &&
                        !this["closingAngleSet"] &&
                        ((this["closingAngleSet"] = !![]), (this["arenaClosingAngle"] = this["timeoutAngle"]));
                  else {
                    if (_0x4c2cda == _0x5f213b)
                      (this["arenaTimeoutLeft"] = _0x46f0b4["readUInt16"]()), (this["nTimeoutAngle"] = this["arenaTimeoutLeft"] / 0x3e8);
                    else {
                      if (_0x4c2cda == _0x240158) {
                        this["winner"] = _0x46f0b4["readUInt8"]();
                        var _0x361bb9 = "" + this["p1"];
                        if (_0x361bb9["length"] == 0x0) _0x361bb9 = "mope.io";
                        var _0x39972d = "" + this["p2"];
                        if (_0x39972d["length"] == 0x0) _0x39972d = "mope.io";
                        if (this["winner"] == 0x1) this["winnerName"] = _0x361bb9;
                        else this["winnerName"] = _0x39972d;
                      } else {
                        if (_0x4c2cda == _0x54f65) this["winnerMsg"] = _0x46f0b4["readString"]();
                        else {
                          if (_0x4c2cda == _0x4110d9) (this["p1Bites"] = _0x46f0b4["readUInt8"]()), this["setNames"]();
                          else {
                            if (_0x4c2cda == _0xd49969) (this["p2Bites"] = _0x46f0b4["readUInt8"]()), this["setNames"]();
                            else {
                              if (_0x4c2cda == _0x148224) this["winBonus"] = _0x46f0b4["readUInt32"]();
                              else {
                                if (_0x4c2cda == _0x5f48fd) this["roundsWon_p1"] = _0x46f0b4["readUInt8"]();
                                else {
                                  if (_0x4c2cda == _0x41251f) this["roundsWon_p2"] = _0x46f0b4["readUInt8"]();
                                  else {
                                    if (_0x4c2cda == _0x2d6bc4) this["p1Wins"] = _0x46f0b4["readUInt8"]();
                                    else {
                                      if (_0x4c2cda == _0x1fca1a) this["p2Wins"] = _0x46f0b4["readUInt8"]();
                                      else {
                                        if (_0x4c2cda == _0x22570e) (this["p1"] = _0x46f0b4["readString"]()), this["setNames"]();
                                        else {
                                          if (_0x4c2cda == _0x494e18) (this["p2"] = _0x46f0b4["readString"]()), this["setNames"]();
                                          else {
                                            if (_0x4c2cda == _0x59e164) {
                                              var _0x2a78a6 = _0x46f0b4["readUInt8"]() == 0x1;
                                              this["resetArena"] != _0x2a78a6 && ((this["endScreenState"] = 0x0), (this["resetArena"] = _0x2a78a6));
                                            } else {
                                              if (_0x4c2cda == _0x102945) this["fightNumber"] = _0x46f0b4["readUInt16"]();
                                              else {
                                                if (_0x4c2cda == _0x8d0c8e) this["player1DarkTheme"] = _0x46f0b4["readUInt8"]() == 0x1;
                                                else _0x4c2cda == _0x45994b && (this["player2DarkTheme"] = _0x46f0b4["readUInt8"]() == 0x1);
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }),
  (_0x20420e["prototype"]["endScreenState"] = -0x1),
  (_0x20420e["prototype"]["endScreenChangeT"] = 0x0),
  (_0x20420e["prototype"]["resetEndScreenState"] = !![]),
  (_0x20420e["prototype"]["displayEndScreen"] = function () {
    _0x168a54 >= this["endScreenChangeT"] && (this["endScreenState"]++, (this["endScreenChangeT"] = _0x168a54 + 0xbb8));
    if (this["timerTxt"] != null) {
      if (this["endScreenState"] == 0x0) this["timerTxt"]["setFontSize"](0x28), this["timerTxt"]["setText"]("\x0aKO!");
      else {
        if (this["endScreenState"] == 0x1) this["timerTxt"]["setFontSize"](0x14), this["timerTxt"]["setText"](this["winnerName"] + "\x0aWON!");
        else
          this["endScreenState"] >= 0x3 &&
            (this["timerTxt"]["setFontSize"](0x14),
            this["winBonus"] !== undefined &&
              this["winnerMsg"] != null &&
              this["winBonus"] > 0x0 &&
              this["timerTxt"]["setText"](this["winnerMsg"] + "\x0aWIN BONUS: " + _0x105fd1(this["winBonus"])));
      }
    }
  }),
  (_0x20420e["prototype"]["challenger"] = null),
  (_0x20420e["prototype"]["opponent"] = null),
  (_0x20420e["prototype"]["setNames"] = function () {
    var _0x5545ee = "" + this["p1"];
    if (_0x5545ee["length"] == 0x0) _0x5545ee = "mope.io";
    var _0x6ff108 = "" + this["p2"];
    if (_0x6ff108["length"] == 0x0) _0x6ff108 = "mope.io";
    var _0x512609 = this["isCpuVsPlayer"] ? "level" : "wins",
      _0x1d51ce = "\x0a(" + _0x512609 + ": " + this["p1Wins"] + ")",
      _0x1a6ed1 = "\x0a(" + _0x512609 + ": " + this["p2Wins"] + ")",
      _0x265561 = "\x0abites: " + this["p1Bites"],
      _0x2bd1e8 = "\x0abites: " + this["p2Bites"];
    if (this["arenaState"] < 0x3)
      (this["challenger"] = _0x5545ee + _0x1d51ce),
        (this["opponent"] = _0x6ff108 + _0x1a6ed1),
        this["setP1"](_0x5545ee + _0x1d51ce + _0x265561),
        this["setP2"](_0x6ff108 + _0x1a6ed1 + _0x2bd1e8);
    else {
      if (this["arenaState"] == 0x3) {
        if (this["winner"] == 0x1) (this["winnerName"] = _0x5545ee), this["setP1"](_0x5545ee + _0x1d51ce + _0x265561), (this["p2Name"] = null);
        else this["winner"] == 0x2 && ((this["winnerName"] = _0x6ff108), this["setP2"](_0x6ff108 + _0x1a6ed1 + _0x2bd1e8), (this["p1Name"] = null));
      }
    }
  }),
  (_0x20420e["prototype"]["updateTimer"] = function () {
    this["timer"] = Math["round"](this["timer"]);
    var _0x29dfea = this["timer"];
    if (this["isCountdownTimer"]) {
      switch (this["timer"]) {
        case 0x17:
          _0x29dfea = "";
          break;
        case 0x16:
        case 0x15:
          if (this["arenaModeType"] == 0x3) _0x29dfea = "1V1 TOURNAMENT";
          else _0x29dfea = "WELCOME TO 1V1 ARENA";
          break;
        case 0x14:
        case 0x13:
          if (this["arenaModeType"] == 0x3) _0x29dfea = "MATCH #" + this["fightNumber"];
          else {
            var _0x4f160b = "MAN";
            if (this["arenaModeType"] == 0x1) _0x4f160b = "NOOB";
            else {
              if (this["arenaModeType"] == 0x2) _0x4f160b = "PRO";
            }
            (_0x29dfea =
              "FIGHT #" +
              this["fightNumber"] +
              "\x0a" +
              (this["climaxType"] == 0x1 ? "LAST " + _0x4f160b + " STANDING" : this["maxBitesToWin"] + " BITES TO WIN")),
              (_0x29dfea = _0x3ab380["name"] + "\x0a" + _0x29dfea);
          }
          break;
        case 0x12:
        case 0x11:
          if (!this["isCpuVsPlayer"]) {
            _0x29dfea = "CHALLENGER";
            break;
          }
        case 0x10:
        case 0xf:
          if (this["isCpuVsPlayer"]) _0x29dfea = "REDEMPTION\x0aLEVEL " + this["p1Wins"];
          else _0x29dfea = this["challenger"];
          break;
        case 0xe:
        case 0xd:
          _0x29dfea = "OPPONENT";
          break;
        case 0xc:
        case 0xb:
          _0x29dfea = this["opponent"];
          break;
        case 0x2:
          _0x29dfea = "ROUND " + this["rounds"];
          break;
        case 0x1:
          _0x29dfea = "GET SET";
          break;
        case 0x0:
          _0x29dfea = "FIGHT";
          break;
      }
      if (this["timer"] < 0x14 && !this["displayAds"] && !this["adShown"]) this["displayAds"] = !![];
    }
    this["setTimer"](_0x29dfea);
  }),
  (_0x20420e["prototype"]["adShown"] = ![]),
  (_0x20420e["prototype"]["displayAds"] = ![]),
  (_0x20420e["prototype"]["displayedAdsOnEnd"] = ![]),
  (_0x20420e["prototype"]["showAds"] = function (_0x2a8137) {
    if (!_0x4857c8)
      !this["adShown"] &&
        this["displayAds"] &&
        _0x9aae34 > 0xd &&
        ((this["adShown"] = !![]),
        _0x17b890($bus["CONSTANTS"]["AD_SCREEN_LAYOUTS"]["ARENA"]),
        setTimeout(() => {
          _0x297c16();
        }, _0x2a8137));
  }),
  (_0x20420e["prototype"]["removeAds"] = function () {
    _0x25b741 == this["id"] && _0x297c16();
  }),
  (_0x20420e["prototype"]["onRemovedFromGame"] = function () {
    console["log"]("Arena removed from game!");
  });

function _0x20420e() {
  _0x20420e["superClass"]["call"](this), (this["hasAdLoaded"] = ![]);
}
(window["AbilityObj1v1Arena"] = _0x20420e), _0x17bf26["setCustomClassForGameObjType"](_0x20420e, _0x5aa814, _0x866e9);
var _0x3faeff = _0x3faeff,
  _0x48c344 = _0x3799d1;
(_0x3faeff["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x3faeff["prototype"]["constructor"] = _0x3faeff),
  (_0x3faeff["superClass"] = _0x48c344),
  (_0x3faeff["prototype"]["getSkinName"] = function () {
    if (this["animalSpecies"] == 0xdc && this["animalSubSpecies"] == 0x0) return "ocean/seamonster/" + this["animalSpecies"] + "/seamonster1";
    else return "ocean/seamonster/" + this["animalSpecies"] + "/seamonster";
  }),
  (_0x3faeff["prototype"]["calcAnimalZIndex"] = function () {
    if (this["flag_underWater"]) this["z"] = -0x64;
    else {
      if (this["flag_isInArena"]) this["z"] += 0x3e8;
      else {
        if (this["flag_eff_tossedInAir"]) this["z"] = 0x4b0 + this["rad"];
        else this["z"] = 0x3e8 + this["rad"];
      }
    }
  }),
  (_0x3faeff["prototype"]["animalInfo"] = function () {
    var _0x58fd4c = {},
      _0x1ab312 = "";
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x58fd4c["aniName"] = "Sea Monster";
        break;
      case 0x1:
        _0x58fd4c["aniName"] = "Golden Sea Monster";
        break;
      case 0x2:
        _0x58fd4c["aniName"] = "Sapphire Monster";
        break;
      case 0xc8:
        _0x58fd4c["aniName"] = "Luckycharm Monster";
        break;
      case 0xc9:
        _0x58fd4c["aniName"] = "Ancient Tortoise";
        break;
      case 0xca:
        _0x58fd4c["aniName"] = "Submarine Monster";
        break;
      case 0xdc:
        _0x58fd4c["aniName"] = "Dimensional Monster";
        break;
    }
    return (
      (_0x58fd4c["aniCol"] = "blue"),
      (_0x58fd4c["upgradeText"] = "UPGRADED to " + _0x58fd4c["aniName"] + "!\x0aCreate whirlpool to trap prey!" + _0x1ab312),
      (_0x58fd4c["skinName"] = "ocean/seamonster/" + this["animalSpecies"] + "/seamonster"),
      _0x58fd4c
    );
  }),
  (_0x3faeff["prototype"]["getAbilityInfo"] = function (_0x4cdf9e) {
    var _0x554d8 = {};
    return (
      (_0x554d8["abilName"] = "Giant Whirlpool"),
      (_0x554d8["abilImg"] = "abilities/Whirlpool.svg"),
      (_0x554d8["skinThemeID"] = this["skinThemeID"]),
      (_0x554d8["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x554d8
    );
  }),
  (_0x3faeff["prototype"]["drawSkinCustomization"] = function () {
    this["setSkinScale"]();
    if (this["animalSpecies"] == 0xdc && this["animalSubSpecies"] == 0x0) {
      var _0x26837b = "skins/ocean/seamonster/220/",
        _0x23f7d9 = this["skinScale"] * 1.07,
        _0x37f439 = this["skinRad"],
        _0x1b8a78 = 0x1 + (Math["trunc"](_0x168a54 / 0x78) % 0x8),
        _0x317ddc = 0x0,
        _0xc9154 = this["getSkinImageObj"](_0x26837b + "/anim/" + _0x1b8a78 + ".png");
      _0xc9154 &&
        (_0x587de3["save"](),
        _0x587de3["drawImage"](
          _0xc9154,
          -_0x37f439 * _0x23f7d9,
          (-_0x37f439 + _0x37f439 * 0.05) * _0x23f7d9 - _0x317ddc,
          0x2 * _0x37f439 * _0x23f7d9,
          0x2 * _0x37f439 * _0x23f7d9
        ),
        _0x587de3["restore"]());
    }
  }),
  (_0x3faeff["prototype"]["basicDrawSkinImg"] = function () {
    if (this["animalSpecies"] == 0xdc && this["animalSubSpecies"] == 0x0) {
      this["setSkinScale"]();
      var _0x14e88d = this["skinScale"],
        _0x59359d = this["skinRad"];
      this["loadedSkinImg"] &&
        ((overSizeOffset = this["skinRad"] / 0x2),
        _0x587de3["drawImage"](
          this["loadedSkinImg"],
          -_0x59359d * _0x5ef136,
          -_0x59359d * _0x5ef136,
          0x2 * _0x59359d * _0x5ef136,
          0x2 * _0x59359d * _0x5ef136
        ));
    } else _0x3faeff["superClass"]["prototype"]["basicDrawSkinImg"]["call"](this);
  });

function _0x3faeff() {
  _0x3faeff["superClass"]["call"](this, _0x3fb3b2);
}
(window["SeaMonster"] = _0x3faeff), _0x17bf26["setCustomClassForGameObjType"](_0x3faeff, _0x3fb3b2, _0x250a37);
var _0x446689 = _0x446689,
  _0x48c344 = _0x3799d1;
(_0x446689["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x446689["prototype"]["constructor"] = _0x446689),
  (_0x446689["superClass"] = _0x48c344),
  (_0x446689["prototype"]["calcAnimalZIndex"] = function () {
    if (this["flag_underWater"]) this["z"] = -0x64;
    else {
      if (this["flag_isInArena"]) this["z"] += 0x3e8;
      else {
        if (this["flag_eff_tossedInAir"]) this["z"] = 0x4b0 + this["rad"];
        else this["z"] = 0x4b0 + this["rad"];
      }
    }
  }),
  (_0x446689["prototype"]["animalInfo"] = function () {
    var _0x429d68 = {},
      _0x30e1e9 = "";
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x429d68["aniName"] = "Land Monster";
        break;
      case 0x1:
        _0x429d68["aniName"] = "Golden Land Monster";
        break;
      case 0x2:
        _0x429d68["aniName"] = "Titanite Monster";
        break;
      case 0xca:
        _0x429d68["aniName"] = "Fighter Jet";
        break;
      case 0xcc:
        switch (this["animalSubSpecies"]) {
          case 0x0:
            _0x429d68["aniName"] = "Necromus";
            break;
          case 0x1:
            _0x429d68["aniName"] = "Planet Eater Monster";
        }
        break;
      case 0xdc:
        _0x429d68["aniName"] = "Belphegor";
        break;
      case 0xde:
        _0x429d68["aniName"] = "Peppermint Monster";
        break;
    }
    return (
      (_0x429d68["aniCol"] = "orange"),
      (_0x429d68["upgradeText"] = "UPGRADED to " + _0x429d68["aniName"] + "!\x0aCreate Sink holes to trap prey!" + _0x30e1e9),
      (_0x429d68["skinName"] = this["getSkinName"]()),
      _0x429d68
    );
  }),
  (_0x446689["prototype"]["getSkinName"] = function () {
    if (this["animalSpecies"] == 0xcc && this["animalSubSpecies"] == 0x0)
      return "volcano/landmonster/" + this["animalSpecies"] + this["getSubSpecies"]() + "/landmonster1";
    else return "volcano/landmonster/" + this["animalSpecies"] + this["getSubSpecies"]() + "/landmonster";
  }),
  (_0x446689["prototype"]["getSubSpecies"] = function () {
    return this["animalSpecies"] === 0xcc ? "/" + this["animalSubSpecies"] : "";
  }),
  (_0x446689["prototype"]["getAbilityInfo"] = function (_0x505370) {
    var _0x428e85 = {};
    return (
      (_0x428e85["abilName"] = "Giant\x0aSinkhole!"),
      (_0x428e85["abilImg"] = "abilities/Sinkhole.svg"),
      (_0x428e85["skinThemeID"] = this["skinThemeID"]),
      (_0x428e85["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x428e85
    );
  }),
  (_0x446689["prototype"]["drawSkinCustomization"] = function () {
    this["setSkinScale"]();
    if (this["animalSpecies"] == 0xcc && this["animalSubSpecies"] == 0x0) {
      var _0x8ee734 = "skins/volcano/landmonster/204/0/",
        _0x54758a = this["skinScale"] * 1.07,
        _0x3912b1 = this["skinRad"],
        _0x4bdfec = 0x1 + (Math["trunc"](_0x168a54 / 0x78) % 0x7),
        _0x44cb19 = this["getSkinImageObj"](_0x8ee734 + "/landmonster_head.png"),
        _0xb7bb45 = 0x0;
      if (_0x44cb19) {
        _0x587de3["save"]();
        var _0x3912b1 = this["rad"];
        _0x587de3["drawImage"](
          _0x44cb19,
          -_0x3912b1 * _0x54758a,
          (-_0x3912b1 + _0x3912b1 * 0.05) * _0x54758a - _0xb7bb45,
          0x2 * _0x3912b1 * _0x54758a,
          0x2 * _0x3912b1 * _0x54758a
        ),
          _0x587de3["restore"]();
        var _0x422b9f = this["getSkinImageObj"](_0x8ee734 + "/fire" + _0x4bdfec + ".png");
        _0x422b9f &&
          (_0x587de3["save"](),
          _0x587de3["drawImage"](
            _0x422b9f,
            -_0x3912b1 * _0x54758a,
            (-_0x3912b1 + _0x3912b1 * 0.05) * _0x54758a - _0xb7bb45,
            0x2 * _0x3912b1 * _0x54758a,
            0x2 * _0x3912b1 * _0x54758a
          ),
          _0x587de3["restore"]());
        var _0x422b9f = this["getSkinImageObj"](_0x8ee734 + "/landmonster_head1.png");
        _0x422b9f &&
          (_0x587de3["save"](),
          _0x587de3["drawImage"](
            _0x422b9f,
            -_0x3912b1 * _0x54758a,
            (-_0x3912b1 + _0x3912b1 * 0.05) * _0x54758a - _0xb7bb45,
            0x2 * _0x3912b1 * _0x54758a,
            0x2 * _0x3912b1 * _0x54758a
          ),
          _0x587de3["restore"]());
      }
    }
  });
var _0x5ef136 = 1.8;
_0x446689["prototype"]["basicDrawSkinImg"] = function () {
  if (this["animalSpecies"] == 0xcc && this["animalSubSpecies"] == 0x0) {
    this["setSkinScale"]();
    var _0x1641e1 = this["skinScale"],
      _0x12cd71 = this["skinRad"];
    this["loadedSkinImg"] &&
      ((overSizeOffset = this["skinRad"] / 0x2),
      _0x587de3["drawImage"](
        this["loadedSkinImg"],
        -_0x12cd71 * _0x5ef136,
        -_0x12cd71 * _0x5ef136,
        0x2 * _0x12cd71 * _0x5ef136,
        0x2 * _0x12cd71 * _0x5ef136
      ));
  } else _0x446689["superClass"]["prototype"]["basicDrawSkinImg"]["call"](this);
};

function _0x446689() {
  _0x446689["superClass"]["call"](this, _0x3fb3b2);
}
(window["LandMonster"] = _0x446689), _0x17bf26["setCustomClassForGameObjType"](_0x446689, _0x3fb3b2, _0x5b1639);
var _0x5f1052 = _0x5f1052,
  _0x48c344 = _0x3799d1;
(_0x5f1052["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x5f1052["prototype"]["constructor"] = _0x5f1052),
  (_0x5f1052["superClass"] = _0x48c344),
  (_0x5f1052["prototype"]["calcAnimalZIndex"] = function () {
    if (this["flag_underWater"]) this["z"] = -0x64;
    else {
      if (this["flag_isInArena"]) this["z"] += 0x3e8;
      else {
        if (this["flag_eff_tossedInAir"]) this["z"] = 0x4b0 + this["rad"];
        else this["z"] = 0x3e8 + this["rad"];
      }
    }
  }),
  (_0x5f1052["prototype"]["animalInfo"] = function () {
    var _0x981bb8 = {},
      _0x4ca931 = "";
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x981bb8["aniName"] = "Ice Monster";
        break;
      case 0x1:
        _0x981bb8["aniName"] = "Golden Ice Monster";
        break;
      case 0x2:
        _0x981bb8["aniName"] = "Amethyst Monster";
        break;
      case 0xc9:
        _0x981bb8["aniName"] = "Cryo Coach Monster";
        break;
      case 0xcc:
        _0x981bb8["aniName"] = "Blood Crystal Monster";
        break;
      case 0xdc:
        _0x981bb8["aniName"] = "Blazing Ice Monster";
        break;
    }
    return (
      (_0x981bb8["aniCol"] = "#ffffff"),
      (_0x981bb8["upgradeText"] = "UPGRADED to " + _0x981bb8["aniName"] + "!\x0aShoot Ice crystals to freeze prey!" + _0x4ca931),
      (_0x981bb8["skinName"] = "arctic/icemonster/" + this["animalSpecies"] + "/icemonster"),
      _0x981bb8
    );
  }),
  (_0x5f1052["prototype"]["getSkinName"] = function () {
    var _0x2d5705 = this["id"] == 0x0 ? "ability" : "icemonster";
    return "arctic/icemonster/" + this["animalSpecies"] + "/" + _0x2d5705;
  }),
  (_0x5f1052["prototype"]["getAbilityInfo"] = function (_0x44b95c) {
    var _0x37b07e = {};
    return (
      (_0x37b07e["abilName"] = "Freeze Prey!"),
      (_0x37b07e["abilImg"] = "abilities/Ice-Freeze.svg"),
      (_0x37b07e["skinThemeID"] = this["skinThemeID"]),
      (_0x37b07e["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x37b07e
    );
  }),
  (_0x5f1052["prototype"]["readCustomData_onNewlyVisible"] = function (_0x1a2513) {
    _0x5f1052["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x1a2513), this["readCrystalsInfo"](_0x1a2513);
  }),
  (_0x5f1052["prototype"]["readCrystal"] = function (_0x4ce163, _0x3a735d) {
    var _0x28beed = _0x4ce163["readInt16"]() / 0x64;
    this["crystals"][_0x3a735d]["nRad"] = _0x28beed;
    if (_0x28beed < 0x1) this["crystals"][_0x3a735d]["rad"] = 0x0;
    this["crystals"][_0x3a735d]["isReady"] = _0x4ce163["readUInt8"]() == 0x1;
  }),
  (_0x5f1052["prototype"]["customUpdatedProperty"] = function (_0x37b3dc, _0x4ec5d3) {
    if (_0x37b3dc == _0x487b79) this["readCrystal"](_0x4ec5d3, 0x0);
    else {
      if (_0x37b3dc == _0x5a9886) this["readCrystal"](_0x4ec5d3, 0x1);
      else {
        if (_0x37b3dc == _0xb0862e) this["readCrystal"](_0x4ec5d3, 0x2);
        else {
          if (_0x37b3dc == _0x55ed44) this["readCrystal"](_0x4ec5d3, 0x3);
          else {
            if (_0x37b3dc == _0xeef82b) this["readCrystal"](_0x4ec5d3, 0x4);
            else {
              if (_0x37b3dc == _0x2ce1ce) this["readCrystal"](_0x4ec5d3, 0x5);
              else _0x37b3dc == _0x2b9649 && this["readCrystal"](_0x4ec5d3, 0x6);
            }
          }
        }
      }
    }
  }),
  (_0x5f1052["prototype"]["crystals"] = []),
  (_0x5f1052["prototype"]["readCrystalsInfo"] = function (_0x16583c) {
    var _0x43550f = _0x16583c["readUInt8"]();
    this["crystals"] = [];
    for (i = 0x0; i < _0x43550f; i++) {
      var _0x56e211 = _0x16583c["readInt16"]() / 0x64,
        _0x182235 = _0x16583c["readInt16"]() / 0x64,
        _0x352b83 = _0x16583c["readInt16"]() / 0x64,
        _0x3d8c46 = _0x16583c["readUInt8"]() * 0x4,
        _0x3468b9 = _0x16583c["readUInt8"]() == 0x1;
      this["crystals"]["push"]({
        isReady: _0x3468b9,
        x: _0x56e211,
        y: _0x182235,
        nRad: _0x352b83,
        oRad: _0x352b83,
        rad: _0x352b83,
        angle: _0x3d8c46,
      });
    }
  });
var _0x56e4e8 = 1.5;
_0x5f1052["prototype"]["drawSkinCustomization"] = function () {
  if (this["animalSpecies"] == 0xc9) {
    _0x587de3["save"]();
    var _0x380ad5 = 0x0;
    for (i = 0x0; i < this["crystals"]["length"]; i++) {
      var _0x43680c = this["crystals"][i];
      if (_0x43680c["isReady"]) _0x380ad5++;
    }
    _0x380ad5 = Math["min"](0x5, _0x380ad5);
    var _0x1493a9 = "skins/arctic/icemonster/201/icemonster" + _0x380ad5 + ".png",
      _0x1c5a5f = this["getSkinImageObj"](_0x1493a9);
    if (_0x1c5a5f) {
      var _0x3266b9 = this["rad"] * _0x56e4e8;
      _0x587de3["drawImage"](_0x1c5a5f, -_0x3266b9, -_0x3266b9, 0x2 * _0x3266b9, 0x2 * _0x3266b9);
    }
    _0x587de3["restore"]();
  } else {
    var _0x3266b9 = this["rad"] - this["outlineW"];
    for (i = 0x0; i < this["crystals"]["length"]; i++) {
      var _0x43680c = this["crystals"][i];
      if (_0x43680c["nRad"] == 0x0) continue;
      _0x43680c["rad"] += (_0x43680c["nRad"] - _0x43680c["rad"]) * 0.01;
      var _0x1d3cf4 = _0x43680c["x"] * _0x3266b9,
        _0x3fc45c = _0x43680c["y"] * _0x3266b9,
        _0x1b5f54 = _0x43680c["angle"],
        _0x5931e1 = _0x43680c["rad"];
      _0x587de3["save"](), _0x587de3["translate"](_0x1d3cf4, _0x3fc45c), (_0x587de3["globalAlpha"] = 0x1), _0x587de3["rotate"](_0x3d960f(_0x1b5f54));
      var _0x1c5a5f = this["getSkinImageObj"]("skins/arctic/icemonster/" + this["animalSpecies"] + "/crystal.png");
      _0x1c5a5f && _0x587de3["drawImage"](_0x1c5a5f, -_0x5931e1, -_0x5931e1 * 0x2, _0x5931e1 * 0x2, _0x5931e1 * 0x2), _0x587de3["restore"]();
    }
  }
};

function _0x5f1052() {
  _0x5f1052["superClass"]["call"](this, _0x3fb3b2);
}
(window["IceMonster"] = _0x5f1052), _0x17bf26["setCustomClassForGameObjType"](_0x5f1052, _0x3fb3b2, _0x448b86);
var _0x5ecb21 = _0x5ecb21,
  _0x48c344 = _0x3799d1;
(_0x5ecb21["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x5ecb21["prototype"]["constructor"] = _0x5ecb21),
  (_0x5ecb21["superClass"] = _0x48c344),
  (_0x5ecb21["prototype"]["calcAnimalZIndex"] = function () {
    if (this["flag_underWater"]) this["z"] = -0x64;
    else {
      if (this["flag_isInArena"]) this["z"] += 0x3e8;
      else {
        if (this["flag_eff_tossedInAir"]) this["z"] = 0x4b0 + this["rad"];
        else this["z"] = 0x3e8 + this["rad"];
      }
    }
  }),
  (_0x5ecb21["prototype"]["drawWhenUnderwater"] = function () {
    this["drawUnderwaterCustomization"](0x1, 1.1);
  }),
  (_0x5ecb21["prototype"]["animalInfo"] = function () {
    var _0x465bbf = {},
      _0x1d5af0 = "";
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x465bbf["aniName"] = "Dino Monster";
        break;
      case 0x1:
        _0x465bbf["aniName"] = "Golden Dino Monster";
        break;
      case 0x2:
        _0x465bbf["aniName"] = "Citrine Monster";
        break;
      case 0xc8:
        _0x465bbf["aniName"] = "Ruby Devil";
        break;
      case 0xca:
        _0x465bbf["aniName"] = "Tank Monster";
        break;
      case 0xdc:
        _0x465bbf["aniName"] = "Cordycera Dino Monster";
        break;
    }
    return (
      (_0x465bbf["aniCol"] = "orange"),
      (_0x465bbf["upgradeText"] = "UPGRADED to " + _0x465bbf["aniName"] + "!\x0aKnock prey in Air to inflict deadly damage!" + _0x1d5af0),
      (_0x465bbf["skinName"] = "land/dinomonster/" + this["animalSpecies"] + "/dinomonster"),
      _0x465bbf
    );
  }),
  (_0x5ecb21["prototype"]["getSkinName"] = function () {
    return "land/dinomonster/" + this["animalSpecies"] + "/dinomonster1";
  }),
  (_0x5ecb21["prototype"]["getAbilityInfo"] = function (_0x2cf729) {
    var _0x3d6991 = {};
    return (
      (_0x3d6991["abilName"] = "Knock in Air"),
      (_0x3d6991["abilImg"] = "abilities/Throw.svg"),
      (_0x3d6991["skinThemeID"] = this["skinThemeID"]),
      (_0x3d6991["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x3d6991
    );
  }),
  (_0x5ecb21["prototype"]["drawSkinCustomization"] = function () {
    var _0xa54c4c = "skins/land/dinomonster/" + this["animalSpecies"] + "/dinomonster";
    if (this["flag_usingAbility"]) _0xa54c4c += "3";
    else _0xa54c4c += "2";
    var _0x3e4d31 = this["getSkinImageObj"](_0xa54c4c + ".png");
    if (_0x3e4d31) {
      _0x587de3["save"]();
      var _0x1b894a = (this["rad"] - this["outlineW"]) * 1.1;
      _0x587de3["drawImage"](
        _0x3e4d31,
        -_0x1b894a * this["skinScale"] * 0.91,
        -_0x1b894a * this["skinScale"] * 1.1,
        0x2 * _0x1b894a * this["skinScale"] * 0.91,
        0x2 * _0x1b894a * this["skinScale"] * 1.1
      ),
        _0x587de3["restore"]();
    }
  });

function _0x5ecb21() {
  _0x5ecb21["superClass"]["call"](this, _0x3fb3b2);
}
(window["DinoMonster"] = _0x5ecb21), _0x17bf26["setCustomClassForGameObjType"](_0x5ecb21, _0x3fb3b2, _0x28027c);
var _0x48c344 = _0x307a43;
(_0x1d96a5["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d96a5["prototype"]["constructor"] = _0x1d96a5),
  (_0x1d96a5["superClass"] = _0x48c344),
  (_0x1d96a5["prototype"]["updateZ"] = function () {
    this["z"] = 0x3ed;
  }),
  (_0x1d96a5["prototype"]["customDraw"] = function (_0x2201e4) {
    var _0xed1e13 = this["getSkinImageObj"]("skins/arctic/icemonster/" + this["speciesType"] + "/crystalfire.png");
    if (_0xed1e13) {
      _0x587de3["save"]();
      var _0x214a21 = this["rad"] * 1.5;
      _0x587de3["rotate"](this["angle"] + _0x3d960f(0xb4)),
        _0x587de3["drawImage"](_0xed1e13, -_0x214a21, -_0x214a21, _0x214a21 * 0x2, _0x214a21 * 2.5),
        _0x587de3["restore"]();
    }
  }),
  (_0x1d96a5["prototype"]["getSkinImageObj"] = function (_0x251de6) {
    var _0x2ca18e =
        this["speciesType"] === 0x1 || this["speciesType"] === 0x2 || this["speciesType"] === 0xc9 || this["speciesType"] === 0xcc
          ? 0x1
          : this["mopeSeasonID"],
      _0x3b0e85 = "./assets/s/" + _0x2ca18e + "/" + _0x251de6;
    return (
      this["skinThemeID"] > 0x0 && (_0x3b0e85 = "./assets/t/" + this["skinThemeID"] + "/" + _0x251de6),
      _0x2d8f34(_0x3b0e85, function (_0x1b3b47) {
        console["log"](_0x1b3b47["src"]);
      })
    );
  }),
  (_0x1d96a5["prototype"]["readCustomData_onNewlyVisible"] = function (_0x587bbb) {
    _0x1d96a5["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x587bbb), (this["speciesType"] = _0x587bbb["readUInt8"]());
  });

function _0x1d96a5() {
  _0x1d96a5["superClass"]["call"](this, _0x43f349);
}
(window["IceCrystal"] = _0x1d96a5), _0x17bf26["setCustomClassForGameObjType"](_0x1d96a5, _0x43f349);
var _0x48c344 = _0x307a43;
(_0xa72a85["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0xa72a85["prototype"]["constructor"] = _0xa72a85),
  (_0xa72a85["superClass"] = _0x48c344),
  (_0xa72a85["prototype"]["updateZ"] = function () {
    this["z"] = -0x65;
  }),
  (_0xa72a85["prototype"]["customDraw"] = function (_0x4ab3bf) {
    _0x587de3["save"](),
      this["specType"] == 0x0
        ? (this["drawOutlinedCircle"]("", "#9F8641"),
          (_0x587de3["globalAlpha"] = 0.6),
          _0x440ef0(0x0 + this["rPer"], 0x1, Math["max"](0x0, this["rad"] * 0.9), "#5C4E28"),
          (_0x587de3["globalAlpha"] = 0.7),
          _0x440ef0(0x0 - this["rPer"], 0x1, Math["max"](0x0, this["rad"] * 0.8), "#40371D"),
          (_0x587de3["globalAlpha"] = 0.9),
          _0x440ef0(0x0 - this["rPer"], 0x1, Math["max"](0x0, this["rad"] * 0.8), "#40371D"),
          (_0x587de3["globalAlpha"] = 0.5),
          _0x440ef0(0x0 - this["rPer"] * 0x3, 0x1, Math["max"](0x0, this["rad"] * 0.5), "black"),
          (_0x587de3["globalAlpha"] = 0x1),
          _0x440ef0(0x0 - this["rPer"] * 0x3, 0x1, Math["max"](0x0, this["rad"] * 0.3), _0x9d1ce2))
        : (this["drawOutlinedCircle"]("", "#9F8641"),
          _0x440ef0(0x0 - this["rPer"], 0x0 - this["rPer"], Math["max"](0x0, this["rad"] - 0x7), "#7E6A35"),
          _0x440ef0(0x0 + this["rPer"], 0x1, Math["max"](0x0, this["rad"] - 0xe), "#5C4E28"),
          _0x440ef0(0x0 - this["rPer"] * 0x2 - 0x3, 0x1, Math["max"](0x0, this["rad"] - 18.5), "#40371D")),
      _0x587de3["restore"]();
  });

function _0xa72a85() {
  _0xa72a85["superClass"]["call"](this, _0x2e4bf1),
    (this["webTransparency"] = 0x0),
    (this["doesDrawEffectScale"] = !![]),
    (this["drawEffectScale_Slow"] = !![]);
}
(window["SinkHole"] = _0xa72a85), _0x17bf26["setCustomClassForGameObjType"](_0xa72a85, _0x5c4849);
var _0x48c344 = _0x307a43;
(_0x4ca9df["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x4ca9df["prototype"]["constructor"] = _0x4ca9df),
  (_0x4ca9df["superClass"] = _0x48c344),
  (_0x4ca9df["prototype"]["mommyID"] = 0x0),
  (_0x4ca9df["prototype"]["updateZ"] = function () {
    this["z"] = -0x99;
  }),
  (_0x4ca9df["prototype"]["isEdibleOutlined"] = function () {
    if (this["mommyID"] == _0x204989) return ![];
    var _0x35ccc9 = _0x244824["superClass"]["prototype"]["isEdibleOutlined"]["call"](this);
    return _0x35ccc9;
  }),
  (_0x4ca9df["prototype"]["customDraw"] = function (_0x30db48) {
    _0x587de3["save"]();
    var _0x2e3fea = this["getSkinImageObj"](
      "skins/land/ostrich/" + this["speciesType"] + "/ostrichEgg" + (this["isEdibleOutlined"]() ? "edible" : "") + ".png"
    );
    if (_0x2e3fea) {
      var _0x293892 = this["rad"];
      _0x587de3["rotate"](this["angle"]), _0x587de3["drawImage"](_0x2e3fea, -_0x293892, -_0x293892, 0x2 * _0x293892, 0x2 * _0x293892);
    }
    _0x587de3["restore"]();
  }),
  (_0x4ca9df["prototype"]["getSkinImageObj"] = function (_0x56b0f6) {
    var _0xb4ac6d = this["speciesType"] === 0x1 || this["speciesType"] === 0x2 || this["speciesType"] === 0xcc ? 0x1 : this["mopeSeasonID"];
    return this["getSkinImageObjForSeason"](_0x56b0f6, _0xb4ac6d);
  }),
  (_0x4ca9df["prototype"]["readCustomData_onNewlyVisible"] = function (_0xb9ed7d) {
    _0x4ca9df["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0xb9ed7d),
      (this["mommyID"] = _0xb9ed7d["readUInt32"]()),
      (this["speciesType"] = _0xb9ed7d["readUInt8"]());
  });

function _0x4ca9df() {
  _0x4ca9df["superClass"]["call"](this, _0x374904), (this["doesDrawEffectScale"] = !![]);
}
(window["OstrichEgg"] = _0x4ca9df), _0x17bf26["setCustomClassForGameObjType"](_0x4ca9df, _0x374904);
var _0x178e2f = _0x178e2f,
  _0x48c344 = _0x3799d1;
(_0x178e2f["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x178e2f["prototype"]["constructor"] = _0x178e2f),
  (_0x178e2f["superClass"] = _0x48c344),
  (_0x178e2f["prototype"]["drawNickName"] = function (_0x4d810e) {
    ((this["flag_usingAbility"] && this["flag_flying"]) || !this["flag_usingAbility"] || _0x11b99a["mode"] == _0x225fdb) &&
      _0x178e2f["superClass"]["prototype"]["drawNickName"]["call"](this, _0x4d810e);
  }),
  (_0x178e2f["prototype"]["animalInfo"] = function () {
    var _0x27722d = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x27722d["aniName"] = "Macaw";
        break;
      case 0x1:
        _0x27722d["aniName"] = "Blue Macaw";
        break;
      case 0x2:
        _0x27722d["aniName"] = "Pakistan Macaw";
        break;
    }
    return (
      (_0x27722d["aniCol"] = "#FF9000"),
      (_0x27722d["skinName"] = this["getSpeciesPath"]("macaw") + "/macaw"),
      (_0x27722d["upgradeText"] =
        "UPGRADED to " +
        (this["animalSpecies"] == 0x2 ? "Rare " : "") +
        _0x27722d["aniName"] +
        "!\x0aHold W to fly around.\x0a(Hint: Use ability on hills to mimic animals) "),
      _0x27722d
    );
  }),
  (_0x178e2f["prototype"]["getSkinName"] = function () {
    var _0x3d75da = this["getSpeciesPath"]("macaw") + "/macaw";
    return (_0x3d75da += this["specType"] == 0x0 ? "" : this["specType"]), _0x3d75da;
  }),
  (_0x178e2f["prototype"]["getSpeciesPath"] = function (_0x28ed56) {
    return "land/" + _0x28ed56 + "/" + this["animalSpecies"];
  }),
  (_0x178e2f["prototype"]["getWing"] = function (_0x33bb22, _0x398419, _0x2c7ce5) {
    var _0x269fe0 = "skins/" + (_0x2c7ce5 ? this["getSpeciesPath"](_0x33bb22) + "/" : _0x33bb22 + "/");
    return (_0x269fe0 += _0x33bb22 + "_wing" + _0x398419 + ".png"), _0x269fe0;
  }),
  (_0x178e2f["prototype"]["getHead"] = function (_0x9151c6, _0x2a364f) {
    var _0x3bfff7 = "skins/" + (_0x2a364f ? this["getSpeciesPath"](_0x9151c6) + "/" : _0x9151c6 + "/");
    return (_0x3bfff7 += _0x9151c6 + "_head.png"), _0x3bfff7;
  }),
  (_0x178e2f["prototype"]["getAniRadius"] = function (_0x327430) {
    if (this["flag_usingDiveAbility"]) return _0x327430 * 0.7;
    return this["flag_flying"] ? _0x327430 * 0.9 : _0x327430;
  }),
  (_0x178e2f["prototype"]["basicDrawSkinImg"] = function () {
    if (this["flag_usingAbility"]) {
      if (!this["flag_flying"] && this["octoDrawObj"] != null) return;
    }
    _0x178e2f["superClass"]["prototype"]["basicDrawSkinImg"]["call"](this);
    if (this["skinThemeID"] != 0x0) return;
    var _0x1897bb = 0.05,
      _0xf8899 = -0.08,
      _0x46a2f2 = 1.1;
    this["setSkinScale"]();
    var _0x1e71b5 = this["getAniRadius"](this["skinRad"] - this["outlineW"]),
      _0x41056f = 0x1f4 / 0x154;
    if (this["loadedSkinImg"]) {
      _0x587de3["drawImage"](
        this["loadedSkinImg"],
        -_0x1e71b5 * _0x41056f,
        -_0x1e71b5 * _0x41056f,
        0x2 * _0x1e71b5 * _0x41056f,
        0x2 * _0x1e71b5 * _0x41056f
      );
      if (this["flag_flying"] || !this["flag_usingAbility"]) {
        var _0x51fa8e = "skins/" + this["getSpeciesPath"]("macaw") + "/tail.png",
          _0x2360f2 = this["getSkinImageObj"](_0x51fa8e),
          _0x7bd2d = this["skinScale"];
        if (_0x2360f2) {
          _0x587de3["save"]();
          var _0x1e71b5 = this["rad"] - this["outlineW"];
          _0x587de3["drawImage"](
            _0x2360f2,
            -_0x1e71b5 * _0x46a2f2 * _0x7bd2d,
            (-_0x1e71b5 + _0x1e71b5 * _0xf8899) * _0x46a2f2 * _0x7bd2d,
            0x2 * _0x1e71b5 * _0x46a2f2 * _0x7bd2d,
            0x2 * _0x1e71b5 * _0x46a2f2 * _0x7bd2d
          ),
            _0x587de3["restore"]();
        }
      }
      if (!this["flag_usingAbility"]) {
        var _0x5ea53a = this["getSkinImageObj"]("skins/" + this["getSpeciesPath"]("macaw") + "/top.png");
        _0x5ea53a &&
          _0x587de3["drawImage"](
            _0x5ea53a,
            -_0x1e71b5 * _0x41056f,
            (-_0x1e71b5 + _0x1e71b5 * _0x1897bb) * _0x41056f,
            0x2 * _0x1e71b5 * _0x41056f,
            0x2 * _0x1e71b5 * _0x41056f
          );
      }
    }
  });
var _0x51f477 = 1.7,
  _0x5e3d16 = 2.2;
(_0x178e2f["prototype"]["drawSkinCustomization"] = function () {
  if (!this["flag_usingAbility"]) return;
  var _0x5f1d2b = this["getAniRadius"](this["skinRad"] - this["outlineW"]),
    _0x34de69 = _0x5f1d2b * 0.8;
  if (this["flag_flying"]) {
    var _0x369a0e = 0x1f4 / 0x154;
    if (this["flag_flying"] && !this["flag_isGrabbed"]) {
      _0x587de3["save"]();
      let _0x404b58 = _0x38b128("bird", this["spawnTime"]);
      _0x404b58 !== undefined && _0x404b58 != null && (this["theFrame"] = _0x404b58);
      let _0x579f57 = !(_0x57ae6d == 0x2 || _0x34fedb) ? this["theFrame"] : this["birdNoAnimationFlyWingAngle"];
      var _0x1f0641 = this["getSkinImageObj"](this["getWing"]("macaw", 0x1, !![]));
      if (_0x1f0641) {
        _0x587de3["save"]();
        var _0x29fbd6 = -(-0.2 + _0x579f57) * _0x2f9e35;
        _0x587de3["rotate"](_0x25461f + _0x29fbd6);
        var _0x39ed00 = 0x0,
          _0x523129 = _0x34de69,
          _0x31b4c7 = _0x34de69 * 0x2 * 0.62,
          _0x559940 = _0x34de69 * _0x5e3d16,
          _0xe8d93d = 0.2,
          _0x4e4289 = _0x51f477;
        _0x587de3["drawImage"](_0x1f0641, _0x39ed00 + _0x31b4c7 * -_0xe8d93d, _0x523129 + _0x559940 * -_0x4e4289, _0x31b4c7, _0x559940),
          _0x587de3["restore"]();
      }
      var _0x1f0641 = this["getSkinImageObj"](this["getWing"]("macaw", 0x2, !![]));
      if (_0x1f0641) {
        _0x587de3["save"]();
        var _0x29fbd6 = -(-0.2 + _0x579f57) * -_0x2f9e35;
        _0x587de3["rotate"](-_0x25461f + _0x29fbd6);
        var _0x39ed00 = 0x0,
          _0x523129 = _0x34de69,
          _0x31b4c7 = _0x34de69 * 0x2 * 0.62,
          _0x559940 = _0x34de69 * _0x5e3d16,
          _0xe8d93d = 0.8,
          _0x4e4289 = _0x51f477;
        _0x587de3["drawImage"](_0x1f0641, _0x39ed00 + _0x31b4c7 * -_0xe8d93d, _0x523129 + _0x559940 * -_0x4e4289, _0x31b4c7, _0x559940),
          _0x587de3["restore"]();
      }
      _0x587de3["restore"]();
    }
    if (this["specType"] != 0x0 && this["specType"] != undefined) {
      var _0x5b809a = this["getSkinImageObj"](this["getHead"]("macaw", !![]));
      if (_0x5b809a) {
        _0x587de3["save"]();
        var _0x5f1d2b = this["rad"];
        _0x587de3["drawImage"](
          _0x5b809a,
          -_0x5f1d2b * _0x369a0e,
          (-_0x5f1d2b + _0x5f1d2b * 0.2) * _0x369a0e,
          0x2 * _0x5f1d2b * _0x369a0e,
          0x2 * _0x5f1d2b * _0x369a0e
        ),
          _0x587de3["restore"]();
      }
    }
  }
}),
  (_0x178e2f["prototype"]["readCustomData_onNewlyVisible"] = function (_0x1c7481) {
    _0x178e2f["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x1c7481),
      this["customUpdatedProperty"](_0x898796, _0x1c7481);
  }),
  (_0x178e2f["prototype"]["customUpdatedProperty"] = function (_0x225291, _0x34ee12) {
    if (_0x225291 == _0x898796) {
      var _0x2b5844 = _0x34ee12["readUInt8"]() == 0x1;
      if (_0x2b5844) {
        var _0x31c48c = _0x34ee12["readUInt16"](),
          _0x52d04d = _0x34ee12["readUInt16"]();
        this["createDisguiseAniObj"](_0x31c48c, _0x52d04d);
      } else this["octoDrawObj"] = null;
    }
  }),
  (_0x178e2f["prototype"]["createDisguiseAniObj"] = function (_0x1c6a31, _0x5973d2) {
    if (this["octoDrawObj"] == null) {
      var _0x2d3c91 = _0x17bf26["createGameObjOfOType"](_0x3fb3b2, _0x1c6a31);
      (_0x2d3c91["animalType"] = _0x1c6a31),
        (_0x2d3c91["animalSpecies"] = _0x5973d2),
        (_0x2d3c91["rad"] = _0x2d3c91["oRad"] = _0x2d3c91["nRad"] = this["rad"]),
        (_0x2d3c91["curBiome"] = this["curBiome"]),
        (_0x2d3c91["hp"] = 0x5 + Math["random"]() * 0x32),
        (this["octoDrawObj"] = _0x2d3c91);
    }
  }),
  (_0x178e2f["prototype"]["drawHealthBar"] = function () {
    this["flag_usingAbility"] &&
      !this["flag_flying"] &&
      this["octoDrawObj"] != null &&
      ((this["octoDrawObj"]["curBiome"] = this["curBiome"]),
      (this["hpPer_n"] = 0x1),
      (this["hpPer"] = this["octoDrawObj"]["hp"]),
      (this["hpBarA"] = 0x1));
    _0x587de3["save"]();
    var _0x1d30ab = _0x168a54 < this["hpBarTimeoutT"] ? 0x1 : 0x0;
    this["hpBarA"] += (_0x1d30ab - this["hpBarA"]) * 0.04;
    if (this["hpBarA"] > 0.001) {
      this["hpPer"] += (this["hpPer_n"] - this["hpPer"]) * 0.1;
      var _0x11764b = Math["max"](0x1, this["rad"] / 0x19),
        _0x12cfdf = 0x14 * _0x11764b,
        _0x2ebde9 = 0x5 * _0x11764b,
        _0x282af6 = 0x0,
        _0x2dce2d = -this["rad"] - 0xa * _0x11764b;
      (_0x587de3["globalAlpha"] *= this["hpBarA"]),
        (_0x587de3["fillStyle"] = "rgba(0,0,0,0.35)"),
        _0x587de3["fillRect"](_0x282af6 - _0x12cfdf / 0x2, _0x2dce2d - _0x2ebde9 / 0x2, _0x12cfdf, _0x2ebde9),
        (_0x587de3["fillStyle"] = "#16D729");
      var _0x1b7a1d = _0x12cfdf * (this["hpPer"] / 0x64);
      if (this["flag_usingAbility"] && this["octoIsAnimal"]) _0x1b7a1d = _0x12cfdf * (0x19 / 0x64);
      _0x587de3["fillRect"](_0x282af6 - _0x12cfdf / 0x2, _0x2dce2d - _0x2ebde9 / 0x2, _0x1b7a1d, _0x2ebde9);
    }
    _0x587de3["restore"]();
  }),
  (_0x178e2f["prototype"]["drawOnTopOfSkinImg"] = function () {
    _0x178e2f["superClass"]["prototype"]["drawOnTopOfSkinImg"]["call"](this),
      this["flag_usingAbility"] &&
        !this["flag_flying"] &&
        this["octoDrawObj"] != null &&
        (_0x587de3["save"](),
        (_0x587de3["globalAlpha"] = 0x1),
        (this["octoDrawObj"]["mopeSeasonID"] = this["mopeSeasonID"]),
        (this["octoDrawObj"]["rad"] = this["rad"]),
        this["octoDrawObj"]["draw"](),
        _0x587de3["restore"]());
  });

function _0x178e2f() {
  _0x178e2f["superClass"]["call"](this, _0x3fb3b2);
}
(window["Macaw"] = _0x178e2f), _0x17bf26["setCustomClassForGameObjType"](_0x178e2f, _0x3fb3b2, _0x1ee088);
var _0x14e257 = _0x14e257,
  _0x48c344 = _0x3799d1;
(_0x14e257["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x14e257["prototype"]["constructor"] = _0x14e257),
  (_0x14e257["superClass"] = _0x48c344),
  (_0x14e257["prototype"]["getSkinName"] = function () {
    var _0x1d274b = this["getSpeciesPath"]("flamingo") + "/flamingo";
    return (_0x1d274b += this["specType"] == 0x0 ? "" : this["specType"]), _0x1d274b;
  }),
  (_0x14e257["prototype"]["animalInfo"] = function () {
    var _0x4fc52e = {};
    _0x4fc52e["aniName"] = "Flamingo";
    switch (this["animalSpecies"]) {
      case 0xca:
        _0x4fc52e["aniName"] = "Fly Mango";
        break;
    }
    return (
      (_0x4fc52e["aniCol"] = "#FF9000"),
      (_0x4fc52e["skinName"] = this["getSpeciesPath"]("flamingo") + "/flamingo"),
      (_0x4fc52e["upgradeText"] =
        "UPGRADED to " +
        _0x4fc52e["aniName"] +
        "!\x0aHold W in water to search for food underwater.\x0a(Tip: Any nearby underwater animals will get surfaced by the flamingo!)"),
      _0x4fc52e
    );
  }),
  (_0x14e257["prototype"]["getSpeciesPath"] = function (_0x5a69e4) {
    return "ocean/" + _0x5a69e4 + "/" + this["animalSpecies"];
  }),
  (_0x14e257["prototype"]["getWing"] = function (_0x2e6376, _0x2e2ded, _0x1f7964) {
    var _0x33e680 = "skins/" + this["getSpeciesPath"](_0x2e6376) + (_0x1f7964 ? "/pink" : "") + "/";
    return (_0x33e680 += _0x2e6376 + "_wing" + _0x2e2ded + ".png"), _0x33e680;
  }),
  (_0x14e257["prototype"]["getHead"] = function (_0x239b56, _0x3cd385) {
    var _0x5d7c11 = "skins/" + this["getSpeciesPath"](_0x239b56) + (_0x3cd385 ? "/pink" : "") + "/";
    return (_0x5d7c11 += _0x239b56 + "_head.png"), _0x5d7c11;
  }),
  (_0x14e257["prototype"]["getAbilityInfo"] = function (_0x21a60f) {
    var _0x1206e2 = {};
    return (
      (_0x1206e2["abilName"] = "HOLD in water\x0a(find food)"),
      (_0x1206e2["abilImg"] = this["flag_isClimbingHill"] || this["flag_flying"] ? "abilities/Fly.svg" : "abilities/Dive.svg"),
      (_0x1206e2["skinThemeID"] = this["skinThemeID"]),
      (_0x1206e2["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x1206e2
    );
  }),
  (_0x14e257["prototype"]["basicDrawSkinImg"] = function () {
    _0x14e257["superClass"]["prototype"]["basicDrawSkinImg"]["call"](this);
    if (!this["flag_underWater"] && this["id"] > 0x0) {
      var _0xcaf494 = this["skinScale"],
        _0x58a544 = this["skinRad"],
        _0x397774 = "skins/" + this["getSpeciesPath"]("flamingo") + "/pink/flamingo";
      _0x397774 += this["specType"] == 0x0 ? "" : this["specType"];
      var _0x432b22 = this["getSkinImageObj"](_0x397774 + ".png");
      _0x432b22 &&
        (_0x587de3["save"](),
        (_0x587de3["globalAlpha"] = this["colorPerc"]),
        _0x587de3["drawImage"](_0x432b22, -_0x58a544 * _0xcaf494, -_0x58a544 * _0xcaf494, 0x2 * _0x58a544 * _0xcaf494, 0x2 * _0x58a544 * _0xcaf494),
        _0x587de3["restore"]());
    }
  }),
  (_0x14e257["prototype"]["drawSkinCustomization"] = function () {
    if (!this["flag_usingAbility"]) return;
    var _0x2c9928 = 0x1f4 / 0x154;
    _0x587de3["save"]();
    var _0x2fef9d = this["flag_flying"] ? 0x2d : 0x2f,
      _0x1c8496 = this["flag_flying"] ? 0x5a : 0x2d,
      _0x2bb390 = this["flag_flying"] ? 0.2 : 0.01,
      _0x39baf5 = this["flag_flying"] ? 2.5 : 0x2,
      _0x35a088 = this["flag_flying"] ? 0x2 : 2.5,
      _0x4f1f18 = this["flag_flying"] ? 0.5 : 1.2,
      _0xdc7837 = (_0x168a54 - this["spawnTime"]) / 0x3e8;
    if (this["flag_flying"]) {
      var _0x2d84a0 = _0x38b128("bird", this["spawnTime"]);
      _0x2d84a0 !== undefined && _0x2d84a0 != null && (this["theFrame"] = _0x2d84a0);
    } else this["theFrame"] = !(_0x57ae6d == 0x2 || _0x34fedb) ? _0x120bbb(_0xdc7837, _0x4f1f18, 0.3, 0x2) : this["birdNoAnimationFlyWingAngle"];
    var _0x5aefba = this["theFrame"],
      _0x4dae86 = this["getSkinImageObj"](this["getWing"]("flamingo", 0x1, ![]));
    if (_0x4dae86) {
      _0x587de3["save"]();
      var _0x2cf0bb = -(-_0x2bb390 + _0x5aefba) * _0x3d960f(_0x1c8496),
        _0x11d74a = this["rad"] * 0.8;
      _0x587de3["rotate"](_0x3d960f(_0x2fef9d) + _0x2cf0bb);
      var _0x3d942b = 0x0,
        _0x3516c1 = this["rad"],
        _0x111546 = _0x11d74a * _0x35a088 * 0.62,
        _0x2c6174 = _0x11d74a * _0x39baf5,
        _0x23e25c = 0.2,
        _0x16760b = 1.7;
      _0x587de3["drawImage"](_0x4dae86, _0x3d942b + _0x111546 * -_0x23e25c, _0x3516c1 + _0x2c6174 * -_0x16760b, _0x111546, _0x2c6174),
        _0x587de3["restore"]();
    }
    var _0x4dae86 = this["getSkinImageObj"](this["getWing"]("flamingo", 0x2, ![]));
    if (_0x4dae86) {
      _0x587de3["save"]();
      var _0x2cf0bb = -(-_0x2bb390 + _0x5aefba) * _0x3d960f(-_0x1c8496),
        _0x11d74a = this["rad"] * 0.8;
      _0x587de3["rotate"](_0x3d960f(-_0x2fef9d) + _0x2cf0bb);
      var _0x3d942b = 0x0,
        _0x3516c1 = this["rad"],
        _0x111546 = _0x11d74a * _0x35a088 * 0.62,
        _0x2c6174 = _0x11d74a * _0x39baf5,
        _0x23e25c = 0.8,
        _0x16760b = 1.7;
      _0x587de3["drawImage"](_0x4dae86, _0x3d942b + _0x111546 * -_0x23e25c, _0x3516c1 + _0x2c6174 * -_0x16760b, _0x111546, _0x2c6174),
        _0x587de3["restore"]();
    }
    _0x587de3["restore"]();
    if (this["specType"] == 0x1) {
      var _0x3d8993 = this["getSkinImageObj"](this["getHead"]("flamingo", ![]));
      if (_0x3d8993) {
        _0x587de3["save"]();
        var _0x11d74a = this["rad"];
        _0x587de3["drawImage"](
          _0x3d8993,
          -_0x11d74a * _0x2c9928,
          (-_0x11d74a + _0x11d74a * 0.1) * _0x2c9928,
          0x2 * _0x11d74a * _0x2c9928,
          0x2 * _0x11d74a * _0x2c9928
        ),
          _0x587de3["restore"]();
      }
    }
  }),
  (_0x14e257["prototype"]["drawUnderSkinImgOutline"] = function () {
    _0x14e257["superClass"]["prototype"]["drawUnderSkinImgOutline"]["call"](this);
    if (this["flag_usingAbility"] && !this["flag_flying"]) {
      var _0x3d81d6 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
        _0xebc7ba = 1.5,
        _0x57bd65 = 0.5,
        _0x13b1d8 = _0x57bd65 * Math["sin"](((0x2 * Math["PI"]) / _0xebc7ba) * _0x3d81d6);
      _0x587de3["save"](),
        (_0x587de3["globalAlpha"] *= 0.8),
        _0x440ef0(0x0, this["rad"] * (0.9 + 0.12 * _0x13b1d8), this["rad"] * 0.3, "#2c84ff"),
        _0x440ef0(0x0, -this["rad"] * 0.3, this["rad"] * (1.05 + 0.09 * _0x13b1d8), "#4668ff"),
        _0x587de3["restore"](),
        _0x587de3["save"]();
      var _0x2ded83 = "#4E71C3";
      (_0x587de3["globalAlpha"] = 0x1), (_0x587de3["fillStyle"] = _0x2ded83);
      var _0x3e056a = this["rad"] * 0.1;
      _0x587de3["beginPath"](),
        _0x587de3["arc"](this["rad"] * -0.3, this["rad"] * 1.2, Math["max"](0x0, _0x3e056a + _0x13b1d8), 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](this["rad"] * 0.2, this["rad"] * 1.5, Math["max"](0x0, _0x3e056a - _0x13b1d8), 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](this["rad"] * 0.3, this["rad"] * 1.2, Math["max"](0x0, _0x3e056a + _0x13b1d8), 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](this["rad"] * -0.2, this["rad"] * 1.5, Math["max"](0x0, _0x3e056a - _0x13b1d8), 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        _0x587de3["restore"]();
    }
  }),
  (_0x14e257["prototype"]["readCustomData_onNewlyVisible"] = function (_0x2a015c) {
    _0x14e257["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x2a015c);
    var _0x5b8a77 = _0x2a015c["readUInt8"]();
    this["colorPerc"] = _0x5b8a77 / 0x64;
  }),
  (_0x14e257["prototype"]["customUpdatedProperty"] = function (_0x20e30e, _0x3d8f5c) {
    if (_0x20e30e == _0x2a862b) {
      var _0x20d06a = _0x3d8f5c["readUInt8"]();
      this["colorPerc"] = _0x20d06a / 0x64;
    }
  });

function _0x14e257() {
  _0x14e257["superClass"]["call"](this, _0x3fb3b2);
}
(window["Flamingo"] = _0x14e257), _0x17bf26["setCustomClassForGameObjType"](_0x14e257, _0x3fb3b2, _0x5d0d40);
var _0x48c344 = _0x3799d1;
(_0x113496["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x113496["prototype"]["constructor"] = _0x113496),
  (_0x113496["superClass"] = _0x48c344),
  (_0x113496["prototype"]["getSkinName"] = function () {
    let _0xf93ce = this["getSpeciesPath"]() + "/cassowary";
    return (_0xf93ce += this["specType"] == 0x0 ? "" : this["specType"]), _0xf93ce;
  }),
  (_0x113496["prototype"]["getSpeciesPath"] = function () {
    return "land/cassowary/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x113496["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x113496["prototype"]["getAbilityInfo"] = function (_0x1e0197) {
    var _0x2fd37c = {};
    return (
      (_0x2fd37c["abilName"] = "Front Kick\x0a(Hold to Charge)"),
      (_0x2fd37c["abilImg"] = "abilities/Kick.svg"),
      (_0x2fd37c["skinThemeID"] = this["skinThemeID"]),
      (_0x2fd37c["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x2fd37c
    );
  }),
  (_0x113496["prototype"]["animalInfo"] = function () {
    var _0x59d209 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x59d209["aniName"] = "Cassowary!";
        break;
      case 0x1:
        _0x59d209["aniName"] = "Golden Cassowary!";
        break;
      case 0x2:
        _0x59d209["aniName"] = "Cotton Cassowary!";
        break;
      case 0xca:
        _0x59d209["aniName"] = "Pastel Cassowary";
        break;
      case 0xcc:
        _0x59d209["aniName"] = "Basilisk Cassowary!";
        break;
    }
    return (
      (_0x59d209["aniCol"] = "#FF9000"),
      (_0x59d209["skinName"] = this["getSkinName"]()),
      (_0x59d209["upgradeText"] =
        "UPGRADED to " + _0x59d209["aniName"] + "!\x0aHold W to charge up a kick, the longer you hold, the more powerful it is!"),
      _0x59d209
    );
  });

function _0x113496() {
  _0x113496["superClass"]["call"](this, _0x3fb3b2);
}
(window["Cassowary"] = _0x113496), _0x17bf26["setCustomClassForGameObjType"](_0x113496, _0x3fb3b2, _0x43a3bb);
var _0x48c344 = _0x3799d1;
(_0x58a6c9["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x58a6c9["prototype"]["constructor"] = _0x58a6c9),
  (_0x58a6c9["superClass"] = _0x48c344),
  (_0x58a6c9["prototype"]["getSkinName"] = function () {
    var _0x15f71d = "land/chicken/" + this["animalSpecies"] + "/chicken";
    return (_0x15f71d += this["specType"] == 0x0 ? "" : this["specType"]), _0x15f71d;
  }),
  (_0x58a6c9["prototype"]["animalInfo"] = function () {
    var _0x518790 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x518790["aniName"] = "Chicken";
        break;
      case 0xc9:
        _0x518790["aniName"] = "Countryside Chick";
        break;
      case 0xca:
        _0x518790["aniName"] = "Lightning Lord";
        break;
    }
    return (
      (_0x518790["aniCol"] = "#FF9000"),
      (_0x518790["skinName"] = "land/chicken/" + this["animalSpecies"] + "/chicken"),
      (_0x518790["upgradeText"] = "UPGRADED to " + _0x518790["aniName"] + "!"),
      _0x518790
    );
  }),
  (_0x58a6c9["prototype"]["getWing"] = function (_0x758bea, _0x4fe17a, _0x11317a) {
    var _0x56a25f = "skins/land/" + (_0x11317a ? this["getSpeciesPath"](_0x758bea) + "/" : _0x758bea + "/");
    return (_0x56a25f += _0x758bea + "_wing" + _0x4fe17a + ".png"), _0x56a25f;
  }),
  (_0x58a6c9["prototype"]["getHead"] = function (_0x13b4b9, _0x80d63f) {
    var _0x5c92ba = "skins/land/" + (_0x80d63f ? this["getSpeciesPath"](_0x13b4b9) + "/" : _0x13b4b9 + "/");
    return (_0x5c92ba += _0x13b4b9 + "_head.png"), _0x5c92ba;
  }),
  (_0x58a6c9["prototype"]["getAbilityInfo"] = function (_0x51d6c1) {
    var _0x55da58 = {};
    return (
      (_0x55da58["abilName"] = "Run!"),
      (_0x55da58["abilImg"] = "abilities/Dash-Boost.svg"),
      (_0x55da58["skinThemeID"] = this["skinThemeID"]),
      (_0x55da58["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x55da58
    );
  }),
  (_0x58a6c9["prototype"]["drawSkinCustomization"] = function () {
    var _0x5e8cd9 = 0x1f4 / 0x154;
    if (this["flag_usingAbility"]) {
      _0x587de3["save"]();
      var _0x2a52e6 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
        _0x5bce16 = _0x120bbb(_0x2a52e6, 0.3, 0x1, 0x2),
        _0x48c770 = this["getSkinImageObj"](this["getWing"]("chicken", 0x1, !![]));
      if (_0x48c770) {
        _0x587de3["save"]();
        var _0x4cbab1 = -(-0.2 + _0x5bce16) * _0x3d960f(0xf),
          _0x1ec98c = this["rad"] * 0.8;
        _0x587de3["rotate"](_0x3d960f(0xf) + _0x4cbab1);
        var _0x5d91f6 = 0x0,
          _0xbfe2f6 = this["rad"],
          _0x8c687f = _0x1ec98c * 0x2 * 0.7,
          _0x4b491a = _0x1ec98c * 2.2,
          _0x2c8a18 = 0x0,
          _0x31367c = 1.5;
        _0x587de3["drawImage"](_0x48c770, _0x5d91f6 + _0x8c687f * -_0x2c8a18, _0xbfe2f6 + _0x4b491a * -_0x31367c, _0x8c687f, _0x4b491a),
          _0x587de3["restore"]();
      }
      var _0x48c770 = this["getSkinImageObj"](this["getWing"]("chicken", 0x2, !![]));
      if (_0x48c770) {
        _0x587de3["save"]();
        var _0x4cbab1 = -(-0.2 + _0x5bce16) * _0x3d960f(-0xf),
          _0x1ec98c = this["rad"] * 0.8;
        _0x587de3["rotate"](_0x3d960f(-0xf) + _0x4cbab1);
        var _0x5d91f6 = 0x0,
          _0xbfe2f6 = this["rad"],
          _0x8c687f = _0x1ec98c * 0x2 * 0.7,
          _0x4b491a = _0x1ec98c * 2.2,
          _0x2c8a18 = 0x1,
          _0x31367c = 1.5;
        _0x587de3["drawImage"](_0x48c770, _0x5d91f6 + _0x8c687f * -_0x2c8a18, _0xbfe2f6 + _0x4b491a * -_0x31367c, _0x8c687f, _0x4b491a),
          _0x587de3["restore"]();
      }
      var _0x1f7524 = this["getSkinImageObj"](this["getHead"]("chicken", !![]));
      if (_0x1f7524) {
        _0x587de3["save"]();
        var _0x1ec98c = this["rad"] * 0x1,
          _0x28a402 = -this["rad"] * 0.1;
        _0x587de3["drawImage"](
          _0x1f7524,
          -_0x1ec98c * _0x5e8cd9,
          -_0x1ec98c + _0x28a402 * _0x5e8cd9,
          0x2 * _0x1ec98c * _0x5e8cd9,
          0x2 * _0x1ec98c * _0x5e8cd9
        ),
          _0x587de3["restore"]();
      }
      _0x587de3["restore"]();
    }
  });

function _0x58a6c9() {
  _0x58a6c9["superClass"]["call"](this, _0x3fb3b2);
}
(window["Chicken"] = _0x58a6c9), _0x17bf26["setCustomClassForGameObjType"](_0x58a6c9, _0x3fb3b2, _0x37c0ab);
var _0x20f4e1 = _0x20f4e1,
  _0x48c344 = _0x3799d1;
(_0x20f4e1["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x20f4e1["prototype"]["constructor"] = _0x20f4e1),
  (_0x20f4e1["superClass"] = _0x48c344),
  (_0x20f4e1["prototype"]["animalInfo"] = function () {
    var _0x6a8900 = {};
    _0x6a8900["aniName"] = "Woodpecker";
    switch (this["animalSpecies"]) {
      case 0xca:
        _0x6a8900["aniName"] = "Jackhammer";
        break;
    }
    return (
      (_0x6a8900["aniCol"] = "#FF9000"),
      (_0x6a8900["skinName"] = this["getSpeciesPath"]("woodpecker") + "/woodpecker"),
      (_0x6a8900["upgradeText"] =
        "UPGRADED to " + _0x6a8900["aniName"] + "!\x0aHold W to Peck other animals,\x0a or (Hint: Use ability on hills to fly)"),
      _0x6a8900
    );
  }),
  (_0x20f4e1["prototype"]["getSpeciesPath"] = function (_0xb6c153) {
    return "land/" + _0xb6c153 + "/" + this["animalSpecies"];
  }),
  (_0x20f4e1["prototype"]["getSkinName"] = function () {
    var _0x500571 = this["getSpeciesPath"]("woodpecker") + "/woodpecker";
    return (_0x500571 += this["specType"] == 0x0 ? "" : this["specType"]), _0x500571;
  }),
  (_0x20f4e1["prototype"]["getHead"] = function (_0x15507f, _0x879d52) {
    var _0xdfb988 = "skins/" + (_0x879d52 ? this["getSpeciesPath"](_0x15507f) + "/" : _0x15507f + "/");
    return (_0xdfb988 += _0x15507f + "_head" + (!this["flag_flying"] && this["flag_usingAbility"] ? "1" : "") + ".png"), _0xdfb988;
  }),
  (_0x20f4e1["prototype"]["getAbilityInfo"] = function (_0x5f1f11) {
    var _0xfaa98 = {};
    return (
      (_0xfaa98["abilName"] = "HOLD to Peck\x0a/ Fly"),
      (_0xfaa98["abilImg"] = "abilities/Peck.svg"),
      (_0xfaa98["skinThemeID"] = this["skinThemeID"]),
      (_0xfaa98["mopeSeasonID"] = this["mopeSeasonID"]),
      _0xfaa98
    );
  }),
  (_0x20f4e1["prototype"]["getAniRadius"] = function (_0x4c22b3) {
    if (this["flag_usingAbility"] && this["flag_flying"]) return _0x4c22b3 * 0.8;
    return _0x4c22b3;
  }),
  (_0x20f4e1["prototype"]["drawSkinCustomization"] = function () {
    if (!this["flag_usingAbility"]) return;
    var _0x168116 = "skins";
    {
      var _0x3ea65f = 0x1f4 / 0x154;
      _0x587de3["save"]();
      var _0x33841 = this["flag_flying"] ? 0x2d : 0x2f,
        _0x19436e = this["flag_flying"] ? 0x5a : 0x2d,
        _0x180a3a = this["flag_flying"] ? 0.2 : 0.01,
        _0xce8291 = this["flag_flying"] ? 2.5 : 0x2,
        _0x5c95f8 = this["flag_flying"] ? 2.2 : 2.5,
        _0x5c7ee2 = this["flag_flying"] ? 0.5 : 0.3,
        _0x1aa0d5 = 0.3,
        _0x51ef31 = (_0x168a54 - this["spawnTime"]) / 0x3e8;
      if (this["flag_flying"]) {
        var _0x200978 = _0x38b128("bird", this["spawnTime"]);
        _0x200978 !== undefined && _0x200978 != null && (this["theFrame"] = _0x200978);
      } else
        this["theFrame"] = !(_0x57ae6d == 0x2 || _0x34fedb) ? _0x120bbb(_0x51ef31, _0x5c7ee2, _0x1aa0d5, 0x2) : this["birdNoAnimationFlyWingAngle"];
      var _0x212413 = this["theFrame"],
        _0x135fdd = this["getSkinImageObj"](this["getWing"]("woodpecker", 0x1, !![]));
      if (_0x135fdd) {
        _0x587de3["save"]();
        var _0x4e56bc = -(-_0x180a3a + _0x212413) * _0x3d960f(_0x19436e),
          _0x5f1600 = this["rad"] * 0.8;
        _0x587de3["rotate"](_0x3d960f(_0x33841) + _0x4e56bc);
        var _0x391da2 = 0x0,
          _0x3dba1b = this["rad"],
          _0x4bf3b2 = _0x5f1600 * _0x5c95f8 * 0.62,
          _0x545201 = _0x5f1600 * _0xce8291,
          _0x5f3a9d = 0.2,
          _0x188a80 = 1.7;
        _0x587de3["drawImage"](_0x135fdd, _0x391da2 + _0x4bf3b2 * -_0x5f3a9d, _0x3dba1b + _0x545201 * -_0x188a80, _0x4bf3b2, _0x545201),
          _0x587de3["restore"]();
      }
      var _0x135fdd = this["getSkinImageObj"](this["getWing"]("woodpecker", 0x2, !![]));
      if (_0x135fdd) {
        _0x587de3["save"]();
        var _0x4e56bc = -(-_0x180a3a + _0x212413) * _0x3d960f(-_0x19436e),
          _0x5f1600 = this["rad"] * 0.8;
        _0x587de3["rotate"](_0x3d960f(-_0x33841) + _0x4e56bc);
        var _0x391da2 = 0x0,
          _0x3dba1b = this["rad"],
          _0x4bf3b2 = _0x5f1600 * _0x5c95f8 * 0.62,
          _0x545201 = _0x5f1600 * _0xce8291,
          _0x5f3a9d = 0.8,
          _0x188a80 = 1.7;
        _0x587de3["drawImage"](_0x135fdd, _0x391da2 + _0x4bf3b2 * -_0x5f3a9d, _0x3dba1b + _0x545201 * -_0x188a80, _0x4bf3b2, _0x545201),
          _0x587de3["restore"]();
      }
      _0x587de3["restore"]();
      if (this["specType"] != 0x0 && this["specType"] != undefined) {
        var _0x215963 = this["getSkinImageObj"](this["getHead"]("woodpecker", !![]));
        if (_0x215963) {
          _0x212413 = 0x0;
          !this["flag_flying"] &&
            ((_0x1aa0d5 = 0x3),
            (_0x5c7ee2 = 0.18),
            (_0x212413 = !(_0x57ae6d == 0x2) ? _0x120bbb(_0x51ef31, _0x5c7ee2, _0x1aa0d5, 0x2) : this["birdNoAnimationFlyWingAngle"]));
          _0x587de3["save"]();
          var _0x5f1600 = this["rad"],
            _0x2fd7ee = !this["flag_flying"] ? (-_0x5f1600 + _0x5f1600 * 0.1) * _0x3ea65f + _0x212413 : -_0x5f1600;
          _0x587de3["drawImage"](_0x215963, -_0x5f1600 * _0x3ea65f, _0x2fd7ee, 0x2 * _0x5f1600 * _0x3ea65f, 0x2 * _0x5f1600 * _0x3ea65f),
            _0x587de3["restore"]();
        }
      }
    }
  });

function _0x20f4e1() {
  _0x20f4e1["superClass"]["call"](this, _0x3fb3b2);
}
(window["Woodpecker"] = _0x20f4e1), _0x17bf26["setCustomClassForGameObjType"](_0x20f4e1, _0x3fb3b2, _0x4da405);
var _0x5ce6dd = _0x5ce6dd,
  _0x48c344 = _0x3799d1;
(_0x5ce6dd["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x5ce6dd["prototype"]["constructor"] = _0x5ce6dd),
  (_0x5ce6dd["superClass"] = _0x48c344),
  (_0x5ce6dd["prototype"]["updateZ"] = function () {
    if (this["flag_usingAbility"]) {
      if (this["flag_flying"]) {
        this["z"] = 0x186a0 + this["rad"];
        return;
      }
    }
    this["z"] = 0x3e8 + this["rad"];
  }),
  (_0x5ce6dd["prototype"]["animalInfo"] = function () {
    var _0x4d5ecf = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x4d5ecf["aniName"] = "Peacock";
        break;
      case 0xc8:
        _0x4d5ecf["aniName"] = "Plague Raptor";
        break;
      case 0xca:
        _0x4d5ecf["aniName"] = "Spectrum Peacock";
        break;
    }
    return (
      (_0x4d5ecf["aniCol"] = "#FF9000"),
      (_0x4d5ecf["skinName"] = this["getSpeciesPath"]("peacock") + "/peacock"),
      (_0x4d5ecf["upgradeText"] =
        "UPGRADED to " +
        _0x4d5ecf["aniName"] +
        "!\x0aHold W to hypnotize prey: prey gets pulled in, predtors pushed!. \x0aHint:Start the ability on a hill to fly!. "),
      _0x4d5ecf
    );
  }),
  (_0x5ce6dd["prototype"]["getSkinName"] = function () {
    var _0x4fe649 = this["getSpeciesPath"]("peacock") + "/peacock";
    return (_0x4fe649 += this["specType"] == 0x0 ? "" : this["specType"]), _0x4fe649;
  }),
  (_0x5ce6dd["prototype"]["getSpeciesPath"] = function (_0x52c1e5) {
    return "land/" + _0x52c1e5 + "/" + this["animalSpecies"];
  }),
  (_0x5ce6dd["prototype"]["getWing"] = function (_0x5ba828, _0x248c8e, _0x3e031c) {
    var _0x54afa6 = "skins/" + (_0x3e031c ? this["getSpeciesPath"](_0x5ba828) + "/" : _0x5ba828 + "/");
    return (_0x54afa6 += _0x5ba828 + "_wing" + _0x248c8e + ".png"), _0x54afa6;
  }),
  (_0x5ce6dd["prototype"]["getHead"] = function (_0x36dc70, _0x3911c8) {
    var _0xc3cc2f = "skins/" + (_0x3911c8 ? this["getSpeciesPath"](_0x36dc70) + "/" : _0x36dc70 + "/");
    return (_0xc3cc2f += _0x36dc70 + "_head.png"), _0xc3cc2f;
  }),
  (_0x5ce6dd["prototype"]["getAniRadius"] = function (_0xfca418) {
    if (this["flag_usingAbility"] && this["flag_flying"]) return _0xfca418 * 0.9;
    return _0xfca418;
  }),
  (_0x5ce6dd["prototype"]["getSkinImageObj"] = function (_0x42009e) {
    var _0x49cf86 = this["animalSpecies"] === 0xc8 ? 0x1 : this["mopeSeasonID"];
    return this["getSkinImageObjForSeason"](_0x42009e, _0x49cf86);
  }),
  (_0x5ce6dd["prototype"]["basicDrawSkinImg"] = function () {
    this["setSkinScale"]();
    var _0xc0054a = 0.05,
      _0x5d6e6c = -0.8,
      _0x1260c3 = this["getAniRadius"](this["skinRad"] - this["outlineW"]),
      _0x3d312b = 0x1f4 / 0x154;
    if (!this["flag_flying"] && this["flag_usingAbility"]) {
      var _0x2020b4 = -0.55,
        _0x3fe591 = "peacock_ability",
        _0x228bfa = this["getSkinImageObj"]("skins/land/peacock/" + this["animalSpecies"] + "/" + _0x3fe591 + ".png"),
        _0x2beac0 = this["skinScale"] + (this["flag_usingAbility"] && !this["flag_flying"] ? 0x1 : 0x0);
      _0x228bfa &&
        (_0x587de3["save"](),
        _0x587de3["drawImage"](
          _0x228bfa,
          -_0x1260c3 * _0x2beac0,
          (-_0x1260c3 + _0x1260c3 * _0x2020b4) * _0x2beac0,
          0x2 * _0x1260c3 * _0x2beac0,
          0x2 * _0x1260c3 * _0x2beac0
        ),
        _0x587de3["restore"]());
    }
    if (this["loadedSkinImg"]) {
      var _0x5a5b36 = this["flag_usingAbility"] && !this["flag_flying"] ? this["skinScale"] * 1.1 : _0x3d312b;
      _0x587de3["drawImage"](
        this["loadedSkinImg"],
        -_0x1260c3 * _0x5a5b36,
        (-_0x1260c3 + _0x1260c3 * _0xc0054a) * _0x5a5b36,
        0x2 * _0x1260c3 * _0x5a5b36,
        0x2 * _0x1260c3 * _0x5a5b36
      );
      if (this["flag_flying"] || !this["flag_usingAbility"]) {
        var _0x3fe591 = "tail",
          _0x228bfa = this["getSkinImageObj"]("skins/land/peacock/" + this["animalSpecies"] + "/" + _0x3fe591 + ".png"),
          _0x2beac0 = this["skinScale"];
        if (_0x228bfa) {
          _0x587de3["save"]();
          var _0x1260c3 = this["rad"] - this["outlineW"];
          _0x587de3["drawImage"](
            _0x228bfa,
            -_0x1260c3 * _0x2beac0,
            (-_0x1260c3 + _0x1260c3 * _0x5d6e6c) * _0x2beac0,
            0x2 * _0x1260c3 * _0x2beac0,
            0x2 * _0x1260c3 * _0x2beac0
          ),
            _0x587de3["restore"]();
        }
      }
      if (!this["flag_usingAbility"]) {
        var _0x5b1497 = this["getSkinImageObj"]("skins/" + this["getSpeciesPath"]("peacock") + "/peacock_top.png");
        _0x5b1497 &&
          _0x587de3["drawImage"](
            _0x5b1497,
            -_0x1260c3 * _0x3d312b,
            (-_0x1260c3 + _0x1260c3 * _0xc0054a) * _0x3d312b,
            0x2 * _0x1260c3 * _0x3d312b,
            0x2 * _0x1260c3 * _0x3d312b
          );
      }
    }
  }),
  (_0x5ce6dd["prototype"]["drawSkinCustomization"] = function () {
    if (!this["flag_usingAbility"]) return;
    var _0x3bdd6a = 0x1f4 / 0x154;
    if (this["flag_flying"] && !this["flag_isGrabbed"]) {
      _0x587de3["save"]();
      var _0x2b6c71 = _0x38b128("bird", this["spawnTime"]);
      _0x2b6c71 !== undefined && _0x2b6c71 != null && (this["theFrame"] = _0x2b6c71);
      var _0xd1e135 = !(_0x57ae6d == 0x2 || _0x34fedb) ? this["theFrame"] : this["birdNoAnimationFlyWingAngle"],
        _0x137b5e = this["getSkinImageObj"](this["getWing"]("peacock", 0x1, !![]));
      if (_0x137b5e) {
        _0x587de3["save"]();
        var _0x542378 = -(-0.2 + _0xd1e135) * _0x2f9e35,
          _0x3f2c52 = this["rad"] * 0.8;
        _0x587de3["rotate"](_0x3d960f(0x2d) + _0x542378);
        var _0x1e0a26 = 0x0,
          _0x4cf669 = this["rad"],
          _0x200de3 = _0x3f2c52 * 0x2 * 0.62,
          _0x427185 = _0x3f2c52 * 2.5,
          _0x29358e = 0.2,
          _0x5c1fff = 1.7;
        _0x587de3["drawImage"](_0x137b5e, _0x1e0a26 + _0x200de3 * -_0x29358e, _0x4cf669 + _0x427185 * -_0x5c1fff, _0x200de3, _0x427185),
          _0x587de3["restore"]();
      }
      var _0x137b5e = this["getSkinImageObj"](this["getWing"]("peacock", 0x2, !![]));
      if (_0x137b5e) {
        _0x587de3["save"]();
        var _0x542378 = -(-0.2 + _0xd1e135) * _0x3d960f(-0x5a),
          _0x3f2c52 = this["rad"] * 0.8;
        _0x587de3["rotate"](_0x3d960f(-0x2d) + _0x542378);
        var _0x1e0a26 = 0x0,
          _0x4cf669 = this["rad"],
          _0x200de3 = _0x3f2c52 * 0x2 * 0.62,
          _0x427185 = _0x3f2c52 * 2.5,
          _0x29358e = 0.8,
          _0x5c1fff = 1.7;
        _0x587de3["drawImage"](_0x137b5e, _0x1e0a26 + _0x200de3 * -_0x29358e, _0x4cf669 + _0x427185 * -_0x5c1fff, _0x200de3, _0x427185),
          _0x587de3["restore"]();
      }
      _0x587de3["restore"]();
    } else {
      if (this["flag_usingAbility"] && !this["flag_flying"]) {
        _0x587de3["save"]();
        var _0x32f0c1 = this["flag_flying"] ? 0x2d : 0x14,
          _0x18fdad = this["flag_flying"] ? 0x5a : 0x2d,
          _0x1ad49f = this["flag_flying"] ? 0.2 : 0.01,
          _0x3c8023 = this["flag_flying"] ? 2.5 : 0x2,
          _0x365796 = this["flag_flying"] ? 2.5 : 0x2,
          _0x159a15 = this["flag_flying"] ? 0x0 : -0.4,
          _0xb91ca0 = this["flag_flying"] ? 0x0 : -0.2,
          _0x3457cb = this["flag_flying"] ? 0.5 : 1.2,
          _0x44370f = this["flag_flying"] ? 0.3 : 0.1,
          _0x53c610 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
          _0xd1e135 = !(_0x57ae6d == 0x2 || _0x34fedb) ? _0x120bbb(_0x53c610, _0x3457cb, _0x44370f, 0x2) : this["birdNoAnimationFlyWingAngle"],
          _0x137b5e = this["getSkinImageObj"](this["getWing"]("peacock", 0x1, !![]));
        if (_0x137b5e) {
          _0x587de3["save"]();
          var _0x542378 = -(-_0x1ad49f + _0xd1e135) * _0x3d960f(_0x18fdad),
            _0x3f2c52 = this["rad"] * 0.8;
          _0x587de3["rotate"](_0x3d960f(_0x32f0c1) + _0x542378);
          var _0x1e0a26 = 0x0,
            _0x4cf669 = this["rad"],
            _0x200de3 = _0x3f2c52 * _0x365796 * 0.62,
            _0x427185 = _0x3f2c52 * _0x3c8023,
            _0x29358e = 0.2 + _0x159a15,
            _0x5c1fff = 1.7 + _0xb91ca0;
          _0x587de3["drawImage"](_0x137b5e, _0x1e0a26 + _0x200de3 * -_0x29358e, _0x4cf669 + _0x427185 * -_0x5c1fff, _0x200de3, _0x427185),
            _0x587de3["restore"]();
        }
        var _0x137b5e = this["getSkinImageObj"](this["getWing"]("peacock", 0x2, !![]));
        if (_0x137b5e) {
          _0x587de3["save"]();
          var _0x542378 = -(-_0x1ad49f + _0xd1e135) * _0x3d960f(-_0x18fdad),
            _0x3f2c52 = this["rad"] * 0.8;
          _0x587de3["rotate"](_0x3d960f(-_0x32f0c1) + _0x542378);
          var _0x1e0a26 = 0x0,
            _0x4cf669 = this["rad"],
            _0x200de3 = _0x3f2c52 * _0x365796 * 0.62,
            _0x427185 = _0x3f2c52 * _0x3c8023,
            _0x29358e = 0.8 - _0x159a15,
            _0x5c1fff = 1.7 + _0xb91ca0;
          _0x587de3["drawImage"](_0x137b5e, _0x1e0a26 + _0x200de3 * -_0x29358e, _0x4cf669 + _0x427185 * -_0x5c1fff, _0x200de3, _0x427185),
            _0x587de3["restore"]();
        }
        _0x587de3["restore"]();
      }
    }
    if (this["specType"] != 0x0 && this["specType"] != undefined) {
      var _0x25e062 = 0.4,
        _0x304518 = this["getSkinImageObj"](this["getHead"]("peacock", !![]));
      if (_0x304518) {
        _0x587de3["save"]();
        var _0x3f2c52 = this["rad"];
        _0x587de3["drawImage"](
          _0x304518,
          -_0x3f2c52 * _0x3bdd6a,
          (-_0x3f2c52 + _0x3f2c52 * _0x25e062) * _0x3bdd6a,
          0x2 * _0x3f2c52 * _0x3bdd6a,
          0x2 * _0x3f2c52 * _0x3bdd6a
        ),
          _0x587de3["restore"]();
      }
    }
  });

function _0x5ce6dd() {
  _0x5ce6dd["superClass"]["call"](this, _0x3fb3b2);
}
(window["Peacock"] = _0x5ce6dd), _0x17bf26["setCustomClassForGameObjType"](_0x5ce6dd, _0x3fb3b2, _0x2deb28);
var _0x48c344 = _0x3799d1;
(_0x3d16ee["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x3d16ee["prototype"]["constructor"] = _0x3d16ee),
  (_0x3d16ee["superClass"] = _0x48c344),
  (_0x3d16ee["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"];
    if (this["flag_canClimbHill"] || this["flag_flying"]) this["z"] += 0x186a0;
  }),
  (_0x3d16ee["prototype"]["animalInfo"] = function () {
    var _0x1774c1 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x1774c1["aniName"] = "Gazelle";
        break;
      case 0x64:
        _0x1774c1["aniName"] = "Falmmy Hart";
        break;
      case 0xca:
        _0x1774c1["aniName"] = "Retro Neon Gazelle";
        break;
    }
    return (
      (_0x1774c1["skinName"] = this["getSkinName"]()),
      (_0x1774c1["aniCol"] = "#FF9000"),
      (_0x1774c1["upgradeText"] = "UPGRADED to " + _0x1774c1["aniName"] + "!\x0aHold 'W' to Jump High through everything."),
      _0x1774c1
    );
  }),
  (_0x3d16ee["prototype"]["moveF"] = 0.08),
  (_0x3d16ee["prototype"]["jumpAnim"] = null),
  (_0x3d16ee["prototype"]["frame"] = 0x0),
  (_0x3d16ee["prototype"]["drawUnderSkinImg"] = function () {
    if (this["flag_usingAbility"]) {
      var _0x2cc1f9 = 0x1;
      this["jumpAnim"] == null &&
        ((this["jumpAnim"] = new _0x5431fd(this, 0.5, _0x5431fd["halfWave"])),
        (this["jumpAnim"]["keepLastFrame"] = !![]),
        (this["jumpAnim"]["loop"] = !![]),
        (this["jumpAnim"]["onFrameEntered"] = function (_0x307020) {
          this["forObj"]["frame"] = _0x307020;
        }),
        (this["jumpAnim"]["onStop"] = function () {}));
      if (this["jumpAnim"] != null) this["jumpAnim"]["run"]();
      var _0x18d894 = this["rad"] - this["outlineW"],
        _0x2f84a4 = 0x1f4 / 0x154;
      this["setSkinScale"]();
      var _0x2c45d2 = "skins/" + this["getSkinPath"]() + "/legs0.png",
        _0x4523b4 = "skins/" + this["getSkinPath"]() + "/legs1.png",
        _0x9c422d = this["getSkinImageObj"](_0x2c45d2),
        _0x2839d5 = this["getSkinImageObj"](_0x4523b4);
      if (_0x9c422d && _0x2839d5) {
        var _0x2f84a4 = this["skinScale"] + this["skinScale"] * 0.15 * this["frame"],
          _0x18d894 = this["skinRad"];
        this["specType"] == 0x0
          ? (_0x587de3["drawImage"](
              _0x9c422d,
              -_0x18d894 * _0x2f84a4,
              -_0x18d894 * _0x2f84a4,
              0x2 * _0x18d894 * _0x2f84a4,
              0x2 * _0x18d894 * _0x2f84a4
            ),
            _0x587de3["drawImage"](
              _0x2839d5,
              -_0x18d894 * _0x2f84a4,
              (-_0x18d894 - _0x18d894 * this["moveF"] * this["frame"]) * _0x2f84a4,
              0x2 * _0x18d894 * _0x2f84a4,
              0x2 * _0x18d894 * _0x2f84a4
            ))
          : (_0x587de3["drawImage"](
              _0x2839d5,
              -_0x18d894 * _0x2f84a4,
              -_0x18d894 * _0x2f84a4,
              0x2 * _0x18d894 * _0x2f84a4,
              0x2 * _0x18d894 * _0x2f84a4
            ),
            _0x587de3["drawImage"](
              _0x9c422d,
              -_0x18d894 * _0x2f84a4,
              (-_0x18d894 + _0x18d894 * this["moveF"] * this["frame"]) * _0x2f84a4,
              0x2 * _0x18d894 * _0x2f84a4,
              0x2 * _0x18d894 * _0x2f84a4
            ));
      }
    } else this["jumpAnim"] = null;
  }),
  (_0x3d16ee["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x3d16ee["prototype"]["getSkinPath"] = function (_0x49705d) {
    return "desert/gazelle/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x3d16ee["prototype"]["getSkinName"] = function () {
    var _0x32a3cb = this["getSkinPath"]() + "/gazelle";
    return (_0x32a3cb += this["specType"] == 0x0 ? "" : this["specType"]), _0x32a3cb;
  }),
  (_0x3d16ee["prototype"]["getAbilityInfo"] = function (_0x46352e) {
    var _0x48f4f9 = {};
    return (
      (_0x48f4f9["abilImg"] = "abilities/Jump.svg"),
      (_0x48f4f9["abilName"] = "HOLD to Jump High\x0a"),
      (_0x48f4f9["skinThemeID"] = this["skinThemeID"]),
      (_0x48f4f9["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x48f4f9
    );
  });

function _0x3d16ee() {
  _0x3d16ee["superClass"]["call"](this, _0x3fb3b2);
}
(window["Gazelle"] = _0x3d16ee), _0x17bf26["setCustomClassForGameObjType"](_0x3d16ee, _0x3fb3b2, _0x4eaba8);
var _0x48c344 = _0x3799d1;
(_0x1e1c68["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1e1c68["prototype"]["constructor"] = _0x1e1c68),
  (_0x1e1c68["superClass"] = _0x48c344),
  (_0x1e1c68["prototype"]["animalInfo"] = function () {
    var _0x399be6 = {};
    _0x399be6["aniCol"] = "#FF9000";
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x399be6["aniName"] = "Armadillo";
        break;
    }
    return (
      (_0x399be6["skinName"] = this["getSkinName"]()),
      (_0x399be6["upgradeText"] =
        "UPGRADED to " + _0x399be6["aniName"] + "!\x0aHold 'W' to roll through everything. \x0aCarefully, try eating mangoes around venus flytraps!"),
      _0x399be6
    );
  }),
  (_0x1e1c68["prototype"]["drawUnderSkinTail"] = function (_0x45c7ce) {
    !this["flag_usingAbility"] && _0x1e1c68["superClass"]["prototype"]["drawUnderSkinTail"]["call"](this, _0x45c7ce);
  }),
  (_0x1e1c68["prototype"]["drawAnimalUnderSkinCircle"] = function (_0x1d1efc) {
    !this["flag_usingAbility"] && _0x1e1c68["superClass"]["prototype"]["drawAnimalUnderSkinCircle"]["call"](this, _0x1d1efc);
  }),
  (_0x1e1c68["prototype"]["basicDrawSkinImg"] = function () {
    if (!this["flag_usingAbility"]) {
      _0x1e1c68["superClass"]["prototype"]["basicDrawSkinImg"]["call"](this);
      return;
    } else {
      this["setSkinScale"](), (this["frameNumber"] = Math["trunc"](_0x168a54 / 0x78) % 0x6);
      var _0x11fe72 = "skins/" + this["getSkin"]() + this["frameNumber"] + ".png",
        _0x927b80 = this["getSkinImageObj"](_0x11fe72);
      if (_0x927b80) {
        var _0x258f23 = this["skinScale"],
          _0x3eca9b = this["skinRad"];
        _0x587de3["drawImage"](_0x927b80, -_0x3eca9b * _0x258f23, -_0x3eca9b * _0x258f23, 0x2 * _0x3eca9b * _0x258f23, 0x2 * _0x3eca9b * _0x258f23);
      }
    }
  }),
  (_0x1e1c68["prototype"]["getSkin"] = function () {
    return "desert/armadillo/" + this["animalSpecies"] + this["getSubSpecies"]() + "/armadillo";
  }),
  (_0x1e1c68["prototype"]["getSkinName"] = function () {
    return "desert/armadillo/" + this["animalSpecies"] + this["getSubSpecies"]() + "/armadillo" + (this["specType"] == 0x0 ? "" : this["specType"]);
  }),
  (_0x1e1c68["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  });

function _0x1e1c68() {
  _0x1e1c68["superClass"]["call"](this, _0x3fb3b2);
}
(window["Armadillo"] = _0x1e1c68), _0x17bf26["setCustomClassForGameObjType"](_0x1e1c68, _0x3fb3b2, _0x299482);
var _0x48c344 = _0x3799d1;
(_0x3343dc["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x3343dc["prototype"]["constructor"] = _0x3343dc),
  (_0x3343dc["superClass"] = _0x48c344),
  (_0x3343dc["prototype"]["animalInfo"] = function () {
    var _0x2ba422 = {};
    _0x2ba422["aniCol"] = "#FF9000";
    switch (this["animalSpecies"]) {
      case 0x64:
        _0x2ba422["aniName"] = "Cacti Rat";
        break;
      case 0x0:
        _0x2ba422["aniName"] = "Desert Rat";
        break;
      case 0xca:
        _0x2ba422["aniName"] = "Plasma Rat";
        break;
    }
    return (_0x2ba422["skinName"] = this["getSkinName"]()), (_0x2ba422["upgradeText"] = ""), _0x2ba422;
  }),
  (_0x3343dc["prototype"]["getSkinName"] = function () {
    return this["getSkinPath"]() + "/kangaroorat" + (this["specType"] == 0x0 ? "" : this["specType"]);
  }),
  (_0x3343dc["prototype"]["getSkinPath"] = function () {
    return "desert/kangaroorat/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x3343dc["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x3343dc["prototype"]["flapStart"] = 0x0),
  (_0x3343dc["prototype"]["drawSkinCustomization"] = function () {
    if (this["flag_usingAbility"]) {
      var _0x574051 = "skins/" + this["getSkinPath"]() + "/tail.png",
        _0x1f0dc0 = this["getSkinImageObj"](_0x574051);
      if (_0x1f0dc0) {
        var _0x214580 = this["skinScale"] * 1.5,
          _0x4fce6f = this["skinRad"];
        _0x587de3["drawImage"](
          _0x1f0dc0,
          -_0x4fce6f * _0x214580,
          (-_0x4fce6f + _0x4fce6f * -0.08) * _0x214580,
          0x2 * _0x4fce6f * _0x214580,
          0x2 * _0x4fce6f * _0x214580
        );
      }
    }
  });

function _0x3343dc() {
  _0x3343dc["superClass"]["call"](this, _0x3fb3b2);
}
(window["KangarooRat"] = _0x3343dc), _0x17bf26["setCustomClassForGameObjType"](_0x3343dc, _0x3fb3b2, _0xbd9993);
var _0x48c344 = _0x3799d1;
(_0x2d7a17["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x2d7a17["prototype"]["constructor"] = _0x2d7a17),
  (_0x2d7a17["superClass"] = _0x48c344),
  (_0x2d7a17["prototype"]["animalInfo"] = function () {
    var _0x10ce79 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x10ce79["aniName"] = "Desert Chipmunk";
        break;
      case 0xc8:
        _0x10ce79["aniName"] = "Velvet Chipmunk";
        break;
      case 0xca:
        _0x10ce79["aniName"] = "Chipmonk";
        break;
    }
    return (
      (_0x10ce79["skinName"] = this["getSkinName"]()),
      (_0x10ce79["aniCol"] = "#FF9000"),
      (_0x10ce79["upgradeText"] = "UPGRADED to " + _0x10ce79["aniName"] + "!\x0a Press W to Spit food to boost yourself!"),
      _0x10ce79
    );
  }),
  (_0x2d7a17["prototype"]["getSkinName"] = function () {
    return this["getSkinPath"]() + "/chipmunk" + (this["specType"] == 0x0 ? "" : this["specType"]);
  }),
  (_0x2d7a17["prototype"]["getSkinPath"] = function () {
    return "desert/chipmunk/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x2d7a17["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x2d7a17["prototype"]["getAbilityInfo"] = function (_0x138f6c) {
    var _0x57bfaf = {};
    return (
      (_0x57bfaf["abilName"] = "Spits Food!"),
      (_0x57bfaf["abilImg"] = "abilities/Spit.svg"),
      (_0x57bfaf["skinThemeID"] = this["skinThemeID"]),
      (_0x57bfaf["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x57bfaf
    );
  });

function _0x2d7a17() {
  _0x2d7a17["superClass"]["call"](this, _0x3fb3b2);
}
(window["DesertChipmunk"] = _0x2d7a17), _0x17bf26["setCustomClassForGameObjType"](_0x2d7a17, _0x3fb3b2, _0x2a2687);
var _0x48c344 = _0x3799d1;
(_0x25810d["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x25810d["prototype"]["constructor"] = _0x25810d),
  (_0x25810d["superClass"] = _0x48c344),
  (_0x25810d["prototype"]["updateZ"] = function () {
    if (this["flag_eff_grabbedByFlytrap"]) this["z"] = 0x44c + this["rad"];
    else {
      if (this["flag_usingAbility"]) this["z"] = -0x9d;
      else {
        if (this["flag_flying"] || this["flag_eff_tossedInAir"]) this["z"] = 0x834 + this["rad"];
        else this["z"] = this["rad"];
      }
    }
  }),
  (_0x25810d["prototype"]["animalInfo"] = function () {
    var _0x45e3ec = {};
    _0x45e3ec["aniCol"] = "#FF9000";
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x45e3ec["aniName"] = "Meerkat";
        break;
      case 0x64:
        _0x45e3ec["aniName"] = "Puumpkat";
        break;
      case 0xc9:
        _0x45e3ec["aniName"] = "Scubakat";
        break;
      case 0xcc:
        _0x45e3ec["aniName"] = "Necromancer Meerkat";
        break;
    }
    return (
      (_0x45e3ec["skinName"] = this["getSkinName"]()),
      (_0x45e3ec["upgradeText"] = "UPGRADED to " + _0x45e3ec["aniName"] + "!\x0a HOLD to Dig Underground. \x0aYou can now eat pink cactus fruits!"),
      _0x45e3ec
    );
  }),
  (_0x25810d["prototype"]["getSkinName"] = function () {
    return this["getSkinPath"]() + "/meerkat" + (this["specType"] == 0x0 ? "" : this["specType"]);
  }),
  (_0x25810d["prototype"]["getSkinPath"] = function () {
    return "desert/meerkat/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x25810d["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x25810d["prototype"]["drawAnimalUnderSkinCircle"] = function (_0x2317d9) {
    !this["flag_usingAbility"] && _0x25810d["superClass"]["prototype"]["drawAnimalUnderSkinCircle"]["call"](this, _0x2317d9);
  }),
  (_0x25810d["prototype"]["drawUnderSkinTail"] = function (_0x2e3c95) {
    !this["flag_usingAbility"] && _0x25810d["superClass"]["prototype"]["drawUnderSkinTail"]["call"](this, _0x2e3c95);
  }),
  (_0x25810d["prototype"]["basicDrawSkinImg"] = function () {
    if (!this["flag_usingAbility"]) {
      _0x25810d["superClass"]["prototype"]["basicDrawSkinImg"]["call"](this);
      return;
    } else {
      this["setSkinScale"](), _0x587de3["save"]();
      var _0x511b74 = (_0x511b74 = "skins/" + this["getSkinPath"]() + "/meerkat1.png"),
        _0x21c184 = this["getSkinImageObj"](_0x511b74);
      if (_0x21c184) {
        var _0x47fd88 = this["skinScale"],
          _0x5f1072 = this["skinRad"];
        _0x587de3["drawImage"](_0x21c184, -_0x5f1072 * _0x47fd88, -_0x5f1072 * _0x47fd88, 0x2 * _0x5f1072 * _0x47fd88, 0x2 * _0x5f1072 * _0x47fd88);
      }
      _0x587de3["restore"]();
    }
  });

function _0x25810d() {
  _0x25810d["superClass"]["call"](this, _0x3fb3b2);
}
(window["Meerkat"] = _0x25810d), _0x17bf26["setCustomClassForGameObjType"](_0x25810d, _0x3fb3b2, _0x156fde);
var _0x48c344 = _0x3799d1;
(_0x51fd3e["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x51fd3e["prototype"]["constructor"] = _0x51fd3e),
  (_0x51fd3e["superClass"] = _0x48c344),
  (_0x51fd3e["prototype"]["animalInfo"] = function () {
    var _0x13f378 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x13f378["aniName"] = "Fennec Fox";
        break;
      case 0xca:
        switch (this["animalSubSpecies"]) {
          case 0x0:
            _0x13f378["aniName"] = "Fire Fox";
            break;
          case 0x1:
            _0x13f378["aniName"] = "Purple Fire Fox";
        }
        break;
    }
    return (
      (_0x13f378["aniCol"] = "#FF9000"),
      (_0x13f378["skinName"] = this["getSkinName"]()),
      (_0x13f378["upgradeText"] =
        "UPGRADED to " + _0x13f378["aniName"] + "!\x0aFennec Fox has very sharp ears (can see animals in hiding holes).\x0a Press W to Whine!"),
      _0x13f378
    );
  }),
  (_0x51fd3e["prototype"]["getSkinPath"] = function (_0x406081) {
    return "desert/fennecfox/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x51fd3e["prototype"]["getSkinName"] = function () {
    var _0x39291b = this["getSkinPath"]() + "/fennecfox";
    return (_0x39291b += this["specType"] == 0x0 ? "" : this["specType"]), _0x39291b;
  }),
  (_0x51fd3e["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return this["animalSpecies"] === 0xca ? "/" + this["animalSubSpecies"] : "";
  }),
  (_0x51fd3e["prototype"]["flapStart"] = 0x0),
  (_0x51fd3e["prototype"]["drawSkinCustomization"] = function () {
    if (!this["flag_usingAbility"]) {
      this["flapStart"] = 0x0;
      return;
    } else this["flapStart"] == 0x0 && (this["flapStart"] = _0x168a54);
    this["setSkinScale"]();
    var _0x15f960 = 0.5,
      _0x20923f = !(_0x57ae6d == 0x2) ? _0x38b128("fennecfox", this["spawnTime"]) : 0x2;
    _0x20923f = Math["abs"](Math["round"](_0x20923f));
    var _0x10a896 = "skins/" + this["getSkinPath"]() + "/ears" + _0x20923f + ".png",
      _0x4795d9 = this["getSkinImageObj"](_0x10a896);
    if (_0x4795d9) {
      var _0x217fc2 = this["skinScale"],
        _0x2d5110 = this["skinRad"];
      _0x587de3["drawImage"](_0x4795d9, -_0x2d5110 * _0x217fc2, -_0x2d5110 * _0x217fc2, 0x2 * _0x2d5110 * _0x217fc2, 0x2 * _0x2d5110 * _0x217fc2);
    }
  });

function _0x51fd3e() {
  _0x51fd3e["superClass"]["call"](this, _0x3fb3b2);
}
(window["FennecFox"] = _0x51fd3e), _0x17bf26["setCustomClassForGameObjType"](_0x51fd3e, _0x3fb3b2, _0xe68f0);
var _0x48c344 = _0x3799d1;
(_0x5d70ba["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x5d70ba["prototype"]["constructor"] = _0x5d70ba),
  (_0x5d70ba["superClass"] = _0x48c344),
  (_0x5d70ba["prototype"]["animalInfo"] = function () {
    var _0x44b312 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x44b312["aniName"] = "Gobi Bear";
        break;
      case 0xca:
        _0x44b312["aniName"] = "Gobee Bear";
        break;
    }
    return (
      (_0x44b312["aniCol"] = "#FF9000"),
      (_0x44b312["skinName"] = this["getSkinName"]()),
      (_0x44b312["upgradeText"] = "UPGRADED to " + _0x44b312["aniName"] + "!\x0a"),
      _0x44b312
    );
  }),
  (_0x5d70ba["prototype"]["getSkinName"] = function () {
    return this["getSkinPath"]() + "/gobibear" + (this["flag_usingAbility"] ? "1" : "");
  }),
  (_0x5d70ba["prototype"]["getSkinPath"] = function () {
    return "desert/gobibear/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x5d70ba["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x5d70ba["prototype"]["biteStart"] = 0x0),
  (_0x5d70ba["prototype"]["drawSkinCustomization"] = function () {
    if (!this["flag_usingAbility"]) {
      this["biteStart"] = 0x0;
      return;
    } else {
      this["biteStart"] == 0x0 && (this["biteStart"] = _0x168a54);
      if (_0x168a54 - this["biteStart"] < 0x190) {
        if (this["specType"] != 0x0 && this["specType"] != undefined) {
          var _0x8917ce = this["getSkinImageObj"]("skins/" + this["getSkinPath"]() + "/gobibear_head1.png"),
            _0x52a199 = (_0x168a54 - this["biteStart"]) / 0x3e8,
            _0x565734 = this["skinScale"] * 1.1,
            _0x558fd = this["skinRad"];
          if (_0x8917ce) {
            frame = 0x0;
            !this["flag_flying"] &&
              ((flapAmount = 0x3),
              (flapDur = 0.5),
              (frame = !(_0x57ae6d == 0x2) ? _0x120bbb(_0x52a199, flapDur, flapAmount, 0x2) : this["birdNoAnimationFlyWingAngle"]));
            _0x587de3["save"]();
            var _0x558fd = this["rad"];
            _0x587de3["drawImage"](
              _0x8917ce,
              -_0x558fd * _0x565734,
              (-_0x558fd + _0x558fd * 0.1) * _0x565734 + frame,
              0x2 * _0x558fd * _0x565734,
              0x2 * _0x558fd * _0x565734
            ),
              _0x587de3["restore"]();
          }
        }
      }
    }
  });

function _0x5d70ba() {
  _0x5d70ba["superClass"]["call"](this, _0x3fb3b2);
}
(window["GobiBear"] = _0x5d70ba), _0x17bf26["setCustomClassForGameObjType"](_0x5d70ba, _0x3fb3b2, _0x3297a2);
var _0x48c344 = _0x3799d1;
(_0x7d8920["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x7d8920["prototype"]["constructor"] = _0x7d8920),
  (_0x7d8920["superClass"] = _0x48c344),
  (_0x7d8920["prototype"]["animalInfo"] = function () {
    var _0x26b817 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x26b817["aniName"] = "Camel";
        break;
      case 0x64:
        _0x26b817["aniName"] = "Doomedarius";
        break;
      case 0xc9:
        _0x26b817["aniName"] = "Balloon Warrior";
        break;
      case 0xca:
        _0x26b817["aniName"] = "Fungal Camel";
        break;
    }
    return (
      (_0x26b817["skinName"] = this["getSkinName"]()),
      (_0x26b817["aniCol"] = "#FF9000"),
      (_0x26b817["upgradeText"] = "UPGRADED to " + _0x26b817["aniName"] + "!\x0a Press W to Spit. Try eating oranges from trees!"),
      _0x26b817
    );
  }),
  (_0x7d8920["prototype"]["getSkinName"] = function () {
    let _0x30ace3 = this["getSkinPath"]() + "/camel";
    return (_0x30ace3 += this["specType"] == 0x0 ? "" : this["specType"]), _0x30ace3;
  }),
  (_0x7d8920["prototype"]["getSkinPath"] = function () {
    return "desert/camel/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x7d8920["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x7d8920["prototype"]["getAbilityInfo"] = function (_0x4e2c62) {
    var _0x39312f = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x39312f["abilName"] = "Spit!";
        break;
      case 0x64:
        _0x39312f["abilName"] = "Cannon Shots!";
        break;
      case 0xc9:
        _0x39312f["abilName"] = "Water Balloons!";
        break;
    }
    return (
      (_0x39312f["abilImg"] = "abilities/Spit.svg"),
      (_0x39312f["skinThemeID"] = this["skinThemeID"]),
      (_0x39312f["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x39312f
    );
  }),
  (_0x7d8920["prototype"]["biteStart"] = 0x0),
  (_0x7d8920["prototype"]["flapAmount"] = 0x3),
  (_0x7d8920["prototype"]["flapDur"] = 0x1),
  (_0x7d8920["prototype"]["drawSkinCustomization"] = function () {
    if (!this["flag_usingAbility"]) {
      this["biteStart"] = 0x0;
      return;
    } else {
      this["biteStart"] == 0x0 && (this["biteStart"] = _0x168a54);
      if (this["specType"] != 0x0 && this["specType"] != undefined) {
        var _0x5d6a2a = "skins/" + this["getSkinPath"]() + "/camel_head1.png",
          _0x5e79f4 = this["getSkinImageObj"](_0x5d6a2a),
          _0x267f1e = (_0x168a54 - this["biteStart"]) / 0x3e8,
          _0x18ec75 = this["skinScale"] * 1.1,
          _0x5da3e9 = this["skinRad"];
        if (_0x5e79f4) {
          var _0xb15b70 = 0x0;
          !this["flag_flying"] &&
            (_0xb15b70 = !(_0x57ae6d == 0x2) ? _0x120bbb(_0x267f1e, this["flapDur"], this["flapAmount"], 0x2) : this["flapAmount"]);
          _0x587de3["save"]();
          var _0x5da3e9 = this["rad"];
          _0x587de3["drawImage"](
            _0x5e79f4,
            -_0x5da3e9 * _0x18ec75,
            (-_0x5da3e9 + _0x5da3e9 * 0.1) * _0x18ec75 - _0xb15b70,
            0x2 * _0x5da3e9 * _0x18ec75,
            0x2 * _0x5da3e9 * _0x18ec75
          ),
            _0x587de3["restore"]();
        }
      }
    }
  });

function _0x7d8920() {
  _0x7d8920["superClass"]["call"](this, _0x3fb3b2);
}
(window["Camel"] = _0x7d8920), _0x17bf26["setCustomClassForGameObjType"](_0x7d8920, _0x3fb3b2, _0x353123);
var _0x48c344 = _0x307a43;
(_0x5d652f["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x5d652f["prototype"]["constructor"] = _0x5d652f),
  (_0x5d652f["superClass"] = _0x48c344),
  (_0x5d652f["prototype"]["updateZ"] = function () {
    this["z"] = 0x3ed;
  }),
  (_0x5d652f["prototype"]["customDraw"] = function (_0x2b05a7) {
    var _0x3eeb3f = "";
    if (this["speciesType"] == 0xc9) _0x3eeb3f = "skins/desert/camel/" + this["speciesType"] + "/spit" + this["specType"] + ".png";
    else _0x3eeb3f = "skins/desert/camel/" + this["speciesType"] + "/spit.png";
    var _0x51de7f = this["getSkinImageObj"](_0x3eeb3f);
    if (_0x51de7f) {
      _0x587de3["save"]();
      var _0x2aaf04 = this["rad"] * 0x2;
      _0x587de3["rotate"](this["angle"]),
        _0x587de3["drawImage"](_0x51de7f, -_0x2aaf04, -_0x2aaf04, _0x2aaf04 * 0x2, _0x2aaf04 * 0x2),
        _0x587de3["restore"]();
    }
  }),
  (_0x5d652f["prototype"]["getSkinImageObj"] = function (_0x2cfd13) {
    var _0x139b72 = this["speciesType"] === 0x64 || this["speciesType"] === 0xc9 ? 0x1 : 0x2,
      _0x419a00 = "./assets/s/" + _0x139b72 + "/" + _0x2cfd13;
    return (
      this["skinThemeID"] > 0x0 && (_0x419a00 = "./assets/t/" + this["skinThemeID"] + "/" + _0x2cfd13),
      _0x2d8f34(_0x419a00, function (_0x153399) {
        console["log"](_0x153399["src"]);
      })
    );
  });

function _0x5d652f() {
  _0x5d652f["superClass"]["call"](this, _0x52aef4);
}
(window["CamelSpit"] = _0x5d652f), _0x17bf26["setCustomClassForGameObjType"](_0x5d652f, _0x52aef4);
var _0x48c344 = _0x3799d1;
(_0x983482["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x983482["prototype"]["constructor"] = _0x983482),
  (_0x983482["superClass"] = _0x48c344),
  (_0x983482["prototype"]["animalInfo"] = function () {
    var _0x1e5750 = {};
    _0x1e5750["aniCol"] = "#FF9000";
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x1e5750["aniName"] = "Warthog";
        break;
      case 0x64:
        _0x1e5750["aniName"] = "The Burlone";
        break;
      case 0xc8:
        _0x1e5750["aniName"] = "WarT. Hog";
        break;
      case 0xc9:
        _0x1e5750["aniName"] = "Flame Tiki";
        break;
      case 0xca:
        _0x1e5750["aniName"] = "Dark Matter Warthog";
        break;
      case 0xcc:
        _0x1e5750["aniName"] = "Candy Corn Warthog";
        break;
      case 0xdc:
        _0x1e5750["aniName"] = "Dark Matter Warthog";
        break;
    }
    return (
      (_0x1e5750["skinName"] = this["getSkinName"]()),
      (_0x1e5750["upgradeText"] = "UPGRADED to " + _0x1e5750["aniName"] + "!\x0aPress W to Dig and Charge."),
      _0x1e5750
    );
  }),
  (_0x983482["prototype"]["getSkinName"] = function () {
    let _0x1ad3cc = this["getSkinPath"]() + "/warthog";
    return (_0x1ad3cc += this["specType"] == 0x0 ? "" : this["specType"]), _0x1ad3cc;
  }),
  (_0x983482["prototype"]["getSkinPath"] = function () {
    return "desert/warthog/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x983482["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x983482["prototype"]["flapStart"] = 0x0),
  (_0x983482["prototype"]["drawUnderSkinImgOutline"] = function () {
    console["log"](this["teamID"]), _0x983482["superClass"]["prototype"]["drawUnderSkinImgOutline"]["call"](this);
    if (this["flag_usingAbility"] && !this["isCharging"]) {
      var _0x455e13 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
        _0x2eb7ab = 1.5,
        _0x4c5beb = 0x1,
        _0xf0403f = _0x4c5beb * Math["sin"](((0x2 * Math["PI"]) / _0x2eb7ab) * _0x455e13);
      _0x587de3["save"](),
        (_0x587de3["globalAlpha"] *= 0.8 - 0.2 * _0xf0403f),
        _0x440ef0(0x0, this["rad"] * 0.3, this["rad"] * (0.9 + 0.12 * _0xf0403f), "#b69327"),
        _0x440ef0(0x0, -this["rad"] * 0.2, this["rad"] * (0.9 + 0.09 * _0xf0403f), "#b69327"),
        _0x587de3["restore"]();
    }
  }),
  (_0x983482["prototype"]["drawUnderSkinImg"] = function () {
    if (!this["flag_usingAbility"]) {
      this["flapStart"] = 0x0;
      return;
    } else this["flapStart"] == 0x0 && (this["flapStart"] = _0x168a54);
    if (this["flag_usingAbility"] && !this["isCharging"]) {
      var _0x506551 = this["rad"] - this["outlineW"],
        _0x2a87e5 = 0x1f4 / 0x154;
      this["setSkinScale"]();
      var _0x3f2e3b = 0.8,
        _0x194644 = (_0x168a54 - this["flapStart"]) / 0x3e8,
        _0x2867ab = !(_0x57ae6d == 0x2) ? _0x120bbb(_0x194644, _0x3f2e3b, 0x1, 0x1) : 0x0;
      _0x2867ab = Math["round"](_0x2867ab);
      if (_0x2867ab < 0x0) _0x2867ab = 0x0;
      var _0x4ed8bf = "skins/" + this["getSkinPath"]() + "/leg" + _0x2867ab + ".png",
        _0x585233 = this["getSkinImageObj"](_0x4ed8bf);
      if (_0x585233) {
        var _0x2a87e5 = this["skinScale"],
          _0x506551 = this["skinRad"];
        _0x587de3["drawImage"](_0x585233, -_0x506551 * _0x2a87e5, -_0x506551 * _0x2a87e5, 0x2 * _0x506551 * _0x2a87e5, 0x2 * _0x506551 * _0x2a87e5);
      }
    }
  }),
  (_0x983482["prototype"]["getAbilityInfo"] = function (_0x35713d) {
    var _0x1b9364 = {};
    return (
      (_0x1b9364["abilName"] = "Dig Food\x0aSudden Charge"),
      (_0x1b9364["abilImg"] = "abilities/Dig.svg"),
      (_0x1b9364["skinThemeID"] = this["skinThemeID"]),
      (_0x1b9364["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x1b9364
    );
  }),
  (_0x983482["prototype"]["isCharging"] = ![]),
  (_0x983482["prototype"]["readCustomData_onNewlyVisible"] = function (_0x4a65c9) {
    _0x983482["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x4a65c9),
      this["customUpdatedProperty"](_0xe5ad06, _0x4a65c9);
  }),
  (_0x983482["prototype"]["customUpdatedProperty"] = function (_0x27be9a, _0x27f2b1) {
    _0x27be9a == _0xe5ad06 && (this["isCharging"] = _0x27f2b1["readUInt8"]() == 0x1);
  });

function _0x983482() {
  _0x983482["superClass"]["call"](this, _0x3fb3b2);
}
(window["Warthog"] = _0x983482), _0x17bf26["setCustomClassForGameObjType"](_0x983482, _0x3fb3b2, _0x1b8b5e);
var _0x48c344 = _0x3799d1;
(_0x381922["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x381922["prototype"]["constructor"] = _0x381922),
  (_0x381922["superClass"] = _0x48c344),
  (_0x381922["prototype"]["animalInfo"] = function () {
    var _0x43b078 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x43b078["aniName"] = "Hyena";
        break;
      case 0xc9:
        _0x43b078["aniName"] = "DJ Hyena";
        break;
      case 0xca:
        _0x43b078["aniName"] = "Anubis Hyena";
        break;
    }
    return (
      (_0x43b078["aniCol"] = "#FF9000"),
      (_0x43b078["skinName"] = this["getSkinName"]()),
      (_0x43b078["upgradeText"] = "UPGRADED to " + _0x43b078["aniName"] + "!\x0aHyenas have a very loud and scary laugh!\x0aPress W to Laugh."),
      _0x43b078
    );
  }),
  (_0x381922["prototype"]["getSkinName"] = function () {
    return this["getSkinPath"]() + "/hyena" + (this["specType"] == 0x0 ? "" : this["specType"]);
  }),
  (_0x381922["prototype"]["getSkinPath"] = function () {
    return "desert/hyena/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x381922["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x381922["prototype"]["biteStart"] = 0x0),
  (_0x381922["prototype"]["flapAmount"] = 0x3),
  (_0x381922["prototype"]["flapDur"] = 0x1),
  (_0x381922["prototype"]["drawSkinCustomization"] = function () {
    if (!this["flag_usingAbility"]) {
      this["biteStart"] = 0x0;
      return;
    } else {
      this["biteStart"] == 0x0 && (this["biteStart"] = _0x168a54);
      if (this["specType"] != 0x0 && this["specType"] != undefined) {
        var _0x5154a3 = this["getSkinImageObj"]("skins/" + this["getSkinPath"]() + "/hyena_head.png"),
          _0x5303f9 = (_0x168a54 - this["biteStart"]) / 0x3e8,
          _0x3908eb = this["skinScale"] * 1.1,
          _0x14e18b = this["skinRad"];
        if (_0x5154a3) {
          frame = 0x0;
          !this["flag_flying"] && (frame = !(_0x57ae6d == 0x2) ? _0x120bbb(_0x5303f9, this["flapDur"], this["flapAmount"], 0x2) : this["flapAmount"]);
          _0x587de3["save"]();
          var _0x14e18b = this["rad"];
          _0x587de3["drawImage"](
            _0x5154a3,
            -_0x14e18b * _0x3908eb,
            (-_0x14e18b + _0x14e18b * 0.1) * _0x3908eb + frame,
            0x2 * _0x14e18b * _0x3908eb,
            0x2 * _0x14e18b * _0x3908eb
          ),
            _0x587de3["restore"]();
        }
      }
    }
  }),
  (_0x381922["prototype"]["getAbilityInfo"] = function (_0x1b3838) {
    var _0x38e9c0 = {};
    return (
      (_0x38e9c0["abilName"] = "Laughs!"),
      (_0x38e9c0["abilImg"] = "abilities/Laugh.svg"),
      (_0x38e9c0["skinThemeID"] = this["skinThemeID"]),
      (_0x38e9c0["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x38e9c0
    );
  }),
  (_0x381922["prototype"]["getSkinImageObj"] = function (_0x32d21a) {
    var _0x53ed87 = this["animalSpecies"] === 0xc9 ? 0x1 : this["mopeSeasonID"];
    return this["getSkinImageObjForSeason"](_0x32d21a, _0x53ed87);
  });

function _0x381922() {
  _0x381922["superClass"]["call"](this, _0x3fb3b2);
}
(window["Hyena"] = _0x381922), _0x17bf26["setCustomClassForGameObjType"](_0x381922, _0x3fb3b2, _0x55bfef);
var _0x1d83bb = _0x1ee5c3,
  _0x48c344 = _0xe4ec38;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344),
  (_0x1ee5c3["prototype"]["updateZ"] = function () {
    this["z"] = 0x186a2;
  }),
  (_0x1ee5c3["prototype"]["customDraw"] = function (_0x538d16) {
    _0x587de3["save"]();
    var _0x40d5b1 = this["getSkinImageObj"]("skins/desert/hyena/" + this["speciesType"] + "/laugh.png");
    if (_0x40d5b1) {
      var _0x399834 = _0x168a54 - this["spawnTime"],
        _0x204393 = _0x399834 / 0x3e8,
        _0x40fce3 = 0x2,
        _0x48aa8a = 1.5;
      rShift = _0x48aa8a * Math["sin"](((0x2 * Math["PI"]) / _0x40fce3) * _0x204393);
      var _0x3d576c = _0x120bbb(_0x204393, 5.1, 0x1, 0x1);
      (_0x3d576c = _0x549f3d(_0x3d576c, 0x0, 0x1)), (_0x587de3["globalAlpha"] = _0x3d576c);
      var _0x24cf2c = 0x1,
        _0x4db13f = this["rad"];
      _0x587de3["rotate"](this["angle"] + _0x3d960f(-0x5a)),
        _0x587de3["drawImage"](_0x40d5b1, -_0x4db13f * _0x24cf2c, -_0x4db13f * _0x24cf2c, 0x2 * _0x4db13f * _0x24cf2c, 0x2 * _0x4db13f * _0x24cf2c);
    }
    _0x587de3["restore"](), this["drawChat"]();
  }),
  (_0x1ee5c3["prototype"]["drawChat"] = function () {
    if (this["aLine"] == null) return;
    _0x587de3["save"](),
      (_0x587de3["font"] = "10px Arial"),
      (_0x587de3["lineWidth"] = 0x1),
      (_0x587de3["textAlign"] = "center"),
      (_0x587de3["textBaseline"] = "middle");
    var _0x4a4a9a = this["aLine"],
      _0x3ca3a8 = _0x168a54 > _0x4a4a9a["chatFadeT"] ? 0x0 : 0x1;
    (_0x4a4a9a["chatA"] += (_0x3ca3a8 - _0x4a4a9a["chatA"]) * 0.1), (_0x587de3["shadowOffsetX"] = 0x0), (_0x587de3["shadowOffsetY"] = 0x0);
    _0x4a4a9a["chatA"] < 0.02 && (this["aLine"] = null);
    var _0x437fdc = _0x587de3["measureText"](_0x4a4a9a["chatTxt"])["width"],
      _0x5da24f = 0xa,
      _0x45c5e8 = 0x1,
      _0x5c4be2 = 0x1;
    (_0x587de3["globalAlpha"] = 0.8 * _0x4a4a9a["chatA"]),
      (_0x587de3["fillStyle"] = _0x7a849(this["curBiome"])),
      _0x587de3["fillRect"](
        this["x"] - _0x45c5e8 - _0x437fdc / 0x2,
        this["y"] - this["rad"] - _0x5da24f / 0x2 - _0x5c4be2,
        _0x437fdc + _0x45c5e8 * 0x2,
        _0x5da24f + _0x5c4be2 * 0x2
      ),
      (_0x587de3["fillStyle"] = "#F1C34C"),
      !(_0x57ae6d == 0x2) && ((_0x587de3["shadowOffsetX"] = 0x1), (_0x587de3["shadowOffsetY"] = 0x1), (_0x587de3["shadowColor"] = "black")),
      (_0x587de3["globalAlpha"] = _0x4a4a9a["chatA"]),
      _0x587de3["fillText"](_0x4a4a9a["chatTxt"], this["x"], this["y"] - this["rad"]),
      _0x587de3["restore"]();
  });

function _0x1ee5c3() {
  _0x1ee5c3["superClass"]["call"](this);
}
(_0x1ee5c3["prototype"]["aLine"] = null),
  (_0x1ee5c3["prototype"]["readCustomData_onNewlyVisible"] = function (_0x35bc97) {
    _0x1ee5c3["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x35bc97),
      (this["aLine"] = {
        chatTxt: this["speciesType"] == 0xc9 ? "Oh yeah!" : "Hehehe",
        chatFadeT: _0x168a54 + 0xfa0,
        chatA: 0x0,
      });
  }),
  (_0x1ee5c3["prototype"]["getSkinImageObj"] = function (_0x1bc655) {
    var _0x11e54a = this["speciesType"] === 0xc9 ? 0x1 : this["mopeSeasonID"];
    return this["getSkinImageObjForSeason"](_0x1bc655, _0x11e54a);
  }),
  (window["HyenaLaugh"] = _0x1ee5c3),
  _0x17bf26["setCustomClassForGameObjType"](_0x1ee5c3, _0x5aa814, _0x303732);
var _0x48c344 = _0x3799d1;
(_0x57caf5["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x57caf5["prototype"]["constructor"] = _0x57caf5),
  (_0x57caf5["superClass"] = _0x48c344),
  (_0x57caf5["prototype"]["animalInfo"] = function () {
    var _0x3512c1 = {};
    _0x3512c1["aniCol"] = "#FF9000";
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x3512c1["aniName"] = "Rattle Snake";
        break;
      case 0x64:
        _0x3512c1["aniName"] = "Gummy Viper";
        break;
    }
    return (
      (_0x3512c1["upgradeText"] =
        "UPGRADED to " + _0x3512c1["aniName"] + "!\x0aThe " + _0x3512c1["aniName"] + " is a very dangerous animal. \x0aHOLD W to Rattle."),
      (_0x3512c1["skinName"] = this["getSkinName"]()),
      _0x3512c1
    );
  }),
  (_0x57caf5["prototype"]["getSkinName"] = function () {
    return this["getSkinPath"]() + "/rattlesnake" + (this["specType"] == 0x0 ? "" : this["specType"]);
  }),
  (_0x57caf5["prototype"]["getSkinPath"] = function () {
    return "desert/rattlesnake/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x57caf5["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x57caf5["prototype"]["biteStart"] = 0x0),
  (_0x57caf5["prototype"]["drawUnderSkinImg"] = function () {
    if (!this["flag_usingAbility"]) {
      var _0x46a8a5 = this["rad"] - this["outlineW"],
        _0x24941f = 0x1f4 / 0x154,
        _0x5d3b0d = this["getSkinImageObj"]("skins/" + this["getSkinPath"]() + "/tongue.png"),
        _0xa398a = (_0x168a54 - this["spawnTime"]) / 0x3e8,
        _0x405f65 = _0x57ae6d == 0x2 ? 0x0 : _0x120bbb(_0xa398a, 0.7, 0x6, 0.5),
        _0x3d6a13 = _0x57ae6d == 0x2 ? 0x0 : 0x5;
      _0x5d3b0d &&
        _0x587de3["drawImage"](
          _0x5d3b0d,
          -_0x46a8a5 * _0x24941f,
          -(_0x46a8a5 + _0x3d6a13 + _0x405f65) * _0x24941f,
          0x2 * _0x46a8a5 * _0x24941f,
          0x2 * _0x46a8a5 * _0x24941f
        );
    }
  }),
  (_0x57caf5["prototype"]["drawSkinCustomization"] = function () {
    if (!this["flag_usingAbility"]) {
      this["biteStart"] = 0x0;
      return;
    } else {
      this["biteStart"] == 0x0 && (this["biteStart"] = _0x168a54);
      if (this["specType"] != 0x0 && this["specType"] != undefined) {
        var _0x5b3a20 = this["getSkinImageObj"]("skins/" + this["getSkinPath"]() + "/rattlesnake_head.png"),
          _0x4c416e = this["skinScale"] * 0x1,
          _0x1c6025 = this["skinRad"];
        if (_0x5b3a20) {
          _0x587de3["save"]();
          var _0x1c6025 = this["rad"];
          _0x587de3["drawImage"](
            _0x5b3a20,
            -_0x1c6025 * _0x4c416e,
            -_0x1c6025 * 1.2 * _0x4c416e,
            0x2 * _0x1c6025 * _0x4c416e,
            0x2 * _0x1c6025 * _0x4c416e
          ),
            _0x587de3["restore"]();
        }
      }
      var _0x540831 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
        _0x5dbbbc = !(_0x57ae6d == 0x2) ? _0x120bbb(_0x540831, 0.1, 0.2, 0x2) : 0x0,
        _0x1c6025 = this["rad"] * 1.3,
        _0x3e7367 = 0x0,
        _0x5d5f39 = 0x0,
        _0x35bf0c = 0x0,
        _0x4a0a8d = this["getSkinImageObj"]("skins/" + this["getSkinPath"]() + "/rattle.png");
      if (_0x4a0a8d) {
        _0x587de3["save"]();
        var _0x10bacf = -(-_0x5d5f39 + _0x5dbbbc) * _0x3d960f(-(_0x3e7367 - 0x5)),
          _0x4c416e = this["skinScale"] * 1.2;
        _0x587de3["rotate"](_0x3d960f(-_0x35bf0c) + _0x10bacf),
          _0x587de3["drawImage"](
            _0x4a0a8d,
            -_0x1c6025 * _0x4c416e,
            -_0x1c6025 * 0.7 * _0x4c416e,
            0x2 * _0x1c6025 * _0x4c416e,
            0x2 * _0x1c6025 * _0x4c416e
          ),
          _0x587de3["restore"]();
      }
    }
  }),
  (_0x57caf5["prototype"]["getAbilityInfo"] = function (_0x125bdf) {
    var _0x3417dd = {};
    return (
      (_0x3417dd["abilName"] = "Rattle!"),
      (_0x3417dd["abilImg"] = "abilities/Rattle.svg"),
      (_0x3417dd["skinThemeID"] = this["skinThemeID"]),
      (_0x3417dd["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x3417dd
    );
  });

function _0x57caf5() {
  _0x57caf5["superClass"]["call"](this, _0x3fb3b2);
}
(window["RattleSnake"] = _0x57caf5), _0x17bf26["setCustomClassForGameObjType"](_0x57caf5, _0x3fb3b2, _0x4310c7);
var _0x1d83bb = _0x270a4f,
  _0x48c344 = _0xe4ec38;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344),
  (_0x270a4f["prototype"]["updateZ"] = function () {
    this["z"] = 0x186a2;
  }),
  (_0x270a4f["prototype"]["customDraw"] = function (_0x5407b0) {
    _0x587de3["save"]();
    var _0x376a69 = this["getSkinImageObj"]("skins/desert/rattlesnake/" + this["speciesType"] + "/circle.png");
    if (_0x376a69) {
      var _0x5443e1 = _0x168a54 - this["spawnTime"],
        _0x2cf5d8 = _0x5443e1 / 0x3e8,
        _0xfdab4c = 0x2,
        _0x5414f7 = 1.5;
      rShift = _0x5414f7 * Math["sin"](((0x2 * Math["PI"]) / _0xfdab4c) * _0x2cf5d8);
      var _0x4ca0d8 = _0x120bbb(_0x2cf5d8, 5.1, 0x1, 0x1);
      (_0x4ca0d8 = _0x549f3d(_0x4ca0d8, 0x0, 0x1)), (_0x587de3["globalAlpha"] = _0x4ca0d8);
      var _0x26b117 = 0x1,
        _0x5a6b0e = this["rad"] * 0.8;
      _0x587de3["drawImage"](_0x376a69, -_0x5a6b0e * _0x26b117, -_0x5a6b0e * _0x26b117, 0x2 * _0x5a6b0e * _0x26b117, 0x2 * _0x5a6b0e * _0x26b117);
    }
    _0x587de3["restore"]();
  }),
  (_0x270a4f["prototype"]["getSkinImageObj"] = function (_0x1f7ee3) {
    var _0x110577 = this["speciesType"] === 0x64 ? 0x1 : this["mopeSeasonID"],
      _0x3576d2 = "./assets/s/" + _0x110577 + "/" + _0x1f7ee3;
    return (
      this["skinThemeID"] > 0x0 && (_0x3576d2 = "./assets/t/" + this["skinThemeID"] + "/" + _0x1f7ee3),
      _0x2d8f34(_0x3576d2, function (_0x2fe705) {
        console["log"](_0x2fe705["src"]);
      })
    );
  });

function _0x270a4f() {
  _0x270a4f["superClass"]["call"](this);
}
(window["SnakeRattle"] = _0x270a4f), _0x17bf26["setCustomClassForGameObjType"](_0x270a4f, _0x5aa814, _0x26f45c);
var _0x5246cb = _0x5246cb,
  _0x48c344 = _0x3799d1;
(_0x5246cb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x5246cb["prototype"]["constructor"] = _0x5246cb),
  (_0x5246cb["superClass"] = _0x48c344),
  (_0x5246cb["prototype"]["getSkinName2"] = function () {
    var _0x26390c = this["getSkinPath"]() + "/vulture";
    return _0x26390c;
  }),
  (_0x5246cb["prototype"]["getSkinName"] = function () {
    let _0x209b8b = this["getSkinPath"]() + "/vulture";
    if (this["flag_flying"] && this["flag_usingAbility"]) _0x209b8b += 0x2;
    else _0x209b8b += this["specType"] == 0x0 ? "" : this["specType"];
    return _0x209b8b;
  }),
  (_0x5246cb["prototype"]["getSkinPath"] = function () {
    return "desert/vulture/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x5246cb["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x5246cb["prototype"]["getAbilityInfo"] = function (_0xdcebc8) {
    var _0x1e7187 = {};
    return (
      (_0x1e7187["abilName"] = "Fly/ Pickup Bones"),
      (_0x1e7187["abilImg"] = "abilities/Fly.svg"),
      (_0x1e7187["skinThemeID"] = this["skinThemeID"]),
      (_0x1e7187["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x1e7187
    );
  }),
  (_0x5246cb["prototype"]["animalInfo"] = function () {
    var _0x107294 = {};
    _0x107294["aniName"] = "Vulture";
    switch (this["animalSpecies"]) {
      case 0x1:
        _0x107294["aniName"] = "Pakistan Vulture";
        break;
      case 0x64:
        _0x107294["aniName"] = "Vulgeist";
        break;
      case 0xcc:
        _0x107294["aniName"] = "Acid Husk";
        break;
    }
    return (
      (_0x107294["aniCol"] = "#FF9000"),
      (_0x107294["skinName"] = this["getSkinName"]()),
      (_0x107294["upgradeText"] =
        "UPGRADED to " +
        (this["animalSpecies"] == 0x1 ? "Rare " : "") +
        _0x107294["aniName"] +
        "!\x0aPress W to Grab/Drop bones" +
        (this["animalSpecies"] == 0x1 ? " and animals" : "") +
        " on other animals,\x0a (Hint: Use ability on hills to fly) \x0aTry Eating bones too!"),
      _0x107294
    );
  }),
  (_0x5246cb["prototype"]["getHead"] = function (_0x294a27, _0x403221) {
    var _0x483417 = this["flag_flying"] ? "1" : "1",
      _0x88a639 = "skins/" + this["getSkinName2"]() + "_head" + _0x483417 + ".png";
    return _0x88a639;
  }),
  (_0x5246cb["prototype"]["getWing"] = function (_0x5722a5, _0x364f0a, _0x57b43b) {
    var _0x41bab2 = "skins/" + this["getSkinName2"]() + "_wing" + _0x364f0a + ".png";
    return _0x41bab2;
  }),
  (_0x5246cb["prototype"]["flaps"] = 0x0),
  (_0x5246cb["prototype"]["flapsMod"] = 0x3),
  (_0x5246cb["prototype"]["countFlap"] = !![]),
  (_0x5246cb["prototype"]["canFlap"] = !(_0x57ae6d == 0x2)),
  (_0x5246cb["prototype"]["resumeFlapT"] = 0x0),
  (_0x5246cb["prototype"]["lastFlapFrame"] = 0x0),
  (_0x5246cb["prototype"]["sF"] = -0x1),
  (_0x5246cb["prototype"]["wF"] = 0x1),
  (_0x5246cb["prototype"]["drawSkinCustomization"] = function () {
    if (!this["flag_usingAbility"]) return;
    var _0x32d110 = "skins";
    if (!_0x34fedb && !(_0x57ae6d == 0x2)) {
      if (!this["canFlap"] && this["flag_flying"] && _0x168a54 > this["resumeFlapT"]) this["canFlap"] = !![];
    } else this["canFlap"] = ![];
    {
      var _0x17a374 = 0x1f4 / 0x154;
      _0x587de3["save"]();
      var _0x25e269 = this["flag_flying"] ? 0x2d : 0x2f,
        _0x411219 = this["flag_flying"] ? 0x5a : 0x2d,
        _0x31b199 = this["flag_flying"] ? 0.2 : 0.001,
        _0x57aed2 = this["flag_flying"] ? 2.5 : 2.3,
        _0x201d12 = this["flag_flying"] ? 2.2 : 2.7,
        _0x167c43 = this["flag_flying"] ? 1.2 : 0x1,
        _0x4c1496 = this["flag_flying"] ? 0.35 : 0.2,
        _0x4e4087 = this["flag_flying"] ? "" : "2",
        _0x320b63 = (_0x168a54 - this["resumeFlapT"]) / 0x3e8,
        _0x5386bd = this["canFlap"] ? _0x120bbb(_0x320b63, _0x167c43, _0x4c1496, 0x2) : this["birdNoAnimationFlyWingAngle"];
      if (this["flag_flying"] && _0x5386bd < 0x0 && this["countFlap"])
        (this["countFlap"] = ![]),
          this["flaps"]++,
          this["flaps"] % this["flapsMod"] == 0x0 &&
            ((this["lastFlapFrame"] = _0x5386bd), (this["canFlap"] = ![]), (this["resumeFlapT"] = +new Date() + 0x5dc));
      else _0x5386bd > 0x0 && !this["countFlap"] && (this["countFlap"] = !![]);
      if (!this["canFlap"]) _0x5386bd = this["lastFlapFrame"];
      (_0x57aed2 += this["sF"] * _0x5386bd), (_0x201d12 += this["wF"] * _0x5386bd);
      var _0x298dd0 = this["getSkinImageObj"](this["getWing"]("vulture", _0x4e4087 + 0x1, ![]));
      if (_0x298dd0) {
        _0x587de3["save"]();
        var _0x24c3ed = 0x1;
        _0x24c3ed = -(-_0x31b199 + _0x5386bd);
        var _0x33d515 = _0x24c3ed * _0x3d960f(_0x411219),
          _0x5a7a80 = this["rad"] * 0.8;
        _0x587de3["rotate"](_0x3d960f(_0x25e269) + _0x33d515);
        var _0x29f009 = 0x0,
          _0x1d7209 = this["rad"],
          _0x952625 = _0x5a7a80 * _0x201d12 * 0.62,
          _0x101975 = _0x5a7a80 * _0x57aed2,
          _0x2286ab = 0.2,
          _0x1da6e4 = 1.7;
        _0x587de3["drawImage"](_0x298dd0, _0x29f009 + _0x952625 * -_0x2286ab, _0x1d7209 + _0x101975 * -_0x1da6e4, _0x952625, _0x101975),
          _0x587de3["restore"]();
      }
      var _0x298dd0 = this["getSkinImageObj"](this["getWing"]("vulture", _0x4e4087 + 0x2, ![]));
      if (_0x298dd0) {
        _0x587de3["save"]();
        var _0x24c3ed = 0x1;
        _0x24c3ed = -(-_0x31b199 + _0x5386bd);
        var _0x33d515 = _0x24c3ed * _0x3d960f(-_0x411219),
          _0x5a7a80 = this["rad"] * 0.8;
        _0x587de3["rotate"](_0x3d960f(-_0x25e269) + _0x33d515);
        var _0x29f009 = 0x0,
          _0x1d7209 = this["rad"],
          _0x952625 = _0x5a7a80 * _0x201d12 * 0.62,
          _0x101975 = _0x5a7a80 * _0x57aed2,
          _0x2286ab = 0.8,
          _0x1da6e4 = 1.7;
        _0x587de3["drawImage"](_0x298dd0, _0x29f009 + _0x952625 * -_0x2286ab, _0x1d7209 + _0x101975 * -_0x1da6e4, _0x952625, _0x101975),
          _0x587de3["restore"]();
      }
      _0x587de3["restore"]();
      if (this["specType"] != 0x0 && this["specType"] != undefined) {
        var _0x2c5309 = this["getSkinImageObj"](this["getHead"]("vulture", ![]));
        if (_0x2c5309) {
          var _0x5a7a80 = this["rad"],
            _0x512fbe = 0x0;
          if (this["flag_flying"]) _0x512fbe = (-_0x5a7a80 + _0x5a7a80 * 0.4) * _0x17a374;
          else _0x512fbe = (-_0x5a7a80 + _0x5a7a80 * 0.1) * _0x17a374;
          _0x587de3["save"](),
            _0x587de3["drawImage"](_0x2c5309, -_0x5a7a80 * _0x17a374, _0x512fbe, 0x2 * _0x5a7a80 * _0x17a374, 0x2 * _0x5a7a80 * _0x17a374),
            _0x587de3["restore"]();
        }
      }
    }
  });

function _0x5246cb() {
  _0x5246cb["superClass"]["call"](this, _0x3fb3b2);
  if (this["resumeFlapT"] == 0x0) this["resumeFlapT"] = +new Date();
}
(window["Vulture"] = _0x5246cb), _0x17bf26["setCustomClassForGameObjType"](_0x5246cb, _0x3fb3b2, _0x2e86d6);
var _0x48c344 = _0x307a43;
(_0x30c331["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x30c331["prototype"]["constructor"] = _0x30c331),
  (_0x30c331["superClass"] = _0x48c344),
  (_0x30c331["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"];
  }),
  (_0x30c331["prototype"]["customDraw"] = function (_0x5b26d5) {
    var _0x3b342d = "gameobj/" + this["oType"] + "/" + this["oType"] + ".png",
      _0x3132a0 = this["getSkinImageObj"](_0x3b342d);
    if (_0x3132a0) {
      _0x587de3["save"]();
      var _0xba0161 = this["rad"] * 0x1;
      _0x587de3["rotate"](this["rPer"] * 0x2 * Math["PI"]),
        _0x587de3["drawImage"](_0x3132a0, -_0xba0161, -_0xba0161, _0xba0161 * 0x2, _0xba0161 * 0x2),
        _0x587de3["restore"]();
    }
  });

function _0x30c331() {
  _0x30c331["superClass"]["call"](this, _0xb80ae0);
}
(window["Bone"] = _0x30c331), _0x17bf26["setCustomClassForGameObjType"](_0x30c331, _0xb80ae0);
var _0x48c344 = _0x3799d1;
(_0x214a3d["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x214a3d["prototype"]["constructor"] = _0x214a3d),
  (_0x214a3d["superClass"] = _0x48c344),
  (_0x214a3d["prototype"]["animalInfo"] = function () {
    var _0x7a2f4c = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x7a2f4c["aniName"] = "Bison";
        break;
      case 0xc8:
        _0x7a2f4c["aniName"] = "Titan Bison";
        break;
      case 0xca:
        _0x7a2f4c["aniName"] = "Minotaur";
        break;
    }
    return (
      (_0x7a2f4c["aniCol"] = "#FF9000"),
      (_0x7a2f4c["skinName"] = this["getSkinName"]()),
      (_0x7a2f4c["upgradeText"] = "UPGRADED to " + _0x7a2f4c["aniName"] + "!\x0aHold W to charge and toss opponent in air."),
      _0x7a2f4c
    );
  }),
  (_0x214a3d["prototype"]["getSpeciesPath"] = function (_0x38955b) {
    return "desert/" + _0x38955b + "/" + this["animalSpecies"];
  }),
  (_0x214a3d["prototype"]["getAbilityInfo"] = function (_0x3888e6) {
    var _0x56a7a4 = {};
    return (
      (_0x56a7a4["abilName"] = "Gores!"),
      (_0x56a7a4["abilImg"] = "abilities/Gore.svg"),
      (_0x56a7a4["skinThemeID"] = this["skinThemeID"]),
      (_0x56a7a4["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x56a7a4
    );
  }),
  (_0x214a3d["prototype"]["getSkinName"] = function () {
    return this["getSkin"]() + "/bison" + (this["specType"] == 0x0 ? "" : 0x1);
  }),
  (_0x214a3d["prototype"]["getSkin"] = function () {
    return "desert/bison/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x214a3d["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x214a3d["prototype"]["drawUnderSkinImgOutline"] = function () {
    _0x214a3d["superClass"]["prototype"]["drawUnderSkinImgOutline"]["call"](this),
      this["flag_usingAbility"] && this["isHitingAnimal"] && this["showBackLeg"]();
  }),
  (_0x214a3d["prototype"]["isHitingAnimal"] = ![]),
  (_0x214a3d["prototype"]["drawSkinCustomization"] = function () {
    if (this["flag_usingAbility"]) {
      if (this["specType"] != 0x0 && this["specType"] != undefined) {
        if (!this["isHitingAnimal"] && this["specType"] == 0x2) this["isHitingAnimal"] = !![];
        {
          var _0x5134b4 = this["getSkinImageObj"]("skins/" + this["getSkin"]() + "/body_front.png"),
            _0x5bd162 = this["skinScale"] * 0x1,
            _0x542412 = this["skinRad"];
          if (_0x5134b4) {
            (frame = 0x0), _0x587de3["save"]();
            var _0x542412 = this["rad"];
            _0x587de3["drawImage"](
              _0x5134b4,
              -_0x542412 * _0x5bd162,
              -_0x542412 * _0x5bd162,
              0x2 * _0x542412 * _0x5bd162,
              0x2 * _0x542412 * _0x5bd162
            ),
              _0x587de3["restore"]();
          }
        }
        var _0x5134b4 = this["getSkinImageObj"]("skins/" + this["getSkin"]() + "/bison_head" + this["specType"] + ".png"),
          _0x5bd162 = this["skinScale"] * 1.01,
          _0x542412 = this["skinRad"];
        if (_0x5134b4) {
          (frame = 0x0), _0x587de3["save"]();
          var _0x542412 = this["rad"];
          _0x587de3["drawImage"](
            _0x5134b4,
            -_0x542412 * _0x5bd162,
            (-_0x542412 + _0x542412 * 0.2) * _0x5bd162 + frame,
            0x2 * _0x542412 * _0x5bd162,
            0x2 * _0x542412 * _0x5bd162
          ),
            _0x587de3["restore"]();
        }
      }
    } else (this["legYAnchorF"] = 0x0), (this["legHeightF"] = 0x0), (this["isHitingAnimal"] = ![]);
  }),
  (_0x214a3d["prototype"]["legYAnchorF"] = 2.3),
  (_0x214a3d["prototype"]["legStretchW"] = 1.3),
  (_0x214a3d["prototype"]["legStretchH"] = 0x1),
  (_0x214a3d["prototype"]["legHeightF"] = 0x14),
  (_0x214a3d["prototype"]["showBackLeg"] = function () {
    var _0x1501fd = (_0x168a54 - this["spawnTime"]) / 0x3e8,
      _0x4d3e15 = _0x120bbb(_0x1501fd, 0.3, 0x1, 0.5),
      _0x5f2835 = "front";
    if (_0x4d3e15 <= 0.5 && _0x4d3e15 > 0.1) (_0x5f2835 = "front"), (this["legYAnchorF"] = 0x1), (this["legHeightF"] = 0x14);
    else _0x4d3e15 > 0.5 && ((_0x5f2835 = "back"), (this["legYAnchorF"] = 2.3), (this["legHeightF"] = -0x5));
    _0x587de3["save"]();
    var _0x2b05ad = _0x587de3["globalAlpha"];
    (_0x587de3["globalAlpha"] = 0.1 * _0x2b05ad), _0x440ef0(0x0, 0x0, this["rad"], "#755A2A"), (_0x587de3["globalAlpha"] = 0x1 * _0x2b05ad);
    var _0xfba228 = this["getSkinImageObj"]("skins/" + this["getSkin"]() + "/" + _0x5f2835 + "_legs.png");
    if (_0xfba228) {
      var _0x275942 = _0x4d3e15,
        _0x2469d8 = this["rad"] * 0.6,
        _0x1862d2 = 0x0,
        _0x2b5403 = this["rad"],
        _0x5e8ef5 = _0x2469d8 * 0x2 * this["legStretchW"],
        _0x5ec2c9 = _0x2469d8 * 0x2 * _0x275942,
        _0x40ccfa = 0.5,
        _0x4a0fe5 = 0.95;
      _0x587de3["drawImage"](
        _0xfba228,
        _0x1862d2 + _0x5e8ef5 * -_0x40ccfa,
        _0x2b5403 + (_0x5ec2c9 + this["legHeightF"]) * (-_0x4a0fe5 * this["legYAnchorF"]),
        _0x5e8ef5,
        _0x5ec2c9 * this["legStretchH"]
      );
    }
    _0x587de3["restore"]();
  });

function _0x214a3d() {
  _0x214a3d["superClass"]["call"](this, _0x3fb3b2);
}
(window["Bison"] = _0x214a3d), _0x17bf26["setCustomClassForGameObjType"](_0x214a3d, _0x3fb3b2, _0x31f081);
var _0x48c344 = _0x3799d1;
(_0x2b4df4["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x2b4df4["prototype"]["constructor"] = _0x2b4df4),
  (_0x2b4df4["superClass"] = _0x48c344),
  (_0x2b4df4["prototype"]["animalInfo"] = function () {
    var _0x55ca15 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x55ca15["aniName"] = "Komodo Dragon";
        break;
      case 0x1:
        _0x55ca15["aniName"] = "Golden Komodo";
        break;
      case 0x2:
        _0x55ca15["aniName"] = "Night Komodo";
        break;
      case 0xc8:
        switch (this["animalSubSpecies"]) {
          case 0x0:
            _0x55ca15["aniName"] = "Dowager Varande";
            break;
          case 0x1:
            _0x55ca15["aniName"] = "Emepror Varande";
            break;
        }
        break;
      case 0xca:
        _0x55ca15["aniName"] = "Galaxy Komodo Dragon";
        break;
    }
    return (
      (_0x55ca15["aniCol"] = "#FF9000"),
      (_0x55ca15["skinName"] = this["getSkinName"]()),
      (_0x55ca15["upgradeText"] =
        "UPGRADED to " + _0x55ca15["aniName"] + "!\x0a" + _0x55ca15["aniName"] + " have very poisonous bite. Press W to bite! Also eat bones."),
      _0x55ca15
    );
  }),
  (_0x2b4df4["prototype"]["getAbilityInfo"] = function (_0x383471) {
    var _0x12338a = {};
    return (
      (_0x12338a["abilName"] = "Poison Bite\x0a(Sweat Prey)"),
      (_0x12338a["abilImg"] = "abilities/Bite.svg"),
      (_0x12338a["skinThemeID"] = this["skinThemeID"]),
      (_0x12338a["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x12338a
    );
  }),
  (_0x2b4df4["prototype"]["getSkinName"] = function () {
    return this["getSkinPath"]() + "/komododragon";
  }),
  (_0x2b4df4["prototype"]["getSkinPath"] = function () {
    return "desert/komododragon/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x2b4df4["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return this["animalSpecies"] == 0xc8 ? "/" + this["animalSubSpecies"] : "";
  }),
  (_0x2b4df4["prototype"]["updateZ"] = function () {
    if (this["flag_eff_grabbedByFlytrap"]) this["z"] = 0x44c + this["rad"];
    else {
      if (this["flag_usingAbility"] && !this["flag_underWater"]) this["z"] = 0x4b0 + this["rad"];
      else {
        if (this["flag_flying"] || this["flag_eff_tossedInAir"]) {
          this["z"] = 0x2710;
          if (this["flag_isGrabbed"]) this["z"] -= this["rad"];
          else this["z"] += this["rad"];
        } else this["z"] = this["rad"];
      }
    }
  }),
  (_0x2b4df4["prototype"]["straightTongueOffsetY"] = -0.45),
  (_0x2b4df4["prototype"]["straightTongueScaleF"] = 1.8),
  (_0x2b4df4["prototype"]["drawUnderSkinImg"] = function () {
    if (this["specType"] != 0x0) return;
    this["setSkinScale"]();
    if (+new Date() < this["spawnTime"] + 0x1388) return;
    if (!this["flag_usingAbility"] && !this["wasLicking"] && +new Date() > this["nextShowT"]) {
      var _0x56af04 = this["skinScale"] * this["straightTongueScaleF"],
        _0x3c4080 = this["skinRad"],
        _0x1a865c = this["getSkinImageObj"]("skins/" + this["getSkinPath"]() + "/tongue.png"),
        _0x5a0155 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
        _0x74d273 = _0x120bbb(_0x5a0155, 0.7, 0xc, 0.5);
      _0x1a865c &&
        _0x587de3["drawImage"](
          _0x1a865c,
          -_0x3c4080 * _0x56af04,
          (-_0x3c4080 + _0x3c4080 * this["straightTongueOffsetY"]) * _0x56af04 + _0x74d273,
          0x2 * _0x3c4080 * _0x56af04,
          0x2 * _0x3c4080 * _0x56af04
        );
    }
  }),
  (_0x2b4df4["prototype"]["tongueAnimationDur"] = 0x1),
  (_0x2b4df4["prototype"]["tongueScaleF"] = 1.5),
  (_0x2b4df4["prototype"]["tongueAncherY"] = -0.21),
  (_0x2b4df4["prototype"]["showTongue"] = !![]),
  (_0x2b4df4["prototype"]["nextShowT"] = 0x0),
  (_0x2b4df4["prototype"]["lastLickSide"] = 0x0),
  (_0x2b4df4["prototype"]["wasLicking"] = ![]),
  (_0x2b4df4["prototype"]["isLicking"] = ![]),
  (_0x2b4df4["prototype"]["lickFaceOffsetY"] = -0.3),
  (_0x2b4df4["prototype"]["biteStart"] = 0x0);
var _0x57ac60 = 0x0,
  _0x3dbb99 = 1.2;
(_0x2b4df4["prototype"]["drawSkinCustomization"] = function () {
  this["setSkinScale"]();
  var _0x58b811 = -0.15;
  console["log"]("specTpye: " + this["specType"]);
  if (this["flag_usingAbility"]) {
    this["biteStart"] == 0x0 && (this["biteStart"] = _0x168a54);
    if (this["specType"] == 0x1) {
      {
        var _0x46c2f5 = this["getSkinImageObj"]("skins/" + this["getSkinPath"]() + "/komododragon_neck.png");
        if (_0x46c2f5) {
          var _0x1c7fa4 = (_0x168a54 - this["biteStart"]) / 0x3e8,
            _0x37ec64 = 0x5,
            _0x131e40 = 0x1,
            _0x58e905 = _0x120bbb(_0x1c7fa4, _0x131e40, _0x37ec64, 0x1);
          _0x587de3["save"]();
          var _0x40306a = this["rad"],
            _0x5beb69 = this["skinScale"] * 0x1;
          _0x587de3["drawImage"](
            _0x46c2f5,
            -_0x40306a * _0x5beb69,
            (-_0x40306a + _0x40306a * -0.05) * _0x5beb69 + _0x58e905,
            0x2 * _0x40306a * _0x5beb69,
            0x2 * _0x40306a * _0x5beb69
          ),
            _0x587de3["restore"]();
        }
      }
      {
        if (!this["flag_underWater"]) {
          var _0xf9d1c9 = "skins/" + this["getSkinPath"]() + "/komododragon_tail.png",
            _0x2409f6 = this["getSkinImageObj"](_0xf9d1c9);
          if (_0x2409f6) {
            var _0x5beb69 = this["skinScale"] * _0x3dbb99,
              _0x40306a = this["skinRad"];
            _0x587de3["drawImage"](
              _0x2409f6,
              -_0x40306a * _0x5beb69,
              (-_0x40306a + _0x40306a * _0x57ac60) * _0x5beb69,
              0x2 * _0x40306a * _0x5beb69,
              0x2 * _0x40306a * _0x5beb69
            );
          }
        }
      }
      {
        var _0x3eb146 = this["getSkinImageObj"]("skins/" + this["getSkinPath"]() + "/komododragon_attack.png"),
          _0x5beb69 = this["skinScale"] * 0x1,
          _0x40306a = this["skinRad"],
          _0x37ec64 = 0xc,
          _0x131e40 = 0.9,
          _0x58e905 = _0x120bbb(_0x1c7fa4, _0x131e40, _0x37ec64, 0x1);
        _0x3eb146 &&
          (_0x587de3["save"](),
          _0x587de3["drawImage"](
            _0x3eb146,
            -_0x40306a * _0x5beb69,
            -_0x40306a * _0x5beb69 + _0x58e905,
            0x2 * _0x40306a * _0x5beb69,
            0x2 * _0x40306a * _0x5beb69
          ),
          _0x587de3["restore"]());
      }
    }
  }
  if (this["specType"] == 0x0) {
    if (!this["flag_underWater"]) {
      var _0xf9d1c9 = "skins/" + this["getSkinPath"]() + "/komododragon_tail.png",
        _0x2409f6 = this["getSkinImageObj"](_0xf9d1c9);
      if (_0x2409f6) {
        var _0x5beb69 = this["skinScale"] * _0x3dbb99,
          _0x40306a = this["skinRad"];
        _0x587de3["drawImage"](
          _0x2409f6,
          -_0x40306a * _0x5beb69,
          (-_0x40306a + _0x40306a * _0x57ac60) * _0x5beb69,
          0x2 * _0x40306a * _0x5beb69,
          0x2 * _0x40306a * _0x5beb69
        );
      }
      var _0x3eb146 = this["getSkinImageObj"]("skins/" + this["getSkinPath"]() + "/komododragon_attack.png"),
        _0x5beb69 = this["skinScale"] * 0x1,
        _0x40306a = this["skinRad"],
        _0x37ec64 = 0xc,
        _0x131e40 = 0.9,
        _0x58e905 = _0x120bbb(_0x1c7fa4, _0x131e40, _0x37ec64, 0x1);
      _0x3eb146 &&
        (_0x587de3["save"](),
        _0x587de3["drawImage"](
          _0x3eb146,
          -_0x40306a * _0x5beb69,
          -_0x40306a * _0x5beb69 + _0x58e905,
          0x2 * _0x40306a * _0x5beb69,
          0x2 * _0x40306a * _0x5beb69
        ),
        _0x587de3["restore"]());
      _0x587de3["save"]();
      var _0xf9d1c9 = "skins/" + this["getSkinPath"]() + "/licked_face.png",
        _0x2409f6 = this["getSkinImageObj"](_0xf9d1c9);
      if (_0x2409f6) {
        var _0x25624c = this["lickedAmt"] / 0x64;
        (_0x587de3["globalAlpha"] = _0x25624c),
          _0x587de3["drawImage"](
            _0x2409f6,
            -_0x40306a * _0x5beb69,
            (-_0x40306a + _0x40306a * _0x58b811) * _0x5beb69 + _0x58e905,
            0x2 * _0x40306a * _0x5beb69,
            0x2 * _0x40306a * _0x5beb69
          );
      }
      _0x587de3["restore"](), _0x587de3["save"]();
      var _0xf9d1c9 = "skins/" + this["getSkinPath"]() + "/komododragon_head.png",
        _0x2409f6 = this["getSkinImageObj"](_0xf9d1c9);
      if (_0x2409f6) {
        var _0x5beb69 = this["skinScale"],
          _0x40306a = this["skinRad"];
        _0x587de3["drawImage"](_0x2409f6, -_0x40306a * _0x5beb69, -_0x40306a * _0x5beb69, 0x2 * _0x40306a * _0x5beb69, 0x2 * _0x40306a * _0x5beb69);
      }
      _0x587de3["restore"]();
    }
  }
}),
  (_0x2b4df4["prototype"]["lickSide"] = 0x0),
  (_0x2b4df4["prototype"]["lickedAmt"] = 0x0),
  (_0x2b4df4["prototype"]["readCustomData_onNewlyVisible"] = function (_0xd6028a) {
    _0x2b4df4["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0xd6028a);
    var _0x106117 = _0xd6028a["readUInt8"]() == 0x1;
    (this["nextShowT"] = +new Date() + 0xbb8),
      (this["isLicking"] = _0x106117),
      (this["lickSide"] = _0xd6028a["readUInt8"]()),
      (this["lickedAmt"] = _0xd6028a["readUInt8"]());
  }),
  (_0x2b4df4["prototype"]["customUpdatedProperty"] = function (_0x1ad020, _0x1c107b) {
    if (_0x1ad020 == _0x6f8ea0) {
      var _0x53faa1 = _0x1c107b["readUInt8"]() == 0x1;
      (this["nextShowT"] = +new Date() + 0xbb8), (this["isLicking"] = _0x53faa1);
      if (!this["wasLicking"] && this["isLicking"]) this["wasLicking"] = !![];
    } else {
      if (_0x1ad020 == _0x1de0f5) this["lickedAmt"] = _0x1c107b["readUInt8"]();
      else _0x1ad020 == _0x33f6fe && (this["lickSide"] = _0x1c107b["readUInt8"]());
    }
  });

function _0x2b4df4() {
  _0x2b4df4["superClass"]["call"](this, _0x3fb3b2);
}
(window["KomodoDragon"] = _0x2b4df4), _0x17bf26["setCustomClassForGameObjType"](_0x2b4df4, _0x3fb3b2, _0x3cc7e2);
var _0x48c344 = _0x307a43;
(_0x14c31f["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x14c31f["prototype"]["constructor"] = _0x14c31f),
  (_0x14c31f["superClass"] = _0x48c344),
  (_0x14c31f["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"];
  }),
  (_0x14c31f["prototype"]["customDraw"] = function (_0x81ca71) {
    _0x587de3["save"](), this["drawOutlinedCircle"]("", _0xa3f8d9), _0x587de3["restore"]();
  });

function _0x14c31f() {
  _0x14c31f["superClass"]["call"](this, _0x37860);
}
(window["SweatPoison"] = _0x14c31f), _0x17bf26["setCustomClassForGameObjType"](_0x14c31f, _0x37860);
var _0x48c344 = _0x307a43;
(_0x3b06ce["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x3b06ce["prototype"]["constructor"] = _0x3b06ce),
  (_0x3b06ce["superClass"] = _0x48c344),
  (_0x3b06ce["prototype"]["updateZ"] = function () {
    this["z"] = -0x9a;
  }),
  (_0x3b06ce["prototype"]["customDraw"] = function (_0x5da635) {
    _0x587de3["save"](), (this["rPer"] = 0x0);
    var _0xc3b05b = _0xa3f8d9;
    this["drawOutlinedCircle"]("", _0xc3b05b);
    var _0xa0b778 = 0x1;
    if (!(_0x57ae6d == 0x2)) _0x587de3["rotate"](this["rPer"] * 0x2 * Math["PI"]);
    var _0x4b45af = 0x0,
      _0x1619db = (_0x168a54 - this["spawnTime"]) / 0x3e8,
      _0x4ab1ed = 0x7,
      _0x5451df = 0x4;
    (_0x4b45af = _0x5451df * Math["sin"](((0x2 * Math["PI"]) / _0x4ab1ed) * _0x1619db)),
      _0x587de3["beginPath"](),
      _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, this["rad"] - _0xa0b778 + _0x4b45af), 0x0, Math["PI"] * 0x2),
      _0x587de3["fill"](),
      !(_0x57ae6d == 0x2) &&
        (_0x587de3["beginPath"](),
        _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, this["rad"] - _0xa0b778 + _0x4b45af), 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](
          this["rad"] * 0.45,
          -this["rad"] * 0.45 + 0xf * this["rPer"],
          Math["max"](0x0, this["rad"] * 0.5 + _0x4b45af),
          0x0,
          0x2 * Math["PI"]
        ),
        _0x587de3["fill"](),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](
          this["rad"] * 0.5,
          this["rad"] * 0.5 + 0xf * this["rPer"],
          Math["max"](0x0, this["rad"] * 0.4 + _0x4b45af),
          0x0,
          0x2 * Math["PI"]
        ),
        _0x587de3["fill"](),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](
          -this["rad"] * 0.55 * 0.707,
          +this["rad"] * 0.55 * 0.707 + 0xf * this["rPer"],
          Math["max"](0x0, this["rad"] * 0.5 + _0x4b45af),
          0x0,
          0x2 * Math["PI"]
        ),
        _0x587de3["fill"](),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](
          -this["rad"] * 0.75,
          -this["rad"] * 0.35 + 0xf * this["rPer"],
          Math["max"](0x0, this["rad"] * 0.3 + _0x4b45af),
          0x0,
          0x2 * Math["PI"]
        ),
        _0x587de3["fill"](),
        this["rad"] > 0x32 &&
          (_0x587de3["beginPath"](),
          _0x587de3["arc"](this["rad"] + 0xa * this["rPer"], 0x32 * this["rPer"], 0x8, 0x0, 0x2 * Math["PI"]),
          _0x587de3["fill"](),
          _0x587de3["beginPath"](),
          _0x587de3["arc"](this["rad"] - 0x14 * this["rPer"], 0x32 * this["rPer"], 0xa, 0xa, 0x0, 0x2 * Math["PI"]),
          _0x587de3["fill"]())),
      _0x587de3["restore"]();
  });

function _0x3b06ce() {
  _0x3b06ce["superClass"]["call"](this, _0x226377);
}
(window["PoisonPool"] = _0x3b06ce), _0x17bf26["setCustomClassForGameObjType"](_0x3b06ce, _0x226377);
var _0x48c344 = _0x3799d1;
(_0x4f1a48["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x4f1a48["prototype"]["constructor"] = _0x4f1a48),
  (_0x4f1a48["superClass"] = _0x48c344),
  (_0x4f1a48["prototype"]["updateZ"] = function () {
    if (this["flag_underWater"]) this["z"] = -0x64;
    else {
      if (this["flag_isInArena"]) this["z"] = 0x2710 + this["rad"];
      else {
        if (this["flag_eff_tossedInAir"]) this["z"] = 0x4b0 + this["rad"];
        else this["z"] = 0x4b0 + this["rad"];
      }
    }
  }),
  (_0x4f1a48["prototype"]["animalInfo"] = function () {
    var _0x533f12 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x533f12["aniName"] = "Giant Scorpion";
        break;
      case 0x1:
        _0x533f12["aniName"] = "Golden Scorpion";
        break;
      case 0x2:
        _0x533f12["aniName"] = "Carnelian Scorpion";
        break;
      case 0xcc:
        _0x533f12["aniName"] = "Selamorph Scorpion";
        break;
      case 0xdc:
        _0x533f12["aniName"] = "Nebuladon Scorpion";
        break;
    }
    return (
      (_0x533f12["aniCol"] = "#FF9000"),
      (_0x533f12["skinName"] = "scorpion"),
      (_0x533f12["upgradeText"] = "UPGRADED to " + _0x533f12["aniName"] + "!\x0aSting and Shiver your prey to death.\x0a(Press W to Sting)"),
      _0x533f12
    );
  }),
  (_0x4f1a48["prototype"]["getAbilityInfo"] = function (_0x1f5fc5) {
    var _0x6519c4 = {};
    return (
      (_0x6519c4["abilName"] = "Sting!\x0a(Shivers Prey)"),
      (_0x6519c4["abilImg"] = "abilities/Sting.svg"),
      (_0x6519c4["skinThemeID"] = this["skinThemeID"]),
      (_0x6519c4["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x6519c4
    );
  }),
  (_0x4f1a48["prototype"]["getSkinName"] = function () {
    var _0x3c6b63 = "desert/scorpion/" + this["animalSpecies"] + "/scorpion";
    return (_0x3c6b63 += this["specType"] == 0x0 ? "" : this["specType"]), _0x3c6b63;
  }),
  (_0x4f1a48["prototype"]["stingerScaleF"] = 0.7),
  (_0x4f1a48["prototype"]["stingerOffsetY"] = -0.6),
  (_0x4f1a48["prototype"]["poison"] = 0x32),
  (_0x4f1a48["prototype"]["clawAnimation"] = null),
  (_0x4f1a48["prototype"]["stingAnimation"] = null),
  (_0x4f1a48["prototype"]["stingerTailNormal"] = null),
  (_0x4f1a48["prototype"]["stingerTail"] = null),
  (_0x4f1a48["prototype"]["stingerAttack"] = null),
  (_0x4f1a48["prototype"]["stingerAttackFull"] = null),
  (_0x4f1a48["prototype"]["stingerNormal"] = null),
  (_0x4f1a48["prototype"]["stingerNormalFull"] = null),
  (_0x4f1a48["prototype"]["isUsingAbility"] = ![]),
  (_0x4f1a48["prototype"]["drawSkinCustomization"] = function () {
    !this["flag_usingAbility"] && ((this["clawAnimation"] = null), (this["stingAnimation"] = null), (this["isUsingAbility"] = ![]));
    !this["isUsingAbility"] && this["flag_eff_aniInClaws"] && ((this["isUsingAbility"] = !![]), (this["stingAnimation"] = null));
    this["isUsingAbility"] &&
      !this["flag_usingDiveAbility"] &&
      (this["stingAnimation"] == null &&
        ((this["stingAnimation"] = new _0x5431fd(this, 0x1, _0x5431fd["bow"], {
          v1: 0x5,
        })),
        (this["stingAnimation"]["onFrameEntered"] = function (_0x4f5d15) {
          _0x587de3["save"]();
          var _0x45566d = this["forObj"]["skinScale"] * this["forObj"]["stingerScaleF"],
            _0x4add94 = this["forObj"]["rad"];
          if (this["forObj"]["stingerTailAttack"])
            _0x587de3["drawImage"](
              this["forObj"]["stingerTailAttack"],
              -_0x4add94 * _0x45566d,
              (-_0x4add94 + _0x4add94 * this["forObj"]["stingerOffsetY"]) * _0x45566d,
              0x2 * _0x4add94 * _0x45566d,
              0x2 * (_0x4add94 + _0x4add94 * _0x4f5d15) * _0x45566d
            );
          if (this["forObj"]["stingerTail"])
            _0x587de3["drawImage"](
              this["forObj"]["stingerTail"],
              -_0x4add94 * _0x45566d,
              (-_0x4add94 + _0x4add94 * _0x4f5d15) * _0x45566d,
              0x2 * _0x4add94 * _0x45566d,
              0x2 * _0x4add94 * _0x45566d
            );
          if (this["forObj"]["stingerAttack"])
            _0x587de3["drawImage"](
              this["forObj"]["stingerAttack"],
              -_0x4add94 * _0x45566d,
              (-_0x4add94 + _0x4add94 * _0x4f5d15) * _0x45566d,
              0x2 * _0x4add94 * _0x45566d,
              0x2 * _0x4add94 * _0x45566d
            );
          var _0x1b5aea = (_0x168a54 - this["spawnTime"]) / 0x3e8,
            _0x2d20d7 = _0x120bbb(_0x1b5aea, 0x5, 0x1, 0x1),
            _0x26b5a = Math["max"](0x0, _0x2d20d7);
          _0x587de3["globalAlpha"] = _0x26b5a * Math["max"](0x0, this["poison"] / 0x64);
          if (this["forObj"]["stingerAttackFull"])
            _0x587de3["drawImage"](
              this["forObj"]["stingerAttackFull"],
              -_0x4add94 * _0x45566d,
              (-_0x4add94 + _0x4add94 * _0x4f5d15) * _0x45566d,
              0x2 * _0x4add94 * _0x45566d,
              0x2 * _0x4add94 * _0x45566d
            );
          _0x587de3["restore"]();
        })),
      this["stingAnimation"] && this["stingAnimation"]["run"]());
    if (this["stingAnimation"] == null || this["stingAnimation"]["hasStopped"]) {
      if (!this["flag_underWater"] && !this["flag_usingDiveAbility"]) {
        if (this["stingerTailNormal"] != null && this["stingerNormalFull"] != null) {
          var _0x5a17b5 = this["skinScale"] * this["stingerScaleF"],
            _0x4d644d = this["skinRad"],
            _0x4f6ff9 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
            _0x267ce1 = 0x3,
            _0x2eca26 = 1.5,
            _0x1849d8 = 0x0,
            _0xf0b4 = 0x0;
          !_0x34fedb &&
            !(_0x57ae6d == 0x2) &&
            ((_0x1849d8 = _0x120bbb(_0x4f6ff9, _0x2eca26, _0x267ce1, 0x2)), (_0xf0b4 = _0x120bbb(_0x4f6ff9, _0x2eca26, 0x1, 0x2)));
          _0x587de3["save"]();
          var _0x4d644d = this["rad"] - _0x1849d8 * 0.5;
          _0x587de3["drawImage"](
            this["stingerTailNormal"],
            -_0x4d644d * _0x5a17b5,
            (-_0x4d644d + _0x4d644d * this["stingerOffsetY"]) * _0x5a17b5 + _0x1849d8 * -_0xf0b4,
            0x2 * _0x4d644d * _0x5a17b5,
            0x2 * _0x4d644d * _0x5a17b5
          );
          var _0x4f6ff9 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
            _0x5a9204 = _0x120bbb(_0x4f6ff9, 0x5, 0x1, 0x1),
            _0x30857b = Math["max"](0x0, _0x5a9204);
          (_0x587de3["globalAlpha"] = _0x30857b * Math["max"](0x0, this["poison"] / 0x64)),
            _0x587de3["drawImage"](
              this["stingerNormalFull"],
              -_0x4d644d * _0x5a17b5,
              (-_0x4d644d + _0x4d644d * this["stingerOffsetY"]) * _0x5a17b5 + _0x1849d8 * -_0xf0b4,
              0x2 * _0x4d644d * _0x5a17b5,
              0x2 * _0x4d644d * _0x5a17b5
            ),
            _0x587de3["restore"]();
        }
      }
    }
  }),
  (_0x4f1a48["prototype"]["drawWhenUnderwater"] = function () {
    this["drawUnderwaterCustomization"](0x1, 1.1);
  }),
  (_0x4f1a48["prototype"]["tailOffsetY"] = -0.25),
  (_0x4f1a48["prototype"]["tailScaleF"] = 1.2);
var _0x4bb720 = 0x4,
  _0x27299d = 0.1;
(_0x4f1a48["prototype"]["drawUnderSkinImg"] = function () {
  var _0x1d1d19 = "skins/desert/scorpion/" + this["animalSpecies"] + "/tail_back.png",
    _0x5b4cd = this["getSkinImageObj"](_0x1d1d19);
  if (_0x5b4cd) {
    var _0x24267b = 0x0;
    if (this["stingAnimation"]) {
      if (this["stingAnimation"]["frame"] < 0.5) _0x24267b = -this["stingAnimation"]["frame"] * 0.3;
    }
    var _0x149c7e = this["skinScale"] * this["tailScaleF"],
      _0x4442b6 = this["skinRad"];
    _0x587de3["drawImage"](
      _0x5b4cd,
      -_0x4442b6 * _0x149c7e,
      (-_0x4442b6 + _0x4442b6 * this["tailOffsetY"]) * _0x149c7e,
      0x2 * _0x4442b6 * _0x149c7e,
      0x2 * (_0x4442b6 + _0x4442b6 * _0x24267b) * _0x149c7e
    );
  }
  if (this["flag_usingAbility"] && !this["flag_underWater"]) {
    this["clawAnimation"] == null &&
      ((this["clawAnimation"] = new _0x5431fd(this, 0.9, _0x5431fd["bow"], {
        v1: _0x4bb720,
      })),
      (this["clawAnimation"]["keepLastFrame"] = !![]),
      (this["clawAnimation"]["onFrameEntered"] = function (_0x377a35) {
        var _0x3ae9e5 = 0x0;
        if (_0x377a35 < 0.5) _0x3ae9e5 = -_0x377a35;
        var _0x40fdd7 = "skins/desert/scorpion/" + this["forObj"]["animalSpecies"] + "/arms.png";
        this["forObj"]["flag_eff_aniInClaws"] && (_0x40fdd7 = "skins/desert/scorpion/" + this["forObj"]["animalSpecies"] + "/arms-grabbed.png");
        var _0x466e42 = this["forObj"]["getSkinImageObj"](_0x40fdd7);
        if (_0x466e42) {
          var _0x194337 = this["forObj"]["skinScale"] * this["forObj"]["tailScaleF"],
            _0x1fa5b4 = this["forObj"]["skinRad"];
          !this["hasStopped"] && this["timePassed"] < 0.75
            ? ((_0x27299d = _0x3ae9e5),
              _0x587de3["drawImage"](
                _0x466e42,
                -_0x1fa5b4 * _0x194337,
                (-_0x1fa5b4 + _0x1fa5b4 * _0x3ae9e5) * _0x194337,
                0x2 * _0x1fa5b4 * _0x194337,
                0x2 * _0x1fa5b4 * _0x194337
              ))
            : _0x587de3["drawImage"](
                _0x466e42,
                -_0x1fa5b4 * _0x194337,
                (-_0x1fa5b4 + _0x1fa5b4 * _0x27299d) * _0x194337,
                0x2 * _0x1fa5b4 * _0x194337,
                0x2 * _0x1fa5b4 * _0x194337
              );
        }
      }));
    if (this["clawAnimation"] != null) this["clawAnimation"]["run"]();
  }
}),
  (_0x4f1a48["prototype"]["readCustomData_onNewlyVisible"] = function (_0xde21f4) {
    _0x4f1a48["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0xde21f4), (this["poison"] = _0xde21f4["readUInt8"]());
  }),
  (_0x4f1a48["prototype"]["customUpdatedProperty"] = function (_0x5b74e5, _0x418d38) {
    _0x5b74e5 == _0x1de0f5 && (this["poison"] = _0x418d38["readUInt8"]());
  });

function _0x4f1a48() {
  _0x4f1a48["superClass"]["call"](this, _0x3fb3b2);
}
(_0x4f1a48["prototype"]["preLoad"] = function () {
  this["getSkinImageObj"]("skins/desert/scorpion/" + this["animalSpecies"] + "/scorpion1.png"),
    (this["stingerTailNormal"] = this["getSkinImageObj"]("skins/desert/scorpion/" + this["animalSpecies"] + "/stinger_normal.png")),
    (this["stingerTail"] = this["getSkinImageObj"]("skins/desert/scorpion/" + this["animalSpecies"] + "/stinger_tail.png")),
    (this["stingerTailAttack"] = this["getSkinImageObj"]("skins/desert/scorpion/" + this["animalSpecies"] + "/attack_tail.png")),
    (this["stingerAttack"] = this["getSkinImageObj"]("skins/desert/scorpion/" + this["animalSpecies"] + "/attack_stinger_dull.png")),
    (this["stingerAttackFull"] = this["getSkinImageObj"]("skins/desert/scorpion/" + this["animalSpecies"] + "/attack_stinger_full.png")),
    (this["stingerNormal"] = this["getSkinImageObj"]("skins/desert/scorpion/" + this["animalSpecies"] + "/normal_stinger_dull.png")),
    (this["stingerNormalFull"] = this["getSkinImageObj"]("skins/desert/scorpion/" + this["animalSpecies"] + "/normal_stinger_full.png"));
}),
  (window["GiantScorpion"] = _0x4f1a48),
  _0x17bf26["setCustomClassForGameObjType"](_0x4f1a48, _0x3fb3b2, _0x321383);
var _0x48c344 = _0x3799d1;
(_0x4ee6b7["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x4ee6b7["prototype"]["constructor"] = _0x4ee6b7),
  (_0x4ee6b7["superClass"] = _0x48c344),
  (_0x4ee6b7["prototype"]["updateZ"] = function () {
    if (this["flag_usingAbility"] && this["webState"] > 0x2) this["z"] = 0x3e8;
    else {
      if (this["flag_eff_isOnSpiderWeb"]) this["z"] = 0x3e8 + this["rad"];
      else this["z"] = 0x3e8 + this["rad"];
    }
  }),
  (_0x4ee6b7["prototype"]["animalInfo"] = function () {
    var _0x524baf = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x524baf["aniName"] = "Blackwidow Spider";
        break;
      case 0x1:
        _0x524baf["aniName"] = "Goldenwidow Spider";
        break;
      case 0x2:
        _0x524baf["aniName"] = "Queen Blackwidow";
        break;
      case 0xcc:
        _0x524baf["aniName"] = "Blood Widow Spider!";
        break;
      default:
        break;
    }
    return (
      (_0x524baf["aniCol"] = "#FF9000"),
      (_0x524baf["skinName"] = this["getSkinName"]()),
      (_0x524baf["upgradeText"] =
        "UPGRADED to " +
        _0x524baf["aniName"] +
        "!\x0aBlackwidow is a sneaky predator. It traps prey in the web and injects sweat poison.\x0aPress W to spin and throw web."),
      _0x524baf
    );
  }),
  (_0x4ee6b7["prototype"]["getAbilityInfo"] = function (_0x255cd2) {
    var _0xed8c87 = {};
    return (
      (_0xed8c87["abilName"] = "Spin Web & Bite\x0a(Sweat Prey)"),
      (_0xed8c87["abilImg"] = "abilities/Web.svg"),
      (_0xed8c87["skinThemeID"] = this["skinThemeID"]),
      (_0xed8c87["mopeSeasonID"] = this["mopeSeasonID"]),
      _0xed8c87
    );
  }),
  (_0x4ee6b7["prototype"]["readCustomData_onNewlyVisible"] = function (_0x5918bc) {
    _0x4ee6b7["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x5918bc),
      this["customUpdatedProperty"](_0x2060fb, _0x5918bc);
  }),
  (_0x4ee6b7["prototype"]["webX"] = 0x0),
  (_0x4ee6b7["prototype"]["webY"] = 0x0),
  (_0x4ee6b7["prototype"]["spiderX"] = 0x0),
  (_0x4ee6b7["prototype"]["spiderY"] = 0x0),
  (_0x4ee6b7["prototype"]["webState"] = 0x0),
  (_0x4ee6b7["prototype"]["customUpdatedProperty"] = function (_0x1bbbed, _0x3be04f) {
    _0x1bbbed == _0x2060fb && (this["webState"] = _0x3be04f["readUInt8"]());
  }),
  (_0x4ee6b7["prototype"]["readUpdatedPropertyItem"] = function (_0xff110, _0x111880) {
    _0x4ee6b7["superClass"]["prototype"]["readUpdatedPropertyItem"]["call"](this, _0xff110, _0x111880);
    if (_0xff110 == _0x4573ba) {
      console["log"]("spider position updated:");
      this["webState"] == 0x0 &&
        ((this["web_nx"] = this["web_ox"] = this["webX"] = this["x"]),
        (this["web_ny"] = this["web_oy"] = this["webY"] = this["y"]),
        (this["spider_ox"] = this["spiderX"] = this["spider_nx"] = this["x"]),
        (this["spider_oy"] = this["spiderY"] = this["spider_ny"] = this["y"]));
      var _0x1f4276 = _0x111880["readUInt8"]() == 0x1;
      if (_0x1f4276) {
        var _0x4980ec = _0x111880["readUInt16"]() / 0x4,
          _0x3210b9 = _0x111880["readUInt16"]() / 0x4;
        (this["web_ox"] = this["webX"]), (this["web_oy"] = this["webY"]), (this["web_nx"] = _0x4980ec), (this["web_ny"] = _0x3210b9);
        var _0x1943e1 = _0x111880["readUInt16"]() / 0x4,
          _0x1e76c2 = _0x111880["readUInt16"]() / 0x4;
        (this["spider_ox"] = this["spiderX"]),
          (this["spider_oy"] = this["spiderY"]),
          (this["spider_nx"] = _0x1943e1),
          (this["spider_ny"] = _0x1e76c2);
      }
    }
  }),
  (_0x4ee6b7["prototype"]["onLerpUpdate"] = function (_0x3061f2) {
    this["webState"] > 0x0 &&
      ((this["webX"] = _0x3061f2 * (this["web_nx"] - this["web_ox"]) + this["web_ox"]),
      (this["webY"] = _0x3061f2 * (this["web_ny"] - this["web_oy"]) + this["web_oy"]),
      (this["spiderX"] = _0x3061f2 * (this["spider_nx"] - this["spider_ox"]) + this["spider_ox"]),
      (this["spiderY"] = _0x3061f2 * (this["spider_ny"] - this["spider_oy"]) + this["spider_oy"]));
  }),
  (_0x4ee6b7["prototype"]["afterCustomDraw"] = function (_0x1ad12a) {
    this["webState"] > 0x0 &&
      _0x204989 == this["id"] &&
      this["flag_usingAbility"] &&
      (_0x587de3["save"](),
      (_0x587de3["strokeStyle"] = this["animalSpecies"] == 0x1 ? "gold" : "white"),
      (_0x587de3["globalAlpha"] = 0.3),
      _0x587de3["beginPath"](),
      _0x587de3["moveTo"](this["webX"], this["webY"]),
      _0x587de3["lineTo"](this["spiderX"], this["spiderY"]),
      _0x587de3["stroke"](),
      _0x587de3["restore"]());
  }),
  (_0x4ee6b7["prototype"]["getSkinName"] = function () {
    return "desert/blackwidow/" + this["animalSpecies"] + this["getSubSpecies"]() + "/blackwidow" + (this["specType"] == 0x0 ? "" : this["specType"]);
  }),
  (_0x4ee6b7["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x4ee6b7["prototype"]["drawSkinCustomization"] = function () {
    if (this["webState"] == 0x0 && this["flag_usingAbility"]) {
      var _0x59dde0 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
        _0x45da80 = 0.75,
        _0x5c94c2 = 0x1,
        _0x19e345 = _0x5c94c2 * Math["sin"](((0x2 * Math["PI"]) / _0x45da80) * _0x59dde0);
      _0x587de3["globalAlpha"] = 0.3;
      var _0x152e18 = this["animalSpecies"] == 0x1 ? "gold" : "#f2f2f2";
      _0x440ef0(0x0, -this["rad"] * 1.07, this["rad"] * 0.07, _0x152e18),
        (_0x587de3["globalAlpha"] = 0.8 - 0.2 * _0x19e345),
        _0x440ef0(0x0, -this["rad"] * 1.07, this["rad"] * 0.07 + (0.05 + _0x19e345), _0x152e18);
    }
  });

function _0x4ee6b7() {
  _0x4ee6b7["superClass"]["call"](this, _0x3fb3b2);
}
(window["BlackWidowSpider"] = _0x4ee6b7), _0x17bf26["setCustomClassForGameObjType"](_0x4ee6b7, _0x3fb3b2, _0x563a97);
var _0x1d83bb = _0x2544e4,
  _0x48c344 = _0xe4ec38;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344),
  (_0x2544e4["prototype"]["updateZ"] = function () {
    if (this["state"] == 0x0) this["z"] = 0x2710;
    else this["z"] = 0x3e8;
  }),
  (_0x2544e4["prototype"]["webAlpha"] = 0.5),
  (_0x2544e4["prototype"]["customDraw"] = function (_0x4058c4) {
    _0x587de3["save"]();
    if (this["state"] > 0x0) {
      var _0x118f08 = this["getSkinImageObj"]("img/web/" + this["webType"] + "/spiderWeb.png"),
        _0x512a9d = this["rad"];
      _0x118f08 &&
        (_0x587de3["save"](),
        (_0x587de3["globalAlpha"] = this["webAlpha"]),
        _0x587de3["drawImage"](_0x118f08, -_0x512a9d, -_0x512a9d, 0x2 * _0x512a9d, 0x2 * _0x512a9d),
        _0x587de3["restore"]());
    }
    _0x587de3["restore"]();
  }),
  (_0x2544e4["prototype"]["state"] = 0x0),
  (_0x2544e4["prototype"]["spiderX"] = 0x0),
  (_0x2544e4["prototype"]["spiderY"] = 0x0),
  (_0x2544e4["prototype"]["readUpdatedProperty"] = function (_0x7e46f5, _0x2f4962) {
    if (_0x7e46f5 == _0x2060fb) this["state"] = _0x2f4962["readUInt8"]();
    else {
      if (_0x7e46f5 == _0x425fda) {
        var _0x30792d = _0x2f4962["readUInt8"]() / 0x64;
        if (_0x30792d < this["webAlpha"]) this["webAlpha"] = _0x30792d;
      }
    }
  }),
  (_0x2544e4["prototype"]["readCustomData_onNewlyVisible"] = function (_0x4e17a8) {
    _0x2544e4["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x4e17a8), (this["state"] = _0x4e17a8["readUInt8"]());
    var _0x1c58d7 = _0x4e17a8["readUInt8"]() / 0x64;
    if (_0x1c58d7 < this["webAlpha"]) this["webAlpha"] = _0x1c58d7;
    this["webType"] = _0x4e17a8["readUInt8"]();
  });

function _0x2544e4() {
  _0x2544e4["superClass"]["call"](this);
}
(window["BlackwidowWeb"] = _0x2544e4), _0x17bf26["setCustomClassForGameObjType"](_0x2544e4, _0x5aa814, _0x29c026);
var _0x48c344 = _0x3799d1;
(_0x19e297["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x19e297["prototype"]["constructor"] = _0x19e297),
  (_0x19e297["superClass"] = _0x48c344),
  (_0x19e297["prototype"]["skinFolder"] = function () {
    return "desert/";
  }),
  (_0x19e297["prototype"]["animalInfo"] = function () {
    var _0x3b04d2 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x3b04d2["aniName"] = "Pterodactyl";
        break;
      case 0x1:
        _0x3b04d2["aniName"] = "Golden Pterodactyl";
        break;
      case 0x2:
        _0x3b04d2["aniName"] = "Emerald Pterodactyl";
        break;
      case 0x64:
        _0x3b04d2["aniName"] = "Carnageodactyl";
        break;
    }
    return (
      (_0x3b04d2["aniCol"] = "#FF9000"),
      (_0x3b04d2["skinName"] = this["skinFolder"]() + "/pterodactyl/" + this["animalSpecies"] + "/pterodactyl"),
      (_0x3b04d2["upgradeText"] = "UPGRADED to " + _0x3b04d2["aniName"] + "!\x0aFly and dive onto prey to pick it up."),
      _0x3b04d2
    );
  }),
  (_0x19e297["prototype"]["getHead"] = function (_0x7cddcc, _0x3a7ad4) {
    var _0x359004 = "",
      _0x28e178 = "skins/" + this["skinFolder"]() + "/" + _0x7cddcc + "/" + this["animalSpecies"] + "/" + _0x7cddcc + "_head" + _0x359004 + ".png";
    return _0x28e178;
  }),
  (_0x19e297["prototype"]["getSkinName"] = function () {
    var _0x3e4262 = this["skinFolder"]() + "/pterodactyl/" + this["animalSpecies"] + "/pterodactyl";
    if (this["specType"] == 0x4) _0x3e4262 += "4";
    else _0x3e4262 += this["specType"] == 0x0 ? "" : 0x1;
    return _0x3e4262;
  }),
  (_0x19e297["prototype"]["getWing"] = function (_0x513105, _0x517bb9) {
    if (!this["flag_flying"]) _0x517bb9 = _0x517bb9 + "" + _0x517bb9;
    var _0x36f98b =
      "skins/" + this["skinFolder"]() + "/" + _0x513105 + "/" + this["animalSpecies"] + "/" + _0x513105 + "_wing" + _0x517bb9 + "_nohand.png";
    return _0x36f98b;
  }),
  (_0x19e297["prototype"]["getWingBone"] = function (_0x44bb7e, _0x1ecead) {
    if (!this["flag_flying"]) _0x1ecead = _0x1ecead + "" + _0x1ecead;
    var _0x5e6290 =
      "skins/" + this["skinFolder"]() + "/" + _0x44bb7e + "/" + this["animalSpecies"] + "/" + _0x44bb7e + "_wing" + _0x1ecead + "_bones.png";
    return _0x5e6290;
  }),
  (_0x19e297["prototype"]["getHand"] = function (_0x487cda, _0x2c57b6) {
    if (!this["flag_flying"]) _0x2c57b6 = _0x2c57b6 + "" + _0x2c57b6;
    if (this["isGliding"]) _0x2c57b6 = _0x2c57b6 + "3";
    var _0x15a5f9 = "skins/" + this["skinFolder"]() + "/" + _0x487cda + "/" + this["animalSpecies"] + "/" + _0x487cda + "_hand" + _0x2c57b6 + ".png";
    return _0x15a5f9;
  }),
  (_0x19e297["prototype"]["biteStart"] = 0x0),
  (_0x19e297["prototype"]["flaps"] = 0x0),
  (_0x19e297["prototype"]["flapsMod"] = 0x5),
  (_0x19e297["prototype"]["countFlap"] = !![]),
  (_0x19e297["prototype"]["canFlap"] = !(_0x57ae6d == 0x2)),
  (_0x19e297["prototype"]["resumeFlapT"] = 0x0),
  (_0x19e297["prototype"]["lastFlapFrame"] = 0x0),
  (_0x19e297["prototype"]["flapSpeed"] = 0x1),
  (_0x19e297["prototype"]["flapAmount"] = 0.2),
  (_0x19e297["prototype"]["r"] = 22.5),
  (_0x19e297["prototype"]["ax"] = 0x0),
  (_0x19e297["prototype"]["ay"] = 0x1),
  (_0x19e297["prototype"]["ww"] = 0x4),
  (_0x19e297["prototype"]["wh"] = 2.5),
  (_0x19e297["prototype"]["ax2"] = 0x1),
  (_0x19e297["prototype"]["rf"] = -0x2),
  (_0x19e297["prototype"]["erf"] = 11.5),
  (_0x19e297["prototype"]["erf_gliding"] = 0x1e),
  (_0x19e297["prototype"]["lx"] = -0.05),
  (_0x19e297["prototype"]["famt"] = 0.5),
  (_0x19e297["prototype"]["yf"] = 0.15),
  (_0x19e297["prototype"]["xf"] = -0.2),
  (_0x19e297["prototype"]["legScale"] = 1.15),
  (_0x19e297["prototype"]["handPerc"] = 0.9),
  (_0x19e297["prototype"]["handWF"] = 0x0),
  (_0x19e297["prototype"]["set"] = ![]),
  (_0x19e297["prototype"]["wOffset"] = 0.1),
  (_0x19e297["prototype"]["headF"] = 0.5),
  (_0x19e297["prototype"]["headFDisp"] = -0.6),
  (_0x19e297["prototype"]["headScale"] = 0.8),
  (_0x19e297["prototype"]["headX"] = 0.225),
  (_0x19e297["prototype"]["drawLegs"] = function () {
    var _0x4f902e = 0x1f4 / 0x154,
      _0x10876b = this["flag_eff_aniInClaws"] ? "legs2" : "legs",
      _0x51a191 = this["getSkinImageObj"]("skins/" + this["skinFolder"]() + "/pterodactyl/" + this["animalSpecies"] + "/" + _0x10876b + ".png");
    if (_0x51a191) {
      _0x587de3["save"]();
      var _0x419916 = this["rad"];
      (_0x4f902e *= this["legScale"]),
        _0x587de3["drawImage"](
          _0x51a191,
          -_0x419916 * _0x4f902e,
          (-_0x419916 + _0x419916 * this["lx"]) * _0x4f902e,
          0x2 * _0x419916 * _0x4f902e,
          0x2 * _0x419916 * _0x4f902e
        ),
        _0x587de3["restore"]();
    }
  }),
  (_0x19e297["prototype"]["drawUnderSkinImg"] = function () {
    this["flag_usingAbility"] && (this["drawWing"](this["frame"], 0x1), this["drawWing"](this["frame"], 0x2));
    if (this["specType"] == 0x2) this["drawLegs"]();
  }),
  (_0x19e297["prototype"]["drawSkinCustomization"] = function () {
    if (this["flag_usingAbility"]) {
      this["drawBone"](this["frame"], 0x1),
        this["drawBone"](this["frame"], 0x2),
        this["drawHand"](this["frame"], 0x1),
        this["drawHand"](this["frame"], 0x2);
      var _0x42f413 = 0x1f4 / 0x154,
        _0x10dec0 = this["getHead"]("pterodactyl", ![]),
        _0x3bc0e3 = this["getSkinImageObj"](_0x10dec0);
      if (_0x3bc0e3) {
        _0x587de3["save"](), (_0x42f413 += -(0.1 * this["headF"]) * this["frame"]);
        var _0x99057 = this["rad"];
        _0x587de3["drawImage"](
          _0x3bc0e3,
          -_0x99057 * _0x42f413,
          (-_0x99057 + _0x99057 * (0.3 + this["headFDisp"] * (this["frame"] / 0xa)) + this["headF"] * this["frame"]) * _0x42f413,
          0x2 * _0x99057 * _0x42f413,
          0x2 * _0x99057 * _0x42f413
        ),
          _0x587de3["restore"]();
      }
    } else {
      if (this["animalSpecies"] == 0x64) {
        var _0x2543c2 = _0x168a54 - this["nextJawAnimT"],
          _0x366a39 = Math["trunc"](_0x2543c2 / _0x40cb1b) % 0x10;
        if (_0x168a54 < this["nextJawAnimT"]) _0x366a39 = 0x0;
        _0x366a39 >= 0xf && (this["nextJawAnimT"] = _0x168a54 + 0x1388);
        var _0x5e4b34 = this["getSkinImageObj"]("skins/desert/pterodactyl/100/mouth/pterodactyl_head" + _0x366a39 + ".png");
        if (_0x5e4b34) {
          var _0x42f413 = (0x1f4 / 0x154) * this["headScale"];
          _0x587de3["save"]();
          var _0x99057 = this["rad"];
          _0x587de3["drawImage"](
            _0x5e4b34,
            -_0x99057 * _0x42f413,
            (-_0x99057 + _0x99057 * this["headX"]) * _0x42f413,
            0x2 * _0x99057 * _0x42f413,
            0x2 * _0x99057 * _0x42f413
          ),
            _0x587de3["restore"]();
        }
      } else {
        var _0x10dec0 = this["getHead"]("pterodactyl", ![]),
          _0x3bc0e3 = this["getSkinImageObj"](_0x10dec0);
        if (_0x3bc0e3) {
          var _0x42f413 = (0x1f4 / 0x154) * this["headScale"];
          _0x587de3["save"]();
          var _0x99057 = this["rad"];
          _0x587de3["drawImage"](
            _0x3bc0e3,
            -_0x99057 * _0x42f413,
            (-_0x99057 + _0x99057 * this["headX"]) * _0x42f413,
            0x2 * _0x99057 * _0x42f413,
            0x2 * _0x99057 * _0x42f413
          ),
            _0x587de3["restore"]();
        }
      }
    }
  }),
  (_0x19e297["prototype"]["nextJawAnimT"] = 0x0);
var _0x40cb1b = 0x46;
(_0x19e297["prototype"]["drawWing"] = function (_0x5b14e6, _0x1e3818) {
  var _0x150a01 = _0x1e3818 == 0x1 ? 0x1 : -0x1,
    _0x47ae83 = this["getSkinImageObj"](this["getWing"]("pterodactyl", _0x1e3818));
  if (_0x47ae83) {
    var _0x264359 = -(-0.2 + _0x5b14e6) * _0x3d960f(_0x150a01 * this["r"]),
      _0x195647 = this["rad"] * 0.8,
      _0x571e2a = 0x0,
      _0x2c52ad = this["rad"],
      _0x791e8f = _0x195647 * this["ww"],
      _0x3d9c3e = _0x195647 * this["wh"],
      _0x34b715 = _0x1e3818 == 0x1 ? this["ax"] : this["ax2"],
      _0x556cf4 = this["ay"] + this["yf"] * _0x5b14e6;
    _0x587de3["save"](), (_0x264359 *= this["rf"]);
    var _0x1558dc = this["isGliding"] ? this["erf_gliding"] : this["erf"];
    _0x587de3["rotate"](_0x3d960f(_0x150a01 * _0x1558dc) + _0x264359);
    var _0x18b579 = _0x5b14e6 * _0x791e8f * _0x150a01 * this["wOffset"];
    _0x587de3["drawImage"](_0x47ae83, _0x571e2a + _0x791e8f * -_0x34b715 + _0x18b579, _0x2c52ad + _0x3d9c3e * -_0x556cf4, _0x791e8f, _0x3d9c3e),
      _0x587de3["restore"]();
  }
}),
  (_0x19e297["prototype"]["drawBone"] = function (_0x2c9648, _0x29333f) {
    var _0x55479c = this["getSkinImageObj"](this["getWingBone"]("pterodactyl", _0x29333f)),
      _0x55332d = _0x29333f == 0x1 ? 0x1 : -0x1;
    if (_0x55479c) {
      var _0x29aadd = -(-0.2 + _0x2c9648) * _0x3d960f(_0x55332d * this["r"]),
        _0x3d68ce = this["rad"] * 0.8,
        _0x445691 = 0x0,
        _0x1aa157 = this["rad"],
        _0x2ccd30 = _0x3d68ce * this["ww"],
        _0x34d59b = _0x3d68ce * this["wh"],
        _0x563cd5 = _0x29333f == 0x1 ? this["ax"] : this["ax2"],
        _0x1784a6 = this["ay"] + this["yf"] * _0x2c9648;
      _0x587de3["save"](), (_0x29aadd *= this["rf"]);
      var _0xf11131 = this["isGliding"] ? this["erf_gliding"] : this["erf"];
      _0x587de3["rotate"](_0x3d960f(_0x55332d * _0xf11131) + _0x29aadd);
      var _0x10a654 = _0x2c9648 * _0x2ccd30 * _0x55332d * this["wOffset"];
      _0x587de3["drawImage"](_0x55479c, _0x445691 + _0x2ccd30 * -_0x563cd5 + _0x10a654, _0x1aa157 + _0x34d59b * -_0x1784a6, _0x2ccd30, _0x34d59b),
        _0x587de3["restore"]();
    }
  });
var _0x1644a4 = 0x0;
(_0x19e297["prototype"]["drawHand"] = function (_0x170272, _0x43a96e) {
  var _0x45036c = _0x43a96e == 0x1 ? 0x1 : -0x1,
    _0x2c3fd6 = this["getSkinImageObj"](this["getHand"]("pterodactyl", _0x43a96e));
  if (_0x2c3fd6) {
    var _0x32b4dc = -(-0.2 + _0x170272) * _0x3d960f(_0x45036c * this["r"]),
      _0x39426b = this["rad"] * 0.8,
      _0x26897e = 0x0,
      _0x2ce23c = this["rad"],
      _0x4d5546 = _0x39426b * this["ww"],
      _0xaee92c = _0x39426b * this["wh"] + (!this["flag_flying"] ? this["wh"] * _0x1644a4 : 0x0),
      _0x55aca9 = _0x45036c == 0x1 ? this["ax"] : this["ax2"],
      _0x3793f8 = _0x55aca9 + _0x45036c * this["xf"] * _0x170272,
      _0x1bf963 = this["ay"] + this["yf"] * _0x170272;
    _0x32b4dc *= this["rf"];
    var _0x32b194 = this["isGliding"] ? this["erf_gliding"] : this["erf"];
    _0x587de3["save"](),
      this["drawImage"](
        _0x2c3fd6,
        _0x26897e + _0x4d5546 * -_0x3793f8,
        _0x2ce23c + _0xaee92c * -_0x1bf963,
        _0x4d5546 + _0x4d5546 * _0x45036c * this["handWF"],
        _0xaee92c,
        _0x3d960f(_0x45036c * _0x32b194) + _0x32b4dc
      ),
      _0x587de3["restore"]();
  }
}),
  (_0x19e297["prototype"]["frame"] = 0x0),
  (_0x19e297["prototype"]["lastFlapFrame"] = 0x0),
  (_0x19e297["prototype"]["getFrame"] = function () {
    if (!this["canFlap"] && this["flag_flying"] && _0x168a54 > this["resumeFlapT"]) this["canFlap"] = !![];
    var _0x355c94 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
      _0x903cd2 =
        !(_0x57ae6d == 0x2) && this["canFlap"]
          ? _0x120bbb(_0x355c94, this["flapSpeed"], this["flapAmount"] * this["handPerc"], 0x2)
          : this["birdNoAnimationFlyWingAngle"];
    if (this["flag_flying"] && _0x903cd2 < 0x0 && this["countFlap"])
      (this["countFlap"] = ![]),
        this["flaps"]++,
        this["flaps"] % this["flapsMod"] == 0x0 &&
          ((this["lastFlapFrame"] = _0x903cd2), (this["canFlap"] = ![]), (this["resumeFlapT"] = +new Date() + 0x5dc));
    else _0x903cd2 > 0x0 && !this["countFlap"] && (this["countFlap"] = !![]);
    if (!this["canFlap"]) _0x903cd2 = this["lastFlapFrame"];
    else this["lastFlapFrame"] = _0x903cd2;
    return _0x903cd2;
  }),
  (_0x19e297["prototype"]["beforeCustomDraw"] = function () {
    if (!this["flag_usingAbility"]) return;
    !this["flag_flying"] && !this["set"]
      ? ((this["set"] = !![]), (this["r"] = 11.25), (this["erf"] = 5.75), (this["ww"] = 3.5))
      : this["flag_flying"] && this["set"] && ((this["set"] = ![]), (this["r"] = 22.5), (this["erf"] = 11.5), (this["ww"] = 4.5)),
      this["isGliding"] ? (this["flapAmount"] = 0x0) : (this["flapAmount"] = this["famt"]),
      (this["frame"] = this["getFrame"]());
  }),
  (_0x19e297["prototype"]["updateZ"] = function () {
    if (this["flag_eff_grabbedByFlytrap"]) this["z"] = 0x44c + this["rad"];
    else {
      if (!this["flag_flying"] && this["flag_usingAbility"] && !this["flag_underWater"]) this["z"] = 0x4b0 + this["rad"];
      else {
        if (this["flag_flying"] || this["flag_eff_tossedInAir"]) {
          this["z"] = 0x1adb0;
          if (this["flag_isGrabbed"]) this["z"] -= this["rad"];
          else this["z"] += this["rad"];
          if (this["flag_eff_aniInClaws"]) this["z"] += 0x64;
        } else this["z"] = 0x3e8 + this["rad"];
      }
    }
  }),
  (_0x19e297["prototype"]["getAbilityInfo"] = function (_0xd0daae) {
    var _0x2106df = {};
    return (
      (_0x2106df["abilName"] = "Dive Attack\x0a(Fly with Prey)"),
      (_0x2106df["abilImg"] = "abilities/SkyDive.svg"),
      (_0x2106df["skinThemeID"] = this["skinThemeID"]),
      (_0x2106df["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x2106df
    );
  }),
  (_0x19e297["prototype"]["readCustomData_onNewlyVisible"] = function (_0x179d35) {
    _0x19e297["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x179d35),
      (this["isGliding"] = _0x179d35["readUInt8"]() == 0x1);
  }),
  (_0x19e297["prototype"]["customUpdatedProperty"] = function (_0x1daf48, _0xd02d0a) {
    this["isGliding"] = _0xd02d0a["readUInt8"]() == 0x1;
  });

function _0x19e297() {
  _0x19e297["superClass"]["call"](this, _0x3fb3b2);
}
(window["Pterodactyl"] = _0x19e297), _0x17bf26["setCustomClassForGameObjType"](_0x19e297, _0x3fb3b2, _0x510716);
var _0x48c344 = _0x3799d1;
(_0xc002eb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0xc002eb["prototype"]["constructor"] = _0xc002eb),
  (_0xc002eb["superClass"] = _0x48c344),
  (_0xc002eb["prototype"]["animalInfo"] = function () {
    var _0x58322d = {};
    return (
      (_0x58322d["aniName"] = "Bullet Ant"),
      (_0x58322d["aniCol"] = "#FF9000"),
      (_0x58322d["skinName"] = "desert/bulletant/bulletant"),
      (_0x58322d["upgradeText"] = "UPGRADED to " + _0x58322d["aniName"] + "!\x0aHold 'W' to pick anything and take to your Anthill."),
      _0x58322d
    );
  });
var _0x16edaf = 0x1;
_0xc002eb["prototype"]["drawSkinCustomization"] = function () {
  var _0x4befc6 = "skins/desert/bulletant/head.png",
    _0x299059 = this["getSkinImageObj"](_0x4befc6);
  if (_0x299059) {
    var _0x1e7979 = this["skinScale"] * 1.2,
      _0x14fe23 = this["skinRad"];
    _0x587de3["drawImage"](
      _0x299059,
      -_0x14fe23 * _0x1e7979,
      (-_0x14fe23 + _0x14fe23 * 0.3) * _0x1e7979,
      0x2 * _0x14fe23 * _0x1e7979,
      0x2 * _0x14fe23 * _0x1e7979
    );
  }
};
var _0x341217 = -0.7;
(_0xc002eb["prototype"]["drawUnderSkinImg"] = function () {
  var _0x443c05 = "skins/desert/bulletant/abdomen.png",
    _0x4a1775 = this["getSkinImageObj"](_0x443c05);
  if (_0x4a1775) {
    var _0x30c7ca = this["skinScale"] * 0.9,
      _0x1f5fb9 = this["skinRad"];
    _0x587de3["drawImage"](
      _0x4a1775,
      -_0x1f5fb9 * _0x30c7ca,
      (-_0x1f5fb9 + _0x1f5fb9 * _0x341217) * _0x30c7ca,
      0x2 * _0x1f5fb9 * _0x30c7ca,
      0x2 * _0x1f5fb9 * _0x30c7ca
    );
  }
}),
  (_0xc002eb["prototype"]["getSkinName"] = function () {
    var _0x5f504e = "desert/bulletant/body";
    return _0x5f504e;
  });

function _0xc002eb() {
  _0xc002eb["superClass"]["call"](this, _0x3fb3b2);
}
(window["BulletAnt"] = _0xc002eb), _0x17bf26["setCustomClassForGameObjType"](_0xc002eb, _0x3fb3b2, _0x30fd4c);
var _0x48c344 = _0x307a43;
(_0x11690b["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x11690b["prototype"]["constructor"] = _0x11690b),
  (_0x11690b["superClass"] = _0x48c344),
  (_0x11690b["prototype"]["FlytrapType"] = 0x0),
  (_0x11690b["prototype"]["updateZ"] = function () {
    this["z"] = 0x64;
  }),
  (_0x11690b["prototype"]["getSkinFolder"] = function (_0x4f1613) {
    return "desert/flytrap";
  }),
  (_0x11690b["prototype"]["customDraw"] = function (_0x56e3cc) {
    _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0x1);
    var _0x36d107 = this["getSkinImageObj"]("img/" + this["getSkinFolder"]() + "/base.png");
    if (_0x36d107) {
      var _0x42fff7 = this["rad"] * 1.25;
      _0x587de3["drawImage"](_0x36d107, -_0x42fff7, -_0x42fff7, 0x2 * _0x42fff7, 0x2 * _0x42fff7);
    }
    _0x587de3["restore"]();
  });

function _0x11690b() {
  _0x11690b["superClass"]["call"](this, _0x991c21), (this["drawEffectScale_Slow"] = !![]);
}
(window["Flytrap"] = _0x11690b), _0x17bf26["setCustomClassForGameObjType"](_0x11690b, _0x991c21);
var _0x48c344 = _0x307a43;
(_0x42636f["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x42636f["prototype"]["constructor"] = _0x42636f),
  (_0x42636f["superClass"] = _0x48c344),
  (_0x42636f["prototype"]["FlytrapMouthType"] = 0x0),
  (_0x42636f["prototype"]["updateZ"] = function () {
    this["z"] = 0x44c + this["rad"];
  });
var _0x2a303c = 0x8c,
  _0x5d050f = 1.25,
  _0x42d4ea = 2.5,
  _0x4396f4 = 1.25,
  _0x59cb12 = 1.5,
  _0x4fe5f0 = 0xb4,
  _0x48d4de = 1.5,
  _0x2f3870 = 0x1,
  _0x567fb7 = 0x1,
  _0xd735b8 = 0x0,
  _0x1250b1 = 0x0,
  _0x16e563 = -0xa0,
  _0xeeb969 = 0x1,
  _0x537c10 = 0x0;
(_0x42636f["prototype"]["topA"] = 0xb4),
  (_0x42636f["prototype"]["botA"] = 0xb4),
  (_0x42636f["prototype"]["distBeforeAttack"] = 0x0),
  (_0x42636f["prototype"]["maxDist"] = 0x0),
  (_0x42636f["prototype"]["distCovered"] = 0x0),
  (_0x42636f["prototype"]["isAttacking"] = ![]),
  (_0x42636f["prototype"]["isMouthClosed"] = ![]),
  (_0x42636f["prototype"]["grabbedAni"] = ![]),
  (_0x42636f["prototype"]["getSkinFolder"] = function (_0x39718c) {
    return "desert/flytrap";
  }),
  (_0x42636f["prototype"]["beforeCustomDraw"] = function (_0x373a7e) {
    if (!this["dead"]) {
      var _0x549a4f = this["getSkinImageObj"]("img/" + this["getSkinFolder"]() + "/mouth/stem.png");
      if (_0x549a4f) {
        var _0x2e9c14 = this["rad"];
        _0x587de3["save"](), _0x587de3["translate"](this["anchor_x"], this["anchor_y"]), _0x587de3["rotate"](this["angle"] - _0x3d960f(_0x4fe5f0));
        var _0x51561f = _0xdae8c3(
          {
            x: this["x"],
            y: this["y"],
          },
          {
            x: this["anchor_x"],
            y: this["anchor_y"],
          }
        );
        _0x587de3["drawImage"](_0x549a4f, -_0x2e9c14 * _0x5d050f, -_0x2e9c14, 0x2 * _0x2e9c14 * _0x4396f4, 0x2 * _0x2e9c14 + _0x51561f),
          _0x587de3["restore"]();
      }
    }
  }),
  (_0x42636f["prototype"]["customDraw"] = function (_0x37a2dd) {
    _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0x1);
    var _0x15bca6 = "bottom" + (this["isKillable"] ? "_e" : ""),
      _0x44a4ff = this["getSkinImageObj"]("img/" + this["getSkinFolder"]() + "/mouth/" + _0x15bca6 + ".png");
    if (_0x44a4ff) {
      var _0x146eb7 = this["rad"];
      _0x587de3["save"](),
        _0x587de3["rotate"](this["angle"] - _0x3d960f(this["botA"])),
        _0x587de3["drawImage"](_0x44a4ff, -_0x146eb7 * _0x567fb7, -_0x146eb7 * _0x567fb7, 0x2 * _0x146eb7, 0x2 * _0x146eb7),
        _0x587de3["restore"]();
    }
    if (!this["grabbedAni"]) {
      var _0x318043 = this["isMouthClosed"] ? "closed" : "top",
        _0x44a4ff = this["getSkinImageObj"]("img/" + this["getSkinFolder"]() + "/mouth/" + _0x318043 + ".png");
      if (_0x44a4ff) {
        var _0x146eb7 = this["rad"];
        {
          _0x587de3["save"](),
            _0x587de3["rotate"](this["angle"] - _0x3d960f(this["topA"])),
            _0x587de3["drawImage"](_0x44a4ff, -_0x146eb7 * _0x2f3870, -_0x146eb7 * _0x2f3870, 0x2 * _0x146eb7, 0x2 * _0x146eb7),
            _0x587de3["restore"]();
        }
      }
    }
    _0x587de3["restore"]();
  }),
  (_0x42636f["prototype"]["isAttacking"] = ![]),
  (_0x42636f["prototype"]["isMouthClosed"] = ![]),
  (_0x42636f["prototype"]["grabbedAni"] = ![]),
  (_0x42636f["prototype"]["readCustomData_onNewlyVisible"] = function (_0x3c5eed) {
    _0x42636f["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x3c5eed);
    var _0x6776c = _0x3c5eed["readBitGroup"]();
    (this["isAttacking"] = _0x6776c["getBool"]()),
      (this["isMouthClosed"] = _0x6776c["getBool"]()),
      (this["grabbedAni"] = _0x6776c["getBool"]()),
      (this["anchor_x"] = _0x3c5eed["readUInt16"]() / 0x4),
      (this["anchor_y"] = _0x3c5eed["readUInt16"]() / 0x4);
  }),
  (_0x42636f["prototype"]["readUpdatedProperty"] = function (_0x863078, _0x16c279) {
    _0x863078 == _0x594375 && (this["isAttacking"] = _0x16c279["readUInt8"]() == 0x1),
      _0x863078 == _0x13fe8c && (this["isMouthClosed"] = _0x16c279["readUInt8"]() == 0x1),
      _0x863078 == _0x56be9b && (this["grabbedAni"] = _0x16c279["readUInt8"]() == 0x1);
  });

function _0x42636f() {
  _0x42636f["superClass"]["call"](this, _0x33cf0e), (this["doesDrawEffectScale"] = this["drawEffectScale_Slow"] = !![]);
}
(window["FlytrapMouth"] = _0x42636f), _0x17bf26["setCustomClassForGameObjType"](_0x42636f, _0x33cf0e);
var _0x48c344 = _0x307a43;
(_0x144263["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x144263["prototype"]["constructor"] = _0x144263),
  (_0x144263["superClass"] = _0x48c344),
  (_0x144263["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"];
  }),
  (_0x144263["prototype"]["customDraw"] = function (_0x19587e) {
    var _0x321982 = this["isEdibleOutlined"]() ? "e" : this["oType"],
      _0x2805e1 = this["getSkinImageObj"]("gameobj/" + this["oType"] + "/" + _0x321982 + ".png");
    if (_0x2805e1) {
      _0x587de3["save"]();
      var _0x1ae817 = this["rad"] * 1.2;
      _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
        _0x587de3["drawImage"](_0x2805e1, -_0x1ae817, -_0x1ae817, _0x1ae817 * 0x2, _0x1ae817 * 0x2),
        _0x587de3["restore"]();
    }
  });

function _0x144263() {
  _0x144263["superClass"]["call"](this, _0x4f76cd), (this["doesDrawEffectScale"] = ![]);
}
(window["AloeveraLeaf"] = _0x144263), _0x17bf26["setCustomClassForGameObjType"](_0x144263, _0x4f76cd);
var _0x48c344 = _0x307a43;
(_0x5168c8["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x5168c8["prototype"]["constructor"] = _0x5168c8),
  (_0x5168c8["superClass"] = _0x48c344),
  (_0x5168c8["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"];
  }),
  (_0x5168c8["prototype"]["customDraw"] = function (_0x1fa313) {
    var _0x487fc5 = this["isEdibleOutlined"]() ? "e" : this["oType"],
      _0x342d8f = this["getSkinImageObj"]("gameobj/" + this["oType"] + "/" + _0x487fc5 + ".png");
    if (_0x342d8f) {
      _0x587de3["save"]();
      var _0x38c938 = this["rad"] * 1.15;
      _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
        _0x587de3["drawImage"](_0x342d8f, -_0x38c938, -_0x38c938, _0x38c938 * 0x2, _0x38c938 * 0x2),
        _0x587de3["restore"]();
    }
  });

function _0x5168c8() {
  _0x5168c8["superClass"]["call"](this, _0x6efdf8), (this["doesDrawEffectScale"] = this["drawEffectScale_Slow"] = ![]);
}
(window["AloeveraPlant"] = _0x5168c8), _0x17bf26["setCustomClassForGameObjType"](_0x5168c8, _0x6efdf8);
var _0x48c344 = _0x307a43;
(_0x1ebc15["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1ebc15["prototype"]["constructor"] = _0x1ebc15),
  (_0x1ebc15["superClass"] = _0x48c344),
  (_0x1ebc15["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"];
  }),
  (_0x1ebc15["prototype"]["customDraw"] = function (_0x596828) {
    var _0x4762c1 = this["isEdibleOutlined"]() ? "e" : this["oType"],
      _0x41223a = this["getSkinImageObj"]("gameobj/" + this["oType"] + "/" + _0x4762c1 + ".png");
    if (_0x41223a) {
      _0x587de3["save"]();
      var _0x386d6e = this["rad"] * 1.15;
      _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
        _0x587de3["drawImage"](_0x41223a, -_0x386d6e, -_0x386d6e, _0x386d6e * 0x2, _0x386d6e * 0x2),
        _0x587de3["restore"]();
    }
  });

function _0x1ebc15() {
  _0x1ebc15["superClass"]["call"](this, _0x40a3d9), (this["doesDrawEffectScale"] = this["drawEffectScale_Slow"] = ![]);
}
(window["Cactus"] = _0x1ebc15), _0x17bf26["setCustomClassForGameObjType"](_0x1ebc15, _0x40a3d9);
var _0x48c344 = _0x307a43;
(_0x29fec8["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x29fec8["prototype"]["constructor"] = _0x29fec8),
  (_0x29fec8["superClass"] = _0x48c344),
  (_0x29fec8["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"];
  }),
  (_0x29fec8["prototype"]["customDraw"] = function (_0x572c96) {
    var _0x414411 = this["isEdibleOutlined"]() ? "e" : this["curBiome"];
    _0x414411 = "gameobj/" + this["oType"] + "/" + _0x414411 + ".png";
    var _0x5ebe9a = this["getSkinImageObj"](_0x414411);
    if (_0x5ebe9a) {
      _0x587de3["save"]();
      var _0x2ba63f = this["rad"];
      _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
        _0x587de3["drawImage"](_0x5ebe9a, -_0x2ba63f, -_0x2ba63f, _0x2ba63f * 0x2, _0x2ba63f * 0x2),
        _0x587de3["restore"]();
    }
  });

function _0x29fec8() {
  _0x29fec8["superClass"]["call"](this, _0x2c74b8), (this["doesDrawEffectScale"] = ![]);
}
(window["CactusPear"] = _0x29fec8), _0x17bf26["setCustomClassForGameObjType"](_0x29fec8, _0x2c74b8);
var _0x48c344 = _0x307a43;
(_0x66799c["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x66799c["prototype"]["constructor"] = _0x66799c),
  (_0x66799c["superClass"] = _0x48c344),
  (_0x66799c["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"];
  }),
  (_0x66799c["prototype"]["customDraw"] = function (_0x3e47e5) {
    var _0x13e081 = this["isEdibleOutlined"]() ? "e" : this["oType"],
      _0x37689c = this["getSkinImageObj"]("gameobj/" + this["oType"] + "/" + _0x13e081 + ".png");
    if (_0x37689c) {
      _0x587de3["save"]();
      var _0x50bb41 = this["rad"];
      _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
        _0x587de3["drawImage"](_0x37689c, -_0x50bb41, -_0x50bb41, _0x50bb41 * 0x2, _0x50bb41 * 0x2),
        _0x587de3["restore"]();
    }
  });

function _0x66799c() {
  _0x66799c["superClass"]["call"](this, _0x194737), (this["doesDrawEffectScale"] = ![]);
}
(window["DateFruit"] = _0x66799c), _0x17bf26["setCustomClassForGameObjType"](_0x66799c, _0x194737);
var _0x48c344 = _0x307a43;
(_0x1176a4["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1176a4["prototype"]["constructor"] = _0x1176a4),
  (_0x1176a4["superClass"] = _0x48c344),
  (_0x1176a4["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"];
  }),
  (_0x1176a4["prototype"]["customDraw"] = function (_0x1d619c) {
    var _0x84d61d = this["isEdibleOutlined"]() ? "e" : this["oType"],
      _0x1111aa = this["getSkinImageObj"]("gameobj/" + this["oType"] + "/" + _0x84d61d + ".png");
    if (_0x1111aa) {
      _0x587de3["save"]();
      var _0x2887e7 = this["rad"];
      _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
        _0x587de3["drawImage"](_0x1111aa, -_0x2887e7, -_0x2887e7, _0x2887e7 * 0x2, _0x2887e7 * 0x2),
        _0x587de3["restore"]();
    }
  });

function _0x1176a4() {
  _0x1176a4["superClass"]["call"](this, _0x5caf5d), (this["doesDrawEffectScale"] = ![]);
}
(window["Mango"] = _0x1176a4), _0x17bf26["setCustomClassForGameObjType"](_0x1176a4, _0x5caf5d);
var _0x48c344 = _0x307a43;
(_0x7489d1["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x7489d1["prototype"]["constructor"] = _0x7489d1),
  (_0x7489d1["superClass"] = _0x48c344),
  (_0x7489d1["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"];
  }),
  (_0x7489d1["prototype"]["customDraw"] = function (_0x2817c2) {
    var _0x20dc27 = this["isEdibleOutlined"]() ? "e" : this["oType"],
      _0x183998 = this["getSkinImageObj"]("gameobj/" + this["oType"] + "/" + _0x20dc27 + ".png");
    if (_0x183998) {
      _0x587de3["save"]();
      var _0x463039 = this["rad"];
      _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
        _0x587de3["drawImage"](_0x183998, -_0x463039, -_0x463039, _0x463039 * 0x2, _0x463039 * 0x2),
        _0x587de3["restore"]();
    }
  });

function _0x7489d1() {
  _0x7489d1["superClass"]["call"](this, _0x39e246), (this["doesDrawEffectScale"] = ![]);
}
(window["Melon"] = _0x7489d1), _0x17bf26["setCustomClassForGameObjType"](_0x7489d1, _0x39e246);
var _0x48c344 = _0x307a43;
(_0x56206c["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x56206c["prototype"]["constructor"] = _0x56206c),
  (_0x56206c["superClass"] = _0x48c344),
  (_0x56206c["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"];
  }),
  (_0x56206c["prototype"]["customDraw"] = function (_0x1bef1c) {
    var _0x1a8286 = this["isEdibleOutlined"]() ? "e" : this["oType"],
      _0x50f1ed = this["getSkinImageObj"]("gameobj/" + this["oType"] + "/" + _0x1a8286 + ".png");
    if (_0x50f1ed) {
      _0x587de3["save"]();
      var _0x5bd7b0 = this["rad"];
      _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
        _0x587de3["drawImage"](_0x50f1ed, -_0x5bd7b0, -_0x5bd7b0, _0x5bd7b0 * 0x2, _0x5bd7b0 * 0x2),
        _0x587de3["restore"]();
    }
  });

function _0x56206c() {
  _0x56206c["superClass"]["call"](this, _0x502ba3), (this["doesDrawEffectScale"] = ![]);
}
(window["MelonSlice"] = _0x56206c), _0x17bf26["setCustomClassForGameObjType"](_0x56206c, _0x502ba3);
var _0x48c344 = _0x307a43;
(_0x4c273f["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x4c273f["prototype"]["constructor"] = _0x4c273f),
  (_0x4c273f["superClass"] = _0x48c344),
  (_0x4c273f["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"];
  }),
  (_0x4c273f["prototype"]["customDraw"] = function (_0x27450a) {
    var _0x5b111b = this["isEdibleOutlined"]() ? "e" : this["oType"],
      _0x3c3793 = this["getSkinImageObj"]("gameobj/" + this["oType"] + "/" + _0x5b111b + ".png");
    if (_0x3c3793) {
      _0x587de3["save"]();
      var _0xa5284f = this["rad"];
      _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
        _0x587de3["drawImage"](_0x3c3793, -_0xa5284f, -_0xa5284f, _0xa5284f * 0x2, _0xa5284f * 0x2),
        _0x587de3["restore"]();
    }
  }),
  (_0x4c273f["prototype"]["updateZ"] = function () {
    this["z"] = 0x3e8 + this["rad"];
  });

function _0x4c273f() {
  _0x4c273f["superClass"]["call"](this, _0x4434c8), (this["doesDrawEffectScale"] = ![]);
}
(window["Orange"] = _0x4c273f), _0x17bf26["setCustomClassForGameObjType"](_0x4c273f, _0x4434c8);
var _0x48c344 = _0x307a43;
(_0x59ce63["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x59ce63["prototype"]["constructor"] = _0x59ce63),
  (_0x59ce63["superClass"] = _0x48c344),
  (_0x59ce63["prototype"]["updateZ"] = function () {
    this["z"] = -0x9e;
  }),
  (_0x59ce63["prototype"]["customDraw"] = function (_0x4f5d65) {
    _0x587de3["save"]();
    if (!(_0x57ae6d == 0x2)) _0x587de3["rotate"](this["rPer"] * 0x2 * Math["PI"]);
    var _0x36f910 = 0x0,
      _0x5c99d0 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
      _0x30d373 = 0x6,
      _0xbf0186 = 1.5;
    _0x36f910 = _0xbf0186 * Math["sin"](((0x2 * Math["PI"]) / _0x30d373) * _0x5c99d0);
    var _0x8ee891 = 0x4;
    _0x4f5d65
      ? ((_0x587de3["fillStyle"] = "#b0a13b"),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](0x0, 0x0, this["rad"], 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"]())
      : ((_0x587de3["fillStyle"] = "#bdae47"),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, this["rad"] - _0x8ee891 + _0x36f910), 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        !(_0x57ae6d == 0x2) &&
          (_0x587de3["beginPath"](),
          _0x587de3["arc"](
            this["rad"] * 0.45,
            -this["rad"] * 0.45 + 0xf * this["rPer"],
            Math["max"](0x0, this["rad"] * 0.5 + _0x36f910),
            0x0,
            0x2 * Math["PI"]
          ),
          _0x587de3["fill"](),
          _0x587de3["beginPath"](),
          _0x587de3["arc"](
            this["rad"] * 0.5,
            this["rad"] * 0.5 + 0xf * this["rPer"],
            Math["max"](0x0, this["rad"] * 0.4 + _0x36f910),
            0x0,
            0x2 * Math["PI"]
          ),
          _0x587de3["fill"](),
          _0x587de3["beginPath"](),
          _0x587de3["arc"](
            -this["rad"] * 0.55 * 0.707,
            +this["rad"] * 0.55 * 0.707 + 0xf * this["rPer"],
            Math["max"](0x0, this["rad"] * 0.5 + _0x36f910),
            0x0,
            0x2 * Math["PI"]
          ),
          _0x587de3["fill"](),
          _0x587de3["beginPath"](),
          _0x587de3["arc"](
            -this["rad"] * 0.75,
            -this["rad"] * 0.35 + 0xf * this["rPer"],
            Math["max"](0x0, this["rad"] * 0.3 + _0x36f910),
            0x0,
            0x2 * Math["PI"]
          ),
          _0x587de3["fill"](),
          this["rad"] > 0x32 &&
            (_0x587de3["beginPath"](),
            _0x587de3["arc"](this["rad"] + 0xa * this["rPer"], 0x32 * this["rPer"], 0x8, 0x0, 0x2 * Math["PI"]),
            _0x587de3["fill"](),
            _0x587de3["beginPath"](),
            _0x587de3["arc"](this["rad"] - 0x14 * this["rPer"], 0x32 * this["rPer"], 0xa, 0xa, 0x0, 0x2 * Math["PI"]),
            _0x587de3["fill"]()))),
      _0x587de3["restore"]();
  });

function _0x59ce63() {
  _0x59ce63["superClass"]["call"](this, _0x4db207), (this["animateRadOnSpawn"] = ![]);
}
(window["Quicksand"] = _0x59ce63), _0x17bf26["setCustomClassForGameObjType"](_0x59ce63, _0x4db207);
var _0x48c344 = _0x307a43;
(_0x2057ba["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x2057ba["prototype"]["constructor"] = _0x2057ba),
  (_0x2057ba["superClass"] = _0x48c344),
  (_0x2057ba["prototype"]["updateZ"] = function () {
    this["z"] = -0x9e;
  }),
  (_0x2057ba["prototype"]["customDraw"] = function (_0x401c84) {
    var _0x592a1e = 0x4;
    _0x587de3["save"]();
    if (!(_0x57ae6d == 0x2)) _0x587de3["rotate"](this["rPer"] * 0x2 * Math["PI"]);
    var _0x5d8b4f = 0x0,
      _0xfcded1 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
      _0x283186 = 0x6,
      _0x5e0a1b = 1.5;
    _0x5d8b4f = _0x5e0a1b * Math["sin"](((0x2 * Math["PI"]) / _0x283186) * _0xfcded1);
    if (this["isOasisWater"] && _0x401c84)
      (_0x587de3["fillStyle"] = "#AE9F43"),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](0x0, 0x0, this["rad"], 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"]();
    else {
      var _0x3fab18 = "#3881C4",
        _0x592a1e = 0x4;
      (_0x587de3["fillStyle"] = this["isOasisWater"] ? _0x3fab18 : "#AE9F43"),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](0x0, 0x0, this["rad"], 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        !(_0x57ae6d == 0x2) &&
          ((_0x587de3["fillStyle"] = this["isOasisWater"] ? _0x3fab18 : "#bdae47"),
          _0x587de3["beginPath"](),
          _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, this["rad"] - _0x592a1e + _0x5d8b4f), 0x0, Math["PI"] * 0x2),
          _0x587de3["fill"](),
          _0x587de3["beginPath"](),
          _0x587de3["arc"](
            this["rad"] * 0.45,
            -this["rad"] * 0.45 + 0xf * this["rPer"],
            Math["max"](0x0, this["rad"] * 0.5 + _0x5d8b4f),
            0x0,
            0x2 * Math["PI"]
          ),
          _0x587de3["fill"](),
          _0x587de3["beginPath"](),
          _0x587de3["arc"](
            this["rad"] * 0.5,
            this["rad"] * 0.5 + 0xf * this["rPer"],
            Math["max"](0x0, this["rad"] * 0.4 + _0x5d8b4f),
            0x0,
            0x2 * Math["PI"]
          ),
          _0x587de3["fill"](),
          _0x587de3["beginPath"](),
          _0x587de3["arc"](
            -this["rad"] * 0.55 * 0.707,
            +this["rad"] * 0.55 * 0.707 + 0xf * this["rPer"],
            Math["max"](0x0, this["rad"] * 0.5 + _0x5d8b4f),
            0x0,
            0x2 * Math["PI"]
          ),
          _0x587de3["fill"](),
          _0x587de3["beginPath"](),
          _0x587de3["arc"](
            -this["rad"] * 0.75,
            -this["rad"] * 0.35 + 0xf * this["rPer"],
            Math["max"](0x0, this["rad"] * 0.3 + _0x5d8b4f),
            0x0,
            0x2 * Math["PI"]
          ),
          _0x587de3["fill"](),
          this["rad"] > 0x32 &&
            (_0x587de3["beginPath"](),
            _0x587de3["arc"](this["rad"] + 0xa * this["rPer"], 0x32 * this["rPer"], 0x8, 0x0, 0x2 * Math["PI"]),
            _0x587de3["fill"](),
            _0x587de3["beginPath"](),
            _0x587de3["arc"](this["rad"] - 0x14 * this["rPer"], 0x32 * this["rPer"], 0xa, 0xa, 0x0, 0x2 * Math["PI"]),
            _0x587de3["fill"]()));
    }
    _0x587de3["restore"]();
  }),
  (_0x2057ba["prototype"]["afterCustomDraw"] = function () {});

function _0x2057ba() {
  _0x2057ba["superClass"]["call"](this, _0x41931f), (this["animateRadOnSpawn"] = ![]);
}
(_0x2057ba["prototype"]["readCustomData_onNewlyVisible"] = function (_0x3fc7e8) {
  _0x2057ba["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x3fc7e8),
    (this["isOasisWater"] = _0x3fc7e8["readUInt8"]() == 0x1);
}),
  (_0x2057ba["prototype"]["readUpdatedProperty"] = function (_0x3578bd, _0xef2319) {
    if (_0x3578bd == _0x365987) {
      var _0x564121 = _0xef2319["readUInt16"]() / 0xa;
      this["setNewRad"](_0x564121);
    }
  }),
  (_0x2057ba["prototype"]["circles"] = new Array()),
  (_0x2057ba["prototype"]["isOasisWater"] = ![]),
  (window["Oasis"] = _0x2057ba),
  _0x17bf26["setCustomClassForGameObjType"](_0x2057ba, _0x41931f);
var _0x33db3a = _0x33db3a,
  _0x48c344 = _0x3799d1;
(_0x33db3a["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x33db3a["prototype"]["constructor"] = _0x33db3a),
  (_0x33db3a["superClass"] = _0x48c344),
  (_0x33db3a["prototype"]["getSkinName"] = function () {
    let _0x5f1e20 = this["getSpeciesPath"]() + "/lion";
    return (_0x5f1e20 += this["specType"] == 0x0 ? "" : this["specType"]), _0x5f1e20;
  }),
  (_0x33db3a["prototype"]["getSpeciesPath"] = function () {
    return "land/lion/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x33db3a["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    var _0x2389f7 = "";
    if (this["animalSpecies"] == 0x1 || this["animalSpecies"] == 0x2 || this["animalSpecies"] == 0xc8) _0x2389f7 = "/" + this["animalSubSpecies"];
    return _0x2389f7;
  }),
  (_0x33db3a["prototype"]["getAbilityInfo"] = function (_0x10cd0d) {
    var _0x117c12 = {};
    _0x117c12["abilName"] = "Loud " + (this["animalSpecies"] == 0x2 ? "Meow" : "Noise");
    if (this["animalSpecies"] == 0x1) _0x117c12["abilName"] += "\x0a& Camouflage";
    var _0x2261f9 = this["getSubSpecies"]();
    return (
      (_0x117c12["abilImg"] = "abilities/Growl-Roar.svg"),
      (_0x117c12["skinThemeID"] = this["skinThemeID"]),
      (_0x117c12["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x117c12
    );
  }),
  (_0x33db3a["prototype"]["animalInfo"] = function () {
    var _0x568176 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x568176["aniName"] = "Lion";
        break;
      case 0x1:
        _0x568176["aniName"] = "Lioness";
        break;
      case 0x2:
        _0x568176["aniName"] = "Lion Cub";
        break;
      case 0x3:
        _0x568176["aniName"] = "Black-Maned\x0aLion";
        break;
      case 0x4:
        _0x568176["aniName"] = "White Lion";
        break;
      case 0x5:
        _0x568176["aniName"] = "Black Lion";
        break;
      case 0x64:
        _0x568176["aniName"] = "The Mantalian";
        break;
      case 0xc8:
        if (this["animalSubSpecies"] == 0x0) _0x568176["aniName"] = "Clowoud Lion";
        else {
          if (this["animalSubSpecies"] == 0x1) _0x568176["aniName"] = "Sunset Clowoud Lion";
          else {
            if (this["animalSubSpecies"] == 0x2) _0x568176["aniName"] = "Storm Clowoud Lion";
          }
        }
        break;
      case 0xca:
        _0x568176["aniName"] = "Chimera Lion";
        break;
      case 0xdc:
        _0x568176["aniName"] = "Ghastly Jade Lion";
        break;
    }
    _0x568176["aniDesc"] = "";
    if (this["animalSpecies"] == 0x1)
      _0x568176["upgradeText"] =
        "UPGRADED to " + _0x568176["aniName"] + "!\x0a Lioness are fast and can launch an ambush attack. (Stop moving to camouflage)!";
    else {
      if (this["animalSpecies"] == 0x2) _0x568176["upgradeText"] = "UPGRADED to " + _0x568176["aniName"] + "!\x0a Press W to release a mighty MEOW!";
      else _0x568176["upgradeText"] = "UPGRADED to " + _0x568176["aniName"] + "!\x0a Press W to release a mighty ROAR (Rawr!)!";
    }
    return (_0x568176["aniCol"] = "#FF9000"), (_0x568176["skinName"] = this["getSkinName"]()), _0x568176;
  }),
  (_0x33db3a["prototype"]["setStealth"] = function () {
    _0x33db3a["superClass"]["prototype"]["setStealth"]["call"](this);
    if (this["flag_stealth"]) {
      if (this["animalSpecies"] == 0x1) this["idealOp"] = _0x204989 == this["id"] ? 0.1 : 0x0;
    }
  }),
  (_0x33db3a["prototype"]["biteStart"] = 0x0),
  (_0x33db3a["prototype"]["flapAmount"] = 0x3),
  (_0x33db3a["prototype"]["flapDur"] = 1.5),
  (_0x33db3a["prototype"]["roarStartT"] = -0x1f4);
var _0x255018 = 0x1,
  _0x3cfa4b = 0x1;
_0x33db3a["prototype"]["drawSkinCustomization"] = function () {
  this["setSkinScale"]();
  if (!this["flag_usingAbility"]) {
    this["biteStart"] = 0x0;
    return;
  } else {
    this["biteStart"] == 0x0 && (this["biteStart"] = _0x168a54 + this["roarStartT"]);
    if (this["specType"] != 0x0 && this["specType"] != undefined) {
      var _0x1e31fe = "skins/" + this["getSpeciesPath"]() + "/lion_head1.png",
        _0x57ec07 = this["getSkinImageObj"](_0x1e31fe),
        _0x2ec980 = (_0x168a54 - this["biteStart"]) / 0x3e8,
        _0x4454a4 = this["skinScale"] * 1.07,
        _0x3fe9d4 = this["skinRad"];
      if (_0x57ec07) {
        var _0x3c31b2 = 0x0,
          _0x304f91 = this["flapAmount"] - (this["animalSpecies"] == 0x2 ? 0.5 : 0x0);
        (_0x3c31b2 = !(_0x57ae6d == 0x2) ? _0x120bbb(_0x2ec980, this["flapDur"], _0x304f91, 0x2) : this["flapAmount"]), _0x587de3["save"]();
        var _0x3fe9d4 = this["rad"];
        _0x587de3["drawImage"](
          _0x57ec07,
          -_0x3fe9d4 * _0x4454a4,
          (-_0x3fe9d4 + _0x3fe9d4 * 0.1) * _0x4454a4 - _0x3c31b2,
          0x2 * _0x3fe9d4 * _0x4454a4,
          0x2 * _0x3fe9d4 * _0x4454a4
        ),
          _0x587de3["restore"]();
      }
    }
  }
};

function _0x33db3a() {
  _0x33db3a["superClass"]["call"](this, _0x3fb3b2);
}
(window["Lion"] = _0x33db3a), _0x17bf26["setCustomClassForGameObjType"](_0x33db3a, _0x3fb3b2, _0x3cc7bc);
var _0x48c344 = _0x3799d1;
(_0x3bc6e5["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x3bc6e5["prototype"]["constructor"] = _0x3bc6e5),
  (_0x3bc6e5["superClass"] = _0x48c344),
  (_0x3bc6e5["prototype"]["animalInfo"] = function () {
    var _0x3eee7c = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x3eee7c["aniName"] = "Rhino";
        break;
      case 0x1:
        _0x3eee7c["aniName"] = "White Rhino";
        break;
      case 0x2:
        _0x3eee7c["aniName"] = "Black Rhino";
        break;
      case 0x3:
        _0x3eee7c["aniName"] = "Woolly Rhino";
        break;
      case 0xc9:
        _0x3eee7c["aniName"] = "Shrub Rhino";
        break;
      case 0xca:
        _0x3eee7c["aniName"] = "Cotton Candy Rhino";
        break;
      case 0xcc:
        _0x3eee7c["aniName"] = "Acuti Rhino";
        break;
      case 0xdc:
        _0x3eee7c["aniName"] = "Ink Rhino";
        break;
    }
    return (
      (_0x3eee7c["skinName"] = this["getSkinName"]()),
      (_0x3eee7c["aniDesc"] = ""),
      (_0x3eee7c["upgradeText"] = "UPGRADED to " + _0x3eee7c["aniName"] + "!\x0a Press W to CHARGE with your mighty horn!"),
      (_0x3eee7c["aniCol"] = "#94a3a9"),
      _0x3eee7c
    );
  }),
  (_0x3bc6e5["prototype"]["getAbilityInfo"] = function (_0x264cc8) {
    var _0x1e2ed3 = {};
    return (
      (_0x1e2ed3["abilName"] = "Charge!"),
      (_0x1e2ed3["abilImg"] = "abilities/Charge.svg"),
      (_0x1e2ed3["skinThemeID"] = this["skinThemeID"]),
      (_0x1e2ed3["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x1e2ed3
    );
  }),
  (_0x3bc6e5["prototype"]["getSkinName"] = function () {
    let _0x5819d0 = this["getSpeciesPath"]() + "/rhino";
    return (_0x5819d0 += this["specType"] == 0x0 ? "" : 0x1), _0x5819d0;
  }),
  (_0x3bc6e5["prototype"]["getSpeciesPath"] = function () {
    return "land/rhino/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x3bc6e5["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  });
var _0x16edaf = 0.1;
(_0x3bc6e5["prototype"]["drawOnTopOfSkinImg"] = function () {
  if (_0x9f2d1d) _0x3bc6e5["superClass"]["prototype"]["drawOnTopOfSkinImg"]["call"](this);
}),
  (_0x3bc6e5["prototype"]["drawSkinCustomization"] = function () {
    if (_0x9f2d1d) _0x3bc6e5["superClass"]["prototype"]["drawSkinCustomization"]["call"](this);
    else {
      if (this["flag_usingAbility"]) {
        var _0xc2e04b = this["getSkinImageObj"]("skins/" + this["getSpeciesPath"]() + "/rhino_head1.png"),
          _0x3fff2a = this["skinScale"] * 0.98,
          _0x57bdfe = this["skinRad"];
        if (_0xc2e04b) {
          (frame = 0x0), _0x587de3["save"]();
          var _0x57bdfe = this["rad"];
          _0x587de3["drawImage"](
            _0xc2e04b,
            -_0x57bdfe * _0x3fff2a,
            (-_0x57bdfe + _0x57bdfe * _0x16edaf) * _0x3fff2a + frame,
            0x2 * _0x57bdfe * _0x3fff2a,
            0x2 * _0x57bdfe * _0x3fff2a
          ),
            _0x587de3["restore"]();
        }
      }
    }
  });

function _0x3bc6e5() {
  _0x3bc6e5["superClass"]["call"](this, _0x3fb3b2);
}
(window["Rhino"] = _0x3bc6e5), _0x17bf26["setCustomClassForGameObjType"](_0x3bc6e5, _0x3fb3b2, _0x1e9785);
var _0x48c344 = _0x3799d1;
(_0x4108ef["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x4108ef["prototype"]["constructor"] = _0x4108ef),
  (_0x4108ef["superClass"] = _0x48c344),
  (_0x4108ef["prototype"]["animalInfo"] = function () {
    var _0x5b67a3 = {};
    (_0x5b67a3["skinName"] = "land/pig/" + this["animalSpecies"] + this["getSubSpecies"]() + "/pig"), (_0x5b67a3["aniName"] = "Pig");
    switch (this["animalSpecies"]) {
      case 0x0:
        (_0x5b67a3["aniName"] = "Pig"),
          (_0x5b67a3["upgradeText"] =
            "UPGRADED to " + _0x5b67a3["aniName"] + "!\x0a  Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)");
        break;
      case 0x1:
        (_0x5b67a3["aniName"] = "Pinky Pig"),
          (_0x5b67a3["upgradeText"] =
            "UPGRADED to " + _0x5b67a3["aniName"] + "!\x0a  Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)");
        break;
      case 0xc9:
        (_0x5b67a3["aniName"] = "Floaty Pig"),
          (_0x5b67a3["upgradeText"] =
            "UPGRADED to " + _0x5b67a3["aniName"] + "!\x0a  Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)");
        break;
      case 0xcc:
        switch (this["animalSubSpecies"]) {
          case 0x0:
            _0x5b67a3["aniName"] = "Butcher Pig";
            break;
          case 0x1:
            _0x5b67a3["aniName"] = "Hot Dog Pig";
        }
        _0x5b67a3["upgradeText"] =
          "UPGRADED to " + _0x5b67a3["aniName"] + "!\x0a  Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)";
        break;
      case 0x2:
        {
          (_0x5b67a3["aniName"] = "Stinky Pig"),
            (_0x5b67a3["upgradeText"] =
              "UPGRADED to " + _0x5b67a3["aniName"] + "!\x0a " + _0x5b67a3["aniName"] + " dives through MUD (can use stink everywhere!)");
        }
        break;
      case 0xca:
        (_0x5b67a3["aniName"] = "Piggy Bank"),
          (_0x5b67a3["upgradeText"] =
            "UPGRADED to " + _0x5b67a3["aniName"] + "!\x0a  Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)");
        break;
      case 0xdc:
        (_0x5b67a3["aniName"] = "Fumigator Pig"),
          (_0x5b67a3["upgradeText"] =
            "UPGRADED to " + _0x5b67a3["aniName"] + "!\x0a  Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)");
        break;
    }
    return (_0x5b67a3["aniCol"] = "#DD6BD4"), _0x5b67a3;
  }),
  (_0x4108ef["prototype"]["getAbilityInfo"] = function (_0x42ab1d) {
    var _0x31952a = {};
    return (
      (_0x31952a["abilName"] = "Stink cloud"),
      (_0x31952a["abilImg"] = "abilities/StinkCloud.svg"),
      (_0x31952a["skinThemeID"] = this["skinThemeID"]),
      (_0x31952a["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x31952a
    );
  }),
  (_0x4108ef["prototype"]["getSkinName"] = function () {
    let _0x20ddf5 = this["getSpeciesPath"]() + "/pig";
    return _0x20ddf5;
  }),
  (_0x4108ef["prototype"]["getSpeciesPath"] = function () {
    return "land/pig/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x4108ef["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return this["animalSpecies"] === 0xcc ? "/" + this["animalSubSpecies"] : "";
  }),
  (_0x4108ef["prototype"]["animalDiveColor"] = function () {
    if (this["flag_underWater"]) {
      if (this["flag_eff_isInMud"]) return "#7E6A35";
      else return "#4E71C3";
    }
    return "";
  }),
  (_0x4108ef["prototype"]["animalDivesInMud"] = function () {
    return !![];
  });

function _0x4108ef() {
  _0x4108ef["superClass"]["call"](this, _0x3fb3b2);
}
(window["Pig"] = _0x4108ef), _0x17bf26["setCustomClassForGameObjType"](_0x4108ef, _0x3fb3b2, _0xc58c70);
var _0x48c344 = _0x3799d1;
(_0x53a243["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x53a243["prototype"]["constructor"] = _0x53a243),
  (_0x53a243["superClass"] = _0x48c344),
  (_0x53a243["prototype"]["animalInfo"] = function () {
    var _0x3e4d0c = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x3e4d0c["aniName"] = "Deer";
        break;
      case 0x1:
        _0x3e4d0c["aniName"] = "Doe";
        break;
      case 0x2:
        _0x3e4d0c["aniName"] = "Marsh Deer";
        break;
      case 0x64:
        _0x3e4d0c["aniName"] = "The Wendigo";
        break;
      case 0xca:
        switch (this["animalSubSpecies"]) {
          case 0x0:
            _0x3e4d0c["aniName"] = "Mezavor";
            break;
          case 0x1:
            _0x3e4d0c["aniName"] = "Divine Deer";
        }
        break;
    }
    return (
      (_0x3e4d0c["aniDesc"] = ""),
      (_0x3e4d0c["upgradeText"] =
        "UPGRADED to " +
        _0x3e4d0c["aniName"] +
        "! \x0aPress W to dig up food! \x0aDig in mud for better food!\x0a Hint:Check water areas for new food sources!"),
      (_0x3e4d0c["aniCol"] = "#C4773E"),
      (_0x3e4d0c["skinName"] = this["getSkinName"]()),
      _0x3e4d0c
    );
  }),
  (_0x53a243["prototype"]["getSkinName"] = function () {
    let _0x369e03 = this["getSpeciesPath"]() + "/deer";
    return _0x369e03;
  }),
  (_0x53a243["prototype"]["getSpeciesPath"] = function () {
    return "land/deer/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x53a243["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return this["animalSpecies"] === 0xca ? "/" + this["animalSubSpecies"] : "";
  }),
  (_0x53a243["prototype"]["getAbilityInfo"] = function (_0x11ae44) {
    var _0x5aeede = {};
    return (
      (_0x5aeede["abilName"] = "Dig Food!"),
      (_0x5aeede["abilImg"] = "abilities/Dig.svg"),
      (_0x5aeede["skinThemeID"] = this["skinThemeID"]),
      (_0x5aeede["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x5aeede
    );
  }),
  (_0x53a243["prototype"]["moveF"] = 0.08),
  (_0x53a243["prototype"]["jumpAnim"] = null),
  (_0x53a243["prototype"]["frame"] = 0x0),
  (_0x53a243["prototype"]["drawUnderSkinImg"] = function () {
    if (this["flag_usingAbility"]) {
      if (this["animalType"] == _0x50c9da || this["animalType"] == _0x31d5ba) {
        var _0x15f0cf = (_0x168a54 - this["spawnTime"]) / 0x3e8,
          _0x148da3 = 1.5,
          _0x3e552b = 0x1,
          _0x5f42e8 = _0x3e552b * Math["sin"](((0x2 * Math["PI"]) / _0x148da3) * _0x15f0cf),
          _0x1c7270 = _0x587de3["globalAlpha"];
        (_0x587de3["globalAlpha"] *= 0.8),
          _0x440ef0(0x0, this["rad"] * 0.3, this["rad"] * (0.9 + 0.12 * _0x5f42e8), "#7F582B"),
          _0x440ef0(0x0, -this["rad"] * 0.3, this["rad"] * (1.05 + 0.09 * _0x5f42e8), "#7F582B"),
          (_0x587de3["globalAlpha"] = _0x1c7270);
      }
    }
  });

function _0x53a243() {
  _0x53a243["superClass"]["call"](this, _0x3fb3b2);
}
(window["Deer"] = _0x53a243), _0x17bf26["setCustomClassForGameObjType"](_0x53a243, _0x3fb3b2, _0x50c9da);
var _0x48c344 = _0x3799d1;
(_0x89aaed["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x89aaed["prototype"]["constructor"] = _0x89aaed),
  (_0x89aaed["superClass"] = _0x48c344),
  (_0x89aaed["prototype"]["animalInfo"] = function () {
    var _0x226c5d = {};
    _0x226c5d["aniCol"] = "#755A2A";
    switch (this["animalSpecies"]) {
      case 0x0:
        (_0x226c5d["aniName"] = "Donkey"),
          (_0x226c5d["upgradeText"] = "UPGRADED to " + _0x226c5d["aniName"] + "!\x0aPress 'W' to give RARE kick and stun your opponents");
        break;
      case 0x1:
        (_0x226c5d["aniName"] = "Jackass"),
          (_0x226c5d["aniCol"] = "#000"),
          (_0x226c5d["upgradeText"] =
            "UPGRADED to " +
            _0x226c5d["aniName"] +
            "!\x0aPress 'W' to give RARE kick and stun your opponents.\x0a(Keep mouse close to your animal along with boosting to become a mad donkey!)");
        break;
      case 0x2:
        (_0x226c5d["aniName"] = "Zonkey"),
          (_0x226c5d["aniCol"] = "#755A2A"),
          (_0x226c5d["upgradeText"] = "UPGRADED to " + _0x226c5d["aniName"] + "!\x0aPress 'W' to give RARE kick and stun your opponents");
        break;
      case 0x64:
        (_0x226c5d["aniName"] = "Equusthulhu"),
          (_0x226c5d["aniCol"] = "#755A2A"),
          (_0x226c5d["upgradeText"] = "UPGRADED to " + _0x226c5d["aniName"] + "!\x0aPress 'W' to give RARE kick and stun your opponents");
        break;
      case 0xca:
        (_0x226c5d["aniName"] = "Headless Mule"),
          (_0x226c5d["upgradeText"] = "UPGRADED to " + _0x226c5d["aniName"] + "!\x0aPress 'W' to give RARE kick and stun your opponents");
        break;
    }
    return (_0x226c5d["skinName"] = this["getSkinName"]()), (_0x226c5d["aniDesc"] = ""), _0x226c5d;
  }),
  (_0x89aaed["prototype"]["getAbilityInfo"] = function (_0x23bf0d) {
    var _0x5113e8 = {};
    return (
      (_0x5113e8["abilName"] = "Back Kick!"),
      (_0x5113e8["abilImg"] = "abilities/Kick.svg"),
      (_0x5113e8["skinThemeID"] = this["skinThemeID"]),
      (_0x5113e8["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x5113e8
    );
  }),
  (_0x89aaed["prototype"]["getSkinName"] = function () {
    let _0x10b779 = this["getSpeciesPath"]() + "/donkey";
    if (this["specType"] != 0x0) {
      if (this["specType"] > 0x2) _0x10b779 += 0x3;
      else _0x10b779 += this["specType"];
    }
    return _0x10b779;
  }),
  (_0x89aaed["prototype"]["getSpeciesPath"] = function () {
    return "land/donkey/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x89aaed["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x89aaed["prototype"]["drawUnderSkinImg"] = function () {
    if (this["flag_usingAbility"] && this["biteStart"] > 0x0) {
      _0x587de3["save"]();
      var _0x40b42b = _0x587de3["globalAlpha"];
      _0x587de3["globalAlpha"] = 0x1 * _0x40b42b;
      var _0x1b324d = "skins/" + this["getSpeciesPath"]() + "/legs.png",
        _0x54cfc7 = this["getSkinImageObj"](_0x1b324d);
      if (_0x54cfc7) {
        var _0x1d73bb = Math["min"](0x1, (_0x168a54 - this["biteStart"]) / 0x546),
          _0x39730c = this["rad"],
          _0x33adfa = 0x0,
          _0x207d09 = this["rad"] * 0x1,
          _0x3cbbbe = _0x39730c * 0x2,
          _0xeaf5f1 = _0x39730c * 0x2 * _0x1d73bb,
          _0x4995e1 = 0.5,
          _0xac5b87 = 2.5;
        _0x587de3["drawImage"](_0x54cfc7, _0x33adfa + _0x3cbbbe * -_0x4995e1, _0x207d09 + _0xeaf5f1 * -_0xac5b87, _0x3cbbbe, _0xeaf5f1);
      }
      _0x587de3["restore"]();
    }
  }),
  (_0x89aaed["prototype"]["biteStart"] = 0x0),
  (_0x89aaed["prototype"]["flapAmount"] = 0.3),
  (_0x89aaed["prototype"]["flapDur"] = 0x1),
  (_0x89aaed["prototype"]["roarStartT"] = -0x1f4),
  (_0x89aaed["prototype"]["drawSkinCustomization"] = function () {
    if (!this["flag_usingAbility"]) {
      this["biteStart"] = 0x0;
      if (this["specType"] == 0x0) return;
      var _0x5c7367 = this["specType"] - 0x2,
        _0x21fd74 = this["getSkinImageObj"]("skins/" + this["getSpeciesPath"]() + "/donkey_head" + _0x5c7367 + ".png"),
        _0x5ce418 = this["skinRad"];
      if (_0x21fd74) {
        _0x587de3["save"]();
        var _0x5ce418 = this["rad"] * 1.3,
          _0x5f4fd5 = 0x0,
          _0x16dfa0 = this["rad"],
          _0x12aec4 = 0x1,
          _0x1931ca = _0x5ce418 * 0x2 * _0x12aec4,
          _0x485636 = _0x5ce418 * 0x2 * _0x12aec4,
          _0x391afc = 0.5,
          _0x286199 = 0.7;
        _0x587de3["drawImage"](_0x21fd74, _0x5f4fd5 + _0x1931ca * -_0x391afc, _0x16dfa0 + _0x485636 * -_0x286199, _0x1931ca, _0x485636),
          _0x587de3["restore"]();
      }
    } else {
      if (this["biteStart"] == 0x0) this["biteStart"] = _0x168a54 + this["roarStartT"];
      var _0x5c57f6 = (_0x168a54 - this["biteStart"]) / 0x3e8,
        _0x55114f = 0x0;
      _0x55114f = _0x120bbb(_0x5c57f6, this["flapDur"], this["flapAmount"], 0x2);
      var _0x21fd74 = this["getSkinImageObj"]("skins/" + this["getSpeciesPath"]() + "/donkey_head" + this["specType"] + ".png"),
        _0x5ce418 = this["skinRad"];
      if (_0x21fd74) {
        _0x587de3["save"]();
        var _0x12aec4 = 0x0,
          _0x1b532b = 0x1,
          _0x46838b = 0.85,
          _0x21b087 = 1.2;
        if (this["specType"] == 0x1)
          (_0x12aec4 = -0x19), (_0x1b532b = 1.2 - _0x55114f * 0.3), (_0x46838b = 0.8 + _0x55114f * 0.3), (_0x21b087 = 1.4 - _0x55114f * 0.3);
        else
          this["specType"] == 0x2 &&
            ((_0x12aec4 = 0x19),
            (_0x1b532b = 0.8 - _0x55114f * 0.3),
            (_0x46838b = 0.8 + _0x55114f * 0.3),
            (_0x21b087 = 1.4 - _0x55114f * 0.3),
            (_0x55114f *= -0x1));
        var _0x5ce418 = this["rad"] * 0x1,
          _0x5f4fd5 = 0x0,
          _0x16dfa0 = this["rad"],
          _0x1931ca = _0x5ce418 * 0x2 * _0x21b087,
          _0x485636 = _0x5ce418 * 0x2 * _0x21b087,
          _0x391afc = 0.5 * _0x1b532b,
          _0x286199 = 0x1 * _0x46838b;
        _0x587de3["rotate"](_0x3d960f(_0x12aec4) + _0x55114f),
          _0x587de3["drawImage"](_0x21fd74, _0x5f4fd5 + _0x1931ca * -_0x391afc, _0x16dfa0 + _0x485636 * -_0x286199, _0x1931ca, _0x485636),
          _0x587de3["restore"]();
      }
    }
  });

function _0x89aaed() {
  _0x89aaed["superClass"]["call"](this, _0x3fb3b2);
}
(window["Donkey"] = _0x89aaed), _0x17bf26["setCustomClassForGameObjType"](_0x89aaed, _0x3fb3b2, _0x3531d4);
var _0x48c344 = _0x3799d1;
(_0x10c903["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x10c903["prototype"]["constructor"] = _0x10c903),
  (_0x10c903["superClass"] = _0x48c344),
  (_0x10c903["prototype"]["animalInfo"] = function () {
    var _0x1b19fb = {};
    _0x1b19fb["aniCol"] = "#755A2A";
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x1b19fb["aniName"] = "Zebra";
        break;
      case 0x1:
        _0x1b19fb["aniName"] = "Okapi";
        break;
      case 0x2:
        _0x1b19fb["aniName"] = "Okapi";
        break;
      case 0x64:
        _0x1b19fb["aniName"] = "Unicornze";
        break;
      case 0xc9:
        _0x1b19fb["aniName"] = "Playground Zebra";
        break;
      case 0xca:
        _0x1b19fb["aniName"] = "Synth Zebra";
        break;
    }
    return (
      (_0x1b19fb["aniCol"] = "#000"),
      (_0x1b19fb["skinName"] = this["getSkinName"]()),
      (_0x1b19fb["upgradeText"] = "UPGRADED to " + _0x1b19fb["aniName"] + "!\x0a Press 'W' to give RARE kick and stun your opponents"),
      (_0x1b19fb["aniDesc"] = ""),
      _0x1b19fb
    );
  }),
  (_0x10c903["prototype"]["getSkinImageObj"] = function (_0x464c04) {
    var _0x38b198 =
      this["animalSpecies"] === 0xc9 || this["animalSpecies"] === 0x2 || this["animalSpecies"] === 0x1 || this["animalSpecies"] === 0x64
        ? 0x1
        : this["mopeSeasonID"];
    return this["getSkinImageObjForSeason"](_0x464c04, _0x38b198);
  }),
  (_0x10c903["prototype"]["getAbilityInfo"] = function (_0x4565c2) {
    var _0x34231b = {};
    return (
      (_0x34231b["abilName"] = "Side Kick!"),
      (_0x34231b["abilImg"] = "abilities/Kick.svg"),
      (_0x34231b["skinThemeID"] = this["skinThemeID"]),
      (_0x34231b["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x34231b
    );
  }),
  (_0x10c903["prototype"]["getSkinName"] = function () {
    let _0x35b69b = this["getSpeciesPath"]() + "/zebra";
    return _0x35b69b;
  }),
  (_0x10c903["prototype"]["getSpeciesPath"] = function () {
    return "land/zebra/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x10c903["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  });

function _0x10c903() {
  _0x10c903["superClass"]["call"](this, _0x3fb3b2);
}
(window["Zebra"] = _0x10c903), _0x17bf26["setCustomClassForGameObjType"](_0x10c903, _0x3fb3b2, _0x1c4f28);
var _0x5425ad = _0x5425ad,
  _0x48c344 = _0x3799d1;
(_0x5425ad["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x5425ad["prototype"]["constructor"] = _0x5425ad),
  (_0x5425ad["superClass"] = _0x48c344),
  (_0x5425ad["prototype"]["objSkinSpotsCanvas"] = null),
  (_0x5425ad["prototype"]["animalInfo"] = function () {
    var _0x203ba2 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x203ba2["aniName"] = "Mouse";
        break;
      case 0x1:
        _0x203ba2["aniName"] = "Golden Mouse";
        break;
      case 0x2:
        _0x203ba2["aniName"] = "Purple Mouse";
        break;
      case 0x64:
        _0x203ba2["aniName"] = "Robo Mouse";
        break;
      case 0xc9:
        _0x203ba2["aniName"] = "Bubbly Mouse";
        break;
      case 0xca:
        _0x203ba2["aniName"] = "Super Mouse";
        break;
      case 0xcc:
        switch (this["animalSubSpecies"]) {
          case 0x0:
            _0x203ba2["aniName"] = "Dark Plague Rat";
            break;
          case 0x1:
            _0x203ba2["aniName"] = "Light Plague Rat";
        }
        break;
      case 0xfa:
        _0x203ba2["aniName"] = "Sample Mouse";
        break;
    }
    return (
      (_0x203ba2["upgradeText"] = "You're a tiny " + _0x203ba2["aniName"] + "- Eat food to grow!"),
      (_0x203ba2["aniCol"] = "gray"),
      (_0x203ba2["skinName"] = "land/mouse/" + this["animalSpecies"] + this["getSubSpecies"]() + "/mouse"),
      _0x203ba2
    );
  }),
  (_0x5425ad["prototype"]["getSkinName"] = function () {
    return "land/mouse/" + this["animalSpecies"] + this["getSubSpecies"]() + "/mouse";
  }),
  (_0x5425ad["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return this["animalSpecies"] === 0xcc ? "/" + this["animalSubSpecies"] : "";
  });

function _0x5425ad() {
  _0x5425ad["superClass"]["call"](this, _0x3fb3b2);
}
(window["Mouse"] = _0x5425ad), _0x17bf26["setCustomClassForGameObjType"](_0x5425ad, _0x3fb3b2, _0x659012);
var _0x30289a = _0x30289a,
  _0x48c344 = _0x3799d1;
(_0x30289a["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x30289a["prototype"]["constructor"] = _0x30289a),
  (_0x30289a["superClass"] = _0x48c344),
  (_0x30289a["prototype"]["objSkinSpotsCanvas"] = null),
  (_0x30289a["prototype"]["getSkinName"] = function () {
    let _0x474950 = this["getSpeciesPath"]() + "/bear";
    return _0x474950;
  }),
  (_0x30289a["prototype"]["getSpeciesPath"] = function () {
    return "land/bear/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x30289a["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x30289a["prototype"]["animalInfo"] = function () {
    var _0x1b0411 = {},
      _0x55a44e = "";
    switch (this["animalSpecies"]) {
      case 0x0:
        (_0x1b0411["aniName"] = "Bear"),
          (_0x1b0411["upgradeText"] = "UPGRADED to BEAR!\x0a Bears climb through green hills! (Press W to use your claw!)"),
          (_0x1b0411["aniCol"] = "#99591C"),
          (_0x55a44e = "bear");
        break;
      case 0x1:
        (_0x1b0411["aniName"] = "Panda"),
          (_0x1b0411["upgradeText"] =
            "UPGRADED to " + _0x1b0411["aniName"] + "!\x0a " + _0x1b0411["aniName"] + " climb through green hills! (Press W to use your claw!)"),
          (_0x1b0411["aniCol"] = "#99591C"),
          (_0x55a44e = "bear");
        break;
      case 0xca:
        (_0x1b0411["aniName"] = "Beekeeper Bear"),
          (_0x1b0411["upgradeText"] =
            "UPGRADED to " + _0x1b0411["aniName"] + "!\x0a " + _0x1b0411["aniName"] + " climb through green hills! (Press W to use your claw!)");
        break;
      case 0xcc:
        (_0x1b0411["aniName"] = "Mr. Teddy"),
          (_0x1b0411["upgradeText"] =
            "UPGRADED to " + _0x1b0411["aniName"] + "!\x0a " + _0x1b0411["aniName"] + " climb through green hills! (Press W to use your claw!)"),
          (_0x1b0411["aniCol"] = "#99591C"),
          (_0x55a44e = "mr_teddy");
        break;
    }
    return (_0x1b0411["aniCol"] = "#CAC05B"), (_0x1b0411["skinName"] = this["getSkinName"]()), _0x1b0411;
  }),
  (_0x30289a["prototype"]["getAbilityInfo"] = function (_0xf887f5) {
    var _0x494942 = {};
    return (
      (_0x494942["abilName"] = "Claw Slash!"),
      (_0x494942["abilImg"] = "abilities/Slash-Claw.svg"),
      (_0x494942["skinThemeID"] = this["skinThemeID"]),
      (_0x494942["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x494942
    );
  });

function _0x30289a() {
  _0x30289a["superClass"]["call"](this, _0x3fb3b2);
}
(window["Bear"] = _0x30289a), _0x17bf26["setCustomClassForGameObjType"](_0x30289a, _0x3fb3b2, _0x15f6e5);
var _0x11c943 = _0x11c943,
  _0x48c344 = _0x3799d1;
(_0x11c943["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x11c943["prototype"]["constructor"] = _0x11c943),
  (_0x11c943["superClass"] = _0x48c344),
  (_0x11c943["prototype"]["objSkinSpotsCanvas"] = null),
  (_0x11c943["prototype"]["animalInfo"] = function () {
    var _0x29e0c1 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        (_0x29e0c1["aniName"] = "Crocodile"),
          (_0x29e0c1["upgradeText"] = "UPGRADED to BEAR!\x0a Crocs climb through green hills! (Press W to use your claw!)"),
          (_0x29e0c1["aniCol"] = "#30F51C");
        break;
      case 0x1:
        (_0x29e0c1["aniName"] = "Giant Crocodile"), (_0x29e0c1["aniCol"] = "#757e71");
        break;
      case 0x64:
        (_0x29e0c1["aniName"] = "Uncle Sam"), (_0x29e0c1["aniCol"] = "#757e71");
        break;
      case 0xc9:
        (_0x29e0c1["aniName"] = "Big Hoss"), (_0x29e0c1["aniCol"] = "#757e71");
        break;
      case 0xca:
        switch (this["animalSubSpecies"]) {
          case 0x0:
            _0x29e0c1["aniName"] = "Croczilla";
            break;
          case 0x1:
            _0x29e0c1["aniName"] = "Ammit";
        }
        break;
    }
    return (
      (_0x29e0c1["upgradeText"] =
        "UPGRADED to " +
        _0x29e0c1["aniName"] +
        "!\x0a Press W to bite and drag around animals! \x0a+ (Now hide in water spots)+ Swim well in Mud, Lakes & Oceans!"),
      (_0x29e0c1["skinName"] = this["getSkinName"]()),
      _0x29e0c1
    );
  }),
  (_0x11c943["prototype"]["getSkinImageObj"] = function (_0x3b8d8e) {
    var _0x25f0c6 = this["animalSpecies"] === 0x1 || this["animalSpecies"] === 0x64 || this["animalSpecies"] === 0xc9 ? 0x1 : this["mopeSeasonID"],
      _0x9fb691 = "./assets/s/" + _0x25f0c6 + "/" + _0x3b8d8e;
    return (
      this["skinThemeID"] > 0x0 && (_0x9fb691 = "./assets/t/" + this["skinThemeID"] + "/" + _0x3b8d8e),
      _0x2d8f34(_0x9fb691, function (_0x2a7569) {
        console["log"](_0x2a7569["src"]);
      })
    );
  }),
  (_0x11c943["prototype"]["getSkinName"] = function () {
    let _0x3cdbbf = this["getSpeciesPath"]() + "/croc";
    return _0x3cdbbf;
  }),
  (_0x11c943["prototype"]["getSpeciesPath"] = function () {
    return "land/croc/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x11c943["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return this["animalSpecies"] === 0xca ? "/" + this["animalSubSpecies"] : "";
  }),
  (_0x11c943["prototype"]["setStealth"] = function () {
    _0x11c943["superClass"]["prototype"]["setStealth"]["call"](this), this["isCamouflage"] && (this["idealOp"] = _0x204989 == this["id"] ? 0.1 : 0x0);
  }),
  (_0x11c943["prototype"]["isCamouflage"] = ![]),
  (_0x11c943["prototype"]["drawUnderSkinTail"] = function (_0x5dd04f) {
    if (!this["isCamouflage"]) _0x11c943["superClass"]["prototype"]["drawUnderSkinTail"]["call"](this, _0x5dd04f);
  }),
  (_0x11c943["prototype"]["drawHealthBar"] = function () {
    if (!this["isCamouflage"]) _0x11c943["superClass"]["prototype"]["drawHealthBar"]["call"](this);
  }),
  (_0x11c943["prototype"]["customUpdatedProperty"] = function (_0x3ea57e, _0x55bcd1) {
    _0x3ea57e == _0xe69e34 && ((this["isCamouflage"] = _0x55bcd1["readUInt8"]() == 0x1), this["setStealth"]());
  }),
  (_0x11c943["prototype"]["readCustomData_onNewlyVisible"] = function (_0x25bf0c) {
    _0x11c943["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x25bf0c),
      (this["isCamouflage"] = _0x25bf0c["readUInt8"]() == 0x1),
      this["setStealth"]();
  }),
  (_0x11c943["prototype"]["getAbilityInfo"] = function (_0x355c6b) {
    var _0x57efee = {};
    return (
      (_0x57efee["abilName"] = "Bite Grab!"),
      (_0x57efee["abilImg"] = "abilities/Bite.svg"),
      (_0x57efee["skinThemeID"] = this["skinThemeID"]),
      (_0x57efee["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x57efee
    );
  });

function _0x11c943() {
  _0x11c943["superClass"]["call"](this, _0x3fb3b2);
}
(window["Croc"] = _0x11c943), _0x17bf26["setCustomClassForGameObjType"](_0x11c943, _0x3fb3b2, _0x16bb4c);
var _0x48c344 = _0x3799d1;
(_0x11c9e9["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x11c9e9["prototype"]["constructor"] = _0x11c9e9),
  (_0x11c9e9["superClass"] = _0x48c344),
  (_0x11c9e9["prototype"]["updateZ"] = function () {
    this["z"] = 0x186a0;
  }),
  (_0x11c9e9["prototype"]["canUseTailslap"] = ![]),
  (_0x11c9e9["prototype"]["tailState"] = 0x0),
  (_0x11c9e9["prototype"]["lava"] = 0x64),
  (_0x11c9e9["prototype"]["getSkinName"] = function () {
    var _0x2c54f2 = _0x34fedb || _0x57ae6d == 0x2 ? "kingdragon" : "kingdragon_body";
    return "volcano/kingdragon/" + this["animalSpecies"] + "/" + _0x2c54f2;
  }),
  (_0x11c9e9["prototype"]["customUpdatedProperty"] = function (_0x1bbdb2, _0x2f30a6) {
    if (_0x1bbdb2 == _0x144b53) this["canUseTailslap"] = _0x2f30a6["readUInt8"]() == 0x1;
    else _0x1bbdb2 == _0x4aacba && (this["tailState"] = _0x2f30a6["readUInt16"]() / 0x64);
  }),
  (_0x11c9e9["prototype"]["leftWingAnim"] = null),
  (_0x11c9e9["prototype"]["flapAngleDiff"] = 0x3),
  (_0x11c9e9["prototype"]["flapAngle"] = 0x3),
  (_0x11c9e9["prototype"]["flapF"] = 0.1),
  (_0x11c9e9["prototype"]["flapDur"] = 0x2),
  (_0x11c9e9["prototype"]["sF"] = 0.02),
  (_0x11c9e9["prototype"]["drawWings"] = function () {
    if (_0x57ae6d == 0x2 || _0x34fedb) return;
    this["leftWingAnim"] == null &&
      ((this["leftWingAnim"] = new _0x5431fd(this, this["flapDur"], _0x5431fd["wave"])),
      (this["leftWingAnim"]["keepLastFrame"] = !![]),
      (this["leftWingAnim"]["loop"] = !![]),
      (this["leftWingAnim"]["onFrameEntered"] = function (_0x48276f) {
        this["forObj"]["frame1"] = _0x48276f;
      }));
    this["leftWingAnim"] != null && this["leftWingAnim"]["run"]();
    var _0x546d69 = this["rad"] - this["outlineW"],
      _0x377c2d = this["frame1"] * this["sF"] * _0x546d69,
      _0x55f0c1 = -(-this["flapF"] + this["frame1"]),
      _0x39b4cb = _0x55f0c1 * _0x3d960f(this["flapAngle"]),
      _0x53cc27 = 0x1f4 / 0x154,
      _0x479df8 = this["getSkinImageObj"]("skins/volcano/kingdragon/" + this["animalSpecies"] + "/left_wing.png"),
      _0x148bce = this["getSkinImageObj"]("skins/volcano/kingdragon/" + this["animalSpecies"] + "/right_wing.png");
    if (_0x479df8 && _0x148bce) {
      _0x587de3["save"](),
        _0x587de3["rotate"](_0x3d960f(this["flapAngleDiff"]) + _0x39b4cb),
        _0x587de3["drawImage"](
          _0x479df8,
          -_0x546d69 * _0x53cc27,
          -_0x546d69 * _0x53cc27 + _0x377c2d,
          0x2 * _0x546d69 * _0x53cc27,
          0x2 * _0x546d69 * _0x53cc27 + _0x377c2d * 1.5
        ),
        _0x587de3["restore"](),
        _0x587de3["save"](),
        _0x587de3["rotate"](-(_0x3d960f(this["flapAngleDiff"]) + _0x39b4cb)),
        _0x587de3["drawImage"](
          _0x148bce,
          -_0x546d69 * _0x53cc27,
          -_0x546d69 * _0x53cc27 + _0x377c2d,
          0x2 * _0x546d69 * _0x53cc27,
          0x2 * _0x546d69 * _0x53cc27 + _0x377c2d * 1.5
        ),
        _0x587de3["restore"]();
      if (this["animalSpecies"] == 0x4) {
        let _0x3835e8 = _0x38b128("kd", this["spawnTime"]);
        _0x3835e8 !== undefined && _0x3835e8 != null && (this["theFrame"] = _0x3835e8);
        let _0x24cb39 = !(_0x57ae6d == 0x2 || _0x34fedb) ? this["theFrame"] : this["birdNoAnimationFlyWingAngle"];
        _0x587de3["save"](), (_0x587de3["globalAlpha"] = Math["max"](0x0, _0x24cb39));
        var _0xc06074 = this["getSkinImageObj"]("skins/volcano/kingdragon/" + this["animalSpecies"] + "/left_wing_tips.png"),
          _0x234078 = this["getSkinImageObj"]("skins/volcano/kingdragon/" + this["animalSpecies"] + "/right_wing_tips.png");
        _0xc06074 &&
          _0x234078 &&
          (_0x587de3["save"](),
          _0x587de3["rotate"](_0x3d960f(this["flapAngleDiff"]) + _0x39b4cb),
          _0x587de3["drawImage"](
            _0xc06074,
            -_0x546d69 * _0x53cc27,
            -_0x546d69 * _0x53cc27 + _0x377c2d,
            0x2 * _0x546d69 * _0x53cc27,
            0x2 * _0x546d69 * _0x53cc27 + _0x377c2d * 1.5
          ),
          _0x587de3["restore"](),
          _0x587de3["save"](),
          _0x587de3["rotate"](-(_0x3d960f(this["flapAngleDiff"]) + _0x39b4cb)),
          _0x587de3["drawImage"](
            _0x234078,
            -_0x546d69 * _0x53cc27,
            -_0x546d69 * _0x53cc27 + _0x377c2d,
            0x2 * _0x546d69 * _0x53cc27,
            0x2 * _0x546d69 * _0x53cc27 + _0x377c2d * 1.5
          ),
          _0x587de3["restore"]()),
          _0x587de3["restore"]();
      }
    }
    var _0x118951 = this["lava"],
      _0x46eecf = 0x32;
    if (_0x118951 < _0x46eecf) {
      var _0x4c1087 = _0x118951 / _0x46eecf,
        _0x29c96f = this["getSkinImageObj"]("skins/volcano/kingdragon/" + this["animalSpecies"] + "/left_wing1.png"),
        _0x2411ee = this["getSkinImageObj"]("skins/volcano/kingdragon/" + this["animalSpecies"] + "/right_wing2.png");
      _0x29c96f &&
        _0x2411ee &&
        (_0x587de3["save"](),
        (_0x587de3["globalAlpha"] = 0x1 - _0x4c1087),
        _0x587de3["save"](),
        _0x587de3["rotate"](_0x3d960f(this["flapAngleDiff"]) + _0x39b4cb),
        _0x587de3["drawImage"](
          _0x29c96f,
          -_0x546d69 * _0x53cc27,
          -_0x546d69 * _0x53cc27 + _0x377c2d,
          0x2 * _0x546d69 * _0x53cc27,
          0x2 * _0x546d69 * _0x53cc27 + _0x377c2d * 1.5
        ),
        _0x587de3["restore"](),
        _0x587de3["save"](),
        _0x587de3["rotate"](-(_0x3d960f(this["flapAngleDiff"]) + _0x39b4cb)),
        _0x587de3["drawImage"](
          _0x2411ee,
          -_0x546d69 * _0x53cc27,
          -_0x546d69 * _0x53cc27 + _0x377c2d,
          0x2 * _0x546d69 * _0x53cc27,
          0x2 * _0x546d69 * _0x53cc27 + _0x377c2d * 1.5
        ),
        _0x587de3["restore"](),
        _0x587de3["restore"]());
    }
  }),
  (_0x11c9e9["prototype"]["drawSkinCustomization"] = function () {
    if (this["flag_underWater"]) return;
    if (_0x57ae6d == 0x2 || _0x34fedb) return;
    var _0x80214 = 0x1f4 / 0x154;
    let _0x44cba4 = _0x38b128("kd", this["spawnTime"]);
    _0x44cba4 !== undefined && _0x44cba4 != null && (this["theFrame"] = _0x44cba4);
    let _0x2b2c63 = !(_0x57ae6d == 0x2 || _0x34fedb) ? this["theFrame"] : this["birdNoAnimationFlyWingAngle"];
    var _0x3e476d = this["getSkinImageObj"]("skins/volcano/kingdragon/" + this["animalSpecies"] + "/nostrils.png");
    if (_0x3e476d) {
      _0x587de3["save"]();
      var _0x4bccc7 = this["lava"],
        _0x43c75c = 0x64,
        _0x233df9 = _0x4bccc7 / _0x43c75c;
      _0x587de3["globalAlpha"] = Math["max"](0x0, _0x2b2c63) * _0x233df9;
      var _0x4b45a3 = this["rad"] - this["outlineW"];
      _0x587de3["drawImage"](_0x3e476d, -_0x4b45a3 * _0x80214, -_0x4b45a3 * _0x80214, 0x2 * _0x4b45a3 * _0x80214, 0x2 * _0x4b45a3 * _0x80214),
        _0x587de3["restore"]();
    }
    if (!this["canUseTailslap"]) {
      var _0x19d097 = this["getSkinImageObj"]("skins/volcano/kingdragon/" + this["animalSpecies"] + "/bone1.png");
      if (_0x19d097) {
        _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0x1);
        var _0x4b45a3 = this["rad"] - this["outlineW"];
        _0x587de3["drawImage"](_0x19d097, -_0x4b45a3 * _0x80214, -_0x4b45a3 * _0x80214, 0x2 * _0x4b45a3 * _0x80214, 0x2 * _0x4b45a3 * _0x80214),
          _0x587de3["restore"]();
      }
      var _0x46e2d7 = 0x0;
      if (this["tailState"] < 0xb && this["tailState"] > 0x5) {
        var _0x3f018f = this["tailState"] - 0x5;
        _0x46e2d7 = _0x3f018f / 0x6;
      } else this["tailState"] <= 0x3 && (_0x46e2d7 = this["tailState"] / 0x3);
      var _0x2e7e04 = this["getSkinImageObj"]("skins/volcano/kingdragon/" + this["animalSpecies"] + "/bone3.png");
      if (this["tailState"] < 0xb) {
        if (_0x2e7e04) {
          _0x587de3["save"]();
          if (this["tailState"] > 0x5) _0x587de3["globalAlpha"] = 0x1 - _0x46e2d7;
          else _0x587de3["globalAlpha"] = 0x1;
          var _0x4b45a3 = this["rad"] - this["outlineW"];
          _0x587de3["drawImage"](_0x2e7e04, -_0x4b45a3 * _0x80214, -_0x4b45a3 * _0x80214, 0x2 * _0x4b45a3 * _0x80214, 0x2 * _0x4b45a3 * _0x80214),
            _0x587de3["restore"]();
        }
      }
      var _0x126cc2 = this["getSkinImageObj"]("skins/volcano/kingdragon/" + this["animalSpecies"] + "/bone2.png");
      if (this["tailState"] < 0x3) {
        if (_0x126cc2) {
          _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0x1 - _0x46e2d7);
          var _0x4b45a3 = this["rad"] - this["outlineW"];
          _0x587de3["drawImage"](_0x126cc2, -_0x4b45a3 * _0x80214, -_0x4b45a3 * _0x80214, 0x2 * _0x4b45a3 * _0x80214, 0x2 * _0x4b45a3 * _0x80214),
            _0x587de3["restore"]();
        }
      }
    } else {
      var _0x126cc2 = this["getSkinImageObj"]("skins/volcano/kingdragon/" + this["animalSpecies"] + "/bone2.png");
      if (_0x126cc2) {
        _0x587de3["save"]();
        var _0x253d0c = Math["max"](0.3, _0x2b2c63);
        _0x587de3["globalAlpha"] = _0x253d0c;
        var _0x4b45a3 = this["rad"] - this["outlineW"];
        _0x587de3["drawImage"](_0x126cc2, -_0x4b45a3 * _0x80214, -_0x4b45a3 * _0x80214, 0x2 * _0x4b45a3 * _0x80214, 0x2 * _0x4b45a3 * _0x80214),
          _0x587de3["restore"]();
      }
    }
    this["drawWings"]();
  }),
  (_0x11c9e9["prototype"]["drawLowWaterDrop"] = function () {
    if (this["flag_underWater"]) return;
    if (this["flag_lowWat"]) {
      var _0x3127dd = 1.2,
        _0x3eb22b = 0.2,
        _0x447e2a = 0.8,
        _0x59b296 = 0.5 * (_0x447e2a - _0x3eb22b),
        _0x2ca151 = _0x3eb22b + _0x59b296 + _0x59b296 * Math["sin"](((0x2 * Math["PI"]) / _0x3127dd) * (_0x168a54 / 0x3e8));
      _0x587de3["save"](),
        (_0x587de3["globalAlpha"] = _0x2ca151),
        (_0x587de3["fillStyle"] = _0x9d1ce2),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](0x0, this["rad"] + 0x5, 0x5, 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        _0x587de3["restore"]();
    }
  }),
  (_0x11c9e9["prototype"]["animalInfo"] = function () {
    var _0x28e9f8 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x28e9f8["aniName"] = "King Dragon";
        break;
      case 0x1:
        _0x28e9f8["aniName"] = "Golden King Dragon";
        break;
      case 0x2:
        _0x28e9f8["aniName"] = "King Ripper";
        break;
      case 0x3:
        _0x28e9f8["aniName"] = "King Stan";
        break;
      case 0x4:
        _0x28e9f8["aniName"] = "King Shah";
        break;
      case 0x5:
        _0x28e9f8["aniName"] = "Queen Scarlet";
        break;
      case 0x6:
        _0x28e9f8["aniName"] = "Queen Celeste";
        break;
      case 0xc8:
        _0x28e9f8["aniName"] = "Queen Flame";
        break;
      case 0xca:
        _0x28e9f8["aniName"] = "King Graveyard";
        break;
    }
    return (
      (_0x28e9f8["aniCol"] = "#FF9000"),
      (_0x28e9f8["skinName"] = this["getSkinName"]()),
      (_0x28e9f8["upgradeText"] = "UPGRADED to " + _0x28e9f8["aniName"]),
      (_0x28e9f8["upgradeText"] += "!\x0aYou got firestream that burns your victim alive! Watch your tail and slap them hard."),
      (_0x28e9f8["aniCol"] = "black"),
      _0x28e9f8
    );
  }),
  (_0x11c9e9["prototype"]["getAbilityInfo"] = function (_0xf49348) {
    var _0x4be2f8 = {};
    _0x4be2f8["abilName"] = "Firestream\x0a& Tail slap";
    var _0x262694 = 0x0;
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x262694 = 0x1;
        break;
      case 0x1:
        _0x262694 = 0x2;
        break;
      case 0x2:
        _0x262694 = 0x4;
        break;
      case 0x3:
        _0x262694 = 0x5;
        break;
      case 0x4:
        _0x262694 = 0x6;
        break;
      case 0x5:
        _0x262694 = 0x9;
        break;
      case 0x6:
        _0x262694 = 0x8;
        break;
    }
    return (
      (_0x4be2f8["speciesType"] = _0x262694),
      (_0x4be2f8["abilImg"] = "abilities/Fireball.svg"),
      (_0x4be2f8["skinThemeID"] = this["skinThemeID"]),
      (_0x4be2f8["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x4be2f8
    );
  });

function _0x11c9e9() {
  (this["lava"] = 0x64), _0x11c9e9["superClass"]["call"](this, _0x3fb3b2);
}
(window["KingDragon"] = _0x11c9e9), _0x17bf26["setCustomClassForGameObjType"](_0x11c9e9, _0x3fb3b2, _0x5eebcf);
var _0x48c344 = _0x3799d1;
(_0x5370e0["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x5370e0["prototype"]["constructor"] = _0x5370e0),
  (_0x5370e0["superClass"] = _0x48c344),
  (_0x5370e0["prototype"]["animalInfo"] = function () {
    var _0x332f42 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x332f42["aniName"] = "The Yeti!";
        break;
      case 0x1:
        _0x332f42["aniName"] = "Golden Yeti!";
        break;
      case 0x2:
        _0x332f42["aniName"] = "Emerald Yeti!";
        break;
      case 0x3:
        _0x332f42["aniName"] = "Aqua Yeti";
        break;
      case 0xc9:
        _0x332f42["aniName"] = "Squishy Yeti";
        break;
      case 0xca:
        switch (this["animalSubSpecies"]) {
          case 0x0:
            _0x332f42["aniName"] = "Lovely Yeti";
            break;
          case 0x1:
            _0x332f42["aniName"] = "Frosty Eye Demon";
        }
        break;
      case 0xcc:
        _0x332f42["aniName"] = "Frost Wolf";
        break;
      case 0xdc:
        _0x332f42["aniName"] = "Glacial Demon";
        break;
    }
    return (
      (_0x332f42["skinName"] = this["getSkinName"]()),
      (_0x332f42["aniDesc"] = ""),
      (_0x332f42["upgradeText"] =
        "UPGRADED to " + _0x332f42["aniName"] + "!\x0a So it really exists... \x0a Hold W to turn into snow, release W to freeeeeze!"),
      (_0x332f42["aniCol"] = "#839eb5"),
      _0x332f42
    );
  }),
  (_0x5370e0["prototype"]["getAbilityInfo"] = function (_0x3a8c07) {
    var _0x283f78 = {};
    return (
      (_0x283f78["abilName"] = "Yeti Roar" + (this["animalSpecies"] == 0x3 ? " &\x0a Ice Statue" : "") + ""),
      (_0x283f78["abilImg"] = "abilities/Growl-Roar.svg"),
      (_0x283f78["skinThemeID"] = this["skinThemeID"]),
      (_0x283f78["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x283f78
    );
  }),
  (_0x5370e0["prototype"]["getSkinName"] = function () {
    var _0x3a1b51 = this["specType"] == 0x0 ? "" : 0x1;
    return this["getSpeciesPath"]("yeti") + "/yeti" + _0x3a1b51;
  }),
  (_0x5370e0["prototype"]["getSubSpecies"] = function () {
    return this["animalSpecies"] === 0xca ? "/" + this["animalSubSpecies"] : "";
  }),
  (_0x5370e0["prototype"]["getSpeciesPath"] = function (_0x1ac188) {
    return "arctic/" + _0x1ac188 + "/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x5370e0["prototype"]["drawOnTopOfSkinImg"] = function () {}),
  (_0x5370e0["prototype"]["isTransforming"] = ![]),
  (_0x5370e0["prototype"]["readCustomData_onNewlyVisible"] = function (_0x30b904) {
    _0x5370e0["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x30b904),
      (this["isTransforming"] = _0x30b904["readUInt8"]() == 0x1);
  }),
  (_0x5370e0["prototype"]["customUpdatedProperty"] = function (_0x4ecd8f, _0x3f0b7a) {
    _0x4ecd8f == _0x26f99b && (this["isTransforming"] = _0x3f0b7a["readUInt8"]() == 0x1);
  }),
  (_0x5370e0["prototype"]["getIdealOpacity"] = function () {
    var _0x37937c = this["flag_underWater"] || (this["flag_usingAbility"] && this["isTransforming"]) || this["isCamouflage"] ? 0x0 : 0x1;
    return _0x37937c;
  }),
  (_0x5370e0["prototype"]["biteStart"] = 0x0),
  (_0x5370e0["prototype"]["flapAmount"] = 0x3),
  (_0x5370e0["prototype"]["flapDur"] = 1.5),
  (_0x5370e0["prototype"]["roarStartT"] = -0x1f4),
  (_0x5370e0["prototype"]["drawSkinCustomization"] = function () {
    if (this["flag_usingAbility"] && this["isTransforming"]) {
      if (this["isTransforming"]) {
        _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0x1);
        var _0x5a4056 = this["getSkinImageObj"]("img/snowball.png");
        if (_0x5a4056) {
          var _0x2f0dc2 = this["rad"];
          _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
            _0x587de3["drawImage"](_0x5a4056, -_0x2f0dc2, -_0x2f0dc2, 0x2 * _0x2f0dc2, 0x2 * _0x2f0dc2);
        } else this["drawOutlinedCircle"]("", "white");
        _0x587de3["restore"]();
      }
    } else {
      if (this["animalSpecies"] == 0x4) return;
      this["setSkinScale"]();
      if (!this["flag_usingAbility"]) {
        this["biteStart"] = 0x0;
        return;
      } else {
        this["biteStart"] == 0x0 && (this["biteStart"] = _0x168a54 + this["roarStartT"]);
        if (this["specType"] != 0x0 && this["specType"] != undefined) {
          var _0x33d977 = "skins/arctic/yeti/" + this["animalSpecies"] + "/yeti_head1.png",
            _0x43b229 = this["getSkinImageObj"](_0x33d977),
            _0x3b61c4 = (_0x168a54 - this["biteStart"]) / 0x3e8,
            _0x40bf40 = this["skinScale"] * 1.07,
            _0x2f0dc2 = this["skinRad"];
          if (_0x43b229) {
            var _0x1b0d7b = 0x0,
              _0x5bad14 = this["flapAmount"] - (this["animalSpecies"] == 0x1 ? 0.5 : 0x0);
            (_0x1b0d7b = !(_0x57ae6d == 0x2) ? _0x120bbb(_0x3b61c4, this["flapDur"], _0x5bad14, 0x2) : this["flapAmount"]), _0x587de3["save"]();
            var _0x2f0dc2 = this["rad"];
            _0x587de3["drawImage"](
              _0x43b229,
              -_0x2f0dc2 * _0x40bf40,
              (-_0x2f0dc2 + _0x2f0dc2 * 0.1) * _0x40bf40 - _0x1b0d7b,
              0x2 * _0x2f0dc2 * _0x40bf40,
              0x2 * _0x2f0dc2 * _0x40bf40
            ),
              _0x587de3["restore"]();
          }
        }
      }
    }
  });

function _0x5370e0() {
  _0x5370e0["superClass"]["call"](this, _0x3fb3b2);
}
(window["Yeti"] = _0x5370e0), _0x17bf26["setCustomClassForGameObjType"](_0x5370e0, _0x3fb3b2, _0x58f094);
var _0x48c344 = _0x3799d1;
(_0x52ae65["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x52ae65["prototype"]["constructor"] = _0x52ae65),
  (_0x52ae65["superClass"] = _0x48c344),
  (_0x52ae65["prototype"]["animalInfo"] = function () {
    var _0x308208 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x308208["aniName"] = "Mammoth!";
        break;
      case 0x1:
        _0x308208["aniName"] = "Golden Mammoth!";
        break;
      case 0x2:
        _0x308208["aniName"] = "Black Mammoth!";
        break;
      case 0xc9:
        _0x308208["aniName"] = "Lost Tourist!";
        break;
      case 0xca:
        switch (this["animalSubSpecies"]) {
          case 0x0:
            _0x308208["aniName"] = "Acid Mammoth";
            break;
          case 0x1:
            _0x308208["aniName"] = "Crystal Golem";
        }
        break;
      case 0xdc:
        _0x308208["aniName"] = " Golem Mammoth";
        break;
    }
    return (
      (_0x308208["skinName"] = this["getSkinName"]()),
      (_0x308208["aniDesc"] = ""),
      (_0x308208["upgradeText"] =
        "UPGRADED to " +
        _0x308208["aniName"] +
        "\x0a Press W to roll snowballs with your trunk!\x0a The bigger the snowball gets, the longer the freeze!"),
      (_0x308208["aniCol"] = "#9d4717"),
      _0x308208
    );
  }),
  (_0x52ae65["prototype"]["getAbilityInfo"] = function (_0x3ec0b0) {
    var _0x2bd267 = {};
    return (
      (_0x2bd267["abilName"] = "Roll snow"),
      (_0x2bd267["abilImg"] = "abilities/Roll-RollSnowball.svg"),
      (_0x2bd267["skinThemeID"] = this["skinThemeID"]),
      (_0x2bd267["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x2bd267
    );
  }),
  (_0x52ae65["prototype"]["getSkinName"] = function () {
    var _0x146d93 = this["specType"] == 0x0 ? "" : 0x1;
    return "arctic/mammoth/" + this["animalSpecies"] + this["getSubSpecies"]() + "/mammoth" + _0x146d93;
  }),
  (_0x52ae65["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return this["animalSpecies"] === 0xca ? "/" + this["animalSubSpecies"] : "";
  });

function _0x52ae65() {
  _0x52ae65["superClass"]["call"](this, _0x3fb3b2);
}
(window["Mammoth"] = _0x52ae65), _0x17bf26["setCustomClassForGameObjType"](_0x52ae65, _0x3fb3b2, _0x5ab376);
var _0x48c344 = _0x3799d1;
(_0x152340["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x152340["prototype"]["constructor"] = _0x152340),
  (_0x152340["superClass"] = _0x48c344),
  (_0x152340["prototype"]["animalInfo"] = function () {
    var _0x44ea50 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x44ea50["aniName"] = "Sabertooth Tiger!";
        break;
      case 0x1:
        _0x44ea50["aniName"] = "Golden Tiger!";
        break;
      case 0x2:
        _0x44ea50["aniName"] = "Margala Sabertooth!";
        break;
      case 0xc8:
        _0x44ea50["aniName"] = "Techno Saber!";
        break;
      case 0xc9:
        _0x44ea50["aniName"] = "Strawbertooth!";
        break;
      case 0xca:
        _0x44ea50["aniName"] = "Ice-Fang Sabertooth";
        break;
      case 0xcc:
        _0x44ea50["aniName"] = "Shadow Sabeertooth!";
        break;
    }
    return (
      (_0x44ea50["skinName"] = this["getSkinName"]()),
      (_0x44ea50["aniDesc"] = ""),
      (_0x44ea50["upgradeText"] = "UPGRADED to " + _0x44ea50["aniName"] + "\x0aSabertooth Tigers are great swimmers, dominate the Lakes/Oceans/Mud!"),
      (_0x44ea50["aniCol"] = "#945A99"),
      _0x44ea50
    );
  }),
  (_0x152340["prototype"]["getAbilityInfo"] = function (_0x5c7b00) {
    var _0xb44a6b = {};
    return (
      (_0xb44a6b["abilName"] = "Claw Slash!"),
      (_0xb44a6b["abilImg"] = "abilities/Slash-Claw.svg"),
      (_0xb44a6b["skinThemeID"] = this["skinThemeID"]),
      (_0xb44a6b["mopeSeasonID"] = this["mopeSeasonID"]),
      _0xb44a6b
    );
  }),
  (_0x152340["prototype"]["getSkinName"] = function () {
    return "arctic/sabertooth/" + this["animalSpecies"] + this["getSubSpecies"]() + "/sabertooth" + (this["specType"] == 0x0 ? "" : this["specType"]);
  }),
  (_0x152340["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  });

function _0x152340() {
  _0x152340["superClass"]["call"](this, _0x3fb3b2);
}
(window["Sabertooth"] = _0x152340), _0x17bf26["setCustomClassForGameObjType"](_0x152340, _0x3fb3b2, _0x52066d);
var _0x48c344 = _0x3799d1;
(_0x310450["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x310450["prototype"]["constructor"] = _0x310450),
  (_0x310450["superClass"] = _0x48c344),
  (_0x310450["prototype"]["animalInfo"] = function () {
    var _0x51ce48 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x51ce48["aniName"] = "Penguin";
        break;
      case 0xc9:
        _0x51ce48["aniName"] = "Surfer Penguin";
        break;
      case 0xca:
        _0x51ce48["aniName"] = "UFO Pigeon";
        break;
    }
    return (
      (_0x51ce48["skinName"] = this["getSkinName"]()),
      (_0x51ce48["aniDesc"] = ""),
      (_0x51ce48["upgradeText"] = "UPGRADED to " + _0x51ce48["aniName"] + "!\x0a Left-click to run!\x0a (HOLD W to slide FAST on ice)!"),
      (_0x51ce48["aniCol"] = "#FFFFFF"),
      _0x51ce48
    );
  }),
  (_0x310450["prototype"]["getAbilityInfo"] = function (_0x3ce762) {
    var _0xf046f0 = {};
    return (
      (_0xf046f0["abilName"] = "Slide on ice"),
      (_0xf046f0["abilImg"] = "abilities/Slide.svg"),
      (_0xf046f0["skinThemeID"] = this["skinThemeID"]),
      (_0xf046f0["mopeSeasonID"] = this["mopeSeasonID"]),
      _0xf046f0
    );
  }),
  (_0x310450["prototype"]["getSkinName"] = function () {
    return "arctic/penguin/" + this["animalSpecies"] + this["getSubSpecies"]() + "/penguin" + (this["specType"] == 0x0 ? "" : 0x1);
  }),
  (_0x310450["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  });

function _0x310450() {
  _0x310450["superClass"]["call"](this, _0x3fb3b2);
}
(window["Penguin"] = _0x310450), _0x17bf26["setCustomClassForGameObjType"](_0x310450, _0x3fb3b2, _0x83a348);
var _0x48c344 = _0x3799d1;
(_0x33bcf7["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x33bcf7["prototype"]["constructor"] = _0x33bcf7),
  (_0x33bcf7["superClass"] = _0x48c344),
  (_0x33bcf7["prototype"]["animalInfo"] = function () {
    var _0x54ba27 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x54ba27["aniName"] = "Seal";
        break;
      case 0xc9:
        _0x54ba27["aniName"] = "Hawaiian Monk";
        break;
      case 0xca:
        _0x54ba27["aniName"] = "Soapy Seal";
        break;
    }
    return (
      (_0x54ba27["skinName"] = this["getSkinName"]()),
      (_0x54ba27["aniDesc"] = ""),
      (_0x54ba27["upgradeText"] = "UPGRADED to " + _0x54ba27["aniName"] + "!\x0a You can slide on ice (Hold W) + can climb hills (rocks too!)"),
      (_0x54ba27["aniCol"] = "#633838"),
      _0x54ba27
    );
  }),
  (_0x33bcf7["prototype"]["getAbilityInfo"] = function (_0x138890) {
    var _0x59982f = {};
    return (
      (_0x59982f["abilName"] = "Slide on ice"),
      (_0x59982f["abilImg"] = "abilities/Slide.svg"),
      (_0x59982f["skinThemeID"] = this["skinThemeID"]),
      (_0x59982f["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x59982f
    );
  }),
  (_0x33bcf7["prototype"]["getSkinName"] = function () {
    return "arctic/seal/" + this["animalSpecies"] + this["getSubSpecies"]() + "/seal" + (this["specType"] == 0x0 ? "" : 0x1);
  }),
  (_0x33bcf7["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  });

function _0x33bcf7() {
  _0x33bcf7["superClass"]["call"](this, _0x3fb3b2);
}
(window["Seal"] = _0x33bcf7), _0x17bf26["setCustomClassForGameObjType"](_0x33bcf7, _0x3fb3b2, _0x23ab49);
var _0x48c344 = _0x3799d1;
(_0x5c0382["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x5c0382["prototype"]["constructor"] = _0x5c0382),
  (_0x5c0382["superClass"] = _0x48c344),
  (_0x5c0382["prototype"]["animalInfo"] = function () {
    var _0x293a1f = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x293a1f["aniName"] = "Walrus!";
        break;
      case 0x64:
        _0x293a1f["aniName"] = "Candy Rus!";
        break;
      case 0xc9:
        _0x293a1f["aniName"] = "Walrusmelon!";
        break;
      case 0xca:
        _0x293a1f["aniName"] = "Potato Walrus";
        break;
    }
    return (
      (_0x293a1f["skinName"] = this["getSkinName"]()),
      (_0x293a1f["aniDesc"] = ""),
      (_0x293a1f["upgradeText"] = "UPGRADED to " + _0x293a1f["aniName"] + "\x0a You can slide on ice (Hold W) + can climb hills (rocks too!)"),
      (_0x293a1f["aniCol"] = "#633838"),
      _0x293a1f
    );
  }),
  (_0x5c0382["prototype"]["getAbilityInfo"] = function (_0xcc60af) {
    var _0x341765 = {};
    return (
      (_0x341765["abilName"] = "Slide on ice"),
      (_0x341765["abilImg"] = "abilities/Slide.svg"),
      (_0x341765["skinThemeID"] = this["skinThemeID"]),
      (_0x341765["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x341765
    );
  }),
  (_0x5c0382["prototype"]["getSkinName"] = function () {
    return "arctic/walrus/" + this["animalSpecies"] + this["getSubSpecies"]() + "/walrus" + (this["specType"] == 0x0 ? "" : 0x1);
  }),
  (_0x5c0382["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  });

function _0x5c0382() {
  _0x5c0382["superClass"]["call"](this, _0x3fb3b2);
}
(window["Walrus"] = _0x5c0382), _0x17bf26["setCustomClassForGameObjType"](_0x5c0382, _0x3fb3b2, _0x379cc3);
var _0x48c344 = _0x3799d1;
(_0xc3cfb0["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0xc3cfb0["prototype"]["constructor"] = _0xc3cfb0),
  (_0xc3cfb0["superClass"] = _0x48c344),
  (_0xc3cfb0["prototype"]["animalInfo"] = function () {
    var _0x58311f = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x58311f["aniName"] = "Wolf!";
        break;
      case 0xc9:
        _0x58311f["aniName"] = "Pineapple Wolf!";
        break;
      case 0xdc:
        _0x58311f["aniName"] = "Okami Wolf";
        break;
    }
    return (
      (_0x58311f["skinName"] = this["getSkinName"]()),
      (_0x58311f["upgradeText"] = "UPGRADED to " + _0x58311f["aniName"] + "\x0a Wolf paws turn very well on ice!\x0a Press W to howl!"),
      (_0x58311f["aniCol"] = "#6B6B6B"),
      _0x58311f
    );
  }),
  (_0xc3cfb0["prototype"]["getAbilityInfo"] = function (_0x4a6842) {
    var _0x3e5aed = {};
    return (
      (_0x3e5aed["abilName"] = "Howl!"),
      (_0x3e5aed["abilImg"] = "abilities/Howl.svg"),
      (_0x3e5aed["skinThemeID"] = this["skinThemeID"]),
      (_0x3e5aed["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x3e5aed
    );
  }),
  (_0xc3cfb0["prototype"]["getSkinName"] = function () {
    var _0x13b365 = this["specType"] == 0x0 ? "" : 0x1;
    return "arctic/wolf/" + this["animalSpecies"] + this["getSubSpecies"]() + "/wolf" + _0x13b365;
  }),
  (_0xc3cfb0["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  });

function _0xc3cfb0() {
  _0xc3cfb0["superClass"]["call"](this, _0x3fb3b2);
}
(window["Wolf"] = _0xc3cfb0), _0x17bf26["setCustomClassForGameObjType"](_0xc3cfb0, _0x3fb3b2, _0x364eae);
var _0x48c344 = _0x3799d1;
(_0x5c4d52["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x5c4d52["prototype"]["constructor"] = _0x5c4d52),
  (_0x5c4d52["superClass"] = _0x48c344),
  (_0x5c4d52["prototype"]["animalInfo"] = function () {
    var _0x14b47a = {};
    _0x14b47a["aniName"] = "Wolverine!";
    switch (this["animalSpecies"]) {
      case 0xca:
        _0x14b47a["aniName"] = "Floral Wolverine";
        break;
      case 0xdc:
        _0x14b47a["aniName"] = "Summoner Wolverine";
        break;
    }
    return (
      (_0x14b47a["skinName"] = this["getSkinName"]()),
      (_0x14b47a["upgradeText"] = "UPGRADED to " + _0x14b47a["aniName"] + "!\x0a Press W to Let out a Powerful GROWL! (Knocks back prey!)"),
      (_0x14b47a["aniCol"] = "#843A0F"),
      _0x14b47a
    );
  }),
  (_0x5c4d52["prototype"]["getAbilityInfo"] = function (_0x1b48aa) {
    var _0xcf391d = {};
    return (
      (_0xcf391d["abilName"] = "Roar!"),
      (_0xcf391d["abilImg"] = "abilities/Howl-1.svg"),
      (_0xcf391d["skinThemeID"] = this["skinThemeID"]),
      (_0xcf391d["mopeSeasonID"] = this["mopeSeasonID"]),
      _0xcf391d
    );
  }),
  (_0x5c4d52["prototype"]["getSkinName"] = function () {
    return "arctic/wolverine/" + this["animalSpecies"] + this["getSubSpecies"]() + "/wolverine" + (this["specType"] == 0x0 ? "" : this["specType"]);
  }),
  (_0x5c4d52["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  });

function _0x5c4d52() {
  _0x5c4d52["superClass"]["call"](this, _0x3fb3b2);
}
(window["Wolverine"] = _0x5c4d52), _0x17bf26["setCustomClassForGameObjType"](_0x5c4d52, _0x3fb3b2, _0x4a1394);
var _0x48c344 = _0x3799d1;
(_0x49fe20["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x49fe20["prototype"]["constructor"] = _0x49fe20),
  (_0x49fe20["superClass"] = _0x48c344),
  (_0x49fe20["prototype"]["animalInfo"] = function () {
    var _0x2ad6a4 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x2ad6a4["aniName"] = "Muskox!";
        break;
      case 0xc8:
        _0x2ad6a4["aniName"] = "Brazen Bull!";
        break;
      case 0xc9:
        _0x2ad6a4["aniName"] = "Fireworks Ox!";
        break;
      case 0xca:
        _0x2ad6a4["aniName"] = "Monitor Muskox";
        break;
    }
    return (
      (_0x2ad6a4["skinName"] = this["getSkinName"]()),
      (_0x2ad6a4["aniDesc"] = ""),
      (_0x2ad6a4["upgradeText"] = "UPGRADED to " + _0x2ad6a4["aniName"] + "\x0a Press W to charge with your horns! \x0aPlus move decently on ice!"),
      (_0x2ad6a4["aniCol"] = "#231f18"),
      _0x2ad6a4
    );
  }),
  (_0x49fe20["prototype"]["getAbilityInfo"] = function (_0x4e01fe) {
    var _0x535fed = {};
    return (
      (_0x535fed["abilName"] = "Charge!"),
      (_0x535fed["abilImg"] = "abilities/Charge.svg"),
      (_0x535fed["skinThemeID"] = this["skinThemeID"]),
      (_0x535fed["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x535fed
    );
  }),
  (_0x49fe20["prototype"]["getSkinName"] = function () {
    return "arctic/muskox/" + this["animalSpecies"] + this["getSubSpecies"]() + "/muskox" + (this["flag_usingAbility"] ? "2" : "");
  }),
  (_0x49fe20["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  });

function _0x49fe20() {
  _0x49fe20["superClass"]["call"](this, _0x3fb3b2);
}
(window["Muskox"] = _0x49fe20), _0x17bf26["setCustomClassForGameObjType"](_0x49fe20, _0x3fb3b2, _0x50e796);
var _0x48c344 = _0x3799d1;
(_0x32fccd["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x32fccd["prototype"]["constructor"] = _0x32fccd),
  (_0x32fccd["superClass"] = _0x48c344),
  (_0x32fccd["prototype"]["animalInfo"] = function () {
    var _0x4a78b8 = {};
    if (this["animalSpecies"] == 0x1)
      (_0x4a78b8["aniName"] = "The Snowman"), (_0x4a78b8["skinName"] = "arctic/snowman/" + this["animalSpecies"] + "/snowman");
    else
      this["animalSpecies"] == 0x2 &&
        ((_0x4a78b8["aniName"] = "The Snowgirl"), (_0x4a78b8["skinName"] = "arctic/snowman/" + this["animalSpecies"] + "/snowgirl"));
    return (
      (_0x4a78b8["aniDesc"] = ""),
      (_0x4a78b8["upgradeText"] =
        "UPGRADED to " + _0x4a78b8["aniName"] + "!\x0a So it really exists... \x0a Hold W to turn into snow, release W to freeeeeze!"),
      (_0x4a78b8["aniCol"] = "#839eb5"),
      _0x4a78b8
    );
  }),
  (_0x32fccd["prototype"]["getAbilityInfo"] = function (_0x2169a9) {
    var _0x5bc8b5 = {};
    return (
      (_0x5bc8b5["abilName"] = "Freeze Prey!"),
      (_0x5bc8b5["abilImg"] = "abilities/Ice-Freeze.svg"),
      (_0x5bc8b5["skinThemeID"] = this["skinThemeID"]),
      (_0x5bc8b5["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x5bc8b5
    );
  }),
  (_0x32fccd["prototype"]["getSkinName"] = function () {
    var _0x22fc8c = "";
    if (this["animalSpecies"] == 0x2) _0x22fc8c = "arctic/snowman/" + this["animalSpecies"] + "/snowgirl";
    else _0x22fc8c = "arctic/snowman/" + this["animalSpecies"] + "/snowman";
    return (_0x22fc8c += this["specType"] == 0x0 ? "" : 0x1), _0x22fc8c;
  }),
  (_0x32fccd["prototype"]["drawUnderSkinTail"] = function (_0x2d16e2) {
    if (!this["isCamouflage"]) _0x32fccd["superClass"]["prototype"]["drawUnderSkinTail"]["call"](this, _0x2d16e2);
  }),
  (_0x32fccd["prototype"]["drawHealthBar"] = function () {
    if (!this["isCamouflage"]) _0x32fccd["superClass"]["prototype"]["drawHealthBar"]["call"](this);
  }),
  (_0x32fccd["prototype"]["isTransforming"] = ![]),
  (_0x32fccd["prototype"]["isCamouflage"] = ![]),
  (_0x32fccd["prototype"]["carrotAlpha"] = 0x0),
  (_0x32fccd["prototype"]["getIdealOpacity"] = function () {
    var _0x5ca2ac = this["flag_underWater"] || (this["flag_usingAbility"] && this["isTransforming"]) || this["isCamouflage"] ? 0x0 : 0x1;
    return _0x5ca2ac;
  }),
  (_0x32fccd["prototype"]["biteStart"] = 0x0),
  (_0x32fccd["prototype"]["flapAmount"] = 0x3),
  (_0x32fccd["prototype"]["flapDur"] = 1.5),
  (_0x32fccd["prototype"]["roarStartT"] = -0x1f4),
  (_0x32fccd["prototype"]["drawSkinCustomization"] = function () {
    if (this["flag_usingAbility"] && this["isTransforming"]) {
      if (this["isTransforming"]) {
        _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0x1);
        var _0x45e7f1 = this["getSkinImageObj"]("img/snowball.png");
        if (_0x45e7f1) {
          var _0x59f3fd = this["rad"];
          _0x587de3["rotate"](this["rPer"] * Math["PI"] * 0x2),
            _0x587de3["drawImage"](_0x45e7f1, -_0x59f3fd, -_0x59f3fd, 0x2 * _0x59f3fd, 0x2 * _0x59f3fd);
        } else this["drawOutlinedCircle"]("", "white");
        _0x587de3["restore"]();
      }
    } else {
      this["setSkinScale"]();
      if (!this["flag_usingAbility"] && !this["isCamouflage"]) {
        if (this["carrotAlpha"] > 0x0) {
          var _0x4389a5 = this["getSkinImageObj"]("skins/arctic/snowman/" + this["animalSpecies"] + "/carrot_nose.png"),
            _0x4dd02b = this["skinScale"],
            _0x59f3fd = this["skinRad"];
          if (_0x4389a5) {
            _0x587de3["save"]();
            var _0x59f3fd = this["rad"];
            (_0x587de3["globalAlpha"] = this["carrotAlpha"]),
              _0x587de3["drawImage"](
                _0x4389a5,
                -_0x59f3fd * _0x4dd02b,
                -_0x59f3fd * _0x4dd02b,
                0x2 * _0x59f3fd * _0x4dd02b,
                0x2 * _0x59f3fd * _0x4dd02b
              ),
              _0x587de3["restore"]();
          }
        }
        this["biteStart"] = 0x0;
        return;
      } else {
        this["biteStart"] == 0x0 && (this["biteStart"] = _0x168a54 + this["roarStartT"]);
        if (this["specType"] != 0x0 && this["specType"] != undefined) {
          var _0x4b6feb = this["animalSpecies"] == 0x2 ? "snowgirl" : "snowman",
            _0x271492 = "skins/arctic/snowman/" + this["animalSpecies"] + "/" + _0x4b6feb + "_head1.png",
            _0x4389a5 = this["getSkinImageObj"](_0x271492),
            _0x33d8e6 = (_0x168a54 - this["biteStart"]) / 0x3e8,
            _0x4dd02b = this["skinScale"] * 1.07,
            _0x59f3fd = this["skinRad"];
          if (_0x4389a5) {
            var _0x4a747c = 0x0,
              _0x2ad527 = this["flapAmount"] - (this["animalSpecies"] == 0x1 ? 0.5 : 0x0);
            (_0x4a747c = !(_0x57ae6d == 0x2) ? _0x120bbb(_0x33d8e6, this["flapDur"], _0x2ad527, 0x2) : this["flapAmount"]), _0x587de3["save"]();
            var _0x59f3fd = this["rad"];
            _0x587de3["drawImage"](
              _0x4389a5,
              -_0x59f3fd * _0x4dd02b,
              (-_0x59f3fd + _0x59f3fd * 0.1) * _0x4dd02b - _0x4a747c,
              0x2 * _0x59f3fd * _0x4dd02b,
              0x2 * _0x59f3fd * _0x4dd02b
            ),
              _0x587de3["restore"]();
          }
        }
      }
    }
  }),
  (_0x32fccd["prototype"]["customUpdatedProperty"] = function (_0xe5ec0d, _0x165549) {
    if (_0xe5ec0d == _0x26f99b) this["isTransforming"] = _0x165549["readUInt8"]() == 0x1;
    else {
      if (_0xe5ec0d == _0xe69e34) this["isCamouflage"] = _0x165549["readUInt8"]() == 0x1;
      else {
        if (_0xe5ec0d == _0xb95982) this["carrotAlpha"] = _0x165549["readUInt16"]() / 0x3e8;
        else _0xe5ec0d == _0x56dd42 && (this["lights"] = _0x165549["readUInt8"]());
      }
    }
  }),
  (_0x32fccd["prototype"]["readCustomData_onNewlyVisible"] = function (_0x113da3) {
    _0x32fccd["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x113da3),
      (this["isTransforming"] = _0x113da3["readUInt8"]() == 0x1),
      (this["isCamouflage"] = _0x113da3["readUInt8"]() == 0x1),
      (this["carrotAlpha"] = _0x113da3["readUInt16"]() / 0x3e8),
      (this["lights"] = _0x113da3["readUInt8"]());
  });

function _0x32fccd() {
  _0x32fccd["superClass"]["call"](this, _0x3fb3b2);
}
(window["Snowman"] = _0x32fccd), _0x17bf26["setCustomClassForGameObjType"](_0x32fccd, _0x3fb3b2, _0x6ff36b);
var _0x48c344 = _0x3799d1;
(_0x69379f["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x69379f["prototype"]["constructor"] = _0x69379f),
  (_0x69379f["superClass"] = _0x48c344),
  (_0x69379f["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"];
    if (this["flag_underWater"]) this["z"] = -0x64;
    else {
      if (this["flag_eff_tossedInAir"]) this["z"] = 0x4b0 + this["rad"];
      else {
        if (this["flag_flying"]) {
          this["z"] = 0x186a0;
          if (this["flag_isGrabbed"]) this["z"] -= this["rad"];
        } else {
          if (this["flag_canClimbHill"]) this["z"] = 0x3eb;
          else this["z"] = this["rad"];
        }
      }
    }
  }),
  (_0x69379f["prototype"]["animalInfo"] = function () {
    var _0x27d851 = {};
    switch (this["animalSpecies"]) {
      case 0xcc:
        switch (this["animalSubSpecies"]) {
          case 0x2:
            _0x27d851["aniName"] = "Golden Devil Goat";
            break;
        }
        break;
      case 0xc9:
        switch (this["animalSubSpecies"]) {
          case 0x1:
            _0x27d851["aniName"] = "Fruity Ice Markhor";
            break;
        }
        break;
      case 0x1:
        switch (this["animalSubSpecies"]) {
          case 0x0:
            _0x27d851["aniName"] = "Markhor";
            break;
        }
        break;
      case 0x2:
        switch (this["animalSubSpecies"]) {
          case 0x0:
            _0x27d851["aniName"] = "Big Goat";
        }
        break;
    }
    return (
      (_0x27d851["aniCol"] = "#FF9000"),
      (_0x27d851["skinName"] = this["getSkinName"]()),
      (_0x27d851["upgradeText"] = "UPGRADED to " + _0x27d851["aniName"] + "!\x0aPress 'W' to Jump High from hills. Ram in the preys on land."),
      _0x27d851
    );
  }),
  (_0x69379f["prototype"]["moveF"] = 0.08),
  (_0x69379f["prototype"]["jumpAnim"] = null),
  (_0x69379f["prototype"]["frame"] = 0x0),
  (_0x69379f["prototype"]["getSkinImageObj"] = function (_0x2f55b5) {
    var _0xbcc67c = this["animalSpecies"] === 0xcc || this["animalSpecies"] === 0xc9 ? 0x1 : 0x2;
    return this["getSkinImageObjForSeason"](_0x2f55b5, _0xbcc67c);
  }),
  (_0x69379f["prototype"]["getAbilityInfo"] = function (_0x2233d1) {
    var _0x5706a4 = {};
    return (
      (_0x5706a4["abilImg"] = "abilities/Headbutt.svg"),
      (_0x5706a4["abilName"] = "Head Butt"),
      (_0x5706a4["skinThemeID"] = this["skinThemeID"]),
      (_0x5706a4["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x5706a4
    );
  }),
  (_0x69379f["prototype"]["getSpeciesPath"] = function (_0x3a87ed) {
    var _0x1d9a86 = "/" + this["animalSubSpecies"];
    return "arctic/" + _0x3a87ed + "/" + this["animalSpecies"] + _0x1d9a86 + "/";
  }),
  (_0x69379f["prototype"]["moveF"] = 0.08),
  (_0x69379f["prototype"]["jumpAnim"] = null),
  (_0x69379f["prototype"]["frame"] = 0x0),
  (_0x69379f["prototype"]["drawUnderSkinImg"] = function () {
    if (this["flag_usingAbility"] && this["specType"] > 0x2) {
      var _0x2b8215 = 0x1;
      this["jumpAnim"] == null &&
        ((this["jumpAnim"] = new _0x5431fd(this, 0.5, _0x5431fd["halfWave"])),
        (this["jumpAnim"]["keepLastFrame"] = !![]),
        (this["jumpAnim"]["loop"] = !![]),
        (this["jumpAnim"]["onFrameEntered"] = function (_0xe14ee0) {
          this["forObj"]["frame"] = _0xe14ee0;
        }),
        (this["jumpAnim"]["onStop"] = function () {}));
      this["jumpAnim"] != null && this["jumpAnim"]["run"]();
      var _0x1f75c7 = this["rad"] - this["outlineW"],
        _0x1807a0 = 0x1f4 / 0x154;
      this["setSkinScale"]();
      var _0x49a2e6 = "skins/" + this["getSpeciesPath"]("markhor") + "/front_legs.png",
        _0x362de7 = "skins/" + this["getSpeciesPath"]("markhor") + "/back_legs.png",
        _0x111600 = this["getSkinImageObj"](_0x49a2e6),
        _0x740187 = this["getSkinImageObj"](_0x362de7);
      if (_0x111600 && _0x740187) {
        var _0x1807a0 = this["skinScale"] + this["skinScale"] * 0.15 * this["frame"],
          _0x1f75c7 = this["skinRad"];
        this["specType"] == 0x3
          ? (_0x587de3["drawImage"](
              _0x111600,
              -_0x1f75c7 * _0x1807a0,
              -_0x1f75c7 * _0x1807a0,
              0x2 * _0x1f75c7 * _0x1807a0,
              0x2 * _0x1f75c7 * _0x1807a0
            ),
            _0x587de3["drawImage"](
              _0x740187,
              -_0x1f75c7 * _0x1807a0,
              (-_0x1f75c7 - _0x1f75c7 * this["moveF"] * this["frame"]) * _0x1807a0,
              0x2 * _0x1f75c7 * _0x1807a0,
              0x2 * _0x1f75c7 * _0x1807a0
            ))
          : (_0x587de3["drawImage"](
              _0x740187,
              -_0x1f75c7 * _0x1807a0,
              -_0x1f75c7 * _0x1807a0,
              0x2 * _0x1f75c7 * _0x1807a0,
              0x2 * _0x1f75c7 * _0x1807a0
            ),
            _0x587de3["drawImage"](
              _0x111600,
              -_0x1f75c7 * _0x1807a0,
              (-_0x1f75c7 + _0x1f75c7 * this["moveF"] * this["frame"]) * _0x1807a0,
              0x2 * _0x1f75c7 * _0x1807a0,
              0x2 * _0x1f75c7 * _0x1807a0
            ));
      }
    } else this["jumpAnim"] = null;
  }),
  (_0x69379f["prototype"]["drawSkinCustomization"] = function () {
    if (!this["flag_usingAbility"]) return;
    var _0x45dca3 = 0x1f4 / 0x154,
      _0x390843 = 0.1;
    if (this["specType"] > 0x2) _0x390843 = 0.2 * this["frame"];
    {
      var _0x33cc75 = this["getSkinImageObj"](this["getHead"]("markhor", !![]));
      if (_0x33cc75) {
        _0x587de3["save"]();
        var _0x350081 = this["rad"];
        _0x587de3["drawImage"](
          _0x33cc75,
          -_0x350081 * _0x45dca3,
          (-_0x350081 + _0x350081 * _0x390843) * _0x45dca3,
          0x2 * _0x350081 * _0x45dca3,
          0x2 * _0x350081 * _0x45dca3
        ),
          _0x587de3["restore"]();
      }
    }
  }),
  (_0x69379f["prototype"]["getHead"] = function (_0x165483, _0x4e1d3c) {
    var _0xd5cddc = "skins/" + (_0x4e1d3c ? this["getSpeciesPath"](_0x165483) + "/" : _0x165483 + "/");
    return (_0xd5cddc += _0x165483 + "_head"), this["specType"] == 0x2 && (_0xd5cddc += "_charging"), (_0xd5cddc += ".png"), _0xd5cddc;
  }),
  (_0x69379f["prototype"]["getSkinName"] = function () {
    var _0x34c3a8 = this["getSpeciesPath"]("markhor") + "/markhor";
    return (_0x34c3a8 += this["specType"] == 0x0 ? "" : 0x1), _0x34c3a8;
  });

function _0x69379f() {
  _0x69379f["superClass"]["call"](this, _0x3fb3b2);
}
(window["Markhor"] = _0x69379f), _0x17bf26["setCustomClassForGameObjType"](_0x69379f, _0x3fb3b2, _0x5195b7);
var _0x48c344 = _0x3799d1;
(_0x4e307e["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x4e307e["prototype"]["constructor"] = _0x4e307e),
  (_0x4e307e["superClass"] = _0x48c344),
  (_0x4e307e["prototype"]["animalInfo"] = function () {
    var _0x27f6b1 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x27f6b1["aniName"] = "Reindeer";
        break;
      case 0x1:
        _0x27f6b1["aniName"] = "Musk Deer";
        break;
      case 0xc9:
        _0x27f6b1["aniName"] = "Sunburn Reindeer";
        break;
      case 0xca:
        _0x27f6b1["aniName"] = "Piebald Cosmos";
        break;
      case 0xcc:
        _0x27f6b1["aniName"] = "Spideer";
        break;
    }
    return (
      (_0x27f6b1["aniDesc"] = ""),
      (_0x27f6b1["upgradeText"] =
        "UPGRADED to " + _0x27f6b1["aniName"] + "!\x0a Press W to dig up food! \x0a Your sharp hooves let you turn very well on ice!"),
      (_0x27f6b1["aniCol"] = "#a68976"),
      (_0x27f6b1["skinName"] = this["getSkinName"]()),
      _0x27f6b1
    );
  }),
  (_0x4e307e["prototype"]["getAbilityInfo"] = function (_0x2e5814) {
    var _0x3f98a5 = {};
    return (
      (_0x3f98a5["abilName"] = "Dig Food!"),
      (_0x3f98a5["abilImg"] = "abilities/Dig.svg"),
      (_0x3f98a5["skinThemeID"] = this["skinThemeID"]),
      (_0x3f98a5["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x3f98a5
    );
  }),
  (_0x4e307e["prototype"]["getSkinName"] = function () {
    return "arctic/reindeer/" + this["animalSpecies"] + this["getSubSpecies"]() + "/reindeer";
  }),
  (_0x4e307e["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  });

function _0x4e307e() {
  _0x4e307e["superClass"]["call"](this, _0x3fb3b2);
}
(window["Reindeer"] = _0x4e307e), _0x17bf26["setCustomClassForGameObjType"](_0x4e307e, _0x3fb3b2, _0x31d5ba);
var _0x48c344 = _0x3799d1;
(_0x258d3a["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x258d3a["prototype"]["constructor"] = _0x258d3a),
  (_0x258d3a["superClass"] = _0x48c344),
  (_0x258d3a["prototype"]["getSkinName"] = function () {
    return this["getSpeciesPath"]("trex") + "/trex";
  }),
  (_0x258d3a["prototype"]["animalInfo"] = function () {
    var _0x3cf317 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x3cf317["aniName"] = "The T.Rex";
        break;
      case 0x1:
        _0x3cf317["aniName"] = "Golden T.Rex";
        break;
      case 0x2:
        _0x3cf317["aniName"] = "Ember T.Rex";
        break;
      case 0x64:
        _0x3cf317["aniName"] = "Mr. Dollar";
        break;
      case 0xc8:
        _0x3cf317["aniName"] = "Kaiju Rex";
        break;
      case 0xca:
        switch (this["animalSubSpecies"]) {
          case 0x0:
            _0x3cf317["aniName"] = "Hyporevenant Rex";
            break;
        }
        break;
      case 0xcc:
        _0x3cf317["aniName"] = "Tartarus Rex";
        break;
      case 0xdc:
        _0x3cf317["aniName"] = "Bio Mutant T-rex";
        break;
    }
    return (
      (_0x3cf317["skinName"] = this["getSkinName"]()),
      (_0x3cf317["upgradeText"] =
        "UPGRADED to " + _0x3cf317["aniName"] + " The Dinosaur!\x0a This ancient dinosaur has powerful jaws that can drag prey around!!"),
      (_0x3cf317["aniCol"] = "#862A2A"),
      _0x3cf317
    );
  }),
  (_0x258d3a["prototype"]["getSubSpecies"] = function () {
    return this["animalSpecies"] === 0xca ? "/" + this["animalSubSpecies"] : "";
  }),
  (_0x258d3a["prototype"]["getSpeciesPath"] = function (_0x177260) {
    return "land/" + _0x177260 + "/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x258d3a["prototype"]["getAbilityInfo"] = function (_0xc2c9c1) {
    var _0x87b787 = {};
    return (
      (_0x87b787["abilName"] = "Jaws Bite"),
      (_0x87b787["abilImg"] = "abilities/Bite.svg"),
      (_0x87b787["skinThemeID"] = this["skinThemeID"]),
      (_0x87b787["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x87b787
    );
  }),
  (_0x258d3a["prototype"]["getAniRadius"] = function (_0x2426be) {
    if (this["flag_usingDiveAbility"]) return _0x2426be * 0.7;
    return _0x2426be;
  }),
  (_0x258d3a["prototype"]["basicDrawSkinImg"] = function () {
    this["setSkinScale"]();
    var _0x5269f9 = 1.5,
      _0xd2136f = this["skinScale"],
      _0x24daae = this["getAniRadius"](this["skinRad"]);
    if (this["loadedSkinImg"]) {
      var _0x46000d = _0x24daae / 0x2;
      _0x587de3["drawImage"](
        this["loadedSkinImg"],
        -_0x24daae - _0x46000d + _0x5269f9,
        -_0x24daae - _0x46000d + _0x5269f9,
        0x2 * _0x24daae * _0xd2136f,
        0x2 * _0x24daae * (_0xd2136f * 1.2)
      );
    }
  });

function _0x258d3a() {
  _0x258d3a["superClass"]["call"](this, _0x3fb3b2);
}
(window["Trex"] = _0x258d3a), _0x17bf26["setCustomClassForGameObjType"](_0x258d3a, _0x3fb3b2, _0x11d87b);
var _0x48c344 = _0x3799d1;
(_0x239a76["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x239a76["prototype"]["constructor"] = _0x239a76),
  (_0x239a76["superClass"] = _0x48c344),
  (_0x239a76["prototype"]["getSkinName"] = function () {
    var _0x3978b6 = this["getSubSpecies"]();
    switch (this["animalSpecies"]) {
      case 0x3:
        switch (this["animalSubSpecies"]) {
          case 0x1:
          case 0x2:
          case 0x8:
          case 0x9:
            _0x3978b6 = this["animalSpecies"] + _0x3978b6;
            break;
          default:
            _0x3978b6 = this["animalSpecies"] + "/1";
            break;
        }
        break;
      case 0xc8:
        switch (this["animalSubSpecies"]) {
          case 0x0:
          case 0x1:
          case 0x2:
          case 0x3:
          case 0x4:
            _0x3978b6 = this["animalSpecies"] + _0x3978b6;
            break;
        }
        break;
      case 0xca:
        _0x3978b6 = this["animalSpecies"] + _0x3978b6;
        break;
    }
    var _0x23315e = "land/dragon/" + _0x3978b6 + "/dragon";
    return _0x23315e;
  }),
  (_0x239a76["prototype"]["getSubSpecies"] = function () {
    var _0x572df3 = this["animalSpecies"];
    return (
      (this["animalSpecies"] == 0x3 || this["animalSpecies"] == 0xc8 || this["animalSpecies"] == 0xca) &&
        (_0x572df3 = "/" + this["animalSubSpecies"]),
      _0x572df3
    );
  }),
  (_0x239a76["prototype"]["animalInfo"] = function () {
    var _0x45d2c6 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x45d2c6["aniName"] = "Dragon!";
        break;
      case 0x1:
        _0x45d2c6["aniName"] = "Golden Dragon!";
        break;
      case 0x2:
        _0x45d2c6["aniName"] = "Knight Dragon!";
        break;
      case 0x3:
        _0x45d2c6["aniName"] = "Boss Dragon!";
        break;
      case 0x64:
        _0x45d2c6["aniName"] = "The Gargon!";
        break;
      case 0xca:
        switch (this["animalSubSpecies"]) {
          case 0x0:
            _0x45d2c6["aniName"] = "Aberrant Dragon";
            break;
          case 0x1:
            _0x45d2c6["aniName"] = "Ghoul Dragon";
            break;
        }
        break;
      case 0xcc:
        _0x45d2c6["aniName"] = "Magma Dragon!";
        break;
      case 0xc8:
        switch (this["animalSubSpecies"]) {
          case 0x0:
            _0x45d2c6["aniName"] = "Goofy Dragon!";
            break;
          case 0x1:
            _0x45d2c6["aniName"] = "Desert Dragon!";
            break;
          case 0x2:
            _0x45d2c6["aniName"] = "Forge Dragon!";
            break;
          case 0x3:
            _0x45d2c6["aniName"] = "Mythical Serpent!";
            break;
          case 0x4:
            _0x45d2c6["aniName"] = "Firey Dragon!";
            break;
        }
        break;
      case 0xc9:
        _0x45d2c6["aniName"] = "Squishy Dragon!";
        break;
      case 0xce:
        _0x45d2c6["aniName"] = "AG Dragon!";
        break;
      case 0xdc:
        _0x45d2c6["aniName"] = "Behemoth Hive Dragon";
        break;
    }
    return (
      (_0x45d2c6["aniCol"] = "#FF9000"),
      (_0x45d2c6["skinName"] = this["getSkinName"]()),
      (_0x45d2c6["upgradeText"] = "UPGRADED to " + _0x45d2c6["aniName"] + "\x0a (You're amazing!) \x0aFly over everything, Hold W to shoot fire!"),
      (_0x45d2c6["aniCol"] = "#22FF8A"),
      _0x45d2c6
    );
  }),
  (_0x239a76["prototype"]["getAbilityInfo"] = function (_0x21fcb0) {
    var _0x5da13c = {};
    return (
      (_0x5da13c["abilName"] = "Fire"),
      (_0x5da13c["abilImg"] = "abilities/Firestorm.svg"),
      (_0x5da13c["speciesType"] = this["animalSpecies"] == 0x1 ? 0x2 : 0x0),
      (_0x5da13c["skinThemeID"] = this["skinThemeID"]),
      (_0x5da13c["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x5da13c
    );
  }),
  (_0x239a76["prototype"]["diveColor1"] = "#64a034"),
  (_0x239a76["prototype"]["diveColor2"] = "#598b30"),
  (_0x239a76["prototype"]["onAnimalSpeciesSet"] = function () {
    switch (this["animalSpecies"]) {
      case 0x1:
        (this["diveColor1"] = "#dbb300"), (this["diveColor2"] = "#bf9d04");
        break;
      case 0x2:
        (this["diveColor1"] = "#79c9a8"), (this["diveColor2"] = "#6fad9f");
        break;
    }
  });

function _0x239a76() {
  _0x239a76["superClass"]["call"](this, _0x3fb3b2);
}
(window["Dragon"] = _0x239a76), _0x17bf26["setCustomClassForGameObjType"](_0x239a76, _0x3fb3b2, _0x1ae9e8);
var _0x48c344 = _0x3799d1;
(_0x2e7c1d["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x2e7c1d["prototype"]["constructor"] = _0x2e7c1d),
  (_0x2e7c1d["superClass"] = _0x48c344),
  (_0x2e7c1d["prototype"]["animalInfo"] = function () {
    var _0x2083d2 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x2083d2["aniName"] = "Elephant!";
        break;
      case 0x1:
        _0x2083d2["aniName"] = "Golden Elephant!";
        break;
      case 0x2:
        _0x2083d2["aniName"] = "Albino Elephant!";
        break;
      case 0xc9:
        _0x2083d2["aniName"] = "Leiphant!";
        break;
      case 0xca:
        _0x2083d2["aniName"] = "Ice Wizard Elephant";
        break;
      case 0xdc:
        _0x2083d2["aniName"] = "Lightwave Elephant";
        break;
    }
    return (
      (_0x2083d2["skinName"] = "land/elephant/" + this["animalSpecies"] + "/elephant"),
      (_0x2083d2["aniDesc"] = ""),
      (_0x2083d2["upgradeText"] = "UPGRADED to " + _0x2083d2["aniName"] + "\x0a Use your long trunk to attack and eat food!"),
      (_0x2083d2["aniCol"] = "#945A99"),
      _0x2083d2
    );
  }),
  (_0x2e7c1d["prototype"]["getAbilityInfo"] = function (_0x3adcb8) {
    var _0x1a4367 = {};
    return (
      (_0x1a4367["abilImg"] = "abilities/TrunkHit.svg"),
      (_0x1a4367["abilName"] = "Trunk Hit"),
      (_0x1a4367["skinThemeID"] = this["skinThemeID"]),
      (_0x1a4367["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x1a4367
    );
  }),
  (_0x2e7c1d["prototype"]["getSkinName"] = function () {
    let _0x15e8ab = this["getSpeciesPath"]() + "/elephant";
    return (_0x15e8ab += this["specType"] == 0x0 ? "" : 0x1), _0x15e8ab;
  }),
  (_0x2e7c1d["prototype"]["getSpeciesPath"] = function () {
    return "land/elephant/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x2e7c1d["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x2e7c1d["prototype"]["getSkinImageObj"] = function (_0x42c37c) {
    var _0x4e8aa7 = this["animalSpecies"] === 0x1 || this["animalSpecies"] === 0x2 || this["animalSpecies"] === 0xc9 ? 0x1 : 0x2,
      _0xf7b15d = "./assets/s/" + _0x4e8aa7 + "/" + _0x42c37c;
    return (
      this["skinThemeID"] > 0x0 && (_0xf7b15d = "./assets/t/" + this["skinThemeID"] + "/" + _0x42c37c),
      _0x2d8f34(_0xf7b15d, function (_0x313c3) {
        console["log"](_0x313c3["src"]);
      })
    );
  });

function _0x2e7c1d() {
  _0x2e7c1d["superClass"]["call"](this, _0x3fb3b2);
}
(window["Elephant"] = _0x2e7c1d), _0x17bf26["setCustomClassForGameObjType"](_0x2e7c1d, _0x3fb3b2, _0xb5d198);
var _0x48c344 = _0x3799d1;
(_0x1209f1["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1209f1["prototype"]["constructor"] = _0x1209f1),
  (_0x1209f1["superClass"] = _0x48c344),
  (_0x1209f1["prototype"]["animalInfo"] = function () {
    var _0x4cb208 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x4cb208["aniName"] = "Hippo!";
        break;
      case 0x1:
        _0x4cb208["aniName"] = "Golden Hippo!";
        break;
      case 0x2:
        _0x4cb208["aniName"] = "Pygmy Hippo!";
        break;
      case 0x64:
        _0x4cb208["aniName"] = "Swampster!";
        break;
      case 0xca:
        _0x4cb208["aniName"] = "Planet Hippo";
        break;
      case 0xcc:
        _0x4cb208["aniName"] = "Sun Hippo!";
        break;
    }
    return (
      (_0x4cb208["skinName"] = this["getSkinName"]()),
      (_0x4cb208["upgradeText"] = "UPGRADED to " + _0x4cb208["aniName"] + "!\x0aHippos are great swimmers, dominate the Lakes/Oceans/Mud!"),
      (_0x4cb208["aniCol"] = "#945A99"),
      _0x4cb208
    );
  }),
  (_0x1209f1["prototype"]["getAbilityInfo"] = function (_0xd12ce8) {
    var _0x400ca6 = {};
    return (
      (_0x400ca6["abilName"] = "Loud Grown!"),
      (_0x400ca6["abilImg"] = "abilities/Howl-1.svg"),
      (_0x400ca6["skinThemeID"] = this["skinThemeID"]),
      (_0x400ca6["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x400ca6
    );
  }),
  (_0x1209f1["prototype"]["getSkinName"] = function () {
    let _0x3f3b21 = this["getSpeciesPath"]() + "/hippo";
    return (_0x3f3b21 += this["specType"] == 0x0 ? "" : 0x1), _0x3f3b21;
  }),
  (_0x1209f1["prototype"]["getSpeciesPath"] = function () {
    return "land/hippo/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x1209f1["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  });

function _0x1209f1() {
  _0x1209f1["superClass"]["call"](this, _0x3fb3b2);
}
(window["Hippo"] = _0x1209f1), _0x17bf26["setCustomClassForGameObjType"](_0x1209f1, _0x3fb3b2, _0x8151b9);
var _0x48c344 = _0x3799d1;
(_0x1ddeeb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1ddeeb["prototype"]["constructor"] = _0x1ddeeb),
  (_0x1ddeeb["superClass"] = _0x48c344),
  (_0x1ddeeb["prototype"]["animalInfo"] = function () {
    var _0x109d40 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x109d40["aniName"] = "Giant Spider!";
        break;
      case 0x1:
        _0x109d40["aniName"] = "Golden Spider!";
        break;
      case 0x2:
        _0x109d40["aniName"] = "Goliath Spider!";
        break;
      case 0xca:
        _0x109d40["aniName"] = "Sapphire Cave Spider";
        break;
      case 0xcc:
        _0x109d40["aniName"] = "Smile Spider!";
        break;
    }
    return (
      (_0x109d40["skinName"] = this["getSkinName"]()),
      (_0x109d40["upgradeText"] = "UPGRADED to " + _0x109d40["aniName"] + "!\x0a Place web around the game to catch prey!"),
      (_0x109d40["aniCol"] = "black"),
      _0x109d40
    );
  }),
  (_0x1ddeeb["prototype"]["getAbilityInfo"] = function (_0x4f44e9) {
    var _0x42ff43 = {};
    return (
      (_0x42ff43["abilName"] = "Spin Web!"),
      (_0x42ff43["abilImg"] = "abilities/Web.svg"),
      (_0x42ff43["skinThemeID"] = this["skinThemeID"]),
      (_0x42ff43["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x42ff43
    );
  }),
  (_0x1ddeeb["prototype"]["getSkinName"] = function () {
    let _0x2e68dd = this["getSpeciesPath"]() + "/giantspider";
    return _0x2e68dd;
  }),
  (_0x1ddeeb["prototype"]["getSpeciesPath"] = function () {
    return "land/giantspider/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x1ddeeb["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  });

function _0x1ddeeb() {
  _0x1ddeeb["superClass"]["call"](this, _0x3fb3b2);
}
(window["GiantSpider"] = _0x1ddeeb), _0x17bf26["setCustomClassForGameObjType"](_0x1ddeeb, _0x3fb3b2, _0x2a018e);
var _0x48c344 = _0x3799d1;
(_0x30faa9["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x30faa9["prototype"]["constructor"] = _0x30faa9),
  (_0x30faa9["superClass"] = _0x48c344),
  (_0x30faa9["prototype"]["animalInfo"] = function () {
    var _0x2467f9 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x2467f9["aniName"] = "Boa Constrictor!";
        break;
      case 0x1:
        _0x2467f9["aniName"] = "Golden Boa!";
        break;
      case 0x2:
        _0x2467f9["aniName"] = "Tree Boa!";
        break;
    }
    return (
      (_0x2467f9["skinName"] = this["getSkinName"]()),
      (_0x2467f9["aniDesc"] = ""),
      (_0x2467f9["upgradeText"] = "UPGRADED to " + _0x2467f9["aniName"] + "!\x0a Coil and suffocate other animals!"),
      (_0x2467f9["aniCol"] = "black"),
      _0x2467f9
    );
  }),
  (_0x30faa9["prototype"]["getSkinName"] = function () {
    let _0xdb5ccd = this["getSpeciesPath"]() + "/boaconstrictor";
    return _0xdb5ccd;
  }),
  (_0x30faa9["prototype"]["getSpeciesPath"] = function () {
    return "land/boaconstrictor/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x30faa9["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x30faa9["prototype"]["getAbilityInfo"] = function (_0x1791d0) {
    var _0x4fedc2 = {};
    return (
      (_0x4fedc2["abilName"] = "Suffocate prey"),
      (_0x4fedc2["abilImg"] = "abilities/Constrict.svg"),
      (_0x4fedc2["skinThemeID"] = this["skinThemeID"]),
      (_0x4fedc2["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x4fedc2
    );
  }),
  (_0x30faa9["prototype"]["getSkinName"] = function () {
    var _0x556ec8 = this["getSpeciesPath"]("boaconstrictor") + "/boaconstrictor";
    if (this["flag_usingAbility"] && this["specType"] == 0x1) _0x556ec8 += "2";
    else _0x556ec8 += this["specType"] == 0x0 ? "" : 0x1;
    return _0x556ec8;
  }),
  (_0x30faa9["prototype"]["drawUnderSkinImg"] = function () {
    if (this["flag_usingAbility"]) return;
    var _0x4cf0c9 = this["rad"] - this["outlineW"],
      _0x238a22 = 0x1f4 / 0x154,
      _0x238a5a = this["getSkinImageObj"]("skins/" + this["getSpeciesPath"]("boaconstrictor") + "/tongue.png"),
      _0x54e3de = (_0x168a54 - this["spawnTime"]) / 0x3e8,
      _0x1410de = _0x57ae6d == 0x2 ? 0x0 : _0x120bbb(_0x54e3de, 0.5, 0x5, 0.5),
      _0x251cbc = _0x57ae6d == 0x2 ? 0x0 : 0x5;
    _0x238a5a &&
      _0x587de3["drawImage"](
        _0x238a5a,
        -_0x4cf0c9 * _0x238a22,
        -(_0x4cf0c9 + _0x251cbc + _0x1410de) * _0x238a22,
        0x2 * _0x4cf0c9 * _0x238a22,
        0x2 * _0x4cf0c9 * _0x238a22
      );
  }),
  (_0x30faa9["prototype"]["getSkinImageObj"] = function (_0x547c0e) {
    var _0x1682b8 = this["animalSpecies"] === 0x1 || this["animalSpecies"] === 0x2 ? 0x1 : this["mopeSeasonID"];
    return this["getSkinImageObjForSeason"](_0x547c0e, _0x1682b8);
  });

function _0x30faa9() {
  _0x30faa9["superClass"]["call"](this, _0x3fb3b2);
}
(window["BoaConstrictor"] = _0x30faa9), _0x17bf26["setCustomClassForGameObjType"](_0x30faa9, _0x3fb3b2, _0x2e22f9);
var _0x48c344 = _0x3799d1;
(_0x12ea96["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x12ea96["prototype"]["constructor"] = _0x12ea96),
  (_0x12ea96["superClass"] = _0x48c344),
  (_0x12ea96["prototype"]["animalInfo"] = function () {
    var _0x487f84 = {};
    _0x487f84["aniName"] = "Gorilla!";
    switch (this["animalSpecies"]) {
      case 0x64:
        _0x487f84["aniName"] = "Grim Reaper";
        break;
      case 0xc9:
        _0x487f84["aniName"] = "Explorer Ape";
        break;
      case 0xca:
        _0x487f84["aniName"] = "Kongrilla";
        break;
      case 0xcc:
        _0x487f84["aniName"] = "Phantom Gorilla";
        break;
    }
    return (
      (_0x487f84["skinName"] = this["getSkinName"]()),
      (_0x487f84["upgradeText"] =
        "UPGRADED to " + _0x487f84["aniName"] + "!\x0a" + _0x487f84["aniName"] + "s are great swimmers, dominate the Lakes/Oceans/Mud!"),
      (_0x487f84["aniCol"] = "#945A99"),
      _0x487f84
    );
  }),
  (_0x12ea96["prototype"]["getAbilityInfo"] = function (_0x3be3ab) {
    var _0xce4915 = {};
    return (
      (_0xce4915["abilName"] = "Fruit Throw!"),
      (_0xce4915["abilImg"] = "abilities/Throw.svg"),
      (_0xce4915["skinThemeID"] = this["skinThemeID"]),
      (_0xce4915["mopeSeasonID"] = this["mopeSeasonID"]),
      _0xce4915
    );
  }),
  (_0x12ea96["prototype"]["getSkinName"] = function () {
    let _0x56645c = this["getSpeciesPath"]() + "/gorilla";
    return (_0x56645c += this["specType"] == 0x0 ? "" : 0x1), _0x56645c;
  }),
  (_0x12ea96["prototype"]["getSpeciesPath"] = function () {
    return "land/gorilla/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x12ea96["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x12ea96["prototype"]["drawSkinCustomization"] = function () {
    this["setSkinScale"]();
    if (this["animalSpecies"] == 0xcc) {
      var _0x4d6b08 = "skins/" + this["getSpeciesPath"](),
        _0x1dd732 = this["skinScale"] * 1.07,
        _0x5dd3a4 = this["skinRad"],
        _0x5c139b = 0x1 + (Math["trunc"](_0x168a54 / 0x78) % 0x7),
        _0x1b5e32 = this["getSkinImageObj"](_0x4d6b08 + "/gorilla_head.png");
      if (_0x1b5e32) {
        var _0x2d8543 = 0x0,
          _0x276253 = this["getSkinImageObj"](_0x4d6b08 + "/fire" + _0x5c139b + ".png");
        _0x276253 &&
          (_0x587de3["save"](),
          _0x587de3["drawImage"](
            _0x276253,
            -_0x5dd3a4 * _0x1dd732,
            (-_0x5dd3a4 + _0x5dd3a4 * 0.05) * _0x1dd732 - _0x2d8543,
            0x2 * _0x5dd3a4 * _0x1dd732,
            0x2 * _0x5dd3a4 * _0x1dd732
          ),
          _0x587de3["restore"]());
        _0x587de3["save"]();
        var _0x5dd3a4 = this["rad"];
        _0x587de3["drawImage"](
          _0x1b5e32,
          -_0x5dd3a4 * _0x1dd732,
          (-_0x5dd3a4 + _0x5dd3a4 * 0.05) * _0x1dd732 - _0x2d8543,
          0x2 * _0x5dd3a4 * _0x1dd732,
          0x2 * _0x5dd3a4 * _0x1dd732
        ),
          _0x587de3["restore"]();
      }
    }
  });

function _0x12ea96() {
  _0x12ea96["superClass"]["call"](this, _0x3fb3b2);
}
(window["Gorilla"] = _0x12ea96), _0x17bf26["setCustomClassForGameObjType"](_0x12ea96, _0x3fb3b2, _0x33164c);
var _0x48c344 = _0x3799d1;
(_0x2f486c["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x2f486c["prototype"]["constructor"] = _0x2f486c),
  (_0x2f486c["superClass"] = _0x48c344),
  (_0x2f486c["prototype"]["animalInfo"] = function () {
    var _0x267f15 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x267f15["aniName"] = "The Kraken!";
        break;
      case 0x1:
        _0x267f15["aniName"] = "Golden Kraken!";
        break;
      case 0x2:
        _0x267f15["aniName"] = "Chromatic Kraken!";
        break;
      case 0xc9:
        _0x267f15["aniName"] = "Squishy Kraken!";
        break;
      case 0xca:
        switch (this["animalSubSpecies"]) {
          case 0x0:
            _0x267f15["aniName"] = "Giant Squid";
            break;
          case 0x1:
            _0x267f15["aniName"] = "Hydrothoth Kraken";
            break;
        }
        break;
      case 0xcc:
        _0x267f15["aniName"] = "Cthulhu Kraken!";
        break;
      case 0xdc:
        _0x267f15["aniName"] = "Dr. Brainiopod";
        break;
      case 0xde:
        _0x267f15["aniName"] = "Gingerbread Kraken";
        break;
    }
    return (
      (_0x267f15["aniCol"] = "#FF9000"),
      (_0x267f15["skinName"] = this["getSkinName"]()),
      (_0x267f15["upgradeText"] =
        "UPGRADED to THE " + _0x267f15["aniName"] + "!\x0a Terrorize the oceans, and be feared by all!\x0a (Release W to use whirlpool ability!)"),
      (_0x267f15["aniCol"] = "#64a034"),
      _0x267f15
    );
  }),
  (_0x2f486c["prototype"]["getSkinName"] = function () {
    return this["getSpeciesPath"]("kraken") + "/kraken";
  }),
  (_0x2f486c["prototype"]["getSubSpecies"] = function () {
    return this["animalSpecies"] === 0xca ? "/" + this["animalSubSpecies"] : "";
  }),
  (_0x2f486c["prototype"]["getSpeciesPath"] = function (_0x374a28) {
    return "ocean/" + _0x374a28 + "/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x2f486c["prototype"]["getAbilityInfo"] = function (_0x530ccd) {
    var _0x534d1 = {};
    return (
      (_0x534d1["abilName"] = "Whirlpool"),
      (_0x534d1["abilImg"] = "abilities/Whirlpool.svg"),
      (_0x534d1["skinThemeID"] = this["skinThemeID"]),
      (_0x534d1["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x534d1
    );
  }),
  (_0x2f486c["prototype"]["diveColor1"] = "#64a034"),
  (_0x2f486c["prototype"]["diveColor2"] = "#598b30"),
  (_0x2f486c["prototype"]["onAnimalSpeciesSet"] = function () {
    switch (this["animalSpecies"]) {
      case 0x1:
        (this["diveColor1"] = "#dbb300"), (this["diveColor2"] = "#bf9d04");
        break;
      case 0x2:
        (this["diveColor1"] = "#79c9a8"), (this["diveColor2"] = "#6fad9f");
        break;
    }
  });

function _0x2f486c() {
  _0x2f486c["superClass"]["call"](this, _0x3fb3b2);
}
(window["Kraken"] = _0x2f486c), _0x17bf26["setCustomClassForGameObjType"](_0x2f486c, _0x3fb3b2, _0x4f1c79);
var _0x48c344 = _0x3799d1;
(_0x1a66bd["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1a66bd["prototype"]["constructor"] = _0x1a66bd),
  (_0x1a66bd["superClass"] = _0x48c344),
  (_0x1a66bd["prototype"]["animalInfo"] = function () {
    var _0x521116 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x521116["aniName"] = "Bluewhale!";
        break;
      case 0x1:
        _0x521116["aniName"] = "Golden Whale!";
        break;
      case 0x2:
        _0x521116["aniName"] = "Albino Whale!";
        break;
      case 0xc9:
        _0x521116["aniName"] = "Mermaid Whale!";
        break;
      case 0xca:
        switch (this["animalSubSpecies"]) {
          case 0x0:
            _0x521116["aniName"] = "Whale Boat";
            break;
          case 0x1:
            _0x521116["aniName"] = "Ancient Island Monster";
        }
        break;
      case 0xdc:
        _0x521116["aniName"] = "Sailor Whale";
        break;
    }
    return (
      (_0x521116["skinName"] = this["getSkinName"]()),
      (_0x521116["aniDesc"] = ""),
      (_0x521116["upgradeText"] = "UPGRADED to " + _0x521116["aniName"] + "\x0a Smash with your powerful tail!"),
      (_0x521116["aniCol"] = "#945A99"),
      _0x521116
    );
  }),
  (_0x1a66bd["prototype"]["getSkinName"] = function () {
    return this["getSpeciesPath"]() + "/bluewhale" + (this["specType"] == 0x0 ? "" : this["specType"]);
  }),
  (_0x1a66bd["prototype"]["getSpeciesPath"] = function () {
    return "ocean/bluewhale/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x1a66bd["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return this["animalSpecies"] === 0xca ? "/" + this["animalSubSpecies"] : "";
  }),
  (_0x1a66bd["prototype"]["getAbilityInfo"] = function (_0x580ae5) {
    var _0x913345 = {};
    return (
      (_0x913345["abilName"] = "Tail Slap"),
      (_0x913345["abilImg"] = "abilities/TailHit.svg"),
      (_0x913345["skinThemeID"] = this["skinThemeID"]),
      (_0x913345["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x913345
    );
  });

function _0x1a66bd() {
  _0x1a66bd["superClass"]["call"](this, _0x3fb3b2);
}
(window["Bluewhale"] = _0x1a66bd), _0x17bf26["setCustomClassForGameObjType"](_0x1a66bd, _0x3fb3b2, _0x1c2dd4);
var _0x48c344 = _0x3799d1;
(_0x3aca9c["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x3aca9c["prototype"]["constructor"] = _0x3aca9c),
  (_0x3aca9c["superClass"] = _0x48c344),
  (_0x3aca9c["prototype"]["animalInfo"] = function () {
    var _0x428428 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x428428["aniName"] = "King Crab!";
        break;
      case 0x1:
        _0x428428["aniName"] = "Golden Crab!";
        break;
      case 0x2:
        _0x428428["aniName"] = "Amethyst Crab!";
        break;
      case 0xca:
        _0x428428["aniName"] = "Abyssal King Crab";
        break;
      case 0xcc:
        _0x428428["aniName"] = "Plasma-core King Crab!";
        break;
      case 0xdc:
        _0x428428["aniName"] = "Star Crusher Crab";
        break;
    }
    return (
      (_0x428428["skinName"] = "ocean/kingcrab/" + this["animalSpecies"] + "/kingcrab"),
      (_0x428428["aniDesc"] = ""),
      (_0x428428["upgradeText"] = "UPGRADED to " + _0x428428["aniName"] + "!\x0a Use your powerful arms to smack your prey!"),
      (_0x428428["aniCol"] = "#971f0e"),
      _0x428428
    );
  }),
  (_0x3aca9c["prototype"]["getSkinImageObj"] = function (_0x56c59b) {
    var _0x1226f4 = this["animalSpecies"] === 0x1 || this["animalSpecies"] === 0x2 || this["animalSpecies"] === 0xcc ? 0x1 : 0x2,
      _0x54b626 = "./assets/s/" + _0x1226f4 + "/" + _0x56c59b;
    return (
      this["skinThemeID"] > 0x0 && (_0x54b626 = "./assets/t/" + this["skinThemeID"] + "/" + _0x56c59b),
      _0x2d8f34(_0x54b626, function (_0x51b703) {
        console["log"](_0x51b703["src"]);
      })
    );
  }),
  (_0x3aca9c["prototype"]["getAbilityInfo"] = function (_0x56e53f) {
    var _0xd79c67 = {};
    return (
      (_0xd79c67["abilName"] = "Arm Smash"),
      (_0xd79c67["abilImg"] = "abilities/ArmSmash.svg"),
      (_0xd79c67["skinThemeID"] = this["skinThemeID"]),
      (_0xd79c67["mopeSeasonID"] = this["mopeSeasonID"]),
      _0xd79c67
    );
  }),
  (_0x3aca9c["prototype"]["getSkinName"] = function () {
    return "ocean/kingcrab/" + this["animalSpecies"] + "/kingcrab";
  });

function _0x3aca9c() {
  _0x3aca9c["superClass"]["call"](this, _0x3fb3b2);
}
(window["KingCrab"] = _0x3aca9c), _0x17bf26["setCustomClassForGameObjType"](_0x3aca9c, _0x3fb3b2, _0x4d5dff);
var _0x48c344 = _0x3799d1;
(_0x12e7c0["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x12e7c0["prototype"]["constructor"] = _0x12e7c0),
  (_0x12e7c0["superClass"] = _0x48c344),
  (_0x12e7c0["prototype"]["animalInfo"] = function () {
    var _0x8d2cf4 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x8d2cf4["aniName"] = "Killerwhale!";
        break;
      case 0x1:
        _0x8d2cf4["aniName"] = "Golden Orca!";
        break;
      case 0x2:
        _0x8d2cf4["aniName"] = "Albino Orca!";
        break;
      case 0xc9:
        _0x8d2cf4["aniName"] = "Lifeguard Orca!";
        break;
      case 0xca:
        _0x8d2cf4["aniName"] = "Sea Angel Orca";
        break;
    }
    return (
      (_0x8d2cf4["skinName"] = this["getSkinName"]()),
      (_0x8d2cf4["aniDesc"] = ""),
      (_0x8d2cf4["upgradeText"] = "UPGRADED to " + _0x8d2cf4["aniName"] + "\x0aWhales blow out water when diving! (And sometimes other loot!)"),
      (_0x8d2cf4["aniCol"] = "#141414"),
      _0x8d2cf4
    );
  }),
  (_0x12e7c0["prototype"]["getAbilityInfo"] = function (_0x255ea4) {
    var _0x1529ee = {};
    return (
      (_0x1529ee["abilName"] = "Cause Wave"),
      (_0x1529ee["abilImg"] = "abilities/Wave.svg"),
      (_0x1529ee["skinThemeID"] = this["skinThemeID"]),
      (_0x1529ee["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x1529ee
    );
  }),
  (_0x12e7c0["prototype"]["getSkinName"] = function () {
    let _0x1cdbd7 = this["getSpeciesPath"]() + "/killerwhale";
    return (_0x1cdbd7 += this["specType"] == 0x0 ? "" : 0x1), _0x1cdbd7;
  }),
  (_0x12e7c0["prototype"]["getSpeciesPath"] = function () {
    return "ocean/killerwhale/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x12e7c0["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  });

function _0x12e7c0() {
  _0x12e7c0["superClass"]["call"](this, _0x3fb3b2);
}
(window["Killerwhale"] = _0x12e7c0), _0x17bf26["setCustomClassForGameObjType"](_0x12e7c0, _0x3fb3b2, _0x573db4);
var _0x48c344 = _0x3799d1;
(_0x1d2797["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d2797["prototype"]["constructor"] = _0x1d2797),
  (_0x1d2797["superClass"] = _0x48c344),
  (_0x1d2797["prototype"]["animalInfo"] = function () {
    var _0x46f4d9 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x46f4d9["aniName"] = "Jellyfish";
        break;
      case 0xc9:
        _0x46f4d9["aniName"] = "Seafoam Jellyfish";
        break;
      case 0xca:
        switch (this["animalSubSpecies"]) {
          case 0x0:
            _0x46f4d9["aniName"] = "Disco Jellyfish";
            break;
          case 0x1:
            _0x46f4d9["aniName"] = "Twisted Horror";
        }
        break;
    }
    return (
      (_0x46f4d9["skinName"] = this["getSkinName"]()),
      (_0x46f4d9["aniDesc"] = ""),
      (_0x46f4d9["upgradeText"] = "UPGRADED to " + _0x46f4d9["aniName"] + "!\x0a A slowly-turning animal that can grow quite large!"),
      (_0x46f4d9["aniCol"] = "#FDB9BA"),
      _0x46f4d9
    );
  }),
  (_0x1d2797["prototype"]["getAbilityInfo"] = function (_0x41edae) {
    var _0x87fb07 = {};
    return (
      (_0x87fb07["abilName"] = "Touch prey to sting!"),
      (_0x87fb07["abilImg"] = "abilities/Sting.svg"),
      (_0x87fb07["isPassive"] = !![]),
      (_0x87fb07["skinThemeID"] = this["skinThemeID"]),
      (_0x87fb07["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x87fb07
    );
  }),
  (_0x1d2797["prototype"]["getSkinName"] = function () {
    let _0x5bffeb = this["getSpeciesPath"]() + "/jellyfish";
    return _0x5bffeb;
  }),
  (_0x1d2797["prototype"]["getSpeciesPath"] = function () {
    return "ocean/jellyfish/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x1d2797["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return this["animalSpecies"] === 0xca ? "/" + this["animalSubSpecies"] : "";
  }),
  (_0x1d2797["prototype"]["getSkinImageObj"] = function (_0x3ba496) {
    var _0x5c15b8 = this["animalSpecies"] === 0xc9 ? 0x1 : this["mopeSeasonID"];
    return this["getSkinImageObjForSeason"](_0x3ba496, _0x5c15b8);
  }),
  (_0x1d2797["prototype"]["basicDrawSkinImg"] = function () {
    this["setSkinScale"]();
    var _0x1c889c = -0x0,
      _0x33b785 = -0.4,
      _0x1b428d = 0x1;
    this["animalSpecies"] == 0xc9 && ((_0x33b785 = -0.3), (_0x1b428d = 1.05));
    var _0x55552f = this["skinScale"] * _0x1b428d,
      _0xd9f9fe = this["skinRad"];
    console["log"](this["animalSubSpecies"] + " : " + _0x55552f);
    this["loadedSkinImg"] &&
      _0x587de3["drawImage"](
        this["loadedSkinImg"],
        -_0xd9f9fe * _0x55552f + _0xd9f9fe * _0x1c889c,
        -_0xd9f9fe * _0x55552f + _0xd9f9fe * _0x33b785,
        0x2 * _0xd9f9fe * _0x55552f,
        0x2 * _0xd9f9fe * (_0x55552f * 1.2)
      );
    if (this["animalSpecies"] == 0xca) {
      if (!(_0x57ae6d == 0x2) && !_0x34fedb) {
        var _0x2575f7 = Math["trunc"](_0x168a54 / 0x1f4) % 0x2;
        if (_0x2575f7 == 0x1) {
          var _0x5626cd = this["getSkinImageObj"]("skins/" + this["getSkinName"]() + "_shine.png");
          _0x5626cd &&
            _0x587de3["drawImage"](
              _0x5626cd,
              -_0xd9f9fe * _0x55552f + _0xd9f9fe * _0x1c889c,
              -_0xd9f9fe * _0x55552f + _0xd9f9fe * _0x33b785,
              0x2 * _0xd9f9fe * _0x55552f,
              0x2 * _0xd9f9fe * (_0x55552f * 1.2)
            );
        }
      }
    }
  });

function _0x1d2797() {
  _0x1d2797["superClass"]["call"](this, _0x3fb3b2);
}
(window["Jellyfish"] = _0x1d2797), _0x17bf26["setCustomClassForGameObjType"](_0x1d2797, _0x3fb3b2, _0x291edb);
var _0x48c344 = _0x3799d1;
(_0x309e10["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x309e10["prototype"]["constructor"] = _0x309e10),
  (_0x309e10["superClass"] = _0x48c344),
  (_0x309e10["prototype"]["animalInfo"] = function () {
    var _0x476dcd = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x476dcd["aniName"] = "Stingray!";
        break;
      case 0x64:
        _0x476dcd["aniName"] = "Phantom Ray!";
        break;
      case 0xc9:
        _0x476dcd["aniName"] = "Chocolate Ray!";
        break;
      case 0xca:
        switch (this["animalSubSpecies"]) {
          case 0x0:
            _0x476dcd["aniName"] = "Ether Stingray";
            break;
          case 0x1:
            _0x476dcd["aniName"] = "Pancake Stingray";
        }
        break;
    }
    return (
      (_0x476dcd["skinName"] = this["getSkinName"]()),
      (_0x476dcd["upgradeText"] =
        "UPGRADED to " + _0x476dcd["aniName"] + "\x0a Use electic shock (Release W key!) to shock animals! \x0a(Takes time to recharge)"),
      (_0x476dcd["aniCol"] = "#164336"),
      _0x476dcd
    );
  }),
  (_0x309e10["prototype"]["getAbilityInfo"] = function (_0x28adb1) {
    var _0x4adef3 = {};
    return (
      (_0x4adef3["abilName"] = "Shock!"),
      (_0x4adef3["abilImg"] = "abilities/Shock.svg"),
      (_0x4adef3["skinThemeID"] = this["skinThemeID"]),
      (_0x4adef3["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x4adef3
    );
  }),
  (_0x309e10["prototype"]["getSkinName"] = function () {
    let _0x28992e = this["getSpeciesPath"]() + "/stingray";
    return _0x28992e;
  }),
  (_0x309e10["prototype"]["getSpeciesPath"] = function () {
    return "ocean/stingray/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x309e10["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return this["animalSpecies"] === 0xca ? "/" + this["animalSubSpecies"] : "";
  }),
  (_0x309e10["prototype"]["drawUnderSkinImg"] = function () {
    var _0x1b9888 = 1.245,
      _0x52a0c3 = 1.2,
      _0x4dd340 = 0.8,
      _0x5ad985 = 0x1f4 / 0x154,
      _0x3b3d67 = this["getSkinImageObj"]("skins/" + this["getSpeciesPath"]() + "/tail.png");
    if (_0x3b3d67) {
      _0x587de3["save"]();
      var _0x3e2bda = this["rad"] - this["outlineW"];
      _0x587de3["drawImage"](
        _0x3b3d67,
        -_0x3e2bda * _0x5ad985,
        -_0x3e2bda * _0x1b9888 * _0x5ad985,
        0x2 * _0x3e2bda * _0x5ad985,
        0x2 * _0x3e2bda * _0x5ad985
      ),
        _0x587de3["restore"]();
    }
    if (this["animalSpecies"] == 0x64) {
      var _0x2e92f7 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
        _0x539252 = !(_0x57ae6d == 0x2 || _0x34fedb) ? _0x120bbb(_0x2e92f7, 0x5, 0x1, 0x1) : this["birdNoAnimationFlyWingAngle"],
        _0x3b3d67 = this["getSkinImageObj"]("skins/" + this["getSpeciesPath"]() + "/tail2.png");
      if (_0x3b3d67) {
        _0x587de3["save"](), (_0x587de3["globalAlpha"] = Math["max"](0x0, _0x539252));
        var _0x3e2bda = this["rad"] - this["outlineW"];
        _0x587de3["drawImage"](
          _0x3b3d67,
          -_0x3e2bda * _0x5ad985,
          -_0x3e2bda * _0x1b9888 * _0x5ad985,
          0x2 * _0x3e2bda * _0x5ad985,
          0x2 * _0x3e2bda * _0x5ad985
        ),
          _0x587de3["restore"]();
      }
      return;
    }
    var _0x3b3d67 = this["getSkinImageObj"]("skins/" + this["getSpeciesPath"]() + "/leftwing.png");
    if (_0x3b3d67) {
      _0x587de3["save"]();
      var _0xbe7e53 = 0x1,
        _0x3e2bda = this["rad"] - this["outlineW"];
      _0x587de3["drawImage"](
        _0x3b3d67,
        -_0x3e2bda * _0x52a0c3 * _0x5ad985,
        -_0x3e2bda * _0x5ad985,
        0x2 * _0x3e2bda * _0x5ad985,
        0x2 * _0x3e2bda * _0x5ad985
      ),
        _0x587de3["restore"]();
    }
    var _0x3b3d67 = this["getSkinImageObj"]("skins/" + this["getSpeciesPath"]() + "/rightwing.png");
    if (_0x3b3d67) {
      _0x587de3["save"]();
      var _0xbe7e53 = 0x1,
        _0x3e2bda = this["rad"] - this["outlineW"];
      _0x587de3["drawImage"](
        _0x3b3d67,
        -_0x3e2bda * _0x4dd340 * _0x5ad985,
        -_0x3e2bda * _0x5ad985,
        0x2 * _0x3e2bda * _0x5ad985,
        0x2 * _0x3e2bda * _0x5ad985
      ),
        _0x587de3["restore"]();
    }
  });

function _0x309e10() {
  _0x309e10["superClass"]["call"](this, _0x3fb3b2);
}
(window["Stingray"] = _0x309e10), _0x17bf26["setCustomClassForGameObjType"](_0x309e10, _0x3fb3b2, _0x2429b5);
var _0x48c344 = _0x3799d1;
(_0x2ea303["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x2ea303["prototype"]["constructor"] = _0x2ea303),
  (_0x2ea303["superClass"] = _0x48c344),
  (_0x2ea303["prototype"]["animalInfo"] = function () {
    var _0x1708fe = {};
    _0x1708fe["aniName"] = "Puffer Fish";
    switch (this["animalSpecies"]) {
      case 0x2:
        _0x1708fe["aniName"] = "Demon Fish";
        break;
      case 0x64:
        _0x1708fe["aniName"] = "Puffermace";
        break;
      case 0xc9:
        _0x1708fe["aniName"] = "Omniball Puffer";
        break;
      case 0xca:
        _0x1708fe["aniName"] = "Balloon Pufferfish";
        break;
    }
    return (
      (_0x1708fe["skinName"] = this["getSkinName"]()),
      (_0x1708fe["aniDesc"] = ""),
      (_0x1708fe["upgradeText"] = "UPGRADED to " + _0x1708fe["aniName"] + "!\x0a(Hold W to inflate - become spiky, and dangerous to touch!)"),
      (_0x1708fe["aniCol"] = "#94a3a9"),
      _0x1708fe
    );
  }),
  (_0x2ea303["prototype"]["getAbilityInfo"] = function (_0x41471f) {
    var _0x228327 = {};
    return (
      (_0x228327["abilName"] = "Puff!"),
      (_0x228327["abilImg"] = "abilities/Puff.svg"),
      (_0x228327["skinThemeID"] = this["skinThemeID"]),
      (_0x228327["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x228327
    );
  }),
  (_0x2ea303["prototype"]["getSkinName"] = function () {
    let _0xbd3341 = this["getSpeciesPath"]() + "/pufferfish";
    if (this["flag_usingAbility"]) _0xbd3341 += "2";
    return _0xbd3341;
  }),
  (_0x2ea303["prototype"]["getSpeciesPath"] = function () {
    return "ocean/pufferfish/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x2ea303["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x2ea303["prototype"]["drawUnderSkinImg"] = function () {
    var _0x315f1b = 1.6,
      _0x19a401 = 0x1f4 / 0x154,
      _0x3ae70c = "";
    if (this["animalSpecies"] == 0x64) {
      _0x3ae70c = "/100";
      var _0x417daa = this["getSkinImageObj"]("skins/" + this["getSpeciesPath"]() + "/tail.png");
      if (_0x417daa) {
        _0x587de3["save"]();
        var _0x4bfba3 = this["rad"] - this["outlineW"];
        _0x587de3["drawImage"](
          _0x417daa,
          -_0x4bfba3 * _0x19a401,
          -_0x4bfba3 * _0x315f1b * _0x19a401,
          0x2 * _0x4bfba3 * _0x19a401,
          0x2 * _0x4bfba3 * _0x19a401
        ),
          _0x587de3["restore"]();
      }
    }
  });

function _0x2ea303() {
  _0x2ea303["superClass"]["call"](this, _0x3fb3b2);
}
(window["PufferFish"] = _0x2ea303), _0x17bf26["setCustomClassForGameObjType"](_0x2ea303, _0x3fb3b2, _0x391550);
var _0x48c344 = _0x3799d1;
(_0x5daceb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x5daceb["prototype"]["constructor"] = _0x5daceb),
  (_0x5daceb["superClass"] = _0x48c344),
  (_0x5daceb["prototype"]["animalInfo"] = function () {
    var _0x2779ff = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x2779ff["aniName"] = "Squid";
        break;
      case 0xc8:
        _0x2779ff["aniName"] = "Cuttle Fish";
        break;
      case 0xc9:
        _0x2779ff["aniName"] = "Seacoast Squid";
        break;
      case 0xca:
        _0x2779ff["aniName"] = "Psychedelic Squid";
        break;
      case 0xcc:
        _0x2779ff["aniName"] = "Void Scuttling Squid";
        break;
    }
    return (
      (_0x2779ff["skinName"] = this["getSkinName"]()),
      (_0x2779ff["aniDesc"] = ""),
      (_0x2779ff["upgradeText"] =
        "UPGRADED to " +
        _0x2779ff["aniName"] +
        "!\x0a " +
        _0x2779ff["aniName"] +
        " can use INK when injured (press W!) \x0a+ you can hide in plankton bushes!"),
      (_0x2779ff["aniCol"] = "#40dda4"),
      _0x2779ff
    );
  }),
  (_0x5daceb["prototype"]["getSkinName"] = function () {
    let _0x27cb37 = this["getSpeciesPath"]() + "/squid";
    return (_0x27cb37 += this["specType"] == 0x0 ? "" : 0x1), _0x27cb37;
  }),
  (_0x5daceb["prototype"]["getSpeciesPath"] = function () {
    return "ocean/squid/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x5daceb["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x5daceb["prototype"]["getAbilityInfo"] = function (_0x5f2d2b) {
    var _0x57747f = {};
    return (
      (_0x57747f["abilName"] = "INK!"),
      (_0x57747f["abilImg"] = "abilities/Ink.svg"),
      (_0x57747f["skinThemeID"] = this["skinThemeID"]),
      (_0x57747f["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x57747f
    );
  }),
  (_0x5daceb["prototype"]["drawUnderSkinImg"] = function () {
    if (this["animalSpecies"] == 0x0 || this["animalSpecies"] == 0xc9) {
      var _0x54a895 = 0x1f4 / 0x154,
        _0xba2f2c = this["getSkinImageObj"]("skins/" + this["getSpeciesPath"]() + "/cape.png");
      if (_0xba2f2c) {
        _0x587de3["save"]();
        var _0x1d33c4 = 1.1,
          _0x43f63b = this["rad"] - this["outlineW"];
        _0x587de3["drawImage"](
          _0xba2f2c,
          -_0x43f63b * _0x54a895,
          -_0x43f63b * _0x1d33c4 * _0x54a895,
          0x2 * _0x43f63b * _0x54a895,
          0x2 * _0x43f63b * _0x54a895
        ),
          _0x587de3["restore"]();
      }
    }
  });

function _0x5daceb() {
  _0x5daceb["superClass"]["call"](this, _0x3fb3b2);
}
(window["Squid"] = _0x5daceb), _0x17bf26["setCustomClassForGameObjType"](_0x5daceb, _0x3fb3b2, _0x461353);
var _0x48c344 = _0x3799d1;
(_0x5ee252["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x5ee252["prototype"]["constructor"] = _0x5ee252),
  (_0x5ee252["superClass"] = _0x48c344),
  (_0x5ee252["prototype"]["updateZ"] = function () {
    if (this["flag_underWater"]) this["z"] = -0x97;
    else this["z"] = this["rad"];
  }),
  (_0x5ee252["prototype"]["animalInfo"] = function () {
    var _0x4d562a = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x4d562a["aniName"] = "Shark!";
        break;
      case 0x1:
        _0x4d562a["aniName"] = "Tiger Shark!";
        break;
      case 0x2:
        _0x4d562a["aniName"] = "Hammarhead Shark!";
        break;
      case 0xc9:
        _0x4d562a["aniName"] = "Surfboard Chomper!";
        break;
    }
    return (
      (_0x4d562a["skinName"] = this["getSkinName"]()),
      (_0x4d562a["upgradeText"] = "UPGRADED to " + _0x4d562a["aniName"] + "\x0a A vicious predator of the oceans!"),
      (_0x4d562a["aniCol"] = "#999fc6"),
      _0x4d562a
    );
  }),
  (_0x5ee252["prototype"]["getAbilityInfo"] = function (_0x59bf65) {
    var _0x59aaa0 = {};
    return (
      (_0x59aaa0["abilName"] = "Jaws Bite"),
      (_0x59aaa0["abilImg"] = "abilities/Bite.svg"),
      (_0x59aaa0["skinThemeID"] = this["skinThemeID"]),
      (_0x59aaa0["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x59aaa0
    );
  }),
  (_0x5ee252["prototype"]["getSkinName"] = function () {
    let _0x5749f2 = this["getSpeciesPath"]() + "/shark";
    if (this["flag_usingAbility"]) _0x5749f2 += "2";
    return _0x5749f2;
  }),
  (_0x5ee252["prototype"]["getSpeciesPath"] = function () {
    return "ocean/shark/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x5ee252["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x5ee252["prototype"]["getSkinImageObj"] = function (_0x3fcd21) {
    var _0x125a99 = this["animalSpecies"] === 0x1 || this["animalSpecies"] === 0x2 || this["animalSpecies"] === 0xc9 ? 0x1 : this["mopeSeasonID"];
    return this["getSkinImageObjForSeason"](_0x3fcd21, _0x125a99);
  }),
  (_0x5ee252["prototype"]["drawUnderSkinImg"] = function () {
    if (this["flag_underWater"]) return;
    var _0x21f743 = 1.33,
      _0x424b0d = 0x1,
      _0xa00a9e = (0x1f4 / 0x154) * _0x424b0d,
      _0xaaf058 = this["getSkinImageObj"]("skins/" + this["getSpeciesPath"]() + "/tail.png");
    if (_0xaaf058) {
      _0x587de3["save"]();
      var _0x367133 = this["rad"] - this["outlineW"];
      _0x587de3["drawImage"](
        _0xaaf058,
        -_0x367133 * _0xa00a9e,
        -_0x367133 * _0x21f743 * _0xa00a9e,
        0x2 * _0x367133 * _0xa00a9e,
        0x2 * _0x367133 * _0xa00a9e
      ),
        _0x587de3["restore"]();
    }
  });

function _0x5ee252() {
  _0x5ee252["superClass"]["call"](this, _0x3fb3b2);
}
(window["Shark"] = _0x5ee252), _0x17bf26["setCustomClassForGameObjType"](_0x5ee252, _0x3fb3b2, _0x261bdf);
var _0x48c344 = _0x3799d1;
(_0x400d5b["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x400d5b["prototype"]["constructor"] = _0x400d5b),
  (_0x400d5b["superClass"] = _0x48c344),
  (_0x400d5b["prototype"]["animalInfo"] = function () {
    var _0x1f3c95 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x1f3c95["aniName"] = "Turtle!";
        break;
      case 0xc8:
        _0x1f3c95["aniName"] = "Leather Back Turtle!";
        break;
      case 0xc9:
        _0x1f3c95["aniName"] = "Kiwi Turtle!";
        break;
      case 0xca:
        _0x1f3c95["aniName"] = "Molten Lava Turtle";
        break;
    }
    return (
      (_0x1f3c95["skinName"] = this["getSkinName"]()),
      (_0x1f3c95["aniDesc"] = ""),
      (_0x1f3c95["upgradeText"] =
        "UPGRADED to " + _0x1f3c95["aniName"] + "\x0a Lives well on land & water! (On land, Press W to go into your shell!)"),
      (_0x1f3c95["aniCol"] = "#502E1A"),
      _0x1f3c95
    );
  }),
  (_0x400d5b["prototype"]["getAbilityInfo"] = function (_0x37092d) {
    var _0x4fa77d = {};
    return (
      (_0x4fa77d["abilName"] = "Hide in Shell!"),
      (_0x4fa77d["abilImg"] = "abilities/Hide.svg"),
      (_0x4fa77d["skinThemeID"] = this["skinThemeID"]),
      (_0x4fa77d["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x4fa77d
    );
  }),
  (_0x400d5b["prototype"]["getSkinName"] = function () {
    let _0x47bb06 = this["getSpeciesPath"]() + "/turtle";
    if (this["flag_usingAbility"]) _0x47bb06 += "2";
    else _0x47bb06 += this["specType"] == 0x0 ? "" : 0x1;
    return _0x47bb06;
  }),
  (_0x400d5b["prototype"]["getSpeciesPath"] = function () {
    return "ocean/turtle/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x400d5b["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x400d5b["prototype"]["drawSkinCustomization"] = function () {
    if (!this["flag_usingAbility"]) {
      if (this["specType"] == 0x1) {
        var _0x693d8f = 0x1f4 / 0x154,
          _0x595450 = this["getSkinImageObj"]("skins/" + this["getSpeciesPath"]() + "/head.png");
        if (_0x595450) {
          var _0x425449 = 0.88;
          _0x587de3["save"]();
          var _0x2c27c3 = this["rad"] - this["outlineW"];
          _0x587de3["drawImage"](
            _0x595450,
            -_0x2c27c3 * _0x693d8f,
            -_0x2c27c3 * _0x425449 * _0x693d8f,
            0x2 * _0x2c27c3 * _0x693d8f,
            0x2 * _0x2c27c3 * _0x693d8f
          ),
            _0x587de3["restore"]();
        }
      }
    }
  });

function _0x400d5b() {
  _0x400d5b["superClass"]["call"](this, _0x3fb3b2);
}
(window["Turtle"] = _0x400d5b), _0x17bf26["setCustomClassForGameObjType"](_0x400d5b, _0x3fb3b2, _0x36f1a3);
var _0x48c344 = _0x3799d1;
(_0x504d86["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x504d86["prototype"]["constructor"] = _0x504d86),
  (_0x504d86["superClass"] = _0x48c344),
  (_0x504d86["prototype"]["getAniRadius"] = function (_0x3d806f) {
    if (this["flag_usingDiveAbility"]) return _0x3d806f * 0.7;
    return _0x3d806f;
  }),
  (_0x504d86["prototype"]["animalInfo"] = function () {
    var _0x5c1126 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x5c1126["aniName"] = "Swordfish!";
        break;
      case 0xc9:
        _0x5c1126["aniName"] = "Surfboardfish";
        break;
      case 0xca:
        _0x5c1126["aniName"] = "Rocket Swordfish";
        break;
      case 0xcc:
        _0x5c1126["aniName"] = "Chainsaw Fish";
        break;
    }
    return (
      (_0x5c1126["skinName"] = this["getSkinName"]()),
      (_0x5c1126["upgradeText"] = "UPGRADED to " + _0x5c1126["aniName"] + "\x0a (Press W to rush with your sharp nose!)"),
      (_0x5c1126["aniCol"] = "#689CD7"),
      _0x5c1126
    );
  }),
  (_0x504d86["prototype"]["getAbilityInfo"] = function (_0xe518ba) {
    var _0x26d3c7 = {};
    return (
      (_0x26d3c7["abilName"] = "Charge!"),
      (_0x26d3c7["abilImg"] = "abilities/Charge.svg"),
      (_0x26d3c7["skinThemeID"] = this["skinThemeID"]),
      (_0x26d3c7["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x26d3c7
    );
  }),
  (_0x504d86["prototype"]["getSkinName"] = function () {
    let _0x3c7891 = this["getSpeciesPath"]() + "/swordfish";
    if (this["flag_usingAbility"]) _0x3c7891 += "2";
    else _0x3c7891 += this["specType"] == 0x0 ? "" : 0x1;
    return _0x3c7891;
  }),
  (_0x504d86["prototype"]["getSpeciesPath"] = function () {
    return "ocean/swordfish/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x504d86["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x504d86["prototype"]["drawSkinCustomization"] = function () {}),
  (_0x504d86["prototype"]["basicDrawSkinImg"] = function () {
    this["setSkinScale"]();
    var _0x53a5ac = this["skinScale"],
      _0xbd944d = this["rad"],
      _0xa934d9 = 0x0,
      _0x47af09 = 1.2,
      _0x3c7689 = -_0x47af09 / 0x4;
    this["loadedSkinImg"] &&
      _0x587de3["drawImage"](
        this["loadedSkinImg"],
        -_0xbd944d * _0x53a5ac + _0xbd944d * _0xa934d9,
        -_0xbd944d * _0x53a5ac + _0xbd944d * _0x3c7689,
        0x2 * _0xbd944d * _0x53a5ac,
        0x2 * _0xbd944d * (_0x53a5ac * _0x47af09)
      );
  }),
  (_0x504d86["prototype"]["getSkinImageObj"] = function (_0x325ea8) {
    var _0x54d7ca = this["animalSpecies"] === 0xc9 ? 0x1 : this["mopeSeasonID"];
    return this["getSkinImageObjForSeason"](_0x325ea8, _0x54d7ca);
  });

function _0x504d86() {
  _0x504d86["superClass"]["call"](this, _0x3fb3b2);
}
(window["Swordfish"] = _0x504d86), _0x17bf26["setCustomClassForGameObjType"](_0x504d86, _0x3fb3b2, _0x15f668);
var _0x48c344 = _0x3799d1;
(_0x3c19b0["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x3c19b0["prototype"]["constructor"] = _0x3c19b0),
  (_0x3c19b0["superClass"] = _0x48c344),
  (_0x3c19b0["prototype"]["animalInfo"] = function () {
    var _0x266ef7 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x266ef7["aniName"] = "Crab!";
        break;
      case 0xc8:
        _0x266ef7["aniName"] = "Metallic Crab!";
        break;
      case 0xc9:
        _0x266ef7["aniName"] = "Coconut Crab!";
        break;
      case 0xcc:
        _0x266ef7["aniName"] = "Dark Matter Crab!";
        break;
    }
    return (
      (_0x266ef7["skinName"] = this["getSkinName"]()),
      (_0x266ef7["aniDesc"] = ""),
      (_0x266ef7["upgradeText"] =
        "UPGRADED to " + _0x266ef7["aniName"] + "\x0a Crabs can survive on dry land!\x0a (On land, Press W to go into your shell!)"),
      (_0x266ef7["aniCol"] = "#bf2408"),
      _0x266ef7
    );
  }),
  (_0x3c19b0["prototype"]["getAbilityInfo"] = function (_0x479920) {
    var _0x3d7a02 = {};
    return (
      (_0x3d7a02["abilName"] = "Hide in Shell!"),
      (_0x3d7a02["abilImg"] = "abilities/Hide.svg"),
      (_0x3d7a02["skinThemeID"] = this["skinThemeID"]),
      (_0x3d7a02["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x3d7a02
    );
  }),
  (_0x3c19b0["prototype"]["getSkinName"] = function () {
    let _0x308b9d = this["getSpeciesPath"]() + "/crab";
    if (this["flag_usingAbility"]) _0x308b9d += "2";
    else _0x308b9d += this["specType"] == 0x0 ? "" : 0x1;
    return _0x308b9d;
  }),
  (_0x3c19b0["prototype"]["getSpeciesPath"] = function () {
    return "ocean/crab/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x3c19b0["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x3c19b0["prototype"]["basicDrawSkinImg"] = function () {
    this["setSkinScale"]();
    var _0x29b685 = this["skinScale"],
      _0xb2c8c0 = this["skinRad"];
    _0x587de3["save"]();
    if (this["id"] > 0x0) _0x587de3["rotate"](_0x3d960f(0x5a));
    if (this["loadedSkinImg"]) {
      _0x587de3["drawImage"](
        this["loadedSkinImg"],
        -_0xb2c8c0 * _0x29b685,
        -_0xb2c8c0 * _0x29b685,
        0x2 * _0xb2c8c0 * _0x29b685,
        0x2 * _0xb2c8c0 * _0x29b685
      );
    } else
      (_0x587de3["fillStyle"] = this["skinNotLoadedColor"]),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, this["rad"] - this["outlineW"]), 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"]();
    _0x587de3["restore"]();
  });

function _0x3c19b0() {
  _0x3c19b0["superClass"]["call"](this, _0x3fb3b2);
}
(window["Crab"] = _0x3c19b0), _0x17bf26["setCustomClassForGameObjType"](_0x3c19b0, _0x3fb3b2, _0x2d0ebc);
var _0x48c344 = _0x3799d1;
(_0x1a3d95["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1a3d95["prototype"]["constructor"] = _0x1a3d95),
  (_0x1a3d95["superClass"] = _0x48c344),
  (_0x1a3d95["prototype"]["animalInfo"] = function () {
    var _0x34a25a = {};
    return (
      (_0x34a25a["aniName"] = "Snail"),
      (_0x34a25a["aniCol"] = "#FF9000"),
      (_0x34a25a["skinName"] = "ocean/snail/snail"),
      (_0x34a25a["upgradeText"] = "UPGRADED to " + _0x34a25a["aniName"] + "!\x0a Press W to hide in your shell!"),
      _0x34a25a
    );
  }),
  (_0x1a3d95["prototype"]["getSkinName"] = function () {
    var _0x2195a3 = "ocean/snail/snail";
    return _0x2195a3;
  }),
  (_0x1a3d95["prototype"]["dir"] = 0x1),
  (_0x1a3d95["prototype"]["snail_yOffset"] = 0.75),
  (_0x1a3d95["prototype"]["wasUsingAbility"] = ![]),
  (_0x1a3d95["prototype"]["animateHead"] = ![]),
  (_0x1a3d95["prototype"]["animationIn"] = null),
  (_0x1a3d95["prototype"]["animationOut"] = null),
  (_0x1a3d95["prototype"]["offset"] = 0x0),
  (_0x1a3d95["prototype"]["drawUnderSkinImg"] = function () {
    if (this["flag_usingAbility"] && !this["wasUsingAbility"] && this["animationIn"] == null)
      (this["wasUsingAbility"] = !![]),
        (this["animationIn"] = new _0x5431fd(this, 0x1, _0x5431fd["arc"])),
        (this["animationIn"]["keepLastFrame"] = !![]),
        (this["animationIn"]["onFrameEntered"] = function (_0x50b2d2) {
          if (!isNaN(_0x50b2d2)) {
            if (this["forObj"]["offset"] < 0.35) this["forObj"]["offset"] = 0.35 * _0x50b2d2 * 0xa;
          }
        }),
        (this["animationIn"]["onStop"] = function () {
          (this["forObj"]["offset"] = 0.35), (this["forObj"]["wasUsingAbility"] = !![]), (this["forObj"]["animationIn"] = null);
        });
    else
      !this["flag_usingAbility"] &&
        this["wasUsingAbility"] &&
        this["animationOut"] == null &&
        ((this["wasUsingAbility"] = !![]),
        (this["animationOut"] = new _0x5431fd(this, 0x3, _0x5431fd["halfWave"])),
        (this["animationOut"]["keepLastFrame"] = !![]),
        (this["animationOut"]["onFrameEntered"] = function (_0x17a1dc) {
          !isNaN(_0x17a1dc) && (this["forObj"]["offset"] = 0.35 * (0x1 - _0x17a1dc));
        }),
        (this["animationOut"]["onStop"] = function () {
          (this["forObj"]["offset"] = 0x0), (this["forObj"]["wasUsingAbility"] = ![]), (this["forObj"]["animationOut"] = null);
        }));
    this["animationIn"] && this["animationIn"]["run"]();
    this["animationOut"] && this["animationOut"]["run"]();
    if (this["animationIn"] == null && this["animationOut"] == null && !this["wasUsingAbility"]) this["offset"] = 0x0;
    var _0x2a4257 = 0.75 + this["offset"],
      _0x57029f = 0x1f4 / 0x154,
      _0x26d140 = this["getSkinImageObj"]("skins/ocean/snail/snail_head.png");
    if (_0x26d140) {
      _0x587de3["save"]();
      var _0x34ffaa = this["rad"] - this["outlineW"];
      _0x587de3["drawImage"](
        _0x26d140,
        -_0x34ffaa * _0x57029f,
        -_0x34ffaa * _0x2a4257 * _0x57029f,
        0x2 * _0x34ffaa * _0x57029f,
        0x2 * _0x34ffaa * _0x57029f
      ),
        _0x587de3["restore"]();
    }
  });

function _0x1a3d95() {
  _0x1a3d95["superClass"]["call"](this, _0x3fb3b2);
}
(window["Snail"] = _0x1a3d95), _0x17bf26["setCustomClassForGameObjType"](_0x1a3d95, _0x3fb3b2, _0x52ce41);
var _0x48c344 = _0x3799d1;
(_0x11c9e9["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x11c9e9["prototype"]["constructor"] = _0x11c9e9),
  (_0x11c9e9["superClass"] = _0x48c344),
  (_0x11c9e9["prototype"]["updateZ"] = function () {
    this["z"] = 0x186a0;
  }),
  (_0x11c9e9["prototype"]["canUseTailslap"] = ![]),
  (_0x11c9e9["prototype"]["tailState"] = 0x0),
  (_0x11c9e9["prototype"]["lava"] = 0x64),
  (_0x11c9e9["prototype"]["getSkinName"] = function () {
    var _0xa07b4c = _0x34fedb || _0x57ae6d == 0x2 ? "kingdragon" : "kingdragon_body";
    return "volcano/kingdragon/" + this["animalSpecies"] + "/" + _0xa07b4c;
  }),
  (_0x11c9e9["prototype"]["customUpdatedProperty"] = function (_0x1ebce8, _0x5a83cb) {
    if (_0x1ebce8 == _0x144b53) this["canUseTailslap"] = _0x5a83cb["readUInt8"]() == 0x1;
    else _0x1ebce8 == _0x4aacba && (this["tailState"] = _0x5a83cb["readUInt16"]() / 0x64);
  }),
  (_0x11c9e9["prototype"]["leftWingAnim"] = null),
  (_0x11c9e9["prototype"]["flapAngleDiff"] = 0x3),
  (_0x11c9e9["prototype"]["flapAngle"] = 0x3),
  (_0x11c9e9["prototype"]["flapF"] = 0.1),
  (_0x11c9e9["prototype"]["flapDur"] = 0x2),
  (_0x11c9e9["prototype"]["sF"] = 0.02),
  (_0x11c9e9["prototype"]["drawWings"] = function () {
    if (_0x57ae6d == 0x2 || _0x34fedb) return;
    this["leftWingAnim"] == null &&
      ((this["leftWingAnim"] = new _0x5431fd(this, this["flapDur"], _0x5431fd["wave"])),
      (this["leftWingAnim"]["keepLastFrame"] = !![]),
      (this["leftWingAnim"]["loop"] = !![]),
      (this["leftWingAnim"]["onFrameEntered"] = function (_0x1819f5) {
        this["forObj"]["frame1"] = _0x1819f5;
      }));
    this["leftWingAnim"] != null && this["leftWingAnim"]["run"]();
    var _0x50c77d = this["rad"] - this["outlineW"],
      _0x1a6e60 = this["frame1"] * this["sF"] * _0x50c77d,
      _0x3d92a6 = -(-this["flapF"] + this["frame1"]),
      _0x1a540b = _0x3d92a6 * _0x3d960f(this["flapAngle"]),
      _0x31c787 = 0x1f4 / 0x154,
      _0x512073 = this["getSkinImageObj"]("skins/volcano/kingdragon/" + this["animalSpecies"] + "/left_wing.png"),
      _0x39f02b = this["getSkinImageObj"]("skins/volcano/kingdragon/" + this["animalSpecies"] + "/right_wing.png");
    if (_0x512073 && _0x39f02b) {
      _0x587de3["save"](),
        _0x587de3["rotate"](_0x3d960f(this["flapAngleDiff"]) + _0x1a540b),
        _0x587de3["drawImage"](
          _0x512073,
          -_0x50c77d * _0x31c787,
          -_0x50c77d * _0x31c787 + _0x1a6e60,
          0x2 * _0x50c77d * _0x31c787,
          0x2 * _0x50c77d * _0x31c787 + _0x1a6e60 * 1.5
        ),
        _0x587de3["restore"](),
        _0x587de3["save"](),
        _0x587de3["rotate"](-(_0x3d960f(this["flapAngleDiff"]) + _0x1a540b)),
        _0x587de3["drawImage"](
          _0x39f02b,
          -_0x50c77d * _0x31c787,
          -_0x50c77d * _0x31c787 + _0x1a6e60,
          0x2 * _0x50c77d * _0x31c787,
          0x2 * _0x50c77d * _0x31c787 + _0x1a6e60 * 1.5
        ),
        _0x587de3["restore"]();
      if (this["animalSpecies"] == 0x4) {
        let _0x586ede = _0x38b128("kd", this["spawnTime"]);
        _0x586ede !== undefined && _0x586ede != null && (this["theFrame"] = _0x586ede);
        let _0x16c5d6 = !(_0x57ae6d == 0x2 || _0x34fedb) ? this["theFrame"] : this["birdNoAnimationFlyWingAngle"];
        _0x587de3["save"](), (_0x587de3["globalAlpha"] = Math["max"](0x0, _0x16c5d6));
        var _0x270e75 = this["getSkinImageObj"]("skins/volcano/kingdragon/" + this["animalSpecies"] + "/left_wing_tips.png"),
          _0x6d620b = this["getSkinImageObj"]("skins/volcano/kingdragon/" + this["animalSpecies"] + "/right_wing_tips.png");
        _0x270e75 &&
          _0x6d620b &&
          (_0x587de3["save"](),
          _0x587de3["rotate"](_0x3d960f(this["flapAngleDiff"]) + _0x1a540b),
          _0x587de3["drawImage"](
            _0x270e75,
            -_0x50c77d * _0x31c787,
            -_0x50c77d * _0x31c787 + _0x1a6e60,
            0x2 * _0x50c77d * _0x31c787,
            0x2 * _0x50c77d * _0x31c787 + _0x1a6e60 * 1.5
          ),
          _0x587de3["restore"](),
          _0x587de3["save"](),
          _0x587de3["rotate"](-(_0x3d960f(this["flapAngleDiff"]) + _0x1a540b)),
          _0x587de3["drawImage"](
            _0x6d620b,
            -_0x50c77d * _0x31c787,
            -_0x50c77d * _0x31c787 + _0x1a6e60,
            0x2 * _0x50c77d * _0x31c787,
            0x2 * _0x50c77d * _0x31c787 + _0x1a6e60 * 1.5
          ),
          _0x587de3["restore"]()),
          _0x587de3["restore"]();
      }
    }
    var _0x2f3d96 = this["lava"],
      _0x45ef42 = 0x32;
    if (_0x2f3d96 < _0x45ef42) {
      var _0x1a1275 = _0x2f3d96 / _0x45ef42,
        _0x165e04 = this["getSkinImageObj"]("skins/volcano/kingdragon/" + this["animalSpecies"] + "/left_wing1.png"),
        _0x4bbc5a = this["getSkinImageObj"]("skins/volcano/kingdragon/" + this["animalSpecies"] + "/right_wing2.png");
      _0x165e04 &&
        _0x4bbc5a &&
        (_0x587de3["save"](),
        (_0x587de3["globalAlpha"] = 0x1 - _0x1a1275),
        _0x587de3["save"](),
        _0x587de3["rotate"](_0x3d960f(this["flapAngleDiff"]) + _0x1a540b),
        _0x587de3["drawImage"](
          _0x165e04,
          -_0x50c77d * _0x31c787,
          -_0x50c77d * _0x31c787 + _0x1a6e60,
          0x2 * _0x50c77d * _0x31c787,
          0x2 * _0x50c77d * _0x31c787 + _0x1a6e60 * 1.5
        ),
        _0x587de3["restore"](),
        _0x587de3["save"](),
        _0x587de3["rotate"](-(_0x3d960f(this["flapAngleDiff"]) + _0x1a540b)),
        _0x587de3["drawImage"](
          _0x4bbc5a,
          -_0x50c77d * _0x31c787,
          -_0x50c77d * _0x31c787 + _0x1a6e60,
          0x2 * _0x50c77d * _0x31c787,
          0x2 * _0x50c77d * _0x31c787 + _0x1a6e60 * 1.5
        ),
        _0x587de3["restore"](),
        _0x587de3["restore"]());
    }
  }),
  (_0x11c9e9["prototype"]["drawSkinCustomization"] = function () {
    if (this["flag_underWater"]) return;
    if (_0x57ae6d == 0x2 || _0x34fedb) return;
    var _0x4be58c = 0x1f4 / 0x154;
    let _0x2d1e56 = _0x38b128("kd", this["spawnTime"]);
    _0x2d1e56 !== undefined && _0x2d1e56 != null && (this["theFrame"] = _0x2d1e56);
    let _0x3f600b = !(_0x57ae6d == 0x2 || _0x34fedb) ? this["theFrame"] : this["birdNoAnimationFlyWingAngle"];
    var _0x1c5f78 = this["getSkinImageObj"]("skins/volcano/kingdragon/" + this["animalSpecies"] + "/nostrils.png");
    if (_0x1c5f78) {
      _0x587de3["save"]();
      var _0x4f16ec = this["lava"],
        _0x15db8d = 0x64,
        _0x169497 = _0x4f16ec / _0x15db8d;
      _0x587de3["globalAlpha"] = Math["max"](0x0, _0x3f600b) * _0x169497;
      var _0x5b948a = this["rad"] - this["outlineW"];
      _0x587de3["drawImage"](_0x1c5f78, -_0x5b948a * _0x4be58c, -_0x5b948a * _0x4be58c, 0x2 * _0x5b948a * _0x4be58c, 0x2 * _0x5b948a * _0x4be58c),
        _0x587de3["restore"]();
    }
    if (!this["canUseTailslap"]) {
      var _0xf1a7a4 = this["getSkinImageObj"]("skins/volcano/kingdragon/" + this["animalSpecies"] + "/bone1.png");
      if (_0xf1a7a4) {
        _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0x1);
        var _0x5b948a = this["rad"] - this["outlineW"];
        _0x587de3["drawImage"](_0xf1a7a4, -_0x5b948a * _0x4be58c, -_0x5b948a * _0x4be58c, 0x2 * _0x5b948a * _0x4be58c, 0x2 * _0x5b948a * _0x4be58c),
          _0x587de3["restore"]();
      }
      var _0x4fd560 = 0x0;
      if (this["tailState"] < 0xb && this["tailState"] > 0x5) {
        var _0x1321f0 = this["tailState"] - 0x5;
        _0x4fd560 = _0x1321f0 / 0x6;
      } else this["tailState"] <= 0x3 && (_0x4fd560 = this["tailState"] / 0x3);
      var _0xa40f57 = this["getSkinImageObj"]("skins/volcano/kingdragon/" + this["animalSpecies"] + "/bone3.png");
      if (this["tailState"] < 0xb) {
        if (_0xa40f57) {
          _0x587de3["save"]();
          if (this["tailState"] > 0x5) _0x587de3["globalAlpha"] = 0x1 - _0x4fd560;
          else _0x587de3["globalAlpha"] = 0x1;
          var _0x5b948a = this["rad"] - this["outlineW"];
          _0x587de3["drawImage"](_0xa40f57, -_0x5b948a * _0x4be58c, -_0x5b948a * _0x4be58c, 0x2 * _0x5b948a * _0x4be58c, 0x2 * _0x5b948a * _0x4be58c),
            _0x587de3["restore"]();
        }
      }
      var _0x231d09 = this["getSkinImageObj"]("skins/volcano/kingdragon/" + this["animalSpecies"] + "/bone2.png");
      if (this["tailState"] < 0x3) {
        if (_0x231d09) {
          _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0x1 - _0x4fd560);
          var _0x5b948a = this["rad"] - this["outlineW"];
          _0x587de3["drawImage"](_0x231d09, -_0x5b948a * _0x4be58c, -_0x5b948a * _0x4be58c, 0x2 * _0x5b948a * _0x4be58c, 0x2 * _0x5b948a * _0x4be58c),
            _0x587de3["restore"]();
        }
      }
    } else {
      var _0x231d09 = this["getSkinImageObj"]("skins/volcano/kingdragon/" + this["animalSpecies"] + "/bone2.png");
      if (_0x231d09) {
        _0x587de3["save"]();
        var _0x1dcaf5 = Math["max"](0.3, _0x3f600b);
        _0x587de3["globalAlpha"] = _0x1dcaf5;
        var _0x5b948a = this["rad"] - this["outlineW"];
        _0x587de3["drawImage"](_0x231d09, -_0x5b948a * _0x4be58c, -_0x5b948a * _0x4be58c, 0x2 * _0x5b948a * _0x4be58c, 0x2 * _0x5b948a * _0x4be58c),
          _0x587de3["restore"]();
      }
    }
    this["drawWings"]();
  }),
  (_0x11c9e9["prototype"]["drawLowWaterDrop"] = function () {
    if (this["flag_underWater"]) return;
    if (this["flag_lowWat"]) {
      var _0x287295 = 1.2,
        _0xca6d02 = 0.2,
        _0x912528 = 0.8,
        _0x255012 = 0.5 * (_0x912528 - _0xca6d02),
        _0x2eaf05 = _0xca6d02 + _0x255012 + _0x255012 * Math["sin"](((0x2 * Math["PI"]) / _0x287295) * (_0x168a54 / 0x3e8));
      _0x587de3["save"](),
        (_0x587de3["globalAlpha"] = _0x2eaf05),
        (_0x587de3["fillStyle"] = _0x9d1ce2),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](0x0, this["rad"] + 0x5, 0x5, 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        _0x587de3["restore"]();
    }
  }),
  (_0x11c9e9["prototype"]["animalInfo"] = function () {
    var _0x4443e0 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x4443e0["aniName"] = "King Dragon";
        break;
      case 0x1:
        _0x4443e0["aniName"] = "Golden King Dragon";
        break;
      case 0x2:
        _0x4443e0["aniName"] = "King Ripper";
        break;
      case 0x3:
        _0x4443e0["aniName"] = "King Stan";
        break;
      case 0x4:
        _0x4443e0["aniName"] = "King Shah";
        break;
      case 0x5:
        _0x4443e0["aniName"] = "Queen Scarlet";
        break;
      case 0x6:
        _0x4443e0["aniName"] = "Queen Celeste";
        break;
      case 0xc8:
        _0x4443e0["aniName"] = "Queen Flame";
        break;
      case 0xca:
        _0x4443e0["aniName"] = "King Graveyard";
        break;
    }
    return (
      (_0x4443e0["aniCol"] = "#FF9000"),
      (_0x4443e0["skinName"] = this["getSkinName"]()),
      (_0x4443e0["upgradeText"] = "UPGRADED to " + _0x4443e0["aniName"]),
      (_0x4443e0["upgradeText"] += "!\x0aYou got firestream that burns your victim alive! Watch your tail and slap them hard."),
      (_0x4443e0["aniCol"] = "black"),
      _0x4443e0
    );
  }),
  (_0x11c9e9["prototype"]["getAbilityInfo"] = function (_0x3a85a7) {
    var _0x59a341 = {};
    _0x59a341["abilName"] = "Firestream\x0a& Tail slap";
    var _0x1f1822 = 0x0;
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x1f1822 = 0x1;
        break;
      case 0x1:
        _0x1f1822 = 0x2;
        break;
      case 0x2:
        _0x1f1822 = 0x4;
        break;
      case 0x3:
        _0x1f1822 = 0x5;
        break;
      case 0x4:
        _0x1f1822 = 0x6;
        break;
      case 0x5:
        _0x1f1822 = 0x9;
        break;
      case 0x6:
        _0x1f1822 = 0x8;
        break;
    }
    return (
      (_0x59a341["speciesType"] = _0x1f1822),
      (_0x59a341["abilImg"] = "abilities/Fireball.svg"),
      (_0x59a341["skinThemeID"] = this["skinThemeID"]),
      (_0x59a341["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x59a341
    );
  });

function _0x11c9e9() {
  (this["lava"] = 0x64), _0x11c9e9["superClass"]["call"](this, _0x3fb3b2);
}
(window["KingDragon"] = _0x11c9e9), _0x17bf26["setCustomClassForGameObjType"](_0x11c9e9, _0x3fb3b2, _0x5eebcf);
var _0x48c344 = _0x307a43;
(_0x5a486d["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x5a486d["prototype"]["constructor"] = _0x5a486d),
  (_0x5a486d["superClass"] = _0x48c344),
  (_0x5a486d["prototype"]["updateZ"] = function () {
    this["z"] = -0x8c;
  }),
  (_0x5a486d["prototype"]["shiverF"] = 0.015),
  (_0x5a486d["prototype"]["drawTranslate"] = function () {
    _0x587de3["translate"](this["x"], this["y"]), _0x587de3["save"]();
    if (this["eruption"] >= this["shakeStart"] && this["eruption"] <= this["shakeEnd"] + 0x1) {
      if (this["eruption"] >= this["shakeStart"] + 0x2) this["shiverF"] = 0.025;
      else this["shiverF"] = 0.015;
      var _0x5b51bd = (_0x168a54 - this["spawnTime"]) / 0x3e8,
        _0x198626 = 0.2,
        _0x5c1c70 = this["rad"] * this["shiverF"];
      this["shakeOffsetX"] = _0x5c1c70 * Math["sin"](((0x2 * Math["PI"]) / _0x198626) * _0x5b51bd);
      var _0x198626 = 0.3,
        _0x5c1c70 = this["rad"] * this["shiverF"];
      (this["shakeOffsetY"] = _0x5c1c70 * Math["sin"](((0x2 * Math["PI"]) / _0x198626) * _0x5b51bd)),
        _0x587de3["translate"](-this["shakeOffsetX"], -this["shakeOffsetY"]);
    }
  }),
  (_0x5a486d["prototype"]["drawHealthBar"] = function () {
    _0x587de3["restore"]();
  }),
  (_0x5a486d["prototype"]["customDraw2"] = function (_0x439c75) {
    _0x587de3["save"]();
    var _0x517b37 = "" + this["oType"];
    (this["curBiome"] == _0x5dcee3 || this["curBiome"] == _0x75a7e2) && (_0x517b37 = "" + this["oType"] + "_" + this["curBiome"]);
    var _0x4e0a72 = "gameobj/" + this["oType"] + "/" + _0x517b37 + ".png",
      _0x302fc1 = this["getSkinImageObj"](_0x4e0a72);
    if (_0x302fc1) {
      var _0x3708bd = this["rad"];
      _0x587de3["rotate"](this["angle"]), _0x587de3["drawImage"](_0x302fc1, -_0x3708bd, -_0x3708bd, 0x2 * _0x3708bd, 0x2 * _0x3708bd);
    }
    _0x587de3["restore"]();
    var _0x4c1ebb = 0x0;
    switch (Math["round"](this["eruption"])) {
      case 0x0:
      case 0x1:
        _0x4c1ebb = 0x0;
        break;
      case 0x2:
        _0x4c1ebb = 0x1;
        break;
      case 0x3:
        _0x4c1ebb = 0x2;
        break;
      case 0x4:
      case 0x5:
      case 0x6:
      case 0x7:
        _0x4c1ebb = 0x3;
        break;
      case 0x8:
        _0x4c1ebb = 0x2;
        break;
      case 0x9:
        _0x4c1ebb = 0x1;
        break;
      case 0xa:
      default:
        _0x4c1ebb = 0x0;
        break;
    }
    if (_0x4c1ebb < 0x3) {
      _0x587de3["save"]();
      var _0x517b37 = _0x4c1ebb,
        _0x4e0a72 = "gameobj/" + this["oType"] + "/" + _0x517b37 + ".png",
        _0x302fc1 = this["getSkinImageObj"](_0x4e0a72);
      if (_0x302fc1) {
        var _0x3708bd = this["rad"];
        _0x587de3["rotate"](this["angle"]), _0x587de3["drawImage"](_0x302fc1, -_0x3708bd, -_0x3708bd, 0x2 * _0x3708bd, 0x2 * _0x3708bd);
      }
      _0x587de3["restore"]();
    }
  }),
  (_0x5a486d["prototype"]["customDraw"] = function (_0x492e80) {
    this["customDraw2"](_0x492e80);
  }),
  (_0x5a486d["prototype"]["readCustomData_onNewlyVisible"] = function (_0x592652) {
    _0x5a486d["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x592652),
      (this["maxLvl"] = _0x592652["readUInt8"]() / 0xa),
      (this["shakeStart"] = _0x592652["readUInt8"]() / 0xa),
      (this["shakeEnd"] = _0x592652["readUInt8"]() / 0xa),
      (this["spitLevelMin"] = this["maxLvl"] * 0.2),
      (this["spitLevelMax"] = this["maxLvl"] * 0.8);
  }),
  (_0x5a486d["prototype"]["readUpdatedProperty"] = function (_0x431092, _0x295161) {
    _0x431092 == _0xddb248 && (this["eruption"] = _0x295161["readUInt16"]());
  });

function _0x5a486d() {
  _0x5a486d["superClass"]["call"](this, _0x45f833);
}
(window["Volcano"] = _0x5a486d), _0x17bf26["setCustomClassForGameObjType"](_0x5a486d, _0x45f833);
var _0x1d83bb = _0x47649d,
  _0x48c344 = _0x307a43;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344),
  (_0x47649d["prototype"]["customDraw"] = function (_0xbe12b9) {
    _0x587de3["save"](), _0x587de3["rotate"](this["angle"] + _0x3d960f(0xb4)), (_0x587de3["globalAlpha"] = 0x1);
    var _0x4dad02 = this["getSkinImageObj"]("img/raindrop.png");
    if (_0x4dad02) {
      var _0x3c7e89 = this["rad"] * 0x2;
      _0x587de3["drawImage"](_0x4dad02, -_0x3c7e89, -_0x3c7e89, 0x2 * _0x3c7e89, 0x2 * _0x3c7e89);
    }
    _0x587de3["restore"]();
  }),
  (_0x47649d["prototype"]["updateZ"] = function () {
    this["z"] = 0x2710 + this["rad"];
  });

function _0x47649d() {
  _0x47649d["superClass"]["call"](this), (this["spawnTime"] = _0x168a54);
}
(window["RainDrop"] = _0x47649d), _0x17bf26["setCustomClassForGameObjType"](_0x47649d, _0x129eb7);
var _0x48c344 = _0x307a43;
(_0x502ede["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x502ede["prototype"]["constructor"] = _0x502ede),
  (_0x502ede["superClass"] = _0x48c344),
  (_0x502ede["prototype"]["updateZ"] = function () {
    this["z"] = 0x3ed;
  }),
  (_0x502ede["prototype"]["customDraw"] = function (_0x577527) {
    if (!(_0x57ae6d == 0x2)) {
      var _0xe135d = 0x1,
        _0x5a8493 = 0.15,
        _0x30e1e8 = 0.8,
        _0xdc84f1 = 0.5 * (_0x30e1e8 - _0x5a8493),
        _0x538af1 = _0x5a8493 + _0xdc84f1 + _0xdc84f1 * Math["sin"](((0x2 * Math["PI"]) / _0xe135d) * (_0x168a54 / 0x3e8));
      _0x587de3["save"]();
      {
        _0x587de3["globalAlpha"] *= _0x538af1;
      }
      _0x587de3["restore"]();
      var _0xe135d = 0x1,
        _0x5a8493 = 0.85,
        _0x30e1e8 = 0x1,
        _0xdc84f1 = 0.5 * (_0x30e1e8 - _0x5a8493),
        _0x165787 = _0x5a8493 + _0xdc84f1 + _0xdc84f1 * Math["sin"](((0x2 * Math["PI"]) / _0xe135d) * (_0x168a54 / 0x3e8)),
        _0x187667 = Math["trunc"](_0x168a54 / 0x78) % 0x5,
        _0x3dd603 = this["getSkinImageObj"]("gameobj/" + this["oType"] + "/" + _0x187667 + ".png");
      if (_0x3dd603) {
        var _0x7bf1a9 = 0x0,
          _0x558c7f = this["rad"] * 0.4,
          _0x4c2e33 = (this["rad"] * 0x2 * (0x2 + _0x165787 * 0x2)) / 0x3,
          _0x3a9d77 = this["rad"] * 3.5 * _0x165787,
          _0x4cad49 = 0.5,
          _0x20f207 = 0.95;
        _0x587de3["save"]();
        {
          (_0x587de3["globalAlpha"] *= this["onFireEffA"] * _0x165787),
            _0x587de3["rotate"](this["angle"]),
            _0x587de3["drawImage"](_0x3dd603, _0x7bf1a9 + _0x4c2e33 * -_0x4cad49, _0x558c7f + _0x3a9d77 * -_0x20f207, _0x4c2e33, _0x3a9d77);
        }
        _0x587de3["restore"]();
      } else {
      }
    } else {
      var _0x3dd603 = this["getSkinImageObj"]("gameobj/" + this["oType"] + "/0.png");
      if (_0x3dd603) {
        var _0xe135d = 0x1,
          _0x5a8493 = 0.85,
          _0x30e1e8 = 0x1,
          _0xdc84f1 = 0.5 * (_0x30e1e8 - _0x5a8493),
          _0x165787 = _0x5a8493 + _0xdc84f1 + _0xdc84f1 * Math["sin"](((0x2 * Math["PI"]) / _0xe135d) * (_0x168a54 / 0x3e8)),
          _0x7bf1a9 = 0x0,
          _0x558c7f = this["rad"] * 0.4,
          _0x4c2e33 = (this["rad"] * 0x2 * (0x2 + _0x165787 * 0x2)) / 0x3,
          _0x3a9d77 = this["rad"] * 3.5 * _0x165787,
          _0x4cad49 = 0.5,
          _0x20f207 = 0.95;
        _0x587de3["save"]();
        {
          _0x587de3["rotate"](this["angle"]),
            _0x587de3["drawImage"](_0x3dd603, _0x7bf1a9 + _0x4c2e33 * -_0x4cad49, _0x558c7f + _0x3a9d77 * -_0x20f207, _0x4c2e33, _0x3a9d77);
        }
        _0x587de3["restore"]();
      }
    }
  });

function _0x502ede() {
  _0x502ede["superClass"]["call"](this, _0x476df4);
}
(window["Iceball"] = _0x502ede), _0x17bf26["setCustomClassForGameObjType"](_0x502ede, _0x476df4);
var _0x48c344 = _0x3799d1;
(_0x51d6a2["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x51d6a2["prototype"]["constructor"] = _0x51d6a2),
  (_0x51d6a2["superClass"] = _0x48c344),
  (_0x51d6a2["prototype"]["animalInfo"] = function () {
    var _0x572ea7 = {};
    switch (this["animalSpecies"]) {
      case 0x1:
        _0x572ea7["aniName"] = "The BigFoot";
        break;
    }
    return (
      (_0x572ea7["skinName"] = "land/bigfoot/" + this["animalSpecies"] + "/bigfoot"),
      (_0x572ea7["aniDesc"] = ""),
      (_0x572ea7["upgradeText"] =
        "UPGRADED to " + _0x572ea7["aniName"] + "! So it really exists... \x0a Right click/W to throw Spears. \x0aHold to make a fire (every 30s)"),
      (_0x572ea7["aniCol"] = "#839eb5"),
      _0x572ea7
    );
  }),
  (_0x51d6a2["prototype"]["getAbilityInfo"] = function (_0x4de591) {
    var _0x4b7d83 = {};
    return (
      (_0x4b7d83["abilName"] = "Throw Spear\x0a (Hold for fire!)"),
      (_0x4b7d83["abilImg"] = "abilities/ThrowSpear.svg"),
      (_0x4b7d83["skinThemeID"] = this["skinThemeID"]),
      (_0x4b7d83["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x4b7d83
    );
  }),
  (_0x51d6a2["prototype"]["getSkinName"] = function () {
    var _0xbc32ea = "";
    _0xbc32ea = "land/bigfoot/" + this["animalSpecies"] + "/";
    if (this["flag_underWater"] || this["flag_isInArena"]) _0xbc32ea += "thebigfoot";
    else _0xbc32ea += "bigfoot";
    return _0xbc32ea;
  }),
  (_0x51d6a2["prototype"]["drawUnderSkinTail"] = function (_0x298ccc) {
    if (!this["isCamouflage"]) _0x51d6a2["superClass"]["prototype"]["drawUnderSkinTail"]["call"](this, _0x298ccc);
  }),
  (_0x51d6a2["prototype"]["drawHealthBar"] = function () {
    if (!this["isCamouflage"]) _0x51d6a2["superClass"]["prototype"]["drawHealthBar"]["call"](this);
  }),
  (_0x51d6a2["prototype"]["isTransforming"] = ![]),
  (_0x51d6a2["prototype"]["isCamouflage"] = ![]),
  (_0x51d6a2["prototype"]["carrotAlpha"] = 0x0),
  (_0x51d6a2["prototype"]["getIdealOpacity"] = function () {
    var _0x39bff6 = this["flag_underWater"] || (this["flag_usingAbility"] && this["isTransforming"]) || this["isCamouflage"] ? 0x0 : 0x1;
    return _0x39bff6;
  }),
  (_0x51d6a2["prototype"]["biteStart"] = 0x0),
  (_0x51d6a2["prototype"]["flapAmount"] = 0x3),
  (_0x51d6a2["prototype"]["flapDur"] = 1.5),
  (_0x51d6a2["prototype"]["roarStartT"] = -0x1f4),
  (_0x51d6a2["prototype"]["spearThrow"] = function () {
    _0x587de3["save"]();
    var _0x5deacb = this["getSkinImageObj"]("skins/land/bigfoot/" + this["animalSpecies"] + "/arm21.png");
    if (_0x5deacb) {
      var _0x4896b9 = Math["min"](0x1, (_0x168a54 - this["biteStart"]) / 0xc8),
        _0x34b02e = _0x549f3d((_0x168a54 - this["biteStart"]) / 0x12c, 0x0, 0x1),
        _0x469802 = -_0x34b02e * _0x2f9e35;
      _0x587de3["rotate"](this["angle"] + _0x469802);
      var _0x2f5ff6 = -this["rad"] * 1.75,
        _0x570f2d = this["rad"] / 0x2,
        _0x50acb2 = this["rad"],
        _0x1cef3d = _0x2f5ff6 * 0x2,
        _0x3fa1a7 = _0x2f5ff6 * 0x2 * _0x4896b9,
        _0x3169e2 = 0.3,
        _0x15895c = 0.8;
      _0x587de3["drawImage"](_0x5deacb, _0x570f2d + _0x1cef3d * -_0x3169e2, _0x50acb2 + _0x3fa1a7 * -_0x15895c + _0x2f5ff6, _0x1cef3d, _0x3fa1a7);
    }
    _0x587de3["restore"]();
  }),
  (_0x51d6a2["prototype"]["showSpear"] = ![]),
  (_0x51d6a2["prototype"]["showHand"] = !![]),
  (_0x51d6a2["prototype"]["drawSkinCustomization"] = function () {
    if (this["flag_underWater"] || this["flag_isInArena"]) return;
    this["setSkinScale"]();
    !this["flag_usingAbility"] && (this["biteStart"] = 0x0);
    if (this["showSpear"]) this["spearHandAnimation"](0x0);
    else {
      if (this["showHand"] || this["id"] == 0x0) this["leftHandAnimation"](0x0);
    }
    this["rightHandAnimation"](0x0), this["bigfootHead"](0x0);
    if (!this["flag_usingAbility"] && !this["flag_inHidingHole"]) this["oogaBoogaAnimation"](0x0);
  }),
  (_0x51d6a2["prototype"]["oogaBoogaNextT"] = +new Date() + 0x3a98),
  (_0x51d6a2["prototype"]["oogaBoogaFrame"] = 0x0),
  (_0x51d6a2["prototype"]["oogaBoogaFrameT"] = 0x0),
  (_0x51d6a2["prototype"]["oogaBoogaAnimation"] = function (_0x36c61a) {
    if (_0x168a54 > this["oogaBoogaNextT"]) {
      if (_0x168a54 > this["oogaBoogaFrameT"]) {
        (this["oogaBoogaFrameT"] = _0x168a54 + 0x12c), (this["oogaBoogaFrame"] += 0x1);
        if (this["oogaBoogaFrame"] == 0x1) this["gotChat"]("OOGA!");
        else {
          if (this["oogaBoogaFrame"] == 0x3) this["gotChat"]("BOOGA!");
        }
      }
      this["oogaBoogaFrame"] > 0x4 && ((this["oogaBoogaFrame"] = 0x0), (this["oogaBoogaNextT"] = +new Date() + 0x3a98));
    }
    if (this["oogaBoogaFrame"] > 0x0) {
      var _0x47f300 = 0x0,
        _0x46429e = 0x1f4 / 0x154,
        _0x45d57e = this["getSkinImageObj"]("skins/land/bigfoot/" + this["animalSpecies"] + "/head" + this["oogaBoogaFrame"] + ".png");
      if (_0x45d57e) {
        _0x587de3["save"]();
        var _0x2d2337 = this["rad"];
        _0x587de3["drawImage"](
          _0x45d57e,
          -_0x2d2337 * _0x46429e,
          (-_0x2d2337 + _0x2d2337 * _0x47f300) * _0x46429e,
          0x2 * _0x2d2337 * _0x46429e,
          0x2 * _0x2d2337 * _0x46429e
        ),
          _0x587de3["restore"]();
      }
    }
  }),
  (_0x51d6a2["prototype"]["spearInHand"] = ![]),
  (_0x51d6a2["prototype"]["canCreateFire"] = ![]),
  (_0x51d6a2["prototype"]["readCustomData_onUpdate"] = function (_0x1fe6b4) {
    _0x51d6a2["superClass"]["prototype"]["readCustomData_onUpdate"]["call"](this, _0x1fe6b4);
    var _0x29a5a8 = _0x1fe6b4["readBitGroup"]();
    (this["showHand"] = _0x29a5a8["getBool"]()),
      (this["showSpear"] = this["showHand"] && _0x29a5a8["getBool"]()),
      (this["canCreateFire"] = _0x29a5a8["getBool"]());
  });
var _0x23e1ae = 0.84,
  _0x382c09 = 0.47,
  _0x5ee7f9 = 0x2d,
  _0x3cbabd = -0x1e,
  _0x161e8d = 1.3,
  _0x85186b = 1.5,
  _0x41d735 = 0.3;
(_0x51d6a2["prototype"]["bigfootHead"] = function (_0x2406bb) {
  var _0x4f3aaa = 0x0,
    _0x59f63d = 0x1f4 / 0x154,
    _0x497c29 = this["flag_usingAbility"] ? "head2" : "head";
  if (!this["flag_usingAbility"]) _0x4f3aaa = 0x0;
  var _0xfa1859 = this["getSkinImageObj"]("skins/land/bigfoot/" + this["animalSpecies"] + "/" + _0x497c29 + ".png");
  if (_0xfa1859) {
    _0x587de3["save"]();
    var _0x1f4df7 = this["rad"];
    _0x587de3["drawImage"](
      _0xfa1859,
      -_0x1f4df7 * _0x59f63d,
      (-_0x1f4df7 + _0x1f4df7 * _0x4f3aaa) * _0x59f63d,
      0x2 * _0x1f4df7 * _0x59f63d,
      0x2 * _0x1f4df7 * _0x59f63d
    ),
      _0x587de3["restore"]();
  }
}),
  (_0x51d6a2["prototype"]["spearHandAnimation"] = function (_0x3afea1) {
    var _0x5f2dbc = (_0x168a54 - this["spawnTime"]) / 0x3e8,
      _0x40bcef = 0x0;
    if (!_0x34fedb && !(_0x57ae6d == 0x2)) _0x40bcef = _0x120bbb(_0x5f2dbc, _0x85186b, _0x41d735, 0x2);
    var _0x210bfb = this["getSkinImageObj"]("skins/land/bigfoot/" + this["animalSpecies"] + "/arm2.png");
    if (_0x210bfb) {
      _0x587de3["save"]();
      var _0x2fd87a = -(-0.2 + _0x40bcef) * _0x3d960f(_0x5ee7f9),
        _0x53665a = this["rad"] * _0x161e8d;
      _0x587de3["rotate"](_0x3d960f(_0x3cbabd) + _0x2fd87a);
      var _0x11349d = 0x0,
        _0x4569f2 = this["rad"],
        _0x14998b = _0x53665a * 0x2,
        _0xd7652e = _0x53665a * 0x2,
        _0x3ab4b5 = _0x382c09,
        _0x36a2b5 = _0x23e1ae;
      _0x587de3["drawImage"](_0x210bfb, _0x11349d + _0x14998b * -_0x3ab4b5, _0x4569f2 + _0xd7652e * -_0x36a2b5, _0x14998b, _0xd7652e);
      if (this["canCreateFire"]) {
        var _0x36632e = this["getSkinImageObj"]("skins/land/bigfoot/" + this["animalSpecies"] + "/arm2-fire.png");
        if (_0x36632e) {
          var _0x5f2dbc = (_0x168a54 - this["spawnTime"]) / 0x3e8,
            _0x40bcef = _0x120bbb(_0x5f2dbc, 0x5, 0x1, 0x1);
          (_0x587de3["globalAlpha"] = Math["max"](0x0, _0x40bcef)),
            _0x587de3["drawImage"](_0x36632e, _0x11349d + _0x14998b * -_0x3ab4b5, _0x4569f2 + _0xd7652e * -_0x36a2b5, _0x14998b, _0xd7652e);
        }
      }
      _0x587de3["restore"]();
    }
  }),
  (_0x51d6a2["prototype"]["rightHandAnimation"] = function (_0x1bdd87) {
    var _0x329953 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
      _0x4f76e4 = 0x0;
    if (!_0x34fedb && !(_0x57ae6d == 0x2)) _0x4f76e4 = _0x120bbb(_0x329953, _0x85186b, _0x41d735, 0x2);
    var _0x5a7756 = this["getSkinImageObj"]("skins/land/bigfoot/" + this["animalSpecies"] + "/arm1.png");
    if (_0x5a7756) {
      _0x587de3["save"]();
      var _0x53f996 = -_0x4f76e4 * _0x3d960f(-0xa),
        _0x31baee = this["rad"] * _0x161e8d;
      _0x587de3["rotate"](_0x3d960f(-0x5) + _0x53f996);
      var _0x504f1a = 0x0,
        _0xb07675 = this["rad"],
        _0x570c64 = _0x31baee * 0x2,
        _0x3346d1 = _0x31baee * 0x2,
        _0x3669dd = 0.55,
        _0x251734 = 0.85;
      _0x587de3["drawImage"](_0x5a7756, _0x504f1a + _0x570c64 * -_0x3669dd, _0xb07675 + _0x3346d1 * -_0x251734, _0x570c64, _0x3346d1),
        _0x587de3["restore"]();
    }
  }),
  (_0x51d6a2["prototype"]["leftHandAnimation"] = function (_0x4ba72c) {
    var _0x46e9f3 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
      _0x5284f4 = 0x0;
    if (!_0x34fedb && !(_0x57ae6d == 0x2)) {
      if (!(this["id"] == _0x204989 && _0x34fedb)) _0x5284f4 = _0x120bbb(_0x46e9f3, _0x85186b, _0x41d735, 0x2);
    }
    var _0x125756 = this["getSkinImageObj"]("skins/land/bigfoot/" + this["animalSpecies"] + "/arm21.png");
    if (_0x125756) {
      _0x587de3["save"]();
      var _0x3565aa = -_0x5284f4 * _0x3d960f(-0xa),
        _0x40d8c5 = this["rad"] * _0x161e8d;
      _0x587de3["rotate"](_0x3d960f(-0x5) + _0x3565aa);
      var _0x31bad9 = 0x0,
        _0x3172e1 = this["rad"],
        _0x20c479 = _0x40d8c5 * 0x2,
        _0x5c5803 = _0x40d8c5 * 0x2,
        _0x39207d = 0.47,
        _0x59ca2a = 0.8;
      _0x587de3["drawImage"](_0x125756, _0x31bad9 + _0x20c479 * -_0x39207d, _0x3172e1 + _0x5c5803 * -_0x59ca2a, _0x20c479, _0x5c5803),
        _0x587de3["restore"]();
    }
  });

function _0x51d6a2() {
  _0x51d6a2["superClass"]["call"](this, _0x3fb3b2), (this["oogaBoogaNextT"] = +new Date() + 0x3a98);
}
(window["BigFoot"] = _0x51d6a2), _0x17bf26["setCustomClassForGameObjType"](_0x51d6a2, _0x3fb3b2, _0x511c71);
var _0x1d83bb = _0x43993d,
  _0x48c344 = _0xe4ec38;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344),
  (_0x43993d["prototype"]["victimID"] = 0x0),
  (_0x43993d["prototype"]["updateZ"] = function () {
    if (this["effect_flying"]) this["z"] = 0x186a0;
    else this["victimID"] == 0x0 && (this["z"] = 0x44c);
  });
var _0x2ed64b = 0x1,
  _0x255c27 = 0x2,
  _0x297c7f = 0x3;
(_0x43993d["prototype"]["customDraw"] = function (_0x9222d7) {
  _0x587de3["save"]();
  if (this["spearState"] == _0x255c27) {
    var _0x1eb0d7 = this["getSkinImageObj"]("skins/land/bigfoot/" + this["speciesType"] + "/spear.png");
    if (_0x1eb0d7) {
      _0x587de3["save"]();
      var _0x42ee7e = this["rad"] * 0x2;
      _0x587de3["rotate"](this["angle"] + _0x2f9e35),
        _0x587de3["drawImage"](_0x1eb0d7, -_0x42ee7e / 0x2, -_0x42ee7e / 0x2, _0x42ee7e, _0x42ee7e * 0x4),
        _0x587de3["restore"]();
    }
  } else {
    if (this["spearState"] == _0x297c7f) {
      _0x587de3["save"]();
      var _0x1eb0d7 = this["getSkinImageObj"]("skins/land/bigfoot/" + this["speciesType"] + "/spear2.png");
      if (_0x1eb0d7) {
        var _0x42ee7e = this["rad"] * 0x2;
        _0x587de3["rotate"](this["angle"] + _0x2f9e35),
          _0x587de3["drawImage"](_0x1eb0d7, -_0x42ee7e / 0x2, -_0x42ee7e / 0x2, _0x42ee7e, _0x42ee7e * 0x4);
      }
      _0x587de3["restore"]();
    } else {
      if (this["spearState"] == _0x2ed64b) {
        var _0x1e61f5 = this["spearState"],
          _0x1eb0d7 = this["getSkinImageObj"]("skins/land/bigfoot/" + this["speciesType"] + "/arm2.png");
        if (_0x1eb0d7) {
          var _0x249565 = Math["min"](0x1, (_0x168a54 - this["spawnTime"]) / 0xc8),
            _0x3e9362 = _0x549f3d((_0x168a54 - this["spawnTime"]) / 0x12c, 0x0, 0x1),
            _0x27b067 = -_0x3e9362 * _0x2f9e35;
          _0x587de3["rotate"](this["angle"] + _0x27b067 * (this["specType"] == 0x1 ? 0x1 : -0x1));
          var _0x42ee7e = -this["rad"] * 1.5,
            _0x3bd5ed = this["rad"] / 0x2,
            _0x44906b = this["rad"],
            _0x32472c = _0x42ee7e * 0x2,
            _0x39d682 = _0x42ee7e * 0x2 * _0x249565,
            _0x55d765 = 0.3,
            _0x573381 = 0.8;
          _0x587de3["drawImage"](_0x1eb0d7, _0x3bd5ed + _0x32472c * -_0x55d765, _0x44906b + _0x39d682 * -_0x573381 + _0x42ee7e, _0x32472c, _0x39d682);
        }
      }
    }
  }
  _0x587de3["restore"]();
}),
  (_0x43993d["prototype"]["spearState"] = 0x0),
  (_0x43993d["prototype"]["effect_flying"] = ![]),
  (_0x43993d["prototype"]["readUpdatedProperty"] = function (_0x52c7b9, _0x272d18) {
    if (_0x52c7b9 == _0x42373a) this["spearState"] = _0x272d18["readUInt8"]();
    else {
      if (_0x52c7b9 == _0x2f0d61) {
        this["victimID"] = _0x272d18["readUInt32"]();
        if (this["victimID"] != 0x0) {
          if (_0x2fa637[this["victimID"]]) this["z"] = _0x2fa637[this["victimID"]]["z"] + 0x1;
        }
      } else _0x52c7b9 == _0x4b3aba && (this["effect_flying"] = _0x272d18["readUInt8"]() == 0x1);
    }
  }),
  (_0x43993d["prototype"]["readCustomData_onNewlyVisible"] = function (_0x4f46ff) {
    _0x43993d["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x4f46ff),
      (this["spearState"] = _0x4f46ff["readUInt8"]()),
      (this["victimID"] = _0x4f46ff["readUInt32"]());
    if (this["victimID"] != 0x0) {
      if (_0x2fa637[this["victimID"]]) this["z"] = _0x2fa637[this["victimID"]]["z"] + 0x1;
    }
    this["effect_flying"] = _0x4f46ff["readUInt8"]() == 0x1;
  });

function _0x43993d() {
  _0x43993d["superClass"]["call"](this), (_0x43993d["prototype"]["easeAngleChanges"] = !![]);
}
(window["BigfootSpear"] = _0x43993d), _0x17bf26["setCustomClassForGameObjType"](_0x43993d, _0x5aa814, _0x213e84);
var _0x48c344 = _0x307a43;
(_0x225c15["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x225c15["prototype"]["constructor"] = _0x225c15),
  (_0x225c15["superClass"] = _0x48c344),
  (_0x225c15["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"];
  }),
  (_0x225c15["prototype"]["setSkinPath"] = function () {
    this["objSkinPath"] = "skins/land/bigfoot/" + this["speciesType"] + "/firewood.png";
  }),
  (_0x225c15["prototype"]["customDraw"] = function (_0x3742ae) {
    _0x587de3["save"]();
    var _0x4c4ba5 = this["rad"] * 2.2,
      _0x486e05 = this["getSkinImageObj"](this["objSkinPath"]);
    _0x486e05 && _0x587de3["drawImage"](_0x486e05, -_0x4c4ba5 / 0x2, -_0x4c4ba5 / 0x2, _0x4c4ba5, _0x4c4ba5), _0x587de3["restore"]();
  });
var _0x560144 = 0x79;

function _0x225c15() {
  _0x225c15["superClass"]["call"](this, _0x560144);
}
(window["FireWood"] = _0x225c15), _0x17bf26["setCustomClassForGameObjType"](_0x225c15, _0x560144);
var _0x48c344 = _0x307a43;
(_0x53b7c9["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x53b7c9["prototype"]["constructor"] = _0x53b7c9),
  (_0x53b7c9["superClass"] = _0x48c344),
  (_0x53b7c9["prototype"]["updateZ"] = function () {
    this["z"] = 0x44c;
  }),
  (_0x53b7c9["prototype"]["alpha"] = 0x1),
  (_0x53b7c9["prototype"]["trunkW"] = 0.5),
  (_0x53b7c9["prototype"]["customDraw"] = function (_0x172eb0) {
    _0x587de3["save"]();
    var _0x56707a = 0x0,
      _0x23d241 = 0x0;
    let _0x3195a1 = _0x169ff8[this["id"]] == 0x1;
    var _0x20cee7 = 0x1;
    try {
      _0x3195a1
        ? (this["alpha"] += (0.4 - this["alpha"]) * 0.1)
        : ((this["alpha"] += (0x1 - this["alpha"]) * 0.1), this["alpha"] > 0.99 && (this["alpha"] = 0x1));
    } catch (_0x3ee1e9) {}
    var _0x441867 = this["getTreeName"]();
    if (!(_0x57ae6d == 0x2)) {
      var _0x3ee261 = this["getSkinImageObj"]("gameobj/101/" + _0x441867 + "/" + this["getTrunk"]() + ".png");
      if (_0x3ee261) {
        var _0x1d6de5 = this["rad"],
          _0x5a3565 = this["rPer"] * Math["PI"] * 0x2;
        _0x587de3["rotate"](this["angle"]), _0x587de3["drawImage"](_0x3ee261, -_0x1d6de5, -_0x1d6de5, 0x2 * _0x1d6de5, 0x2 * _0x1d6de5);
      }
    }
    if (this["canopy"]) {
      var _0x417bae = "canopy";
      _0x441867 == "default" &&
        ((_0x417bae += this["curBiome"]), this["curBiome"] == _0x75a7e2 && (_0x417bae = _0x417bae + "_" + this["speciesType"]));
      var _0x1d6de5 = (this["foodType"] == _0x5a8996 ? this["rad"] * 1.25 : this["rad"]) + _0x56707a;
      if (this["eventType"] == 0x2 && this["treeType"] != "default") this["drawEventDecorations"](_0x441867, _0x417bae, _0x1d6de5, _0x5a3565);
      else {
        if (this["xmasTree"]) this["drawXmasProp"](_0x441867, _0x1d6de5, _0x5a3565, "ornament", _0x23d241);
        if (!_0x34fedb && !(_0x57ae6d == 0x2)) {
          var _0x3ee261 = this["getSkinImageObj"](this["getCanopySkin"](_0x441867, _0x417bae));
          _0x3ee261
            ? (_0x587de3["save"](),
              (_0x587de3["globalAlpha"] *= this["alpha"]),
              !(this["curBiome"] === _0x75a7e2 && this["speciesType"] === 0x1) && _0x587de3["rotate"](this["angle"]),
              _0x587de3["drawImage"](_0x3ee261, -_0x1d6de5 + _0x23d241, -_0x1d6de5 - _0x23d241, 0x2 * _0x1d6de5, 0x2 * _0x1d6de5),
              _0x587de3["restore"]())
            : console["log"]("not found " + _0x441867);
        } else _0x587de3["save"](), _0x440ef0(0x0, 0x0, this["rad"] * 0.2, "brown"), this["drawNoImageTree"](this["rad"]), _0x587de3["restore"]();
        if (this["xmasTree"]) this["drawXmasProps"](_0x441867, _0x1d6de5, _0x5a3565, _0x23d241);
      }
    }
    _0x587de3["restore"]();
  }),
  (_0x53b7c9["prototype"]["drawNoImageTree"] = function (_0xf6f00d) {
    _0x587de3["save"](), (_0x587de3["globalAlpha"] = this["alpha"]);
    var _0x220607 = this["getBiomeColors"]();
    _0x440ef0(-_0xf6f00d * 0.5, -_0xf6f00d * 0.5, _0xf6f00d * 0.65, _0x220607["dark"]),
      _0x440ef0(_0xf6f00d * 0.5, -_0xf6f00d * 0.5, _0xf6f00d * 0.73, _0x220607["dark"]),
      _0x440ef0(_0xf6f00d * 0.6, _0xf6f00d * 0.4, Math["max"](0x0, _0xf6f00d * 0.78), _0x220607["dark"]),
      _0x440ef0(-_0xf6f00d * 0.5, _0xf6f00d * 0.5, Math["max"](0x0, _0xf6f00d * 0.6), _0x220607["dark"]),
      _0x440ef0(-_0xf6f00d * 0.5, -_0xf6f00d * 0.5, (_0xf6f00d - 0x2) * 0.65, _0x220607["light"]),
      _0x440ef0(_0xf6f00d * 0.5, -_0xf6f00d * 0.5, (_0xf6f00d - 0x2) * 0.73, _0x220607["light"]),
      _0x440ef0(_0xf6f00d * 0.6, _0xf6f00d * 0.4, (_0xf6f00d - 0x2) * 0.78, _0x220607["light"]),
      _0x440ef0(-_0xf6f00d * 0.5, _0xf6f00d * 0.5, (_0xf6f00d - 0x2) * 0.6, _0x220607["light"]),
      _0x587de3["restore"]();
    return;
    _0x587de3["save"](), (this["rPer"] = 0x0);
    var _0x19125f = 0x0,
      _0x4f99c9 = "#45D157";
    (_0x587de3["fillStyle"] = color),
      (_0x587de3["globalAlpha"] = this["alpha"]),
      _0x587de3["beginPath"](),
      _0x587de3["arc"](_0xf6f00d * 0.5, -_0xf6f00d * 0.5, Math["max"](0x0, _0xf6f00d * 0.73), 0x0, 0x2 * Math["PI"]),
      _0x587de3["fill"](),
      _0x587de3["beginPath"](),
      _0x587de3["arc"](_0xf6f00d * 0.6, _0xf6f00d * 0.4, Math["max"](0x0, _0xf6f00d * 0.78), 0x0, 0x2 * Math["PI"]),
      _0x587de3["fill"](),
      _0x587de3["beginPath"](),
      _0x587de3["arc"](-_0xf6f00d * 0.5, _0xf6f00d * 0.5, Math["max"](0x0, _0xf6f00d * 0.6), 0x0, 0x2 * Math["PI"]),
      _0x587de3["fill"](),
      _0x587de3["restore"]();
  }),
  (_0x53b7c9["prototype"]["lights"] = 0x0),
  (_0x53b7c9["prototype"]["drawXmasProps"] = function (_0x1e450f, _0x4a2296, _0x3a9e35, _0x5c4ea4) {
    this["drawXmasProp"](_0x1e450f, _0x4a2296, _0x3a9e35, "decoration", _0x5c4ea4);
    if (this["lights"] == 0x1 || this["lights"] == 0x3) this["drawXmasProp"](_0x1e450f, _0x4a2296, _0x3a9e35, "light", _0x5c4ea4);
    if (this["lights"] == 0x2 || this["lights"] == 0x3) this["drawXmasProp"](_0x1e450f, _0x4a2296, _0x3a9e35, "light1", _0x5c4ea4);
  }),
  (_0x53b7c9["prototype"]["drawXmasProp"] = function (_0x12591a, _0x15d603, _0x2306a2, _0x261282, _0x13c869) {
    var _0x320214 = "img/tree/" + _0x12591a + "/xmas/" + _0x261282 + ".png",
      _0x44dc79 = this["getSkinImageObj"](_0x320214);
    _0x44dc79
      ? (_0x587de3["save"](),
        _0x587de3["rotate"](this["angle"]),
        _0x587de3["drawImage"](_0x44dc79, -_0x15d603 + _0x13c869, -_0x15d603 - _0x13c869, 0x2 * _0x15d603, 0x2 * _0x15d603),
        _0x587de3["restore"]())
      : console["log"]("not found: " + _0x320214);
  }),
  (_0x53b7c9["prototype"]["drawEventDecorations"] = function (_0x1df3c2, _0x38a657, _0x1090c0, _0x5aebf7) {
    let _0x3f2a14 = "gameobj/101/" + _0x1df3c2 + "/" + _0x38a657 + "_" + this["eventType"] + ".png";
    var _0x1e96f0 = this["getSkinImageObj"](_0x3f2a14);
    _0x1e96f0
      ? (_0x587de3["save"](),
        _0x587de3["rotate"](this["angle"]),
        _0x587de3["drawImage"](_0x1e96f0, -_0x1090c0 + _0x5aebf7, -_0x1090c0 - _0x5aebf7, 0x2 * _0x1090c0, 0x2 * _0x1090c0),
        _0x587de3["restore"]())
      : console["log"]("not found: " + _0x3f2a14);
  }),
  (_0x53b7c9["prototype"]["drawEventDecorations"] = function (_0xaba7f3, _0xa82977, _0x21e098, _0x4b5dff) {
    let _0x503574 = "gameobj/101/" + _0xaba7f3 + "/" + _0xa82977 + "_" + this["eventType"] + ".png";
    var _0x328e02 = this["getSkinImageObj"](_0x503574);
    console["log"](_0x503574),
      _0x328e02 &&
        (_0x587de3["save"](),
        _0x587de3["rotate"](this["angle"]),
        _0x587de3["drawImage"](_0x328e02, -_0x21e098 + _0x4b5dff, -_0x21e098 - _0x4b5dff, 0x2 * _0x21e098, 0x2 * _0x21e098),
        _0x587de3["restore"]());
  }),
  (_0x53b7c9["prototype"]["getTreeName"] = function () {
    switch (this["foodType"]) {
      case _0x5a8996:
        return "coco";
      case _0x313ba2:
        return "banana";
      case _0x3fc954:
        return "fir";
    }
    return "default";
  }),
  (_0x53b7c9["prototype"]["getBiomeColors"] = function () {
    var _0x537bf3 = {
      dark: "#09992f",
      light: "#1cba34",
    };
    switch (this["curBiome"]) {
      case _0x5dcee3:
        _0x537bf3 = {
          dark: "#808080",
          light: "#f7f7f7",
        };
        break;
      case _0x4e58f5:
      case _0x75a7e2:
        _0x537bf3 = {
          dark: "#a59215",
          light: "#fffff",
        };
        break;
      case _0x50fa53:
        _0x537bf3 = {
          dark: "#09992f",
          light: "#1cba34",
        };
        break;
      case _0xf851ac:
        _0x537bf3 = {
          dark: "#09992f",
          light: "limegreen",
        };
        break;
      case _0x1940a7:
        _0x537bf3 = {
          dark: "#1aae31",
          light: "limegreen",
        };
        break;
      default:
    }
    return _0x537bf3;
  }),
  (_0x53b7c9["prototype"]["getTrunk"] = function () {
    if (this["curBiome"] == _0x75a7e2) return "trunk4_" + this["speciesType"];
    return "trunk";
  }),
  (_0x53b7c9["prototype"]["foodType"] = 0x0),
  (_0x53b7c9["prototype"]["canopy"] = !![]),
  (_0x53b7c9["prototype"]["readCustomData_onNewlyVisible"] = function (_0x28845c) {
    (this["foodType"] = _0x28845c["readUInt16"]()),
      (this["canopy"] = _0x28845c["readUInt8"]() == 0x1),
      (this["eventType"] = _0x28845c["readUInt8"]()),
      (this["xmasTree"] = this["eventType"] == 0x3);
  }),
  (_0x53b7c9["prototype"]["readUpdatedProperty"] = function (_0x246a20, _0x3a1197) {
    _0x246a20 == _0x9a7dd6 && (this["lights"] = _0x3a1197["readUInt8"]());
  }),
  (_0x53b7c9["prototype"]["treeCanopySkin"] = null),
  (_0x53b7c9["prototype"]["getCanopySkin"] = function (_0xa342c, _0x144736) {
    return this["treeCanopySkin"] == null && (this["treeCanopySkin"] = "gameobj/101/" + _0xa342c + "/" + _0x144736 + ".png"), this["treeCanopySkin"];
  });

function _0x53b7c9() {
  _0x53b7c9["superClass"]["call"](this, _0x18715e);
}
(window["Tree"] = _0x53b7c9), _0x17bf26["setCustomClassForGameObjType"](_0x53b7c9, _0x18715e);
var _0x1d83bb = _0xa0b63b,
  _0x48c344 = _0x307a43;
(_0xa0b63b["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0xa0b63b["prototype"]["constructor"] = _0xa0b63b),
  (_0xa0b63b["superClass"] = _0x48c344),
  (_0xa0b63b["prototype"]["updateZ"] = function () {
    this["z"] = -0xd7;
  }),
  (_0xa0b63b["prototype"]["customDraw"] = function (_0x9500af) {
    _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0.5);
    {
      _0x587de3["fillStyle"] = _0x53ed3f;
      var _0x1d1fa0 = -this["rectW"] / 0x2,
        _0x112ca6 = this["rectW"] / 0x2,
        _0x160403 = -this["rectH"] / 0x2,
        _0x503b9e = this["rectH"] / 0x2;
      _0x587de3["beginPath"](), _0x587de3["moveTo"](_0x1d1fa0, _0x160403);
      var _0x2e2463 = 0x14,
        _0xfd3e38 = [-0xf, 0xa, -0xa, 0xc, 0x0, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
        _0x212ee0 = 0x2d,
        _0x4f6071 = 0x0,
        _0x51715d = _0x2c6299 - this["x"],
        _0x48d332 = 0x0 - this["x"],
        _0x5b476e = _0x27ef2a - this["y"],
        _0x3af32 = 0x0 - this["y"],
        _0x253e84,
        _0x311efd = _0x1d1fa0 - _0x2e2463;
      for (_0x253e84 = _0x160403; _0x253e84 < _0x503b9e; _0x253e84 += _0x212ee0) {
        _0x587de3["lineTo"](Math["min"](_0x51715d, Math["max"](_0x48d332, _0x311efd + _0xfd3e38[_0x4f6071])), _0x253e84),
          (_0x4f6071 = (_0x4f6071 + 0x1) % _0xfd3e38["length"]);
      }
      _0x587de3["lineTo"](_0x1d1fa0, _0x503b9e), (_0x253e84 = _0x503b9e + _0x2e2463);
      for (_0x311efd = _0x1d1fa0; _0x311efd < _0x112ca6; _0x311efd += _0x212ee0) {
        _0x587de3["lineTo"](_0x311efd, Math["min"](_0x5b476e, Math["max"](_0x3af32, _0x253e84 + _0xfd3e38[_0x4f6071]))),
          (_0x4f6071 = (_0x4f6071 + 0x1) % _0xfd3e38["length"]);
      }
      _0x587de3["lineTo"](_0x112ca6, _0x503b9e), (_0x311efd = _0x112ca6 + _0x2e2463);
      for (_0x253e84 = _0x503b9e; _0x253e84 > _0x160403; _0x253e84 -= _0x212ee0) {
        _0x587de3["lineTo"](Math["min"](_0x51715d, Math["max"](_0x48d332, _0x311efd + _0xfd3e38[_0x4f6071])), _0x253e84),
          (_0x4f6071 = (_0x4f6071 + 0x1) % _0xfd3e38["length"]);
      }
      _0x587de3["lineTo"](_0x112ca6, _0x160403), (_0x253e84 = _0x160403 - _0x2e2463);
      for (_0x311efd = _0x112ca6; _0x311efd > _0x1d1fa0; _0x311efd -= _0x212ee0) {
        _0x587de3["lineTo"](_0x311efd, Math["min"](_0x5b476e, Math["max"](_0x3af32, _0x253e84 + _0xfd3e38[_0x4f6071]))),
          (_0x4f6071 = (_0x4f6071 + 0x1) % _0xfd3e38["length"]);
      }
      _0x587de3["closePath"](), _0x587de3["fill"]();
    }
    _0x587de3["restore"]();
  }),
  (_0xa0b63b["prototype"]["edge"] = function () {
    _0x587de3["save"]();
    var _0x19adfe = 0xf;
    {
      _0x587de3["fillStyle"] = "red";
      var _0x112c70 = -this["rectW"] / 0x2,
        _0x249b69 = this["rectW"] / 0x2,
        _0x460098 = -this["rectH"] / 0x2 + 0x3,
        _0x4caf11 = -this["rectH"] / 0x2 - _0x19adfe;
      _0x587de3["beginPath"](), _0x587de3["moveTo"](_0x112c70, _0x460098);
      var _0x3fd0a7 = 0x0,
        _0x4358f3 = [-0xf, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
        _0x28dacc = 0x3c,
        _0x458e99 = 0x0,
        _0x3bf4ae = _0x2c6299 - this["x"],
        _0x509ac4 = 0x0 - this["x"],
        _0xb2da17 = _0x27ef2a - this["y"],
        _0x5a2d4d = 0x0 - this["y"],
        _0x43e7ef,
        _0x382101 = _0x112c70 - _0x3fd0a7;
      _0x587de3["lineTo"](_0x112c70, _0x4caf11), (_0x43e7ef = _0x4caf11 + _0x3fd0a7);
      for (_0x382101 = _0x112c70; _0x382101 < _0x249b69; _0x382101 += _0x28dacc) {
        _0x587de3["lineTo"](_0x382101, Math["min"](_0xb2da17, Math["max"](_0x5a2d4d, _0x43e7ef + _0x4358f3[_0x458e99]))),
          (_0x458e99 = (_0x458e99 + 0x1) % _0x4358f3["length"]);
      }
      _0x587de3["lineTo"](_0x249b69, _0x4caf11), _0x587de3["lineTo"](_0x249b69, _0x460098), _0x587de3["closePath"]();
    }
    _0x587de3["restore"]();
  });

function _0xa0b63b() {
  _0xa0b63b["superClass"]["call"](this, _0x28e4ca);
}
(window["RainForest"] = _0xa0b63b), _0x17bf26["setCustomClassForGameObjType"](_0xa0b63b, _0x28e4ca);
var _0x48c344 = _0x307a43;
(_0x1e0e09["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1e0e09["prototype"]["constructor"] = _0x1e0e09),
  (_0x1e0e09["superClass"] = _0x48c344),
  (_0x1e0e09["prototype"]["updateZ"] = function () {
    this["z"] = 0x3ed;
  }),
  (_0x1e0e09["prototype"]["customDraw"] = function (_0x33e340) {
    _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0x1), _0x440ef0(0x0, 0x0, this["rad"], "#000"), _0x587de3["restore"]();
  });

function _0x1e0e09() {
  _0x1e0e09["superClass"]["call"](this, _0x198a28);
}
(window["FOV"] = _0x1e0e09), _0x17bf26["setCustomClassForGameObjType"](_0x1e0e09, _0x198a28);
var _0x48c344 = _0x307a43;
(_0x1f52fe["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1f52fe["prototype"]["constructor"] = _0x1f52fe),
  (_0x1f52fe["superClass"] = _0x48c344),
  (_0x1f52fe["prototype"]["updateZ"] = function () {
    (this["z"] = -0x9f), (this["specType"] == 0x0 || 0x1) && (this["z"] = -0x9e);
  }),
  (_0x1f52fe["prototype"]["currentWidth"] = 0x5a),
  (_0x1f52fe["prototype"]["currentPadding"] = 0x0),
  (_0x1f52fe["prototype"]["padding"] = 0x32),
  (_0x1f52fe["prototype"]["isFloatingRiver"] = ![]),
  (_0x1f52fe["prototype"]["customDraw"] = function (_0x2eb187) {
    if (_0x2eb187) {
      this["jaggedSidesForRect"](_0x3febc7, this["getStreamMargin"]());
      if (!_0x3d2be2["noTextures"]) this["drawTerrainFeatures"]();
    } else {
    }
    this["drawStream"](_0x2634c2), this["drawCurrent"](this["isFloatingRiver"], this["riverSize"]);
  }),
  (_0x1f52fe["prototype"]["drawCurrent"] = function (_0x3a3c91, _0x332211) {
    if (_0x3a3c91) {
      this["currentPadding"] = (this["padding"] * _0x332211) / 0x2;
      var _0x3e1220 = 0x3c,
        _0x2521fe = 0x3e8;
      if (this["specType"] == 0x0) {
        var _0x3e9bb6 = this["getSkinImageObj"]("gameobj/40/currentRight.png");
        if (_0x3e9bb6) {
          var _0x1a9630 = -this["rectW"] / 0x2 + 0x32,
            _0x538bf0 = this["currentWidth"];
          _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0x1), (maxWaves = Math["round"](this["rectW"] / _0x538bf0) - 0x1);
          for (i = 0x0; i < maxWaves; i++) {
            var _0x58a0ee = this["speedX"] * (_0x538bf0 / _0x3e1220) * _0x2521fe,
              _0x4cbf47 = ((_0x168a54 - this["spawnTime"]) % _0x58a0ee) / _0x58a0ee,
              _0x45e628 = _0x538bf0,
              _0x364f14 = _0x1a9630 + _0x45e628 * _0x4cbf47;
            _0x587de3["drawImage"](
              _0x3e9bb6,
              _0x364f14,
              this["currentPadding"] + (-this["rectH"] * _0x332211) / 0x2,
              _0x538bf0 * _0x332211,
              this["riverStreamHeight"] * _0x332211 - 0x8
            ),
              (_0x1a9630 += _0x538bf0);
          }
          _0x587de3["restore"]();
        }
      } else {
        if (this["specType"] == 0x1) {
          var _0x3e9bb6 = this["getSkinImageObj"]("gameobj/40/currentLeft.png");
          if (_0x3e9bb6) {
            var _0x1a9630 = this["rectW"] / 0x2 - 0x64,
              _0x538bf0 = this["currentWidth"];
            _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0x1), (maxWaves = Math["round"](this["rectW"] / _0x538bf0) - 0x1);
            for (i = 0x0; i < maxWaves; i++) {
              var _0x58a0ee = this["speedX"] * (_0x538bf0 / _0x3e1220) * _0x2521fe,
                _0x4cbf47 = ((_0x168a54 - this["spawnTime"]) % _0x58a0ee) / _0x58a0ee,
                _0x45e628 = _0x538bf0,
                _0x364f14 = _0x1a9630 + _0x45e628 * _0x4cbf47;
              _0x587de3["drawImage"](
                _0x3e9bb6,
                _0x364f14,
                this["currentPadding"] + (-this["rectH"] * _0x332211) / 0x2,
                _0x538bf0 * _0x332211,
                this["riverStreamHeight"] * _0x332211 - 0x8
              ),
                (_0x1a9630 -= _0x538bf0);
            }
            _0x587de3["restore"]();
          }
        } else {
          if (this["specType"] == 0x2) {
            var _0x3e9bb6 = this["getSkinImageObj"]("gameobj/40/currentDown.png");
            if (_0x3e9bb6) {
              var _0x382092 = -this["rectH"] / 0x2 - 0x32,
                _0x1eec09 = this["currentWidth"];
              _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0x1), (maxWaves = Math["round"](this["rectH"] / _0x1eec09) - 0x1);
              for (i = 0x0; i < maxWaves; i++) {
                var _0x58a0ee = this["speedY"] * (_0x1eec09 / _0x3e1220) * _0x2521fe,
                  _0x4cbf47 = ((_0x168a54 - this["spawnTime"]) % _0x58a0ee) / _0x58a0ee,
                  _0x45e628 = _0x1eec09,
                  _0x141d57 = _0x382092 + _0x45e628 * _0x4cbf47;
                if (i > 0x0)
                  _0x587de3["drawImage"](
                    _0x3e9bb6,
                    this["currentPadding"] + (-this["rectW"] * _0x332211) / 0x2,
                    _0x141d57,
                    this["riverStreamHeight"] * _0x332211 - 0x8,
                    _0x1eec09 * _0x332211
                  );
                _0x382092 += _0x1eec09;
              }
              _0x587de3["restore"]();
            }
          } else {
            if (this["specType"] == 0x3) {
              var _0x3e9bb6 = this["getSkinImageObj"]("gameobj/40/currentUp.png");
              if (_0x3e9bb6) {
                var _0x382092 = this["rectH"] / 0x2 + 0x32,
                  _0x1eec09 = this["currentWidth"];
                _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0x1), (maxWaves = Math["round"](this["rectH"] / _0x1eec09) - 0x1);
                for (i = 0x0; i < maxWaves; i++) {
                  var _0x58a0ee = this["speedY"] * (_0x1eec09 / _0x3e1220) * _0x2521fe,
                    _0x4cbf47 = ((_0x168a54 - this["spawnTime"]) % _0x58a0ee) / _0x58a0ee,
                    _0x45e628 = _0x1eec09,
                    _0x141d57 = _0x382092 + _0x45e628 * _0x4cbf47;
                  if (i > 0x0)
                    _0x587de3["drawImage"](
                      _0x3e9bb6,
                      this["currentPadding"] + (-this["rectW"] * _0x332211) / 0x2,
                      _0x141d57,
                      this["riverStreamHeight"] * _0x332211 - 0x8,
                      _0x1eec09 * _0x332211
                    );
                  _0x382092 -= _0x1eec09;
                }
                _0x587de3["restore"]();
              }
            }
          }
        }
      }
    }
  }),
  (_0x1f52fe["prototype"]["getStreamMargin"] = function () {
    return this["margin"];
  }),
  (_0x1f52fe["prototype"]["getRectWidth"] = function () {
    var _0x391983 = this["rectW"];
    return _0x391983;
  }),
  (_0x1f52fe["prototype"]["getRectHeight"] = function () {
    var _0x99655f = this["rectH"];
    return _0x99655f;
  }),
  (_0x1f52fe["prototype"]["jaggedSidesForRect"] = function (_0x37d79a, _0x1d1748) {
    _0x587de3["fillStyle"] = _0x37d79a;
    var _0x3b9eae = ![];
    if (_0x1d1748) _0x3b9eae = !![];
    var _0x5a6132 = -this["getRectWidth"]() / 0x2 + (_0x3b9eae ? _0x1d1748["x_min"] : 0x0),
      _0x504cbe = this["getRectWidth"]() / 0x2 + (_0x3b9eae ? _0x1d1748["x_max"] : 0x0),
      _0x393e94 = -this["getRectHeight"]() / 0x2 + (_0x3b9eae ? _0x1d1748["y_min"] : 0x0),
      _0x177f7f = this["getRectHeight"]() / 0x2 + (_0x3b9eae ? _0x1d1748["y_max"] : 0x0);
    _0x587de3["beginPath"](), _0x587de3["moveTo"](_0x5a6132, _0x393e94);
    var _0x544184 = 0x1e,
      _0x44753a = [-0x8, 0xa, -0xa, 0xc, 0x0, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
      _0x13a795 = 0x2d,
      _0x382482 = 0x0,
      _0x2c94b3 = _0x2c6299 - this["x"],
      _0x300832 = 0x0 - this["x"],
      _0x3a3cbd = _0x27ef2a - this["y"],
      _0x4c68dd = 0x0 - this["y"],
      _0x4d24bf,
      _0x41c5ef = _0x5a6132 - _0x544184;
    for (_0x4d24bf = _0x393e94; _0x4d24bf < _0x177f7f; _0x4d24bf += _0x13a795) {
      _0x587de3["lineTo"](Math["min"](_0x2c94b3, Math["max"](_0x300832, _0x41c5ef + _0x44753a[_0x382482])), _0x4d24bf),
        (_0x382482 = (_0x382482 + 0x1) % _0x44753a["length"]);
    }
    _0x587de3["lineTo"](_0x5a6132, _0x177f7f), (_0x4d24bf = _0x177f7f + _0x544184);
    for (_0x41c5ef = _0x5a6132; _0x41c5ef < _0x504cbe; _0x41c5ef += _0x13a795) {
      _0x587de3["lineTo"](_0x41c5ef, Math["min"](_0x3a3cbd, Math["max"](_0x4c68dd, _0x4d24bf + _0x44753a[_0x382482]))),
        (_0x382482 = (_0x382482 + 0x1) % _0x44753a["length"]);
    }
    _0x587de3["lineTo"](_0x504cbe, _0x177f7f), (_0x41c5ef = _0x504cbe + _0x544184);
    for (_0x4d24bf = _0x177f7f; _0x4d24bf > _0x393e94; _0x4d24bf -= _0x13a795) {
      _0x587de3["lineTo"](Math["min"](_0x2c94b3, Math["max"](_0x300832, _0x41c5ef + _0x44753a[_0x382482])), _0x4d24bf),
        (_0x382482 = (_0x382482 + 0x1) % _0x44753a["length"]);
    }
    _0x587de3["lineTo"](_0x504cbe, _0x393e94), (_0x4d24bf = _0x393e94 - _0x544184);
    for (_0x41c5ef = _0x504cbe; _0x41c5ef > _0x5a6132; _0x41c5ef -= _0x13a795) {
      _0x587de3["lineTo"](_0x41c5ef, Math["min"](_0x3a3cbd, Math["max"](_0x4c68dd, _0x4d24bf + _0x44753a[_0x382482]))),
        (_0x382482 = (_0x382482 + 0x1) % _0x44753a["length"]);
    }
    _0x587de3["closePath"](), _0x587de3["fill"]();
  }),
  (_0x1f52fe["prototype"]["drawStream"] = function (_0x57f44f) {
    _0x587de3["save"]();
    if (this["specType"] < 0x2) {
      var _0xaccf35 = -this["rectW"] / 0x2,
        _0xedc113 = this["rectW"],
        _0x3d3b13 = (-this["riverStreamHeight"] / 0x2) * this["riverSize"],
        _0x47a4c3 = this["riverStreamHeight"] * this["riverSize"];
      (_0x587de3["fillStyle"] = _0x57f44f), this["drawRandomEdges"](_0xaccf35, _0x3d3b13, _0xedc113 / 0x2, _0x47a4c3 / 0x2);
    } else {
      var _0xaccf35 = (-this["riverStreamHeight"] / 0x2) * this["riverSize"],
        _0xedc113 = this["riverStreamHeight"] * this["riverSize"],
        _0x3d3b13 = -this["rectH"] / 0x2,
        _0x47a4c3 = this["rectH"];
      (_0x587de3["fillStyle"] = _0x57f44f), this["drawRandomEdges"](_0xaccf35, _0x3d3b13, _0xedc113 / 0x2, _0x47a4c3 / 0x2);
    }
    _0x587de3["restore"]();
  }),
  (_0x1f52fe["prototype"]["drawRandomEdges"] = function (_0x1d0069, _0x4421f1, _0x2d7ee0, _0x36724a) {
    _0x587de3["beginPath"](), _0x587de3["moveTo"](_0x1d0069, _0x4421f1);
    var _0x470ed4 = 0xa,
      _0xbea630 = [-0x8, 0xa, -0xa, 0xc, 0x0, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
      _0x1ed479 = 0x2d,
      _0x187787 = 0x0,
      _0x114cd6,
      _0x27598c = _0x1d0069 - _0x470ed4;
    if (this["specType"] == 0x2 || this["specType"] == 0x3)
      for (_0x114cd6 = _0x4421f1; _0x114cd6 < _0x36724a; _0x114cd6 += _0x1ed479) {
        _0x587de3["lineTo"](_0x27598c + _0xbea630[_0x187787], _0x114cd6), (_0x187787 = (_0x187787 + 0x1) % _0xbea630["length"]);
      }
    _0x587de3["lineTo"](_0x1d0069, _0x36724a), (_0x114cd6 = _0x36724a + _0x470ed4);
    if (this["specType"] == 0x0 || this["specType"] == 0x1)
      for (_0x27598c = _0x1d0069; _0x27598c < _0x2d7ee0; _0x27598c += _0x1ed479) {
        _0x587de3["lineTo"](_0x27598c, _0x114cd6 + _0xbea630[_0x187787]), (_0x187787 = (_0x187787 + 0x1) % _0xbea630["length"]);
      }
    _0x587de3["lineTo"](_0x2d7ee0, _0x36724a);
    if (this["specType"] == 0x2 || this["specType"] == 0x3) {
      _0x27598c = _0x2d7ee0 + _0x470ed4;
      for (_0x114cd6 = _0x36724a; _0x114cd6 > _0x4421f1; _0x114cd6 -= _0x1ed479) {
        _0x587de3["lineTo"](_0x27598c + _0xbea630[_0x187787], _0x114cd6), (_0x187787 = (_0x187787 + 0x1) % _0xbea630["length"]);
      }
    }
    _0x587de3["lineTo"](_0x2d7ee0, _0x4421f1);
    if (this["specType"] == 0x0 || this["specType"] == 0x1) {
      _0x114cd6 = _0x4421f1 - _0x470ed4;
      for (_0x27598c = _0x2d7ee0; _0x27598c > _0x1d0069; _0x27598c -= _0x1ed479) {
        _0x587de3["lineTo"](_0x27598c, _0x114cd6 + _0xbea630[_0x187787]), (_0x187787 = (_0x187787 + 0x1) % _0xbea630["length"]);
      }
    }
    _0x587de3["closePath"](), _0x587de3["fill"]();
  }),
  (_0x1f52fe["prototype"]["drawBody"] = function (_0x207000, _0x51e265, _0x355998) {
    var _0x1e2359 = _0x587de3["globalAlpha"];
    {
      _0x587de3["fillStyle"] = _0x207000;
      var _0x51e7ca = 0x0;
      _0x51e265 > 0x1 && (_0x51e7ca = 0x64);
      this["specType"] < 0x2
        ? _0x587de3["fillRect"](
            -this["rectW"] / 0x2,
            (-this["riverStreamHeight"] / 0x2) * _0x51e265,
            this["rectW"],
            this["riverStreamHeight"] * _0x51e265
          )
        : _0x587de3["fillRect"](
            (-this["riverStreamHeight"] / 0x2) * _0x51e265,
            -this["rectH"] / 0x2,
            this["riverStreamHeight"] * _0x51e265,
            this["rectH"]
          );
      if (this["specType"] < 0x2) {
        var _0x3e7ea5 = 0xf;
        {
          _0x587de3["fillStyle"] = _0x207000;
          var _0x338c44 = -this["rectW"] / 0x2,
            _0x46e514 = this["rectW"] / 0x2,
            _0x7568f6 = (-this["riverStreamHeight"] / 0x2 + 0x3) * _0x51e265,
            _0x48fda8 = (-this["riverStreamHeight"] / 0x2 - _0x3e7ea5) * _0x51e265;
          _0x587de3["beginPath"](), _0x587de3["moveTo"](_0x338c44, _0x7568f6);
          var _0x329e19 = 0x0,
            _0x576742 = [-0xf, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
            _0xdc69c4 = 0x3c,
            _0x27533e = 0x0,
            _0x4a9255 = _0x2c6299 - this["x"],
            _0x47b4dd = 0x0 - this["x"],
            _0x3d16d0 = _0x27ef2a - this["y"],
            _0x2470f1 = 0x0 - this["y"],
            _0x35cb72,
            _0x3174a5 = _0x338c44 - _0x329e19;
          _0x587de3["lineTo"](_0x338c44, _0x48fda8), (_0x35cb72 = _0x48fda8 + _0x329e19);
          for (_0x3174a5 = _0x338c44; _0x3174a5 < _0x46e514; _0x3174a5 += _0xdc69c4) {
            _0x587de3["lineTo"](_0x3174a5, Math["min"](_0x3d16d0, Math["max"](_0x2470f1, _0x35cb72 + _0x576742[_0x27533e]))),
              (_0x27533e = (_0x27533e + 0x1) % _0x576742["length"]);
          }
          _0x587de3["lineTo"](_0x46e514, _0x48fda8), _0x587de3["lineTo"](_0x46e514, _0x7568f6), _0x587de3["closePath"](), _0x587de3["fill"]();
        }
        {
          _0x587de3["fillStyle"] = _0x207000;
          var _0x338c44 = -this["rectW"] / 0x2,
            _0x46e514 = this["rectW"] / 0x2,
            _0x7568f6 = (this["riverStreamHeight"] / 0x2 - 0x3) * _0x51e265,
            _0x48fda8 = (this["riverStreamHeight"] / 0x2 + _0x3e7ea5) * _0x51e265;
          _0x587de3["beginPath"](), _0x587de3["moveTo"](_0x338c44, _0x7568f6);
          var _0x329e19 = 0x0,
            _0x576742 = [-0xf, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
            _0xdc69c4 = 0x3c,
            _0x27533e = 0x0,
            _0x4a9255 = _0x2c6299 - this["x"],
            _0x47b4dd = 0x0 - this["x"],
            _0x3d16d0 = _0x27ef2a - this["y"],
            _0x2470f1 = 0x0 - this["y"],
            _0x35cb72,
            _0x3174a5 = _0x338c44 - _0x329e19;
          _0x587de3["lineTo"](_0x338c44, _0x48fda8), (_0x35cb72 = _0x48fda8 + _0x329e19);
          for (_0x3174a5 = _0x338c44; _0x3174a5 < _0x46e514; _0x3174a5 += _0xdc69c4) {
            _0x587de3["lineTo"](_0x3174a5, Math["min"](_0x3d16d0, Math["max"](_0x2470f1, _0x35cb72 + _0x576742[_0x27533e]))),
              (_0x27533e = (_0x27533e + 0x1) % _0x576742["length"]);
          }
          _0x587de3["lineTo"](_0x46e514, _0x48fda8), _0x587de3["lineTo"](_0x46e514, _0x7568f6), _0x587de3["closePath"](), _0x587de3["fill"]();
        }
      }
    }
    if (_0x355998 && _0x51e265 > 0.3) {
      var _0x154d8d = this["getSkinImageObj"]("img/riverCurrent" + this["specType"] + ".png");
      if (_0x154d8d) {
        var _0x34e1cf = -this["rectW"] / 0x2,
          _0x3548ff = 0x64;
        _0x587de3["save"](), (_0x587de3["fillStyle"] = "yellow"), (_0x587de3["globalAlpha"] = 0x1);
        var _0x3d8c7f = 0x3c;
        for (i = 0x0; i < 0x50; i++) {
          var _0x3876e5 = this["speedX"] * (_0x3548ff / _0x3d8c7f) * 0x3e8,
            _0x3ab126 = ((_0x168a54 - this["spawnTime"]) % _0x3876e5) / _0x3876e5,
            _0x535ecb = _0x3548ff,
            _0x60a0be = _0x34e1cf + _0x535ecb * _0x3ab126;
          _0x587de3["drawImage"](
            _0x154d8d,
            _0x60a0be,
            0xf + (-this["rectH"] * _0x51e265) / 0x2,
            _0x3548ff * _0x51e265,
            this["riverStreamHeight"] * _0x51e265 - 0x8
          ),
            (_0x34e1cf += _0x3548ff);
        }
        _0x587de3["restore"]();
      }
    }
  }),
  (_0x1f52fe["prototype"]["speedX"] = 0x1),
  (_0x1f52fe["prototype"]["speedY"] = 0x1),
  (_0x1f52fe["prototype"]["onLerpUpdate"] = function (_0x4b780d) {
    this["riverSize"] = _0x4b780d * (this["n_riverSize"] - this["o_riverSize"]) + this["o_riverSize"];
  }),
  (_0x1f52fe["prototype"]["readUpdatedProperty"] = function (_0x36d532, _0xb91c91) {
    _0x36d532 == _0x7975a7 && ((this["n_riverSize"] = _0xb91c91["readUInt16"]() / 0x3e8), (this["o_riverSize"] = this["riverSize"]));
  }),
  (_0x1f52fe["prototype"]["worldUpd_readMsgNewlyVisible"] = function (_0x4049d0, _0x476851, _0x282d54) {
    this["setObjTypes"](_0x476851, _0x282d54), (this["id"] = _0x4049d0["readUInt32"]());
    var _0x369452 = _0x4049d0["readUInt16"]() / 0x4,
      _0x402205 = _0x4049d0["readUInt16"]() / 0x4;
    (this["rectW"] = _0x4049d0["readUInt16"]()),
      (this["rectH"] = _0x4049d0["readUInt16"]()),
      (this["curBiome"] = _0x4049d0["readUInt8"]()),
      (this["clientBatchDrawID"] = _0x4049d0["readUInt16"]()),
      (this["specType"] = _0x4049d0["readUInt8"]()),
      (this["riverStreamHeight"] = _0x4049d0["readUInt16"]()),
      (this["isRectangle"] = !![]),
      (this["ox"] = this["x"] = this["nx"] = _0x369452),
      (this["oy"] = this["y"] = this["ny"] = _0x402205),
      (this["clientBatchDraw"] = !![]),
      (this["isFloatingRiver"] = _0x4049d0["readUInt8"]() == 0x1);
    if (this["specType"] == 0x1) this["speedX"] = -0x1;
    if (this["specType"] == 0x3) this["speedY"] = -0x1;
    this["riverSize"] = this["o_riverSize"] = this["n_riverSize"] = 0x1;
    var _0x32ad9c = 0x0,
      _0x3fda00 = 0x0,
      _0x229907 = 0x0,
      _0x56d057 = 0x0;
    if (this["specType"] == 0x2) _0x56d057 = -0x78;
    else this["specType"] == 0x3 ? (_0x229907 = 0x78) : ((_0x32ad9c = 0x78), (_0x3fda00 = -0x78));
    (this["margin"] = {
      x_min: _0x32ad9c,
      x_max: _0x3fda00,
      y_min: _0x229907,
      y_max: _0x56d057,
    }),
      this["generateTerrainFeatures"]();
  }),
  (_0x1f52fe["prototype"]["biomePattern"] = null),
  (_0x1f52fe["prototype"]["generateTerrainFeatures"] = function () {
    var _0x41f0af = [],
      _0x49db0c = 0x12c,
      _0x218311 = 1.5;
    if (this["specType"] == 0x2 || this["specType"] == 0x3) {
      var _0x26244c = 0x0,
        _0x3f6980 = -this["rectH"] / 0x2;
      for (; _0x3f6980 + _0x49db0c < this["rectH"] / 0x2; ) {
        _0x26244c = -_0x49db0c / 0x2;
        var _0x2aebee = Math["max"](0x0, Math["round"](_0x103b73(0x0, 0x3)) - 0x1);
        _0x41f0af["push"]({
          x: _0x26244c,
          y: _0x3f6980,
          w: _0x49db0c,
          h: _0x49db0c,
          img: _0x2aebee,
          r: _0x103b73(0x0, 0xb4),
        }),
          (_0x3f6980 += _0x49db0c * _0x218311);
      }
    } else {
      var _0x3f6980 = 0x0,
        _0x26244c = _0x49db0c / 0x4 - this["rectW"] / 0x2;
      for (; _0x26244c + _0x49db0c < this["rectW"] / 0x2; ) {
        _0x3f6980 = -_0x49db0c / 0x2;
        var _0x2aebee = Math["max"](0x0, Math["round"](_0x103b73(0x0, 0x3)) - 0x1);
        _0x41f0af["push"]({
          x: _0x26244c,
          y: _0x3f6980,
          w: _0x49db0c,
          h: _0x49db0c,
          img: _0x2aebee,
          r: _0x103b73(0x0, 0xb4),
        }),
          (_0x26244c += _0x49db0c * _0x218311);
      }
    }
    this["biomePattern"] = _0x41f0af;
  }),
  (_0x1f52fe["prototype"]["drawTerrainFeatures"] = function () {
    if (this["biomePattern"] && this["biomePattern"]["length"] > 0x0)
      for (i = 0x0; i < this["biomePattern"]["length"]; i++) {
        var _0x5ea18c = this["biomePattern"][i];
        _0x587de3["save"](), _0x587de3["translate"](_0x5ea18c["x"], _0x5ea18c["y"]);
        var _0xe2b3a5 = 0x0,
          _0x3269de = 0x0,
          _0xbab4f3 = _0x5ea18c["w"],
          _0x1940a0 = _0x5ea18c["h"],
          _0x2d640a = "0_" + _0x5ea18c["img"],
          _0x5b383c = "gameobj/" + this["oType"] + "/" + _0x2d640a + ".png",
          _0x1da234 = this["getSkinImageObj"](_0x5b383c);
        _0x1da234 && _0x587de3["drawImage"](_0x1da234, _0xe2b3a5, _0x3269de, _0xbab4f3, _0x1940a0), _0x587de3["restore"]();
      }
  }),
  (_0x1f52fe["prototype"]["drawBox"] = function (_0x35d376, _0x12d779, _0x5d5b3d, _0x9f4513) {
    _0x587de3["beginPath"](),
      (_0x587de3["fillStyle"] = "red"),
      _0x587de3["moveTo"](_0x35d376, _0x12d779),
      _0x587de3["lineTo"](_0x35d376, _0x9f4513),
      _0x587de3["lineTo"](_0x5d5b3d, _0x9f4513),
      _0x587de3["lineTo"](_0x5d5b3d, _0x12d779),
      _0x587de3["closePath"](),
      _0x587de3["fill"]();
  });

function _0x1f52fe() {
  _0x1f52fe["superClass"]["call"](this, _0x9c4ccf), (this["clientBatchDraw"] = !![]);
}
(window["River"] = _0x1f52fe), _0x17bf26["setCustomClassForGameObjType"](_0x1f52fe, _0x9c4ccf);
var _0x48c344 = _0x307a43;
(_0x5ce13d["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x5ce13d["prototype"]["constructor"] = _0x5ce13d),
  (_0x5ce13d["superClass"] = _0x48c344),
  (_0x5ce13d["prototype"]["LakeSize"] = 0x1),
  (_0x5ce13d["prototype"]["isEmptyLake"] = ![]),
  (_0x5ce13d["prototype"]["isDeathLake"] = ![]),
  (_0x5ce13d["prototype"]["updateZ"] = function () {
    if (this["isEmptyLake"]) this["z"] = -0x9d;
    else this["z"] = -0xa0;
  }),
  (_0x5ce13d["prototype"]["customDraw"] = function (_0x5b508f) {
    if (this["isDeathLake"])
      (_0x587de3["fillStyle"] = _0x3febc7),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](0x0, 0x0, this["rad"], 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        this["poisonBody"](_0x2634c2, this["LakeSize"], this["poison"]);
    else this["drawBody"](_0x2634c2, 0x1);
  }),
  (_0x5ce13d["prototype"]["poisonBody"] = function (_0x312680, _0xb089e5, _0x51e984) {
    {
      var _0x5db211 = "#547d24",
        _0x52363e = this["rad"] * _0xb089e5;
      _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0x1);
      if (!(_0x57ae6d == 0x2)) _0x587de3["rotate"](this["rPer"] * 0x2 * Math["PI"]);
      var _0xbe5d8e = 5.5,
        _0x2feb6f = _0x38b128("lake", this["spawnTime"]);
      _0x2feb6f !== undefined && _0x2feb6f != null && (this["theFrame"] = _0x2feb6f);
      _0xbe5d8e = this["theFrame"];
      var _0x1f1b1c = 0x4;
      (_0x587de3["fillStyle"] = _0x3febc7),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](0x0, 0x0, _0x52363e, 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        (_0x587de3["fillStyle"] = _0x312680);
      var _0x5e66b0 = _0x52363e * 0.45,
        _0x641b2c = _0x52363e * 0.45 + 0xf * this["rPer"],
        _0x4b2264 = _0x52363e * 0.5,
        _0x591dff = _0x52363e * 0.5 + 0xf * this["rPer"],
        _0x3cd994 = -_0x52363e * 0.55 * 0.707,
        _0x3b71aa = +_0x52363e * 0.55 * 0.707 + 0xf * this["rPer"],
        _0x3c5d19 = -_0x52363e * 0.75,
        _0x1dcb10 = -_0x52363e * 0.35 + 0xf * this["rPer"],
        _0x13e4a8 = _0x52363e + 0xa * this["rPer"],
        _0x154d12 = 0x32 * this["rPer"],
        _0x45ef0c = _0x52363e - 0x14 * this["rPer"],
        _0x27e7cc = 0x32 * this["rPer"];
      _0x587de3["beginPath"](),
        _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, _0x52363e - _0x1f1b1c + _0xbe5d8e), 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        _0x587de3["save"](),
        (_0x587de3["fillStyle"] = _0x5db211),
        (_0x587de3["globalAlpha"] = _0x51e984),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, _0x52363e - _0x1f1b1c + _0xbe5d8e), 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        _0x587de3["restore"](),
        _0x587de3["restore"]();
    }
  }),
  (_0x5ce13d["prototype"]["drawBody"] = function (_0x2b6e66, _0x3289a6, _0x2132cf) {
    {
      var _0x3fe854 = this["rad"] * _0x3289a6;
      _0x587de3["save"](), (_0x587de3["globalAlpha"] = _0x2132cf);
      if (!_0x34fedb) {
        if (!(_0x57ae6d == 0x2)) _0x587de3["rotate"](this["rPer"] * 0x2 * Math["PI"]);
      }
      var _0xbdbd24 = 0x0;
      if (!_0x34fedb && !this["isEmptyLake"]) {
        var _0x2a1e8e = (_0x168a54 - this["spawnTime"]) / 0x3e8,
          _0x544ce6 = 0x4,
          _0x3c8928 = 5.5;
        _0xbdbd24 = _0x3c8928 * Math["sin"](((0x2 * Math["PI"]) / _0x544ce6) * _0x2a1e8e);
      }
      var _0x4d2fa7 = 0x4;
      !this["isEmptyLake"] &&
        ((_0x587de3["fillStyle"] = _0x3febc7),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](0x0, 0x0, _0x3fe854, 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"]());
      if (this["curBiome"] == _0x5dcee3) _0x587de3["fillStyle"] = "#8da0d6";
      else _0x587de3["fillStyle"] = _0x2634c2;
      _0x587de3["beginPath"](),
        _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, _0x3fe854 - _0x4d2fa7 + _0xbdbd24), 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        !(_0x34fedb && _0x57ae6d == 0x2) &&
          (_0x587de3["beginPath"](),
          _0x587de3["arc"](
            _0x3fe854 * 0.45,
            -_0x3fe854 * 0.45 + 0xf * this["rPer"],
            Math["max"](0x0, _0x3fe854 * 0.5 + _0xbdbd24),
            0x0,
            0x2 * Math["PI"]
          ),
          _0x587de3["fill"](),
          _0x587de3["beginPath"](),
          _0x587de3["arc"](
            _0x3fe854 * 0.5,
            _0x3fe854 * 0.5 + 0xf * this["rPer"],
            Math["max"](0x0, _0x3fe854 * 0.4 + _0xbdbd24),
            0x0,
            0x2 * Math["PI"]
          ),
          _0x587de3["fill"](),
          _0x587de3["beginPath"](),
          _0x587de3["arc"](
            -_0x3fe854 * 0.55 * 0.707,
            +_0x3fe854 * 0.55 * 0.707 + 0xf * this["rPer"],
            Math["max"](0x0, _0x3fe854 * 0.5 + _0xbdbd24),
            0x0,
            0x2 * Math["PI"]
          ),
          _0x587de3["fill"](),
          _0x587de3["beginPath"](),
          _0x587de3["arc"](
            -_0x3fe854 * 0.75,
            -_0x3fe854 * 0.35 + 0xf * this["rPer"],
            Math["max"](0x0, _0x3fe854 * 0.3 + _0xbdbd24),
            0x0,
            0x2 * Math["PI"]
          ),
          _0x587de3["fill"](),
          _0x587de3["beginPath"](),
          _0x587de3["arc"](_0x3fe854 + 0xa * this["rPer"], 0x32 * this["rPer"], this["specType"] == 0x0 ? 0x8 : 0x4, 0x0, 0x2 * Math["PI"]),
          _0x587de3["fill"](),
          _0x587de3["beginPath"](),
          _0x587de3["arc"](_0x3fe854 - 0x14 * this["rPer"], 0x32 * this["rPer"], 0xa, 0x0, 0x2 * Math["PI"]),
          _0x587de3["fill"]()),
        _0x587de3["restore"]();
    }
  }),
  (_0x5ce13d["prototype"]["onLerpUpdate"] = function (_0x4cde82) {
    this["LakeSize"] = _0x4cde82 * (this["n_LakeSize"] - this["o_LakeSize"]) + this["o_LakeSize"];
  }),
  (_0x5ce13d["prototype"]["readUpdatedProperty"] = function (_0x323862, _0xeb379) {
    if (_0x323862 == _0x1284c1) (this["n_LakeSize"] = _0xeb379["readUInt16"]() / 0x3e8), (this["o_LakeSize"] = this["LakeSize"]);
    else {
      if (_0x323862 == _0x4a57f6) this["poison"] = _0xeb379["readUInt16"]() / 0x3e8;
      else _0x323862 == _0x4cbedb && (this["isEmptyLake"] = _0xeb379["readUInt8"]() == 0x1);
    }
  }),
  (_0x5ce13d["prototype"]["readCustomData_onNewlyVisible"] = function (_0x499347) {
    (this["isEmptyLake"] = _0x499347["readUInt8"]() == 0x1),
      (this["isDeathLake"] = _0x499347["readUInt8"]() == 0x1),
      this["isDeathLake"] && ((this["LakeSize"] = this["o_LakeSize"] = this["n_LakeSize"] = 0x1), (this["LakeStream"] = _0x499347["readUInt16"]()));
  });

function _0x5ce13d() {
  _0x5ce13d["superClass"]["call"](this, _0xf2c340);
}
(window["Lake"] = _0x5ce13d), _0x17bf26["setCustomClassForGameObjType"](_0x5ce13d, _0xf2c340);
var _0x48c344 = _0x307a43;
(_0x1c9e9e["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1c9e9e["prototype"]["constructor"] = _0x1c9e9e),
  (_0x1c9e9e["superClass"] = _0x48c344),
  (_0x1c9e9e["prototype"]["updateZ"] = function () {
    this["z"] = 0x3f2;
  }),
  (_0x1c9e9e["prototype"]["customDraw"] = function (_0x3732ec) {
    var _0x19c4f = 0x0,
      _0x5e5dc0 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
      _0x239028 = _0x120bbb(_0x5e5dc0, 0x1, 0.3, 0x2),
      _0xe10f8e = this["getSkinImageObj"]("img/viralpandemic/virus.png");
    if (_0xe10f8e) {
      var _0x3dc2ac = this["rad"] * 1.2 + _0x239028;
      if (this["stickyVirus"]) _0x587de3["rotate"](this["angle"]);
      else {
        if (this["angleR"] == undefined) this["angleR"] = _0x32639a(0.01, 0.09);
        (this["angleR"] += 0.01), _0x587de3["rotate"](this["angleR"]);
      }
      _0x587de3["drawImage"](_0xe10f8e, -_0x3dc2ac, -_0x3dc2ac, 0x2 * _0x3dc2ac, 0x2 * _0x3dc2ac);
    } else this["drawOutlinedCircle"]("", "white");
  }),
  (_0x1c9e9e["prototype"]["stickyVirus"] = ![]),
  (_0x1c9e9e["prototype"]["readUpdatedProperty"] = function (_0x18fbfe, _0x4382c8) {
    _0x18fbfe == _0x54d6b1 && (this["stickyVirus"] = _0x4382c8["readUInt8"]() == 0x1);
  });

function _0x1c9e9e() {
  _0x1c9e9e["superClass"]["call"](this, _0x1c816e), (_0x1c9e9e["prototype"]["easeAngleChanges"] = !![]);
}
(window["Virus"] = _0x1c9e9e), _0x17bf26["setCustomClassForGameObjType"](_0x1c9e9e, _0x1c816e);
var _0x48c344 = _0x307a43;
(_0xe5487e["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0xe5487e["prototype"]["constructor"] = _0xe5487e),
  (_0xe5487e["superClass"] = _0x48c344),
  (_0xe5487e["prototype"]["foodType"] = 0x0),
  (_0xe5487e["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"];
  }),
  (_0xe5487e["prototype"]["customDraw"] = function (_0x1bff9a) {
    _0x587de3["save"]();
    var _0x5890aa = this["getImmunityFoodName"](),
      _0x50d4a5 = this["getSkinImageObj"]("img/viralpandemic/" + _0x5890aa + "_e.png");
    if (_0x50d4a5) {
      var _0x1c5630 = this["rad"];
      _0x587de3["save"](),
        _0x587de3["rotate"](this["rPer"] * 0.5 * Math["PI"] * 0x2),
        _0x587de3["drawImage"](_0x50d4a5, -_0x1c5630, -_0x1c5630, 0x2 * _0x1c5630, 0x2 * _0x1c5630),
        _0x587de3["restore"]();
    }
    _0x587de3["restore"]();
  }),
  (_0xe5487e["prototype"]["getImmunityFoodName"] = function () {
    var _0x17d6e3 = "cabbage";
    switch (this["foodType"]) {
      case 0x1:
        _0x17d6e3 = "cabbage";
        break;
      case 0x2:
        _0x17d6e3 = "dragonfruit";
        break;
      case 0x3:
        _0x17d6e3 = "onion";
        break;
      case 0x4:
        _0x17d6e3 = "papaya";
        break;
      case 0x5:
        _0x17d6e3 = "papayaslice";
        break;
      case 0x6:
        _0x17d6e3 = "peach";
        break;
      case 0x7:
        _0x17d6e3 = "peapod";
        break;
      case 0x8:
        _0x17d6e3 = "peapod1";
        break;
    }
    return _0x17d6e3;
  }),
  (_0xe5487e["prototype"]["readCustomData_onNewlyVisible"] = function (_0x51dd16) {
    this["foodType"] = _0x51dd16["readUInt8"]();
  });

function _0xe5487e() {
  _0xe5487e["superClass"]["call"](this, _0xb9c2df), (this["doesDrawEffectScale"] = !![]);
}
(window["ImmunityFood"] = _0xe5487e), _0x17bf26["setCustomClassForGameObjType"](_0xe5487e, _0xb9c2df);
var _0x48c344 = _0x307a43;
(_0x362f3b["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x362f3b["prototype"]["constructor"] = _0x362f3b),
  (_0x362f3b["superClass"] = _0x48c344);
var _0xcc7b80 = 0x0,
  _0x5beffe = 0x0;
(_0x362f3b["prototype"]["updateZ"] = function () {
  this["z"] = 0x18706;
}),
  (_0x362f3b["prototype"]["customDraw"] = function (_0x24d847) {
    _0x587de3["save"]();
    if (this["isEnabled"]) _0x587de3["globalAlpha"] = 0.4;
    else _0x587de3["globalAlpha"] = 0.2;
    (_0x587de3["fillStyle"] = "black"),
      _0x587de3["fillRect"](-this["rectW"] / 0x2, -this["rectH"] / 0x2, this["rectW"], this["rectH"]),
      _0x587de3["strokeRect"](-this["rectW"] / 0x2, -this["rectH"] / 0x2, this["rectW"], this["rectH"]);
    if (this["isEnabled"]) _0x587de3["globalAlpha"] = this["opacity"] * 0.5;
    else _0x587de3["globalAlpha"] = this["opacity"] * 0.2;
    (_0x587de3["fillStyle"] = this["color"]),
      _0x587de3["fillRect"](-this["rectW"] / 0x2, -this["rectH"] / 0x2, this["rectW"], this["rectH"]),
      (_0x587de3["lineWidth"] = "3");
    this["btnStroke"] > 0x0 &&
      ((_0x587de3["globalAlpha"] = this["opacity"] * 0.9),
      (_0x587de3["strokeStyle"] = this["color"]),
      _0x587de3["strokeRect"](-this["rectW"] / 0x2, -this["rectH"] / 0x2, this["rectW"], this["rectH"]));
    _0x587de3["restore"]();
    if (this["isEnabled"]) {
      var _0x1f12e0 = this["x"] - this["rectW"] / 0x2,
        _0x4ee21f = this["x"] + this["rectW"] / 0x2,
        _0x202e09 = this["y"] - this["rectH"] / 0x2,
        _0x2b1622 = this["y"] + this["rectH"] / 0x2,
        _0x5d58bb = ![];
      if ((_0x2aeecf > _0x1f12e0 && _0x2aeecf < _0x4ee21f && _0x108b44 > _0x202e09 && _0x108b44 < _0x2b1622) || _0x2f2aea == this["hotkey"])
        (_0x5d58bb = !![]),
          (_0x5beffe = _0xcc7b80 = this["id"]),
          _0x587de3["save"](),
          (_0x587de3["globalAlpha"] = this["opacity"]),
          (_0x587de3["fillStyle"] = this["color"]),
          _0x587de3["fillRect"](-this["rectW"] / 0x2, -this["rectH"] / 0x2, this["rectW"], this["rectH"]),
          this["hoverStroke"] > 0x0 &&
            ((_0x587de3["globalAlpha"] = 0x1),
            (_0x587de3["lineWidth"] = this["hoverStroke"]),
            (_0x587de3["strokeStyle"] = _0xab8999),
            _0x587de3["strokeRect"](-this["rectW"] / 0x2, -this["rectH"] / 0x2, this["rectW"], this["rectH"])),
          _0x587de3["restore"]();
      else {
        if (_0x5beffe == this["id"]) _0xcc7b80 = 0x0;
      }
    }
    null != this["txtLabel"] &&
      (_0x587de3["save"](),
      (_0x587de3["globalAlpha"] = _0x5d58bb ? 0x1 : 0.6),
      _0x5d58bb
        ? (this["txtLabel"]["setFontSize"](0xc), this["txtLabel"]["setColor"]("white"), this["txtLabel"]["setStroke"](0x2))
        : (this["txtLabel"]["setColor"](this["isEnabled"] ? "white" : "black"), this["txtLabel"]["setStroke"](0x0)),
      this["txtLabel"]["draw"](),
      _0x587de3["restore"]());
    if (this["isEnabled"] && this["hotkey"] != "") {
      _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0.2), (_0x587de3["fillStyle"] = "white");
      var _0x4fdbc5 = -this["rectW"] / 0x2 + 0x2,
        _0x789140 = this["rectH"] / 0x2 - 0xc;
      _0x587de3["fillRect"](_0x4fdbc5, _0x789140, 0xa, 0xa),
        (this["txtHotkey"]["x"] = _0x4fdbc5 + 0x5),
        (this["txtHotkey"]["y"] = _0x789140 + 0x5),
        (_0x587de3["globalAlpha"] = 0.7),
        this["txtHotkey"]["draw"](),
        _0x587de3["restore"]();
    }
  }),
  (_0x362f3b["prototype"]["optionID"] = 0x0),
  (_0x362f3b["prototype"]["optionType"] = 0x0),
  (_0x362f3b["prototype"]["label"] = 0x0),
  (_0x362f3b["prototype"]["highlight"] = 0x0),
  (_0x362f3b["prototype"]["txtLabel"] = null),
  (_0x362f3b["prototype"]["txtHotkey"] = null),
  (_0x362f3b["prototype"]["isEnabled"] = !![]),
  (_0x362f3b["prototype"]["hotkey"] = ""),
  (_0x362f3b["prototype"]["readCustomData_onNewlyVisible"] = function (_0xe2ff46) {
    (_0x2f2aea = null), (_0x1ad4d0 = +new Date() + 0x3e8), (this["optionID"] = _0xe2ff46["readUInt32"]());
    var _0x2931f3 = _0xe2ff46["readString"]();
    (_0x2931f3 = _0x2931f3["replace"]("\x0a", "newline")), console["log"](_0x2931f3);
    var _0x5ac216 = JSON["parse"](_0x2931f3);
    (this["label"] = _0x5ac216["label"]["replace"]("newline", "\x0a")),
      (this["optionType"] = _0x5ac216["value"]),
      (this["color"] = _0x5ac216["color"]),
      (this["opacity"] = _0x5ac216["opacity"] / 0x64),
      (this["hoverStroke"] = _0x5ac216["hoverStroke"]),
      (this["btnStroke"] = _0x5ac216["btnStroke"]),
      (this["isEnabled"] = Number(_0x5ac216["enabled"]) == 0x1),
      (this["hotkey"] = _0x5ac216["hotkey"]),
      !this["isEnabled"] && (this["opacity"] *= 0.5),
      null == this["txtLabel"] &&
        ((this["txtLabel"] = new _0x413af8(0xc, "#FFFFFF")),
        (this["txtLabel"]["x"] = 0x0),
        (this["txtLabel"]["y"] = 0x0),
        (this["txtLabel"]["strokeW"] = 0x0),
        (this["txtLabel"]["multiLine"] = !![]),
        (this["txtLabel"]["renderScale"] = 0x2),
        this["txtLabel"]["setText"](this["label"])),
      this["isEnabled"] &&
        this["hotkey"] != "" &&
        null == this["txtHotkey"] &&
        ((this["txtHotkey"] = new _0x413af8(0x8, "#FFFFFF")),
        (this["txtHotkey"]["x"] = 0x0),
        (this["txtHotkey"]["y"] = 0x0),
        (this["txtHotkey"]["strokeW"] = 0x0),
        (this["txtHotkey"]["multiLine"] = ![]),
        (this["txtHotkey"]["renderScale"] = 0x2),
        this["txtHotkey"]["setText"](this["hotkey"]),
        this["txtHotkey"]["setColor"]("white"),
        this["txtHotkey"]["setStroke"](0x0));
  });
var _0x2e8def = 0x81;

function _0x362f3b() {
  _0x362f3b["superClass"]["call"](this, _0x2e8def);
}
(window["GameOptionButton"] = _0x362f3b), _0x17bf26["setCustomClassForGameObjType"](_0x362f3b, _0x2e8def);
var _0x48c344 = _0x307a43;
(_0x4596b2["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x4596b2["prototype"]["constructor"] = _0x4596b2),
  (_0x4596b2["superClass"] = _0x48c344),
  (_0x4596b2["prototype"]["updateZ"] = function () {
    this["z"] = 0x18706;
  }),
  (_0x4596b2["prototype"]["customDraw"] = function (_0x4e8c08) {
    _0x587de3["save"]();
    var _0x16df80 = this["rectW"],
      _0x4806fe = this["rectH"];
    (_0x587de3["globalAlpha"] = 0.3),
      (_0x587de3["fillStyle"] = "black"),
      _0x587de3["fillRect"](-_0x16df80 / 0x2, -_0x4806fe / 0x2, _0x16df80, _0x4806fe),
      (_0x587de3["globalAlpha"] = 0.15),
      (_0x587de3["fillStyle"] = "white"),
      (_0x16df80 -= 0x3),
      (_0x4806fe -= 0x3),
      _0x587de3["fillRect"](-_0x16df80 / 0x2, -_0x4806fe / 0x2, _0x16df80, _0x4806fe),
      _0x587de3["stroke"](),
      _0x587de3["restore"]();
    null != this["txtTitle"] &&
      (_0x587de3["save"](),
      (_0x587de3["globalAlpha"] = 0x1),
      this["txtTitle"]["setFontSize"](0x12),
      this["txtTitle"]["setColor"]("white"),
      this["txtTitle"]["setStroke"](0x2),
      this["txtTitle"]["draw"](),
      _0x587de3["restore"]());
    null != this["txtMessage"] && (_0x587de3["save"](), (_0x587de3["globalAlpha"] = 0x1), this["txtMessage"]["draw"](), _0x587de3["restore"]());
    if (null != this["timerTxt"]) {
      _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0x1);
      var _0x16df80 = 0x19,
        _0x4806fe = 0x19;
      (_0x587de3["globalAlpha"] = 0.5), (_0x587de3["fillStyle"] = "red");
      var _0x265c92 = this["rectW"] / 0x2 - _0x16df80 - 1.5,
        _0x3f0139 = -this["rectH"] / 0x2 + 1.5;
      _0x587de3["fillRect"](_0x265c92, _0x3f0139, _0x16df80, _0x4806fe),
        (_0x587de3["globalAlpha"] = 0x1),
        this["timerTxt"]["setFontSize"](0x10),
        this["timerTxt"]["setColor"]("white"),
        this["timerTxt"]["setStroke"](0x2);
      var _0x50d6a4 = this["timeoutTime"] - Math["round"]((+new Date() - this["spawnTime"]) / 0x3e8);
      this["timerTxt"]["setText"](_0x50d6a4),
        (this["timerTxt"]["x"] = _0x265c92 + 12.5),
        (this["timerTxt"]["y"] = _0x3f0139 + 12.5),
        this["timerTxt"]["draw"](),
        _0x587de3["restore"]();
    }
    _0x587de3["save"](), _0x44f678(this), _0x587de3["restore"]();
  }),
  (_0x4596b2["prototype"]["option1"] = null),
  (_0x4596b2["prototype"]["option2"] = null),
  (_0x4596b2["prototype"]["option3"] = null),
  (_0x4596b2["prototype"]["option4"] = null);

function _0x44f678(_0xc58787) {
  var _0x35c802 = _0xc58787["rectW"] * 0.5,
    _0x5b37cf = _0xc58787["rectH"] * 0.35,
    _0x444274 = -_0x35c802 / 0x2,
    _0x52ed47 = -0x14;
  (_0x587de3["globalAlpha"] = 0.2),
    (_0x587de3["fillStyle"] = "black"),
    _0x587de3["fillRect"](_0x444274, _0x52ed47, _0x35c802, _0x5b37cf),
    (_0x587de3["globalAlpha"] = 0.7),
    (_0x587de3["fillStyle"] = "limegreen"),
    _0x587de3["fillRect"](_0x444274, _0x52ed47, _0x35c802, 0x14),
    _0xda6720("options", _0xc58787, _0x444274, _0x52ed47 + 2.5, _0x35c802, _0x5b37cf, "ARENA OPTIONS", "white", 0x2),
    (_0x35c802 = 0x64),
    (_0x5b37cf = 0xf),
    (_0x444274 = -_0x35c802 / 0x2),
    (_0x52ed47 += 0x7),
    (_0x587de3["globalAlpha"] = 0x1),
    (_0x587de3["fillStyle"] = "green"),
    (_0x52ed47 += _0x5b37cf + 0x5),
    (_0x587de3["globalAlpha"] = 0.7),
    _0xda6720(
      "option2",
      _0xc58787,
      _0x444274,
      _0x52ed47,
      _0x35c802,
      _0x5b37cf,
      (_0xc58787["data"]["watr"] == Number(0x1) ? "INFINITE" : "LIMITED") + " WATER",
      "white",
      0x0
    ),
    (_0x52ed47 += _0x5b37cf),
    _0xda6720(
      "option3",
      _0xc58787,
      _0x444274,
      _0x52ed47,
      _0x35c802,
      _0x5b37cf,
      (_0xc58787["data"]["hp"] == Number(0x1) ? "INFINITE" : "LIMITED") + " HEALTH",
      "white",
      0x0
    ),
    (_0x52ed47 += _0x5b37cf),
    _0xda6720(
      "option4",
      _0xc58787,
      _0x444274,
      _0x52ed47,
      _0x35c802,
      _0x5b37cf,
      "TURN " + (_0xc58787["data"]["speed"] == Number(0x1) ? "NORMAL" : "FAST"),
      "white",
      0x0
    ),
    (_0x52ed47 += _0x5b37cf),
    _0xda6720(
      "option5",
      _0xc58787,
      _0x444274,
      _0x52ed47,
      _0x35c802,
      _0x5b37cf,
      _0xc58787["data"]["climax"] == Number(0x1) ? "LAST MAN STANDING" : _0xc58787["data"]["bites"] + " BITES WINS",
      "white",
      0x0
    ),
    (_0x52ed47 += _0x5b37cf),
    _0xda6720(
      "option6",
      _0xc58787,
      _0x444274,
      _0x52ed47,
      _0x35c802,
      _0x5b37cf,
      _0xc58787["data"]["wall"] == Number(0x1) ? "WALL DAMAGE" : "NO WALL DAMAGE",
      "white",
      0x0
    );
}

function _0xda6720(_0x666248, _0xf11ba7, _0xdc1327, _0x44eb22, _0xb3e023, _0x5b8757, _0x344187, _0x28b851, _0x2e97a2) {
  if (_0x2e97a2 == undefined) _0x2e97a2 = 0x0;
  null == _0xf11ba7[_0x666248]
    ? ((_0xf11ba7[_0x666248] = new _0x413af8(0xa, _0x28b851)),
      (_0xf11ba7[_0x666248]["x"] = _0xdc1327),
      (_0xf11ba7[_0x666248]["y"] = _0x44eb22),
      (_0xf11ba7[_0x666248]["strokeW"] = 0x0),
      (_0xf11ba7[_0x666248]["multiLine"] = !![]),
      (_0xf11ba7[_0x666248]["renderScale"] = 0x2),
      _0xf11ba7[_0x666248]["setStroke"](_0x2e97a2),
      _0xf11ba7[_0x666248]["setText"](_0x344187))
    : ((_0xf11ba7[_0x666248]["x"] = _0xdc1327 + _0xb3e023 / 0x2), (_0xf11ba7[_0x666248]["y"] = _0x44eb22 + 0x7), _0xf11ba7[_0x666248]["draw"]());
}
(_0x4596b2["prototype"]["timeoutTime"] = 0x0),
  (_0x4596b2["prototype"]["optionType"] = 0x0),
  (_0x4596b2["prototype"]["label"] = 0x0),
  (_0x4596b2["prototype"]["highlight"] = 0x0),
  (_0x4596b2["prototype"]["txtTitle"] = null),
  (_0x4596b2["prototype"]["txtMessage"] = null),
  (_0x4596b2["prototype"]["timerTxt"] = null),
  (_0x4596b2["prototype"]["screenMsg"] = null),
  (_0x4596b2["prototype"]["screenTitle"] = null),
  (_0x4596b2["prototype"]["invitee_id"] = null),
  (_0x4596b2["prototype"]["spiderX"] = null),
  (_0x4596b2["prototype"]["spiderY"] = null),
  (_0x4596b2["prototype"]["beforeCustomDraw"] = function (_0x56d141) {
    _0x587de3["save"](),
      (_0x587de3["strokeStyle"] = "white"),
      (_0x587de3["globalAlpha"] = 0x1),
      _0x587de3["beginPath"](),
      _0x587de3["moveTo"](this["x"], this["y"]),
      _0x587de3["lineTo"](this["spiderX"], this["spiderY"]),
      _0x587de3["stroke"](),
      _0x587de3["restore"]();
  }),
  (_0x4596b2["prototype"]["worldUpd_readMsgUpdate"] = function (_0x2f9071) {
    var _0x23df0a = _0x2f9071["readUInt16"]() / 0x4,
      _0x157a75 = _0x2f9071["readUInt16"]() / 0x4;
    this["setMovedToPos"](_0x23df0a, _0x157a75);
    var _0x24005a = _0x2f9071["readUInt32"]() / 0x64,
      _0x22be06 = _0x2f9071["readUInt32"]() / 0x64;
    (this["spider_ox"] = this["spiderX"]), (this["spider_oy"] = this["spiderY"]), (this["spider_nx"] = _0x24005a), (this["spider_ny"] = _0x22be06);
  }),
  (_0x4596b2["prototype"]["onLerpUpdate"] = function (_0x55309d) {
    (this["spiderX"] = _0x55309d * (this["spider_nx"] - this["spider_ox"]) + this["spider_ox"]),
      (this["spiderY"] = _0x55309d * (this["spider_ny"] - this["spider_oy"]) + this["spider_oy"]);
  }),
  (_0x4596b2["prototype"]["data"] = null),
  (_0x4596b2["prototype"]["readCustomData_onNewlyVisible"] = function (_0x3a3616) {
    var _0x1c32f1 = _0x3a3616["readString"](),
      _0x3b41f9 = _0x3a3616["readString"](),
      _0x9c9098 = _0x3a3616["readUInt8"](),
      _0x2c9c07 = _0x3a3616["readBitGroup"](),
      _0x3f06aa = _0x2c9c07["getBool"]() ? 0x1 : 0x0,
      _0x433fb3 = _0x2c9c07["getBool"]() ? 0x1 : 0x0,
      _0x1f0fe8 = _0x2c9c07["getBool"]() ? 0x1 : 0x0,
      _0x100936 = _0x2c9c07["getBool"]() ? 0x1 : 0x0,
      _0x1ce06d = _0x2c9c07["getBool"]() ? 0x1 : 0x0,
      _0x5ed888 = 0x0;
    if (!_0x1ce06d) _0x5ed888 = _0x3a3616["readUInt8"]();
    var _0x3ede49 = {
      title: _0x1c32f1,
      invtedBy: _0x3b41f9,
      watr: _0x3f06aa,
      hp: _0x433fb3,
      speed: _0x1f0fe8,
      climax: _0x1ce06d,
      wall: _0x100936,
      time: _0x9c9098,
      bites: _0x5ed888,
    };
    (this["spider_ox"] = this["spiderX"] = this["spider_nx"] = this["x"]), (this["spider_oy"] = this["spiderY"] = this["spider_ny"] = this["y"]);
    var _0x42101e = "\x0a",
      _0x437498 = "-br-";
    (this["data"] = _0x3ede49), (this["timeoutTime"] = Number(_0x3ede49["time"]));
    null == this["txtTitle"] &&
      ((this["txtTitle"] = new _0x413af8(0x12, "#FFFFFF")),
      (this["txtTitle"]["x"] = 0x0),
      (this["txtTitle"]["y"] = (this["rectH"] / 0x2) * -0.85),
      (this["txtTitle"]["strokeW"] = 0x0),
      (this["txtTitle"]["multiLine"] = !![]),
      (this["txtTitle"]["renderScale"] = 0x2),
      this["txtTitle"]["setText"](this["data"]["title"]));
    if (null == this["txtMessage"]) {
      (this["txtMessage"] = new _0x413af8(0x10, "#FFFFFF")),
        (this["txtMessage"]["x"] = 0x0),
        (this["txtMessage"]["y"] = this["txtTitle"]["y"] + 0x28),
        (this["txtMessage"]["strokeW"] = 0x0),
        (this["txtMessage"]["multiLine"] = !![]),
        (this["txtMessage"]["renderScale"] = 0x2);
      if (this["data"]["invtedBy"] == "") this["data"]["invtedBy"] = "mope.io";
      this["txtMessage"]["setText"](this["data"]["invtedBy"] + "\x0ainvites you for 1v1 fight!");
    }
    null == this["timerTxt"] &&
      ((this["timerTxt"] = new _0x413af8(0x10, "#FFFFFF")),
      (this["timerTxt"]["x"] = 0x0),
      (this["timerTxt"]["y"] = 0x0),
      (this["timerTxt"]["strokeW"] = 0x0),
      (this["timerTxt"]["multiLine"] = ![]),
      (this["timerTxt"]["renderScale"] = 0x2),
      this["timerTxt"]["setText"]("15"));
  });
var _0x20306c = 0x82;

function _0x4596b2() {
  _0x4596b2["superClass"]["call"](this, _0x20306c);
}
(window["ScreenMessage"] = _0x4596b2), _0x17bf26["setCustomClassForGameObjType"](_0x4596b2, _0x20306c);
var _0x1d83bb = _0x478759,
  _0x48c344 = _0x307a43;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344),
  (_0x478759["prototype"]["customType"] = 0x0),
  (_0x478759["prototype"]["updateZ"] = function () {
    this["z"] = 0x3e9;
  }),
  (_0x478759["prototype"]["customDraw"] = function (_0x446a04) {}),
  (_0x478759["prototype"]["setObjTypes"] = function (_0x38cd11, _0x558d60) {
    (this["oType"] = _0x38cd11), (this["customType"] = _0x558d60);
  }),
  (_0x478759["prototype"]["readCustomData_onNewlyVisible"] = function (_0xc2acc9) {
    _0x478759["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0xc2acc9);
  }),
  (_0x478759["prototype"]["readCustomData_onUpdate"] = function (_0x18a838) {
    _0x478759["superClass"]["prototype"]["readCustomData_onUpdate"]["call"](this, _0x18a838);
  });
var _0x1c4b68 = 0x80;

function _0x478759() {
  _0x478759["superClass"]["call"](this, _0x1c4b68), (_0x478759["prototype"]["easeAngleChanges"] = ![]);
}
(window["CustomObj"] = _0x478759), _0x17bf26["setCustomClassForGameObjType"](_0x478759, _0x1c4b68), _0x17bf26["addCustomClassType"](_0x1c4b68);
var _0x1d83bb = _0x4e6f87,
  _0x48c344 = _0x478759;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344),
  (_0x4e6f87["prototype"]["customDraw"] = function (_0x15b038) {
    _0x587de3["save"](),
      (_0x587de3["globalAlpha"] = 0.095),
      _0x587de3["beginPath"](),
      _0x587de3["arc"](0x0, 0x0, this["rad"], 0x0, 0x2 * Math["PI"], ![]),
      _0x587de3["arc"](0x0, 0x0, this["rad"] * 0.9, 0x0, 0x2 * Math["PI"], !![]),
      (_0x587de3["fillStyle"] = "red"),
      _0x587de3["closePath"](),
      _0x587de3["fill"](),
      _0x587de3["restore"]();
    var _0x4da0f4 = 0xf;
    _0x587de3["save"](), _0x587de3["rotate"](this["angle"] + _0x3d960f(-0x5a));
    var _0x51dbab = this["getSkinImageObj"]("img/custom/trunk2.png");
    if (_0x51dbab) {
      var _0x2a8bdb = 0x3c;
      _0x587de3["save"](),
        _0x587de3["drawImage"](_0x51dbab, -_0x2a8bdb, this["rad"] - _0x2a8bdb + _0x4da0f4, 0x2 * _0x2a8bdb, 0x2 * _0x2a8bdb),
        _0x587de3["restore"]();
    }
    var _0x51dbab = this["getSkinImageObj"]("img/custom/trunk1.png");
    if (_0x51dbab) {
      var _0x2a8bdb = 0x3c;
      _0x587de3["save"](),
        _0x587de3["drawImage"](_0x51dbab, -_0x2a8bdb, -this["rad"] - _0x2a8bdb - _0x4da0f4, 0x2 * _0x2a8bdb, 0x2 * _0x2a8bdb),
        _0x587de3["restore"]();
    }
    _0x587de3["restore"]();
  }),
  (_0x4e6f87["prototype"]["readCustomData_onNewlyVisible"] = function (_0x2e7dc2) {
    _0x4e6f87["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x2e7dc2);
  });

function _0x4e6f87() {
  _0x4e6f87["superClass"]["call"](this);
}
window["Slingshot"] = _0x4e6f87;
var _0x1509df = 0x1;
_0x17bf26["setCustomClassForGameObjType"](_0x4e6f87, _0x1c4b68, _0x1509df);
var _0x1d83bb = _0x2834f9,
  _0x48c344 = _0x478759;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344),
  (_0x2834f9["prototype"]["updateZ"] = function () {
    this["z"] = 0x3f2 + this["rad"];
  }),
  (_0x2834f9["prototype"]["customDraw"] = function (_0x1a0898) {
    _0x587de3["save"]();
    var _0x234643 = this["getSkinImageObj"]("img/custom/pad.png");
    if (_0x234643) {
      var _0x5c5a2b = this["rad"];
      _0x587de3["save"](),
        _0x587de3["rotate"](this["angle"] + _0x3d960f(-0x5a)),
        _0x587de3["drawImage"](_0x234643, -_0x5c5a2b, -_0x5c5a2b, 0x2 * _0x5c5a2b, 0x2 * _0x5c5a2b),
        _0x587de3["restore"]();
    }
    _0x587de3["restore"]();
  }),
  (_0x2834f9["prototype"]["ropeMargin"] = 0x0),
  (_0x2834f9["prototype"]["beforeCustomDraw"] = function (_0x5c486f) {
    var _0x550091 = 0xa;
    _0x587de3["save"](),
      (_0x587de3["strokeStyle"] = "#4f4f4f"),
      (_0x587de3["lineWidth"] = _0x550091),
      (_0x587de3["globalAlpha"] = 0x1),
      _0x587de3["beginPath"](),
      _0x587de3["moveTo"](this["x"], this["y"]),
      _0x587de3["lineTo"](this["base1_X"], this["base1_Y"]),
      _0x587de3["stroke"](),
      _0x587de3["beginPath"](),
      _0x587de3["moveTo"](this["x"], this["y"]),
      _0x587de3["lineTo"](this["base2_X"], this["base2_Y"]),
      _0x587de3["stroke"](),
      _0x587de3["restore"](),
      _0x587de3["save"](),
      (_0x587de3["strokeStyle"] = "#222222"),
      (_0x587de3["lineWidth"] = _0x550091 * 0.6),
      (_0x587de3["globalAlpha"] = 0x1),
      _0x587de3["beginPath"](),
      _0x587de3["moveTo"](this["x"], this["y"]),
      _0x587de3["lineTo"](this["base1_X"], this["base1_Y"]),
      _0x587de3["stroke"](),
      _0x587de3["beginPath"](),
      _0x587de3["moveTo"](this["x"], this["y"]),
      _0x587de3["lineTo"](this["base2_X"], this["base2_Y"]),
      _0x587de3["stroke"](),
      _0x587de3["restore"]();
  }),
  (_0x2834f9["prototype"]["readCustomData_onNewlyVisible"] = function (_0x200097) {
    _0x2834f9["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x200097),
      (this["base1_ox"] = this["base1_X"] = this["base1_nx"] = this["x"]),
      (this["base1_oy"] = this["base1_Y"] = this["base1_ny"] = this["y"]),
      (this["base2_ox"] = this["base2_X"] = this["base2_nx"] = this["x"]),
      (this["base2_oy"] = this["base2_Y"] = this["base2_ny"] = this["y"]),
      this["readBaseData"](_0x200097);
  }),
  (_0x2834f9["prototype"]["readBaseData"] = function (_0x8ce18e) {
    var _0x50b088 = _0x8ce18e["readUInt32"]() / 0x64,
      _0x1acabe = _0x8ce18e["readUInt32"]() / 0x64,
      _0x131616 = _0x8ce18e["readUInt32"]() / 0x64,
      _0x4f6be9 = _0x8ce18e["readUInt32"]() / 0x64;
    (this["base1_ox"] = this["base1_X"]),
      (this["base1_oy"] = this["base1_Y"]),
      (this["base1_nx"] = _0x50b088),
      (this["base1_ny"] = _0x1acabe),
      (this["base2_ox"] = this["base2_X"]),
      (this["base2_oy"] = this["base2_Y"]),
      (this["base2_nx"] = _0x131616),
      (this["base2_ny"] = _0x4f6be9);
  }),
  (_0x2834f9["prototype"]["base1_X"] = 0x0),
  (_0x2834f9["prototype"]["base1_Y"] = 0x0),
  (_0x2834f9["prototype"]["base2_X"] = 0x0),
  (_0x2834f9["prototype"]["base2_Y"] = 0x0),
  (_0x2834f9["prototype"]["onLerpUpdate"] = function (_0xf99f84) {
    (this["base1_X"] = _0xf99f84 * (this["base1_nx"] - this["base1_ox"]) + this["base1_ox"]),
      (this["base1_Y"] = _0xf99f84 * (this["base1_ny"] - this["base1_oy"]) + this["base1_oy"]),
      (this["base2_X"] = _0xf99f84 * (this["base2_nx"] - this["base2_ox"]) + this["base2_ox"]),
      (this["base2_Y"] = _0xf99f84 * (this["base2_ny"] - this["base2_oy"]) + this["base2_oy"]);
  });

function _0x2834f9() {
  _0x2834f9["superClass"]["call"](this);
}
window["SlingshotPad"] = _0x2834f9;
var _0x5ce91e = 0x2;
_0x17bf26["setCustomClassForGameObjType"](_0x2834f9, _0x1c4b68, _0x5ce91e);
var _0x1d83bb = _0x2a5d9e,
  _0x48c344 = _0x478759;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344),
  (_0x2a5d9e["prototype"]["customDraw"] = function (_0x66052) {
    _0x587de3["save"](),
      (_0x587de3["globalAlpha"] = 0.095),
      _0x587de3["beginPath"](),
      _0x587de3["arc"](0x0, 0x0, this["rad"], 0x0, 0x2 * Math["PI"], ![]),
      _0x587de3["arc"](0x0, 0x0, this["rad"] * 0.9, 0x0, 0x2 * Math["PI"], !![]),
      (_0x587de3["fillStyle"] = "red"),
      _0x587de3["closePath"](),
      _0x587de3["fill"](),
      _0x587de3["restore"]();
  });

function _0x2a5d9e() {
  _0x2a5d9e["superClass"]["call"](this);
}
window["Trampoline"] = _0x2a5d9e;
var _0x41a9a5 = 0x4;
_0x17bf26["setCustomClassForGameObjType"](_0x2a5d9e, _0x1c4b68, _0x41a9a5);
var _0x1d83bb = _0x223097,
  _0x48c344 = _0x478759;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344),
  (_0x223097["prototype"]["updateZ"] = function () {
    this["z"] = 0x3f2 + this["rad"];
  }),
  (_0x223097["prototype"]["customDraw"] = function (_0x4ade7a) {
    this["drawLeg"](_0x5dee72), this["drawLeg"](_0x3754c1), this["drawLeg"](_0x9fc7ef), this["drawLeg"](_0x1ccfb9), _0x587de3["save"]();
    var _0x1cf00a = this["getSkinImageObj"]("img/custom/trampoline/rug_zebra.png");
    if (_0x1cf00a) {
      var _0x566923 = this["rad"] * (this["stretch"] / 0x64),
        _0x595dce = _0x566923 + _0x36494b;
      _0x587de3["save"](),
        _0x587de3["rotate"](this["angle"]),
        _0x587de3["drawImage"](_0x1cf00a, -_0x566923, -_0x595dce, 0x2 * _0x566923, 0x2 * _0x595dce),
        _0x587de3["restore"]();
    }
    _0x587de3["restore"]();
  });
var _0x36494b = 0xf,
  _0x5dee72 = -0x2b,
  _0x3754c1 = 0x32,
  _0x9fc7ef = 0x87,
  _0x1ccfb9 = 0xe1,
  _0x9d8d58 = 0.4,
  _0x296fe4 = 0x0;

function _0x13cbdf(_0x15b62d) {
  return 0x1 + (0x1 - _0x15b62d["stretch"] / 0x64);
}
(_0x223097["prototype"]["drawLeg"] = function (_0x44fcee) {
  _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0x1);
  var _0x3d93f9 = this["getSkinImageObj"]("img/custom/trampoline/leg_zebra.png");
  if (_0x3d93f9) {
    var _0x2a9117 = this["rad"] * 0.3,
      _0xd23436 = 0x2 * this["rad"] * _0x9d8d58 * _0x13cbdf(this);
    _0x587de3["save"](),
      _0x587de3["rotate"](this["angle"] + _0x3d960f(_0x44fcee)),
      _0x587de3["drawImage"](_0x3d93f9, -_0x2a9117, this["rad"] * _0x13cbdf(this), 0x2 * _0x2a9117, _0xd23436),
      _0x587de3["restore"]();
  }
  _0x587de3["restore"]();
}),
  (_0x223097["prototype"]["readCustomData_onNewlyVisible"] = function (_0xd097cd) {
    _0x223097["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0xd097cd),
      (this["o_stretch"] = this["nw_strech"] = this["n_strech"] = this["stretch"]),
      this["readBaseData"](_0xd097cd);
  }),
  (_0x223097["prototype"]["baseStrech"] = 0x0),
  (_0x223097["prototype"]["readCustomData_onUpdate"] = function (_0x3be9ab) {
    _0x223097["superClass"]["prototype"]["readCustomData_onUpdate"]["call"](this, _0x3be9ab), this["readBaseData"](_0x3be9ab);
  }),
  (_0x223097["prototype"]["stretch"] = 0x64),
  (_0x223097["prototype"]["readBaseData"] = function (_0x33e0bf) {
    var _0x5efe22 = _0x33e0bf["readUInt32"]() / 0x64;
    (this["o_stretch"] = this["stretch"]), (this["n_strech"] = _0x5efe22);
  }),
  (_0x223097["prototype"]["base1_X"] = 0x0),
  (_0x223097["prototype"]["base1_Y"] = 0x0),
  (_0x223097["prototype"]["base2_X"] = 0x0),
  (_0x223097["prototype"]["base2_Y"] = 0x0),
  (_0x223097["prototype"]["base3_X"] = 0x0),
  (_0x223097["prototype"]["base3_Y"] = 0x0),
  (_0x223097["prototype"]["base4_X"] = 0x0),
  (_0x223097["prototype"]["base4_Y"] = 0x0),
  (_0x223097["prototype"]["onLerpUpdate"] = function (_0x57d33f) {
    this["stretch"] = _0x57d33f * (this["n_strech"] - this["o_stretch"]) + this["o_stretch"];
  });

function _0x223097() {
  _0x223097["superClass"]["call"](this);
}
window["TrampolinePad"] = _0x223097;
var _0x195a84 = 0x5;
_0x17bf26["setCustomClassForGameObjType"](_0x223097, _0x1c4b68, _0x195a84);
var _0x48c344 = _0x3799d1;
(_0x303c3f["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x303c3f["prototype"]["constructor"] = _0x303c3f),
  (_0x303c3f["superClass"] = _0x48c344),
  (_0x303c3f["prototype"]["updateZ"] = function () {
    this["z"] = 0x186a0;
  }),
  (_0x303c3f["prototype"]["getSkinName"] = function () {
    var _0xf6a4eb = this["animalInfo"]();
    if (this["animalSpecies"] == 0x8 || this["animalSpecies"] == 0x6) return _0xf6a4eb["skinName"] + "_body";
    return _0xf6a4eb["skinName"];
  }),
  (_0x303c3f["prototype"]["animalInfo"] = function () {
    var _0xeffb63 = {},
      _0x5361eb = "";
    switch (this["animalSpecies"]) {
      case 0x0:
        (_0x5361eb = "jagga"), (_0xeffb63["aniName"] = "Jagga");
        break;
      case 0x1:
        (_0x5361eb = "bali"), (_0xeffb63["aniName"] = "Bali");
        break;
      case 0x2:
        (_0x5361eb = "jutt"), (_0xeffb63["aniName"] = "Jutt");
        break;
      case 0x3:
        (_0x5361eb = "bhollaa"), (_0xeffb63["aniName"] = "Bhollaa");
        break;
      case 0x4:
        (_0x5361eb = "butt"), (_0xeffb63["aniName"] = "Butt");
        break;
      case 0x5:
        (_0x5361eb = "khattak"), (_0xeffb63["aniName"] = "Khattak");
        break;
      case 0x6:
        (_0x5361eb = "chandyo/chandyo"), (_0xeffb63["aniName"] = "Chandyo");
        break;
      case 0x7:
        (_0x5361eb = "abysmal"), (_0xeffb63["aniName"] = "Abysmal");
        break;
      case 0x8:
        (_0x5361eb = "sultan/sultan"), (_0xeffb63["aniName"] = "Sultan");
        break;
      case 0x9:
        (_0x5361eb = "gujjar"), (_0xeffb63["aniName"] = "Gujjar");
        break;
    }
    return (
      (_0xeffb63["aniCol"] = "#FF9000"),
      (_0xeffb63["skinName"] = "land/aiboss/" + _0x5361eb),
      (_0xeffb63["upgradeText"] = "UPGRADED to " + _0xeffb63["aniName"] + " the A.I BOSS!"),
      (_0xeffb63["aniCol"] = "#22FF8A"),
      _0xeffb63
    );
  }),
  (_0x303c3f["prototype"]["getAbilityInfo"] = function (_0x2d66f9) {
    var _0x504dc2 = {},
      _0x2a30bb = this["animalInfo"]();
    return (
      (_0x504dc2["abilName"] = "AI"),
      (_0x504dc2["abilImg"] = "skins/" + _0x2a30bb["skinName"] + ".png"),
      (_0x504dc2["speciesType"] = this["animalSpecies"]),
      (_0x504dc2["skinThemeID"] = this["skinThemeID"]),
      (_0x504dc2["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x504dc2
    );
  }),
  (_0x303c3f["prototype"]["diveColor1"] = "#64a034"),
  (_0x303c3f["prototype"]["diveColor2"] = "#598b30"),
  (_0x303c3f["prototype"]["onAnimalSpeciesSet"] = function () {
    switch (this["animalSpecies"]) {
      case 0x1:
        (this["diveColor1"] = "#dbb300"), (this["diveColor2"] = "#bf9d04");
        break;
      case 0x2:
        (this["diveColor1"] = "#79c9a8"), (this["diveColor2"] = "#6fad9f");
        break;
    }
  }),
  (_0x303c3f["prototype"]["leftWingAnim"] = null),
  (_0x303c3f["prototype"]["flapAngleDiff"] = 0x3),
  (_0x303c3f["prototype"]["flapAngle"] = 0x3),
  (_0x303c3f["prototype"]["flapF"] = 0.1),
  (_0x303c3f["prototype"]["flapDur"] = 0x2),
  (_0x303c3f["prototype"]["sF"] = 0.02),
  (_0x303c3f["prototype"]["drawWings"] = function () {
    this["leftWingAnim"] == null &&
      ((this["leftWingAnim"] = new _0x5431fd(this, this["flapDur"], _0x5431fd["wave"])),
      (this["leftWingAnim"]["keepLastFrame"] = !![]),
      (this["leftWingAnim"]["loop"] = !![]),
      (this["leftWingAnim"]["onFrameEntered"] = function (_0x5d4d0e) {
        this["forObj"]["frame1"] = _0x5d4d0e;
      }));
    if (this["leftWingAnim"] != null) this["leftWingAnim"]["run"]();
    var _0x36be8e = this["rad"] - this["outlineW"],
      _0x471132 = this["frame1"] * this["sF"] * _0x36be8e,
      _0x1b8773 = -(-this["flapF"] + this["frame1"]),
      _0x57c2b6 = _0x1b8773 * _0x3d960f(this["flapAngle"]),
      _0x40d8e4 = 0x1f4 / 0x154,
      _0x245fcf = this["getSkinImageObj"]("skins/land/aiboss/sultan/left_wing.png"),
      _0x14a1d0 = this["getSkinImageObj"]("skins/land/aiboss/sultan/right_wing.png");
    if (_0x245fcf && _0x14a1d0) {
      var _0x35f616 = 0.2;
      _0x587de3["save"](),
        _0x587de3["rotate"](_0x3d960f(this["flapAngleDiff"]) + _0x57c2b6),
        _0x587de3["drawImage"](
          _0x245fcf,
          -_0x36be8e * _0x40d8e4 - _0x35f616 * _0x36be8e,
          -_0x36be8e * _0x40d8e4 + _0x471132,
          0x2 * _0x36be8e * _0x40d8e4,
          0x2 * _0x36be8e * _0x40d8e4 + _0x471132 * 1.5
        ),
        _0x587de3["restore"](),
        _0x587de3["save"](),
        _0x587de3["rotate"](-(_0x3d960f(this["flapAngleDiff"]) + _0x57c2b6)),
        _0x587de3["drawImage"](
          _0x14a1d0,
          -_0x36be8e * _0x40d8e4 + _0x35f616 * _0x36be8e,
          -_0x36be8e * _0x40d8e4 + _0x471132,
          0x2 * _0x36be8e * _0x40d8e4,
          0x2 * _0x36be8e * _0x40d8e4 + _0x471132 * 1.5
        ),
        _0x587de3["restore"]();
    }
  }),
  (_0x303c3f["prototype"]["drawSkinCustomization"] = function () {
    if (this["animalSpecies"] == 0x8) {
      _0x587de3["save"](), (_0x587de3["globalAlpha"] = _0x34fedb ? 0.5 : 0x1);
      var _0x708d4 = 0x1f4 / 0x154,
        _0x2ef035 = this["getSkinImageObj"]("skins/land/aiboss/sultan/sultan_head.png");
      if (_0x2ef035) {
        _0x587de3["save"](), (_0x587de3["globalAlpha"] = _0x34fedb ? 0.2 : 0x1);
        var _0x5cc703 = this["rad"] - this["outlineW"];
        _0x587de3["drawImage"](_0x2ef035, -_0x5cc703 * _0x708d4, -_0x5cc703 * _0x708d4, 0x2 * _0x5cc703 * _0x708d4, 0x2 * _0x5cc703 * _0x708d4),
          _0x587de3["restore"]();
      }
      var _0x10caff = (_0x168a54 - this["spawnTime"]) / 0x3e8,
        _0x4adeab = !(_0x57ae6d == 0x2 || _0x34fedb) ? _0x120bbb(_0x10caff, 0x5, 0x1, 0x1) : this["birdNoAnimationFlyWingAngle"];
      this["drawWings"]();
      var _0x4bf4b2 = -1.25,
        _0x42dbc2 = -0.1,
        _0x12aab0 = 0x258 / 0x17c,
        _0x4acb62 = 0.4,
        _0x582044 = this["getSkinImageObj"]("skins/land/aiboss/sultan/tail.png");
      if (_0x582044) {
        _0x587de3["save"]();
        var _0x5cc703 = this["rad"] - this["outlineW"];
        _0x587de3["drawImage"](
          _0x582044,
          -_0x5cc703 * _0x4acb62,
          -_0x5cc703 * _0x4acb62 + _0x4bf4b2 * _0x5cc703,
          0x2 * _0x5cc703 * _0x4acb62,
          0x2 * _0x5cc703 * _0x4acb62
        ),
          _0x587de3["restore"]();
      }
      _0x587de3["restore"]();
    } else {
      if (this["animalSpecies"] == 0x6) {
        var _0x5d1b59 = 0x0,
          _0x79e0ff = 0.42,
          _0x5cf8b9 = 0x1f4 / 0x154,
          _0xb73dfb = 0x1f4 / 0x154,
          _0x582044 = this["getSkinImageObj"]("skins/land/aiboss/chandyo/chandyo_back.png");
        if (_0x582044) {
          _0x587de3["save"]();
          var _0x5cc703 = this["rad"] - this["outlineW"];
          _0x587de3["drawImage"](
            _0x582044,
            -_0x5cc703 * _0xb73dfb,
            -_0x5cc703 * _0xb73dfb + _0x5d1b59 * _0x5cc703,
            0x2 * _0x5cc703 * _0xb73dfb,
            0x2 * _0x5cc703 * _0xb73dfb
          ),
            _0x587de3["restore"]();
        }
        var _0x2ef035 = this["getSkinImageObj"]("skins/land/aiboss/chandyo/chandyo_head.png");
        if (_0x2ef035) {
          _0x587de3["save"]();
          var _0x5cc703 = this["rad"] - this["outlineW"];
          _0x587de3["drawImage"](
            _0x2ef035,
            -_0x5cc703 * _0x5cf8b9,
            -_0x5cc703 * _0x5cf8b9 + _0x79e0ff * _0x5cc703,
            0x2 * _0x5cc703 * _0x5cf8b9,
            0x2 * _0x5cc703 * _0x5cf8b9
          ),
            _0x587de3["restore"]();
        }
      }
    }
  });

function _0x303c3f() {
  _0x303c3f["superClass"]["call"](this, _0x3fb3b2);
}
window["AiBoss"] = _0x303c3f;
var _0x4cd422 = 0x6b;
_0x17bf26["setCustomClassForGameObjType"](_0x303c3f, _0x3fb3b2, _0x4cd422);
var _0x48c344 = _0x307a43;
(_0x529b4e["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x529b4e["prototype"]["constructor"] = _0x529b4e),
  (_0x529b4e["superClass"] = _0x48c344),
  (_0x529b4e["prototype"]["mommyID"] = 0x0),
  (_0x529b4e["prototype"]["updateZ"] = function () {
    this["z"] = 0x989680;
  }),
  (_0x529b4e["prototype"]["isEdibleOutlined"] = function () {
    if (this["mommyID"] == _0x204989) return ![];
    return _0x244824["superClass"]["prototype"]["isEdibleOutlined"]["call"](this);
  }),
  (_0x529b4e["prototype"]["customDraw"] = function (_0x1b4d8b) {
    _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0.01);
    var _0x31ebb4 = this["getSkinImageObj"]("img/camera.png");
    if (_0x31ebb4) {
      var _0x5dff43 = this["rad"] * 0x2;
      _0x587de3["rotate"](this["angle"]), _0x587de3["drawImage"](_0x31ebb4, -_0x5dff43, -_0x5dff43, 0x2 * _0x5dff43, 0x2 * _0x5dff43);
    }
    _0x587de3["restore"]();
  });
var _0x7eed15 = 0x7f;

function _0x529b4e() {
  _0x529b4e["superClass"]["call"](this, _0x7eed15), (this["doesDrawEffectScale"] = ![]);
}
(window["DroneCamera"] = _0x529b4e), _0x17bf26["setCustomClassForGameObjType"](_0x529b4e, _0x7eed15);
var _0x1d83bb = _0x451def,
  _0x48c344 = _0x307a43;
(_0x451def["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x451def["prototype"]["constructor"] = _0x451def),
  (_0x451def["superClass"] = _0x48c344),
  (_0x451def["prototype"]["r"] = 0x0),
  (_0x451def["prototype"]["updateZ"] = function () {
    this["z"] = 0x186a2;
  }),
  (_0x451def["prototype"]["customDraw"] = function (_0x1156d8) {
    _0x587de3["save"](),
      (_0x587de3["globalAlpha"] = 0.3),
      _0x587de3["beginPath"](),
      _0x587de3["arc"](0x0, 0x0, this["rad"] + 0x2, 0x0, 0x2 * Math["PI"], ![]),
      _0x587de3["arc"](0x0, 0x0, this["rad"], 0x0, 0x2 * Math["PI"], !![]),
      (_0x587de3["fillStyle"] = "#32ff00"),
      _0x587de3["closePath"](),
      _0x587de3["fill"](),
      _0x587de3["restore"](),
      _0x587de3["save"](),
      (_0x587de3["globalAlpha"] = 0.095),
      _0x587de3["beginPath"](),
      _0x587de3["arc"](0x0, 0x0, this["rad"], 0x0, 0x2 * Math["PI"], ![]),
      _0x587de3["arc"](0x0, 0x0, this["rad"], 0x0, 0x2 * Math["PI"], !![]),
      (_0x587de3["fillStyle"] = "red"),
      _0x587de3["closePath"](),
      _0x587de3["fill"](),
      _0x587de3["restore"](),
      _0x587de3["save"]();
    var _0x344860 = 0x1,
      _0x52ffe5 = _0x344860 * 0.1;
    (this["r"] += _0x52ffe5), _0x587de3["rotate"](_0x3d960f(-this["r"])), this["setTitle"](), _0x587de3["restore"]();
  }),
  (_0x451def["prototype"]["setTitle"] = function () {
    var _0x39654c = (_0x39654c = "SANDBOX\x0aARENA"),
      _0x3c4350 = this["rad"] * 0.07;
    null == this["timerTxt"]
      ? ((this["timerTxt"] = new _0x413af8(_0x3c4350, "#FFFFFF")),
        (this["timerTxt"]["strokeW"] = 0x2),
        (this["timerTxt"]["multiLine"] = !![]),
        (this["timerTxt"]["renderScale"] = 0x5),
        this["timerTxt"]["setText"](_0x39654c))
      : (this["timerTxt"]["setFontSize"](_0x3c4350), this["timerTxt"]["setText"](_0x39654c)),
      (this["timerTxt"]["x"] = 0x0),
      (this["timerTxt"]["y"] = -this["rad"] * 0.9),
      this["timerTxt"]["draw"]();
  });
var _0x122b65 = 0x7e;

function _0x451def() {
  _0x451def["superClass"]["call"](this, _0x122b65);
}
(window["Sandbox"] = _0x451def), _0x17bf26["setCustomClassForGameObjType"](_0x451def, _0x122b65);
var _0x109505 = "6Le2eLIZAAAAACYfDXc6fT__SyfOP0m7rNyjkJdR";
_0x58a2a8("https://www.google.com/recaptcha/api.js?render=" + _0x109505, function () {
  console["log"]("loaded recatcha script."),
    grecaptcha["ready"](function () {
      console["log"]("::: iandev ::: RECAPTCHA LOADED"), _0xb423ae();
    });
});
var _0x19b8a5 = function (_0x2110f1, _0x30b320) {
    window["setTimeout"](function () {
      _0x2110f1 += "r";
      var _0x5467b0 = _0x44d803 ? 0x1 : 0x0;
      (_0x30b320 = _0x5467b0 + "" + _0x30b320), (_0x30b320 = _0x30b320 + "" + _0x5467b0);
      var _0x319cc = new _0x5906b0(0x2 + _0x30b320["length"] + 0x2);
      _0x319cc["writeUInt8"](0x3e), _0x319cc["writeString"](_0x30b320), _0xb4d17c(_0x319cc);
    }, 0x1388);
  },
  _0x3381ed = "",
  _0x95becd = function () {
    console["log"]("@@@@@@@@@@@@@@@@@@@ recaptcha called"),
      (_0x3381ed = ""),
      grecaptcha["execute"](_0x109505, {
        action: "homepage",
      })
        ["then"](function (_0x2abb07) {
          _0x3381ed = _0x2abb07 || "error";
          var _0x4fe8fa = new _0x5906b0(0x2 + _0x3381ed["length"] + 0x2);
          _0x4fe8fa["writeUInt8"](_0x474a3d),
            _0x4fe8fa["writeString"](_0x3381ed),
            _0xb4d17c(_0x4fe8fa),
            _0x3381ed == null && console["log"]("error: rec token could not received!");
        })
        ["catch"](function (_0xc37566) {
          console["log"]("Error loading recaptcha! Reason: " + _0xc37566), (_0x3381ed = "error");
          var _0x18beb0 = new _0x5906b0(0x2 + _0x3381ed["length"] + 0x2);
          _0x18beb0["writeUInt8"](_0x474a3d), _0x18beb0["writeString"](_0x3381ed), _0xb4d17c(_0x18beb0);
        });
  },
  _0x2a6369 = function (_0x55f09d, _0x52fe28, _0x979945) {
    window["setTimeout"](function () {
      console.log("thest: " + _0x979945)
      if (_0x52fe28) {
        (_0x979945 = eval(_0x55f09d)), (_0x979945 = _0x979945 + "|" + _0x52fe28);
        var _0x2bf443 = new _0x5906b0(0x2 + _0x979945["length"] + 0x2);
        _0x2bf443["writeUInt8"](_0x121f50), _0x2bf443["writeString"](_0x979945), _0xb4d17c(_0x2bf443);
      }
    }, _0x103b73(0.5, 0.8) * 0x3e8);
  },
  _0x1d83bb = _0x59c681,
  _0x48c344 = _0xe4ec38;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344),
  (_0x59c681["prototype"]["customDraw"] = function (_0x3f4f56) {
    _0x587de3["save"](), _0x587de3["rotate"](this["angle"] + _0x3d960f(0xb4));
    var _0x247d5f = _0x587de3["globalAlpha"];
    _0x587de3["globalAlpha"] = this["alpha"] < 0.7 ? this["alpha"] : 0.7;
    var _0x3bdbc5 = this["getSkinImageObj"]("img/disasters/coldwave.png");
    if (_0x3bdbc5) {
      var _0x121e76 = this["rad"] * 1.25;
      _0x587de3["drawImage"](_0x3bdbc5, -_0x121e76, -_0x121e76, 0x2 * _0x121e76, 0x2 * _0x121e76);
    }
    _0x587de3["restore"]();
  }),
  (_0x59c681["prototype"]["updateZ"] = function () {
    this["z"] = 0x2710 - this["rad"];
  }),
  (_0x59c681["prototype"]["readCustomData_onNewlyVisible"] = function (_0x2dd6f4) {
    this["alpha"] = _0x2dd6f4["readUInt8"]() / 0x64;
  }),
  (_0x59c681["prototype"]["readUpdatedProperty"] = function (_0x353b20, _0x57fd63) {
    _0x353b20 == _0x17e8f3 && (this["alpha"] = _0x57fd63["readUInt8"]() / 0x64);
  });

function _0x59c681() {
  _0x59c681["superClass"]["call"](this), (this["spawnTime"] = _0x168a54);
}
(window["ColdWave"] = _0x59c681), _0x17bf26["setCustomClassForGameObjType"](_0x59c681, _0x5aa814, _0x1b5017);
var _0x48c344 = _0x307a43;
(_0x4e39ef["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x4e39ef["prototype"]["constructor"] = _0x4e39ef),
  (_0x4e39ef["superClass"] = _0x48c344),
  (_0x4e39ef["prototype"]["updateZ"] = function () {
    this["z"] = 0x3e8 + this["rad"];
  }),
  (_0x4e39ef["prototype"]["customDraw"] = function (_0x58b0e2) {
    _0x587de3["save"]();
    var _0xe864cf = 0x0,
      _0x36f9b8 = _0x168a54 - this["spawnTime"],
      _0x264069 = _0x36f9b8 / 0x3e8,
      _0x5cecb5 = 0x2,
      _0x54e82b = 1.5;
    _0xe864cf = _0x54e82b * Math["sin"](((0x2 * Math["PI"]) / _0x5cecb5) * _0x264069);
    var _0xdc8e39 = 0.6,
      _0x406ba1 = _0x120bbb(_0x264069, 0xa, 0x1, 0.5);
    _0x406ba1 = _0x549f3d(_0x406ba1, 0x0, 0x1);
    _0x406ba1 >= _0xdc8e39 && (_0xdc8e39 = _0xdc8e39 - (_0x406ba1 - _0xdc8e39));
    var _0x256e95 = "#98803A";
    (_0x587de3["fillStyle"] = _0x256e95),
      (_0x587de3["globalAlpha"] = _0xdc8e39),
      _0x587de3["beginPath"](),
      _0x587de3["arc"](
        -this["rad"] * 0.5,
        -this["rad"] * 0.5 + 0xa * this["rPer"],
        Math["max"](0x0, this["rad"] * 0.65 + _0xe864cf),
        0x0,
        0x2 * Math["PI"]
      ),
      _0x587de3["fill"](),
      _0x587de3["beginPath"](),
      _0x587de3["arc"](
        this["rad"] * 0.5,
        -this["rad"] * 0.5 - 0xa * this["rPer"],
        Math["max"](0x0, this["rad"] * 0.73 - _0xe864cf),
        0x0,
        0x2 * Math["PI"]
      ),
      _0x587de3["fill"](),
      _0x587de3["beginPath"](),
      _0x587de3["arc"](this["rad"] * 0.6, this["rad"] * 0.4, Math["max"](0x0, this["rad"] * 0.78 + _0xe864cf), 0x0, 0x2 * Math["PI"]),
      _0x587de3["fill"](),
      _0x587de3["beginPath"](),
      _0x587de3["arc"](-this["rad"] * 0.5, this["rad"] * 0.5, Math["max"](0x0, this["rad"] * 0.6 + this["rPer"] - _0xe864cf), 0x0, 0x2 * Math["PI"]),
      _0x587de3["fill"](),
      _0x587de3["restore"]();
  });

function _0x4e39ef() {
  _0x4e39ef["superClass"]["call"](this, _0x43a114);
}
(window["DustCloud"] = _0x4e39ef), _0x17bf26["setCustomClassForGameObjType"](_0x4e39ef, _0x43a114);
var _0x1d83bb = _0x58d02a,
  _0x48c344 = _0xe4ec38;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344),
  (_0x58d02a["prototype"]["customDraw"] = function (_0x1ef873) {
    _0x587de3["save"](), _0x587de3["rotate"](this["angle"] + _0x3d960f(0xb4));
    var _0x1a5c39 = _0x587de3["globalAlpha"];
    _0x587de3["globalAlpha"] = this["alpha"] < 0.7 ? this["alpha"] : 0.7;
    var _0x1429d0 = this["getSkinImageObj"]("img/disasters/dustwave.png");
    if (_0x1429d0) {
      var _0x1654ab = this["rad"] * 1.25;
      _0x587de3["drawImage"](_0x1429d0, -_0x1654ab, -_0x1654ab, 0x2 * _0x1654ab, 0x2 * _0x1654ab);
    }
    _0x587de3["restore"]();
  }),
  (_0x58d02a["prototype"]["updateZ"] = function () {
    this["z"] = 0x2710 - this["rad"];
  }),
  (_0x58d02a["prototype"]["readCustomData_onUpdate"] = function (_0x15baa1) {
    this["alpha"] = _0x15baa1["readUInt8"]() / 0x64;
  }),
  (_0x58d02a["prototype"]["readUpdatedProperty"] = function (_0x1be411, _0x4a3b0c) {
    _0x1be411 == _0x17e8f3 && (this["alpha"] = _0x4a3b0c["readUInt8"]() / 0x64);
  });

function _0x58d02a() {
  _0x58d02a["superClass"]["call"](this), (this["spawnTime"] = _0x168a54);
}
(window["DustWave"] = _0x58d02a), _0x17bf26["setCustomClassForGameObjType"](_0x58d02a, _0x5aa814, _0x5ee565);
var _0x1d83bb = _0x5951d7,
  _0x48c344 = _0xe4ec38;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344),
  (_0x5951d7["prototype"]["customDraw"] = function (_0x293ab5) {
    _0x587de3["save"](), _0x587de3["rotate"](this["angle"] + _0x3d960f(0xb4));
    var _0x226355 = _0x587de3["globalAlpha"];
    _0x587de3["globalAlpha"] = this["alpha"] < 0.7 ? this["alpha"] : 0.7;
    var _0x767dc4 = this["getSkinImageObj"]("img/disasters/heatwave.png");
    if (_0x767dc4) {
      var _0x22836d = this["rad"] * 1.25;
      _0x587de3["drawImage"](_0x767dc4, -_0x22836d, -_0x22836d, 0x2 * _0x22836d, 0x2 * _0x22836d);
    }
    _0x587de3["restore"]();
  }),
  (_0x5951d7["prototype"]["updateZ"] = function () {
    this["z"] = 0x2710 - this["rad"];
  }),
  (_0x5951d7["prototype"]["readCustomData_onUpdate"] = function (_0x1c224b) {
    this["alpha"] = _0x1c224b["readUInt8"]() / 0x64;
  }),
  (_0x5951d7["prototype"]["readUpdatedProperty"] = function (_0x47e99b, _0x3560ab) {
    _0x47e99b == _0x17e8f3 && (this["alpha"] = _0x3560ab["readUInt8"]() / 0x64);
  });

function _0x5951d7() {
  _0x5951d7["superClass"]["call"](this), (this["spawnTime"] = _0x168a54);
}
(window["HeatWave"] = _0x5951d7), _0x17bf26["setCustomClassForGameObjType"](_0x5951d7, _0x5aa814, _0x1f6d67);
var _0x48c344 = _0x307a43;
(_0x196c9e["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x196c9e["prototype"]["constructor"] = _0x196c9e),
  (_0x196c9e["superClass"] = _0x48c344),
  (_0x196c9e["prototype"]["updateZ"] = function () {
    this["z"] = 0xf4240;
  }),
  (_0x196c9e["prototype"]["customDraw"] = function (_0x779f38) {
    var _0x36d11c = (_0x168a54 - this["spawnTime"]) / 0x3e8;
    _0x587de3["save"](), _0x587de3["rotate"](this["angle"] + _0x3d960f(0xb4)), (_0x587de3["globalAlpha"] = 0.1 + this["cloudOpacity"]);
    var _0x5e687a = this["getSkinImageObj"]("img/disasters/cloud.png");
    if (_0x5e687a) {
      var _0x51a44a = this["rad"] * 0x2;
      _0x587de3["drawImage"](_0x5e687a, -_0x51a44a, -_0x51a44a, 0x2 * _0x51a44a, 0x2 * _0x51a44a);
    }
    var _0x18c9da = 0x0,
      _0x477478 = 0x6,
      _0x12da75 = 0xf;
    (_0x18c9da = _0x12da75 * Math["sin"](((0x2 * Math["PI"]) / _0x477478) * _0x36d11c)), (_0x587de3["globalAlpha"] = 0.1);
    var _0x5e687a = this["getSkinImageObj"]("img/disasters/cloud1.png");
    if (_0x5e687a) {
      var _0x51a44a = this["rad"] * 0x2;
      (_0x51a44a = Math["max"](0x0, _0x51a44a - 0x5 + _0x18c9da)),
        _0x587de3["drawImage"](_0x5e687a, -_0x51a44a, -_0x51a44a, 0x2 * _0x51a44a, 0x2 * _0x51a44a);
    }
    _0x587de3["restore"]();
  }),
  (_0x196c9e["prototype"]["readUpdatedProperty"] = function (_0x29ccf6, _0x357832) {
    _0x29ccf6 == _0x17e8f3 && (this["alpha"] = _0x357832["readUInt8"]() / 0x64);
  });

function _0x196c9e() {
  _0x196c9e["superClass"]["call"](this, _0x24b846);
}
(window["RainStorm"] = _0x196c9e), _0x17bf26["setCustomClassForGameObjType"](_0x196c9e, _0x24b846);
var _0x48c344 = _0x307a43;
(_0x4561f0["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x4561f0["prototype"]["constructor"] = _0x4561f0),
  (_0x4561f0["superClass"] = _0x48c344),
  (_0x4561f0["prototype"]["updateZ"] = function () {
    this["z"] = 0xf4240;
  }),
  (_0x4561f0["prototype"]["customDraw"] = function (_0x4303e5) {
    var _0x645173 = (_0x168a54 - this["spawnTime"]) / 0x3e8;
    _0x587de3["save"](), _0x587de3["rotate"](this["angle"] + _0x3d960f(0xb4)), (_0x587de3["globalAlpha"] = 0.1 + this["cloudOpacity"]);
    var _0x23f0e0 = this["getSkinImageObj"]("img/disasters/cloud.png");
    if (_0x23f0e0) {
      var _0xeaf9c0 = this["rad"] * 0x2;
      _0x587de3["drawImage"](_0x23f0e0, -_0xeaf9c0, -_0xeaf9c0, 0x2 * _0xeaf9c0, 0x2 * _0xeaf9c0);
    }
    var _0x4f1901 = 0x0,
      _0x5ba0d2 = 0x6,
      _0x4fcc50 = 0xf;
    (_0x4f1901 = _0x4fcc50 * Math["sin"](((0x2 * Math["PI"]) / _0x5ba0d2) * _0x645173)), (_0x587de3["globalAlpha"] = 0.1);
    var _0x23f0e0 = this["getSkinImageObj"]("img/disasters/cloud1.png");
    if (_0x23f0e0) {
      var _0xeaf9c0 = this["rad"] * 0x2;
      (_0xeaf9c0 = Math["max"](0x0, _0xeaf9c0 - 0x5 + _0x4f1901)),
        _0x587de3["drawImage"](_0x23f0e0, -_0xeaf9c0, -_0xeaf9c0, 0x2 * _0xeaf9c0, 0x2 * _0xeaf9c0);
    }
    _0x587de3["restore"]();
  }),
  (_0x4561f0["prototype"]["readUpdatedProperty"] = function (_0x6787cc, _0x10de78) {
    _0x6787cc == _0x17e8f3 && (this["alpha"] = _0x10de78["readUInt8"]() / 0x64);
  });

function _0x4561f0() {
  _0x4561f0["superClass"]["call"](this, _0x393517);
}
(window["SnowStorm"] = _0x4561f0), _0x17bf26["setCustomClassForGameObjType"](_0x4561f0, _0x393517);
var _0x48c344 = _0x307a43;
(_0x9af11b["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x9af11b["prototype"]["constructor"] = _0x9af11b),
  (_0x9af11b["superClass"] = _0x48c344),
  (_0x9af11b["prototype"]["updateZ"] = function () {
    this["z"] = 0x2710;
  }),
  (_0x9af11b["prototype"]["tornadoType"] = "tornado"),
  (_0x9af11b["prototype"]["customDraw"] = function (_0x5dee42) {
    this["setTornadoType"]();
    var _0x2cf479 = "img/disasters/" + this["tornadoType"] + ".png",
      _0x23fcac = this["getSkinImageObj"](_0x2cf479);
    if (_0x23fcac) {
      var _0x40fdfa = this["rad"] * 0.8;
      if (!_0x34fedb && !(_0x57ae6d == 0x2)) {
        var _0x58541b = 0x3c / 0x3c,
          _0x51ca44 = 0x3e8 / _0x58541b,
          _0x223a5d = ((_0x168a54 - this["spawnTime"]) % _0x51ca44) / _0x51ca44,
          _0xf0d709 = _0x223a5d * 0x2 * Math["PI"],
          _0x58541b = 0x1e / 0x3c,
          _0x51ca44 = 0x3e8 / _0x58541b,
          _0x223a5d = ((_0x168a54 - this["spawnTime"]) % _0x51ca44) / _0x51ca44,
          _0x344084 = _0x223a5d * 0x2 * Math["PI"];
        _0x587de3["save"](), _0x587de3["rotate"](_0xf0d709);
        var _0x357054 = _0x587de3["globalAlpha"];
        _0x587de3["globalAlpha"] = 0x1 * _0x357054;
        var _0xfb4e47 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
          _0x2fdd70 = 2.2,
          _0x51407c = 6.5 * Math["cos"](((0x2 * Math["PI"]) / _0x2fdd70) * _0xfb4e47),
          _0x518374 = 6.5 * Math["sin"](((0x2 * Math["PI"]) / _0x2fdd70) * _0xfb4e47);
        (_0x587de3["globalAlpha"] = 0.3),
          _0x587de3["drawImage"](_0x23fcac, -_0x40fdfa - _0x51407c / 2.2, -_0x40fdfa, 0x2 * _0x40fdfa, 0x2 * _0x40fdfa),
          _0x587de3["restore"](),
          _0x587de3["save"](),
          (_0x587de3["globalAlpha"] = 0.7),
          _0x587de3["rotate"](_0x344084),
          _0x587de3["drawImage"](_0x23fcac, -_0x40fdfa - _0x51407c / 2.2, -_0x40fdfa, 0x2 * _0x40fdfa, 0x2 * _0x40fdfa),
          _0x587de3["restore"]();
      } else
        _0x587de3["save"](),
          (_0x587de3["globalAlpha"] = 0.7),
          _0x587de3["drawImage"](_0x23fcac, -_0x40fdfa, -_0x40fdfa, 0x2 * _0x40fdfa, 0x2 * _0x40fdfa),
          _0x587de3["restore"]();
      if (this["showDevilFace"]) {
        var _0x2cf479 = "img/disasters/" + this["tornadoFace"] + ".png",
          _0x1ee9cc = this["getSkinImageObj"](_0x2cf479);
        _0x1ee9cc &&
          (_0x587de3["save"](),
          _0x587de3["rotate"](this["angle"]),
          (_0x587de3["globalAlpha"] = 0.3),
          _0x587de3["drawImage"](_0x1ee9cc, -_0x40fdfa, -_0x40fdfa, 0x2 * _0x40fdfa, 0x2 * _0x40fdfa),
          _0x587de3["restore"]());
      }
    }
  }),
  (_0x9af11b["prototype"]["setTornadoType"] = function (_0x1211ad) {
    switch (this["specType"]) {
      case 0x0:
        (this["tornadoType"] = "tornado"), (this["tornadoFace"] = "dustface");
        break;
      case 0x1:
        (this["tornadoType"] = "waterspout"), (this["tornadoFace"] = "waterface");
        break;
      case 0x2:
        (this["tornadoType"] = "dustdevil"), (this["tornadoFace"] = "dustface");
        break;
      case 0x3:
        (this["tornadoType"] = "arcticwhirl"), (this["tornadoFace"] = "arcticface");
        break;
      case 0x4:
        (this["tornadoType"] = "firedevil"), (this["tornadoFace"] = "fireface");
        break;
      case 0x5:
        (this["tornadoType"] = "deviltwister"), (this["tornadoFace"] = "devilface");
        break;
    }
  }),
  (_0x9af11b["prototype"]["readCustomData_onNewlyVisible"] = function (_0x26a367) {
    this["setTornadoType"](), (this["showDevilFace"] = _0x26a367["readUInt8"]() == 0x1);
  }),
  (_0x9af11b["prototype"]["showDevilFace"] = ![]),
  (_0x9af11b["prototype"]["tornadoFace"] = null);

function _0x9af11b() {
  _0x9af11b["superClass"]["call"](this, _0x26acd2), (this["doesDrawEffectScale"] = ![]), (this["drawEffectScale_Slow"] = !![]);
}
(window["Tornado"] = _0x9af11b), _0x17bf26["setCustomClassForGameObjType"](_0x9af11b, _0x26acd2);
var _0x1d83bb = _0x55992d,
  _0x48c344 = _0xe4ec38;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344),
  (_0x55992d["prototype"]["customDraw"] = function (_0x596365) {
    _0x587de3["save"](), _0x587de3["rotate"](this["angle"] + _0x3d960f(0xb4));
    var _0xe1e275 = _0x587de3["globalAlpha"];
    _0x587de3["globalAlpha"] = this["alpha"] < 0.7 ? this["alpha"] : 0.7;
    var _0x51a1b3 = this["getSkinImageObj"]("img/disasters/tsunami.png");
    if (_0x51a1b3) {
      var _0xb0e5ae = this["rad"] * 1.25;
      _0x587de3["drawImage"](_0x51a1b3, -_0xb0e5ae, -_0xb0e5ae, 0x2 * _0xb0e5ae, 0x2 * _0xb0e5ae);
    }
    _0x587de3["restore"]();
  }),
  (_0x55992d["prototype"]["updateZ"] = function () {
    this["z"] = 0x2710 - this["rad"];
  }),
  (_0x55992d["prototype"]["readUpdatedProperty"] = function (_0x4f3b88, _0x3ac42b) {
    _0x4f3b88 == _0x17e8f3 && (this["alpha"] = _0x3ac42b["readUInt8"]() / 0x64);
  }),
  (_0x55992d["prototype"]["readCustomData_onNewlyVisible"] = function (_0x459b10) {
    this["alpha"] = _0x459b10["readUInt8"]() / 0x64;
  });

function _0x55992d() {
  _0x55992d["superClass"]["call"](this), (this["spawnTime"] = _0x168a54);
}
(window["TsunamiWave"] = _0x55992d), _0x17bf26["setCustomClassForGameObjType"](_0x55992d, _0x5aa814, _0x53039f);
var _0x48c344 = _0x307a43;
(_0x18588c["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x18588c["prototype"]["constructor"] = _0x18588c),
  (_0x18588c["superClass"] = _0x48c344),
  (_0x18588c["prototype"]["lookAngle"] = 0x0),
  (_0x18588c["prototype"]["frameNumber"] = 0x0),
  (_0x18588c["prototype"]["isRolling"] = ![]),
  (_0x18588c["prototype"]["pumpkinType"] = ![]),
  (_0x18588c["prototype"]["updateZ"] = function () {
    this["z"] = 0x3ea;
  }),
  (_0x18588c["prototype"]["customDraw"] = function (_0x3a0948) {
    var _0x122ed6 = 0x1,
      _0x11fd35 = 0.15,
      _0x5d85d0 = 0.8,
      _0x562ab3 = 0.5 * (_0x5d85d0 - _0x11fd35),
      _0x13a0e5 = _0x11fd35 + _0x562ab3 + _0x562ab3 * Math["sin"](((0x2 * Math["PI"]) / _0x122ed6) * (_0x168a54 / 0x3e8)),
      _0x122ed6 = 0x1,
      _0x11fd35 = 0.85,
      _0x5d85d0 = 0x1,
      _0x562ab3 = 0.5 * (_0x5d85d0 - _0x11fd35),
      _0x81a655 = 0x1;
    if (this["isRolling"]) this["frameNumber"] = Math["trunc"](_0x168a54 / 0x78) % 0x5;
    var _0x4aee96 = this["getSkinImageObj"]("img/pumpkin/" + this["pumpkinType"] + "/" + this["frameNumber"] + ".png");
    if (_0x4aee96) {
      var _0x3cfe20 = 0x0,
        _0x237bc1 = this["rad"],
        _0x27d71a = this["rad"] * 2.5;
      imH = this["rad"] * 2.5;
      var _0xf6f893 = 0.5,
        _0x57e6e7 = 0.95;
      _0x587de3["save"]();
      {
        (_0x587de3["globalAlpha"] *= this["onFireEffA"] * _0x81a655),
          _0x587de3["rotate"](this["angle"] + _0x3d960f(0x5a)),
          _0x587de3["drawImage"](_0x4aee96, _0x3cfe20 + _0x27d71a * -_0xf6f893, _0x237bc1 + imH * -_0x57e6e7, _0x27d71a, imH);
      }
      _0x587de3["restore"]();
    } else {
    }
  }),
  (_0x18588c["prototype"]["isFloating"] = ![]),
  (_0x18588c["prototype"]["isRolling"] = ![]),
  (_0x18588c["prototype"]["readUpdatedProperty"] = function (_0x313943, _0x29e9bd) {
    if (_0x313943 == _0x3b5a97) this["isFloating"] = _0x29e9bd["readUInt8"]() == 0x1;
    else _0x313943 == _0x5e0954 && (this["isRolling"] = _0x29e9bd["readUInt8"]() == 0x1);
  }),
  (_0x18588c["prototype"]["readCustomData_onNewlyVisible"] = function (_0x4e0f87) {
    (this["isRolling"] = _0x4e0f87["readUInt8"]() == 0x1), (this["pumpkinType"] = _0x4e0f87["readUInt8"]());
  });

function _0x18588c() {
  _0x18588c["superClass"]["call"](this, _0x3d4eea),
    (this["lookAngle"] = 0x0),
    (this["isRolling"] = ![]),
    (this["isFloating"] = ![]),
    (this["pumpkinType"] = ![]),
    (this["doesDrawEffectScale"] = !![]),
    (this["drawEffectScale_Slow"] = !![]);
}
var _0x3d4eea = 0x83;
(window["PumpkinBall"] = _0x18588c), _0x17bf26["setCustomClassForGameObjType"](_0x18588c, _0x3d4eea);
var _0x1d83bb = _0x166969,
  _0x48c344 = _0xe4ec38;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344),
  (_0x1d83bb["prototype"]["alltimeGoals"] = 0x0),
  (_0x1d83bb["prototype"]["xpGained"] = 0x0),
  (_0x1d83bb["prototype"]["goalScorer"] = ""),
  (_0x1d83bb["prototype"]["timerTxt"] = null),
  (_0x1d83bb["prototype"]["timer"] = 0x0),
  (_0x166969["prototype"]["updateZ"] = function () {
    this["z"] = 0x186a2;
  }),
  (_0x166969["prototype"]["customDraw"] = function (_0x2f7c20) {
    this["updateTimer"]();
    if (this["timer"] > 0x3) {
      _0x587de3["save"]();
      var _0x3a4004 = _0x587de3["globalAlpha"];
      (_0x587de3["globalAlpha"] = 0.25 * _0x3a4004),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](0x0, 0x0, this["rad"], 0x0, 0x2 * Math["PI"], ![]),
        _0x587de3["arc"](0x0, 0x0, this["rad"] - 0x14, 0x0, 0x2 * Math["PI"], !![]),
        (_0x587de3["fillStyle"] = "#ff9000"),
        _0x587de3["closePath"](),
        _0x587de3["fill"](),
        _0x587de3["restore"]();
    }
    this["timerTxt"] != null && ((this["timerTxt"]["x"] = 0x0), (this["timerTxt"]["y"] = -this["rad"]), this["timerTxt"]["draw"]());
  }),
  (_0x166969["prototype"]["readCustomData_onNewlyVisible"] = function (_0x3cbfdf) {
    _0x166969["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x3cbfdf),
      (this["alltimeGoals"] = _0x3cbfdf["readUInt16"]()),
      (this["goalScorer"] = _0x3cbfdf["readString"]()),
      (this["timer"] = _0x3cbfdf["readUInt8"]());
  }),
  (_0x166969["prototype"]["readUpdatedProperty"] = function (_0x44d9a3, _0x2c7467) {
    _0x44d9a3 == _0x1dc07e && (this["timer"] = _0x2c7467["readUInt8"]());
  }),
  (_0x166969["prototype"]["setTimer"] = function (_0x42f342) {
    var _0x18e56a = _0x42f342,
      _0x5cbdc7 = 0x10;
    null == this["timerTxt"]
      ? ((this["timerTxt"] = new _0x413af8(_0x5cbdc7, "#ffd800")),
        (this["timerTxt"]["strokeW"] = 0x2),
        (this["timerTxt"]["multiLine"] = !![]),
        (this["timerTxt"]["renderScale"] = 0x3),
        this["timerTxt"]["setText"](_0x18e56a))
      : (this["timerTxt"]["setFontSize"](_0x5cbdc7), this["timerTxt"]["setText"](_0x18e56a));
  }),
  (_0x166969["prototype"]["updateTimer"] = function () {
    this["timer"] = Math["round"](this["timer"]);
    var _0x2dcb86 = this["timer"];
    switch (this["timer"]) {
      case 0xa:
      case 0x9:
      case 0x8:
        _0x2dcb86 = "GOAAAAAL!!!";
        break;
      case 0x7:
      case 0x6:
      case 0x5:
        _0x2dcb86 = this["goalScorer"];
        break;
      case 0x4:
      case 0x3:
      case 0x2:
        _0x2dcb86 = "TOTAL GOALS " + this["alltimeGoals"];
        break;
      default:
        _0x2dcb86 = "";
        break;
    }
    this["setTimer"](_0x2dcb86);
  });
var _0x525538 = 0x7d;

function _0x166969() {
  _0x166969["superClass"]["call"](this), (this["hasAdLoaded"] = ![]);
}
(window["AbilityObjGoalScored"] = _0x166969), _0x17bf26["setCustomClassForGameObjType"](_0x166969, _0x5aa814, _0x525538);
var _0x605631 = _0x605631,
  _0x48c344 = _0x3799d1;
(_0x605631["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x605631["prototype"]["constructor"] = _0x605631),
  (_0x605631["superClass"] = _0x48c344),
  (_0x605631["prototype"]["animalInfo"] = function () {
    var _0x3f6cc5 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x3f6cc5["aniName"] = "Raven";
        break;
      case 0xdc:
        _0x3f6cc5["aniName"] = "Muscipula Raven";
        break;
    }
    return (
      (_0x3f6cc5["aniCol"] = "#FF9000"),
      (_0x3f6cc5["skinName"] = this["getSkinName"]()),
      (_0x3f6cc5["upgradeText"] =
        "UPGRADED to " + _0x3f6cc5["aniName"] + "!\x0aHold W to fly around from Tress/Hills.\x0a(Hint: Use ability on land to scare animals) "),
      _0x3f6cc5
    );
  }),
  (_0x605631["prototype"]["getAbilityInfo"] = function (_0x56da69) {
    var _0xf0723a = {};
    return (
      (_0xf0723a["abilName"] = "Loud Caw!"),
      (_0xf0723a["abilImg"] = "abilities/Caw-Mimic.svg"),
      (_0xf0723a["skinThemeID"] = this["skinThemeID"]),
      (_0xf0723a["mopeSeasonID"] = this["mopeSeasonID"]),
      _0xf0723a
    );
  }),
  (_0x605631["prototype"]["getSkinName"] = function () {
    return this["getSpeciesPath"]() + this["getSubSpecies"]() + "/raven" + (this["specType"] == 0x0 ? "" : this["specType"]);
  }),
  (_0x605631["prototype"]["getSpeciesPath"] = function () {
    return "forest/raven/" + this["animalSpecies"];
  }),
  (_0x605631["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x605631["prototype"]["getWing"] = function (_0x1ceab5, _0x3cec6f, _0xd54c83) {
    var _0x3555c4 = "skins/" + this["getSpeciesPath"]() + "/";
    return (_0x3555c4 += _0x1ceab5 + "_wing" + _0x3cec6f + ".png"), _0x3555c4;
  }),
  (_0x605631["prototype"]["getHead"] = function (_0x5adaf3, _0x4150b9) {
    var _0x4bade1 = "skins/" + this["getSpeciesPath"]() + "/";
    return (_0x4bade1 += _0x5adaf3 + "_head.png"), _0x4bade1;
  });
var _0x31dd0c = 0x0,
  _0x309ea2 = 1.25,
  _0x543b93 = 0x5,
  _0x46d468 = 0x1;
(_0x605631["prototype"]["biteStart"] = 0x0),
  (_0x605631["prototype"]["flapAmount"] = 0x3),
  (_0x605631["prototype"]["flapDur"] = 0.7),
  (_0x605631["prototype"]["drawSkinCustomization"] = function () {
    if (!this["flag_usingAbility"]) {
      this["biteStart"] = 0x0;
      return;
    } else {
      if (!this["flag_flying"]) {
        this["biteStart"] == 0x0 && (this["biteStart"] = _0x168a54);
        if (this["specType"] != 0x0 && this["specType"] != undefined) {
          var _0x42519a = this["getSkinImageObj"]("skins/" + this["getSpeciesPath"]() + "/raven_head1.png"),
            _0x66a9b2 = (_0x168a54 - this["biteStart"]) / 0x3e8,
            _0x253bc2 = this["skinScale"] * 1.1,
            _0x237b73 = this["skinRad"];
          _0x686fd = !(_0x57ae6d == 0x2) ? _0x120bbb(_0x66a9b2, this["flapDur"], 0.05, 0x2) : 0.05;
          var _0x1e24e7 = this["getSkinImageObj"](this["getWing"]("raven", 0x1, !![]));
          if (_0x1e24e7) {
            _0x587de3["save"]();
            var _0x2a570d = -(-0.2 + _0x686fd) * _0x2f9e35,
              _0x237b73 = this["rad"] * 0.9;
            _0x587de3["rotate"](_0x3d960f(_0x543b93) + _0x2a570d);
            var _0x38bf4d = 0x0,
              _0x524521 = this["rad"],
              _0x3dcf5e = _0x237b73 * 0x2 * 0.62,
              _0x406df5 = _0x237b73 * 2.5,
              _0x58d6fb = _0x31dd0c,
              _0x3e1e6a = _0x309ea2;
            _0x587de3["drawImage"](_0x1e24e7, _0x38bf4d + _0x3dcf5e * -_0x58d6fb, _0x524521 + _0x406df5 * -_0x3e1e6a, _0x3dcf5e, _0x406df5),
              _0x587de3["restore"]();
          }
          var _0x1e24e7 = this["getSkinImageObj"](this["getWing"]("raven", 0x2, !![]));
          if (_0x1e24e7) {
            _0x587de3["save"]();
            var _0x2a570d = -(-0.2 + _0x686fd) * _0x3d960f(-0x5a),
              _0x237b73 = this["rad"] * 0.9;
            _0x587de3["rotate"](_0x3d960f(-_0x543b93) + _0x2a570d);
            var _0x38bf4d = 0x0,
              _0x524521 = this["rad"],
              _0x3dcf5e = _0x237b73 * 0x2 * 0.62,
              _0x406df5 = _0x237b73 * 2.5,
              _0x58d6fb = _0x46d468,
              _0x3e1e6a = _0x309ea2;
            _0x587de3["drawImage"](_0x1e24e7, _0x38bf4d + _0x3dcf5e * -_0x58d6fb, _0x524521 + _0x406df5 * -_0x3e1e6a, _0x3dcf5e, _0x406df5),
              _0x587de3["restore"]();
          }
          if (_0x42519a) {
            _0x686fd = 0x0;
            !this["flag_flying"] &&
              (_0x686fd = !(_0x57ae6d == 0x2) ? _0x120bbb(_0x66a9b2, this["flapDur"], this["flapAmount"], 0x2) : this["flapAmount"]);
            _0x587de3["save"]();
            var _0x237b73 = this["rad"];
            _0x587de3["drawImage"](
              _0x42519a,
              -_0x237b73 * _0x253bc2,
              (-_0x237b73 + _0x237b73 * 0.1) * _0x253bc2 + _0x686fd,
              0x2 * _0x237b73 * _0x253bc2,
              0x2 * _0x237b73 * _0x253bc2
            ),
              _0x587de3["restore"]();
          }
        }
      } else {
        if (this["flag_flying"]) {
          var _0x253bc2 = 0x1f4 / 0x154;
          if (this["flag_flying"] && !this["flag_isGrabbed"]) {
            _0x587de3["save"]();
            var _0x66a9b2 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
              _0x686fd = !(_0x57ae6d == 0x2 || _0x34fedb) ? _0x120bbb(_0x66a9b2, 0.5, 0.3, 0x2) : this["birdNoAnimationFlyWingAngle"],
              _0x1e24e7 = this["getSkinImageObj"](this["getWing"]("raven", 0x1, !![]));
            if (_0x1e24e7) {
              _0x587de3["save"]();
              var _0x2a570d = -(-0.2 + _0x686fd) * _0x2f9e35,
                _0x237b73 = this["rad"] * 0.8;
              _0x587de3["rotate"](_0x3d960f(0x2d) + _0x2a570d);
              var _0x38bf4d = 0x0,
                _0x524521 = this["rad"],
                _0x3dcf5e = _0x237b73 * 0x2 * 0.62,
                _0x406df5 = _0x237b73 * 2.5,
                _0x58d6fb = 0.2,
                _0x3e1e6a = 1.7;
              _0x587de3["drawImage"](_0x1e24e7, _0x38bf4d + _0x3dcf5e * -_0x58d6fb, _0x524521 + _0x406df5 * -_0x3e1e6a, _0x3dcf5e, _0x406df5),
                _0x587de3["restore"]();
            }
            var _0x1e24e7 = this["getSkinImageObj"](this["getWing"]("raven", 0x2, !![]));
            if (_0x1e24e7) {
              _0x587de3["save"]();
              var _0x2a570d = -(-0.2 + _0x686fd) * _0x3d960f(-0x5a),
                _0x237b73 = this["rad"] * 0.8;
              _0x587de3["rotate"](_0x3d960f(-0x2d) + _0x2a570d);
              var _0x38bf4d = 0x0,
                _0x524521 = this["rad"],
                _0x3dcf5e = _0x237b73 * 0x2 * 0.62,
                _0x406df5 = _0x237b73 * 2.5,
                _0x58d6fb = 0.8,
                _0x3e1e6a = 1.7;
              _0x587de3["drawImage"](_0x1e24e7, _0x38bf4d + _0x3dcf5e * -_0x58d6fb, _0x524521 + _0x406df5 * -_0x3e1e6a, _0x3dcf5e, _0x406df5),
                _0x587de3["restore"]();
            }
            _0x587de3["restore"]();
          }
          if (this["specType"] != 0x0 && this["specType"] != undefined) {
            var _0x42519a = this["getSkinImageObj"](this["getHead"]("raven", !![]));
            if (_0x42519a) {
              _0x587de3["save"]();
              var _0x237b73 = this["rad"];
              _0x587de3["drawImage"](
                _0x42519a,
                -_0x237b73 * _0x253bc2,
                (-_0x237b73 + _0x237b73 * 0.1) * _0x253bc2,
                0x2 * _0x237b73 * _0x253bc2,
                0x2 * _0x237b73 * _0x253bc2
              ),
                _0x587de3["restore"]();
            }
          }
        }
      }
    }
  });

function _0x605631() {
  _0x605631["superClass"]["call"](this, _0x3fb3b2);
}
(window["Raven"] = _0x605631), _0x17bf26["setCustomClassForGameObjType"](_0x605631, _0x3fb3b2, _0x6af42d);
var _0x1d83bb = _0x706121,
  _0x48c344 = _0xe4ec38;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344),
  (_0x706121["prototype"]["updateZ"] = function () {
    this["z"] = 0x186a2;
  }),
  (_0x706121["prototype"]["customDraw"] = function (_0xde1641) {
    _0x587de3["save"]();
    var _0x3ceb3f = _0x587de3["globalAlpha"];
    (_0x587de3["globalAlpha"] = 0.1 * _0x3ceb3f), _0x440ef0(0x0, 0x0, this["rad"], "#755A2A"), _0x587de3["restore"](), this["drawChat"]();
  }),
  (_0x706121["prototype"]["drawChat"] = function () {
    if (this["aLine"] == null) return;
    _0x587de3["save"](),
      (_0x587de3["font"] = "10px Arial"),
      (_0x587de3["lineWidth"] = 0x1),
      (_0x587de3["textAlign"] = "center"),
      (_0x587de3["textBaseline"] = "middle");
    var _0x1aded6 = this["aLine"],
      _0x1126e4 = _0x168a54 > _0x1aded6["chatFadeT"] ? 0x0 : 0x1;
    (_0x1aded6["chatA"] += (_0x1126e4 - _0x1aded6["chatA"]) * 0.1), (_0x587de3["shadowOffsetX"] = 0x0), (_0x587de3["shadowOffsetY"] = 0x0);
    _0x1aded6["chatA"] < 0.02 && (this["aLine"] = null);
    var _0x2b365b = _0x587de3["measureText"](_0x1aded6["chatTxt"])["width"],
      _0x262123 = 0xa,
      _0x132190 = 0x1,
      _0x2fd519 = 0x1;
    (_0x587de3["globalAlpha"] = 0.8 * _0x1aded6["chatA"]),
      (_0x587de3["fillStyle"] = _0x7a849(this["curBiome"])),
      _0x587de3["fillRect"](
        this["x"] - _0x132190 - _0x2b365b / 0x2,
        this["y"] - this["rad"] - _0x262123 / 0x2 - _0x2fd519,
        _0x2b365b + _0x132190 * 0x2,
        _0x262123 + _0x2fd519 * 0x2
      ),
      (_0x587de3["fillStyle"] = "#F1C34C"),
      !(_0x57ae6d == 0x2) && ((_0x587de3["shadowOffsetX"] = 0x1), (_0x587de3["shadowOffsetY"] = 0x1), (_0x587de3["shadowColor"] = "black")),
      (_0x587de3["globalAlpha"] = _0x1aded6["chatA"]),
      _0x587de3["fillText"](_0x1aded6["chatTxt"], this["x"], this["y"] - this["rad"]),
      _0x587de3["restore"]();
  });

function _0x706121() {
  _0x706121["superClass"]["call"](this);
}
(_0x706121["prototype"]["aLine"] = null),
  (_0x706121["prototype"]["readCustomData_onNewlyVisible"] = function (_0x54429a) {
    _0x706121["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x54429a),
      (this["aLine"] = {
        chatTxt: "CAW!!!",
        chatFadeT: _0x168a54 + 0x7d0,
        chatA: 0x0,
      });
  }),
  (window["RavenCaw"] = _0x706121),
  _0x17bf26["setCustomClassForGameObjType"](_0x706121, _0x5aa814, _0xaf36c);
var _0x338745 = _0x338745,
  _0x48c344 = _0x3799d1;
(_0x338745["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x338745["prototype"]["constructor"] = _0x338745),
  (_0x338745["superClass"] = _0x48c344),
  (_0x338745["prototype"]["animalInfo"] = function () {
    var _0x4b9914 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x4b9914["aniName"] = "Kakapo";
        break;
      case 0xca:
        _0x4b9914["aniName"] = "Wind-up Kakapo";
        break;
    }
    return (
      (_0x4b9914["aniCol"] = "#FF9000"),
      (_0x4b9914["skinName"] = this["getSkinName"]()),
      (_0x4b9914["upgradeText"] = "UPGRADED to " + _0x4b9914["aniName"] + "!\x0aHold W to hop around.\x0a(Hint: Use ability on prey to stun them) "),
      _0x4b9914
    );
  }),
  (_0x338745["prototype"]["getSkinName"] = function () {
    return this["getSpeciesPath"]() + this["getSubSpecies"]() + "/kakapo" + (this["specType"] == 0x0 ? "" : this["specType"]);
  }),
  (_0x338745["prototype"]["getSpeciesPath"] = function () {
    return "forest/kakapo/" + this["animalSpecies"];
  }),
  (_0x338745["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x338745["prototype"]["getWing"] = function (_0x56ce9a, _0x190e30, _0x4f1e5f) {
    var _0x2ab6dd = "skins/" + this["getSpeciesPath"]() + "/";
    return (_0x2ab6dd += _0x56ce9a + "_wing" + _0x190e30 + ".png"), _0x2ab6dd;
  }),
  (_0x338745["prototype"]["getHead"] = function (_0x52a892, _0x49656f) {
    var _0x2312f0 = "skins/" + this["getSpeciesPath"]() + "/";
    return (_0x2312f0 += _0x52a892 + "_head.png"), _0x2312f0;
  });
var _0x5c4c54 = 0x0,
  _0x5b5195 = 1.25,
  _0x5f5a48 = 0x5,
  _0x37c494 = 0x1;
(_0x338745["prototype"]["biteStart"] = 0x0),
  (_0x338745["prototype"]["flapAmount"] = 0x3),
  (_0x338745["prototype"]["flapDur"] = 0.7),
  (_0x338745["prototype"]["drawSkinCustomization"] = function () {
    if (!this["flag_usingAbility"]) {
      this["biteStart"] = 0x0;
      return;
    } else {
      if (!this["flag_flying"]) {
        this["biteStart"] == 0x0 && (this["biteStart"] = _0x168a54);
        if (this["specType"] != 0x0 && this["specType"] != undefined) {
          var _0x4a6a1b = this["getSkinImageObj"]("skins/" + this["getSpeciesPath"]() + "/kakapo_head.png"),
            _0xea760b = (_0x168a54 - this["biteStart"]) / 0x3e8,
            _0x27e89e = this["skinScale"] * 1.1,
            _0x344ee5 = this["skinRad"];
          _0x31284e = !(_0x57ae6d == 0x2) ? _0x120bbb(_0xea760b, this["flapDur"], 0.05, 0x2) : 0.05;
          var _0x3a11e0 = this["getSkinImageObj"](this["getWing"]("kakapo", 0x1, !![]));
          if (_0x3a11e0) {
            _0x587de3["save"]();
            var _0x2ed099 = -(-0.2 + _0x31284e) * _0x2f9e35,
              _0x344ee5 = this["rad"] * 0.9;
            _0x587de3["rotate"](_0x3d960f(_0x5f5a48) + _0x2ed099);
            var _0x22b161 = 0x0,
              _0x5064e8 = this["rad"],
              _0x3d1360 = _0x344ee5 * 0x2 * 0.62,
              _0x336741 = _0x344ee5 * 2.5,
              _0x29261a = _0x5c4c54,
              _0xfddb87 = _0x5b5195;
            _0x587de3["drawImage"](_0x3a11e0, _0x22b161 + _0x3d1360 * -_0x29261a, _0x5064e8 + _0x336741 * -_0xfddb87, _0x3d1360, _0x336741),
              _0x587de3["restore"]();
          }
          var _0x3a11e0 = this["getSkinImageObj"](this["getWing"]("kakapo", 0x2, !![]));
          if (_0x3a11e0) {
            _0x587de3["save"]();
            var _0x2ed099 = -(-0.2 + _0x31284e) * _0x3d960f(-0x5a),
              _0x344ee5 = this["rad"] * 0.9;
            _0x587de3["rotate"](_0x3d960f(-_0x5f5a48) + _0x2ed099);
            var _0x22b161 = 0x0,
              _0x5064e8 = this["rad"],
              _0x3d1360 = _0x344ee5 * 0x2 * 0.62,
              _0x336741 = _0x344ee5 * 2.5,
              _0x29261a = _0x37c494,
              _0xfddb87 = _0x5b5195;
            _0x587de3["drawImage"](_0x3a11e0, _0x22b161 + _0x3d1360 * -_0x29261a, _0x5064e8 + _0x336741 * -_0xfddb87, _0x3d1360, _0x336741),
              _0x587de3["restore"]();
          }
          if (_0x4a6a1b) {
            _0x31284e = 0x0;
            !this["flag_flying"] &&
              (_0x31284e = !(_0x57ae6d == 0x2) ? _0x120bbb(_0xea760b, this["flapDur"], this["flapAmount"], 0x2) : this["flapAmount"]);
            _0x587de3["save"]();
            var _0x344ee5 = this["rad"];
            _0x587de3["drawImage"](
              _0x4a6a1b,
              -_0x344ee5 * _0x27e89e,
              (-_0x344ee5 + _0x344ee5 * 0.1) * _0x27e89e + _0x31284e,
              0x2 * _0x344ee5 * _0x27e89e,
              0x2 * _0x344ee5 * _0x27e89e
            ),
              _0x587de3["restore"]();
          }
        }
      } else {
        if (this["flag_flying"]) {
          var _0x27e89e = 0x1f4 / 0x154;
          if (this["flag_flying"] && !this["flag_isGrabbed"]) {
            _0x587de3["save"]();
            var _0xea760b = (_0x168a54 - this["spawnTime"]) / 0x3e8,
              _0x31284e = !(_0x57ae6d == 0x2 || _0x34fedb) ? _0x120bbb(_0xea760b, 0.5, 0.3, 0x2) : this["birdNoAnimationFlyWingAngle"],
              _0x3a11e0 = this["getSkinImageObj"](this["getWing"]("kakapo", 0x1, !![]));
            if (_0x3a11e0) {
              _0x587de3["save"]();
              var _0x2ed099 = -(-0.2 + _0x31284e) * _0x2f9e35,
                _0x344ee5 = this["rad"] * 0.8;
              _0x587de3["rotate"](_0x3d960f(0x2d) + _0x2ed099);
              var _0x22b161 = 0x0,
                _0x5064e8 = this["rad"],
                _0x3d1360 = _0x344ee5 * 0x2 * 0.62,
                _0x336741 = _0x344ee5 * 2.5,
                _0x29261a = 0.2,
                _0xfddb87 = 1.7;
              _0x587de3["drawImage"](_0x3a11e0, _0x22b161 + _0x3d1360 * -_0x29261a, _0x5064e8 + _0x336741 * -_0xfddb87, _0x3d1360, _0x336741),
                _0x587de3["restore"]();
            }
            var _0x3a11e0 = this["getSkinImageObj"](this["getWing"]("kakapo", 0x2, !![]));
            if (_0x3a11e0) {
              _0x587de3["save"]();
              var _0x2ed099 = -(-0.2 + _0x31284e) * _0x3d960f(-0x5a),
                _0x344ee5 = this["rad"] * 0.8;
              _0x587de3["rotate"](_0x3d960f(-0x2d) + _0x2ed099);
              var _0x22b161 = 0x0,
                _0x5064e8 = this["rad"],
                _0x3d1360 = _0x344ee5 * 0x2 * 0.62,
                _0x336741 = _0x344ee5 * 2.5,
                _0x29261a = 0.8,
                _0xfddb87 = 1.7;
              _0x587de3["drawImage"](_0x3a11e0, _0x22b161 + _0x3d1360 * -_0x29261a, _0x5064e8 + _0x336741 * -_0xfddb87, _0x3d1360, _0x336741),
                _0x587de3["restore"]();
            }
            _0x587de3["restore"]();
          }
          if (this["specType"] != 0x0 && this["specType"] != undefined) {
            var _0x4a6a1b = this["getSkinImageObj"](this["getHead"]("kakapo", !![]));
            if (_0x4a6a1b) {
              _0x587de3["save"]();
              var _0x344ee5 = this["rad"];
              _0x587de3["drawImage"](
                _0x4a6a1b,
                -_0x344ee5 * _0x27e89e,
                (-_0x344ee5 + _0x344ee5 * 0.1) * _0x27e89e,
                0x2 * _0x344ee5 * _0x27e89e,
                0x2 * _0x344ee5 * _0x27e89e
              ),
                _0x587de3["restore"]();
            }
          }
        }
      }
    }
  }),
  (_0x338745["prototype"]["getAbilityInfo"] = function (_0x2223a2) {
    var _0x15e386 = {};
    return (
      (_0x15e386["abilName"] = "Hop!"),
      (_0x15e386["abilImg"] = "abilities/Jump.svg"),
      (_0x15e386["skinThemeID"] = this["skinThemeID"]),
      (_0x15e386["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x15e386
    );
  });

function _0x338745() {
  _0x338745["superClass"]["call"](this, _0x3fb3b2);
}
(window["Kakapo"] = _0x338745), _0x17bf26["setCustomClassForGameObjType"](_0x338745, _0x3fb3b2, _0x190408);
var _0x16395d = _0x16395d,
  _0x48c344 = _0x3799d1;
(_0x16395d["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x16395d["prototype"]["constructor"] = _0x16395d),
  (_0x16395d["superClass"] = _0x48c344),
  (_0x16395d["prototype"]["objSkinSpotsCanvas"] = null),
  (_0x16395d["prototype"]["animalInfo"] = function () {
    var _0x3cbd78 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x3cbd78["aniName"] = "Mole";
        break;
      case 0x64:
        _0x3cbd78["aniName"] = "Zombie Mole";
        break;
      case 0xca:
        switch (this["animalSubSpecies"]) {
          case 0x0:
            _0x3cbd78["aniName"] = "Toxic Mole";
            break;
          case 0x1:
            _0x3cbd78["aniName"] = "Cytokinetic Mole";
            break;
        }
        break;
    }
    return (
      (_0x3cbd78["aniDesc"] = ""),
      (_0x3cbd78["upgradeText"] =
        "UPGRADED to " + _0x3cbd78["aniName"] + "!\x0a Hold W to dig underground!\x0aGo under anything, do surprise attacks!"),
      (_0x3cbd78["aniCol"] = "#4C4A45"),
      (_0x3cbd78["skinName"] = this["getSkinName"]()),
      _0x3cbd78
    );
  }),
  (_0x16395d["prototype"]["getSkinName"] = function () {
    return "land/mole/" + this["animalSpecies"] + this["getSubSpecies"]() + "/mole";
  }),
  (_0x16395d["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return this["animalSpecies"] === 0xca ? "/" + this["animalSubSpecies"] : "";
  }),
  (_0x16395d["prototype"]["getAbilityInfo"] = function (_0x3baf40) {
    var _0x74f541 = {};
    return (
      (_0x74f541["abilName"] = "Hold to Dig"),
      (_0x74f541["abilImg"] = "abilities/Dig.svg"),
      (_0x74f541["skinThemeID"] = this["skinThemeID"]),
      (_0x74f541["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x74f541
    );
  });

function _0x16395d() {
  _0x16395d["superClass"]["call"](this, _0x3fb3b2);
}
(window["Mole"] = _0x16395d), _0x17bf26["setCustomClassForGameObjType"](_0x16395d, _0x3fb3b2, _0x108a58);
var _0x48c344 = _0x307a43;
(_0x2bcfe3["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x2bcfe3["prototype"]["constructor"] = _0x2bcfe3),
  (_0x2bcfe3["superClass"] = _0x48c344),
  (_0x2bcfe3["prototype"]["updateZ"] = function () {
    this["z"] = 0x3f2;
  }),
  (_0x2bcfe3["prototype"]["setSkinPath"] = function () {
    this["objSkinPath"] = "img/coin/coin" + (this["isEdibleOutlined"]() ? "_e" : "") + ".png";
  }),
  (_0x2bcfe3["prototype"]["customDraw"] = function (_0x262527) {
    var _0x4fb474 = this["getSkinImageObj"](this["objSkinPath"]);
    if (_0x4fb474) {
      var _0x1850c7 = this["rad"];
      _0x587de3["drawImage"](_0x4fb474, -_0x1850c7, -_0x1850c7, 0x2 * _0x1850c7, 0x2 * _0x1850c7);
    }
  });
var _0x49c76a = 0x84;

function _0x2bcfe3() {
  _0x2bcfe3["superClass"]["call"](this, _0x49c76a), (_0x2bcfe3["prototype"]["easeAngleChanges"] = !![]);
}
(window["MopeCoin"] = _0x2bcfe3), _0x17bf26["setCustomClassForGameObjType"](_0x2bcfe3, _0x49c76a);
var _0x48c344 = _0x307a43;
(_0x2e5a1b["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x2e5a1b["prototype"]["constructor"] = _0x2e5a1b),
  (_0x2e5a1b["superClass"] = _0x48c344),
  (_0x2e5a1b["prototype"]["color"] = "limegreen"),
  (_0x2e5a1b["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"] + 0xa98670;
  }),
  (_0x2e5a1b["prototype"]["customDraw"] = function (_0x359f77) {
    _0x587de3["save"]();
    var _0x3d792e = 0.4,
      _0x370d1f = 0x8;
    this["shrinkRad"] > 0xfa &&
      (_0x587de3["save"](),
      (_0x587de3["globalAlpha"] = 0.1),
      _0x39e127(0x0, 0x0, this["shrinkRad"], _0x370d1f * 0.5, this["color"]),
      _0x587de3["restore"]());
    _0x587de3["save"](),
      (_0x587de3["globalAlpha"] = _0x3d792e + 0.3),
      _0x39e127(0x0, 0x0, this["rad"], _0x370d1f, this["color"]),
      _0x587de3["restore"]();
    this["rad"] > 0x5dc &&
      (_0x587de3["save"](),
      (_0x587de3["globalAlpha"] = _0x3d792e),
      _0x39e127(0x0, 0x0, this["shrinkedRad"], _0x370d1f, _0xab8999),
      _0x587de3["restore"]());
    var _0x5e9abe = _0x4454f9 * (_0x27ef2a / 0x2),
      _0xdeccbe = _0x4454f9 * (_0x2c6299 / 0x2),
      _0x3cf81c = _0x3d792e - 0.1,
      _0x44102f = this["color"],
      _0x5853ea = _0x2c6299,
      _0x245db0 = _0x27ef2a,
      _0x1b8c20 = _0x5853ea - this["x"],
      _0x4967fb = _0x245db0 - this["y"],
      _0x263858 = this["x"],
      _0x4e4063 = _0x4967fb,
      _0x2996a1 = _0x263858,
      _0x2b1bc5 = this["y"],
      _0x1efbfb = _0x1b8c20,
      _0x5e4c2c = _0x2b1bc5;
    (_0x1b8c20 = _0x4454f9 * _0x1b8c20),
      (_0x4967fb = _0x4454f9 * _0x4967fb),
      (_0x263858 = _0x4454f9 * _0x263858),
      (_0x4e4063 = _0x4454f9 * _0x4e4063),
      (_0x2996a1 = _0x4454f9 * _0x2996a1),
      (_0x2b1bc5 = _0x4454f9 * _0x2b1bc5),
      (_0x1efbfb = _0x4454f9 * _0x1efbfb),
      (_0x5e4c2c = _0x4454f9 * _0x5e4c2c),
      this["drawDangerAreaSegment2"](0x0, _0x44102f, _0x3cf81c, _0x4967fb, _0x1b8c20),
      this["drawDangerAreaSegment2"](Math["PI"] * 0.5, _0x44102f, _0x3cf81c, _0x263858, _0x4e4063),
      this["drawDangerAreaSegment2"](Math["PI"] * 0x1, _0x44102f, _0x3cf81c, _0x2b1bc5, _0x2996a1),
      this["drawDangerAreaSegment2"](Math["PI"] * 1.5, _0x44102f, _0x3cf81c, _0x1efbfb, _0x5e4c2c),
      _0x587de3["restore"]();
  }),
  (_0x2e5a1b["prototype"]["drawDangerAreaSegment2"] = function (_0x238386, _0x2086da, _0x58b929, _0x25d2fc, _0x3f4f16) {
    _0x587de3["save"](),
      (_0x587de3["globalAlpha"] = _0x58b929),
      (_0x587de3["fillStyle"] = _0x2086da),
      _0x587de3["beginPath"](),
      _0x587de3["rotate"](_0x238386),
      _0x587de3["arc"](0x0, 0x0, this["rad"], 0x0, Math["PI"] * 0.5, ![]),
      _0x587de3["lineTo"](0x0, _0x25d2fc),
      _0x587de3["lineTo"](_0x3f4f16, _0x25d2fc),
      _0x587de3["lineTo"](_0x3f4f16, 0x0),
      _0x587de3["closePath"](),
      _0x587de3["fill"](),
      _0x587de3["restore"]();
  }),
  (_0x2e5a1b["prototype"]["moveUpdate"] = function () {
    var _0x9d2a5f = (_0x168a54 - this["updateTime"]) / 0x3e8 / _0x5a206b;
    return (
      (_0x9d2a5f = 0x0 > _0x9d2a5f ? 0x0 : 0x1 < _0x9d2a5f ? 0x1 : _0x9d2a5f),
      (this["x"] = _0x9d2a5f * (this["nx"] - this["ox"]) + this["ox"]),
      (this["y"] = _0x9d2a5f * (this["ny"] - this["oy"]) + this["oy"]),
      (this["rad"] += (this["nRad"] - this["rad"]) * 0.1),
      Math["min"](0x1, _0x9d2a5f)
    );
  }),
  (_0x2e5a1b["prototype"]["readUpdatedProperty"] = function (_0x9e42a9, _0x1d56bf) {
    _0x9e42a9 == _0x3a95a6 && (this["shrinkRad"] = _0x1d56bf["readUInt32"]() / 0x4);
  }),
  (_0x2e5a1b["prototype"]["readCustomData_onNewlyVisible"] = function (_0x479d72) {
    this["shrinkRad"] = _0x479d72["readUInt32"]() / 0x4;
  });

function _0x2e5a1b() {
  _0x2e5a1b["superClass"]["call"](this, _0x49ed64),
    (_0x2e5a1b["prototype"]["easeAngleChanges"] = !![]),
    (this["color"] = _0x3a1189 == _0x4406b7 ? "limegreen" : "red");
}
(window["SafeArea"] = _0x2e5a1b), _0x17bf26["setCustomClassForGameObjType"](_0x2e5a1b, _0x49ed64);
var _0x48c344 = _0x3799d1;
(_0x42c255["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x42c255["prototype"]["constructor"] = _0x42c255),
  (_0x42c255["superClass"] = _0x48c344),
  (_0x42c255["prototype"]["animalInfo"] = function () {
    var _0xb0e900 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0xb0e900["aniName"] = "Snow Leopard!";
        break;
      case 0x64:
        _0xb0e900["aniName"] = "Frostaline";
        break;
      case 0xc9:
        _0xb0e900["aniName"] = "Coral Queen";
        break;
      case 0xca:
        _0xb0e900["aniName"] = "Astral Leopard";
        break;
      case 0xcc:
        _0xb0e900["aniName"] = "Martian Leopard";
        break;
    }
    return (
      (_0xb0e900["skinName"] = this["getSkinName"]()),
      (_0xb0e900["aniDesc"] = ""),
      (_0xb0e900["upgradeText"] = "UPGRADED to " + _0xb0e900["aniName"] + "!\x0a Press W to get a speed boost! (Every 8 seconds)!"),
      (_0xb0e900["aniCol"] = "#cfcfcf"),
      _0xb0e900
    );
  }),
  (_0x42c255["prototype"]["getSkinName"] = function () {
    return "arctic/snowleopard/" + this["animalSpecies"] + this["getSubSpecies"]() + "/snowleopard";
  }),
  (_0x42c255["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x42c255["prototype"]["getAbilityInfo"] = function (_0x3d70c3) {
    var _0x3328d6 = {};
    return (
      (_0x3328d6["abilName"] = "Extra Boost"),
      (_0x3328d6["abilImg"] = "abilities/Dash-Boost.svg"),
      (_0x3328d6["skinThemeID"] = this["skinThemeID"]),
      (_0x3328d6["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x3328d6
    );
  });

function _0x42c255() {
  _0x42c255["superClass"]["call"](this, _0x3fb3b2);
}
(window["SnowLeopard"] = _0x42c255), _0x17bf26["setCustomClassForGameObjType"](_0x42c255, _0x3fb3b2, _0x72b8ae);
var _0x48c344 = _0x307a43;
(_0x2e71c4["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x2e71c4["prototype"]["constructor"] = _0x2e71c4),
  (_0x2e71c4["superClass"] = _0x48c344),
  (_0x2e71c4["prototype"]["updateZ"] = function () {
    this["z"] = 0xf4240;
  });
var _0x423a88 = -0.3,
  _0x3220ce = -0.2,
  _0x549ac6 = 0.3,
  _0x416be4 = -0.2,
  _0x185be7 = 0.2;
(_0x2e71c4["prototype"]["customDraw"] = function (_0x224e48) {
  var _0x141ba6 = 0x1f4 / 0x154;
  _0x587de3["save"](), _0x587de3["rotate"](this["angle"]);
  var _0x13da5d = this["rad"],
    _0x18ecea = this["getSkinImageObj"](this["getBody"]("battleduck", !![]));
  _0x18ecea &&
    (_0x587de3["save"](),
    _0x587de3["drawImage"](_0x18ecea, -_0x13da5d * _0x141ba6, -_0x13da5d * _0x141ba6, 0x2 * _0x13da5d * _0x141ba6, 0x2 * _0x13da5d * _0x141ba6),
    _0x587de3["restore"]());
  var _0x527329 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
    _0x5408ed = !(_0x57ae6d == 0x2 || _0x34fedb) ? _0x120bbb(_0x527329, 2.5, 0.3, 0x2) : this["birdNoAnimationFlyWingAngle"],
    _0x13b555 = this["getSkinImageObj"](this["getWing"]("battleduck", 0x1, !![]));
  if (_0x13b555) {
    _0x587de3["save"]();
    var _0x278370 = -(-0.2 + _0x5408ed) * _0x2f9e35,
      _0x13da5d = this["rad"] * 0x1;
    _0x587de3["rotate"](_0x3d960f(0x2d) + _0x278370);
    var _0x22f819 = 0x0,
      _0xdc55d5 = this["rad"],
      _0x119702 = _0x13da5d * 0x2 * 0.62,
      _0x164467 = _0x13da5d * 2.5,
      _0x33e51b = 0.2 + _0x423a88,
      _0x81cc4e = 1.7 + _0x3220ce;
    _0x587de3["drawImage"](_0x13b555, _0x22f819 + _0x119702 * -_0x33e51b, _0xdc55d5 + _0x164467 * -_0x81cc4e, _0x119702, _0x164467),
      _0x587de3["restore"]();
  }
  var _0x13b555 = this["getSkinImageObj"](this["getWing"]("battleduck", 0x2, !![]));
  if (_0x13b555) {
    _0x587de3["save"]();
    var _0x278370 = -(-0.2 + _0x5408ed) * _0x3d960f(-0x5a),
      _0x13da5d = this["rad"] * 0x1;
    _0x587de3["rotate"](_0x3d960f(-0x2d) + _0x278370);
    var _0x22f819 = 0x0,
      _0xdc55d5 = this["rad"],
      _0x119702 = _0x13da5d * 0x2 * 0.62,
      _0x164467 = _0x13da5d * 2.5,
      _0x33e51b = 0.8 + _0x549ac6,
      _0x81cc4e = 1.7 + _0x416be4;
    _0x587de3["drawImage"](_0x13b555, _0x22f819 + _0x119702 * -_0x33e51b, _0xdc55d5 + _0x164467 * -_0x81cc4e, _0x119702, _0x164467),
      _0x587de3["restore"]();
  }
  var _0x4651bd = this["getSkinImageObj"](this["getHead"]("battleduck", !![]));
  if (_0x4651bd) {
    _0x587de3["save"]();
    var _0x13da5d = this["rad"];
    _0x587de3["drawImage"](
      _0x4651bd,
      -_0x13da5d * _0x141ba6,
      (-_0x13da5d + _0x13da5d * _0x185be7) * _0x141ba6,
      0x2 * _0x13da5d * _0x141ba6,
      0x2 * _0x13da5d * _0x141ba6
    ),
      _0x587de3["restore"]();
  }
  _0x587de3["restore"]();
}),
  (_0x2e71c4["prototype"]["getSpeciesPath"] = function (_0x157034) {
    return _0x157034 + "/" + this["speciesType"];
  }),
  (_0x2e71c4["prototype"]["getWing"] = function (_0x57f6e3, _0x34efe6, _0x14b486) {
    var _0x3c4b55 = "skins/" + (_0x14b486 ? this["getSpeciesPath"](_0x57f6e3) + "/" : _0x57f6e3 + "/");
    return (_0x3c4b55 += _0x57f6e3 + "_wing" + _0x34efe6 + ".png"), _0x3c4b55;
  }),
  (_0x2e71c4["prototype"]["getBody"] = function (_0x41e9c5, _0x5665dd) {
    var _0x17f048 = "skins/" + (_0x5665dd ? this["getSpeciesPath"](_0x41e9c5) + "/" : _0x41e9c5 + "/");
    return (_0x17f048 += _0x41e9c5 + "_body.png"), _0x17f048;
  }),
  (_0x2e71c4["prototype"]["getHead"] = function (_0x2dbac4, _0x7e4740) {
    var _0x3a916a = "skins/" + (_0x7e4740 ? this["getSpeciesPath"](_0x2dbac4) + "/" : _0x2dbac4 + "/");
    return (_0x3a916a += _0x2dbac4 + "_head.png"), _0x3a916a;
  });
var _0x2ec68f = 0x85;

function _0x2e71c4() {
  _0x2e71c4["superClass"]["call"](this, _0x2ec68f), console["log"]("@@@@@@@@@@@@ BATTLE DUCK SPAWNED @@@@@@@@@");
}
(window["BattleDuck"] = _0x2e71c4), _0x17bf26["setCustomClassForGameObjType"](_0x2e71c4, _0x2ec68f);
var _0xe9a088 = _0xe9a088,
  _0x48c344 = _0x3799d1;
(_0xe9a088["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0xe9a088["prototype"]["constructor"] = _0xe9a088),
  (_0xe9a088["superClass"] = _0x48c344),
  (_0xe9a088["prototype"]["objSkinSpotsCanvas"] = null),
  (_0xe9a088["prototype"]["animalInfo"] = function () {
    var _0x4a9cc8 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x4a9cc8["aniName"] = "Giraffe";
        break;
      case 0x1:
        _0x4a9cc8["aniName"] = "Momaffie";
        break;
      case 0x2:
        _0x4a9cc8["aniName"] = "Girabie";
        break;
      case 0x3:
        _0x4a9cc8["aniName"] = "Momaffie Family";
        break;
      case 0xca:
        switch (this["animalSubSpecies"]) {
          case 0x0:
            _0x4a9cc8["aniName"] = "Quilin Giraffe";
            break;
          case 0x1:
            _0x4a9cc8["aniName"] = "Draquorum";
        }
        break;
    }
    return (
      (_0x4a9cc8["upgradeText"] = "UPGRADED to " + _0x4a9cc8["aniName"] + "!\x0aGiraffe have huge legs and stomp anyone in their way!"),
      (_0x4a9cc8["aniCol"] = "#E9BD23"),
      (_0x4a9cc8["skinName"] = this["getSkinName"]()),
      _0x4a9cc8
    );
  }),
  (_0xe9a088["prototype"]["getSkinName"] = function () {
    let _0xfe295 = this["getSpeciesPath"]() + "/giraffe";
    if (this["id"] == 0x0 && this["animalSpecies"] == 0x3) _0xfe295 += "_family";
    return _0xfe295;
  }),
  (_0xe9a088["prototype"]["getSpeciesPath"] = function () {
    return "land/giraffe/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0xe9a088["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return this["animalSpecies"] === 0xca ? "/" + this["animalSubSpecies"] : "";
  }),
  (_0xe9a088["prototype"]["getAbilityInfo"] = function (_0x5eca19) {
    var _0x675672 = {};
    return (
      (_0x675672["abilName"] = "Stomp!"),
      (_0x675672["abilImg"] = "abilities/Stomp.svg"),
      (_0x675672["skinThemeID"] = this["skinThemeID"]),
      (_0x675672["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x675672
    );
  }),
  (_0xe9a088["prototype"]["isEdibleOutlined"] = function () {
    if (this["mommyID"] == _0x204989) return ![];
    return _0xe9a088["superClass"]["prototype"]["isEdibleOutlined"]["call"](this);
  }),
  (_0xe9a088["prototype"]["readCustomData_onNewlyVisible"] = function (_0x4de512) {
    _0xe9a088["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x4de512), (this["mommyID"] = _0x4de512["readUInt32"]());
  });

function _0xe9a088() {
  _0xe9a088["superClass"]["call"](this, _0x3fb3b2);
}
(window["Giraffe"] = _0xe9a088), _0x17bf26["setCustomClassForGameObjType"](_0xe9a088, _0x3fb3b2, _0x353380);
var _0x1ca7a1 = _0x1ca7a1,
  _0x48c344 = _0x3799d1;
(_0x1ca7a1["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1ca7a1["prototype"]["constructor"] = _0x1ca7a1),
  (_0x1ca7a1["superClass"] = _0x48c344),
  (_0x1ca7a1["prototype"]["objSkinSpotsCanvas"] = null),
  (_0x1ca7a1["prototype"]["getSkinName"] = function () {
    let _0x21e8fa = this["getSpeciesPath"]() + "/giraffe";
    if (this["specType"] > 0x0) _0x21e8fa += "" + this["specType"];
    if (this["id"] == 0x0 && this["animalSpecies"] == 0x2) _0x21e8fa += "_family";
    return _0x21e8fa;
  }),
  (_0x1ca7a1["prototype"]["getSpeciesPath"] = function () {
    return "forest/whitegiraffe/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x1ca7a1["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x1ca7a1["prototype"]["animalInfo"] = function () {
    var _0x4f1fad = {};
    switch (this["animalSpecies"]) {
      case 0x1:
        _0x4f1fad["aniName"] = "White Giraffe";
        break;
      case 0x2:
        _0x4f1fad["aniName"] = "Giraffe Family";
        break;
    }
    return (
      (_0x4f1fad["aniDesc"] = ""),
      (_0x4f1fad["upgradeText"] =
        "UPGRADED to " + _0x4f1fad["aniName"] + "!\x0aWhite Giraffe are very aggressive and have huge legs and stomp anyone in their way!"),
      (_0x4f1fad["aniCol"] = "#E9BD23"),
      (_0x4f1fad["skinName"] = this["getSkinName"]()),
      _0x4f1fad
    );
  }),
  (_0x1ca7a1["prototype"]["getAbilityInfo"] = function (_0x1468bb) {
    var _0x617618 = {};
    return (
      (_0x617618["abilName"] = "Stomp!"),
      (_0x617618["abilImg"] = "abilities/Stomp.svg"),
      (_0x617618["skinThemeID"] = this["skinThemeID"]),
      (_0x617618["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x617618
    );
  });

function _0x1ca7a1() {
  _0x1ca7a1["superClass"]["call"](this, _0x3fb3b2);
}
(window["WhiteGiraffe"] = _0x1ca7a1), _0x17bf26["setCustomClassForGameObjType"](_0x1ca7a1, _0x3fb3b2, _0x13567f);
var _0x48c344 = _0x3799d1;
(_0x3fceb2["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x3fceb2["prototype"]["constructor"] = _0x3fceb2),
  (_0x3fceb2["superClass"] = _0x48c344),
  (_0x3fceb2["prototype"]["getSkinName"] = function () {
    return this["getSpeciesPath"]() + "/turkey" + (this["specType"] == 0x0 ? "" : this["specType"]);
  }),
  (_0x3fceb2["prototype"]["getSpeciesPath"] = function () {
    return "forest/turkey/" + this["animalSpecies"];
  }),
  (_0x3fceb2["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x3fceb2["prototype"]["getWing"] = function (_0x20678d, _0x56ec9c, _0x52e60a) {
    var _0x47321c = "skins/" + this["getSpeciesPath"]() + "/turkey";
    return (_0x47321c += "_wing" + _0x56ec9c + ".png"), _0x47321c;
  }),
  (_0x3fceb2["prototype"]["getHead"] = function (_0x4c5d9b, _0x214ebe) {
    var _0x29c5e7 = "skins/" + this["getSpeciesPath"]() + "/turkey";
    return (_0x29c5e7 += "_head.png"), _0x29c5e7;
  }),
  (_0x3fceb2["prototype"]["getAbilityInfo"] = function (_0x9e1fde) {
    var _0x3e5508 = {};
    if (this["flag_eff_isOnTree"] || (this["flag_flying"] && this["flag_usingAbility"]))
      (_0x3e5508["abilName"] = "Hold to Fly"), (_0x3e5508["abilImg"] = "abilities/Fly.svg");
    else
      this["flag_isClimbingHill"]
        ? ((_0x3e5508["abilName"] = "Shoots Eggs!"), (_0x3e5508["abilImg"] = "abilities/Spit.svg"))
        : ((_0x3e5508["abilName"] = "Front Kick\x0a(Hold to Charge)"), (_0x3e5508["abilImg"] = "abilities/Kick.svg"));
    return (_0x3e5508["skinThemeID"] = this["skinThemeID"]), (_0x3e5508["mopeSeasonID"] = this["mopeSeasonID"]), _0x3e5508;
  }),
  (_0x3fceb2["prototype"]["animalInfo"] = function () {
    var _0x339dc4 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x339dc4["aniName"] = "Turkey!";
        break;
    }
    return (
      (_0x339dc4["aniCol"] = "#FF9000"),
      (_0x339dc4["skinName"] = this["getSkinName"]()),
      (_0x339dc4["upgradeText"] = "UPGRADED to " + _0x339dc4["aniName"] + "!\x0aHold W to charge up a kick, fly from tree and shoot eggs from hill!"),
      _0x339dc4
    );
  });
var _0x22fc9d = 0.6,
  _0x3f12db = -1.5,
  _0x266cca = -0x2;
(_0x3fceb2["prototype"]["drawUnderSkinImg"] = function () {
  _0x587de3["save"]();
  var _0x4a2090 = this["rad"] * _0x22fc9d,
    _0x2a126f = "tail";
  if (this["flag_usingAbility"]) {
    if (!this["flag_flying"]) _0x2a126f = "tail1";
    _0x3f12db = _0x266cca;
  } else _0x3f12db = -1.5;
  _0x2a126f = "skins/" + this["getSpeciesPath"]() + "/" + _0x2a126f + ".png";
  var _0x4fc4c6 = this["getSkinImageObj"](_0x2a126f);
  _0x4fc4c6 &&
    _0x587de3["drawImage"](
      _0x4fc4c6,
      -_0x4a2090 * this["skinScale"] * 0x2,
      -_0x4a2090 * this["skinScale"] * 0x2 + _0x4a2090 * _0x3f12db,
      0x2 * _0x4a2090 * this["skinScale"] * 0x2,
      0x3 * _0x4a2090 * this["skinScale"]
    ),
    _0x587de3["restore"]();
}),
  (_0x3fceb2["prototype"]["drawSkinCustomization"] = function () {
    if (!this["flag_usingAbility"]) return;
    var _0x2079a1 = 0x1f4 / 0x154;
    _0x587de3["save"]();
    var _0x1636ee = this["flag_flying"] ? 0x2d : 0x14,
      _0x38a68f = this["flag_flying"] ? 0x5a : 0x2d,
      _0x527989 = this["flag_flying"] ? 0.2 : 0.01,
      _0x27a237 = this["flag_flying"] ? 2.5 : 2.2,
      _0x113adc = this["flag_flying"] ? 2.5 : 2.2,
      _0xb3f9ee = this["flag_flying"] ? 0x0 : -0.4,
      _0xf8445c = this["flag_flying"] ? 0x0 : -0.2,
      _0x5dc0d7 = this["flag_flying"] ? 0.5 : 1.2,
      _0x439ff4 = this["flag_flying"] ? 0.3 : 0.1,
      _0x56232b = (_0x168a54 - this["spawnTime"]) / 0x3e8,
      _0x4b9508 = !(_0x57ae6d == 0x2 || _0x34fedb) ? _0x120bbb(_0x56232b, _0x5dc0d7, _0x439ff4, 0x2) : this["birdNoAnimationFlyWingAngle"],
      _0x4392aa = this["getSkinImageObj"](this["getWing"]("turkey", 0x1, !![]));
    if (_0x4392aa) {
      _0x587de3["save"]();
      var _0x1ddd5e = -(-_0x527989 + _0x4b9508) * _0x3d960f(_0x38a68f),
        _0x530285 = this["rad"] * 0.8;
      _0x587de3["rotate"](_0x3d960f(_0x1636ee) + _0x1ddd5e);
      var _0x271368 = 0x0,
        _0x53858b = this["rad"],
        _0x155ff5 = _0x530285 * _0x113adc * 0.62,
        _0x4e6164 = _0x530285 * _0x27a237,
        _0x152ced = 0.2 + _0xb3f9ee,
        _0x11aaf2 = 1.7 + _0xf8445c;
      _0x587de3["drawImage"](_0x4392aa, _0x271368 + _0x155ff5 * -_0x152ced, _0x53858b + _0x4e6164 * -_0x11aaf2, _0x155ff5, _0x4e6164),
        _0x587de3["restore"]();
    }
    var _0x4392aa = this["getSkinImageObj"](this["getWing"]("turkey", 0x2, !![]));
    if (_0x4392aa) {
      _0x587de3["save"]();
      var _0x1ddd5e = -(-_0x527989 + _0x4b9508) * _0x3d960f(-_0x38a68f),
        _0x530285 = this["rad"] * 0.8;
      _0x587de3["rotate"](_0x3d960f(-_0x1636ee) + _0x1ddd5e);
      var _0x271368 = 0x0,
        _0x53858b = this["rad"],
        _0x155ff5 = _0x530285 * _0x113adc * 0.62,
        _0x4e6164 = _0x530285 * _0x27a237,
        _0x152ced = 0.8 - _0xb3f9ee,
        _0x11aaf2 = 1.7 + _0xf8445c;
      _0x587de3["drawImage"](_0x4392aa, _0x271368 + _0x155ff5 * -_0x152ced, _0x53858b + _0x4e6164 * -_0x11aaf2, _0x155ff5, _0x4e6164),
        _0x587de3["restore"]();
    }
    _0x587de3["restore"]();
    var _0x432e16 = 0.1;
    if (this["specType"] == 0x2) _0x432e16 = -0.1;
    var _0x3a6a62 = this["getSkinImageObj"](this["getHead"]("turkey", !![]));
    if (_0x3a6a62) {
      _0x587de3["save"]();
      var _0x530285 = this["rad"];
      _0x587de3["drawImage"](
        _0x3a6a62,
        -_0x530285 * _0x2079a1,
        (-_0x530285 + _0x530285 * _0x432e16) * _0x2079a1,
        0x2 * _0x530285 * _0x2079a1,
        0x2 * _0x530285 * _0x2079a1
      ),
        _0x587de3["restore"]();
    }
  });

function _0x3fceb2() {
  _0x3fceb2["superClass"]["call"](this, _0x3fb3b2);
}
window["Turkey"] = _0x3fceb2;
var _0x37f80 = 0x70;
_0x17bf26["setCustomClassForGameObjType"](_0x3fceb2, _0x3fb3b2, _0x37f80);
var _0x48c344 = _0x307a43;
(_0x3a6aea["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x3a6aea["prototype"]["constructor"] = _0x3a6aea),
  (_0x3a6aea["superClass"] = _0x48c344),
  (_0x3a6aea["prototype"]["mommyID"] = 0x0),
  (_0x3a6aea["prototype"]["updateZ"] = function () {
    this["z"] = this["flag_flying"] ? 0x3e8 : this["rad"];
  }),
  (_0x3a6aea["prototype"]["customDraw"] = function (_0x2c7ba2) {
    _0x587de3["save"]();
    var _0x1a668d = this["getSkinImageObj"](
      "skins/forest/turkey/" + this["speciesType"] + "/turkeyegg" + (this["isEdibleOutlined"]() ? "_e" : "") + ".png"
    );
    if (_0x1a668d) {
      var _0x180119 = this["rad"];
      _0x587de3["rotate"](this["angle"]), _0x587de3["drawImage"](_0x1a668d, -_0x180119, -_0x180119, 0x2 * _0x180119, 0x2 * _0x180119);
    }
    _0x587de3["restore"]();
  });
var _0x108e6a = 0x86;

function _0x3a6aea() {
  _0x3a6aea["superClass"]["call"](this, _0x108e6a), (this["doesDrawEffectScale"] = !![]);
}
(window["TurkeyEgg"] = _0x3a6aea), _0x17bf26["setCustomClassForGameObjType"](_0x3a6aea, _0x108e6a);
var _0x48c344 = _0x307a43;
(_0x3f578a["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x3f578a["prototype"]["constructor"] = _0x3f578a),
  (_0x3f578a["superClass"] = _0x48c344),
  (_0x3f578a["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"];
  }),
  (_0x3f578a["prototype"]["customDraw"] = function (_0x5eef47) {
    _0x587de3["save"]();
    var _0x3ae5ae = "gameobj/" + this["oType"] + "/" + this["oType"] + (this["isEdibleOutlined"]() ? "_e" : "") + ".png",
      _0x395d0c = this["getSkinImageObj"](_0x3ae5ae);
    if (_0x395d0c) {
      var _0x332f0b = this["rad"];
      (this["angle"] = this["rPer"] * Math["PI"] * 0x2),
        _0x587de3["rotate"](this["angle"]),
        _0x587de3["drawImage"](_0x395d0c, -_0x332f0b, -_0x332f0b, 0x2 * _0x332f0b, 0x2 * _0x332f0b);
    }
    _0x587de3["restore"]();
  });
var _0x4fdaf1 = 0x87;

function _0x3f578a() {
  _0x3f578a["superClass"]["call"](this, _0x4fdaf1), (this["doesDrawEffectScale"] = !![]);
}
(window["TurkeyLeg"] = _0x3f578a), _0x17bf26["setCustomClassForGameObjType"](_0x3f578a, _0x4fdaf1);
var _0x48c344 = _0x307a43;
(_0x5afd89["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x5afd89["prototype"]["constructor"] = _0x5afd89),
  (_0x5afd89["superClass"] = _0x48c344),
  (_0x5afd89["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"];
  }),
  (_0x5afd89["prototype"]["customDraw"] = function (_0x3accd2) {
    _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0x1);
    var _0x209fa6 = "gameobj/" + this["oType"] + "/" + this["oType"] + (this["isEdibleOutlined"]() ? "_e" : "") + ".png",
      _0x1e8104 = this["getSkinImageObj"](_0x209fa6);
    if (_0x1e8104) {
      var _0x4cefcf = 0.15,
        _0x5de23e = this["rad"] * 1.2;
      (this["angle"] = this["rPer"] * Math["PI"] * 0x2),
        _0x587de3["rotate"](this["angle"]),
        _0x587de3["drawImage"](_0x1e8104, -_0x5de23e, -_0x5de23e + _0x5de23e * _0x4cefcf, 0x2 * _0x5de23e, 0x2 * _0x5de23e);
    }
    _0x587de3["restore"]();
  });
var _0x48d163 = 0x88;

function _0x5afd89() {
  _0x5afd89["superClass"]["call"](this, _0x48d163), (this["doesDrawEffectScale"] = !![]);
}
(window["TurkeyBaked"] = _0x5afd89), _0x17bf26["setCustomClassForGameObjType"](_0x5afd89, _0x48d163);
var _0x48c344 = _0x307a43;
(_0x5af69c["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x5af69c["prototype"]["constructor"] = _0x5af69c),
  (_0x5af69c["superClass"] = _0x48c344),
  (_0x5af69c["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"];
  }),
  (_0x5af69c["prototype"]["customDraw"] = function (_0x57b702) {
    _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0x1);
    var _0x11f850 = "gameobj/" + this["oType"] + "/" + this["oType"] + (this["isEdibleOutlined"]() ? "_e" : "") + ".png",
      _0x2b96c8 = this["getSkinImageObj"](_0x11f850);
    if (_0x2b96c8) {
      var _0x579988 = this["rad"] * 1.1;
      (this["angle"] = this["rPer"] * Math["PI"] * 0x2),
        _0x587de3["rotate"](this["angle"]),
        _0x587de3["drawImage"](_0x2b96c8, -_0x579988, -_0x579988, 0x2 * _0x579988, 0x2 * _0x579988);
    }
    _0x587de3["restore"]();
  });
var _0x269dcc = 0x89;

function _0x5af69c() {
  _0x5af69c["superClass"]["call"](this, _0x269dcc), (this["doesDrawEffectScale"] = !![]);
}
(window["PumpkinPie"] = _0x5af69c), _0x17bf26["setCustomClassForGameObjType"](_0x5af69c, _0x269dcc);
var _0x48c344 = _0x307a43;
(_0x5260be["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x5260be["prototype"]["constructor"] = _0x5260be),
  (_0x5260be["superClass"] = _0x48c344),
  (_0x5260be["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"];
  }),
  (_0x5260be["prototype"]["customDraw"] = function (_0x1634c0) {
    var _0x3f3977 = ![],
      _0x154bb7 = _0x2fa637[_0x204989];
    ((_0x154bb7 && _0x154bb7["lastHidingHoleID"] == this["id"]) || _0xc5072a == this["id"]) && (_0x3f3977 = !![]);
    if (_0x1634c0) {
    } else {
      var _0x4171a5 = 1.4,
        _0x45f7b2 = 0.05,
        _0x35be05 = "igloo",
        _0x5c4832 = this["getSkinImageObj"]("gameobj/" + this["oType"] + "/" + this["oType"] + ".png");
      if (_0x5c4832) {
        _0x587de3["save"]();
        var _0x154bb7 = _0x2fa637[_0x204989];
        if (_0x154bb7 && _0x154bb7["lastHidingHoleID"] == this["id"]) _0x587de3["globalAlpha"] = 0.5;
        var _0x3c629e = this["rad"] * _0x4171a5;
        _0x587de3["rotate"](this["angle"]),
          _0x587de3["drawImage"](_0x5c4832, -_0x3c629e, -_0x3c629e + _0x45f7b2 * _0x3c629e, _0x3c629e * 0x2, _0x3c629e * 0x2),
          _0x587de3["restore"]();
      }
    }
    if (_0x3f3977) {
      _0x587de3["save"](), _0x587de3["rotate"](this["angle"] + _0x3d960f(0x73)), (_0x587de3["globalAlpha"] = 0x1);
      var _0x239b95 = Math["PI"] * 0x2 * this["timerAngle"];
      _0x587de3["beginPath"](),
        (_0x587de3["lineWidth"] = 0x7),
        _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, this["rad"] - 0x4), 0x0, _0x239b95),
        (_0x587de3["strokeStyle"] = _0x5c1655),
        _0x587de3["stroke"](),
        _0x587de3["restore"]();
    }
  }),
  (_0x5260be["prototype"]["timerAngle"] = 0x0),
  (_0x5260be["prototype"]["nTimerAngle"] = 0x0),
  (_0x5260be["prototype"]["onLerpUpdate"] = function (_0x8e855a) {
    _0x5260be["superClass"]["prototype"]["onLerpUpdate"]["call"](this, _0x8e855a),
      (this["timerAngle"] += (this["nTimerAngle"] - this["timerAngle"]) * 0.1);
  }),
  (_0x5260be["prototype"]["readUpdatedProperty"] = function (_0x4af570, _0xd9a7d4) {
    _0x4af570 == _0x194108 && ((this["timeLeft"] = _0xd9a7d4["readUInt16"]() / 0x64), (this["nTimerAngle"] = this["timeLeft"] / 0x64));
  });
var _0x3d15d0 = 0x8a;

function _0x5260be() {
  _0x5260be["superClass"]["call"](this, _0x3d15d0), (this["doesDrawEffectScale"] = ![]);
}
(window["Igloo"] = _0x5260be), _0x17bf26["setCustomClassForGameObjType"](_0x5260be, _0x3d15d0);
var _0x48c344 = _0x307a43;
(_0x5a5143["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x5a5143["prototype"]["constructor"] = _0x5a5143),
  (_0x5a5143["superClass"] = _0x48c344),
  (_0x5a5143["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"];
  }),
  (_0x5a5143["prototype"]["customDraw"] = function (_0x4a9dc4) {});
var _0x19db9e = 0x8b;

function _0x5a5143() {
  _0x5a5143["superClass"]["call"](this, _0x19db9e), (this["doesDrawEffectScale"] = ![]);
}
(window["IglooOpening"] = _0x5a5143), _0x17bf26["setCustomClassForGameObjType"](_0x5a5143, _0x19db9e);
var _0x48c344 = _0x307a43;
(_0x316059["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x316059["prototype"]["constructor"] = _0x316059),
  (_0x316059["superClass"] = _0x48c344),
  (_0x316059["prototype"]["updateZ"] = function () {
    this["z"] = -0x63;
  });
var _0x3e3cd7 = "#9F8641",
  _0x2eb5a8 = "#735e28",
  _0x40c4ad = "#63501d",
  _0x557dc2 = "#735e28",
  _0x3c9874 = "#806a30";
(_0x316059["prototype"]["customDraw"] = function (_0x22f5e9) {
  _0x587de3["save"]();
  var _0x32ed2c = ![],
    _0x4a593b = _0x2fa637[_0x204989];
  ((_0x4a593b && _0x4a593b["lastHidingHoleID"] == this["id"]) || _0xc5072a == this["id"]) && (_0x32ed2c = !![]);
  if (_0x22f5e9) {
  } else {
    var _0x38cdb9 = 0.5,
      _0x4a76ee = 1.7;
    _0x587de3["save"]();
    {
      if (_0x32ed2c) {
        _0x587de3["globalAlpha"] = 0x1;
        var _0x35926f = this["rad"];
        this["drawOutlinedCircleRad"]("", _0x3e3cd7, _0x35926f),
          _0x440ef0(0x0 - this["rPer"], 0x0 - this["rPer"], Math["max"](0x0, _0x35926f - 0x7), _0x2eb5a8),
          _0x440ef0(0x0 + this["rPer"], 0x1, Math["max"](0x0, _0x35926f - 0xc), _0x40c4ad),
          (_0x587de3["globalAlpha"] = this["alpha"] * 0.7),
          (_0x35926f = _0x35926f * 0.7),
          _0x440ef0(0x0 - this["rPer"], 0x0 - this["rPer"], Math["max"](0x0, _0x35926f - 0x7), _0x557dc2),
          (_0x35926f = _0x35926f * 0.5),
          (_0x587de3["globalAlpha"] = this["alpha"] * 0.3),
          _0x440ef0(0x0 - this["rPer"], 0x0 - this["rPer"], Math["max"](0x0, _0x35926f), _0x3c9874);
      }
      if (this["curBiome"] == _0x1940a7) {
        if (!_0x32ed2c) {
          var _0x4a1338 = "gameobj/" + this["oType"] + "/" + this["curBiome"] + ".png",
            _0x5e050b = this["getSkinImageObj"](_0x4a1338);
          if (_0x5e050b) {
            _0x587de3["save"]();
            var _0x2528f4 = this["rad"];
            _0x587de3["rotate"](this["angle"]),
              _0x587de3["drawImage"](_0x5e050b, -_0x2528f4, -_0x2528f4, _0x2528f4 * 0x2, _0x2528f4 * 0x2),
              _0x587de3["restore"]();
          }
        }
      }
    }
    _0x587de3["restore"]();
    if (this["curBiome"] == _0x1940a7) {
      var _0x4a1338 = "gameobj/" + this["oType"] + "/cave_bottom_" + this["curBiome"] + ".png",
        _0x5e050b = this["getSkinImageObj"](_0x4a1338);
      if (_0x5e050b) {
        _0x587de3["save"]();
        var _0x2528f4 = this["rad"] * _0x38cdb9;
        _0x587de3["rotate"](this["angle"]),
          _0x587de3["drawImage"](_0x5e050b, -_0x2528f4, -_0x2528f4 + _0x4a76ee * _0x2528f4, _0x2528f4 * 0x2, _0x2528f4 * 0x2),
          _0x587de3["restore"]();
      }
      if (!_0x32ed2c) {
        var _0x4a1338 = "gameobj/" + this["oType"] + "/cave_top_" + this["curBiome"] + ".png",
          _0x5e050b = this["getSkinImageObj"](_0x4a1338);
        if (_0x5e050b) {
          _0x587de3["save"]();
          var _0x2528f4 = this["rad"] * _0x38cdb9;
          _0x587de3["rotate"](this["angle"]),
            _0x587de3["drawImage"](_0x5e050b, -_0x2528f4, -_0x2528f4 + _0x4a76ee * _0x2528f4, _0x2528f4 * 0x2, _0x2528f4 * 0x2),
            _0x587de3["restore"]();
        }
      }
    } else {
      var _0x5e050b = this["getSkinImageObj"]("img/cave/" + this["curBiome"] + "/cave_bottom.png");
      if (_0x5e050b) {
        _0x587de3["save"]();
        var _0x2528f4 = this["rad"] * _0x38cdb9;
        _0x587de3["rotate"](this["angle"]),
          _0x587de3["drawImage"](_0x5e050b, -_0x2528f4, -_0x2528f4 + _0x4a76ee * _0x2528f4, _0x2528f4 * 0x2, _0x2528f4 * 0x2),
          _0x587de3["restore"]();
      }
      if (!_0x32ed2c) {
        var _0x5e050b = this["getSkinImageObj"]("img/cave/" + this["curBiome"] + "/cave_top.png");
        if (_0x5e050b) {
          _0x587de3["save"]();
          var _0x2528f4 = this["rad"] * _0x38cdb9;
          _0x587de3["rotate"](this["angle"]),
            _0x587de3["drawImage"](_0x5e050b, -_0x2528f4, -_0x2528f4 + _0x4a76ee * _0x2528f4, _0x2528f4 * 0x2, _0x2528f4 * 0x2),
            _0x587de3["restore"]();
        }
      }
    }
  }
  _0x587de3["restore"]();
  if (_0x32ed2c) {
    _0x587de3["save"](), _0x587de3["rotate"](this["angle"] + _0x3d960f(0x73)), (_0x587de3["globalAlpha"] = 0.5);
    var _0x35926f = Math["PI"] * 0x2 * this["timerAngle"];
    _0x587de3["beginPath"](),
      (_0x587de3["lineWidth"] = 0x6),
      _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, this["rad"] - 0x4), 0x0, _0x35926f),
      (_0x587de3["strokeStyle"] = _0x5c1655),
      _0x587de3["stroke"](),
      _0x587de3["restore"]();
  }
}),
  (_0x316059["prototype"]["timerAngle"] = 0x0),
  (_0x316059["prototype"]["nTimerAngle"] = 0x0),
  (_0x316059["prototype"]["onLerpUpdate"] = function (_0x500350) {
    _0x316059["superClass"]["prototype"]["onLerpUpdate"]["call"](this, _0x500350),
      (this["timerAngle"] += (this["nTimerAngle"] - this["timerAngle"]) * 0.1);
  }),
  (_0x316059["prototype"]["readUpdatedProperty"] = function (_0x39d3ba, _0x3c3113) {
    _0x39d3ba == _0x194108 && ((this["timeLeft"] = _0x3c3113["readUInt16"]() / 0x64), (this["nTimerAngle"] = this["timeLeft"] / 0x64));
  });
var _0x398bf1 = 0x8c;

function _0x316059() {
  _0x316059["superClass"]["call"](this, _0x398bf1), (this["doesDrawEffectScale"] = ![]);
}
(window["Cave"] = _0x316059), _0x17bf26["setCustomClassForGameObjType"](_0x316059, _0x398bf1);
var _0x48c344 = _0x307a43;
(_0x2eb64b["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x2eb64b["prototype"]["constructor"] = _0x2eb64b),
  (_0x2eb64b["superClass"] = _0x48c344),
  (_0x2eb64b["prototype"]["updateZ"] = function () {
    this["z"] = 0x64;
  }),
  (_0x2eb64b["prototype"]["customDraw"] = function (_0x4fe87d) {});
var _0x28fc19 = 0x8d;

function _0x2eb64b() {
  _0x2eb64b["superClass"]["call"](this, _0x28fc19), (this["doesDrawEffectScale"] = ![]);
}
(window["CaveOpening"] = _0x2eb64b), _0x17bf26["setCustomClassForGameObjType"](_0x2eb64b, _0x28fc19);
var _0x48c344 = _0x3799d1;
(_0x286e5d["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x286e5d["prototype"]["constructor"] = _0x286e5d),
  (_0x286e5d["superClass"] = _0x48c344),
  (_0x286e5d["prototype"]["animalInfo"] = function () {
    var _0x296317 = {};
    return (
      (_0x296317["aniName"] = "Santa!"),
      (_0x296317["skinName"] = "santa/" + this["animalSpecies"] + "/santa"),
      (_0x296317["aniDesc"] = ""),
      (_0x296317["upgradeText"] = "UPGRADED to " + _0x296317["aniName"] + "\x0a Santa distributes gifts to everyone!"),
      (_0x296317["aniCol"] = "#231f18"),
      _0x296317
    );
  });
var _0x23e1ae = 0.84,
  _0x382c09 = 0.47,
  _0x5ee7f9 = 0x2d,
  _0x3cbabd = -0x1e,
  _0x161e8d = 1.3,
  _0x85186b = 1.5,
  _0x41d735 = 0.3,
  _0x435469 = 0.95,
  _0x27124e = 0.5,
  _0x168d13 = 0x2d,
  _0x2ea2cf = 0x0,
  _0x407b74 = 1.2,
  _0x10c01f = 0.3,
  _0x356f4a = 0.1;
(_0x286e5d["prototype"]["updateZ"] = function () {
  this["z"] = 0x3f2 + this["rad"];
  if (this["flag_flying"]) this["z"] += 0x18704;
}),
  (_0x286e5d["prototype"]["calculateZIndex"] = function () {
    this["updateZ"]();
  }),
  (_0x286e5d["prototype"]["drawUnderSkinTail"] = function (_0x1f8709) {}),
  (_0x286e5d["prototype"]["flyingHatAnimation"] = function () {
    (!this["hideFeatures"] || this["flag_flying"]) && (this["santaHead"](0x0), this["hohohoAnimation"](0x0));
    var _0x1810a4 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
      _0x58d628 = _0x120bbb(_0x1810a4, _0x10c01f, _0x356f4a, 0x2),
      _0x3df8e6 = this["getSkinImageObj"]("skins/santa/" + this["animalSpecies"] + "/hat.png");
    if (_0x3df8e6) {
      _0x587de3["save"]();
      var _0x39a6d7 = -(-0.2 + _0x58d628) * _0x3d960f(_0x168d13),
        _0x333dd1 = this["rad"] * _0x407b74;
      _0x587de3["rotate"](_0x3d960f(_0x2ea2cf) + _0x39a6d7);
      var _0x55afc7 = 0x0,
        _0x27a4f3 = this["rad"],
        _0x4d0e7c = _0x333dd1 * 0x2,
        _0x516259 = _0x333dd1 * 0x2,
        _0x223776 = _0x27124e,
        _0x3a9b96 = _0x435469;
      _0x587de3["drawImage"](_0x3df8e6, _0x55afc7 + _0x4d0e7c * -_0x223776, _0x27a4f3 + _0x516259 * -_0x3a9b96, _0x4d0e7c, _0x516259),
        _0x587de3["restore"]();
    }
  }),
  (_0x286e5d["prototype"]["drawSkinCustomization"] = function () {
    if (this["flag_flying"]) this["flyingHatAnimation"]();
    else {
      if (!this["hideFeatures"] || this["flag_flying"]) {
        if (this["specType"] == 0x0) this["bellhandAnimation"](0x0);
        this["santaHead"](0x0), this["hohohoAnimation"](0x0);
      }
    }
  }),
  (_0x286e5d["prototype"]["hideFeatures"] = ![]),
  (_0x286e5d["prototype"]["bellhandAnimation"] = function (_0x463908) {
    var _0x1fc5eb = (_0x168a54 - this["spawnTime"]) / 0x3e8,
      _0x5ebdf4 = _0x120bbb(_0x1fc5eb, _0x85186b, _0x41d735, 0x2),
      _0x2e0eb5 = this["getSkinImageObj"]("skins/santa/" + this["animalSpecies"] + "/bellhand.png");
    if (_0x2e0eb5) {
      _0x587de3["save"]();
      var _0x23acf6 = -(-0.2 + _0x5ebdf4) * _0x3d960f(_0x5ee7f9),
        _0x5a42e8 = this["rad"] * _0x161e8d;
      _0x587de3["rotate"](_0x3d960f(_0x3cbabd) + _0x23acf6);
      var _0x2ceea2 = 0x0,
        _0x56934f = this["rad"],
        _0x51dcb5 = _0x5a42e8 * 0x2,
        _0x45a449 = _0x5a42e8 * 0x2,
        _0x1ce7eb = _0x382c09,
        _0x5c9780 = _0x23e1ae;
      _0x587de3["drawImage"](_0x2e0eb5, _0x2ceea2 + _0x51dcb5 * -_0x1ce7eb, _0x56934f + _0x45a449 * -_0x5c9780, _0x51dcb5, _0x45a449),
        _0x587de3["restore"]();
    }
  }),
  (_0x286e5d["prototype"]["hohohoNextT"] = +new Date() + 0x1388),
  (_0x286e5d["prototype"]["hohohoAnimation"] = function (_0xce25f) {
    if (_0x168a54 > this["hohohoNextT"]) {
      var _0x5de553 = -0.1 + _0xce25f,
        _0x4766d9 = 0x1f4 / 0x154,
        _0x355adf = Math["trunc"](_0x168a54 / 0xb4) % 0x3,
        _0x34260a = this["getSkinImageObj"]("skins/santa/" + this["animalSpecies"] + "/santa_mouth" + _0x355adf + ".png");
      if (_0x34260a) {
        _0x587de3["save"]();
        var _0x36dbf8 = this["rad"];
        _0x587de3["drawImage"](
          _0x34260a,
          -_0x36dbf8 * _0x4766d9,
          (-_0x36dbf8 + _0x36dbf8 * _0x5de553) * _0x4766d9,
          0x2 * _0x36dbf8 * _0x4766d9,
          0x2 * _0x36dbf8 * _0x4766d9
        ),
          _0x587de3["restore"]();
      }
      _0x168a54 > this["hohohoNextT"] + 0x5dc && (this["hohohoNextT"] = +new Date() + 0x2710);
    }
  }),
  (_0x286e5d["prototype"]["getSkinImageObj"] = function (_0x4ae316) {
    return (this["skinThemeID"] = 0x0), _0x286e5d["superClass"]["prototype"]["getSkinImageObj"]["call"](this, _0x4ae316);
  }),
  (_0x286e5d["prototype"]["santaHead"] = function (_0x5620b6) {
    var _0x3c304b = 0.1,
      _0x4562b1 = 0x1f4 / 0x154,
      _0x337e20 = this["flag_flying"] ? "2" : "";
    if (this["specType"] == 0x2) _0x337e20 = "3";
    var _0x42db8a = this["getSkinImageObj"]("skins/santa/" + this["animalSpecies"] + "/santa_head" + _0x337e20 + ".png");
    if (_0x42db8a) {
      _0x587de3["save"]();
      var _0x5c8043 = this["rad"];
      _0x587de3["drawImage"](
        _0x42db8a,
        -_0x5c8043 * _0x4562b1,
        (-_0x5c8043 + _0x5c8043 * _0x3c304b) * _0x4562b1,
        0x2 * _0x5c8043 * _0x4562b1,
        0x2 * _0x5c8043 * _0x4562b1
      ),
        _0x587de3["restore"]();
    }
  }),
  (_0x286e5d["prototype"]["getAbilityInfo"] = function (_0x40d3e6) {
    var _0x36d130 = {};
    switch (_0x40d3e6) {
      case _0x53947d:
        (_0x36d130["abilName"] = "Fly High!"), (_0x36d130["abilImg"] = "skins/santa/" + this["animalSpecies"] + "/ability_santa_flying.png");
        break;
      case _0x2134e6:
        (_0x36d130["abilName"] = "Gives Gifts!"), (_0x36d130["abilImg"] = "skins/santa/" + this["animalSpecies"] + "/ability_santa_throwgifts.png");
        break;
      case _0x158a9b:
        (_0x36d130["abilName"] = "Flying Sleigh!"),
          (_0x36d130["abilImg"] = "skins/santa/" + this["animalSpecies"] + "/ability_santa_flyingsleigh.png");
        break;
    }
    return (_0x36d130["skinThemeID"] = this["skinThemeID"]), (_0x36d130["mopeSeasonID"] = this["mopeSeasonID"]), _0x36d130;
  }),
  (_0x286e5d["prototype"]["getSkinName"] = function () {
    var _0x52ea86 = "";
    return (_0x52ea86 = "santa/" + this["animalSpecies"] + "/santa" + (this["specType"] == 0x0 ? "" : this["specType"])), _0x52ea86;
  });

function _0x286e5d() {
  _0x286e5d["superClass"]["call"](this, _0x3fb3b2);
}
(window["Santa"] = _0x286e5d), _0x17bf26["setCustomClassForGameObjType"](_0x286e5d, _0x3fb3b2, _0x205af4);
var _0x48c344 = _0x307a43;
(_0x3bf0ff["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x3bf0ff["prototype"]["constructor"] = _0x3bf0ff),
  (_0x3bf0ff["superClass"] = _0x48c344);
var _0x1299d9 = 0x3f2;
(_0x3bf0ff["prototype"]["updateZ"] = function () {
  this["z"] = 0x3f2;
  if (this["flag_flying"]) this["z"] += 0x186a0;
}),
  (_0x3bf0ff["prototype"]["customDraw"] = function (_0x3ebcf2) {
    var _0x213df8 = this["getSkinImageObj"]("skins/santa/0/sleigh.png");
    if (_0x213df8) {
      _0x587de3["save"]();
      var _0x2a30fa = this["rad"] * 0x1;
      _0x587de3["rotate"](this["angle"]),
        _0x587de3["drawImage"](_0x213df8, -_0x2a30fa, -_0x2a30fa, _0x2a30fa * 0x2, _0x2a30fa * 0x2),
        _0x587de3["restore"]();
    }
  });

function _0x3bf0ff() {
  _0x3bf0ff["superClass"]["call"](this, _0x2020ca);
}
(window["Sleigh"] = _0x3bf0ff), _0x17bf26["setCustomClassForGameObjType"](_0x3bf0ff, _0x2020ca);
var _0x48c344 = _0x3799d1;
(_0x246379["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x246379["prototype"]["constructor"] = _0x246379),
  (_0x246379["superClass"] = _0x48c344);
var _0x58c2ad = 0x186a0;
(_0x246379["prototype"]["updateZ"] = function () {
  this["z"] = 0x3e8 + this["rad"] + this["rowNumber"];
  if (this["flag_flying"]) this["z"] += _0x58c2ad;
}),
  (_0x246379["prototype"]["calculateZIndex"] = function () {
    this["updateZ"]();
  }),
  (_0x246379["prototype"]["animalInfo"] = function () {
    var _0x2d70c7 = {};
    return (
      (_0x2d70c7["aniName"] = "Rudolph!"),
      (_0x2d70c7["skinName"] = "santa/rudolph"),
      (_0x2d70c7["upgradeText"] = "UPGRADED to Rudolph!\x0a Rudolph paws turn very well on ice!\x0a Press W to howl!"),
      (_0x2d70c7["aniCol"] = "#6B6B6B"),
      _0x2d70c7
    );
  }),
  (_0x246379["prototype"]["getAbilityInfo"] = function (_0x25c035) {
    var _0x205f95 = {};
    return (_0x205f95["abilName"] = "Howl!"), (_0x205f95["abilImg"] = "abilities/Howl.svg"), _0x205f95;
  }),
  (_0x246379["prototype"]["getSkinName"] = function () {
    var _0x17e74c = "";
    return (_0x17e74c = "santa/0/" + (this["isRudolph"] ? "rudolph" : "deer")), (_0x17e74c += this["specType"] == 0x0 ? "" : 0x1), _0x17e74c;
  }),
  (_0x246379["prototype"]["drawAnimalUnderSkinCircle"] = function (_0x372811, _0x3d6a21) {
    if (!this["flag_isGrabbed"]) {
      if (this["playerNum"] == 0x1) _0x372811 = "cyan";
      else {
        if (this["playerNum"] == 0x2) _0x372811 = "yellow";
        else this["flag_eff_isOnSpiderWeb"] && (_0x372811 = "white");
      }
      _0x587de3["save"](),
        (_0x587de3["globalAlpha"] = this["isAnimalInside1v1Arena"]() ? 0.3 : this["idealOp"]),
        _0x440ef0(0x0, 0x0, this["rad"], _0x372811),
        _0x587de3["restore"]();
    }
  }),
  (_0x246379["prototype"]["drawLights"] = function () {
    var _0x19db20 = "/skins/" + this["getSkinName"](),
      _0x10eeba = this["getSkinImagePath"](_0x19db20),
      _0x4d698f = this["skinScale"],
      _0x2aa7d3 = this["skinRad"];
  }),
  (_0x246379["prototype"]["afterCustomDraw"] = function (_0x38d690) {
    if (this["isRudolph"]) this["drawLights"]();
    var _0x19ab97 = -0x1,
      _0x48fb19 = "#b84831",
      _0x1eb0d3 = 0x4 * (this["curRad"] / this["startRad"]),
      _0x42a86e = 0x1;
    this["drawRope"](this["rope1_x"], this["rope1_y"], this["deerPos1_x"], this["deerPos1_y"], _0x48fb19, _0x1eb0d3, _0x19ab97, _0x42a86e),
      this["drawRope"](this["rope2_x"], this["rope2_y"], this["deerPos2_x"], this["deerPos2_y"], _0x48fb19, _0x1eb0d3, _0x19ab97, _0x42a86e),
      (_0x48fb19 = "white"),
      (_0x1eb0d3 = 0x1 * (this["curRad"] / this["startRad"])),
      (_0x42a86e = 0.3),
      this["drawRope"](this["rope1_x"], this["rope1_y"], this["deerPos1_x"], this["deerPos1_y"], _0x48fb19, _0x1eb0d3, _0x19ab97, _0x42a86e),
      this["drawRope"](this["rope2_x"], this["rope2_y"], this["deerPos2_x"], this["deerPos2_y"], _0x48fb19, _0x1eb0d3, _0x19ab97, _0x42a86e);
  }),
  (_0x246379["prototype"]["drawRope"] = function (_0x5e5216, _0x173b75, _0x5d170e, _0x12fd85, _0x3ee2f2, _0xad7d9b, _0x2cd766, _0x419d5b) {
    _0x587de3["save"](),
      (_0x587de3["strokeStyle"] = _0x3ee2f2),
      (_0x587de3["lineWidth"] = _0xad7d9b * (this["curRad"] / this["startRad"])),
      (_0x587de3["globalAlpha"] = _0x419d5b),
      _0x587de3["beginPath"](),
      _0x587de3["moveTo"](_0x5e5216, _0x173b75),
      _0x587de3["quadraticCurveTo"](_0x5e5216, _0x12fd85 - _0x2cd766, _0x5d170e, _0x12fd85),
      _0x587de3["stroke"](),
      _0x587de3["restore"]();
  }),
  (_0x246379["prototype"]["setOpacityForFlyingAnimals"] = function (_0x2e8e82) {
    !(this["id"] == _0x204989 || this["santaID"] == _0x204989) && (this["idealOp"] = 0.6);
  }),
  (_0x246379["prototype"]["onLerpUpdate"] = function (_0x23759a) {
    (this["rope1_x"] = _0x23759a * (this["rope1_nx"] - this["rope1_ox"]) + this["rope1_ox"]),
      (this["rope1_y"] = _0x23759a * (this["rope1_ny"] - this["rope1_oy"]) + this["rope1_oy"]),
      (this["deerPos1_x"] = _0x23759a * (this["deerpos1_nx"] - this["deerpos1_ox"]) + this["deerpos1_ox"]),
      (this["deerPos1_y"] = _0x23759a * (this["deerpos1_ny"] - this["deerpos1_oy"]) + this["deerpos1_oy"]),
      (this["rope2_x"] = _0x23759a * (this["rope2_nx"] - this["rope2_ox"]) + this["rope2_ox"]),
      (this["rope2_y"] = _0x23759a * (this["rope2_ny"] - this["rope2_oy"]) + this["rope2_oy"]),
      (this["deerPos2_x"] = _0x23759a * (this["deerpos2_nx"] - this["deerpos2_ox"]) + this["deerpos2_ox"]),
      (this["deerPos2_y"] = _0x23759a * (this["deerpos2_ny"] - this["deerpos2_oy"]) + this["deerpos2_oy"]);
  }),
  (_0x246379["prototype"]["readCustomData_onNewlyVisible"] = function (_0x542f6a) {
    _0x246379["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x542f6a),
      (this["santaID"] = _0x542f6a["readUInt32"]()),
      (this["rowNumber"] = _0x542f6a["readUInt8"]()),
      (this["isRudolph"] = _0x542f6a["readUInt8"]() == 0x1),
      (this["startRad"] = _0x542f6a["readUInt16"]() / 0x64),
      (this["curRad"] = _0x542f6a["readUInt16"]() / 0x64),
      this["readInfo"](_0x542f6a),
      (this["rope1_nx"] = this["rope1_ox"] = this["rope1_x"] = this["x"]),
      (this["rope1_ny"] = this["rope1_oy"] = this["rope1_y"] = this["y"]),
      (this["deerpos1_ox"] = this["deerPos1_x"] = this["deerpos1_nx"] = this["x"]),
      (this["deerpos1_oy"] = this["deerPos1_y"] = this["deerpos1_ny"] = this["y"]),
      (this["rope2_nx"] = this["rope2_ox"] = this["rope2_x"] = this["x"]),
      (this["rope2_ny"] = this["rope2_oy"] = this["rope2_y"] = this["y"]),
      (this["deerpos2_ox"] = this["deerPos2_x"] = this["deerpos2_nx"] = this["x"]),
      (this["deerpos2_oy"] = this["deerPos2_y"] = this["deerpos2_ny"] = this["y"]);
  }),
  (_0x246379["prototype"]["rope1_x"] = 0x0),
  (_0x246379["prototype"]["rope1_y"] = 0x0),
  (_0x246379["prototype"]["deerPos1_x"] = 0x0),
  (_0x246379["prototype"]["deerPos1_y"] = 0x0),
  (_0x246379["prototype"]["rope2_x"] = 0x0),
  (_0x246379["prototype"]["rope2_y"] = 0x0),
  (_0x246379["prototype"]["deerPos2_x"] = 0x0),
  (_0x246379["prototype"]["deerPos2_y"] = 0x0),
  (_0x246379["prototype"]["webState"] = 0x0),
  (_0x246379["prototype"]["readInfo"] = function (_0x400ce8) {
    this["customUpdatedProperty"](_0x528bb0, _0x400ce8),
      this["customUpdatedProperty"](_0x3f1bd2, _0x400ce8),
      this["customUpdatedProperty"](_0x140e03, _0x400ce8),
      this["customUpdatedProperty"](_0x4da478, _0x400ce8);
  }),
  (_0x246379["prototype"]["customUpdatedProperty"] = function (_0x4c75dd, _0x265b96) {
    if (_0x4c75dd == _0x528bb0) {
      var _0x5dd937 = _0x265b96["readUInt16"]() / 0x4,
        _0x2d27bd = _0x265b96["readUInt16"]() / 0x4;
      (this["rope1_ox"] = this["rope1_x"]), (this["rope1_oy"] = this["rope1_y"]), (this["rope1_nx"] = _0x5dd937), (this["rope1_ny"] = _0x2d27bd);
    } else {
      if (_0x4c75dd == _0x3f1bd2) {
        var _0x24529a = _0x265b96["readUInt16"]() / 0x4,
          _0x296523 = _0x265b96["readUInt16"]() / 0x4;
        (this["rope2_ox"] = this["rope2_x"]), (this["rope2_oy"] = this["rope2_y"]), (this["rope2_nx"] = _0x24529a), (this["rope2_ny"] = _0x296523);
      } else {
        if (_0x4c75dd == _0x140e03) {
          var _0x262ead = _0x265b96["readUInt16"]() / 0x4,
            _0x4a5842 = _0x265b96["readUInt16"]() / 0x4;
          (this["deerpos1_ox"] = this["deerPos1_x"]),
            (this["deerpos1_oy"] = this["deerPos1_y"]),
            (this["deerpos1_nx"] = _0x262ead),
            (this["deerpos1_ny"] = _0x4a5842);
        } else {
          if (_0x4c75dd == _0x4da478) {
            var _0x1a9f30 = _0x265b96["readUInt16"]() / 0x4,
              _0x264cec = _0x265b96["readUInt16"]() / 0x4;
            (this["deerpos2_ox"] = this["deerPos2_x"]),
              (this["deerpos2_oy"] = this["deerPos2_y"]),
              (this["deerpos2_nx"] = _0x1a9f30),
              (this["deerpos2_ny"] = _0x264cec);
          }
        }
      }
    }
  });

function _0x246379() {
  _0x246379["superClass"]["call"](this, _0x3fb3b2);
}
(window["Rudolph"] = _0x246379), _0x17bf26["setCustomClassForGameObjType"](_0x246379, _0x3fb3b2, _0xe72acb);
var _0x48c344 = _0x307a43;
(_0x3fba40["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x3fba40["prototype"]["constructor"] = _0x3fba40),
  (_0x3fba40["superClass"] = _0x48c344);
var _0x2a1eef = 0x3f0;
(_0x3fba40["prototype"]["updateZ"] = function () {
  this["z"] = 0x3f0;
  if (this["flag_flying"]) this["z"] += 0x186a0;
}),
  (_0x3fba40["prototype"]["customDraw"] = function (_0x176cc3) {
    _0x440ef0(0x0, 0x0, this["curRad"], "#ebac2d"), _0x440ef0(0x0, 0x0, this["curRad"] * 0.6, "#ffbc33");
  }),
  (_0x3fba40["prototype"]["beforeCustomDraw"] = function (_0x5329dd) {
    _0x587de3["save"](),
      (_0x587de3["strokeStyle"] = "#ffbc33"),
      (_0x587de3["lineWidth"] = 0xa * (this["curRad"] / this["startRad"])),
      (_0x587de3["globalAlpha"] = 0x1),
      _0x587de3["beginPath"](),
      _0x587de3["moveTo"](this["webX"], this["webY"]),
      _0x587de3["lineTo"](this["spiderX"], this["spiderY"]),
      _0x587de3["stroke"](),
      _0x587de3["restore"](),
      _0x587de3["save"](),
      (_0x587de3["strokeStyle"] = "gold"),
      (_0x587de3["lineWidth"] = 0x6 * (this["curRad"] / this["startRad"])),
      (_0x587de3["globalAlpha"] = 0x1),
      _0x587de3["beginPath"](),
      _0x587de3["moveTo"](this["webX"], this["webY"]),
      _0x587de3["lineTo"](this["spiderX"], this["spiderY"]),
      _0x587de3["stroke"](),
      _0x587de3["restore"]();
  }),
  (_0x3fba40["prototype"]["onLerpUpdate"] = function (_0x4132a4) {
    (this["webX"] = _0x4132a4 * (this["web_nx"] - this["web_ox"]) + this["web_ox"]),
      (this["webY"] = _0x4132a4 * (this["web_ny"] - this["web_oy"]) + this["web_oy"]),
      (this["spiderX"] = _0x4132a4 * (this["spider_nx"] - this["spider_ox"]) + this["spider_ox"]),
      (this["spiderY"] = _0x4132a4 * (this["spider_ny"] - this["spider_oy"]) + this["spider_oy"]);
  }),
  (_0x3fba40["prototype"]["readCustomData_onUpdate"] = function (_0x76be91) {
    _0x3fba40["superClass"]["prototype"]["readCustomData_onUpdate"]["call"](this, _0x76be91), this["readInfo"](_0x76be91);
  }),
  (_0x3fba40["prototype"]["readCustomData_onNewlyVisible"] = function (_0x31f986) {
    _0x3fba40["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x31f986),
      (this["startRad"] = _0x31f986["readUInt16"]() / 0x64),
      this["readInfo"](_0x31f986),
      (this["web_nx"] = this["web_ox"] = this["webX"] = this["x"]),
      (this["web_ny"] = this["web_oy"] = this["webY"] = this["y"]),
      (this["spider_ox"] = this["spiderX"] = this["spider_nx"] = this["x"]),
      (this["spider_oy"] = this["spiderY"] = this["spider_ny"] = this["y"]);
  }),
  (_0x3fba40["prototype"]["startRad"] = 0x0),
  (_0x3fba40["prototype"]["webX"] = 0x0),
  (_0x3fba40["prototype"]["webY"] = 0x0),
  (_0x3fba40["prototype"]["spiderX"] = 0x0),
  (_0x3fba40["prototype"]["spiderY"] = 0x0),
  (_0x3fba40["prototype"]["webState"] = 0x0),
  (_0x3fba40["prototype"]["readInfo"] = function (_0x3fa6e5) {
    this["curRad"] = _0x3fa6e5["readUInt16"]() / 0x64;
    var _0x138543 = _0x3fa6e5["readUInt16"]() / 0x4,
      _0x522a01 = _0x3fa6e5["readUInt16"]() / 0x4;
    (this["web_ox"] = this["webX"]), (this["web_oy"] = this["webY"]), (this["web_nx"] = _0x138543), (this["web_ny"] = _0x522a01);
    var _0x550399 = _0x3fa6e5["readUInt16"]() / 0x4,
      _0x4628cb = _0x3fa6e5["readUInt16"]() / 0x4;
    (this["spider_ox"] = this["spiderX"]), (this["spider_oy"] = this["spiderY"]), (this["spider_nx"] = _0x550399), (this["spider_ny"] = _0x4628cb);
  });

function _0x3fba40() {
  _0x3fba40["superClass"]["call"](this, _0x41e12f), (this["spawnTime"] = +new Date());
}
(window["CartSaddle"] = _0x3fba40), _0x17bf26["setCustomClassForGameObjType"](_0x3fba40, _0x41e12f);
var _0x48c344 = _0x307a43;
(_0x3dda18["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x3dda18["prototype"]["constructor"] = _0x3dda18),
  (_0x3dda18["superClass"] = _0x48c344);
var _0x253fce = 0x3ef;
(_0x3dda18["prototype"]["updateZ"] = function () {
  this["z"] = 0x3ef;
  if (this["flag_flying"]) this["z"] += 0x186a0;
}),
  (_0x3dda18["prototype"]["customDraw"] = function (_0x4d5b66) {
    _0x440ef0(0x0, 0x0, this["rad"], "#ebac2d"), _0x440ef0(0x0, 0x0, this["rad"] * 0.9, "#e9ae34");
  }),
  (_0x3dda18["prototype"]["beforeCustomDraw"] = function (_0x31e2a3) {
    _0x587de3["save"](),
      (_0x587de3["strokeStyle"] = "#ffbc33"),
      (_0x587de3["lineWidth"] = 0xa * (this["curRad"] / this["startRad"])),
      (_0x587de3["globalAlpha"] = 0x1),
      _0x587de3["beginPath"](),
      _0x587de3["moveTo"](this["webX"], this["webY"]),
      _0x587de3["lineTo"](this["spiderX"], this["spiderY"]),
      _0x587de3["stroke"](),
      _0x587de3["restore"](),
      _0x587de3["save"](),
      (_0x587de3["strokeStyle"] = "gold"),
      (_0x587de3["lineWidth"] = 0x6 * (this["curRad"] / this["startRad"])),
      (_0x587de3["globalAlpha"] = 0x1),
      _0x587de3["beginPath"](),
      _0x587de3["moveTo"](this["webX"], this["webY"]),
      _0x587de3["lineTo"](this["spiderX"], this["spiderY"]),
      _0x587de3["stroke"](),
      _0x587de3["restore"]();
  }),
  (_0x3dda18["prototype"]["onLerpUpdate"] = function (_0x3dbe94) {
    (this["webX"] = _0x3dbe94 * (this["web_nx"] - this["web_ox"]) + this["web_ox"]),
      (this["webY"] = _0x3dbe94 * (this["web_ny"] - this["web_oy"]) + this["web_oy"]),
      (this["spiderX"] = _0x3dbe94 * (this["spider_nx"] - this["spider_ox"]) + this["spider_ox"]),
      (this["spiderY"] = _0x3dbe94 * (this["spider_ny"] - this["spider_oy"]) + this["spider_oy"]);
  }),
  (_0x3dda18["prototype"]["readCustomData_onUpdate"] = function (_0x2e4375) {
    _0x3dda18["superClass"]["prototype"]["readCustomData_onUpdate"]["call"](this, _0x2e4375), this["readInfo"](_0x2e4375);
  }),
  (_0x3dda18["prototype"]["readCustomData_onNewlyVisible"] = function (_0x15660f) {
    _0x3dda18["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x15660f),
      (this["startRad"] = _0x15660f["readUInt16"]() / 0x64),
      this["readInfo"](_0x15660f),
      (this["curRad"] = this["rad"]),
      (this["web_nx"] = this["web_ox"] = this["webX"] = this["x"]),
      (this["web_ny"] = this["web_oy"] = this["webY"] = this["y"]),
      (this["spider_ox"] = this["spiderX"] = this["spider_nx"] = this["x"]),
      (this["spider_oy"] = this["spiderY"] = this["spider_ny"] = this["y"]);
  }),
  (_0x3dda18["prototype"]["webX"] = 0x0),
  (_0x3dda18["prototype"]["webY"] = 0x0),
  (_0x3dda18["prototype"]["spiderX"] = 0x0),
  (_0x3dda18["prototype"]["spiderY"] = 0x0),
  (_0x3dda18["prototype"]["webState"] = 0x0),
  (_0x3dda18["prototype"]["readInfo"] = function (_0x2d4427) {
    this["curRad"] = _0x2d4427["readUInt16"]() / 0x64;
    var _0x1621bb = _0x2d4427["readUInt16"]() / 0x4,
      _0x575e43 = _0x2d4427["readUInt16"]() / 0x4;
    (this["web_ox"] = this["webX"]), (this["web_oy"] = this["webY"]), (this["web_nx"] = _0x1621bb), (this["web_ny"] = _0x575e43);
    var _0x4019e2 = _0x2d4427["readUInt16"]() / 0x4,
      _0x56ea82 = _0x2d4427["readUInt16"]() / 0x4;
    (this["spider_ox"] = this["spiderX"]), (this["spider_oy"] = this["spiderY"]), (this["spider_nx"] = _0x4019e2), (this["spider_ny"] = _0x56ea82);
  });

function _0x3dda18() {
  _0x3dda18["superClass"]["call"](this, _0x55d652);
}
(window["Saddle"] = _0x3dda18), _0x17bf26["setCustomClassForGameObjType"](_0x3dda18, _0x55d652);
var _0x48c344 = _0x307a43;
(_0x1dc3da["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1dc3da["prototype"]["constructor"] = _0x1dc3da),
  (_0x1dc3da["superClass"] = _0x48c344),
  (_0x1dc3da["prototype"]["foodType"] = 0x0),
  (_0x1dc3da["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"];
  }),
  (_0x1dc3da["prototype"]["customDraw"] = function (_0xcbf7e2) {
    _0x587de3["save"]();
    var _0x96a160 =
        "gameobj/" + this["oType"] + "/" + this["oType"] + "_" + this["foodType"] + "" + (this["isEdibleOutlined"]() ? "_e" : "") + ".png",
      _0x4056e3 = this["getSkinImageObj"](_0x96a160);
    if (_0x4056e3) {
      var _0xecd456 = this["rad"];
      _0x587de3["save"](),
        _0x587de3["rotate"](this["rPer"] * 0.5 * Math["PI"] * 0x2),
        _0x587de3["drawImage"](_0x4056e3, -_0xecd456, -_0xecd456, 0x2 * _0xecd456, 0x2 * _0xecd456),
        _0x587de3["restore"]();
    }
    _0x587de3["restore"]();
  }),
  (_0x1dc3da["prototype"]["readCustomData_onNewlyVisible"] = function (_0x4a712d) {
    this["foodType"] = _0x4a712d["readUInt8"]();
  });
var _0x5bf67c = 0x8e;

function _0x1dc3da() {
  _0x1dc3da["superClass"]["call"](this, _0x5bf67c), (this["doesDrawEffectScale"] = !![]);
}
(window["XmasFood"] = _0x1dc3da), _0x17bf26["setCustomClassForGameObjType"](_0x1dc3da, _0x5bf67c);
var _0x48c344 = _0x307a43;
(_0x5da938["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x5da938["prototype"]["constructor"] = _0x5da938),
  (_0x5da938["superClass"] = _0x48c344),
  (_0x5da938["prototype"]["giftColor"] = 0x0),
  (_0x5da938["prototype"]["giftType"] = 0x0),
  (_0x5da938["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"];
  }),
  (_0x5da938["prototype"]["customDraw"] = function (_0x57046b) {
    _0x587de3["save"]();
    var _0x16aefa = this["getSkinImageObj"]("img/xmasgifts/" + this["giftColor"] + "/gift_e.png");
    if (_0x16aefa) {
      var _0x52cbaf = this["rad"];
      _0x587de3["save"](),
        _0x587de3["rotate"](this["rPer"] * 0.5 * Math["PI"] * 0x2),
        _0x587de3["drawImage"](_0x16aefa, -_0x52cbaf, -_0x52cbaf, 0x2 * _0x52cbaf, 0x2 * _0x52cbaf),
        _0x587de3["restore"]();
    }
    _0x587de3["restore"]();
  }),
  (_0x5da938["prototype"]["readCustomData_onNewlyVisible"] = function (_0x10be43) {
    (this["giftColor"] = _0x10be43["readUInt8"]()), (this["giftType"] = _0x10be43["readUInt8"]());
  });
var _0x5bcd02 = 0x8f;

function _0x5da938() {
  _0x5da938["superClass"]["call"](this, _0x5bcd02), (this["doesDrawEffectScale"] = !![]);
}
(window["XmasGift"] = _0x5da938), _0x17bf26["setCustomClassForGameObjType"](_0x5da938, _0x5bcd02);
var _0xa98b58 = +new Date() + 0x1388,
  _0x19fa43 = ![];
let _0x1875d3,
  _0x5027fb = 0x32,
  _0x4d3b35 = _0x27ef2a - 0x546 + _0x5027fb;
var _0x5210ca = null,
  _0x5acf0b = {
    particleCount: 0x2bc,
    particleSize: 0x3,
    fallingSpeed: 0.5,
    color: "#fff",
    xspeed: 0x1,
    yspeed: 0.5,
    yspeedF: 0x1,
    angle: 0x5a,
  },
  _0x554c83 = {
    particleCount: 0x5dc,
    particleSize: 0x4,
    fallingSpeed: 0x1,
    color: "#fff",
    xspeed: 1.5,
    yspeed: 0x1,
    yspeedF: 1.5,
    angle: 0x5a,
  },
  _0x125123 = {
    particleCount: 0x5dc,
    particleSize: 0x5,
    fallingSpeed: 1.5,
    color: "#fff",
    xspeed: 0x2,
    yspeed: 1.5,
    yspeedF: 0x3,
    angle: 0x5a,
  };

function _0x2609a2(_0x59f60e, _0x317910) {
  return Math["floor"](Math["random"]() * (_0x317910 - _0x59f60e + 0x1) + _0x59f60e);
}

function _0x24c76a(_0x34c349, _0xc1d70b, _0x36c16a, _0x44f2ef, _0x5a513a) {
  (this["x"] = _0x34c349),
    (this["y"] = _0xc1d70b),
    (this["nx"] = _0x34c349),
    (this["ny"] = _0xc1d70b),
    (this["radius"] = _0x36c16a),
    (this["color"] = _0x44f2ef),
    (this["radians"] = _0x5a513a),
    (this["velocity"] = Math["max"](0.001, Math["random"]() * 0.004)),
    (this["t"] = 0x0),
    (this["update"] = () => {
      (this["radians"] += this["velocity"]),
        (this["y"] += Math["pow"](this["velocity"], _0x5210ca["yspeed"]) + _0x5210ca["yspeed"] * _0x5210ca["yspeedF"]),
        (this["x"] += Math["sin"](this["radians"]) * 0.5 * _0x5210ca["xspeed"]),
        this["draw"]();
    }),
    (this["lerp"] = () => {}),
    (this["draw"] = () => {
      this["lerp"](),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](this["x"], this["y"], this["radius"], 0x0, Math["PI"] * 0x2, ![]),
        (_0x587de3["fillStyle"] = this["color"]),
        _0x587de3["fill"](),
        _0x587de3["closePath"](),
        this["reset"]();
    }),
    (this["reset"] = () => {
      (this["x"] < -_0x5027fb ||
        this["y"] < -_0x5027fb ||
        this["x"] > _0x2c6299 + _0x5027fb ||
        this["y"] > _0x4d3b35 ||
        this["t"] == 0x0 ||
        +new Date() > this["t"]) &&
        ((this["x"] = _0x2609a2(0x0, _0x2c6299 - 0x64)),
        (this["y"] = _0x2609a2(0x0, _0x27ef2a - 0x546)),
        (this["t"] = +new Date() + Math["random"]() * (0x3e8 * 0x1e)));
    });
}

function _0x240b40() {
  (_0x4d3b35 = _0x27ef2a - 0x546 + _0x5027fb), (_0x1875d3 = []);
  for (let _0x5df8fc = 0x0; _0x5df8fc < _0x5210ca["particleCount"]; _0x5df8fc++) {
    _0x1875d3["push"](
      new _0x24c76a(
        _0x2609a2(0x0, _0x2c6299 - 0x64),
        _0x2609a2(0x0, _0x27ef2a - 0x546),
        _0x2609a2(0.5, _0x5210ca["particleSize"]),
        _0x5210ca["color"],
        0x5a
      )
    );
  }
  (_0x668a04 = !![]), (_0x19fa43 = ![]), (_0xa98b58 = +new Date() + 0x2710);
}
var _0x668a04 = ![];

function _0x32f935() {
  if (_0x668a04 && _0x5210ca != null)
    _0x1875d3["forEach"]((_0x36d380) => {
      _0x36d380["update"]();
    });
}

function _0x9b294d() {
  if (_0x5210ca == null) return;
  if (!_0x19fa43) {
    if (_0xa98b58 < +new Date()) _0x19fa43 = !![];
    return;
  }
  if (_0x157509 && !(_0x57ae6d == 0x2)) _0x32f935();
}
var _0x48c344 = _0x3799d1;
(_0x31046b["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x31046b["prototype"]["constructor"] = _0x31046b),
  (_0x31046b["superClass"] = _0x48c344),
  (_0x31046b["prototype"]["animalInfo"] = function () {
    var _0x4db4fc = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x4db4fc["aniName"] = "Seahorse!";
        break;
      case 0xc8:
        _0x4db4fc["aniName"] = "Tully Monster!";
        break;
      case 0xc9:
        _0x4db4fc["aniName"] = "Water Gun Horse!";
        break;
      case 0xca:
        _0x4db4fc["aniName"] = "Leafy Seadragon";
        break;
    }
    return (
      (_0x4db4fc["skinName"] = this["getSkinName"]()),
      (_0x4db4fc["aniDesc"] = ""),
      (_0x4db4fc["upgradeText"] = "UPGRADED to " + _0x4db4fc["aniName"]),
      (_0x4db4fc["aniCol"] = "#502E1A"),
      _0x4db4fc
    );
  }),
  (_0x31046b["prototype"]["getSkinName"] = function () {
    let _0x2ecf5c = this["getSpeciesPath"]() + "/seahorse";
    return _0x2ecf5c;
  }),
  (_0x31046b["prototype"]["getSpeciesPath"] = function () {
    return "ocean/seahorse/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x31046b["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x31046b["prototype"]["getAbilityInfo"] = function (_0x74c952) {
    var _0x178cb9 = {};
    return (
      (_0x178cb9["abilName"] = "Dash!"),
      (_0x178cb9["abilImg"] = "abilities/Dash-Boost.svg"),
      (_0x178cb9["skinThemeID"] = this["skinThemeID"]),
      (_0x178cb9["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x178cb9
    );
  }),
  (_0x31046b["prototype"]["basicDrawSkinImg"] = function () {
    this["setSkinScale"]();
    var _0x4b932f = this["skinRad"];
    let _0x204089 = 1.5;
    var _0x29324e = 0x0;
    if (this["mopeSeasonID"] == 0x1) {
      (this["animalSpecies"] == 0xc8 || this["animalSpecies"] == 0xc9) && (_0x204089 = 1.8);
      if (this["animalSpecies"] == 0xc9) _0x29324e = -0.1;
    }
    this["loadedSkinImg"] &&
      _0x587de3["drawImage"](
        this["loadedSkinImg"],
        -_0x4b932f * _0x204089,
        -_0x4b932f * _0x204089 + _0x4b932f * _0x29324e,
        0x2 * _0x4b932f * _0x204089,
        0x2 * _0x4b932f * _0x204089
      );
  });

function _0x31046b() {
  _0x31046b["superClass"]["call"](this, _0x3fb3b2);
}
(window["Seahorse"] = _0x31046b), _0x17bf26["setCustomClassForGameObjType"](_0x31046b, _0x3fb3b2, _0x4af824);
var _0x48c344 = _0x3799d1;
(_0x36bc07["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x36bc07["prototype"]["constructor"] = _0x36bc07),
  (_0x36bc07["superClass"] = _0x48c344),
  (_0x36bc07["prototype"]["animalInfo"] = function () {
    var _0x1b74de = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x1b74de["aniName"] = "Shrimp!";
        break;
      case 0xc8:
        _0x1b74de["aniName"] = "Deluxe Shrimp!";
        break;
      case 0xc9:
        _0x1b74de["aniName"] = "Chef Shrimp!";
        break;
      case 0xca:
        _0x1b74de["aniName"] = "Sushi Shrimp!";
        break;
    }
    return (
      (_0x1b74de["skinName"] = this["getSkinName"]()),
      (_0x1b74de["aniDesc"] = ""),
      (_0x1b74de["upgradeText"] = "UPGRADED to " + _0x1b74de["aniName"]),
      (_0x1b74de["aniCol"] = "#502E1A"),
      _0x1b74de
    );
  }),
  (_0x36bc07["prototype"]["getSkinName"] = function () {
    let _0x5d9e4c = this["getSpeciesPath"]() + "/shrimp";
    if (this["flag_usingAbility"]) _0x5d9e4c += "2";
    return _0x5d9e4c;
  }),
  (_0x36bc07["prototype"]["getSpeciesPath"] = function () {
    return "ocean/shrimp/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x36bc07["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  });

function _0x36bc07() {
  _0x36bc07["superClass"]["call"](this, _0x3fb3b2);
}
(window["Shrimp"] = _0x36bc07), _0x17bf26["setCustomClassForGameObjType"](_0x36bc07, _0x3fb3b2, _0x596a1b);
var _0x48c344 = _0x3799d1;
(_0x2c5a00["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x2c5a00["prototype"]["constructor"] = _0x2c5a00),
  (_0x2c5a00["superClass"] = _0x48c344),
  (_0x2c5a00["prototype"]["animalInfo"] = function () {
    var _0x43c591 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x43c591["aniName"] = "Trout";
        break;
      case 0xc8:
        _0x43c591["aniName"] = "Clownfish";
        break;
      case 0xc9:
        _0x43c591["aniName"] = "Popsicle Trout";
        break;
      case 0xca:
        _0x43c591["aniName"] = "Royal Guppy";
        break;
      case 0xde:
        _0x43c591["aniName"] = "Ice Husk Trout";
        break;
    }
    return (
      (_0x43c591["skinName"] = this["getSkinName"]()),
      (_0x43c591["aniDesc"] = ""),
      (_0x43c591["upgradeText"] = "UPGRADED to " + _0x43c591["aniName"] + "!"),
      (_0x43c591["aniCol"] = "#502E1A"),
      _0x43c591
    );
  }),
  (_0x2c5a00["prototype"]["getAbilityInfo"] = function (_0x42d75d) {
    var _0x75c6ef = {};
    return (
      (_0x75c6ef["abilName"] = "Extra Boost!"),
      (_0x75c6ef["abilImg"] = "abilities/Dash-Boost.svg"),
      (_0x75c6ef["skinThemeID"] = this["skinThemeID"]),
      (_0x75c6ef["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x75c6ef
    );
  }),
  (_0x2c5a00["prototype"]["getSkinName"] = function () {
    let _0x57ef38 = this["getSpeciesPath"]() + "/trout";
    return _0x57ef38;
  }),
  (_0x2c5a00["prototype"]["getSpeciesPath"] = function () {
    return "ocean/trout/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x2c5a00["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  });

function _0x2c5a00() {
  _0x2c5a00["superClass"]["call"](this, _0x3fb3b2);
}
(window["Trout"] = _0x2c5a00), _0x17bf26["setCustomClassForGameObjType"](_0x2c5a00, _0x3fb3b2, _0x3dee49);
var _0x48c344 = _0x3799d1;
(_0xbc2f86["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0xbc2f86["prototype"]["constructor"] = _0xbc2f86),
  (_0xbc2f86["superClass"] = _0x48c344),
  (_0xbc2f86["prototype"]["getSkinName"] = function () {
    return "arctic/arcticfox/" + this["animalSpecies"] + this["getSubSpecies"]() + "/arcticfox";
  }),
  (_0xbc2f86["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0xbc2f86["prototype"]["animalInfo"] = function () {
    var _0x1b0cb7 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x1b0cb7["aniName"] = "Arctic Fox";
        break;
      case 0xc8:
        _0x1b0cb7["aniName"] = "Ice Fox";
        break;
      case 0xc9:
        _0x1b0cb7["aniName"] = "Forest Spirit Fox";
        break;
      case 0xca:
        _0x1b0cb7["aniName"] = "Ice Fox";
        break;
    }
    return (
      (_0x1b0cb7["skinName"] = this["getSkinName"]()),
      (_0x1b0cb7["aniDesc"] = ""),
      (_0x1b0cb7["upgradeText"] =
        "UPGRADED to " +
        _0x1b0cb7["aniName"] +
        "!\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!"),
      (_0x1b0cb7["aniCol"] = "#CFCFCF"),
      _0x1b0cb7
    );
  }),
  (_0xbc2f86["prototype"]["getAbilityInfo"] = function (_0x3302df) {
    var _0x53007c = {};
    return (
      (_0x53007c["abilName"] = "Pull from Hole"),
      (_0x53007c["abilImg"] = "abilities/Dig.svg"),
      (_0x53007c["skinThemeID"] = this["skinThemeID"]),
      (_0x53007c["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x53007c
    );
  });

function _0xbc2f86() {
  _0xbc2f86["superClass"]["call"](this, _0x3fb3b2);
}
(window["ArcticFox"] = _0xbc2f86), _0x17bf26["setCustomClassForGameObjType"](_0xbc2f86, _0x3fb3b2, _0x19954b);
var _0x48c344 = _0x3799d1;
(_0x463102["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x463102["prototype"]["constructor"] = _0x463102),
  (_0x463102["superClass"] = _0x48c344),
  (_0x463102["prototype"]["getSkinName"] = function () {
    let _0x587cf7 = this["getSpeciesPath"]() + "/fox";
    return _0x587cf7;
  }),
  (_0x463102["prototype"]["getSpeciesPath"] = function () {
    return "land/fox/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x463102["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x463102["prototype"]["animalInfo"] = function () {
    var _0xb330b1 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0xb330b1["aniName"] = "Fox!";
        break;
      case 0xc8:
        _0xb330b1["aniName"] = "Night Thief!";
        break;
      case 0xc8:
        _0xb330b1["aniName"] = "Sneaky Fox";
        break;
      case 0xcc:
        _0xb330b1["aniName"] = "Black Asura Fox";
        break;
    }
    return (
      (_0xb330b1["skinName"] = this["getSkinName"]()),
      (_0xb330b1["aniDesc"] = ""),
      (_0xb330b1["upgradeText"] =
        "UPGRADED to " +
        _0xb330b1["aniName"] +
        "!\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!"),
      (_0xb330b1["aniCol"] = "#FF9D43"),
      _0xb330b1
    );
  }),
  (_0x463102["prototype"]["getAbilityInfo"] = function (_0x3f63da) {
    var _0x1fd975 = {};
    return (
      (_0x1fd975["abilName"] = "Pull from Hole"),
      (_0x1fd975["abilImg"] = "abilities/Dig.svg"),
      (_0x1fd975["skinThemeID"] = this["skinThemeID"]),
      (_0x1fd975["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x1fd975
    );
  });

function _0x463102() {
  _0x463102["superClass"]["call"](this, _0x3fb3b2);
}
(window["Fox"] = _0x463102), _0x17bf26["setCustomClassForGameObjType"](_0x463102, _0x3fb3b2, _0x2e6d2a);
var _0x48c344 = _0x3799d1;
(_0x5b5259["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x5b5259["prototype"]["constructor"] = _0x5b5259),
  (_0x5b5259["superClass"] = _0x48c344),
  (_0x5b5259["prototype"]["animalInfo"] = function () {
    var _0x35addf = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x35addf["aniName"] = "Rabbit!";
        break;
      case 0xc8:
        _0x35addf["aniName"] = "Monochrome Rabbit!";
        break;
      case 0xca:
        switch (this["animalSubSpecies"]) {
          case 0x0:
            _0x35addf["aniName"] = "Jackapole";
            break;
          case 0x1:
            _0x35addf["aniName"] = "Hollow Rabbit";
        }
        break;
      case 0xcc:
        _0x35addf["aniName"] = "Carrot Rabbit";
        break;
      case 0xdc:
        _0x35addf["aniName"] = "Fairy Rabbit";
        break;
      case 0xde:
        _0x35addf["aniName"] = "Jolly Rabbit";
        break;
    }
    return (
      (_0x35addf["skinName"] = this["getSpeciesPath"]("rabbit") + "/rabbit"),
      (_0x35addf["aniDesc"] = ""),
      (_0x35addf["upgradeText"] = "UPGRADED to " + _0x35addf["aniName"]),
      (_0x35addf["aniCol"] = "#502E1A"),
      _0x35addf
    );
  }),
  (_0x5b5259["prototype"]["getSkinName"] = function () {
    return this["getSpeciesPath"]("rabbit") + "/rabbit";
  }),
  (_0x5b5259["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return this["animalSpecies"] === 0xca ? "/" + this["animalSubSpecies"] : "";
  }),
  (_0x5b5259["prototype"]["getSpeciesPath"] = function (_0x4a8579) {
    return "land/" + _0x4a8579 + "/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x5b5259["prototype"]["getAbilityInfo"] = function (_0x5aa91c) {
    var _0x19d5db = {};
    return (
      (_0x19d5db["abilName"] = "Dig Hole!"),
      (_0x19d5db["abilImg"] = "abilities/Dig.svg"),
      (_0x19d5db["skinThemeID"] = this["skinThemeID"]),
      (_0x19d5db["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x19d5db
    );
  }),
  (_0x5b5259["prototype"]["getSkinName"] = function (_0x418b14) {
    var _0x406987 = this["getSpeciesPath"]("rabbit") + "/rabbit" + (_0x418b14 === !![] ? ".png" : "");
    return _0x406987;
  });

function _0x5b5259() {
  _0x5b5259["superClass"]["call"](this, _0x3fb3b2);
}
(window["Rabbit"] = _0x5b5259), _0x17bf26["setCustomClassForGameObjType"](_0x5b5259, _0x3fb3b2, _0x388c4c);
var _0x48c344 = _0x3799d1;
(_0x142feb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x142feb["prototype"]["constructor"] = _0x142feb),
  (_0x142feb["superClass"] = _0x48c344),
  (_0x142feb["prototype"]["getSkinName"] = function () {
    let _0x461de9 = this["getSpeciesPath"]() + "/hedgehog";
    if (this["flag_usingAbility"]) _0x461de9 += "2";
    return _0x461de9;
  }),
  (_0x142feb["prototype"]["getSpeciesPath"] = function () {
    return "land/hedgehog/" + this["animalSpecies"] + this["getSubSpecies"]();
  }),
  (_0x142feb["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x142feb["prototype"]["animalInfo"] = function () {
    var _0x32d237 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x32d237["aniName"] = "Hedgehog!";
        break;
      case 0xca:
        _0x32d237["aniName"] = "Grass Hedgehog";
        break;
    }
    return (
      (_0x32d237["skinName"] = this["getSkinName"]()),
      (_0x32d237["aniDesc"] = ""),
      (_0x32d237["upgradeText"] = "UPGRADED to " + _0x32d237["aniName"] + "!\x0a (Hold W to become spiky, and dangerous to touch!)"),
      (_0x32d237["aniCol"] = "#5b400d"),
      _0x32d237
    );
  }),
  (_0x142feb["prototype"]["getAbilityInfo"] = function (_0x501961) {
    var _0x1fe37d = {};
    return (
      (_0x1fe37d["abilName"] = "Spikes!"),
      (_0x1fe37d["abilImg"] = "abilities/Spike.svg"),
      (_0x1fe37d["skinThemeID"] = this["skinThemeID"]),
      (_0x1fe37d["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x1fe37d
    );
  });

function _0x142feb() {
  _0x142feb["superClass"]["call"](this, _0x3fb3b2);
}
(window["Hedgehog"] = _0x142feb), _0x17bf26["setCustomClassForGameObjType"](_0x142feb, _0x3fb3b2, _0x26c175);
var _0x48c344 = _0x307a43;
(_0x56f310["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x56f310["prototype"]["constructor"] = _0x56f310),
  (_0x56f310["superClass"] = _0x48c344),
  (_0x56f310["prototype"]["foodType"] = 0x0),
  (_0x56f310["prototype"]["updateZ"] = function () {
    this["z"] = -0x62;
  }),
  (_0x56f310["prototype"]["customDraw"] = function (_0x439909) {
    var _0x1d7fd0 = this["rad"] - 0xa;
    this["waterRipples"](_0x1d7fd0), _0x587de3["save"](), _0x587de3["restore"]();
    var _0x133184 = "img/floaters/" + this["floaterType"] + ".png";
    this["drawSkin"](_0x133184, _0x1d7fd0);
  }),
  (_0x56f310["prototype"]["drawSkin"] = function (_0x2d6960, _0x3a14d9) {
    _0x587de3["save"]();
    var _0x274b58 = this["getSkinImageObj"](_0x2d6960);
    _0x274b58 &&
      (_0x587de3["save"](),
      _0x587de3["rotate"](this["angle"]),
      _0x587de3["drawImage"](_0x274b58, -_0x3a14d9, -_0x3a14d9, 0x2 * _0x3a14d9, 0x2 * _0x3a14d9),
      _0x587de3["restore"]()),
      _0x587de3["restore"]();
  });
var _0x246405 = 0.01,
  _0x39f338 = 0.02,
  _0x398112 = 0xa,
  _0x585b46 = 0xf;
(_0x56f310["prototype"]["waterRipples"] = function (_0xb335b4) {
  _0xb335b4 = _0xb335b4 - 0x5;
  var _0x1fcb01 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
    _0x4f1324 = 1.75,
    _0x1a81eb = 0.5,
    _0x4d782f = _0x1a81eb * Math["sin"](((0x2 * Math["PI"]) / _0x4f1324) * _0x1fcb01),
    _0x95166d = _0x587de3["globalAlpha"];
  !this["isFloatingInWater"] && (_0x4d782f = 0x1);
  if (
    this["floaterType"] == 0x0 ||
    this["floaterType"] == 0x2 ||
    this["floaterType"] == 0x3 ||
    this["floaterType"] == 0x4 ||
    this["floaterType"] == 0x5 ||
    this["floaterType"] == 0x7
  ) {
    var _0x29cd07 = "img/floaters/" + this["floaterType"] + "_ripple.png";
    (_0x587de3["globalAlpha"] *= 0.7 - 0.25 * _0x4d782f),
      this["drawSkin"](_0x29cd07, _0xb335b4 + _0x398112 - 0x5),
      (_0x587de3["globalAlpha"] *= 0.6 - 0.2 * _0x4d782f),
      this["drawSkin"](_0x29cd07, _0xb335b4 + _0x585b46 - 0x5);
  } else
    (_0x587de3["globalAlpha"] *= 0.8 - 0.2 * _0x4d782f),
      _0x39e127(0x0, _0xb335b4 * _0x246405, _0xb335b4 * (0.9 + 0.15 * _0x4d782f), _0x398112, "#4668ff"),
      (_0x587de3["globalAlpha"] *= 0.7 - 0.2 * _0x4d782f),
      _0x39e127(0x0, -_0xb335b4 * _0x39f338, _0xb335b4 * (1.05 + 0.1 * _0x4d782f), _0x585b46, "#4668ff");
  _0x587de3["globalAlpha"] = _0x95166d;
}),
  (_0x56f310["prototype"]["readCustomData_onNewlyVisible"] = function (_0x5e3ca7) {
    this["floaterType"] = _0x5e3ca7["readUInt8"]();
  }),
  (_0x56f310["prototype"]["isFloatingInWater"] = !![]),
  (_0x56f310["prototype"]["readUpdatedProperty"] = function (_0x390c06, _0x417a15) {
    _0x390c06 == _0x3b5a97 && (this["isFloatingInWater"] = _0x417a15["readUInt8"]() == 0x1);
  });
var _0x137735 = 0x90;

function _0x56f310() {
  _0x56f310["superClass"]["call"](this, _0x137735), (this["drawEffectScale_Slow"] = !![]);
}
(window["WaterFloater"] = _0x56f310), _0x17bf26["setCustomClassForGameObjType"](_0x56f310, _0x137735);
var _0x48c344 = _0x307a43;
(_0x48958f["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x48958f["prototype"]["constructor"] = _0x48958f),
  (_0x48958f["superClass"] = _0x48c344),
  (_0x48958f["prototype"]["lookAngle"] = 0x0),
  (_0x48958f["prototype"]["frameNumber"] = 0x0),
  (_0x48958f["prototype"]["isRolling"] = ![]),
  (_0x48958f["prototype"]["pumpkinType"] = ![]),
  (_0x48958f["prototype"]["updateZ"] = function () {
    this["z"] = 0x3ea;
  });
var _0xbbe2d5 = -0.07,
  _0x27a356 = -0.1,
  _0x443579 = 0x8,
  _0x2ff6a0 = 0xc,
  _0x12ddd5 = 0x8;
(_0x48958f["prototype"]["waterRipples"] = function (_0x541457) {
  _0x587de3["save"](), (_0x541457 = _0x541457 + _0x12ddd5);
  var _0x75d240 = (_0x168a54 - this["spawnTime"]) / 0x3e8,
    _0x4f6f5e = 1.75,
    _0x3a3c8d = 0.5,
    _0x348d12 = _0x3a3c8d * Math["sin"](((0x2 * Math["PI"]) / _0x4f6f5e) * _0x75d240),
    _0x2e35b5 = _0x587de3["globalAlpha"];
  !this["isFloating"] && (_0x348d12 = 0x1),
    _0x587de3["rotate"](_0x3d960f(this["lookAngle"] + 0x2d)),
    (_0x587de3["globalAlpha"] *= 0.8 - 0.2 * _0x348d12),
    _0x39e127(0x0, _0x541457 * _0xbbe2d5, _0x541457 * (0.9 + 0.15 * _0x348d12), _0x443579, "#4668ff"),
    (_0x587de3["globalAlpha"] *= 0.7 - 0.2 * _0x348d12),
    _0x39e127(0x0, -_0x541457 * _0x27a356, _0x541457 * (1.05 + 0.1 * _0x348d12), _0x2ff6a0, "#4668ff"),
    (_0x587de3["globalAlpha"] = _0x2e35b5),
    _0x587de3["restore"]();
}),
  (_0x48958f["prototype"]["customDraw"] = function (_0x476cd3) {
    var _0x5e21c0 = this["rad"] - 0xa,
      _0xded4ab = 0x1,
      _0x5c0f51 = 0.15,
      _0x3033f3 = 0.8,
      _0x120ea2 = 0.5 * (_0x3033f3 - _0x5c0f51),
      _0xbf7d87 = _0x5c0f51 + _0x120ea2 + _0x120ea2 * Math["sin"](((0x2 * Math["PI"]) / _0xded4ab) * (_0x168a54 / 0x3e8)),
      _0xded4ab = 0x1,
      _0x5c0f51 = 0.85,
      _0x3033f3 = 0x1,
      _0x120ea2 = 0.5 * (_0x3033f3 - _0x5c0f51),
      _0x1bee13 = 0x1;
    if (this["isRolling"]) this["frameNumber"] = Math["trunc"](_0x168a54 / 0x78) % 0x8;
    var _0x16de5f = this["getSkinImageObj"]("img/beachball/" + this["pumpkinType"] + "/" + this["frameNumber"] + ".png");
    if (_0x16de5f) {
      var _0x3c7502 = 0x0,
        _0x492be7 = this["rad"],
        _0x3764b1 = this["rad"] * 2.5;
      imH = this["rad"] * 2.5;
      var _0x57ad5b = 0.5,
        _0x5656b7 = 0.95;
      _0x587de3["save"]();
      {
        (_0x587de3["globalAlpha"] *= this["onFireEffA"] * _0x1bee13),
          _0x587de3["rotate"](this["angle"] + _0x2f9e35),
          _0x587de3["drawImage"](_0x16de5f, _0x3c7502 + _0x3764b1 * -_0x57ad5b, _0x492be7 + imH * -_0x5656b7, _0x3764b1, imH);
      }
      _0x587de3["restore"]();
    } else {
    }
  }),
  (_0x48958f["prototype"]["isFloating"] = ![]),
  (_0x48958f["prototype"]["isRolling"] = ![]),
  (_0x48958f["prototype"]["readUpdatedProperty"] = function (_0x19f16f, _0x26b098) {
    if (_0x19f16f == _0x3b5a97) this["isFloating"] = _0x26b098["readUInt8"]() == 0x1;
    else _0x19f16f == _0x5e0954 && (this["isRolling"] = _0x26b098["readUInt8"]() == 0x1);
  }),
  (_0x48958f["prototype"]["readCustomData_onNewlyVisible"] = function (_0x37772b) {
    (this["isRolling"] = _0x37772b["readUInt8"]() == 0x1),
      (this["pumpkinType"] = _0x37772b["readUInt8"]()),
      (this["isFloating"] = _0x37772b["readUInt8"]() == 0x1);
  });

function _0x48958f() {
  _0x48958f["superClass"]["call"](this, _0x1748b1),
    (this["lookAngle"] = 0x0),
    (this["isRolling"] = ![]),
    (this["pumpkinType"] = ![]),
    (this["doesDrawEffectScale"] = !![]),
    (this["drawEffectScale_Slow"] = !![]);
}
var _0x1748b1 = 0x91;
(window["BeachBall"] = _0x48958f), _0x17bf26["setCustomClassForGameObjType"](_0x48958f, _0x1748b1);
var _0x48c344 = _0x307a43;
(_0x2d018e["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x2d018e["prototype"]["constructor"] = _0x2d018e),
  (_0x2d018e["superClass"] = _0x48c344),
  (_0x2d018e["prototype"]["frameNumber"] = 0x0),
  (_0x2d018e["prototype"]["umbrellaType"] = 0x0),
  (_0x2d018e["prototype"]["umbrellaColor"] = 0x0),
  (_0x2d018e["prototype"]["isClosed"] = ![]),
  (_0x2d018e["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"] + (!this["isClosed"] ? 0x834 : 0x0);
  }),
  (_0x2d018e["prototype"]["customDraw"] = function (_0x17cea9) {
    var _0x4b303b = 0x1,
      _0x32bc5d = 0.15,
      _0x4a3fb4 = 0.8,
      _0x46ccb1 = 0.5 * (_0x4a3fb4 - _0x32bc5d),
      _0x382cb0 = _0x32bc5d + _0x46ccb1 + _0x46ccb1 * Math["sin"](((0x2 * Math["PI"]) / _0x4b303b) * (_0x168a54 / 0x3e8)),
      _0x4b303b = 0x1,
      _0x32bc5d = 0.85,
      _0x4a3fb4 = 0x1,
      _0x46ccb1 = 0.5 * (_0x4a3fb4 - _0x32bc5d),
      _0x51bae1 = 0x1,
      _0x4448aa = this["rad"] * 1.5,
      _0x2d9b50 = this["getSkinImageObj"](
        "img/umbrella/" + this["umbrellaType"] + "/" + this["umbrellaColor"] + "/umbrella" + (this["isClosed"] ? "-closed" : "") + ".png"
      );
    if (_0x2d9b50) {
      var _0x526726 = 0x0,
        _0x43969f = this["rad"],
        _0x1251c0 = this["rad"] * 2.5;
      imH = this["rad"] * 2.5;
      var _0x2c13a0 = 0.5,
        _0x2924b9 = 0.95;
      _0x587de3["save"]();
      {
        (_0x587de3["globalAlpha"] *= this["onFireEffA"] * _0x51bae1),
          _0x587de3["rotate"](this["angle"]),
          _0x587de3["drawImage"](_0x2d9b50, _0x526726 + _0x1251c0 * -_0x2c13a0, _0x43969f + imH * -_0x2924b9, _0x1251c0, imH);
      }
      _0x587de3["restore"]();
    } else {
    }
  }),
  (_0x2d018e["prototype"]["readUpdatedProperty"] = function (_0x4af7fa, _0x12d09a) {
    if (_0x4af7fa == _0x3b5a97) this["isFloating"] = _0x12d09a["readUInt8"]() == 0x1;
    else _0x4af7fa == _0x5e0954 && (this["isClosed"] = _0x12d09a["readUInt8"]() == 0x0);
  }),
  (_0x2d018e["prototype"]["readCustomData_onNewlyVisible"] = function (_0x12b5d0) {
    (this["isClosed"] = _0x12b5d0["readUInt8"]() == 0x1),
      (this["umbrellaType"] = _0x12b5d0["readUInt8"]()),
      (this["umbrellaColor"] = _0x12b5d0["readUInt8"]());
  });

function _0x2d018e() {
  _0x2d018e["superClass"]["call"](this, _0x50c569),
    (this["umbrellaType"] = 0x0),
    (this["isClosed"] = ![]),
    (this["doesDrawEffectScale"] = !![]),
    (this["drawEffectScale_Slow"] = !![]);
}
var _0x50c569 = 0x92;
(window["Umbrella"] = _0x2d018e), _0x17bf26["setCustomClassForGameObjType"](_0x2d018e, _0x50c569);
var _0x48c344 = _0x3799d1;
(_0x46eace["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x46eace["prototype"]["constructor"] = _0x46eace),
  (_0x46eace["superClass"] = _0x48c344),
  (_0x46eace["prototype"]["animalInfo"] = function () {
    var _0x17fba3 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x17fba3["aniName"] = "Chipmunk!";
        break;
      case 0xc9:
        _0x17fba3["aniName"] = "Playful Munk!";
        break;
      case 0xca:
        _0x17fba3["aniName"] = "Chipmonk";
        break;
    }
    return (
      (_0x17fba3["skinName"] = this["getSkinName"]()),
      (_0x17fba3["aniDesc"] = ""),
      (_0x17fba3["upgradeText"] = "You're a tiny " + _0x17fba3["aniName"] + " - Eat food to grow!"),
      (_0x17fba3["aniCol"] = "#CFCFCF"),
      _0x17fba3
    );
  }),
  (_0x46eace["prototype"]["getSkinName"] = function () {
    return "arctic/chipmunk/" + this["animalSpecies"] + this["getSubSpecies"]() + "/chipmunk";
  }),
  (_0x46eace["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  });

function _0x46eace() {
  _0x46eace["superClass"]["call"](this, _0x3fb3b2);
}
(window["Chipmunk"] = _0x46eace), _0x17bf26["setCustomClassForGameObjType"](_0x46eace, _0x3fb3b2, _0x21c202);
var _0x48c344 = _0x3799d1;
(_0x4e09ae["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x4e09ae["prototype"]["constructor"] = _0x4e09ae),
  (_0x4e09ae["superClass"] = _0x48c344),
  (_0x4e09ae["prototype"]["getSkinName"] = function () {
    return "arctic/arctichare/" + this["animalSpecies"] + this["getSubSpecies"]() + "/arctichare";
  }),
  (_0x4e09ae["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x4e09ae["prototype"]["animalInfo"] = function () {
    var _0x4302d6 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x4302d6["aniName"] = "Arctic Hare!";
        break;
      case 0xc9:
        _0x4302d6["aniName"] = "Snow Cone Hare!";
        break;
    }
    return (
      (_0x4302d6["skinName"] = this["getSkinName"]()),
      (_0x4302d6["aniDesc"] = ""),
      (_0x4302d6["upgradeText"] = "UPGRADED to " + _0x4302d6["aniName"]),
      (_0x4302d6["aniCol"] = "#CFCFCF"),
      _0x4302d6
    );
  }),
  (_0x4e09ae["prototype"]["getAbilityInfo"] = function (_0x19a997) {
    var _0x44edd5 = {};
    return (
      (_0x44edd5["abilName"] = "Dig Hole!"),
      (_0x44edd5["abilImg"] = "abilities/Dig.svg"),
      (_0x44edd5["skinThemeID"] = this["skinThemeID"]),
      (_0x44edd5["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x44edd5
    );
  });

function _0x4e09ae() {
  _0x4e09ae["superClass"]["call"](this, _0x3fb3b2);
}
(window["ArcticHare"] = _0x4e09ae), _0x17bf26["setCustomClassForGameObjType"](_0x4e09ae, _0x3fb3b2, _0xd9bb61);
var _0x48c344 = _0x3799d1;
(_0x12ec5b["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x12ec5b["prototype"]["constructor"] = _0x12ec5b),
  (_0x12ec5b["superClass"] = _0x48c344),
  (_0x12ec5b["prototype"]["animalInfo"] = function () {
    var _0x335833 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x335833["aniName"] = "Polar Bear";
        break;
      case 0xc9:
        _0x335833["aniName"] = "Cola Connoisseur";
        break;
      case 0xca:
        _0x335833["aniName"] = "Water Bear";
        break;
    }
    return (
      (_0x335833["aniDesc"] = ""),
      (_0x335833["upgradeText"] = "UPGRADED to " + _0x335833["aniName"] + "!\x0a Polar bears can climb hills! \x0a+ They're amazing swimmers!"),
      (_0x335833["aniCol"] = "#e4e4e4"),
      (_0x335833["skinName"] = this["getSkinName"]()),
      _0x335833
    );
  }),
  (_0x12ec5b["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x12ec5b["prototype"]["getAbilityInfo"] = function (_0x348ae3) {
    var _0x6e551d = {};
    return (
      (_0x6e551d["abilName"] = "Claw Slash!"),
      (_0x6e551d["abilImg"] = "abilities/Slash-Claw.svg"),
      (_0x6e551d["skinThemeID"] = this["skinThemeID"]),
      (_0x6e551d["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x6e551d
    );
  }),
  (_0x12ec5b["prototype"]["getSkinName"] = function () {
    var _0x286ccb = "arctic/bear/" + this["animalSpecies"] + this["getSubSpecies"]() + "/bear";
    if (this["animalSpecies"] == 0xc9 && this["flag_usingAbility"]) _0x286ccb += "1";
    return _0x286ccb;
  });

function _0x12ec5b() {
  _0x12ec5b["superClass"]["call"](this, _0x3fb3b2);
}
(window["PolarBear"] = _0x12ec5b), _0x17bf26["setCustomClassForGameObjType"](_0x12ec5b, _0x3fb3b2, _0x33a471);
var _0x48c344 = _0x3799d1;
(_0x3c9d82["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x3c9d82["prototype"]["constructor"] = _0x3c9d82),
  (_0x3c9d82["superClass"] = _0x48c344),
  (_0x3c9d82["prototype"]["getSpeciesPath"] = function (_0xc77639) {
    return "arctic/" + _0xc77639 + "/" + this["animalSpecies"];
  }),
  (_0x3c9d82["prototype"]["animalInfo"] = function () {
    var _0x1464fd = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x1464fd["aniName"] = "Lemming!";
        break;
    }
    return (
      (_0x1464fd["skinName"] = this["getSpeciesPath"]("lemming") + "/lemming"),
      (_0x1464fd["aniDesc"] = ""),
      (_0x1464fd["upgradeText"] = "You're a tiny " + _0x1464fd["aniName"] + " - Eat food to grow!"),
      (_0x1464fd["aniCol"] = "#CFCFCF"),
      _0x1464fd
    );
  }),
  (_0x3c9d82["prototype"]["getSkinName"] = function () {
    var _0x376a2e = this["getSpeciesPath"]("lemming") + "/lemming";
    return _0x376a2e;
  });

function _0x3c9d82() {
  _0x3c9d82["superClass"]["call"](this, _0x3fb3b2);
}
(window["Lemming"] = _0x3c9d82), _0x17bf26["setCustomClassForGameObjType"](_0x3c9d82, _0x3fb3b2, _0x3807fc);

function _0x556bba(_0x121e47) {
  var _0x44160d = _0x17bf26["createGameObjOfOType"](_0x3fb3b2, _0x121e47["animalType"]);
  (_0x44160d["animalType"] = _0x121e47["animalType"]),
    (_0x44160d["animalSpecies"] = _0x121e47["animalSpecies"]),
    (_0x44160d["animalSubSpecies"] = _0x121e47["animalSubSpecies"]),
    (_0x44160d["animalPremiumSkin"] = _0x121e47["premiumSkinGroup"]),
    (_0x44160d["mopeSeasonID"] = 0x1),
    (_0x44160d["skinThemeID"] = 0x0);
  var _0x2eb59e = _0x44160d["animalInfo"]();
  (_0x121e47["aniCol"] = _0x2eb59e["aniCol"]),
    (_0x121e47["aniName"] = _0x2eb59e["aniName"]),
    (_0x121e47["skinName"] = _0x2eb59e["skinName"]),
    (_0x121e47["upgradeText"] = _0x2eb59e["upgradeText"]);
  var _0x372056 = _0x44160d["getAbilityInfo"](_0x121e47["abilityType"]);
  return (_0x121e47["abilityImage"] = _0x372056["abilImg"]), (_0x121e47["abilityName"] = _0x372056["abilName"]), _0x121e47;
}
class _0x40c26a {
  constructor(_0x419841) {
    this["data"] = _0x419841;
    if (!this["miniMapCanvas"]) this["miniMapCanvas"] = document["createElement"]("canvas");
    (this["miniMapCanvas"]["width"] = this["data"]["mapWidth"]),
      (this["miniMapCanvas"]["height"] = this["data"]["mapHeight"]),
      (this["ctx_"] = this["miniMapCanvas"]["getContext"]("2d")),
      (this["ctx_"]["globalAlpha"] = 0.2),
      this["drawObjects"]();
  }
  ["drawObjects"]() {
    for (let _0x4f430 = 0x0; _0x4f430 < this["data"]["objects"]["length"]; _0x4f430++) {
      let _0x13fb92 = this["data"]["objects"][_0x4f430];
      if (_0x13fb92["isRect"]) this["drawRect"](_0x13fb92);
      else this["drawCircle"](_0x13fb92);
    }
  }
  ["drawCircle"](_0x597439) {
    var _0x35d79d = _0x597439["x"] * this["data"]["scaleX"],
      _0x501b18 = _0x597439["y"] * this["data"]["scaleY"],
      _0x2cbffc = _0x597439["r"] / this["data"]["objScale"];
    if (_0x597439["objType"] == _0x8994b9) _0x2cbffc = _0x2cbffc * 0x2;
    else {
      if (_0x597439["outline"] !== undefined) {
        this["ctx_"]["beginPath"](), (this["ctx_"]["globalAlpha"] = 0x1), (this["ctx_"]["fillStyle"] = _0x597439["outline"]);
        var _0x59af41 = Math["max"](0x1, _0x2cbffc) + 0x1;
        this["ctx_"]["arc"](_0x35d79d, _0x501b18, _0x59af41, 0x0, 0x2 * Math["PI"]), this["ctx_"]["fill"]();
      }
    }
    if (_0x597439["objType"] == _0x8994b9 && _0x11b99a) {
      var _0x960500 = "/assets/s/2/gameobj/78/mini" + _0x597439["teamID"] + ".png",
        _0x4bf352 = _0x2d8f34(_0x960500);
      _0x4bf352 &&
        ((this["ctx_"]["globalAlpha"] = 0x1),
        this["ctx_"]["save"](),
        this["ctx_"]["drawImage"](_0x4bf352, _0x35d79d - _0x2cbffc, _0x501b18 - _0x2cbffc, _0x2cbffc * 0x2, _0x2cbffc * 0x2),
        this["ctx_"]["restore"]());
    } else
      this["ctx_"]["beginPath"](),
        (this["ctx_"]["globalAlpha"] = 0x1),
        (this["ctx_"]["fillStyle"] = _0x597439["c"]),
        this["ctx_"]["arc"](_0x35d79d, _0x501b18, Math["max"](0x1, _0x2cbffc), 0x0, 0x2 * Math["PI"]),
        this["ctx_"]["fill"]();
  }
  ["drawRect"](_0x19c8fb) {
    var _0x4a2bf0 = _0x19c8fb["x"] * this["data"]["scaleX"],
      _0x4c54f5 = _0x19c8fb["y"] * this["data"]["scaleY"],
      _0x325f71 = _0x19c8fb["w"] * this["data"]["scaleX"],
      _0x2fbb9d = _0x19c8fb["h"] * this["data"]["scaleY"];
    (this["ctx_"]["globalAlpha"] = 0x1),
      (this["ctx_"]["fillStyle"] = _0x19c8fb["c"]),
      this["ctx_"]["fillRect"](_0x4a2bf0 - _0x325f71 / 0x2, _0x4c54f5 - _0x2fbb9d / 0x2, _0x325f71, _0x2fbb9d);
  }
  ["drawMap"]() {
    if (this["miniMapCanvas"] && _0x90acdb) {
      var _0x158301 = _0x645c5 - (0xa + this["data"]["mapWidth"]) * _0x4454f9,
        _0x2bdc2c = 0xa * _0x4454f9;
      _0x587de3["save"](),
        (_0x587de3["globalAlpha"] = 0x1),
        _0x587de3["drawImage"](
          this["miniMapCanvas"],
          _0x158301,
          _0x2bdc2c,
          this["data"]["mapWidth"] * _0x4454f9,
          this["data"]["mapHeight"] * _0x4454f9
        ),
        _0x587de3["restore"]();
      const _0x1b0f7d = _0x645c5 - (0xc + this["data"]["mapWidth"]) * _0x4454f9,
        _0x9fa5d3 = _0x2bdc2c - 0x1 * _0x4454f9,
        _0x4fc839 = 0xa,
        _0x4d4aff = 0x4;
      _0x587de3["save"](),
        (_0x587de3["strokeStyle"] = "#8AF5AF"),
        (_0x587de3["lineWidth"] = _0x4d4aff),
        _0x396243(
          _0x587de3,
          _0x1b0f7d,
          _0x9fa5d3,
          (this["data"]["mapWidth"] + 0x2) * _0x4454f9,
          (this["data"]["mapHeight"] + 0x2) * _0x4454f9,
          _0x4fc839,
          ![],
          !![]
        ),
        _0x587de3["restore"]();
    }
    _0x472668();
    if (_0x198146 && _0x198146["length"] > 0x0) {
      const _0x387454 = this["data"]["mapWidth"] + 0xc,
        _0x57607f = 0xa;
      for (var _0x525de9 = 0x0; _0x525de9 < _0x198146["length"]; _0x525de9++) {
        (_0x198146[_0x525de9]["sx"] = _0x387454), (_0x198146[_0x525de9]["sy"] = _0x57607f), _0x4ec132(_0x198146[_0x525de9], "white", 0x1);
      }
    }
    if (_0x26612d != null) _0x4ec132(_0x26612d, "cyan", 0x1);
    var _0x24273a = _0x2fa637[_0x204989];
    if (_0x24273a) {
      const _0x201703 = this["data"]["mapWidth"] + 0xc,
        _0x3e3968 = 0xa;
      _0x4ec132(
        {
          id: _0x204989,
          sx: _0x201703,
          sy: _0x3e3968,
          x: _0x28d3c4,
          y: _0x104094,
        },
        "white",
        0x1
      );
    }
    var _0x5e7e21 = this["data"]["mapHeight"] * _0x4454f9 + _0x2bdc2c;
    _0x5e7e21 += 0xc * _0x4454f9;
    var _0x4e959e = 0xa * _0x4454f9;
    this["showPlayerCount"](_0x4e959e, _0x4e959e + _0x5e7e21);
  }
  ["setPlayersCount"](_0x4ae392, _0x7f89b9) {
    (_0x1eb893["playersCount"] = _0x4ae392), (_0x1eb893["alivePlayersCount"] = _0x7f89b9), _0x1ad1ae["setText"](_0x4acd30(_0x4ae392) + " online");
  }
  ["getFontSize"]() {
    return 0x12 * _0x385a2a;
  }
  ["showPlayerCount"](_0x5ce86b, _0x2a084d) {
    if (_0x226297 || _0x34fedb) return;
    let _0x154dfe = this["getFontSize"]();
    _0x1ad1ae["setFontSize"](_0x154dfe),
      _0x1ac30b["setFontSize"](_0x154dfe),
      _0x4e5a1f["setFontSize"](_0x154dfe),
      (_0x1ad1ae["x"] = _0x645c5 - (_0x5ce86b + _0x1ad1ae["width"] / 0x2)),
      (_0x1ad1ae["y"] = _0x2a084d - _0x1ad1ae["height"] / 0x2),
      _0x1ad1ae["draw"](),
      (_0x4e5a1f["x"] = _0x645c5 - (_0x5ce86b + _0x4e5a1f["width"] / 0x2)),
      (_0x4e5a1f["y"] = _0x1ad1ae["y"] + 0xf * _0x4454f9),
      _0x4e5a1f["draw"]();
  }
}
var _0x4406dc = 0x93,
  _0x48c344 = _0x307a43;
(_0x18ec54["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x18ec54["prototype"]["constructor"] = _0x18ec54),
  (_0x18ec54["superClass"] = _0x48c344),
  (_0x18ec54["prototype"]["drawGrid"] = _0x3d2be2["drawGrid"]),
  (_0x18ec54["prototype"]["updateZ"] = function () {
    switch (this["biome"]) {
      case _0x4c28d1:
        this["z"] = -0x12c;
        break;
      case _0x28e4ca:
        this["z"] = -0x12b;
        break;
      case _0x4f7e71:
      case _0xe065e3:
        this["z"] = -0x12a;
        break;
      case _0x470b6e:
        if (this["forceBiomeColor"]) this["z"] = -0xd2;
        else this["z"] = -0xd0;
        break;
      case _0x9f9bdf:
        this["z"] = -0x127;
        break;
    }
  }),
  (_0x18ec54["prototype"]["customDraw"] = function (_0xe95311) {
    if (this["isRect"]) {
      this["drawBiome"](_0xe95311);
      if (!_0xe95311) this["jaggedSides"] && (_0x587de3["save"](), this["jaggedSidesForRect"](), _0x587de3["restore"]());
      if (_0x3d2be2["showGrid"]) {
        var _0x24c673 = 0x2d;
        _0x57deb3(
          -this["getRectWidth"]() / 0x2 + _0x24c673,
          -this["getRectHeight"]() / 0x2 + _0x24c673,
          this["getRectWidth"]() / 0x2 - _0x24c673,
          this["getRectHeight"]() / 0x2 - _0x24c673,
          this["x"],
          this["y"]
        );
      }
      _0x587de3["save"](), _0x587de3["restore"]();
      if (!_0x3d2be2["noTextures"]) this["drawTerrainFeatures"]();
    } else this["drawBiome"](![]);
  }),
  (_0x18ec54["prototype"]["jaggedPointsForRect"] = function (_0x58119e) {
    var _0x1d8389 = 0x0,
      _0x433d82 = 0x1,
      _0x5507fa = 0x2,
      _0x5251e6 = 0x3;
    if (this["jaggedSides"]) {
      if (_0x58119e == _0x5507fa) {
        this["jaggedRect"][_0x58119e] = [];
        var _0x3f8489 = -this["getRectWidth"]() / 0x2,
          _0x14502b = this["getRectWidth"]() / 0x2,
          _0x5451ec = this["getRectHeight"]() / 0x2 - 0x20,
          _0x52ce22 = this["getRectHeight"]() / 0x2 - 0x20;
        this["jaggedRect"][_0x58119e]["push"]({
          x: _0x3f8489,
          y: _0x5451ec,
        });
        var _0x57aa87 = 0x14,
          _0x2f20ff = [-0xc, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
          _0x12fbf3 = 0x3c,
          _0x36613a = 0x0,
          _0x3e9e27 = _0x2c6299 - this["x"],
          _0x37b9c5 = 0x0 - this["x"],
          _0x2014a5 = _0x27ef2a - this["y"],
          _0x575312 = 0x0 - this["y"],
          _0x4cfa64,
          _0x2feca9 = _0x3f8489 - _0x57aa87;
        this["jaggedRect"][_0x58119e]["push"]({
          x: _0x3f8489,
          y: _0x5451ec,
        }),
          (_0x4cfa64 = _0x52ce22 + _0x57aa87);
        var _0x30a9ca = 0x0,
          _0x5a418d = 0x0;
        for (_0x2feca9 = _0x3f8489; _0x2feca9 < _0x14502b; _0x2feca9 += _0x12fbf3) {
          (_0x5a418d = _0x2feca9),
            (_0x30a9ca = Math["min"](_0x2014a5, Math["max"](_0x575312, _0x4cfa64 + _0x2f20ff[_0x36613a]))),
            this["jaggedRect"][_0x58119e]["push"]({
              x: _0x5a418d,
              y: _0x30a9ca,
            }),
            (_0x36613a = (_0x36613a + 0x1) % _0x2f20ff["length"]);
        }
        this["jaggedRect"][_0x58119e]["push"]({
          x: _0x14502b,
          y: _0x52ce22,
        }),
          this["jaggedRect"][_0x58119e]["push"]({
            x: _0x14502b,
            y: _0x5451ec,
          }),
          this["jaggedRect"][_0x58119e]["push"]({
            x: _0x3f8489,
            y: _0x5451ec,
          });
      } else {
        if (_0x58119e == _0x1d8389) {
          var _0x3ad9c3 = 0x64;
          (this["jaggedRect"][_0x58119e] = []), (_0x587de3["fillStyle"] = _0x2634c2);
          var _0x3f8489 = -this["getRectWidth"]() / 0x2,
            _0x14502b = this["getRectWidth"]() / 0x2,
            _0x5451ec = -this["getRectHeight"]() / 0x2 + 0x18,
            _0x52ce22 = -this["getRectHeight"]() / 0x2 + 0xc;
          this["jaggedRect"][_0x58119e]["push"]({
            x: _0x3f8489,
            y: _0x5451ec,
          });
          var _0x57aa87 = 0x0,
            _0x2f20ff = [-0xc, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
            _0x12fbf3 = 0x3c,
            _0x36613a = 0x0,
            _0x3e9e27 = _0x2c6299 - this["x"],
            _0x37b9c5 = 0x0 - this["x"],
            _0x2014a5 = _0x27ef2a - this["y"],
            _0x575312 = 0x0 - this["y"],
            _0x4cfa64,
            _0x2feca9 = _0x3f8489;
          this["jaggedRect"][_0x58119e]["push"]({
            x: _0x3f8489,
            y: _0x52ce22,
          }),
            (_0x4cfa64 = _0x52ce22);
          for (_0x2feca9 = _0x3f8489; _0x2feca9 < _0x14502b; _0x2feca9 += _0x12fbf3) {
            (_0x5a418d = _0x2feca9),
              (_0x30a9ca = Math["min"](_0x2014a5, Math["max"](_0x575312, _0x4cfa64 + _0x2f20ff[_0x36613a]))),
              this["jaggedRect"][_0x58119e]["push"]({
                x: _0x5a418d,
                y: _0x30a9ca,
              }),
              (_0x36613a = (_0x36613a + 0x1) % _0x2f20ff["length"]);
          }
          this["jaggedRect"][_0x58119e]["push"]({
            x: _0x14502b,
            y: _0x52ce22,
          }),
            this["jaggedRect"][_0x58119e]["push"]({
              x: _0x14502b,
              y: _0x5451ec,
            });
        }
      }
    }
  }),
  (_0x18ec54["prototype"]["drawJaggedCircle"] = function (_0x1c3f6a, _0x284293) {
    if (this["points2"]) this["drawPoints"](this["points2"], _0x284293, !![]);
    this["drawPoints"](this["points1"], _0x1c3f6a, !![]);
  }),
  (_0x18ec54["prototype"]["getRectWidth"] = function () {
    var _0x5d537d = this["rectW"];
    return _0x5d537d;
  }),
  (_0x18ec54["prototype"]["getRectHeight"] = function () {
    var _0x40a331 = this["rectH"];
    return _0x40a331;
  }),
  (_0x18ec54["prototype"]["drawBiome"] = function (_0x11b493) {
    if (this["biome"] == _0x470b6e) this["drawVolcanoBiome"](_0x11b493);
    else {
      if (!this["isRect"])
        (_0x587de3["fillStyle"] = _0x11b493 ? "red" : this["getBiomeColor"]()),
          _0x587de3["beginPath"](),
          _0x587de3["arc"](0x0, 0x0, Math["max"](0x1, this["rad"]), 0x0, Math["PI"] * 0x2),
          _0x587de3["fill"]();
      else {
        if (this["biome"] == _0x28e4ca) _0x587de3["globalAlpha"] = 0x1;
        if (!_0x11b493) {
          _0x587de3["fillStyle"] = _0x11b493 ? _0x3febc7 : this["getBiomeColor"]();
          var _0x5c11d3 = _0x11b493 ? 0x0 : 0x14;
          _0x587de3["fillRect"](
            -this["getRectWidth"]() / 0x2 + _0x5c11d3,
            -this["getRectHeight"]() / 0x2 + _0x5c11d3,
            this["getRectWidth"]() - _0x5c11d3 * 0x2,
            this["getRectHeight"]() - _0x5c11d3 * 0x2
          );
        }
      }
    }
  }),
  (_0x18ec54["prototype"]["drawVolcanoBiome"] = function (_0x1c015c) {
    _0x587de3["save"]();
    if (!(_0x57ae6d == 0x2)) _0x587de3["rotate"](this["rPer"] * 0x2 * Math["PI"]);
    var _0x1abd02 = 1.5,
      _0x3c3ca3 = _0x38b128("volcano", this["spawnTime"]);
    _0x3c3ca3 !== undefined && _0x3c3ca3 != null && (this["theFrame"] = _0x3c3ca3);
    _0x1abd02 = this["theFrame"];
    var _0x3aa182 = 0x4;
    this["forceBiomeColor"]
      ? ((_0x587de3["fillStyle"] = _0x3febc7),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, this["rad"] - _0x3aa182 * 0x2 * _0x1abd02), 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        _0x587de3["save"](),
        (_0x587de3["fillStyle"] = "#8A681B"),
        (_0x587de3["globalAlpha"] = 0.9),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, this["rad"] - _0x3aa182 * 0x4), 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        _0x587de3["restore"]())
      : ((_0x587de3["fillStyle"] = "#604729"),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](0x0, 0x0, this["rad"], 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"]()),
      !(_0x57ae6d == 0x2 || this["forceBiomeColor"]) &&
        ((_0x587de3["fillStyle"] = "#8A681B"),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](0x0, 0x0, Math["max"](0x0, this["rad"] - _0x3aa182 + _0x1abd02), 0x0, Math["PI"] * 0x2),
        _0x587de3["fill"](),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](
          this["rad"] * 0.45,
          -this["rad"] * 0.45 + 0xf * this["rPer"],
          Math["max"](0x0, this["rad"] * 0.5 + _0x1abd02),
          0x0,
          0x2 * Math["PI"]
        ),
        _0x587de3["fill"](),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](
          this["rad"] * 0.5,
          this["rad"] * 0.5 + 0xf * this["rPer"],
          Math["max"](0x0, this["rad"] * 0.4 + _0x1abd02),
          0x0,
          0x2 * Math["PI"]
        ),
        _0x587de3["fill"](),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](
          -this["rad"] * 0.55 * 0.707,
          +this["rad"] * 0.55 * 0.707 + 0xf * this["rPer"],
          Math["max"](0x0, this["rad"] * 0.5 + _0x1abd02),
          0x0,
          0x2 * Math["PI"]
        ),
        _0x587de3["fill"](),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](
          -this["rad"] * 0.75,
          -this["rad"] * 0.35 + 0xf * this["rPer"],
          Math["max"](0x0, this["rad"] * 0.3 + _0x1abd02),
          0x0,
          0x2 * Math["PI"]
        ),
        _0x587de3["fill"](),
        _0x587de3["beginPath"](),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](this["rad"] + 0xa * this["rPer"], 0x32 * this["rPer"], 0x8, 0x0, 0x2 * Math["PI"]),
        _0x587de3["fill"](),
        _0x587de3["beginPath"](),
        _0x587de3["beginPath"](),
        _0x587de3["arc"](this["rad"] - 0x14 * this["rPer"], 0x32 * this["rPer"], 0xa, 0x0, 0x2 * Math["PI"]),
        _0x587de3["fill"](),
        _0x587de3["beginPath"]()),
      _0x587de3["restore"]();
  }),
  (_0x18ec54["prototype"]["drawPoints"] = function (_0x2b3cea, _0x560a0f, _0x3ba45f) {
    if (_0x3ba45f) _0x587de3["fillStyle"] = _0x560a0f;
    else _0x587de3["strokeStyle"] = _0x560a0f;
    (_0x587de3["strokeStyle"] = _0x560a0f), _0x587de3["beginPath"]();
    var _0x211c82 = 0xa;
    _0x587de3["moveTo"](_0x2b3cea[0x0]["x"] * _0x211c82, _0x2b3cea[0x0]["y"] * _0x211c82);
    for (var _0x5e3fcd = 0x1; _0x5e3fcd < _0x2b3cea["length"]; _0x5e3fcd++) {
      _0x587de3["lineTo"](_0x2b3cea[_0x5e3fcd]["x"] * _0x211c82, _0x2b3cea[_0x5e3fcd]["y"] * _0x211c82);
    }
    _0x587de3["lineTo"](_0x2b3cea[0x0]["x"] * _0x211c82, _0x2b3cea[0x0]["y"] * _0x211c82);
    if (_0x3ba45f) _0x587de3["fill"]();
    else _0x587de3["stroke"]();
  }),
  (_0x18ec54["prototype"]["drawJaggedRect"] = function () {
    var _0x470bbf = 0x0,
      _0xd45fde = 0x1,
      _0x55fdb1 = 0x2,
      _0x133f9f = 0x3;
    for (var _0x5f4c23 = 0x0; _0x5f4c23 < this["jaggedRect"]["length"]; _0x5f4c23++) {
      if (this["jaggedRect"][_0x5f4c23]) {
        var _0x307939 = this["jaggedRect"][_0x5f4c23];
        if (_0x307939 && _0x307939["length"] > 0x0) {
          (_0x587de3["fillStyle"] = this["biomeColor"]),
            (_0x587de3["strokeStyle"] = "red"),
            _0x587de3["beginPath"](),
            _0x587de3["moveTo"](_0x307939[0x0]["x"], _0x307939[0x0]["y"]);
          for (i = 0x1; i < _0x307939["length"]; i++) _0x587de3["lineTo"](_0x307939[i]["x"], _0x307939[i]["y"]);
          _0x587de3["closePath"](), _0x587de3["fill"](), _0x587de3["stroke"]();
        }
      }
    }
  }),
  (_0x18ec54["prototype"]["jaggedPointsForCircle"] = function (_0x58996e, _0x1ed619, _0x357914, _0x1622ca, _0x164b47) {
    if (this["points1"] == undefined) {
      this["points1"] = [];
      if (_0x164b47 > 0x0) this["points2"] = [];
      var _0x3db265 = _0x103b73(-0x2, 0x2),
        _0x33f8ba = (0x2 * Math["PI"]) / _0x1622ca;
      a = _0x3d960f(_0x3db265);
      var _0x577473 = Math["cos"](a),
        _0x261e53 = Math["sin"](a),
        _0x7a4d84 = _0x58996e + _0x357914 * _0x577473,
        _0x54f88a = _0x1ed619 + _0x357914 * _0x261e53;
      this["points1"]["push"]({
        x: _0x7a4d84,
        y: _0x54f88a,
      });
      if (_0x164b47 > 0x0) {
        var _0x642bce = _0x58996e + (_0x357914 + _0x164b47) * _0x577473,
          _0xa19a95 = _0x1ed619 + (_0x357914 + _0x164b47) * _0x261e53;
        this["points2"]["push"]({
          x: _0x642bce,
          y: _0xa19a95,
        });
      }
      for (var _0x5ab52c = 0x1; _0x5ab52c < _0x1622ca; _0x5ab52c++) {
        var _0x3505fa = _0x103b73(-0x1, 0x1);
        _0x3db265 = _0x103b73(-0x2, 0x2);
        var _0x41db5d = _0x357914 + _0x3505fa;
        (a = _0x33f8ba * _0x5ab52c + _0x3d960f(_0x3db265)), (_0x577473 = Math["cos"](a)), (_0x261e53 = Math["sin"](a));
        var _0x44d35c = _0x58996e + _0x41db5d * _0x577473,
          _0x363520 = _0x1ed619 + _0x41db5d * _0x261e53;
        this["points1"]["push"]({
          x: _0x44d35c,
          y: _0x363520,
        });
        if (_0x164b47 > 0x0) {
          var _0x208e93 = _0x357914 + _0x164b47 + _0x3505fa,
            _0x56134b = _0x58996e + (_0x208e93 + _0x164b47) * _0x577473,
            _0x4888c3 = _0x1ed619 + (_0x208e93 + _0x164b47) * _0x261e53;
          this["points2"]["push"]({
            x: _0x56134b,
            y: _0x4888c3,
          });
        }
      }
      this["points1"]["push"]({
        x: _0x7a4d84,
        y: _0x54f88a,
      });
      if (_0x164b47 > 0x0)
        this["points2"]["push"]({
          x: _0x642bce,
          y: _0xa19a95,
        });
    }
  }),
  (_0x18ec54["prototype"]["jaggedSidesForRect"] = function () {
    var _0x237e95 = 0x2a;
    _0x587de3["fillStyle"] = this["getBiomeColor"]();
    var _0x385db9 = -this["getRectWidth"]() / 0x2 + _0x237e95,
      _0x611c18 = this["getRectWidth"]() / 0x2 - _0x237e95,
      _0x10e704 = -this["getRectHeight"]() / 0x2 + _0x237e95,
      _0x2099e6 = this["getRectHeight"]() / 0x2 - _0x237e95;
    _0x587de3["beginPath"](), _0x587de3["moveTo"](_0x385db9, _0x10e704);
    var _0x17e7dd = 0x1e,
      _0x915cc1 = [-0x8, 0xa, -0xa, 0xc, 0x0, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
      _0x5be9df = 0x2d,
      _0x1f6736 = 0x0,
      _0xee5b0e = _0x2c6299 - this["x"],
      _0x946cd = 0x0 - this["x"],
      _0x11008c = _0x27ef2a - this["y"],
      _0x240664 = 0x0 - this["y"],
      _0x35b732,
      _0x26bbcd = _0x385db9 - _0x17e7dd;
    for (_0x35b732 = _0x10e704; _0x35b732 < _0x2099e6; _0x35b732 += _0x5be9df) {
      _0x587de3["lineTo"](Math["min"](_0xee5b0e, Math["max"](_0x946cd, _0x26bbcd + _0x915cc1[_0x1f6736])), _0x35b732),
        (_0x1f6736 = (_0x1f6736 + 0x1) % _0x915cc1["length"]);
    }
    _0x587de3["lineTo"](_0x385db9, _0x2099e6), (_0x35b732 = _0x2099e6 + _0x17e7dd);
    for (_0x26bbcd = _0x385db9; _0x26bbcd < _0x611c18; _0x26bbcd += _0x5be9df) {
      _0x587de3["lineTo"](_0x26bbcd, Math["min"](_0x11008c, Math["max"](_0x240664, _0x35b732 + _0x915cc1[_0x1f6736]))),
        (_0x1f6736 = (_0x1f6736 + 0x1) % _0x915cc1["length"]);
    }
    _0x587de3["lineTo"](_0x611c18, _0x2099e6), (_0x26bbcd = _0x611c18 + _0x17e7dd);
    for (_0x35b732 = _0x2099e6; _0x35b732 > _0x10e704; _0x35b732 -= _0x5be9df) {
      _0x587de3["lineTo"](Math["min"](_0xee5b0e, Math["max"](_0x946cd, _0x26bbcd + _0x915cc1[_0x1f6736])), _0x35b732),
        (_0x1f6736 = (_0x1f6736 + 0x1) % _0x915cc1["length"]);
    }
    _0x587de3["lineTo"](_0x611c18, _0x10e704), (_0x35b732 = _0x10e704 - _0x17e7dd);
    for (_0x26bbcd = _0x611c18; _0x26bbcd > _0x385db9; _0x26bbcd -= _0x5be9df) {
      _0x587de3["lineTo"](_0x26bbcd, Math["min"](_0x11008c, Math["max"](_0x240664, _0x35b732 + _0x915cc1[_0x1f6736]))),
        (_0x1f6736 = (_0x1f6736 + 0x1) % _0x915cc1["length"]);
    }
    _0x587de3["closePath"](), _0x587de3["fill"]();
  }),
  (_0x18ec54["prototype"]["getBiomeColor"] = function () {
    if (this["forceBiomeColor"]) return this["biomeColor"];
    switch (this["biome"]) {
      case _0x9f9bdf:
        return _0x2634c2;
      case _0xe065e3:
        return "#c4dee7";
      case _0x4f7e71:
        return _0x5f5cfd;
      case _0x470b6e:
        return _0x2a1832;
      case _0x4c28d1:
        return _0x4a6b40;
      case _0x28e4ca:
        return _0x5a741a;
      default:
        return _0x4a6b40;
    }
  }),
  (_0x18ec54["prototype"]["jaggedSides"] = null),
  (_0x18ec54["prototype"]["forceBiomeColor"] = ![]),
  (_0x18ec54["prototype"]["readCustomData_onNewlyVisible"] = function (_0x14e272) {
    (this["isRect"] = _0x14e272["readUInt8"]() == 0x1), (this["biomeColor"] = _0x14e272["readString"]()), (this["biome"] = _0x14e272["readUInt16"]());
    var _0x4f2155 = _0x14e272["readBitGroup"]();
    this["forceBiomeColor"] = _0x4f2155["getBool"]();
    this["isRect"] && (this["jaggedSides"] = [_0x4f2155["getBool"](), _0x4f2155["getBool"](), _0x4f2155["getBool"](), _0x4f2155["getBool"]()]);
    if (!this["isRect"]) this["jaggedPointsForCircle"](0x0, 0x0, this["rad"], 0x28, 0x5, this["biomeColor"], "#DAB601");
    else {
      this["jaggedRect"] = [];
      var _0x81c58c = 0x0,
        _0x5e9991 = 0x1,
        _0x488a1c = 0x2,
        _0x14a167 = 0x3;
    }
    this["drawGrid"] = _0x3d2be2["showGrid"];
    if (this["isRect"] && this["biome"] != _0x9f9bdf) this["generateTerrainFeatures"]();
  }),
  (_0x18ec54["prototype"]["biomePattern"] = null),
  (_0x18ec54["prototype"]["generateTerrainFeatures"] = function () {
    var _0x151ccc = 0x64,
      _0x393973 = 0x64,
      _0x740de5 = 1.5;
    if (this["biome"] == _0x4f7e71) (_0x151ccc = 0x7d), (_0x393973 = 0x7d), (_0x740de5 = 1.5);
    else this["biome"] == _0x28e4ca && ((_0x151ccc = 0x4b), (_0x393973 = 0x4b), (_0x740de5 = 0x2));
    var _0x4eb7e8 = 0x1,
      _0x17656c = -this["getRectWidth"]() / 0x2 + _0x151ccc,
      _0x503b11 = -this["getRectHeight"]() / 0x2 + _0x393973,
      _0x3916d6 = this["getRectWidth"]() / 0x2,
      _0x4e5129 = this["getRectHeight"]() / 0x2,
      _0x191750 = _0x151ccc * (this["biome"] == _0x28e4ca ? 0x2 : 0x3),
      _0x342c0a = 0x0,
      _0x26d796 = [];
    for (; _0x17656c < _0x3916d6 - _0x151ccc; _0x17656c++) {
      if (_0x4eb7e8 == 0x1) {
        var _0x3d1bef = {
          x: _0x17656c,
          y: _0x503b11,
          rx: _0x17656c + _0x151ccc * _0x103b73(-0.25, 0.25),
          ry: _0x503b11 + _0x393973 * _0x103b73(-0.25, 0.25),
          w: _0x151ccc * _0x740de5,
          h: _0x393973 * _0x740de5,
          c: "blue",
          img: this["getRandomPatternImg"](),
          r: _0x103b73(0x0, 0xb4),
        };
        if (_0x3d1bef["img"] < 0x0) _0x3d1bef["img"] = 0x0;
        _0x26d796["push"](_0x3d1bef);
      }
      _0x17656c += _0x191750;
      if (_0x17656c >= _0x3916d6 - _0x151ccc) {
        _0x503b11 += _0x191750;
        if (this["biome"] != _0x4c28d1 && this["biome"] != _0x28e4ca) _0x4eb7e8 = _0x4eb7e8 == 0x0 ? 0x1 : 0x0;
        _0x17656c = -this["getRectWidth"]() / 0x2 + _0x151ccc;
      }
      if (this["biome"] != _0x4c28d1 && this["biome"] != _0x28e4ca) _0x4eb7e8 = _0x4eb7e8 == 0x0 ? 0x1 : 0x0;
      else _0x4eb7e8 = _0x4eb7e8 == 0x0 ? 0x1 : 0x0;
      if (this["biome"] == _0x4c28d1) _0x4eb7e8 = 0x1;
      if (_0x503b11 > _0x4e5129 - _0x393973) break;
    }
    this["biomePattern"] = _0x26d796;
  }),
  (_0x18ec54["prototype"]["drawTerrainFeatures"] = function () {
    if (this["biomePattern"])
      for (i = 0x0; i < this["biomePattern"]["length"]; i++) {
        this["drawRectObj"](this["biomePattern"][i]);
      }
  }),
  (_0x18ec54["prototype"]["fillPattern"] = function (_0x1dcd3b) {
    var _0x2c739d = this["curBiome"] + "_" + _0x1dcd3b,
      _0x3fd538 = "gameobj/" + this["oType"] + "/" + _0x2c739d + ".jpg",
      _0x53e9dd = this["getSkinImageObj"](_0x3fd538);
    if (_0x53e9dd) {
      var _0x1cccbc = -this["getRectWidth"]() / 0x2,
        _0x33c70a = -this["getRectHeight"]() / 0x2,
        _0x3da2d9 = this["getRectWidth"]() * 0x2,
        _0x62319d = this["getRectHeight"]() * 0x2,
        _0x385ef1 = _0x587de3["createPattern"](_0x53e9dd, "repeat");
      (_0x587de3["fillStyle"] = _0x385ef1), _0x587de3["fillRect"](_0x1cccbc, _0x33c70a, _0x3da2d9, _0x62319d);
    }
  }),
  (_0x18ec54["prototype"]["drawRectObj"] = function (_0x40bfe2) {
    var _0x2bb815 = this["curBiome"] + "_" + _0x40bfe2["img"],
      _0x15c4aa = "gameobj/" + this["oType"] + "/" + _0x2bb815 + ".png",
      _0x21b88f = this["getSkinImageObj"](_0x15c4aa);
    if (_0x21b88f) {
      _0x587de3["save"](), _0x587de3["translate"](_0x40bfe2["rx"], _0x40bfe2["ry"]);
      if (
        this["biome"] == _0x4c28d1 ||
        (this["biome"] == _0xe065e3 && _0x40bfe2["img"] == 0x1) ||
        (this["biome"] == _0x4f7e71 && _0x40bfe2["img"] > 0x1)
      )
        _0x587de3["rotate"](_0x40bfe2["r"]);
      _0x587de3["drawImage"](_0x21b88f, 0x0, 0x0, _0x40bfe2["w"], _0x40bfe2["h"]), _0x587de3["restore"]();
    }
  }),
  (_0x18ec54["prototype"]["getRandomPatternImg"] = function () {
    var _0x5c548e = 0x1;
    if (this["biome"] == _0x4c28d1 || this["biome"] == _0xe065e3) _0x5c548e = Math["max"](0x0, Math["round"](_0x103b73(0x0, 0x3)));
    else {
      if (this["biome"] == _0x28e4ca) _0x5c548e = 0x1;
      else _0x5c548e = Math["max"](0x0, Math["round"](_0x103b73(0x0, 0x2)));
    }
    return _0x5c548e - 0x1;
  });

function _0x18ec54() {
  _0x18ec54["superClass"]["call"](this, _0x4406dc);
}
(window["BiomeShape"] = _0x18ec54), _0x17bf26["setCustomClassForGameObjType"](_0x18ec54, _0x4406dc);
var _0x48c344 = _0x307a43;
(_0xb44d45["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0xb44d45["prototype"]["constructor"] = _0xb44d45),
  (_0xb44d45["superClass"] = _0x48c344),
  (_0xb44d45["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"];
  }),
  (_0xb44d45["prototype"]["customDraw"] = function (_0x5c596d) {
    var _0x84be2d = this["getSkinImageObj"]("gameobj/" + this["oType"] + "/" + this["oType"] + ".png");
    if (_0x84be2d) {
      _0x587de3["save"](), (_0x587de3["globalAlpha"] = this["alpha"] < 0.7 ? this["alpha"] : 0x1);
      var _0x3d5a1c = this["rad"] * 0x1;
      _0x587de3["rotate"](this["angle"] + _0x3d960f(0xb4)),
        _0x587de3["drawImage"](_0x84be2d, -_0x3d5a1c, -_0x3d5a1c, _0x3d5a1c * 0x2, _0x3d5a1c * 0x2),
        _0x587de3["restore"]();
    }
  }),
  (_0xb44d45["prototype"]["readCustomData_onNewlyVisible"] = function (_0x28c3a1) {
    this["alpha"] = _0x28c3a1["readUInt8"]() / 0x64;
  }),
  (_0xb44d45["prototype"]["readUpdatedProperty"] = function (_0x4f8e89, _0x25fe73) {
    _0x4f8e89 == _0x17e8f3 && (this["alpha"] = _0x25fe73["readUInt8"]() / 0x64);
  });
var _0x7a257b = 0x94;

function _0xb44d45() {
  _0xb44d45["superClass"]["call"](this, _0x7a257b);
}
(window["OceanWave"] = _0xb44d45), _0x17bf26["setCustomClassForGameObjType"](_0xb44d45, _0x7a257b);
var _0x48c344 = _0x307a43;
(_0x161e33["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x161e33["prototype"]["constructor"] = _0x161e33),
  (_0x161e33["superClass"] = _0x48c344),
  (_0x161e33["prototype"]["updateZ"] = function () {
    this["z"] = -0x126;
  }),
  (_0x161e33["prototype"]["customDraw"] = function (_0x8614f5) {
    var _0x248dc0 = this["getSkinImageObj"]("gameobj/" + this["oType"] + "/" + this["oType"] + "_" + this["speciesType"] + ".png");
    if (_0x248dc0) {
      _0x587de3["save"](), (_0x587de3["globalAlpha"] = this["alpha"] < 0.7 ? this["alpha"] : 0x1);
      var _0x3bf415 = this["rad"];
      _0x587de3["rotate"](this["angle"] + _0x3d960f(0xb4)),
        _0x587de3["drawImage"](_0x248dc0, -_0x3bf415, -_0x3bf415, _0x3bf415 * 0x2, _0x3bf415 * 0x2),
        _0x587de3["restore"]();
    }
  }),
  (_0x161e33["prototype"]["readCustomData_onNewlyVisible"] = function (_0x22eab6) {
    this["alpha"] = _0x22eab6["readUInt8"]() / 0x64;
  }),
  (_0x161e33["prototype"]["readUpdatedProperty"] = function (_0x169171, _0x3224e2) {
    _0x169171 == _0x17e8f3 && (this["alpha"] = _0x3224e2["readUInt8"]() / 0x64);
  });
var _0x2f9c23 = 0x95;

function _0x161e33() {
  _0x161e33["superClass"]["call"](this, _0x2f9c23);
}
(window["UnderwaterFish"] = _0x161e33), _0x17bf26["setCustomClassForGameObjType"](_0x161e33, _0x2f9c23);
var _0x48c344 = _0x307a43;
(_0x63e901["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x63e901["prototype"]["constructor"] = _0x63e901),
  (_0x63e901["superClass"] = _0x48c344),
  (_0x63e901["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"] + 0x64;
  }),
  (_0x63e901["prototype"]["setSkinPath"] = function () {
    var _0x1f841d = this["oType"] + "_" + this["speciesSubType"];
    this["objSkinPath"] = "gameobj/" + this["oType"] + "/" + _0x1f841d + "_" + this["hasPopped"] + ".png";
  }),
  (_0x63e901["prototype"]["customDraw"] = function (_0x539b7b) {
    var _0x166a14 = this["getSkinImageObj"](this["objSkinPath"]);
    if (_0x166a14) {
      _0x587de3["save"]();
      var _0x2e7e36 = this["rad"] * 0x1;
      (_0x587de3["globalAlpha"] = 0x1),
        _0x587de3["drawImage"](_0x166a14, -_0x2e7e36, -_0x2e7e36, _0x2e7e36 * 0x2, _0x2e7e36 * 0x2),
        _0x587de3["restore"]();
    }
  }),
  (_0x63e901["prototype"]["hasPopped"] = 0x0),
  (_0x63e901["prototype"]["readUpdatedProperty"] = function (_0x7c5271, _0x14fd29) {
    _0x7c5271 == _0x443437 && (this["hasPopped"] = _0x14fd29["readUInt8"]());
  });
var _0x98dc25 = 0x97;

function _0x63e901() {
  _0x63e901["superClass"]["call"](this, _0x98dc25);
}
(window["Bubbles"] = _0x63e901), _0x17bf26["setCustomClassForGameObjType"](_0x63e901, _0x98dc25);
var _0x48c344 = _0x307a43;
(_0x53e0fe["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x53e0fe["prototype"]["constructor"] = _0x53e0fe),
  (_0x53e0fe["superClass"] = _0x48c344),
  (_0x53e0fe["prototype"]["updateZ"] = function () {
    this["z"] = -0x96;
  }),
  (_0x53e0fe["prototype"]["customDraw"] = function (_0xd2217a) {
    var _0x2e73cf = 0x0,
      _0x5f1cfb = 0x1,
      _0x15eed6 = 0x1;
    if (!_0x34fedb && !(_0x57ae6d == 0x2)) {
      var _0x2747ad = (_0x168a54 - this["spawnTime"]) / 0x3e8,
        _0x39778f = 1.2;
      (_0x5f1cfb = 3.5 * Math["cos"](((0x2 * Math["PI"]) / _0x39778f) * _0x2747ad)),
        (_0x15eed6 = 2.5 * Math["sin"](((0x2 * Math["PI"]) / _0x39778f) * _0x2747ad));
      var _0x1f4e82 = 0x5 / 0x3c,
        _0x37e6d8 = 0x3e8 / _0x1f4e82,
        _0xd57567 = ((_0x168a54 - this["spawnTime"]) % _0x37e6d8) / _0x37e6d8;
      _0x2e73cf = _0xd57567 * 0x2 * Math["PI"];
    }
    _0x587de3["save"](), _0x587de3["rotate"](_0x2e73cf), (_0x587de3["globalAlpha"] = this["getObjAlpha"]());
    for (i = 0x0; i < 0x5; i++) {
      var _0x43e1e7 = this["getSkinImage"](i);
      if (_0x43e1e7) {
        var _0x1efd60 = this["rad"],
          _0x3c802b = i > 0x3 ? _0x5f1cfb * (0x1 - i / 0xa) : 0x0,
          _0x5290a0 = i > 0x3 ? _0x15eed6 * (0x1 - i / 0x5) : 0x0;
        _0x587de3["drawImage"](_0x43e1e7, -_0x1efd60 + _0x3c802b, -_0x1efd60 + _0x5290a0, 0x2 * _0x1efd60, 0x2 * _0x1efd60);
      }
    }
    _0x587de3["restore"]();
  }),
  (_0x53e0fe["prototype"]["setSkinPath"] = function (_0x79088e) {
    this["objSkinPath"] = "gameobj/" + this["oType"] + "/" + _0x79088e + ".png";
  }),
  (_0x53e0fe["prototype"]["getSkinImage"] = function (_0x254bd4) {
    var _0x3961a9 = this["getSkinImageObj"](this["objSkinPath"]);
    return _0x3961a9;
  });

function _0x53e0fe() {
  _0x53e0fe["superClass"]["call"](this, _0x259653), (this["doesDrawEffectScale"] = ![]), (this["drawEffectScale_Slow"] = ![]);
}
(window["OceanHidinghole"] = _0x53e0fe), _0x17bf26["setCustomClassForGameObjType"](_0x53e0fe, _0x259653);
var _0x48c344 = _0x307a43;
(_0x569a7a["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x569a7a["prototype"]["constructor"] = _0x569a7a),
  (_0x569a7a["superClass"] = _0x48c344),
  (_0x569a7a["prototype"]["playerID"] = 0x0),
  (_0x569a7a["prototype"]["shellState"] = 0x0),
  (_0x569a7a["prototype"]["cracksCount"] = 0x0),
  (_0x569a7a["prototype"]["updateZ"] = function () {
    if (this["shellState"] == 0x0) this["z"] = this["rad"];
    else this["z"] = -0x99;
  }),
  (_0x569a7a["prototype"]["isEdibleOutlined"] = function () {
    if (this["playerID"] == _0x204989) return ![];
    return _0x244824["superClass"]["prototype"]["isEdibleOutlined"]["call"](this);
  }),
  (_0x569a7a["prototype"]["nextShakeEndT"] = 0x0),
  (_0x569a7a["prototype"]["nextShakeStartT"] = 0x0),
  (_0x569a7a["prototype"]["drawScaleEffect"] = function () {
    if (this["shellState"] != 0x1) this["drawNickName"](0x1);
    if (this["shellState"] == 0x0) {
      _0x168a54 > this["nextShakeEndT"] &&
        ((this["nextShakeEndT"] = +new Date() + _0x103b73(0x9c4, 0x1194)),
        (this["nextShakeStartT"] = this["nextShakeEndT"] - _0x103b73(0x3e8, 0x5dc)));
      if (_0x168a54 > this["nextShakeStartT"] && _0x168a54 < this["nextShakeEndT"]) {
        var _0xda948d = 0.02,
          _0x2ff47b = (_0x168a54 - this["spawnTime"]) / 0x3e8,
          _0x32c927 = 0.1,
          _0x2fd7fd = this["rad"] * _0xda948d,
          _0x38522d = _0x2fd7fd * Math["sin"](((0x2 * Math["PI"]) / _0x32c927) * _0x2ff47b),
          _0x32c927 = 0.15,
          _0x2fd7fd = this["rad"] * _0xda948d,
          _0x1d3fba = _0x2fd7fd * Math["cos"](((0x2 * Math["PI"]) / _0x32c927) * _0x2ff47b);
        _0x587de3["translate"](-_0x38522d, -_0x1d3fba);
      }
    }
  }),
  (_0x569a7a["prototype"]["customDraw"] = function (_0x2368e5) {
    var _0xd4a5bd = "upgradeshell";
    if (this["shellState"] == 0x0) {
      if (this["cracksCount"] > 0x0 && this["cracksCount"] <= 0xa) _0xd4a5bd = "egg_crack" + this["cracksCount"];
      else _0xd4a5bd += "" + this["shellState"];
    } else _0xd4a5bd += "" + this["shellState"];
    var _0x4ccc81 = this["getSkinImageObj"]("img/upgradeshell/" + _0xd4a5bd + ".png"),
      _0x3091de = this["getSkinImageObj"]("img/upgradeshell/outline" + this["curBiome"] + ".png"),
      _0x54dde0 = this["rad"],
      _0x1b7d51 = this["rPer"] * Math["PI"] * 0x2;
    _0x587de3["save"](), _0x587de3["rotate"](_0x1b7d51);
    if (_0x4ccc81) {
      _0x587de3["drawImage"](_0x4ccc81, -_0x54dde0, -_0x54dde0 * 1.1, 0x2 * _0x54dde0, 2.2 * _0x54dde0);
      if (this["shellState"] == 0x0 && _0x3091de) _0x587de3["drawImage"](_0x3091de, -_0x54dde0, -_0x54dde0 * 1.1, 0x2 * _0x54dde0, 2.21 * _0x54dde0);
    }
    _0x587de3["restore"]();
  }),
  (_0x569a7a["prototype"]["getNameSize"] = function () {
    return 0x6;
  }),
  (_0x569a7a["prototype"]["setNick"] = function (_0x2fed85) {
    (this["nickName"] = _0x2fed85),
      null == this["nickTXT"]
        ? ((this["nickTXT"] = new _0x413af8(this["getNameSize"](), "#FFFFFF")),
          (this["nickTXT"]["strokeW"] = 1.5),
          (this["nickTXT"]["renderScale"] = 0x5),
          this["nickTXT"]["setText"](this["nickName"]))
        : (this["nickTXT"]["setFontSize"](this["getNameSize"]()), this["nickTXT"]["setText"](this["nickName"]));
  }),
  (_0x569a7a["prototype"]["drawNickName"] = function (_0x3122be) {
    this["nickName"] &&
      this["nickTXT"] &&
      !_0x417709 &&
      (_0x587de3["save"](),
      (_0x587de3["globalAlpha"] = _0x3122be),
      (this["nickTXT"]["x"] = 0x0),
      (this["nickTXT"]["y"] = this["rad"] + 0x5),
      this["nickTXT"]["draw"](),
      _0x587de3["restore"]());
  }),
  (_0x569a7a["prototype"]["readCustomData_onNewlyVisible"] = function (_0xf42a18) {
    _0x569a7a["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0xf42a18), (this["playerID"] = _0xf42a18["readUInt32"]());
    if (this["playerID"] > 0x0) {
      var _0x17ffd8 = _0xf42a18["readString"]();
      this["setNick"](_0x17ffd8 ? _0x17ffd8 : "mope.io");
    }
    this["readUpdatedProperty"](_0x450456, _0xf42a18), this["readUpdatedProperty"](_0x36bbc5, _0xf42a18);
  }),
  (_0x569a7a["prototype"]["readUpdatedProperty"] = function (_0x40434a, _0x57df79) {
    if (_0x40434a == _0x450456) this["shellState"] = _0x57df79["readUInt8"]();
    else {
      if (_0x40434a == _0x36bbc5) this["cracksCount"] = _0x57df79["readUInt8"]();
    }
  });
var _0x278b95 = 0x98;

function _0x569a7a() {
  _0x569a7a["superClass"]["call"](this, _0x278b95);
}
(window["UpgradeShell"] = _0x569a7a), _0x17bf26["setCustomClassForGameObjType"](_0x569a7a, _0x278b95);
for (_eimg = 0x1; _eimg <= 0xa; _eimg++) {
  var _0x220ee8 = "egg_crack" + _eimg,
    _0x185a74 = "./assets/s/2/img/upgradeshell/" + _0x220ee8 + ".png";
  _0x2d8f34(_0x185a74);
}
for (_eimg = 0x0; _eimg <= 0x5; _eimg++) {
  var _0x220ee8 = "outline" + _eimg,
    _0x185a74 = "./assets/s/2/img/upgradeshell/" + _0x220ee8 + ".png";
  _0x2d8f34(_0x185a74);
}
var _0x48c344 = _0x307a43;
(_0x24c76a["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x24c76a["prototype"]["constructor"] = _0x24c76a),
  (_0x24c76a["superClass"] = _0x48c344),
  (_0x24c76a["prototype"]["playerID"] = 0x0),
  (_0x24c76a["prototype"]["shellState"] = 0x0),
  (_0x24c76a["prototype"]["cracksCount"] = 0x0),
  (_0x24c76a["prototype"]["updateZ"] = function () {
    this["z"] = 0x186a0;
  }),
  (_0x24c76a["prototype"]["customDraw"] = function (_0x49c242) {
    switch (this["speciesType"]) {
      case _0x278b95: {
        var _0x72489d = this["getSkinImageObj"]("img/upgradeshell/shellpart" + this["speciesSubType"] + ".png"),
          _0x2593eb = this["rad"],
          _0x48188b = this["rPer"] * Math["PI"] * 0x2;
        _0x72489d &&
          (_0x587de3["save"](),
          _0x587de3["rotate"](_0x48188b),
          _0x587de3["drawImage"](_0x72489d, -_0x2593eb, -_0x2593eb, 0x2 * _0x2593eb, 0x2 * _0x2593eb),
          _0x587de3["restore"]());
        break;
      }
      default:
        _0x587de3["save"](), (_0x587de3["globalAlpha"] = 0.1), _0x440ef0(0x0, 0x0, this["rad"], "black"), _0x587de3["restore"]();
        break;
    }
  });
var _0x4dc07d = 0x99;

function _0x24c76a() {
  _0x24c76a["superClass"]["call"](this, _0x4dc07d);
}
(window["Particle"] = _0x24c76a), _0x17bf26["setCustomClassForGameObjType"](_0x24c76a, _0x4dc07d);
var _0x1d83bb = _0x4d0e29,
  _0x48c344 = _0xe4ec38;
(_0x1d83bb["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x1d83bb["prototype"]["constructor"] = _0x1d83bb),
  (_0x1d83bb["superClass"] = _0x48c344),
  (_0x4d0e29["prototype"]["updateZ"] = function () {
    this["z"] = 0x186a2;
  }),
  (_0x4d0e29["prototype"]["customDraw"] = function (_0x50bfd6) {
    (this["drawEffectScale_Slow"] = !![]),
      (this["doesDrawEffectScale"] = !![]),
      console["log"](this["specType"]),
      (_0x587de3["globalAlpha"] = 0.2),
      _0x440ef0(0x0, 0x0, this["rad"] * 0.85, "white");
    var _0x2b73d6 = this["isGreenTarget"] ? "_e" : "",
      _0x3ab168 = this["getSkinImageObj"]("img/target" + _0x2b73d6 + ".png");
    if (_0x3ab168) {
      var _0x58a2e1 = this["rad"];
      _0x587de3["save"](),
        (_0x587de3["globalAlpha"] = 0.5),
        _0x587de3["drawImage"](_0x3ab168, -_0x58a2e1, -_0x58a2e1, 0x2 * _0x58a2e1, 0x2 * _0x58a2e1),
        _0x587de3["restore"]();
    }
    _0x587de3["save"](),
      this["hasTimer"] &&
        this["timerTxt"] != null &&
        ((_0x587de3["globalAlpha"] = 0x1), (this["timerTxt"]["x"] = 0x0), (this["timerTxt"]["y"] = 0x0), this["timerTxt"]["draw"]()),
      _0x587de3["restore"]();
  }),
  (_0x4d0e29["prototype"]["worldUpd_readMsgNewlyVisible"] = function (_0x4848ce, _0x49f59b, _0x27f751) {
    this["setObjTypes"](_0x49f59b, _0x27f751), (this["id"] = _0x4848ce["readUInt32"]());
    var _0x18f031 = _0x4848ce["readUInt16"]() / 0x4,
      _0x2080cd = _0x4848ce["readUInt16"]() / 0x4,
      _0x54cdbd = _0x4848ce["readUInt16"]() / 0x4;
    (this["ox"] = this["x"] = this["nx"] = _0x2080cd),
      (this["oy"] = this["y"] = this["ny"] = _0x54cdbd),
      (this["nRad"] = _0x18f031),
      (this["oRad"] = this["rad"] = 0x0),
      this["setMovedToPos"](_0x2080cd, _0x54cdbd),
      this["setNewRad"](_0x18f031),
      (this["hasTimer"] = _0x4848ce["readUInt8"]() == 0x1),
      this["readUpdatedProperty"](_0x464c7c, _0x4848ce);
  }),
  (_0x4d0e29["prototype"]["readUpdatedProperty"] = function (_0x308a9b, _0x6da5a4) {
    if (_0x308a9b == _0x29cc62) {
      this["timer"] = _0x6da5a4["readUInt16"]() / 0x64;
      if (this["timer"] < 0x1e) this["updateTimer"]();
    } else {
      if (_0x308a9b == _0x546c57) (this["targetText"] = _0x6da5a4["readString"]()), (this["hasTimer"] = !![]), this["setTimer"](this["targetText"]);
      else {
        if (_0x308a9b == _0x1bc190) {
          this["hasVictim"] = !![];
          var _0x561ca5 = _0x6da5a4["readUInt16"]() / 0x4,
            _0x41d604 = _0x6da5a4["readUInt16"]() / 0x4;
          (this["spider_ox"] = this["victimX"]),
            (this["spider_oy"] = this["victimY"]),
            (this["spider_nx"] = _0x561ca5),
            (this["spider_ny"] = _0x41d604);
        } else _0x308a9b == _0x464c7c && (this["isGreenTarget"] = _0x6da5a4["readUInt8"]() == 0x1);
      }
    }
  }),
  (_0x4d0e29["prototype"]["isGreenTarget"] = ![]),
  (_0x4d0e29["prototype"]["hasVictim"] = ![]),
  (_0x4d0e29["prototype"]["victimX"] = null),
  (_0x4d0e29["prototype"]["victimY"] = null),
  (_0x4d0e29["prototype"]["onLerpUpdate"] = function (_0x175599) {
    this["hasVictim"] &&
      ((this["victimX"] = _0x175599 * (this["spider_nx"] - this["spider_ox"]) + this["spider_ox"]),
      (this["victimY"] = _0x175599 * (this["spider_ny"] - this["spider_oy"]) + this["spider_oy"]));
  }),
  (_0x4d0e29["prototype"]["beforeCustomDraw"] = function (_0x3711f6) {
    this["hasVictim"] &&
      (console["log"]("beforeCustomDraw"),
      _0x587de3["save"](),
      (_0x587de3["strokeStyle"] = "white"),
      (_0x587de3["globalAlpha"] = 0x1),
      _0x587de3["beginPath"](),
      _0x587de3["moveTo"](this["x"], this["y"]),
      _0x587de3["lineTo"](this["victimX"], this["victimY"]),
      _0x587de3["stroke"](),
      _0x587de3["restore"]());
  }),
  (_0x4d0e29["prototype"]["updateTimer"] = function () {
    this["timer"] = Math["round"](this["timer"]);
    var _0x4bcd2b = this["timer"];
    this["setTimer"](_0x4bcd2b);
  }),
  (_0x4d0e29["prototype"]["timerTxt"] = null),
  (_0x4d0e29["prototype"]["setTimer"] = function (_0x408cef) {
    var _0x3de82f = "" + _0x408cef;
    null == this["timerTxt"]
      ? ((this["timerTxt"] = new _0x413af8(0x14, "#FFFFFF")),
        (this["timerTxt"]["strokeW"] = 0x2),
        (this["timerTxt"]["multiLine"] = !![]),
        (this["timerTxt"]["renderScale"] = 0x5),
        this["timerTxt"]["setText"](_0x3de82f))
      : (this["timerTxt"]["setFontSize"](0x14), this["timerTxt"]["setText"](_0x3de82f));
  });

function _0x4d0e29() {
  _0x4d0e29["superClass"]["call"](this);
}
(window["TargetCircle"] = _0x4d0e29), _0x17bf26["setCustomClassForGameObjType"](_0x4d0e29, _0x5aa814, _0x5534ed);
var _0x48c344 = _0x307a43;
(_0x5bbd26["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x5bbd26["prototype"]["constructor"] = _0x5bbd26),
  (_0x5bbd26["superClass"] = _0x48c344),
  (_0x5bbd26["prototype"]["stoneIncentive"] = 0x0),
  (_0x5bbd26["prototype"]["teamID"] = 0x0),
  (_0x5bbd26["prototype"]["lastHurtByTeamID"] = 0x0),
  (_0x5bbd26["prototype"]["coolDownTime"] = 0x0),
  (_0x5bbd26["prototype"]["isDefended"] = ![]),
  (_0x5bbd26["prototype"]["updateZ"] = function () {
    this["z"] = 0x3ea;
  }),
  (_0x5bbd26["prototype"]["customDraw"] = function (_0x14a48f) {
    let _0x1eb4b0 = this["teamID"];
    if (this["teamID"] == 0x0) {
      if (this["lastHurtByTeamID"] != 0x0) _0x1eb4b0 += "_" + this["lastHurtByTeamID"];
      else {
        if (this["coolDownTime"] > 0.1) _0x1eb4b0 += "_0";
      }
    }
    var _0x537be6 = this["getSkinImageObj"]("gameobj/" + this["oType"] + "/stone" + _0x1eb4b0 + ".png");
    if (_0x537be6) {
      var _0x34a3a3 = this["rad"] * 1.25;
      _0x587de3["drawImage"](_0x537be6, -_0x34a3a3, -_0x34a3a3, 0x2 * _0x34a3a3, 0x2 * _0x34a3a3);
    }
    if (!this["isDefended"]) {
      var _0x61ab94 = this["getSkinImageObj"]("gameobj/" + this["oType"] + "/stone_undefended.png");
      if (_0x61ab94) {
        var _0x34a3a3 = this["rad"] * 1.25;
        _0x587de3["drawImage"](_0x61ab94, -_0x34a3a3, -_0x34a3a3, 0x2 * _0x34a3a3, 0x2 * _0x34a3a3);
      }
    }
    var _0x48da95 = this["getSkinImageObj"]("gameobj/" + this["oType"] + "/incentive/" + this["stoneIncentive"] + ".png");
    if (_0x48da95) {
      var _0x34a3a3 = this["rad"] / 0x4;
      _0x587de3["drawImage"](_0x48da95, -_0x34a3a3, -_0x34a3a3, 0x2 * _0x34a3a3, 0x2 * _0x34a3a3);
    }
  }),
  (_0x5bbd26["prototype"]["setIncentiveText"] = function () {
    if (null == this["incentiveTxt"])
      (this["incentiveTxt"] = new _0x413af8(0xa, "#FFFFFF")),
        (this["incentiveTxt"]["strokeW"] = 1.5),
        (this["incentiveTxt"]["multiLine"] = !![]),
        (this["incentiveTxt"]["renderScale"] = 0x5),
        this["incentiveTxt"]["setText"](this["nickName"]);
    else {
      this["incentiveTxt"]["setFontSize"](0xa), (this["incentiveTxt"]["multiLine"] = !![]);
      let _0x449897 = "";
      this["coolDownTime"] > 0.1 && (_0x449897 = "\x0acooldown: " + this["coolDownTime"] + "s"),
        this["incentiveTxt"]["setText"](this["nickName"] + _0x449897);
    }
  }),
  (_0x5bbd26["prototype"]["drawIncentiveText"] = function (_0xa45a16) {
    this["incentiveTxt"] &&
      !_0x417709 &&
      (_0x587de3["save"](),
      (_0x587de3["globalAlpha"] = _0xa45a16),
      (this["incentiveTxt"]["x"] = -this["rad"] / 0x2),
      (this["incentiveTxt"]["y"] = -this["rad"] / 0x2),
      this["incentiveTxt"]["draw"](),
      _0x587de3["restore"]());
  }),
  (_0x5bbd26["prototype"]["readCustomData_onNewlyVisible"] = function (_0x235449) {
    _0x5bbd26["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x235449),
      (this["stoneIncentive"] = _0x235449["readUInt8"]()),
      this["readUpdatedProperty"](_0x180049, _0x235449),
      this["readUpdatedProperty"](_0x33a78a, _0x235449),
      this["readUpdatedProperty"](_0x9107c0, _0x235449),
      this["readUpdatedProperty"](_0x4f4c85, _0x235449);
  }),
  (_0x5bbd26["prototype"]["readUpdatedProperty"] = function (_0x8efe19, _0x274d32) {
    if (_0x8efe19 == _0x180049) this["teamID"] = _0x274d32["readUInt8"]();
    else {
      if (_0x8efe19 == _0x33a78a) this["lastHurtByTeamID"] = _0x274d32["readUInt8"]();
      else {
        if (_0x8efe19 == _0x4f4c85) this["isDefended"] = _0x274d32["readUInt8"]() == 0x1;
        else _0x8efe19 == _0x9107c0 && (this["coolDownTime"] = _0x274d32["readUInt16"]() / 0x64);
      }
    }
  }),
  (_0x5bbd26["prototype"]["onHurt"] = function () {});
var _0x8994b9 = 0x4e;

function _0x5bbd26() {
  _0x5bbd26["superClass"]["call"](this, _0x8994b9);
}
(window["TeamStone"] = _0x5bbd26), _0x17bf26["setCustomClassForGameObjType"](_0x5bbd26, _0x8994b9);
const _0x280772 = 0x1,
  _0x5f3bfd = 0x2,
  _0x48eb81 = 0x3,
  _0xddee04 = 0x4,
  _0x4c7799 = 0x5,
  _0x1a56d6 = 0x6,
  _0x1b099a = 0x7,
  _0x36c083 = 0x8,
  _0x3dc6d1 = 0x9,
  _0x42760c = 0xa,
  _0x301287 = 0xb,
  _0x3b624d = 0xc,
  _0xd594c0 = 0xd;
var _0x48c344 = _0x307a43;
(_0x48f6a["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x48f6a["prototype"]["constructor"] = _0x48f6a),
  (_0x48f6a["superClass"] = _0x48c344),
  (_0x48f6a["prototype"]["updateZ"] = function () {
    this["z"] = this["hasImpact"] ? this["rad"] : 0x174876e800;
  });
let _0x3146e4 = 1.5;
(_0x48f6a["prototype"]["frame"] = 0x0),
  (_0x48f6a["prototype"]["customDraw"] = function (_0x6764a5) {
    if (!this["hasImpact"]) this["frame"] = Math["trunc"](_0x168a54 / 0x78) % 0x6;
    else this["frame"] = 0x0;
    var _0x84388f = "gameobj/" + this["oType"] + "/" + this["oType"] + "_" + this["frame"] + ".png",
      _0x49b7b2 = this["getSkinImageObj"](_0x84388f);
    if (_0x49b7b2) {
      _0x587de3["save"]();
      var _0x5a1c9e = this["rad"] * 0x2;
      !this["hasImpact"]
        ? ((_0x587de3["shadowColor"] = "rgba(0,0,0,0.05)"),
          (_0x587de3["shadowBlur"] = 0x0),
          (_0x587de3["shadowOffsetX"] = this["shadowDistance"]),
          (_0x587de3["shadowOffsetY"] = this["shadowDistance"]),
          _0x587de3["rotate"](this["angle"]),
          _0x587de3["drawImage"](_0x49b7b2, -_0x5a1c9e / 0x2, -_0x5a1c9e * _0x3146e4, _0x5a1c9e, _0x5a1c9e * 0x2))
        : ((_0x84388f = "gameobj/" + this["oType"] + "/meteorite.png"),
          (_0x49b7b2 = null),
          (_0x49b7b2 = this["getSkinImageObj"](_0x84388f)),
          _0x49b7b2 &&
            (_0x587de3["rotate"](this["angle"]),
            (_0x5a1c9e = this["rad"]),
            _0x587de3["drawImage"](_0x49b7b2, -_0x5a1c9e, -_0x5a1c9e, _0x5a1c9e * 0x2, _0x5a1c9e * 0x2))),
        _0x587de3["restore"]();
    }
  }),
  (_0x48f6a["prototype"]["readCustomData_onNewlyVisible"] = function (_0x5522dc) {
    _0x48f6a["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x5522dc),
      this["readUpdatedProperty"](_0x3b9f44, _0x5522dc),
      this["readUpdatedProperty"](_0x184ea0, _0x5522dc);
  }),
  (_0x48f6a["prototype"]["shadowDistance"] = 0x0),
  (_0x48f6a["prototype"]["hasImpact"] = ![]),
  (_0x48f6a["prototype"]["readUpdatedProperty"] = function (_0x508f64, _0x468019) {
    if (_0x508f64 == _0x184ea0) {
      let _0x1297c2 = _0x468019["readUInt16"]() / 0xa;
      this["shadowDistance"] = _0x1297c2;
    } else _0x508f64 == _0x3b9f44 && (this["hasImpact"] = _0x468019["readUInt8"]() == 0x1);
  });
const _0x594024 = 0x9a;

function _0x48f6a() {
  _0x48f6a["superClass"]["call"](this, _0x594024);
}
(window["Meteor"] = _0x48f6a), _0x17bf26["setCustomClassForGameObjType"](_0x48f6a, _0x594024);
var _0x48c344 = _0x307a43;
(_0x46e86e["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x46e86e["prototype"]["constructor"] = _0x46e86e),
  (_0x46e86e["superClass"] = _0x48c344),
  (_0x46e86e["prototype"]["updateZ"] = function () {
    this["z"] = -0x65;
  }),
  (_0x46e86e["prototype"]["customDraw"] = function (_0x2d7a28) {
    skin = "gameobj/" + this["oType"] + "/" + this["oType"] + ".png";
    var _0x339458 = this["getSkinImageObj"](skin);
    _0x339458 &&
      (_0x587de3["save"](),
      _0x587de3["rotate"](this["angle"]),
      (rad = this["rad"] * 1.5),
      _0x587de3["drawImage"](_0x339458, -rad, -rad, rad * 0x2, rad * 0x2),
      _0x587de3["restore"]());
  });
const _0x568380 = 0x9b;

function _0x46e86e() {
  _0x46e86e["superClass"]["call"](this, _0x568380);
}
(window["MeteorCrater"] = _0x46e86e), _0x17bf26["setCustomClassForGameObjType"](_0x46e86e, _0x568380);
var _0x48c344 = _0x307a43;
(_0xeb217f["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0xeb217f["prototype"]["constructor"] = _0xeb217f),
  (_0xeb217f["superClass"] = _0x48c344),
  (_0xeb217f["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"];
  }),
  (_0xeb217f["prototype"]["customDraw"] = function (_0x28f1d1) {
    this["frame"] = Math["trunc"](_0x168a54 / 0x78) % 0x5;
    var _0x1d17f2 = "gameobj/" + this["oType"] + "/" + this["oType"] + "_" + this["frame"] + ".png",
      _0x2c43eb = this["getSkinImageObj"](_0x1d17f2);
    if (_0x2c43eb) {
      var _0x28af5d = this["rad"];
      _0x587de3["save"](),
        _0x587de3["rotate"](this["angle"]),
        _0x587de3["drawImage"](_0x2c43eb, -_0x28af5d, -_0x28af5d, _0x28af5d * 0x2, _0x28af5d * 0x2),
        _0x587de3["restore"]();
    }
  });
const _0x3f1ad4 = 0x9d;

function _0xeb217f() {
  _0xeb217f["superClass"]["call"](this, _0x3f1ad4);
}
(window["MeteorShockwave"] = _0xeb217f), _0x17bf26["setCustomClassForGameObjType"](_0xeb217f, _0x3f1ad4);
const _0xa907cd = 0x0,
  _0x83445c = 0x1,
  _0x1aeed5 = 0x2,
  _0x34ff80 = 0x3;
var _0x48c344 = _0x307a43;
(_0x48bdac["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x48bdac["prototype"]["constructor"] = _0x48bdac),
  (_0x48bdac["superClass"] = _0x48c344),
  (_0x48bdac["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"];
  }),
  (_0x48bdac["prototype"]["customDraw"] = function (_0x55bdb4) {
    var _0x20e120 = this["getSkinImageObj"](
      "gameobj/" + this["oType"] + "/" + this["oType"] + "_" + this["speciesType"] + (this["isEdibleOutlined"]() ? "_e" : "") + ".png"
    );
    if (_0x20e120) {
      var _0x147849 = this["rad"];
      _0x587de3["drawImage"](_0x20e120, -_0x147849, -_0x147849, 0x2 * _0x147849, 0x2 * _0x147849);
    }
  });
var _0xec258e = 0x9e;
_0x48bdac["prototype"]["readCustomData_onNewlyVisible"] = function (_0x16eee9) {
  _0x48bdac["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x16eee9),
    (this["speciesType"] = _0x16eee9["readUInt16"]()),
    (this["speciesSubType"] = _0x16eee9["readUInt16"]());
};

function _0x48bdac() {
  _0x48bdac["superClass"]["call"](this, _0xec258e);
}
(window["HalloweenFood"] = _0x48bdac), _0x17bf26["setCustomClassForGameObjType"](_0x48bdac, _0xec258e);
var _0x4e7ace = _0x4e7ace,
  _0x48c344 = _0x3799d1;
(_0x4e7ace["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x4e7ace["prototype"]["constructor"] = _0x4e7ace),
  (_0x4e7ace["superClass"] = _0x48c344),
  (_0x4e7ace["prototype"]["animalInfo"] = function () {
    var _0x5bfa88 = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x5bfa88["aniName"] = "Swinehoe";
        break;
      case 0x1:
        _0x5bfa88["aniName"] = "Golden Pheasant";
        break;
    }
    return (
      (_0x5bfa88["aniCol"] = "#FF9000"),
      (_0x5bfa88["skinName"] = this["getSkinName"]()),
      (_0x5bfa88["upgradeText"] = "UPGRADED to " + _0x5bfa88["aniName"] + "!\x0aHold W to fly around. "),
      _0x5bfa88
    );
  }),
  (_0x4e7ace["prototype"]["getSkinName"] = function () {
    return this["getSpeciesPath"]() + this["getSubSpecies"]() + "/pheasant" + (this["specType"] == 0x0 ? "" : this["specType"]);
  }),
  (_0x4e7ace["prototype"]["getSpeciesPath"] = function () {
    return "forest/pheasant/" + this["animalSpecies"];
  }),
  (_0x4e7ace["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x4e7ace["prototype"]["getWing"] = function (_0x1ffb81, _0x5089cc, _0x47cc94) {
    var _0xccd34c = "skins/" + this["getSpeciesPath"]() + "/";
    return (_0xccd34c += _0x1ffb81 + "_wing" + _0x5089cc + ".png"), _0xccd34c;
  }),
  (_0x4e7ace["prototype"]["getHead"] = function (_0x189929, _0x417a83) {
    var _0x42f2d6 = "skins/" + this["getSpeciesPath"]() + "/";
    return (_0x42f2d6 += _0x189929 + "_head.png"), _0x42f2d6;
  }),
  (_0x4e7ace["prototype"]["theFrame"] = 0x0),
  (_0x4e7ace["prototype"]["drawUnderSkinImg"] = function () {
    this["setSkinScale"]();
    var _0x1b005c = -0.7,
      _0x5a3d44 = 0.9,
      _0x5ee1c2 = "skins/" + this["getSpeciesPath"]() + "/tail.png",
      _0x293b1a = this["getSkinImageObj"](_0x5ee1c2);
    if (_0x293b1a) {
      this["flag_usingAbility"] && (_0x5a3d44 = 1.1);
      var _0x2460ca = this["skinScale"],
        _0x742f72 = this["rad"] - this["outlineW"];
      _0x587de3["drawImage"](
        _0x293b1a,
        -_0x742f72 * _0x2460ca * _0x5a3d44,
        (-_0x742f72 + _0x742f72 * _0x1b005c) * _0x2460ca * _0x5a3d44,
        0x2 * _0x742f72 * _0x2460ca * _0x5a3d44,
        0x2 * _0x742f72 * _0x2460ca * _0x5a3d44
      );
    }
  }),
  (_0x4e7ace["prototype"]["drawSkinCustomization"] = function () {
    if (this["flag_usingAbility"]) {
      if (this["flag_flying"]) {
        var _0x5bdd33 = "skins";
        {
          var _0x512569 = 0x1f4 / 0x154;
          if (this["flag_flying"] && !this["flag_isGrabbed"]) {
            _0x587de3["save"]();
            var _0x1f292f = _0x38b128("bird", this["spawnTime"]);
            _0x1f292f !== undefined && _0x1f292f != null && (this["theFrame"] = _0x1f292f);
            var _0x2c6cc8 = !(_0x57ae6d == 0x2 || _0x34fedb) ? this["theFrame"] : this["birdNoAnimationFlyWingAngle"],
              _0x205849 = this["getSkinImageObj"](this["getWing"]("pheasant", 0x1, !![]));
            if (_0x205849) {
              _0x587de3["save"]();
              var _0x3356ee = -(-0.2 + _0x2c6cc8) * _0x2f9e35,
                _0x5763f2 = this["rad"] * 0.8;
              _0x587de3["rotate"](_0x25461f + _0x3356ee);
              var _0x4808f6 = 0x0,
                _0x174898 = this["rad"],
                _0x13077e = _0x5763f2 * 0x2 * 0.62,
                _0x8c5013 = _0x5763f2 * 2.5,
                _0x3a6d9d = 0.2,
                _0x33f37b = 1.7;
              _0x587de3["drawImage"](_0x205849, _0x4808f6 + _0x13077e * -_0x3a6d9d, _0x174898 + _0x8c5013 * -_0x33f37b, _0x13077e, _0x8c5013),
                _0x587de3["restore"]();
            }
            var _0x205849 = this["getSkinImageObj"](this["getWing"]("pheasant", 0x2, !![]));
            if (_0x205849) {
              _0x587de3["save"]();
              var _0x3356ee = -(-0.2 + _0x2c6cc8) * _0x3d960f(-0x5a),
                _0x5763f2 = this["rad"] * 0.8;
              _0x587de3["rotate"](_0x3d960f(-0x2d) + _0x3356ee);
              var _0x4808f6 = 0x0,
                _0x174898 = this["rad"],
                _0x13077e = _0x5763f2 * 0x2 * 0.62,
                _0x8c5013 = _0x5763f2 * 2.5,
                _0x3a6d9d = 0.8,
                _0x33f37b = 1.7;
              _0x587de3["drawImage"](_0x205849, _0x4808f6 + _0x13077e * -_0x3a6d9d, _0x174898 + _0x8c5013 * -_0x33f37b, _0x13077e, _0x8c5013),
                _0x587de3["restore"]();
            }
            _0x587de3["restore"]();
          }
          if (this["specType"] != 0x0 && this["specType"] != undefined) {
            var _0x510ebf = this["getSkinImageObj"](this["getHead"]("pheasant", !![]));
            if (_0x510ebf) {
              _0x587de3["save"]();
              var _0x5763f2 = this["rad"],
                _0x661dc3 = 0.2;
              _0x587de3["drawImage"](
                _0x510ebf,
                -_0x5763f2 * _0x512569,
                (-_0x5763f2 + _0x5763f2 * _0x661dc3) * _0x512569,
                0x2 * _0x5763f2 * _0x512569,
                0x2 * _0x5763f2 * _0x512569
              ),
                _0x587de3["restore"]();
            }
          }
        }
      } else {
        var _0x512569 = 0x1f4 / 0x154;
        if (this["flag_usingAbility"]) {
          _0x587de3["save"]();
          var _0x2c6cc8 = 0x0,
            _0x205849 = this["getSkinImageObj"](this["getWing"]("pheasant", 0x1, !![]));
          if (_0x205849) {
            _0x587de3["save"]();
            var _0x3356ee = -(-0.2 + _0x2c6cc8) * _0x3d960f(0xf),
              _0x5763f2 = this["rad"] * 0.8;
            _0x587de3["rotate"](_0x3d960f(0xf) + _0x3356ee);
            var _0x4808f6 = 0x0,
              _0x174898 = this["rad"],
              _0x13077e = _0x5763f2 * 0x2 * 0.7,
              _0x8c5013 = _0x5763f2 * 2.2,
              _0x3a6d9d = 0x0,
              _0x33f37b = 1.5;
            _0x587de3["drawImage"](_0x205849, _0x4808f6 + _0x13077e * -_0x3a6d9d, _0x174898 + _0x8c5013 * -_0x33f37b, _0x13077e, _0x8c5013),
              _0x587de3["restore"]();
          }
          var _0x205849 = this["getSkinImageObj"](this["getWing"]("pheasant", 0x2, !![]));
          if (_0x205849) {
            _0x587de3["save"]();
            var _0x3356ee = -(-0.2 + _0x2c6cc8) * _0x3d960f(-0xf),
              _0x5763f2 = this["rad"] * 0.8;
            _0x587de3["rotate"](_0x3d960f(-0xf) + _0x3356ee);
            var _0x4808f6 = 0x0,
              _0x174898 = this["rad"],
              _0x13077e = _0x5763f2 * 0x2 * 0.7,
              _0x8c5013 = _0x5763f2 * 2.2,
              _0x3a6d9d = 0x1,
              _0x33f37b = 1.5;
            _0x587de3["drawImage"](_0x205849, _0x4808f6 + _0x13077e * -_0x3a6d9d, _0x174898 + _0x8c5013 * -_0x33f37b, _0x13077e, _0x8c5013),
              _0x587de3["restore"]();
          }
          var _0x510ebf = this["getSkinImageObj"](this["getHead"]("pheasant", !![]));
          if (_0x510ebf) {
            _0x587de3["save"]();
            var _0x5763f2 = this["rad"] * 0x1,
              _0x46aaa1 = -this["rad"] * 0.1;
            _0x587de3["drawImage"](
              _0x510ebf,
              -_0x5763f2 * _0x512569,
              -_0x5763f2 + _0x46aaa1 * _0x512569,
              0x2 * _0x5763f2 * _0x512569,
              0x2 * _0x5763f2 * _0x512569
            ),
              _0x587de3["restore"]();
          }
          _0x587de3["restore"]();
        }
      }
    }
  });

function _0x4e7ace() {
  _0x4e7ace["superClass"]["call"](this, _0x3fb3b2);
}
(window["Pheasant"] = _0x4e7ace), _0x17bf26["setCustomClassForGameObjType"](_0x4e7ace, _0x3fb3b2, _0x442977);
var _0x48c344 = _0x3799d1;
(_0x4a22d6["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x4a22d6["prototype"]["constructor"] = _0x4a22d6),
  (_0x4a22d6["superClass"] = _0x48c344),
  (_0x4a22d6["prototype"]["getSkinName"] = function () {
    return this["getSpeciesPath"]() + this["getSubSpecies"]() + "/flyinglizard" + (this["flag_usingAbility"] ? "_body" : "");
  }),
  (_0x4a22d6["prototype"]["getSpeciesPath"] = function () {
    return "forest/flyinglizard/" + this["animalSpecies"];
  }),
  (_0x4a22d6["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x4a22d6["prototype"]["animalInfo"] = function () {
    var _0x298bec = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x298bec["aniName"] = "Flying Lizard!";
        break;
    }
    return (
      (_0x298bec["skinName"] = this["getSkinName"]()),
      (_0x298bec["aniDesc"] = ""),
      (_0x298bec["upgradeText"] =
        "UPGRADED to " +
        _0x298bec["aniName"] +
        "!\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!"),
      (_0x298bec["aniCol"] = "#FF9D43"),
      _0x298bec
    );
  }),
  (_0x4a22d6["prototype"]["getAbilityInfo"] = function (_0x44a5d9) {
    var _0x2721a6 = {};
    return (
      (_0x2721a6["abilName"] = "Pull from Hole"),
      (_0x2721a6["abilImg"] = "abilities/Dig.svg"),
      (_0x2721a6["skinThemeID"] = this["skinThemeID"]),
      (_0x2721a6["mopeSeasonID"] = this["mopeSeasonID"]),
      _0x2721a6
    );
  }),
  (_0x4a22d6["prototype"]["getAsset"] = function (_0x50d4ae) {
    var _0x2ef0ed = "skins/" + this["getSpeciesPath"]() + "/flyinglizard";
    return (_0x2ef0ed += "_" + _0x50d4ae + ".png"), _0x2ef0ed;
  }),
  (_0x4a22d6["prototype"]["backOffset"] = -0.4),
  (_0x4a22d6["prototype"]["armsOffset"] = 0.16),
  (_0x4a22d6["prototype"]["headOffset"] = 0.3),
  (_0x4a22d6["prototype"]["wingsOffset"] = -0.5),
  (_0x4a22d6["prototype"]["wingsScale"] = 1.5),
  (_0x4a22d6["prototype"]["backScale"] = 1.1),
  (_0x4a22d6["prototype"]["drawSkinCustomization"] = function () {
    if (this["flag_usingAbility"]) {
      var _0x56f545 = 0x1f4 / 0x154;
      this["drawAsset"](_0x56f545, "arms", this["armsOffset"]),
        this["drawAsset"](_0x56f545, "wings", this["wingsOffset"], _0x56f545 * this["wingsScale"]),
        this["drawAsset"](_0x56f545, "back", this["backOffset"], _0x56f545 * this["backScale"]),
        this["drawAsset"](_0x56f545, "head", this["headOffset"]);
    }
  }),
  (_0x4a22d6["prototype"]["drawAsset"] = function (_0x423c3d, _0x55d4a9, _0x4b52ad, _0x1a7172) {
    var _0x47f664 = this["getSkinImageObj"](this["getAsset"](_0x55d4a9));
    if (_0x47f664) {
      if (_0x4b52ad === undefined) _0x4b52ad = 0x0;
      if (_0x1a7172 === undefined) _0x1a7172 = _0x423c3d;
      _0x587de3["save"]();
      var _0x1a9856 = this["rad"];
      _0x587de3["drawImage"](
        _0x47f664,
        -_0x1a9856 * _0x423c3d,
        (-_0x1a9856 + _0x1a9856 * _0x4b52ad) * _0x423c3d,
        0x2 * _0x1a9856 * _0x423c3d,
        0x2 * _0x1a9856 * _0x1a7172
      ),
        _0x587de3["restore"]();
    }
  });

function _0x4a22d6() {
  _0x4a22d6["superClass"]["call"](this, _0x3fb3b2);
}
const _0x39e10b = 0x79;
(window["FlyingLizard"] = _0x4a22d6), _0x17bf26["setCustomClassForGameObjType"](_0x4a22d6, _0x3fb3b2, _0x39e10b);
var _0x48c344 = _0x3799d1;
(_0x344289["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x344289["prototype"]["constructor"] = _0x344289),
  (_0x344289["superClass"] = _0x48c344),
  (_0x344289["prototype"]["getSpeciesPath"] = function (_0xfd7012) {
    return "forest/" + _0xfd7012 + "/" + this["animalSpecies"];
  }),
  (_0x344289["prototype"]["animalInfo"] = function () {
    var _0x43fbef = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x43fbef["aniName"] = "Tarsier!";
        break;
    }
    return (
      (_0x43fbef["skinName"] = this["getSkinName"]()),
      (_0x43fbef["aniDesc"] = ""),
      (_0x43fbef["upgradeText"] =
        "UPGRADED to " +
        _0x43fbef["aniName"] +
        "!\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!"),
      (_0x43fbef["aniCol"] = "#FF9D43"),
      _0x43fbef
    );
  }),
  (_0x344289["prototype"]["getSkinName"] = function () {
    return this["getSpeciesPath"]() + this["getSubSpecies"]() + "/tarsier" + (this["specType"] == 0x0 ? "" : this["specType"]);
  }),
  (_0x344289["prototype"]["getSpeciesPath"] = function () {
    return "forest/tarsier/" + this["animalSpecies"];
  }),
  (_0x344289["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  });

function _0x344289() {
  _0x344289["superClass"]["call"](this, _0x3fb3b2);
}
const _0x2e8e73 = 0x71;
(window["Tarsier"] = _0x344289), _0x17bf26["setCustomClassForGameObjType"](_0x344289, _0x3fb3b2, _0x2e8e73);
var _0x48c344 = _0x3799d1;
(_0x2309ff["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x2309ff["prototype"]["constructor"] = _0x2309ff),
  (_0x2309ff["superClass"] = _0x48c344),
  (_0x2309ff["prototype"]["getSpeciesPath"] = function (_0x246e74) {
    return "forest/" + _0x246e74 + "/" + this["animalSpecies"];
  }),
  (_0x2309ff["prototype"]["animalInfo"] = function () {
    var _0x481e4b = {};
    switch (this["animalSpecies"]) {
      case 0x0:
        _0x481e4b["aniName"] = "Chukar!";
        break;
    }
    return (
      (_0x481e4b["skinName"] = this["getSkinName"]()),
      (_0x481e4b["aniDesc"] = ""),
      (_0x481e4b["upgradeText"] =
        "UPGRADED to " +
        _0x481e4b["aniName"] +
        "!\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!"),
      (_0x481e4b["aniCol"] = "#FF9D43"),
      _0x481e4b
    );
  }),
  (_0x2309ff["prototype"]["getSkinName"] = function () {
    return this["getSpeciesPath"]() + this["getSubSpecies"]() + "/chukar" + (this["specType"] == 0x0 ? "" : this["specType"]);
  }),
  (_0x2309ff["prototype"]["getSpeciesPath"] = function () {
    return "forest/chukar/" + this["animalSpecies"];
  }),
  (_0x2309ff["prototype"]["getSubSpecies"] = function () {
    if (this["mopeSeasonID"] == 0x2) {
      if (this["animalSpecies"] === 0x0 && this["animalSubSpecies"] > 0x0) return "/" + this["animalSubSpecies"];
    }
    return "";
  }),
  (_0x2309ff["prototype"]["drawSkinCustomization"] = function () {
    if (!this["flag_usingAbility"]) return;
    {
      var _0x106f58 = 0x1f4 / 0x154;
      if (this["flag_flying"] && !this["flag_isGrabbed"]) {
        _0x587de3["save"]();
        var _0x107dad = _0x38b128("bird", this["spawnTime"]);
        _0x107dad !== undefined && _0x107dad != null && (this["theFrame"] = _0x107dad);
        var _0x332f3c = !(_0x57ae6d == 0x2 || _0x34fedb) ? this["theFrame"] : this["birdNoAnimationFlyWingAngle"],
          _0x56404c = this["getSkinImageObj"](this["getAsset"]("wing1"));
        if (_0x56404c) {
          _0x587de3["save"]();
          var _0x431091 = -(-0.2 + _0x332f3c) * _0x2f9e35,
            _0x5424e9 = this["rad"] * 0.8;
          _0x587de3["rotate"](_0x25461f + _0x431091);
          var _0x585043 = 0x0,
            _0x41a646 = this["rad"],
            _0x5521dd = _0x5424e9 * 0x2 * 0.62,
            _0x18f9ae = _0x5424e9 * 2.5,
            _0x14c074 = 0.2,
            _0x1ba55b = 1.7;
          _0x587de3["drawImage"](_0x56404c, _0x585043 + _0x5521dd * -_0x14c074, _0x41a646 + _0x18f9ae * -_0x1ba55b, _0x5521dd, _0x18f9ae),
            _0x587de3["restore"]();
        }
        var _0x56404c = this["getSkinImageObj"](this["getAsset"]("wing2"));
        if (_0x56404c) {
          _0x587de3["save"]();
          var _0x431091 = -(-0.2 + _0x332f3c) * _0x3d960f(-0x5a),
            _0x5424e9 = this["rad"] * 0.8;
          _0x587de3["rotate"](_0x3d960f(-0x2d) + _0x431091);
          var _0x585043 = 0x0,
            _0x41a646 = this["rad"],
            _0x5521dd = _0x5424e9 * 0x2 * 0.62,
            _0x18f9ae = _0x5424e9 * 2.5,
            _0x14c074 = 0.8,
            _0x1ba55b = 1.7;
          _0x587de3["drawImage"](_0x56404c, _0x585043 + _0x5521dd * -_0x14c074, _0x41a646 + _0x18f9ae * -_0x1ba55b, _0x5521dd, _0x18f9ae),
            _0x587de3["restore"]();
        }
        _0x587de3["restore"]();
      }
      if (this["specType"] != 0x0 && this["specType"] != undefined) {
        var _0x29141d = this["getSkinImageObj"](this["getAsset"]("head"));
        if (_0x29141d) {
          _0x587de3["save"]();
          var _0x5424e9 = this["rad"];
          _0x587de3["drawImage"](
            _0x29141d,
            -_0x5424e9 * _0x106f58,
            (-_0x5424e9 + _0x5424e9 * 0.1) * _0x106f58,
            0x2 * _0x5424e9 * _0x106f58,
            0x2 * _0x5424e9 * _0x106f58
          ),
            _0x587de3["restore"]();
        }
      }
    }
  }),
  (_0x2309ff["prototype"]["getAsset"] = function (_0x42aa39) {
    var _0x1846ec = "skins/" + this["getSpeciesPath"]() + "/chukar";
    return (_0x1846ec += "_" + _0x42aa39 + ".png"), _0x1846ec;
  });

function _0x2309ff() {
  _0x2309ff["superClass"]["call"](this, _0x3fb3b2);
}
const _0x397b4a = 0x72;
(window["Chukar"] = _0x2309ff), _0x17bf26["setCustomClassForGameObjType"](_0x2309ff, _0x3fb3b2, _0x397b4a);
var _0x48c344 = _0x307a43;
(_0x5dfc60["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x5dfc60["prototype"]["constructor"] = _0x5dfc60),
  (_0x5dfc60["superClass"] = _0x48c344),
  (_0x5dfc60["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"];
  }),
  (_0x5dfc60["prototype"]["customDraw"] = function (_0x385244) {
    var _0x3fe7ce = this["getSkinImageObj"](
      "gameobj/" + this["oType"] + "/" + this["oType"] + "_" + this["speciesType"] + (this["isEdibleOutlined"]() ? "_e" : "") + ".png"
    );
    if (_0x3fe7ce) {
      var _0x313341 = this["rad"];
      _0x587de3["drawImage"](_0x3fe7ce, -_0x313341, -_0x313341, 0x2 * _0x313341, 0x2 * _0x313341);
    }
  });
var _0x5b0593 = 0x9f;
_0x5dfc60["prototype"]["readCustomData_onNewlyVisible"] = function (_0x994dcb) {
  _0x5dfc60["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x994dcb),
    (this["speciesType"] = _0x994dcb["readUInt16"]()),
    (this["speciesSubType"] = _0x994dcb["readUInt16"]());
};

function _0x5dfc60() {
  _0x5dfc60["superClass"]["call"](this, _0x5b0593);
}
(window["ThanksgivingFood"] = _0x5dfc60), _0x17bf26["setCustomClassForGameObjType"](_0x5dfc60, _0x5b0593);
var _0x48c344 = _0x307a43;
(_0x543b81["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x543b81["prototype"]["constructor"] = _0x543b81),
  (_0x543b81["prototype"]["rAngle"] = 0x0),
  (_0x543b81["prototype"]["rAngleF"] = 0.005),
  (_0x543b81["prototype"]["rAngleDirection"] = 0x1),
  (_0x543b81["superClass"] = _0x48c344),
  (_0x543b81["prototype"]["updateZ"] = function () {
    if (this["isSnowFlake"]) this["z"] = 0x2af8;
    else {
      if (this["isStickingOnObject"]) this["z"] = 0x1 + this["stickingOnObjectZIndex"];
      else this["z"] = this["rad"];
    }
  }),
  (_0x543b81["prototype"]["customDraw"] = function (_0xcf8523) {
    if (this["isSnowFlake"]) {
      (_0x587de3["globalAlpha"] = 0.9), (_0x587de3["globalAlpha"] = 0x1);
      var _0x3f4308 = "gameobj/" + this["oType"] + "/snow-flake.png",
        _0x4d34bd = this["getSkinImageObj"](_0x3f4308);
      if (_0x4d34bd) {
        _0x587de3["save"]();
        var _0x2494bd = this["rad"] * 0x1;
        (this["rAngle"] += this["rAngleF"] * this["rAngleDirection"]),
          _0x587de3["rotate"](this["rAngle"]),
          _0x587de3["drawImage"](_0x4d34bd, -_0x2494bd, -_0x2494bd, _0x2494bd * 0x2, _0x2494bd * 0x2),
          _0x587de3["restore"]();
      }
    } else {
      _0x587de3["globalAlpha"] = 0x1;
      var _0x3f4308 = "gameobj/" + this["oType"] + "/" + this["oType"] + ".png",
        _0x4d34bd = this["getSkinImageObj"](_0x3f4308);
      if (_0x4d34bd) {
        _0x587de3["save"]();
        var _0x2494bd = this["rad"] * 0x1;
        _0x587de3["rotate"](this["rPer"] * 0x2 * Math["PI"]),
          _0x587de3["drawImage"](_0x4d34bd, -_0x2494bd, -_0x2494bd, _0x2494bd * 0x2, _0x2494bd * 0x2),
          _0x587de3["restore"]();
      }
    }
  }),
  (_0x543b81["prototype"]["isSnowFlake"] = !![]),
  (_0x543b81["prototype"]["isStickingOnObject"] = ![]),
  (_0x543b81["prototype"]["stickingOnObjectZIndex"] = 0x0),
  (_0x543b81["prototype"]["readUpdatedProperty"] = function (_0x28d644, _0x3eac85) {
    _0x543b81["superClass"]["prototype"]["readCustomData_onNewlyVisible"]["call"](this, _0x3eac85);
    if (_0x28d644 == _0x3ae957) this["isSnowFlake"] = _0x3eac85["readUInt8"]() == 0x1;
    else {
      if (_0x28d644 == _0xb7ed3f) this["isStickingOnObject"] = _0x3eac85["readUInt8"]() == 0x1;
      else {
        if (_0x28d644 == _0x3d494b) {
          let _0x1f010f = _0x3eac85["readUInt32"](),
            _0x272adf = _0x2fa637[_0x1f010f];
          if (_0x272adf) this["stickingOnObjectZIndex"] = _0x272adf["z"];
        }
      }
    }
  }),
  (_0x543b81["prototype"]["readCustomData_onNewlyVisible"] = function (_0x3fef90) {
    this["readUpdatedProperty"](_0x3ae957, _0x3fef90),
      this["readUpdatedProperty"](_0xb7ed3f, _0x3fef90),
      this["readUpdatedProperty"](_0x3d494b, _0x3fef90);
  });

function _0x543b81() {
  _0x543b81["superClass"]["call"](this, _0x282e37), (this["rAngleDirection"] = _0x103b73(0x0, 0x1) == 0x0 ? 0x1 : -0x1);
}
(window["Snow"] = _0x543b81), _0x17bf26["setCustomClassForGameObjType"](_0x543b81, _0x282e37);
class _0x3821d1 {
  constructor() {
    (this["ENDPOINTS"] = {
      GET_INCENTIVIZED_AD_SKINS: "/getIncentivizedAdSkins",
      REDEEM_INCENTIVIZED_AD_REWARD: "/redeemIncentivizedAdReward",
    }),
      (this["url"] = _0x4bfbd4 && $config["useDevAccountServer"] ? $config["devAccountServerUrl"] : "https://mope-accountserver-do.mope.io");
  }
  async ["getIncentivizedAdSkins"]({ sessionId: _0xe6501e, serverId: _0x5778bc, userId: _0x2215a1, passwordToken: _0x29f9cc }) {
    try {
      const _0x2cb2e1 = await fetch("" + this["url"] + this["ENDPOINTS"]["GET_INCENTIVIZED_AD_SKINS"], {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON["stringify"]({
            sessionId: _0xe6501e,
            serverId: _0x5778bc,
            userId: _0x2215a1,
            passwordToken: _0x29f9cc,
          }),
        }),
        _0x1128c6 = await _0x2cb2e1["json"]();
      return _0x1128c6;
    } catch (_0x1119f3) {
      return (
        console["log"]("::: AccountServerService - getIncentivzedAdSkins() ::: ERROR", _0x1119f3),
        {
          success: ![],
          error: _0x1119f3,
        }
      );
    }
  }
  async ["redeemIncentivizedAdReward"]({ sessionId: _0x49a443, serverId: _0x4a5998, userId: _0x14dd97, passwordToken: _0x97821 }) {
    try {
      const _0x1540df = {
          sessionId: _0x49a443,
          serverId: _0x4a5998,
          userId: _0x14dd97,
          passwordToken: _0x97821,
        },
        _0x30589c = await fetch("" + this["url"] + this["ENDPOINTS"]["REDEEM_INCENTIVIZED_AD_REWARD"], {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON["stringify"](_0x1540df),
        }),
        _0x2ab5d0 = await _0x30589c["json"]();
      return _0x2ab5d0;
    } catch (_0x17d054) {
      return (
        console["log"]("::: AccountServerService - redeemIncentivizedAdReward() ::: ERROR", _0x17d054),
        {
          success: ![],
          error: _0x17d054,
        }
      );
    }
  }
}
const _0x362991 = new _0x3821d1();
class _0xbec950 {
  static ["localStorageKeyName"] = "totalSessionsSinceLastAd";
  static ["incrementSessionCount"]() {
    const _0x2b25a5 = window["localStorage"]["getItem"](_0xbec950["localStorageKeyName"]);
    if (_0x2b25a5) {
      let _0x2e1115 = parseInt(_0x2b25a5);
      !isNaN(_0x2e1115) &&
        (_0x2e1115 === 0x3 ? (_0x2e1115 = 0x0) : (_0x2e1115 += 0x1), window["localStorage"]["setItem"](_0xbec950["localStorageKeyName"], _0x2e1115));
    }
  }
  static async ["shouldShowIncentivzedAdPopup"]({ sessionCount: _0x203bb5, userClickedButton: _0x3e9cef }) {
    return (_0x203bb5 === 0x3 && _0x456cda) || _0x3e9cef;
  }
  static async ["handleShowIncentivizedAdPopup"]({ userClickedButton: _0x36215a }) {
    const _0x31acee = window["localStorage"]["getItem"](_0xbec950["localStorageKeyName"]);
    if (_0x31acee) {
      const _0x163010 = parseInt(_0x31acee);
      if (!isNaN(_0x163010) || _0x36215a) {
        const _0x566234 = await _0xbec950["shouldShowIncentivzedAdPopup"]({
          sessionCount: _0x163010,
          userClickedButton: _0x36215a,
        });
        if (_0x566234) {
          const _0x39e724 = {
            sessionId: _0x4247cc["serverInfo"]["sessionId"],
            serverId: _0x4247cc["serverInfo"]["serverId"],
            userId: _0x4410e4,
            passwordToken: _0x45944e,
          };
          _0x362991["getIncentivizedAdSkins"](_0x39e724)["then"]((_0x586add) => {
            const { success: _0x2091ba } = _0x586add;
            if (_0x2091ba) {
              console["log"]("::: iandev :::", _0x586add);
              const { skinData: _0x3da922 } = _0x586add,
                _0x5dc3cd = _0x3da922["map"]((_0x26dfce) => {
                  const _0x1b8c93 = _0x2f2e34["prototype"]["getAnimalInfo"](_0x26dfce["itemName"]);
                  return [..._0x1b8c93, _0x26dfce["season"]];
                });
              $bus["emit"]($bus["EVENTS"]["SHOW_INCENTIVIZED_AD_POPUP"], {
                skins: _0x5dc3cd,
              });
            } else {
              const { error: _0x189ecd } = _0x586add;
              _0x1e26e6(_0x189ecd, "error", 0xbb8);
            }
          });
        }
        _0xbec950["incrementSessionCount"]();
      }
    } else window["localStorage"]["setItem"](_0xbec950["localStorageKeyName"], 0x1);
  }
  static async ["playIncentivizedVideoAd"]() {
    const _0x7cdcdf = await _0x3e40e2();
    if (_0x7cdcdf) return _0x1e26e6("Disable Ad Block to get a free skin for 24 hours!", "success", 0xbb8);
    console["log"]("::: ad-tech ::: Attempting to play Incentivized Ad");
    let _0x135a76 = null;
    setTimeout(() => {
      !_0x135a76 &&
        (_0xbec950["handleFinishedWatchingAd"](),
        console["log"]("::: ad-tech ::: Failed to play Incentivized Ads."),
        gtag("event", "incentivized_ad", {
          event_category: "incentivized_ads",
          event_label: "failed_to_play",
          value: "failed_to_play",
        }));
    }, 0x2710),
      _0x1b13bd["playIncentivizedVideoAd"]((_0xc40595) => {
        (_0x135a76 = _0xc40595), console["log"]("::: ad-tech ::: playIncentivizedVideoAd callback hit! ", _0xc40595);
        if (_0xc40595["event"] === "start")
          gtag("event", "incentivized_ad", {
            event_category: "incentivized_ads",
            event_label: "started",
            value: "started",
          });
        else {
          if (_0xc40595["event"] === "finished")
            console["log"]("::: ad-tech ::: Incentivized Ad Finished Playing"),
              _0xbec950["handleFinishedWatchingAd"](),
              gtag("event", "incentivzed_ad", {
                event_category: "incentivized_ads",
                event_label: "ad_finished",
                value: "ad_finished",
              });
          else {
            if (_0xc40595["event"] === "empty")
              console["log"]("::: ad-tech ::: Incentivized Ad Queue is Empty"),
                _0xbec950["handleFinishedWatchingAd"](),
                gtag("event", "incentivized_ad", {
                  event_category: "incentivized_ads",
                  event_label: "ad_queue_empty",
                  value: "ad_queue_empty",
                });
            else
              _0xc40595["event"] === "skipped" &&
                (console["log"]("::: ad-tech ::: Incentivized Ad Skipped"),
                _0xbec950["handleFinishedWatchingAd"](),
                gtag("event", "incentivized_ad", {
                  event_category: "incentivized_ads",
                  event_label: "ad_skipped",
                  value: "ad_skipped",
                }));
          }
        }
      });
  }
  static async ["playIncentivizedVideoAd"]() {
    const _0x599e7c = await _0x3e40e2();
    if (_0x599e7c) return _0x1e26e6("Disable Ad Block to get a free skin for 24 hours!", "success", 0xbb8);
    console["log"]("::: ad-tech ::: Attempting to play Incentivized Ad");
    let _0x1be0cb = null;
    setTimeout(() => {
      !_0x1be0cb &&
        (_0xbec950["handleFinishedWatchingAd"](),
        console["log"]("::: ad-tech ::: Failed to play Incentivized Ads."),
        gtag("event", "incentivized_ad", {
          event_category: "incentivized_ads",
          event_label: "failed_to_play",
          value: "failed_to_play",
        }));
    }, 0x2710),
      _0x1b13bd["playIncentivizedVideoAd"]((_0x1b7c39) => {
        (_0x1be0cb = _0x1b7c39), console["log"]("::: ad-tech ::: playIncentivizedVideoAd callback hit! ", _0x1b7c39);
        if (_0x1b7c39["event"] === "start")
          gtag("event", "incentivized_ad", {
            event_category: "incentivized_ads",
            event_label: "started",
            value: "started",
          });
        else {
          if (_0x1b7c39["event"] === "finished")
            console["log"]("::: ad-tech ::: Incentivized Ad Finished Playing"),
              _0xbec950["handleFinishedWatchingAd"](),
              gtag("event", "incentivzed_ad", {
                event_category: "incentivized_ads",
                event_label: "ad_finished",
                value: "ad_finished",
              });
          else
            _0x1b7c39["event"] === "empty" &&
              (console["log"]("::: ad-tech ::: Incentivized Ad Queue is Empty"),
              _0xbec950["handleFinishedWatchingAd"](),
              gtag("event", "incentivized_ad", {
                event_category: "incentivized_ads",
                event_label: "ad_queue_empty",
                value: "ad_queue_empty",
              }));
        }
      });
  }
  static ["handleFinishedWatchingAd"]() {
    _0x362991["redeemIncentivizedAdReward"]({
      sessionId: _0x4247cc["serverInfo"]["sessionId"],
      serverId: _0x4247cc["serverInfo"]["serverId"],
      userId: _0x4410e4,
      passwordToken: _0x45944e,
    })["then"]((_0x2ddcb0) => {
      const { success: _0x205b66, reward: _0x2b54dd } = _0x2ddcb0;
      if (!_0x205b66) return _0x1e26e6(_0x2ddcb0["error"], "error", 0xfa0);
      gtag("event", "incentivized_ad", {
        event_category: "incentivized_ads",
        event_label: "reward_awarded",
        value: "reward_awarded",
      });
      const _0x32aeab = new _0x1581ed(null, _0x2b54dd["animalType"]),
        _0x592530 = _0x2f2e34["prototype"]["getAnimalInfo"](_0x2b54dd["itemName"]),
        _0x136cfd = _0x556bba({
          animalType: _0x2b54dd["animalType"],
        }),
        _0x42301e = [
          {
            name: _0x136cfd["abilityName"],
            img: _0x136cfd["abilityImage"],
            desc: "Left click to " + _0x136cfd["abilityName"],
          },
        ];
      _0x32aeab &&
        _0x592530 &&
        _0x136cfd &&
        ($bus["emit"]($bus["EVENTS"]["ADD_SHOP_ITEM"], {
          isNew: !![],
          skinName: _0x592530[0x2],
          itemName: _0x2b54dd["itemName"],
          tier: _0x2b54dd["tier"],
          shopImage: "/assets/s/" + _0x2b54dd["season"] + "/skins/" + _0x592530[0x3] + ".png",
          data: {
            info: "Unlocked for 24 hours.",
          },
          isOnSale: ![],
          isFree: ![],
          finalPrice: -0x1,
          purchasedByPlayer: !![],
          itemType: "skin",
          isTemporary: !![],
        }),
        $bus["emit"]($bus["EVENTS"]["FINISHED_INCENTIVIZED_AD"], {
          rewardType: "skin",
          tier: _0x2b54dd["tier"],
          season: _0x2b54dd["season"],
          biome: _0x32aeab["biomeName"],
          name: _0x592530[0x2],
          img: _0x592530[0x3],
          abilities: _0x42301e,
        }));
    });
  }
}
$bus["on"]($bus["EVENTS"]["HANDLE_INCENTIVIZED_AD"], () =>
  _0xbec950["handleShowIncentivizedAdPopup"]({
    userClickedButton: !![],
  })
);
var _0x48c344 = _0x307a43;
(_0x364dea["prototype"] = Object["create"](_0x48c344["prototype"])),
  (_0x364dea["prototype"]["constructor"] = _0x364dea),
  (_0x364dea["superClass"] = _0x48c344),
  (_0x364dea["prototype"]["foodType"] = 0x0),
  (_0x364dea["prototype"]["updateZ"] = function () {
    this["z"] = this["rad"];
  }),
  (_0x364dea["prototype"]["customDraw"] = function (_0x2a431c) {
    _0x587de3["save"]();
    var _0xe6e0aa =
        "gameobj/" + this["oType"] + "/" + this["oType"] + "_" + this["foodType"] + "" + (this["isEdibleOutlined"]() ? "_e" : "") + ".png",
      _0x4edcd2 = this["getSkinImageObj"](_0xe6e0aa);
    if (_0x4edcd2) {
      var _0x3f9482 = this["rad"];
      _0x587de3["save"](),
        _0x587de3["rotate"](this["rPer"] * 0.5 * Math["PI"] * 0x2),
        _0x587de3["drawImage"](_0x4edcd2, -_0x3f9482, -_0x3f9482, 0x2 * _0x3f9482, 0x2 * _0x3f9482),
        _0x587de3["restore"]();
    }
    _0x587de3["restore"]();
  }),
  (_0x364dea["prototype"]["readCustomData_onNewlyVisible"] = function (_0x2f3672) {
    this["foodType"] = _0x2f3672["readUInt8"]();
  });
var _0x434497 = 0xa0;

function _0x364dea() {
  _0x364dea["superClass"]["call"](this, _0x434497), (this["doesDrawEffectScale"] = !![]);
}
(window["ValentineFood"] = _0x364dea), _0x17bf26["setCustomClassForGameObjType"](_0x364dea, _0x434497), _0x125f2f["preloadImages"]();
var _0x2305e7 = 0x0;

function _0x50f00f() {
  var _0x545271 = _0x1b166c("audio/click.mp3");
  if (_0x545271)
    try {
      _0x545271["play"]();
    } catch (_0x40bd8b) {}
}
_0x1b166c("audio/click.mp3"), _0x5b53ed(), _0x2976ad();
var _0x20bab4 = [];

function _0x49971d(_0x1b02f7) {
  switch (_0x1b02f7) {
    case _0x18715e:
    case _0x94e33c:
    case _0x2b2ead:
    case _0x1d5893:
    case _0x37c4c1:
    case _0x259653:
    case _0x583c47:
    case _0x4db207:
    case _0x9c4ccf:
    case _0xf2c340:
    case _0xb09376:
      return !![];
  }
  return ![];
}
var _0x456ad3 = null,
  _0x325aee = null;
const _0x4b4dea = function (_0x35505e) {
    var _0xada5c2 = _0x35505e["readBitGroup"](),
      _0x3734cb = _0xada5c2["getBool"]();
    if (_0x3734cb) {
      var _0x1a190f = _0xada5c2["getBool"]();
      if (_0x1a190f) {
        vID = _0x35505e["readUInt32"]();
        _0x325aee == null &&
          ((_0x325aee = {
            id: vID,
          }),
          (_0x325aee["_ox"] = _0x325aee["X"] = _0x325aee["_nx"] = 0x0),
          (_0x325aee["_oy"] = _0x325aee["Y"] = _0x325aee["_ny"] = 0x0));
        var _0x5768c9 = _0x35505e["readUInt32"]() / 0x64,
          _0x3f06ec = _0x35505e["readUInt32"]() / 0x64;
        (_0x325aee["_ox"] = _0x325aee["X"]), (_0x325aee["_oy"] = _0x325aee["Y"]), (_0x325aee["_nx"] = _0x5768c9), (_0x325aee["_ny"] = _0x3f06ec);
      } else _0x325aee = null;
    } else _0x325aee = null;
  },
  _0x13ff65 = function () {
    var _0x2f5a25 = _0x2fa637[_0x204989];
    if (_0x325aee == null || !_0x2f5a25) return;
    _0x2ca809(),
      _0x587de3["save"](),
      (_0x587de3["strokeStyle"] = "white"),
      (_0x587de3["globalAlpha"] = 0x1),
      _0x587de3["beginPath"](),
      _0x587de3["moveTo"](_0x2f5a25["x"], _0x2f5a25["y"]),
      _0x587de3["lineTo"](_0x325aee["X"], _0x325aee["Y"]),
      _0x587de3["stroke"](),
      _0x587de3["restore"]();
  },
  _0x2ca809 = function () {
    var _0x31e9e4 = 0.1;
    (_0x325aee["X"] = _0x31e9e4 * (_0x325aee["_nx"] - _0x325aee["_ox"]) + _0x325aee["_ox"]),
      (_0x325aee["Y"] = _0x31e9e4 * (_0x325aee["_ny"] - _0x325aee["_oy"]) + _0x325aee["_oy"]);
  };
var _0x4251af = new Array();
const _0x2848df = function (_0x114ea4) {
    var _0x44d1c9 = _0x114ea4["readUInt8"]();
    _0x4251af = new Array();
    for (i = 0x0; i < _0x44d1c9; i++) {
      var _0x403443 = _0x114ea4["readUInt16"](),
        _0x2638b2 = _0x114ea4["readUInt8"]();
      if (_0x2638b2 > 0x0)
        for (s = 0x0; s < _0x2638b2; s++) {
          var _0x1f175c = _0x114ea4["readUInt16"]() / 0x4,
            _0x51ba87 = _0x114ea4["readUInt16"]() / 0x4;
          if (_0x403443 == _0x3d4eea) {
            var _0x731963 = _0x114ea4["readUInt8"]() == 0x1,
              _0x3ef3ad = _0x114ea4["readUInt8"]();
            _0x4251af["push"]({
              oType: _0x403443,
              specType: _0x3ef3ad,
              x: _0x1f175c,
              y: _0x51ba87,
              rad: 0x2,
              droppedInHole: _0x731963,
            });
          } else {
            if (_0x403443 == _0x26acd2) {
              var _0x3ef3ad = _0x114ea4["readUInt8"]();
              _0x4251af["push"]({
                oType: _0x403443,
                specType: _0x3ef3ad,
                x: _0x1f175c,
                y: _0x51ba87,
                rad: 0x2,
              });
            } else
              _0x4251af["push"]({
                oType: _0x403443,
                x: _0x1f175c,
                y: _0x51ba87,
                rad: 0x2,
              });
          }
        }
    }
    var _0x2638b2 = _0x114ea4["readUInt8"]();
    for (s = 0x0; s < _0x2638b2; s++) {
      var _0x5af797 = _0x114ea4["readUInt16"](),
        _0x133f5b = _0x114ea4["readUInt16"]() / 0x4,
        _0x1f175c = _0x114ea4["readUInt16"]() / 0x4,
        _0x51ba87 = _0x114ea4["readUInt16"]() / 0x4;
      _0x4251af["push"]({
        oType: _0x5aa814,
        abil: _0x5af797,
        x: _0x1f175c,
        y: _0x51ba87,
        angle: _0x133f5b,
        rad: 0x2,
      });
    }
  },
  _0x49828d = function (_0x384d1b) {
    _0x169ff8 = {};
    var _0x5859e3 = _0x384d1b["readUInt8"]() == 0x1;
    if (_0x5859e3) {
      var _0x3e995f = _0x384d1b["readUInt8"]();
      (_0x169ff8 = {}), (_0x169ff8["treesCount"] = _0x3e995f);
      for (i = 0x0; i < _0x3e995f; i++) _0x169ff8[_0x384d1b["readUInt32"]()] = 0x1;
    }
  };
var _0x3e6fd0 = [];
const _0xd5e9b7 = function (_0x4a0c61) {
  _0x3e6fd0 = [];
  var _0x5b40a9 = _0x4a0c61["readUInt8"]() == 0x1;
  if (_0x5b40a9) {
    var _0x24b22b = _0x4a0c61["readUInt8"]();
    for (i = 0x0; i < _0x24b22b; i++) _0x3e6fd0[_0x4a0c61["readUInt32"]()] = !![];
    _0x3e6fd0[_0x204989] = !![];
  }
};

function _0x176dbd(_0x538fdc) {
  var _0x347b6b = [];
  return (
    (_0x347b6b["rank"] = _0x538fdc["readUInt16"]()),
    (_0x347b6b["topRank"] = _0x538fdc["readUInt16"]()),
    (_0x347b6b["timeAlive"] = _0x538fdc["readUInt16"]()),
    (_0x347b6b["totalKills"] = _0x538fdc["readUInt16"]()),
    (_0x347b6b["maxXP"] = _0x538fdc["readUInt32"]()),
    _0x347b6b
  );
}
var _0x3149bb = null,
  _0x4f509c = 0x0;

function _0x56c7b3(_0x449c5d) {
  _0x4f509c = _0x24f0be * 0.6;
  if (_0x3149bb == null) _0x3149bb = document["createElement"]("canvas");
  var _0x3898d7 = _0x3149bb["getContext"]("2d"),
    _0x4a419b = 0x37,
    _0x11592a = 0x28,
    _0x35143e = 0x5,
    _0x415e00 = 0xc8,
    _0x449681 = 0x1a4;
  (_0x4a419b = _0x415e00 + _0x35143e * 0x2),
    (_0x3149bb["width"] = _0x449681 + _0x35143e * 0x2),
    (_0x3149bb["height"] = _0x4a419b),
    (_0x3898d7["globalAlpha"] = 0.2),
    (_0x3898d7["fillStyle"] = "#000000"),
    _0x3898d7["fillRect"](0x0, 0x0, _0x3149bb["width"], _0x3149bb["height"]),
    (_0x3898d7["fillStyle"] = "#000000"),
    _0x3898d7["fillRect"](_0x35143e, _0x35143e, _0x3149bb["width"] - _0x35143e * 0x2, _0x3149bb["height"] - _0x35143e * 0x2);
  var _0x4f1bda = 0x37 + _0x35143e;
  (_0x3898d7["globalAlpha"] = 0x1), (_0x3898d7["fillStyle"] = "#FFFFFF"), (_0x3898d7["font"] = "30px Arial");
  var _0x3b7914 = "YOU DIED!";
  (_0x3898d7["font"] = "30px Arial"),
    _0x3898d7["fillText"](_0x3b7914, _0x3149bb["width"] / 0x2 - _0x3898d7["measureText"](_0x3b7914)["width"] / 0x2, _0x4f1bda),
    (_0x3898d7["font"] = "20px Arial"),
    (_0x4f1bda += 0x2d),
    (_0x3b7914 = "You were #" + _0x449c5d["rank"]),
    _0x3898d7["fillText"](_0x3b7914, _0x3149bb["width"] / 0x2 - _0x3898d7["measureText"](_0x3b7914)["width"] / 0x2, _0x4f1bda),
    (_0x4f1bda += 0x28);
  var _0x128f6d = _0x167d19(_0x449c5d["timeAlive"]),
    _0x531673 = _0x35143e + 0xf;
  _0x1f442f(_0x3898d7, "Time Alive", _0x128f6d, _0x531673, _0x4f1bda),
    (_0x531673 += 0xd2),
    _0x1f442f(_0x3898d7, "Total Kills", _0x449c5d["totalKills"], _0x531673, _0x4f1bda),
    (_0x4f1bda += 0x28),
    (_0x531673 = _0x35143e + 0xf),
    _0x1f442f(_0x3898d7, "Top rank", _0x449c5d["topRank"], _0x531673, _0x4f1bda),
    (_0x531673 += 0xd2),
    _0x1f442f(_0x3898d7, "Max XP", _0x105fd1(_0x449c5d["maxXP"]), _0x531673, _0x4f1bda);
}

function _0x57deb3(_0x5d7d7c, _0x3dd5e7, _0x4bdba7, _0x39808c, _0x253221, _0x50062b) {
  if (_0x57ae6d == 0x2) return;
  _0x587de3["save"]();
  var _0xb12b96 = _0x4bdba7 - _0x5d7d7c,
    _0x6449c1 = _0x39808c - _0x3dd5e7,
    _0x23c966 = 0x0,
    _0x5c02c2 = _0x645c5 / 0x2 / _0x39fa27,
    _0x302db8 = _0x24f0be / 0x2 / _0x39fa27;
  (_0x5d7d7c = Math["max"](_0x5d7d7c, _0x36a239 - _0x5c02c2 - _0x253221 + _0x23c966)),
    (_0x3dd5e7 = Math["max"](_0x3dd5e7, _0x80b3e7 - _0x302db8 - _0x50062b + _0x23c966)),
    (_0x4bdba7 = Math["min"](_0x4bdba7, _0x36a239 + _0x5c02c2 - _0x253221 - _0x23c966)),
    (_0x39808c = Math["min"](_0x39808c, _0x80b3e7 + _0x302db8 - _0x50062b - _0x23c966)),
    (_0x587de3["strokeStyle"] = "black"),
    (_0x587de3["globalAlpha"] = 0.055);
  var _0x5d3c3d = 0x1e,
    _0x2af24d = _0x4bdba7 - _0x5d7d7c;
  fillH = _0x39808c - _0x3dd5e7;
  for (var _0x5851e0 = -0.5 + _0x5d7d7c + ((_0xb12b96 - _0x5d7d7c) % _0x5d3c3d); _0x5851e0 < _0x5d7d7c + _0x2af24d; _0x5851e0 += _0x5d3c3d) {
    _0x587de3["beginPath"](), _0x587de3["moveTo"](_0x5851e0, _0x3dd5e7), _0x587de3["lineTo"](_0x5851e0, _0x3dd5e7 + fillH), _0x587de3["stroke"]();
  }
  for (dy = -0.5 + _0x3dd5e7 + ((_0x6449c1 - _0x3dd5e7) % _0x5d3c3d); dy < _0x3dd5e7 + fillH; dy += _0x5d3c3d) {
    _0x587de3["beginPath"](), _0x587de3["moveTo"](_0x5d7d7c, dy), _0x587de3["lineTo"](_0x5d7d7c + _0x2af24d, dy), _0x587de3["stroke"]();
  }
  _0x587de3["restore"]();
}
const _0x251473 = function () {
  (_0x2f28f3 = ![]), (_0x562f18 = ![]);
  if (_0x32740c) return;
  _0x5c1561();
  if (_0x305740 || !_0x200eed) return;
  _0xff1b09(![]);
};
$bus["on"]($bus["EVENTS"]["START_GAME"], _0x251473),
  $bus["on"]($bus["EVENTS"]["UI_SPECTATE"], () => {
    _0x153b56();
  });
const _0x153b56 = function () {
  if (!_0x32740c) {
    var _0xcb3643 = new _0x5906b0(0x1);
    _0xcb3643["writeUInt8"](_0x24a4da), _0xb4d17c(_0xcb3643);
  }
};
var _0x3dfeef = ![],
  _0x465019 = ![];
let _0x489d37 = ![];
$bus["on"]($bus["EVENTS"]["UI_PRESSED_ENTER"], () => {
  (_0x489d37 = !![]),
    setTimeout(() => {
      _0x489d37 = ![];
    }, 0x1f4);
});

function _0x477fc0(_0x9f07df) {
  var _0x5e4b49 = document["getElementById"]("chatinput");
  switch (_0x9f07df["key"]) {
    case "ArrowLeft":
      if (_0x9f07df["ctrlKey"]) {
        var _0x510377 = _0x5e4b49["style"]["width"];
        (_0x510377 = _0x510377["replace"]("px", "")), (_0x510377 = Number(_0x510377) - 0x5), (_0x5e4b49["style"]["width"] = _0x510377 + "px");
      } else {
        var _0x510377 = _0x5e4b49["style"]["left"];
        (_0x510377 = _0x510377["replace"]("px", "")), (_0x510377 = Number(_0x510377) - 0x5), (_0x5e4b49["style"]["left"] = _0x510377 + "px");
      }
      break;
    case "ArrowRight":
      if (_0x9f07df["ctrlKey"]) {
        var _0x510377 = _0x5e4b49["style"]["width"];
        (_0x510377 = _0x510377["replace"]("px", "")), (_0x510377 = Number(_0x510377) + 0x5), (_0x5e4b49["style"]["width"] = _0x510377 + "px");
      } else {
        var _0x510377 = _0x5e4b49["style"]["left"];
        (_0x510377 = _0x510377["replace"]("px", "")), (_0x510377 = Number(_0x510377) + 0x5), (_0x5e4b49["style"]["left"] = _0x510377 + "px");
      }
      break;
    case "ArrowUp":
      var _0x510377 = _0x5e4b49["style"]["top"];
      (_0x510377 = _0x510377["replace"]("px", "")), (_0x510377 = Number(_0x510377) - 0x5), (_0x5e4b49["style"]["top"] = _0x510377 + "px");
      break;
    case "ArrowDown":
      var _0x510377 = _0x5e4b49["style"]["top"];
      (_0x510377 = _0x510377["replace"]("px", "")), (_0x510377 = Number(_0x510377) + 0x5), (_0x5e4b49["style"]["top"] = _0x510377 + "px");
      break;
  }
}
var _0x380e14 = ![],
  _0x3e2967 = !![];

function _0x1a2a53(_0x467c61) {
  if (_0x467c61["indexOf"]("/anim-switch:") != -0x1) {
    var _0x4c8bb9 = _0x467c61["replace"]("/anim-switch:", "");
    switch (_0x4c8bb9) {
      case "honeybee":
        _0x1ad900 = !_0x1ad900;
        return !![];
      case "phoenix":
        _0x5f39f2 = !_0x5f39f2;
        return !![];
    }
  }
  return _0x55f8f1(_0x467c61);
}
var _0x200d05 = ![];
const _0x55f8f1 = function (_0xc09ec4) {
  if (!_0x4bfbd4 && !_0x344a8b) return ![];
  if (_0xc09ec4["indexOf"]("chatbox:") != -0x1) {
    var _0x155b2f = _0xc09ec4["replace"]("chatbox:", "");
    switch (_0x155b2f) {
      case "edit:start":
        _0x380e14 = !![];
        break;
      case "edit:end":
        var _0x499207 = document["getElementById"]("chatinput"),
          _0x4e402e = {
            autoLoad: _0x3e2967,
            left: _0x499207["style"]["left"],
            top: _0x499207["style"]["top"],
            width: _0x499207["style"]["width"],
          };
        localStorage["setItem"]("chatbox", JSON["stringify"](_0x4e402e)), (_0x380e14 = ![]);
        break;
      case "set:autoload":
        _0x3e2967 = !![];
        break;
      case "load":
        var _0x499207 = document["getElementById"]("chatinput"),
          _0x4e402e = JSON["parse"](localStorage["getItem"]("chatbox"));
        (_0x499207["style"]["left"] = _0x4e402e["left"]),
          (_0x499207["style"]["top"] = _0x4e402e["top"]),
          (_0x499207["style"]["width"] = _0x4e402e["width"]);
        break;
      case "reset":
        var _0x499207 = document["getElementById"]("chatinput");
        (_0x499207["style"]["left"] = ""), (_0x499207["style"]["right"] = ""), (_0x499207["style"]["width"] = "");
        break;
    }
    return;
  }
  switch (_0xc09ec4) {
    case "show:interface":
      (_0x5d4501 = !![]), (_0x36622f = !![]), (_0x2675a6 = !![]), (_0x351c44 = !![]), (_0x13ae42 = !![]), (_0x2dd961 = !![]), (_0x200d05 = ![]);
      return !![];
    case "hide:interface":
      (_0x5d4501 = ![]), (_0x36622f = ![]), (_0x2675a6 = ![]), (_0x351c44 = ![]), (_0x13ae42 = ![]), (_0x2dd961 = ![]), (_0x200d05 = !![]);
      return !![];
    case "show:map":
      _0x5d4501 = !![];
      return !![];
    case "show:xpbar":
      _0x2675a6 = !![];
      return !![];
    case "show:board":
      _0x36622f = !![];
      return !![];
    case "show:waterbar":
      _0x351c44 = !![];
      return !![];
    case "show:1v1":
      _0x2dd961 = !![];
      return !![];
    case "show:ability":
      _0x13ae42 = !![];
      return !![];
    case "hide:map":
      _0x5d4501 = ![];
      return !![];
    case "hide:xpbar":
      _0x2675a6 = ![];
      return !![];
    case "hide:board":
      _0x36622f = ![];
      return !![];
    case "hide:waterbar":
      _0x351c44 = ![];
      return !![];
    case "hide:1v1":
      _0x2dd961 = ![];
      return !![];
    case "hide:ability":
      _0x13ae42 = ![];
      return !![];
  }
  return ![];
};

function _0x37f46d(_0xe5fad3) {
  if (_0x4e3e5f) {
    var _0x2ece1c = JSON["parse"](localStorage["getItem"]("chatbox"));
    if (_0xe5fad3 && _0x2ece1c && _0x2ece1c["autoLoad"]) {
      var _0x2c89da = document["getElementById"]("chatinput");
      (_0x2c89da["style"]["left"] = _0x2ece1c["left"]),
        (_0x2c89da["style"]["top"] = _0x2ece1c["top"]),
        (_0x2c89da["style"]["width"] = _0x2ece1c["width"]);
    }
  }
}
_0x37f46d(!![]);
const _0x2ab0fd = function () {
  if (!_0x456cda && _0x19548e) return;
  var _0x51f4a5 = document["getElementById"]("chatinput");
  if (!_0x3dfeef && _0x37000d) {
    (_0x51f4a5["style"]["visibility"] = "visible"), _0x51f4a5["focus"](), (_0x3dfeef = !![]);
    if (_0x344a8b) _0x51f4a5["maxLength"] = 0x64;
    _0x51f4a5["onblur"] = function () {
      if (_0x3dfeef) _0x2ab0fd();
    };
  } else {
    if (_0x3dfeef) {
      var _0x4f4d8c = _0x51f4a5["value"] + "";
      (_0x3dfeef = ![]),
        (_0x51f4a5["style"]["visibility"] = "hidden"),
        _0x4f4d8c["length"] > 0x0 &&
          _0x37000d &&
          !_0x1a2a53(_0x4f4d8c) &&
          ((newMsg = new _0x5906b0(0x3 + _0x2fadab(_0x4f4d8c)["length"])),
          newMsg["writeUInt8"](0x13),
          newMsg["writeString"](_0x4f4d8c),
          _0xb4d17c(newMsg)),
        (_0x51f4a5["value"] = "");
    }
  }
};
window["onresize"] = _0x5b53ed;
var _0x3f602f = 0x3e8,
  _0x2423b7 = 0x3e8;

function _0x1a2539() {
  var _0x28072c = window["innerWidth"] * 0.15;
  if (_0x28072c > 0xc8) _0x90acdb = 0xc8;
  else {
    if (_0x28072c < 0x96) _0x90acdb = 0x96;
    else _0x90acdb = _0x28072c;
  }
  console["log"](_0x90acdb);
}

function _0x5b53ed() {
  (_0x3f602f = window["innerWidth"]), (_0x2423b7 = window["innerHeight"]), (_0x5b343a = null);
  _0xe2e29 && ((_0x3f602f = document["body"]["clientWidth"]), (_0x2423b7 = document["body"]["clientHeight"]));
  switch (_0x57ae6d) {
    case 0x1:
    case 0x2:
    case 0x3:
      _0x4454f9 = window["devicePixelRatio"];
      break;
    default:
      console["log"]("Unknown graphics level " + _0x57ae6d);
  }
  (_0x645c5 = _0x3f602f * _0x4454f9),
    (_0x24f0be = _0x2423b7 * _0x4454f9),
    (_0x2553b6["width"] = _0x645c5),
    (_0x2553b6["height"] = _0x24f0be),
    (_0x2553b6["style"]["width"] = _0x3f602f + "px"),
    (_0x2553b6["style"]["height"] = _0x2423b7 + "px"),
    (_0x385a2a = 0.85 * _0x4454f9 * Math["max"](_0x3f602f / 0x780, _0x2423b7 / 0x438));
  var _0x3e7d05 = document["getElementById"]("chatinput");
  (_0x3e7d05["style"]["marginTop"] = _0x2423b7 / 0x2 - 0x32 + "px"), _0x2564fb();
  _0x4980cd() &&
    ((mes = new _0x5906b0(0x7)),
    mes["writeUInt8"](0x11),
    mes["writeUInt16"](_0x645c5),
    mes["writeUInt16"](_0x24f0be),
    _0x1a2539(),
    mes["writeUInt16"](_0x90acdb),
    _0xb4d17c(mes));
  if (_0x11b99a != null) _0x11b99a["onResize"]();
}
var _0x9ae92 = 0x1,
  _0x5247ad = 0x2,
  _0x26948b = 0x3,
  _0x3dd128 = 0x4,
  _0x42f334 = 0x5,
  _0x373d44 = 0x6,
  _0x4124e8 = 0x7;

function _0x311082(_0x116dd3, _0x7bb1b0) {
  switch (_0x116dd3) {
    case _0x9ae92:
      {
        if (_0x11e0bc != _0x7bb1b0) {
          if (_0x4980cd() && _0x37000d) {
            if (_0x7bb1b0) _0x427b4a();
            var _0x52ba47 = new _0x5906b0(0x2);
            _0x52ba47["writeUInt8"](0x15), _0x52ba47["writeUInt8"](_0x7bb1b0 ? 0x1 : 0x0), _0xb4d17c(_0x52ba47);
            if (_0xcc7b80 > 0x0) {
              var _0x52ba47 = new _0x5906b0(0x5);
              _0x52ba47["writeUInt8"](_0x4ea0d1), _0x52ba47["writeUInt32"](_0xcc7b80), _0xb4d17c(_0x52ba47), (_0xcc7b80 = 0x0);
            }
          }
        }
        _0x11e0bc = _0x7bb1b0;
      }
      break;
    case _0x5247ad:
      {
        if (_0x446d69 != _0x7bb1b0) {
          if (_0x4980cd() && _0x37000d) {
            if (_0x7bb1b0) _0x427b4a();
            var _0x52ba47 = new _0x5906b0(0x2);
            _0x52ba47["writeUInt8"](0x14), _0x52ba47["writeUInt8"](_0x7bb1b0 ? 0x1 : 0x0), _0xb4d17c(_0x52ba47);
          }
        }
        _0x446d69 = _0x7bb1b0;
      }
      break;
    case _0x26948b:
      {
        if ((_0x4bfbd4 || _0x344a8b) && _0x37000d) {
          var _0x52ba47 = new _0x5906b0(0x1);
          _0x52ba47["writeUInt8"](0x1a), _0xb4d17c(_0x52ba47);
        }
      }
      break;
    case _0x3dd128:
      {
        if ((_0x4bfbd4 || _0x344a8b) && _0x37000d) {
          var _0x52ba47 = new _0x5906b0(0x1);
          _0x52ba47["writeUInt8"](0x1b), _0xb4d17c(_0x52ba47);
        }
      }
      break;
    case _0x42f334:
      {
        if (_0x37000d) {
          var _0x52ba47 = new _0x5906b0(0x2);
          _0x52ba47["writeUInt8"](0x1c), _0x52ba47["writeUInt8"](_0x7bb1b0 ? 0x1 : 0x0), _0xb4d17c(_0x52ba47);
        }
      }
      break;
    case _0x373d44:
      {
        if (_0x37000d && _0x344a8b) {
          var _0x52ba47 = new _0x5906b0(0x2);
          _0x52ba47["writeUInt8"](0x1e), _0x52ba47["writeUInt8"](_0x7bb1b0 ? 0x1 : 0x0), _0xb4d17c(_0x52ba47);
        }
      }
      break;
    case _0x4124e8:
      {
        if (_0x37000d && _0x344a8b) {
          var _0x52ba47 = new _0x5906b0(0x2);
          _0x52ba47["writeUInt8"](0x1d), _0x52ba47["writeUInt8"](_0x7bb1b0 ? 0x1 : 0x0), _0xb4d17c(_0x52ba47);
        }
      }
      break;
  }
}

function _0x11c537() {
  if (!_0x3dfeef && _0x37000d) {
    if (document["activeElement"] && document["activeElement"] != _0x2553b6)
      _0x2553b6 && (console["log"]("canvas is focused now!"), _0x2553b6["focus"]());
    else {
    }
  }
}
(_0x2553b6["onblur"] = function (_0x4ba1e4) {
  _0x552785(_0x4ba1e4);
}),
  (window["onfocus"] = function (_0x38d4cd) {
    _0x16a7d5(_0x38d4cd);
  });

function _0x552785(_0x34994b) {
  if (_0x446d69 || _0x11e0bc) return;
  _0x311082(_0x9ae92, ![]), _0x311082(_0x5247ad, ![]);
}

function _0x16a7d5(_0xbaee34) {
  _0x5c1561();
}
document["oncontextmenu"] = document["body"]["oncontextmenu"] = function () {
  return !_0x37000d;
};

function _0x262363() {
  var _0x5ace57 = _0x645c5 / 0x2,
    _0x33eac0 = _0x24f0be / 0x2;
  (_0x2aeecf = (_0x1d981d - (_0x5ace57 - _0x36a239 * _0x39fa27)) / _0x39fa27),
    (_0x108b44 = (_0x571bbe - (_0x33eac0 - _0x80b3e7 * _0x39fa27)) / _0x39fa27);
}

function _0x3f0f14(_0x212ab3) {
  return _0x212ab3 * _0x39fa27 + (_0x645c5 / 0x2 - _0x36a239 * _0x39fa27);
}

function _0x203691(_0x26d247) {
  return _0x26d247 * _0x39fa27 + (_0x24f0be / 0x2 - _0x80b3e7 * _0x39fa27);
}

function _0x5977e0(_0x3892bd) {
  return (_0x3892bd - (_0x645c5 / 0x2 - _0x36a239 * _0x39fa27)) / _0x39fa27;
}

function _0x2ca990(_0x2a4c05) {
  return (_0x2a4c05 - (_0x24f0be / 0x2 - _0x80b3e7 * _0x39fa27)) / _0x39fa27;
}

function _0x427b4a() {
  if (_0x465019) {
    var _0x37ea53 = _0x2fa637[_0x204989];
    if (_0x37ea53) (_0x2aeecf = _0x37ea53["x"]), (_0x108b44 = _0x37ea53["y"] + 0x2);
    else return;
  }
  if (_0x4980cd() && (_0x37000d || _0x5093c3)) {
    if (Math["abs"](_0x22623c - _0x2aeecf) > 0.1 || Math["abs"](_0x3b288a - _0x108b44) > 0.1) {
      (_0x22623c = _0x2aeecf),
        (_0x3b288a = _0x108b44),
        (mes = new _0x5906b0(_0x1cabf8 + 0x2)),
        mes["writeUInt8"](0x5),
        mes["writeInt16"](_0x2aeecf),
        mes["writeInt16"](_0x108b44);
      if (_0x205853) console["log"]("::: iandev ::: sent dev testing mouse coords");
      _0xb4d17c(mes);
    }
  }
}
setInterval(_0x427b4a, 0xa), setInterval(_0x48c679, 0x1388);

function _0x2976ad() {
  _0x5b53ed(),
    (_0x3ddcad = 0x0),
    (_0x2fa637 = {}),
    (_0x434d04 = []),
    (_0xcc7181 = []),
    (_0x37aa31 = 0x19),
    (_0x2039ba = _0xe15c61 = 0x0),
    _0x32e8cf(_0x2039ba),
    (curBarPerc_n = _0x3cb43c = 0x64),
    (_0x30dfdc = _0x4a8c1b = _0x4a6934 = 0x0),
    _0x49bdb6(_0x4a6934),
    (_0x1878d2 = null),
    (_0x32740c = ![]),
    (_0x3c381c = null),
    (_0x222332 = ""),
    _0x268f5a(),
    (_0x226297 = ![]),
    (_0xaf959c = 0x0),
    (_0x5dd63b = []),
    (_0x5d84a7 = ![]),
    (_0x34f2a8 = []),
    (_0x16d19f = 0x0),
    (_0x458eea = 0x0),
    (isInfected = _0x34fedb = ![]),
    (_0x25b741 = 0x0),
    (_0x4ec648 = ![]),
    (_0x3e7d8d = 0x0),
    (_0x2f04e7 = []),
    (_0x40e4b5 = null),
    (_0x27809f = ![]),
    (_0x3c0693 = 0x0),
    (_0x10874d = 0x0),
    (_0x344a8b = ![]),
    (_0x5093c3 = ![]),
    (_0x3149bb = null),
    $bus["emit"]($bus["EVENTS"]["RESET_GAME"]);
}
$bus["on"]($bus["EVENTS"]["UI_UPDATED_PLAYERNAME"], (_0x1351f4) => {
  if (typeof _0x2ace4f !== "undefined") {
    _0x2ace4f = _0x1351f4;
    if (window["localStorage"])
      try {
        window["localStorage"]["setItem"]("nick", _0x1351f4);
      } catch (_0x29630e) {}
  }
}),
  (window["onload"] = function () {
    _0x5b53ed();
    if (window["localStorage"]) {
      var _0x167cbc = window["localStorage"]["getItem"]("nick");
      _0x167cbc &&
        (typeof _0x2ace4f !== "undefined" && (_0x2ace4f = _0x167cbc),
        $bus["emit"]($bus["EVENTS"]["CLIENT_UPDATED_PLAYERNAME"], {
          name: _0x167cbc,
          focusInput: !_0x5d2635,
          setInputRangeToEnd: !![],
        }));
    }
  });
if (_0x2553b6["addEventListener"]) _0x2553b6["addEventListener"]("mousewheel", _0x493c8f), _0x2553b6["addEventListener"]("DOMMouseScroll", _0x493c8f);
else _0x2553b6["attachEvent"]("onmousewheel", _0x493c8f);
var _0x13e6e4 = 0x0,
  _0x4020bb = 0x1;

function _0x493c8f(_0x3a5cf6) {
  var _0x3a5cf6 = window["event"] || _0x3a5cf6,
    _0x5b56be = Math["max"](-0x1, Math["min"](0x1, _0x3a5cf6["wheelDelta"] || -_0x3a5cf6["detail"]));
  if (_0x5b56be == 0x1) _0x13e6e4 += 0x1;
  else _0x13e6e4 -= 0.1;
  (_0x13e6e4 = Math["max"](0x0, _0x13e6e4)), (_0x13e6e4 = Math["min"](0xa, _0x13e6e4));
  if (_0x4dfc73) {
    var _0x444332 = Math["abs"](_0x13e6e4) * 0x64,
      _0x5a81eb = new _0x5906b0(0x4);
    _0x5a81eb["writeUInt8"](_0x290603),
      _0x5a81eb["writeUInt8"](_0x5b56be == -0x1 ? 0x0 : 0x1),
      _0x5a81eb["writeInt16"](_0x444332),
      _0xb4d17c(_0x5a81eb);
  }
}
var _0x11b99a = null;

function _0xe5f251() {
  _0x1219d7();
  if (_0x11b99a != null) _0x11b99a["interfaceReset"]();
  (_0x11b99a = null), console["log"]("setting game mode interface:" + _0x3a1189);
  if (_0x3a1189 == _0x35a76d) (_0x11b99a = new _0x2d38ce(_0x3a1189)), (_0x11b99a["state"] = _0x4e591f);
  else {
    if (_0x3a1189 == _0x4406b7) (_0x11b99a = new _0x20bd24(_0x3a1189)), (_0x11b99a["state"] = _0x4e591f);
    else {
      if (_0x3a1189 == _0x442f2f) (_0x11b99a = new _0x230eed(_0x3a1189)), (_0x11b99a["state"] = _0x4e591f);
      else {
        if (_0x3a1189 == _0xc95c89) (_0x11b99a = new _0x588d05()), (_0x11b99a["state"] = _0x4e591f);
        else _0x3a1189 == _0x225fdb && ((_0x11b99a = new _0x2a684b(_0x3a1189)), (_0x11b99a["state"] = _0x4e591f));
      }
    }
  }
  console["log"](_0x11b99a);
}

function _0x57e66f(_0x1967ea, _0x349f07, _0x35d3ec) {
  var _0x691764 = _0x1967ea["x"] + _0x349f07 * Math["cos"](_0x35d3ec),
    _0x57d12f = _0x1967ea["y"] + _0x349f07 * Math["sin"](_0x35d3ec);
  return {
    x: _0x691764,
    y: _0x57d12f,
  };
}

function _0x4b46a6(_0x57dce6, _0xddc793, _0x464c9c, _0xde410e, _0x41a61c) {
  _0x587de3["save"](),
    (_0x587de3["globalAlpha"] = _0x41a61c),
    _0x587de3["beginPath"](),
    _0x587de3["translate"](_0x57dce6, _0xddc793),
    _0x587de3["rotate"](_0x464c9c),
    _0x587de3["moveTo"](-0x5, -0x5),
    _0x587de3["lineTo"](-0x5, 0x5),
    _0x587de3["lineTo"](0x5, 0x5),
    (_0x587de3["lineWidth"] = 1.5),
    (_0x587de3["strokeStyle"] = _0xde410e),
    (_0x587de3["fillStyle"] = _0xde410e),
    _0x587de3["stroke"](),
    _0x587de3["restore"]();
}

function _0x357b81() {
  var _0x33fffd = _0x2fa637[_0x204989];
  if (_0x33fffd)
    for (d = 0x0; d < _0x434d04["length"]; d++) {
      var _0x49951c = _0x434d04[d];
      if (_0x33fffd["id"] != _0x49951c["id"]) {
        if (_0x49951c["oType"] === _0x3fb3b2) {
          var _0x39368d = _0x49951c["getOutlineColor"](),
            _0x21115f = ![];
          if (_0x39368d == _0x1fdd8a || _0x39368d == _0xab8999) _0x21115f = !![];
          if (_0x21115f) _0x2d306b(_0x33fffd, _0x49951c, _0x39368d);
        }
      }
    }
}

function _0x48d561(_0xfaf7d1, _0xd101d1) {
  var _0x1a90c8 = _0xfaf7d1["x"] - _0xd101d1["x"],
    _0x3405ab = _0xfaf7d1["y"] - _0xd101d1["y"],
    _0x52a86b = Math["sqrt"](_0x1a90c8 * _0x1a90c8 + _0x3405ab * _0x3405ab);
  return _0x52a86b;
}

function _0x2d306b(_0x32dfb2, _0x467ada, _0x15201a) {
  var _0x371249 = _0x645c5 / 0x2,
    _0x52c92d = _0x24f0be / 0x2,
    _0x2694d4 = _0x36f5d4(_0x467ada["x"], _0x467ada["y"], _0x32dfb2["x"], _0x32dfb2["y"]),
    _0x52ae9e = _0x3f0f14(_0x467ada["x"]),
    _0x247f88 = _0x203691(_0x467ada["y"]),
    _0x405f6b = _0x467ada["rad"] * _0x39fa27,
    _0x32f2cb = Math["min"](Math["abs"](_0x52ae9e - _0x405f6b - 0x0), Math["abs"](_0x52ae9e + _0x405f6b - _0x645c5)),
    _0x480505 = Math["min"](Math["abs"](_0x247f88 - _0x405f6b - 0x0), Math["abs"](_0x247f88 + _0x405f6b - _0x24f0be)),
    _0x2a3da1 = -0x32 - _0x32dfb2["rad"],
    _0x2c5f90 = _0x57e66f(
      {
        x: _0x32dfb2["x"],
        y: _0x32dfb2["y"],
      },
      _0x2a3da1,
      _0x2694d4
    ),
    _0x362e80 = _0x48d561(
      {
        x: _0x2c5f90["x"],
        y: _0x2c5f90["y"],
      },
      {
        x: _0x467ada["x"],
        y: _0x467ada["y"],
      }
    );
  if ((_0x467ada["rad"] < 0x64 && _0x362e80 < _0x467ada["rad"] * 0.5) || _0x362e80 < 0xc8) return;
  _0x2694d4 += _0x3d960f(0x2d);
  var _0x3774af = 0x1,
    _0x3dad11 = 0x14;
  _0x4b46a6(_0x2c5f90["x"], _0x2c5f90["y"], _0x2694d4, _0x15201a, _0x3774af);
}

function _0x1219d7() {
  _0x98c3df(!![]);
}

function _0x4e1bea() {
  if (_0x4c4138 == _0x322b1f) {
    if (_0x188601 == null) {
      var _0x12dd2c = new _0x5906b0(0x2);
      _0x12dd2c["writeUInt8"](_0x3a611e), _0xb4d17c(_0x12dd2c);
    } else {
      var _0x12dd2c = new _0x5906b0(0x2);
      _0x12dd2c["writeUInt8"](_0x3a611e), _0xb4d17c(_0x12dd2c), _0x188601["updateExpiry"]();
    }
  }
}
var _0x22c96e = 0x5,
  _0x31511a = 0x5,
  _0x201701 = 0xa,
  _0x5855c3 = 0x0,
  _0x6a496a = 0x0,
  _0x514fae = null,
  _0x5a8988 = 0x0,
  _0x28b8d2 = null,
  _0x2db974 = 0x0,
  _0x3861fa = 0xf,
  _0x27fc99 = 0x0,
  _0x188601 = null;

function _0x1de80b() {
  _0x188601 != null && _0x188601["display"]();
}

function _0xbee78d() {
  if (_0x28b8d2 == null) {
    (_0x27fc99 = 0x0), (_0x514fae = null);
    return;
  }
  if (_0x514fae == null) _0x514fae = document["createElement"]("canvas");
  if (_0x514fae == null) return;
  if (_0x27fc99 == 0x0) _0x27fc99 = _0x168a54;
  var _0x2ce086 = _0x514fae["getContext"]("2d"),
    _0x1e541b = 0x37,
    _0x2acb01 = 0x5,
    _0xab3bef = 0x0,
    _0x12d9e1 = 0x50 * _0x385a2a,
    _0x52dc8d = 0x82 + 0x5 * (_0x12d9e1 + 0xa),
    _0x52dc8d = 0x2bc * _0x385a2a,
    _0xa30197 = 0x2bc * _0x385a2a;
  console["log"]("inferface scale " + _0x385a2a + " borad_height " + _0x52dc8d),
    (_0x1e541b = _0x52dc8d + _0x2acb01 * 0x2),
    (_0x514fae["width"] = _0xa30197 + _0x2acb01 * 0x2),
    (_0x514fae["height"] = _0x1e541b);
  var _0x529145 = 0xc8;
  (_0x5a8988 = _0x529145), (_0x2ce086["globalAlpha"] = 0.1);
  var _0xee1cf3 = _0x2acb01;
  (_0x2ce086["globalAlpha"] = 0x1), (_0x2ce086["fillStyle"] = "#FFFFFF"), (_0x2ce086["font"] = "30px Arial"), (_0xee1cf3 += 0x2d);
  var _0x240199 = "APEX KILLS";
  (_0x2ce086["font"] = "30px Arial"),
    _0x2ce086["fillText"](_0x240199, _0x514fae["width"] / 0x2 - _0x2ce086["measureText"](_0x240199)["width"] / 0x2, _0xee1cf3),
    (_0x529145 = 0x64),
    (_0xee1cf3 += _0x12d9e1);
  var _0x37c578 = 0x168 / _0x28b8d2["anis"]["length"],
    _0x39497b = 0xfa * _0x385a2a,
    _0x152e48 = _0x514fae["width"] / 0x2,
    _0x491fca = _0x514fae["height"] / 0x2;
  (_0x2ce086["fillStyle"] = "black"),
    (_0x2ce086["globalAlpha"] = 0.1),
    _0x2ce086["beginPath"](),
    _0x2ce086["arc"](_0x152e48, _0x152e48, _0x39497b - _0x12d9e1 / 0x2, 0x0, Math["PI"] * 0x2, ![]),
    _0x2ce086["arc"](_0x152e48, _0x152e48, _0x39497b + _0x12d9e1 / 0x2, Math["PI"] * 0x2, 0x0, !![]),
    _0x2ce086["fill"](),
    (_0x2ce086["globalAlpha"] = 0.5),
    _0x2ce086["beginPath"](),
    _0x2ce086["arc"](_0x152e48, _0x152e48, _0x39497b + _0x12d9e1 / 0x2, Math["PI"] * 0x2, 0x0),
    _0x2ce086["stroke"]();
  var _0x215ac1 = (Math["PI"] * 0x2) / _0x28b8d2["anis"]["length"],
    _0x49cbee = 0x0,
    _0x5248fa = (_0x168a54 - _0x27fc99) / 0x3e8,
    _0x597256 = 0x2,
    _0x1cbffb = 0x8;
  _0x49cbee = _0x1cbffb * Math["sin"](((0x2 * Math["PI"]) / _0x597256) * _0x5248fa);
  for (r = 0x0; r < _0x28b8d2["anis"]["length"]; r++) {
    var _0x35c9c0 = _0x491fca + Math["sin"](_0x37c578 * r * (Math["PI"] / 0xb4) - _0x3d960f(0x5a)) * _0x39497b,
      _0x2069b3 = _0x152e48 + Math["cos"](_0x37c578 * r * (Math["PI"] / 0xb4) - _0x3d960f(0x5a)) * _0x39497b,
      _0x33603b = r * _0x215ac1 - _0x3d960f(0x5a) - _0x215ac1 / 0x2,
      _0x2f2d50 = _0x33603b + _0x215ac1;
    ani = _0x28b8d2["anis"][r];
    var _0x132d95 = _0x53df91(ani),
      _0x35ccdc = _0x2d8f34(_0x132d95);
    if (_0x35ccdc) {
      var _0x5f30ec = _0x28b8d2[ani] > 0x0;
      _0x2ce086["save"](), (_0x2ce086["globalAlpha"] = _0x5f30ec ? 0x1 : 0.3);
      var _0x40db03 = _0x12d9e1;
      _0x5f30ec &&
        ((_0x2ce086["shadowOffsetX"] = 0x0),
        (_0x2ce086["shadowOffsetY"] = 0x0),
        (_0x2ce086["shadowColor"] = "black"),
        (_0x2ce086["shadowBlur"] = 0x8),
        (_0x40db03 -= _0x49cbee));
      _0x2ce086["drawImage"](_0x35ccdc, _0x2069b3 - _0x40db03 / 0x2, _0x35c9c0 - _0x40db03 / 0x2, _0x40db03, _0x40db03),
        _0x2ce086["restore"](),
        _0x2ce086["save"]();
      _0x5f30ec &&
        ((_0x2ce086["shadowOffsetX"] = 0x0),
        (_0x2ce086["shadowOffsetY"] = 0x0),
        (_0x2ce086["shadowColor"] = "black"),
        (_0x2ce086["shadowBlur"] = 0x8));
      _0x2ce086["strokeStyle"] = _0x5f30ec ? "#ff6e00" : "black";
      var _0xcea8fe = _0x5f30ec ? 0x5 : 0x1;
      (_0x2ce086["lineWidth"] = _0xcea8fe),
        (_0x2ce086["globalAlpha"] = _0x5f30ec ? 0x1 : 0.5),
        _0x2ce086["beginPath"](),
        _0x2ce086["arc"](_0x152e48, _0x152e48, _0x39497b - (_0xcea8fe - 0x2) - _0x12d9e1 / 0x2, _0x33603b, _0x2f2d50),
        _0x2ce086["stroke"]();
    }
  }
  if (_0x514fae != null) {
    if (_0x514fae["width"]) {
      var _0x528b94 = (_0x168a54 - _0x27fc99) / 0x258,
        _0x5daaf2 = (_0x2db974 - _0x168a54) / 0x258;
      if (_0x5daaf2 < 0x1) _0x528b94 = Math["max"](0x0, _0x5daaf2);
      var _0x4a40bd = Math["min"](0x1, _0x528b94),
        _0x5def82 = _0x514fae["width"] * _0x4a40bd,
        _0x30ecbe = _0x514fae["height"] * _0x4a40bd;
      _0x587de3["save"](),
        (_0x587de3["globalAlpha"] = _0x4a40bd),
        _0x587de3["drawImage"](_0x514fae, _0x645c5 / 0x2 - _0x5def82 / 0x2, _0x24f0be / 0x2 - _0x30ecbe / 0x2, _0x5def82, _0x30ecbe),
        _0x587de3["restore"](),
        (_0x168a54 > _0x2db974 || !_0x37000d) && ((_0x28b8d2 = null), (_0x27fc99 = 0x0));
    }
  }
}

function _0x53df91(_0x432f50) {
  switch (_0x432f50) {
    case _0x322b1f:
      return "./skins/volcano/blackdragon/0/blackdragon.png";
    case _0x28027c:
      return "./skins/land/dinomonster/0/dinomonster.png";
    case _0x448b86:
      return "./skins/arctic/icemonster/0/icemonster.png";
    case _0x5b1639:
      return "./skins/volcano/landmonster/0/landmonster.png";
    case _0x250a37:
      return "./skins/ocean/seamonster/0/seamonster.png";
    case _0x321383:
      return "./skins/desert/scorpion/0/giantscorpion.png";
    case _0x58f094:
      return "./skins/arctic/yeti/0/wolf.png";
    case _0x1ae9e8:
      return "./skins/land/dragon/0/dragon.png";
    case _0x11d87b:
      return "./skins/land/trex/0/trex.png";
    case _0x4f1c79:
      return "./skins/ocean/kraken/0/kraken.png";
    case _0x4d5dff:
      return "./skins/ocean/kingcrab/0/kingcrab.png";
    case _0x3a0961:
      return "./skins/phoenix/phoenix.png";
    case _0x510716:
      return "./skins/desert/pterodactyl/0/pterodactyl_ability.png";
  }
}
document["addEventListener"](
  "keydown",
  function (_0x3656c3) {
    if (
      _0x3656c3["ctrlKey"] == !![] &&
      (_0x3656c3["code"] == "Minus" || _0x3656c3["key"] == "Equal" || _0x3656c3["code"] == "NumpadSubtract" || _0x3656c3["key"] == "NumpadAdd")
    )
      _0x3656c3["preventDefault"]();
  },
  {
    passive: ![],
  }
),
  document["addEventListener"](
    "wheel",
    function (_0x2c492a) {
      const _0x1ee3ff = document["getElementById"]("updates_v2");
      !_0x1fbe4e && (!_0x1ee3ff || (_0x1ee3ff["style"] && _0x1ee3ff["style"]["display"] === "none")) && _0x2c492a["preventDefault"]();
    },
    {
      passive: ![],
    }
  );
`
let rgx = new RegExp(/= 0x0,[\n\s]+\w+ = !\[\].\n  \w+ = !\[\].[\s\S\n]*?gCanvas/g)
let devModeEtc = string.match(rgx)[0];
let variables = devModeEtc.match(/_\w+/g);
let finalString = '';

finalString += variables[1] + " //isSuperDev\n";
finalString += variables[2] + " //devMode_num\n"
finalString += variables[3] + " //devMode_zoomEnabled\n"

console.log(finalString)
