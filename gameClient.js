module.exports =
    `var _0x48b14d = (function () {
    var _0x4354fc = !![];
    return function (_0x3036f7, _0x5976b5) {
        var _0x320011 = _0x4354fc ? function () {
            if (_0x5976b5) {
                var _0x43c981 = _0x5976b5['apply'](_0x3036f7, arguments);
                return _0x5976b5 = null, _0x43c981;
            }
        } : function () {};
        return _0x4354fc = ![], _0x320011;
    };
}()),
_0x2b6af3 = _0x48b14d(this, function () {
    var _0x28ebc8;
    try {
        var _0x259e28 = Function('return (function() ' + '{}.constructor(\"return this\")( )' + ');');
        _0x28ebc8 = _0x259e28();
    } catch (_0x1c6cbd) {
        _0x28ebc8 = window;
    }
    var _0x2527dc = new RegExp('[SPAySNjjAPwxSPPFHMvTyMLEjTjCvkLUDqVSRQEVyxGHINTRvQJjQEFTKFDWBxWBEVARBkXExULyMhNOwvxvIByGhQBkLhOGwLNQOQZBOQjjLvVwCXXySYxFxhRTyWZRkGTkTLQUCNRSHDqTShJWyPDIjIGh]', 'g'),
        _0x24a14b = '.mSPAoySpe.iNjo;j.AmPw0xpeS.io;.lPPFeHarnMvingaTniyMmalsLE.cjlTujCb;.vktailLUbitDqe.meVS;RQ.EaniVymaxlGHINfuTn.cRlvub;QJ.zjooQedEFTKFDWBuxWcaBtEioVARBknX.EsxpaceULyMhNOwvxvIByGhQBkLhOGwLNQOQZBOQjjLvVwCXXySYxFxhRTyWZRkGTkTLQUCNRSHDqTShJWyPDIjIGh' ['replace'](_0x2527dc, '')['split'](';'),
        _0x160b5e, _0x3f93d1, _0xa23d24, _0x14c332, _0x86127c = function (_0x2d4835, _0x1c52fc, _0x4d169b) {
            if (_0x2d4835['length'] != _0x1c52fc) return ![];
            for (var _0x428445 = 0x0; _0x428445 < _0x1c52fc; _0x428445++) {
                for (var _0x4de85f = 0x0; _0x4de85f < _0x4d169b['length']; _0x4de85f += 0x2) {
                    if (_0x428445 == _0x4d169b[_0x4de85f] && _0x2d4835['charCodeAt'](_0x428445) != _0x4d169b[_0x4de85f + 0x1]) return ![];
                }
            }
            return !![];
        },
        _0x4f47fa = function (_0x58b668, _0x2d7dc0, _0x3381d5) {
            return _0x86127c(_0x2d7dc0, _0x3381d5, _0x58b668);
        },
        _0xb1a082 = function (_0x48ebb1, _0x134aa8, _0x40c515) {
            return _0x4f47fa(_0x134aa8, _0x48ebb1, _0x40c515);
        },
        _0x8f4693 = function (_0x80fecf, _0x6310f5, _0x68a498) {
            return _0xb1a082(_0x6310f5, _0x68a498, _0x80fecf);
        };
    for (var _0x55e209 in _0x28ebc8) {
        if (_0x86127c(_0x55e209, 0x8, [0x7, 0x74, 0x5, 0x65, 0x3, 0x75, 0x0, 0x64])) {
            _0x160b5e = _0x55e209;
            break;
        }
    }
    for (var _0x47572f in _0x28ebc8[_0x160b5e]) {
        if (_0x8f4693(0x6, _0x47572f, [0x5, 0x6e, 0x0, 0x64])) {
            _0x3f93d1 = _0x47572f;
            break;
        }
    }
    for (var _0x4729a6 in _0x28ebc8[_0x160b5e]) {
        if (_0xb1a082(_0x4729a6, [0x7, 0x6e, 0x0, 0x6c], 0x8)) {
            _0xa23d24 = _0x4729a6;
            break;
        }
    }
    if (!('~' > _0x3f93d1))
        for (var _0x57e7f6 in _0x28ebc8[_0x160b5e][_0xa23d24]) {
            if (_0x4f47fa([0x7, 0x65, 0x0, 0x68], _0x57e7f6, 0x8)) {
                _0x14c332 = _0x57e7f6;
                break;
            }
        }
    if (!_0x160b5e || !_0x28ebc8[_0x160b5e]) return;
    var _0x43135a = _0x28ebc8[_0x160b5e][_0x3f93d1],
        _0x15bd06 = !!_0x28ebc8[_0x160b5e][_0xa23d24] && _0x28ebc8[_0x160b5e][_0xa23d24][_0x14c332],
        _0xec3139 = _0x43135a || _0x15bd06;
    if (!_0xec3139) return;
    var _0x937485 = ![];
    for (var _0x39a5fa = 0x0; _0x39a5fa < _0x24a14b['length']; _0x39a5fa++) {
        var _0x3f93d1 = _0x24a14b[_0x39a5fa],
            _0x2f8665 = _0x3f93d1[0x0] === String['fromCharCode'](0x2e) ? _0x3f93d1['slice'](0x1) : _0x3f93d1,
            _0x5ad331 = _0xec3139['length'] - _0x2f8665['length'],
            _0x15a06a = _0xec3139['indexOf'](_0x2f8665, _0x5ad331),
            _0x4e2895 = _0x15a06a !== -0x1 && _0x15a06a === _0x5ad331;
        _0x4e2895 && ((_0xec3139['length'] == _0x3f93d1['length'] || _0x3f93d1['indexOf']('.') === 0x0) && (_0x937485 = !![]));
    }
    if (!_0x937485) {
        var _0x4a1b77 = new RegExp('[HzQeMgvszWFqzfICXAOJysDKysVNd]', 'g'),
            _0x36243c = 'abHzQouetM:bgvlsaznWkFqzfICXAOJysDKysVNd' ['replace'](_0x4a1b77, '');
        _0x28ebc8[_0x160b5e][_0xa23d24] = _0x36243c;
    }
});
_0x2b6af3();
var _0x58086f = (function () {
    var _0x2dd864 = !![];
    return function (_0x1738a3, _0x48661f) {
        var _0x37a475 = _0x2dd864 ? function () {
            if (_0x48661f) {
                var _0x4d5eb6 = _0x48661f['apply'](_0x1738a3, arguments);
                return _0x48661f = null, _0x4d5eb6;
            }
        } : function () {};
        return _0x2dd864 = ![], _0x37a475;
    };
}()),
_0x856817 = _0x58086f(this, function () {
    var _0x378d4a = function () {
            var _0x51e84b;
            try {
                _0x51e84b = Function('return (function() ' + '{}.constructor(\"return this\")( )' + ');')();
            } catch (_0x55ea83) {
                _0x51e84b = window;
            }
            return _0x51e84b;
        },
        _0x16fc04 = _0x378d4a(),
        _0x95af4c = _0x16fc04['console'] = _0x16fc04['console'] || {},
        _0x478f51 = ['log', 'warn', 'info', 'error', 'exception', 'table', 'trace'];
    for (var _0x5dce1d = 0x0; _0x5dce1d < _0x478f51['length']; _0x5dce1d++) {
        var _0x3a3548 = _0x58086f['constructor']['prototype']['bind'](_0x58086f),
            _0x14e544 = _0x478f51[_0x5dce1d],
            _0x35a72e = _0x95af4c[_0x14e544] || _0x3a3548;
        _0x3a3548['__proto__'] = _0x58086f['bind'](_0x58086f), _0x3a3548['toString'] = _0x35a72e['toString']['bind'](_0x35a72e), _0x95af4c[_0x14e544] = _0x3a3548;
    }
});
_0x856817(), console['log']('\x0a\x0a\x0a'), console['log']('--------------------------------------------'), console['log'](''), console['log']('#    #  ####  #####  ######     #  ####'), console['log']('##  ## #    # #    # #          # #    #'), console['log']('# ## # #    # #    # #####      # #    #'), console['log']('#    # #    # #####  #      ### # #    #'), console['log']('#    # #    # #      #      ### # #    #'), console['log']('#    #  ####  #      ###### ### #  ####'), console['log']('___ Mope.ioâ„¢ Copyright (2017-present) Mopeio Ltd. ___'), console['log']('--------------------------------------------');
const _0xa67a42 = typeof localStorage !== 'undefined' && !!localStorage,
_0x46b9f4 = $config['isTestingMode'] && _0xb29884;
let _0x3014ed = _0x46b9f4;
if (_0x46b9f4) {
const _0x1538d7 = document['createElement']('div');
_0x1538d7['style']['zIndex'] = '999999999', _0x1538d7['style']['zIndex'] = '999999999', _0x1538d7['style']['left'] = '0px', _0x1538d7['style']['bottom'] = '0px', _0x1538d7['style']['width'] = '100%', _0x1538d7['style']['position'] = 'fixed', _0x1538d7['style']['position'] = 'fixed', _0x1538d7['style']['height'] = '150px', _0x1538d7['style']['maxHeight'] = '150px';
const _0x48c54c = document['createElement']('div'),
    _0x311083 = document['createElement']('div');
_0x1538d7['appendChild'](_0x48c54c), _0x1538d7['appendChild'](_0x311083);
const _0x4cb3a4 = '25px';
_0x48c54c['style']['position'] = 'absolute', _0x48c54c['style']['right'] = '1px', _0x48c54c['style']['backgroundColor'] = 'rgba(255, 255, 255, .9)', _0x48c54c['style']['color'] = 'black', _0x48c54c['style']['top'] = '-' + _0x4cb3a4, _0x48c54c['style']['cursor'] = 'pointer', _0x48c54c['style']['width'] = _0x4cb3a4, _0x48c54c['style']['height'] = _0x4cb3a4, _0x48c54c['style']['minWidth'] = _0x4cb3a4, _0x48c54c['style']['minHeight'] = _0x4cb3a4, _0x48c54c['style']['maxWidth'] = _0x4cb3a4, _0x48c54c['style']['maxHeight'] = _0x4cb3a4, _0x48c54c['style']['display'] = 'flex', _0x48c54c['style']['justifyContent'] = 'center', _0x48c54c['style']['alignItems'] = 'center', _0x48c54c['textContent'] = '-';
const _0x2cfdeb = () => {
    _0x3014ed = !_0x3014ed, _0x3014ed ? (_0x1538d7['style']['bottom'] = '0px', _0x48c54c['textContent'] = '-') : (_0x1538d7['style']['bottom'] = '-150px', _0x48c54c['textContent'] = '+');
};
_0x48c54c['addEventListener']('pointerup', () => {
    _0x2cfdeb();
}), document['body']['appendChild'](_0x1538d7), _0x311083['style']['left'] = '0px', _0x311083['style']['bottom'] = '0px', _0x311083['style']['position'] = 'absolute', _0x311083['style']['width'] = '100%', _0x311083['style']['height'] = '150px', _0x311083['style']['maxHeight'] = '150px', _0x311083['style']['opacity'] = '.6', _0x311083['style']['backgroundColor'] = 'black', _0x311083['style']['color'] = 'white', _0x311083['style']['display'] = 'flex', _0x311083['style']['flexDirection'] = 'column', _0x311083['style']['overflowX'] = 'scroll', _0x311083['style']['pointerEvents'] = 'auto';
const _0x5f36f5 = console['log']['bind'](console),
    _0x54e92e = console['error']['bind'](console),
    _0xbe699a = [],
    _0x5ac90c = _0x2cd157 => {
        if (_0xbe699a['length'] > 0x64) {
            const _0x1d2e1b = _0xbe699a[0x0];
            _0x1d2e1b['remove'](), _0xbe699a['shift']();
        }
        const _0x2d2ccb = document['createElement']('DIV');
        _0x2d2ccb['innerText'] = _0x2cd157['join'](' '), _0x2d2ccb['style']['fontSize'] = '10px', _0x2d2ccb['style']['marginBottom'] = '3px';
        const _0xf419db = _0x311083['scrollHeight'] <= _0x311083['scrollTop'] + _0x311083['getBoundingClientRect']()['height'] || _0x311083['scrollHeight'] == 0x0;
        return _0x311083['appendChild'](_0x2d2ccb), _0xf419db && (_0x311083['scrollTop'] = _0x311083['scrollHeight']), _0xbe699a['push'](_0x2d2ccb), _0x2d2ccb;
    };
console['log'] = function () {
    var _0x51c0a7 = Array['prototype']['slice']['call'](arguments);
    _0x5ac90c(_0x51c0a7), _0x5f36f5['apply'](console, _0x51c0a7);
}, console['error'] = function () {
    var _0x212144 = Array['prototype']['slice']['call'](arguments);
    const _0x2ac1f3 = _0x5ac90c(_0x212144);
    _0x2ac1f3['style']['color'] = 'red', _0x54e92e['apply'](console, _0x212144);
}, _0x2cfdeb();
}
const _0x1f2757 = $config['gameVersion'],
_0x285caa = $config['isTestingMode'];
console['log']('Is Testing mode: ', _0x285caa);
const _0x2cec8e = $config['isBetaMode'];
console['log']('Is beta mode: ', _0x2cec8e);
const _0x4c527f = !![];
console['log']('-----------Game Version ' + _0x1f2757 + (_0x2cec8e ? ' (BETA)' : '') + ' ----------------'), $bus['emit']($bus['EVENTS']['INITIALIZED_MOBILE_FLAGS'], {
'isMobileAppIOS': _0x197353,
'isMobileAppAndroid': _0xde95d8,
'isMobileApp': _0xb29884
});
try {
const _0x38ced0 = document['getElementById']('mope-footer'),
    _0x8e25d1 = document['getElementById']('mope-app-store-btn-apple'),
    _0xd03944 = _0x38ced0 && _0x8e25d1;
if (_0xd03944) {
    if (!_0x197353 && !_0xde95d8) _0x8e25d1['style']['visibility'] = 'visible';
    else {
        _0x8e25d1['remove']();
        const _0x1af390 = document['getElementsByClassName']('Footer__social-media');
        _0x1af390 && _0x1af390[0x0] && (_0x1af390[0x0]['style']['minWidth'] = '524px', _0x1af390[0x0]['style']['width'] = '524px', _0x1af390[0x0]['style']['maxWidth'] = '524px');
    }
}
} catch (_0x52dbb8) {}
$['ajax']({
'url': 'updates.html',
'type': 'GET',
'success': function (_0xca7c42) {
    $bus['emit']($bus['EVENTS']['UPDATES_TEXT'], _0xca7c42);
}
}), window['onerror'] = function (_0x5e011b, _0xf0b1ae, _0x25075b) {
if (_0x285caa) {}
};

function _0x59b5a1() {}
const _0x264a98 = 0x1388,
_0x5424b8 = ![],
_0x12d100 = !![],
_0x4c3c72 = 0x90,
_0x121b31 = 0x3e8 / _0x4c3c72,
_0x3a7179 = document['getElementById']('mope-footer'),
_0x4e9877 = document['getElementById']('mope-footer-update-btn'),
_0x253623 = document['getElementsByClassName']('mope-footer-btn');
Array['from'](_0x253623)['forEach'](_0x2cdc3e => {
_0x2cdc3e['addEventListener']('pointerdown', () => {
    $bus['utils']['emitClicked']();
});
}), _0x4e9877['addEventListener']('pointerup', () => {
$bus['emit']($bus['EVENTS']['SHOW_UPDATES']);
}), $bus['on']($bus['EVENTS']['FOOTER_STATE'], ({
display: _0x5283f6,
hasNewUpdates: _0x3096de
}) => {
let _0x480879 = document['getElementById']('mope-footer-new-updates');
const _0x5cca2a = !_0x480879 && _0x3096de,
    _0x4c1d05 = _0x480879 && !_0x3096de;
if (_0x5cca2a) _0x480879 = document['createElement']('DIV'), _0x480879['setAttribute']('id', 'mope-footer-new-updates'), _0x480879['className'] = 'Footer__new-updates', _0x480879['textContent'] = '!', _0x4e9877['appendChild'](_0x480879);
else _0x4c1d05 && _0x4e9877['removeChild'](_0x480879);
_0x3a7179['style']['display'] = _0x5283f6;
});
var _0x3dc167 = 0x1,
_0x2df65e = 0x2,
_0x5bce27 = 0x3,
_0x2cb180 = 0x4,
_0xa6bbd2 = 0x5,
_0x8e73 = 0x6,
_0x2df08e = 0x7,
_0x36196f = 0x8,
_0x2288c7 = 0x9,
_0x5c1227 = 0xa,
_0x219120 = 0xb,
_0x482d11 = 0xc,
_0x423fd8 = 0xd,
_0x590092 = 0xe,
_0x8fc8bd = 0xf,
_0x54ffc4 = 0x10,
_0x111584 = 0x11,
_0x47fe3b = 0x12;
const _0x28b268 = 0x1,
_0x2e0743 = 0x2,
_0x2eb843 = 0x3,
_0xf66be0 = 0x4,
_0x5c25f9 = 0x5,
_0x423dd4 = 0x6,
_0x423b56 = 0x7,
_0xdea6c3 = 0x8,
_0x55b678 = 0x9,
_0x22fe89 = 0xa,
_0x14cad1 = 0xb,
_0x5aab2c = 0xc,
_0x1fa617 = 0xd,
_0x2b741e = 0xe,
_0x28edb2 = 0xf,
_0x554256 = 0x10,
_0x458b93 = 0x11,
_0x189dbf = 0x12,
_0x27a574 = 0x13,
_0x2a5e6c = 0x14,
_0x1a2878 = 0x15,
_0x5ab7b5 = 0x16,
_0x166d42 = 0x17,
_0x4142e3 = 0x18,
_0x318c5d = 0x19,
_0x464db4 = 0x1a,
_0xd32f2d = 0x1b,
_0x55eeb9 = 0x1c,
_0x1142ca = 0x1d,
_0x2f816b = 0x1e,
_0x1e8bc3 = 0x1f,
_0x571db5 = 0x20,
_0x28218f = 0x21,
_0x39e92f = 0x22,
_0x4d6542 = 0x23,
_0x22f887 = 0x24,
_0x5ef926 = 0x25,
_0x225f9d = 0x26,
_0x48610c = 0x27,
_0x14c825 = 0x28,
_0x5389ea = 0x29,
_0x141e49 = 0x2a,
_0x1c5fdc = 0x2b,
_0x135b8f = 0x2c,
_0x4b18d2 = 0x2d,
_0x3f5b98 = 0x2e,
_0x24455c = 0x2f,
_0x416a3c = 0x30,
_0x54a932 = 0x31,
_0x14580b = 0x32,
_0x4c938c = 0x33,
_0x254826 = 0x34,
_0x3722b4 = 0x35,
_0x43e34b = 0x36,
_0x2b1d67 = 0x37,
_0x3ff99e = 0x38,
_0x69729d = 0x39,
_0x11782c = 0x3a,
_0x3b0632 = 0x3b,
_0x33ad43 = 0x3c,
_0xcd7fc6 = 0x3d,
_0x576026 = 0x3e,
_0x3f4a46 = 0x3f,
_0x4f7108 = 0x40,
_0x36edf0 = 0x41,
_0x16866a = 0x42,
_0x532b49 = 0x43,
_0xd0ba03 = 0x44,
_0x104dd6 = 0x45,
_0x4c642f = 0x46,
_0x30beb4 = 0x47,
_0x5b045f = 0x48,
_0x3ddb68 = 0x49,
_0x126898 = 0x4a,
_0x42e9eb = 0x4b,
_0x466b39 = 0x4c,
_0x4f1625 = 0x4d,
_0x5dadfd = 0x4e,
_0x40da42 = 0x4f,
_0x35d028 = 0x50,
_0x53a592 = 0x51,
_0x1cc405 = 0x52,
_0x2980b1 = 0x53,
_0x4508ba = 0x54,
_0x41314c = 0x55,
_0x47b3b4 = 0x56,
_0x2ebece = 0x57,
_0x439fcd = 0x58,
_0x1d8e34 = 0x59,
_0x1c7a29 = 0x5a,
_0x4a3129 = 0x5b,
_0xd9d924 = 0x5c,
_0xe02608 = 0x5d,
_0x4df3a0 = 0x5e,
_0x2afb98 = 0x5f,
_0x168471 = 0x60,
_0x744ce0 = 0x61,
_0x40b7e9 = 0x62,
_0x50e577 = 0x63,
_0x2b5a90 = 0x64,
_0x462f3a = 0x65,
_0x343d5d = 0x66,
_0x53fd4a = 0x67,
_0x95f41d = 0x68,
_0x2a2815 = 0x69,
_0x5e3f83 = 0x6a,
_0x4f9d09 = 0x6b,
_0x4d5675 = 0x6c,
_0x1d931c = 0x6d,
_0xb1a30a = 0x6e,
_0x4fc027 = 0x6f,
_0x336a26 = 0x70,
_0x543863 = 0x71,
_0x103070 = 0x72,
_0x5cdfbf = 0x73,
_0x424c8d = 0x74,
_0x563d4a = 0x75,
_0xf89e0c = 0x76,
_0x3083d3 = 0x77,
_0x56cb4c = 0x78;
var _0x20c42c = 0x1,
_0x4ad968 = 0x2,
_0x3ab87a = 0x3,
_0x13556a = 0x4,
_0x46fb5b = 0x5,
_0x3c46aa = 0x6,
_0x211e4a = 0x7,
_0x2bcc5d = 0x8,
_0x40ef1a = 0x9,
_0x5ddad8 = 0xa,
_0x3fcd3a = 0xb,
_0x27ed64 = 0xc,
_0x51b980 = 0xd,
_0x2c5edd = 0xe,
_0x3ec985 = 0xf,
_0x3b46a2 = 0x10,
_0x169801 = 0x11,
_0x13c2ff = 0x12,
_0x442835 = 0x13,
_0xdf1a02 = 0x14,
_0x560b30 = 0x15,
_0x3fc0f0 = 0x16,
_0x1b2158 = 0x17,
_0x16becf = 0x18,
_0x880a3e = 0x19,
_0x34725d = 0x1a,
_0x5e7af4 = 0x1b,
_0x141d37 = 0x1c,
_0x9c93d1 = 0x1d,
_0x34cf69 = 0x1e,
_0x1a6094 = 0x1f,
_0x1f8f67 = 0x20,
_0x126580 = 0x21,
_0x54e254 = 0x22,
_0x3f617d = 0x23,
_0x5a308b = 0x24,
_0x387234 = 0x25,
_0x24d775 = 0x26,
_0x37bcb6 = 0x27,
_0x141bf4 = 0x28,
_0xbfd919 = 0x2a,
_0x3a7e84 = 0x2b,
_0x3e8ed9 = 0x2c,
_0x3bc4a1 = 0x2e,
_0x2ae105 = 0x2f,
_0x5aa030 = 0x30,
_0xc430c5 = 0x31,
_0x3f347c = 0x32,
_0x31ad70 = 0x33,
_0x41ca4e = 0x34,
_0x16cf92 = 0x35,
_0x519ec6 = 0x36,
_0x2d32ab = 0x37,
_0xbac7db = 0x38,
_0x2f5713 = 0x39,
_0x155290 = 0x3a,
_0x3590f9 = 0x3b,
_0x1ff443 = 0x3c,
_0x492660 = 0x3d,
_0x30a603 = 0x3e,
_0x22f850 = 0x3f,
_0x53caef = 0x40,
_0x26cd2c = 0x41,
_0x135bec = 0x42,
_0x34db56 = 0x43,
_0x603ace = 0x44,
_0x313fbe = 0x45,
_0x971df8 = 0x46,
_0x4c771c = 0x47,
_0x2e7652 = 0x48,
_0x3c12a8 = 0x49,
_0x5f2239 = 0x4a,
_0x1b43b1 = 0x4b,
_0x571392 = 0x4c,
_0x510569 = 0x4d,
_0x2eb6c6 = 0x4e,
_0x17c220 = 0x4f,
_0x3c62e2 = 0x50,
_0x28d365 = 0x51,
_0x3860eb = 0x52,
_0x19053a = 0x53,
_0x1ed2ef = 0x54,
_0x29e44b = 0x55,
_0x41a642 = 0x56,
_0x47d527 = 0x57,
_0x1ba13c = 0x58,
_0x260ddc = 0x59,
_0x4e9094 = 0x5a,
_0x4793dd = 0x5b,
_0x583a83 = 0x5c,
_0x2035ae = 0x5d,
_0xe71228 = 0x5e,
_0x9f73bc = 0x5f,
_0x3ace79 = 0x60,
_0x15de97 = 0x61,
_0x3e1f7a = 0x62,
_0x570684 = 0x63,
_0x59d668 = 0x64,
_0x3319d3 = 0x65,
_0xe86ac3 = 0x66,
_0x22ccdc = 0x67,
_0x57146c = 0x68,
_0x5b3c07 = 0x69,
_0x265e5d = 0x6a,
_0x25f6c6 = 0x6b,
_0x1e8d3a = 0x6c,
_0x2310aa = 0x6d,
_0x8fac97 = 0x6e,
_0x5d8238 = 0x6f,
_0x25dd29 = 0x70,
_0x164db2 = 0x71,
_0xb31ef7 = 0x72,
_0x4733b5 = 0x73,
_0x2f92ea = 0x74,
_0x4c37ce = 0x75,
_0x1fad46 = 0x76,
_0x5630b5 = 0x77,
_0x5d2956 = 0x7a,
_0x547a8a = 0x7b,
_0x351f4e = 0x7d,
_0x50524a = 0x96,
_0x13dc56 = {
    'customClassesForOType': {},
    'setClassForAnimalType': function (_0x12197a, _0x358411) {
        this['setCustomClassForGameObjType'](_0x12197a, _0x4ad968, _0x358411);
    },
    'setClassForAnimalBodyType': function (_0x4e7528, _0x308641) {
        this['setCustomClassForGameObjType'](_0x4e7528, _0x4c37ce, _0x308641);
    },
    'setCustomClassForGameObjType': function (_0x37adcd, _0xd069c6, _0x30728a) {
        !this['customClassesForOType'][_0xd069c6] && (this['customClassesForOType'][_0xd069c6] = {
            'oTypeMainClass': null,
            'secondaryTypeClasses': {}
        });
        var _0x453ef1 = this['customClassesForOType'][_0xd069c6];
        if (_0x30728a == null) {
            if (_0x453ef1['oTypeMainClass'] != null) console['log']('ERROR \'GameObjType.setCustomClassForGameObjType\': a class (' + this['customClassesForOType'][_0xd069c6] + ') is already set for oType ' + _0xd069c6 + '! Check for duplicate calls!');
            _0x453ef1['oTypeMainClass'] = _0x37adcd;
        } else {
            if (_0x30728a in _0x453ef1['secondaryTypeClasses']) console['log']('ERROR \'GameObjType.setCustomClassForGameObjType\': a class is already set for oType ' + _0xd069c6 + ' AND secondaryType (eg. animalType) ' + _0x30728a + '! Check for duplicate calls!');
            _0x453ef1['secondaryTypeClasses'][_0x30728a] = _0x37adcd;
        }
        this['onClassSet'](_0x37adcd, _0xd069c6, _0x30728a);
    },
    'getClassForGameObjType': function (_0x368e1b, _0x4e8860) {
        if (_0x368e1b in this['customClassesForOType']) {
            var _0x3ef944 = this['customClassesForOType'][_0x368e1b];
            if (_0x4e8860 == null || _0x4e8860 == 0x0) return _0x3ef944['oTypeMainClass'];
            else {
                if (_0x4e8860 in _0x3ef944['secondaryTypeClasses']) return _0x3ef944['secondaryTypeClasses'][_0x4e8860];
                else return _0x3ef944['oTypeMainClass'];
            }
        } else return _0x131218;
    },
    'newlyVis_createGameObjFromMsg': function (_0x57eab6) {
        var _0x2a0378 = _0x57eab6['readUInt8'](),
            _0x51782c = null;
        _0x586d0b[_0x2a0378] != null && _0x586d0b[_0x2a0378] !== undefined && (_0x51782c = _0x57eab6['readUInt8']());
        var _0x16e226 = _0x13dc56['createGameObjOfOType'](_0x2a0378, _0x51782c);
        return _0x16e226['worldUpd_readMsgNewlyVisible'](_0x57eab6, _0x2a0378, _0x51782c), _0x16e226;
    },
    'hasCustomClasses': function (_0x417f92) {},
    'createGameObjOfOType': function (_0x13e471, _0xb0381e) {
        var _0x55bcc5 = this['getClassForGameObjType'](_0x13e471, _0xb0381e),
            _0x44f6b4 = new _0x55bcc5(_0x13e471, _0xb0381e);
        return _0x44f6b4;
    },
    'onClassSet': function (_0x2d0b15) {},
    'addCustomClassType': function (_0x55b66b) {
        if (_0x586d0b[_0x55b66b] == undefined) _0x586d0b[_0x55b66b] = _0x55b66b;
    }
},
_0x586d0b = {};
_0x13dc56['addCustomClassType'](_0x4ad968), _0x13dc56['addCustomClassType'](_0x4c37ce), _0x13dc56['addCustomClassType'](_0x2c5edd);
var _0xb392ab = 0x1,
_0x48065b = 0x2,
_0x4cff3a = 0x3,
_0x84499b = 0x4,
_0x3136da = 0x5,
_0x12b5f6 = 0x6,
_0x39a5c5 = 0x7,
_0xd7a1f1 = 0x8,
_0x29db26 = 0x9,
_0x189024 = 0xa,
_0x1d3e9a = 0xb,
_0xd3040d = 0xc,
_0x254b52 = 0xd,
_0x20f46e = 0xe,
_0x4c5efa = 0xf,
_0xf5643 = 0x10,
_0x1a993f = 0x11,
_0xab40e7 = 0x12,
_0x2fd73b = 0x13,
_0x46166b = 0x14,
_0x1597d0 = 0x15,
_0x5b8b30 = 0x16,
_0xfbbc5 = 0x17,
_0x526523 = 0x18,
_0x52507b = 0x19,
_0x697285 = 0x1a,
_0x3e9276 = 0x1b,
_0x199c9a = 0x1c,
_0x1bdc24 = 0x1d,
_0x45e678 = 0x1e,
_0x323cb6 = 0x1f,
_0x55a926 = 0x20,
_0xaa5ad2 = 0x21,
_0x4f4705 = 0x22,
_0x236cec = 0x23,
_0x3e89f8 = 0x24,
_0x1fc0ae = 0x25,
_0x575d5b = 0x26,
_0x52ea48 = 0x27,
_0x3dd041 = 0x28,
_0x2cb3a6 = 0x29,
_0x136680 = 0x2a,
_0x40ac2b = 0x2b,
_0xdb1a28 = 0x2c,
_0x3d71a1 = 0x2d,
_0x5b6f26 = 0x2e,
_0x39e9c9 = 0x2f,
_0x39357f = 0x30,
_0x13ad70 = 0x31,
_0x14a18f = 0x32,
_0x17eda1 = 0x33,
_0x4ab048 = 0x34,
_0x47ccac = 0x35,
_0x43c01e = 0x36,
_0x4f8d37 = 0x37,
_0x5041f9 = 0x38,
_0x164f9e = 0x39,
_0x17f2ab = 0x3a,
_0x59ed2f = 0x3b,
_0x49617f = 0x3c,
_0x2350ea = 0x3d,
_0x86f82a = 0x3e,
_0xf59392 = 0x3f,
_0x1b8ac0 = 0x40,
_0x4e8eac = 0x41,
_0x81deb4 = 0x42,
_0x43193 = 0x43,
_0x19e418 = 0x44,
_0x4618bb = 0x45,
_0x380133 = 0x46,
_0x9ca027 = 0x47,
_0x40da91 = 0x48,
_0x31a0ba = 0x49,
_0x3182a5 = 0x4a,
_0x3e06be = 0x4b,
_0x229b87 = 0x4c,
_0x220080 = 0x4d,
_0x588f38 = 0x4e,
_0x19475c = 0x4f,
_0x51f75a = 0x50,
_0x114a7b = 0x51,
_0x353af1 = 0x52,
_0x5b4c32 = 0x53,
_0x441e79 = 0x54,
_0x4336e9 = 0x55,
_0x4fcb93 = 0x56,
_0x490d3d = 0x57,
_0x1be7db = 0x58,
_0x5ef983 = 0x59,
_0x67df53 = 0x5a,
_0x2e0aa9 = 0x5b,
_0x53017e = 0x5c,
_0x1f6369 = 0x5d,
_0x5af7f2 = 0x5e,
_0x16390e = 0x5f,
_0x36b345 = 0x60,
_0x35326e = 0x61,
_0x4ca51a = 0x62,
_0x24c58c = 0x63,
_0x1ed4e2 = 0x64,
_0x24c923 = 0x65,
_0x82a74 = 0x66,
_0xa0dcbc = 0x67,
_0x23619a = 0x68,
_0x4a8972 = 0x69,
_0x363563 = 0x6a,
_0x5ec601 = 0x6b,
_0x286bc1 = 0x6c,
_0x232d17 = 0x6d,
_0x2876ce = 0x6e,
_0xdaf2fe = 0x6f,
_0x232f8b = function (_0x4b5105) {
    var _0x47514c = {};
    switch (_0x4b5105) {
    case _0x3d71a1:
        _0x47514c['aniName'] = 'Snail', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'You\'re a super slow snail!', _0x47514c['aniCol'] = '#fcc02b', _0x47514c['skinName'] = 'snail';
        break;
    case _0xb392ab:
        _0x47514c['aniName'] = 'Mouse', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = '', _0x47514c['aniCol'] = '#9BA9B9', _0x47514c['skinName'] = 'mouse';
        break;
    case _0x48065b:
        _0x47514c['aniName'] = 'Rabbit', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to RABBIT! \x0aPress W to burrow a hole to hide in!', _0x47514c['aniCol'] = '#AA937E', _0x47514c['skinName'] = 'rabbit';
        break;
    case _0x4cff3a:
        _0x47514c['aniName'] = 'Pig', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to PIG!\x0a Pigs move FAST through MUD! (Can use \'stink\' on mud/ hiding holes!)', _0x47514c['aniCol'] = '#DD6BD4', _0x47514c['skinName'] = 'pig';
        break;
    case _0x84499b:
        _0x47514c['aniName'] = 'Fox', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to FOX! ,\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!', _0x47514c['aniCol'] = '#FF9D43', _0x47514c['skinName'] = 'fox';
        break;
    case _0x3136da:
        _0x47514c['aniName'] = 'Deer', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to DEER! \x0aPress W to dig up food! \x0aDig in mud for better food!\x0a Hint:Check water areas for new food sources!', _0x47514c['aniCol'] = '#C4773E', _0x47514c['skinName'] = 'deer';
        break;
    case _0x12b5f6:
        _0x47514c['aniName'] = 'Mole', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to MOLE!\x0a Hold W to dig underground!\x0aGo under anything, do surprise attacks!', _0x47514c['aniCol'] = '#4C4A45', _0x47514c['skinName'] = 'mole';
        break;
    case _0x39a5c5:
        _0x47514c['aniName'] = 'Zebra', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to ZEBRA! \x0aPress W to kick side ways!', _0x47514c['aniCol'] = '#FFFFFF', _0x47514c['skinName'] = 'zebra';
        break;
    case _0xd7a1f1:
        _0x47514c['aniName'] = 'Lion', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to LION!\x0a Press W to release a mighty ROAR (Rawr!)!', _0x47514c['aniCol'] = '#f8c923', _0x47514c['skinName'] = 'lion';
        break;
    case _0x29db26:
        _0x47514c['aniName'] = 'CHEETAH', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to CHEETAH!\x0a Press W to get a speed boost! (Every 8 seconds)!', _0x47514c['aniCol'] = '#CAC05B', _0x47514c['skinName'] = 'bigcat/cheetah';
        break;
    case _0x189024:
        _0x47514c['aniName'] = 'Bear', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to BEAR!\x0a Bears climb through green hills! (Press W to use your claw!)', _0x47514c['aniCol'] = '#99591C', _0x47514c['skinName'] = 'bear';
        break;
    case _0x1d3e9a:
        _0x47514c['aniName'] = 'Croc', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to CROCODILE!\x0a Press W to bite and drag around animals! \x0a+ (Now hide in water spots)+ Swim well in Mud, Lakes & Oceans!', _0x47514c['aniCol'] = '#30F51C', _0x47514c['skinName'] = 'croc';
        break;
    case _0x254b52:
        _0x47514c['aniName'] = 'Hippo', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to HIPPO!\x0aHippos are great swimmers, dominate the Lakes/Oceans/Mud!', _0x47514c['aniCol'] = '#945A99', _0x47514c['skinName'] = 'hippo';
        break;
    case _0xd3040d:
        _0x47514c['aniName'] = 'Rhino', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to RHINO!\x0a Press W to CHARGE with your mighty horn!', _0x47514c['aniCol'] = '#94a3a9', _0x47514c['skinName'] = 'rhino';
        break;
    case _0x4c5efa:
        _0x47514c['aniName'] = 'Shrimp', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = '', _0x47514c['aniCol'] = '#f88e37', _0x47514c['skinName'] = 'shrimp';
        break;
    case _0xf5643:
        _0x47514c['aniName'] = 'Trout', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to TROUT!\x0aHint: Hold Left-click to RUN! (Uses extra water)', _0x47514c['aniCol'] = '#ac8686', _0x47514c['skinName'] = 'trout';
        break;
    case _0x1a993f:
        _0x47514c['aniName'] = 'Crab', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to CRAB!\x0a Crabs can survive on dry land!\x0a (On land, Press W to go into your shell!)', _0x47514c['aniCol'] = '#bf2408', _0x47514c['skinName'] = 'crab';
        break;
    case _0xab40e7:
        _0x47514c['aniName'] = 'Squid', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to SQUID!\x0a Squids can use INK when injured (press W!) \x0a+ you can hide in plankton bushes!', _0x47514c['aniCol'] = '#40dda4', _0x47514c['skinName'] = 'squid';
        break;
    case _0x2fd73b:
        _0x47514c['aniName'] = 'Shark', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to SHARK!\x0a A vicious predator of the oceans!', _0x47514c['aniCol'] = '#999fc6', _0x47514c['skinName'] = 'shark';
        break;
    case _0x5b8b30:
        _0x47514c['aniName'] = 'Sea-horse', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to SEA HORSE!\x0a An agile hunter!', _0x47514c['aniCol'] = '#73BE2F', _0x47514c['skinName'] = 'seahorse';
        break;
    case _0xfbbc5:
        _0x47514c['aniName'] = 'Jellyfish', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to JELLYFISH!\x0a A slowly-turning animal that can grow quite large!', _0x47514c['aniCol'] = '#FDB9BA', _0x47514c['skinName'] = 'jellyfish';
        break;
    case _0x1597d0:
        _0x47514c['aniName'] = 'Turtle', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to TURTLE!\x0a Lives well on land & water! (On land, Press W to go into your shell!)', _0x47514c['aniCol'] = '#502E1A', _0x47514c['skinName'] = 'turtle';
        break;
    case _0x46166b:
        _0x47514c['aniName'] = 'Stringray', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to STINGRAY!\x0a Use electic shock (Release W key!) to shock animals! \x0a(Takes time to recharge)', _0x47514c['aniCol'] = '#164336', _0x47514c['skinName'] = 'stingray';
        break;
    case _0x526523:
        _0x47514c['aniName'] = 'The Kraken', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to THE KRAKEN!\x0a Terrorize the oceans, and be feared by all!\x0a (Release W to use whirlpool ability!)', _0x47514c['aniCol'] = '#64a034', _0x47514c['skinName'] = 'kraken';
        break;
    case _0x52507b:
        _0x47514c['aniName'] = 'Pufferfish', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to PUFFERFISH!\x0a (Hold W to inflate- become spiky, and dangerous to touch!)', _0x47514c['aniCol'] = '#6C5C2C', _0x47514c['skinName'] = 'pufferfish';
        break;
    case _0x697285:
        _0x47514c['aniName'] = 'Killer Whale', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to Killer Whale! \x0aWhales blow out water when diving! (And sometimes other loot!)', _0x47514c['aniCol'] = '#141414', _0x47514c['skinName'] = 'killerwhale';
        break;
    case _0x3e9276:
        _0x47514c['aniName'] = 'Swordfish', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to ' + _0x47514c['aniName'] + '!\x0a (Press W to rush with your sharp nose!)', _0x47514c['aniCol'] = '#689CD7', _0x47514c['skinName'] = 'swordfish';
        break;
    case _0x199c9a:
        _0x47514c['aniName'] = 'Gorilla', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to ' + _0x47514c['aniName'] + '!\x0a Gorillas are very fast on hills/trees!\x0a Press W to throw bananas! (from trees)', _0x47514c['aniCol'] = '#323232', _0x47514c['skinName'] = 'gorilla';
        break;
    case _0x1bdc24:
        _0x47514c['aniName'] = 'Octopus', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to Octopus!\x0aHold W to use your \'Disguise\' ability!\x0a(Hint: wait for prey to bite you- they get stunned!)', _0x47514c['aniCol'] = '#ff8340', _0x47514c['skinName'] = 'octopus';
        break;
    case _0x20f46e:
        _0x47514c['aniName'] = 'Dragon', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to ' + _0x47514c['aniName'] + '!\x0a (You\'re amazing!) \x0aFly over everything, Hold W to shoot fire!', _0x47514c['aniCol'] = '#22FF8A', _0x47514c['skinName'] = 'dragon';
        break;
    case _0x5b6f26:
        _0x47514c['aniName'] = 'Black Dragon', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to ' + _0x47514c['aniName'] + '!\x0a Black dragons drink lava instead of water! Black dragons only heal on healing stones/lava!', _0x47514c['aniCol'] = 'black', _0x47514c['skinName'] = 'blackdragon';
        break;
    case _0x4ab048:
        _0x47514c['aniName'] = 'Giant Spider', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to ' + _0x47514c['aniName'] + '!\x0a Place web around the game to catch prey!', _0x47514c['aniCol'] = 'black', _0x47514c['skinName'] = 'giantSpider';
        break;
    case _0x14a18f:
        _0x47514c['aniName'] = 'Cobra', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to ' + _0x47514c['aniName'] + '!\x0a Hold W to Spit venom, and poison animals with your bite!', _0x47514c['aniCol'] = 'black', _0x47514c['skinName'] = 'cobra';
        break;
    case _0x17eda1:
        _0x47514c['aniName'] = 'Boa Constrictor', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to ' + _0x47514c['aniName'] + '!\x0a Coil and suffocate other animals!', _0x47514c['aniCol'] = 'black', _0x47514c['skinName'] = 'boaConstrictor';
        break;
    case _0x47ccac:
        _0x47514c['aniName'] = 'T-REX', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to ' + _0x47514c['aniName'] + ' The Dinosaur!\x0a This ancient dinosaur has powerful jaws that can drag prey around!!', _0x47514c['aniCol'] = '#862A2A', _0x47514c['skinName'] = 'trex';
        break;
    case _0x43c01e:
        _0x47514c['aniName'] = 'Tiger', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to Tiger!\x0a Tigers can launch an ambush attack (HOLD W to grow a bush) Release to attack!', _0x47514c['aniCol'] = '#FF9000', _0x47514c['skinName'] = 'tiger';
        break;
    case _0x4f8d37:
        _0x47514c['aniName'] = 'Giraffe', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to Giraffe!\x0aGiraffe have huge legs and stomp anyone in their way!', _0x47514c['aniCol'] = '#E9BD23', _0x47514c['skinName'] = 'giraffe';
        break;
    case _0x5041f9:
        _0x47514c['aniName'] = 'Eagle', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to Eagle!\x0aEagles can fly up other animals in the air! !\x0a', _0x47514c['aniCol'] = '#5b400d', _0x47514c['skinName'] = 'eagle';
        break;
    case _0x2cb3a6:
        _0x47514c['aniName'] = 'Arctic Fox', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to ' + _0x47514c['aniName'] + '!\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!', _0x47514c['aniCol'] = '#CFCFCF', _0x47514c['skinName'] = 'arctic/arcticfox';
        break;
    case _0x323cb6:
        _0x47514c['aniName'] = 'Arctic Hare', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to ' + _0x47514c['aniName'] + '!\x0a \x0aPress W to burrow a hole to hide in!', _0x47514c['aniCol'] = '#D5D5D5', _0x47514c['skinName'] = 'arctic/arctichare';
        break;
    case _0x55a926:
        _0x47514c['aniName'] = 'The Yeti!', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to ' + _0x47514c['aniName'] + '!\x0a So it really exists... \x0a Hold W to turn into snow, release W to freeeeeze!', _0x47514c['aniCol'] = '#839eb5', _0x47514c['skinName'] = 'arctic/yeti';
        break;
    case _0xaa5ad2:
        _0x47514c['aniName'] = 'Chipmunk', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = '', _0x47514c['aniCol'] = '#A77C30', _0x47514c['skinName'] = 'arctic/chipmunk';
        break;
    case _0x4f4705:
        _0x47514c['aniName'] = 'Muskox', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to ' + _0x47514c['aniName'] + '!\x0a Press W to charge with your horns! \x0aPlus move decently on ice!', _0x47514c['aniCol'] = '#231f18', _0x47514c['skinName'] = 'arctic/muskox';
        break;
    case _0x236cec:
        _0x47514c['aniName'] = 'Penguin', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to ' + _0x47514c['aniName'] + '!\x0a Left-click to run!\x0a (HOLD W to slide FAST on ice)!', _0x47514c['aniCol'] = '#FFFFFF', _0x47514c['skinName'] = 'arctic/penguin';
        break;
    case _0x3e89f8:
        _0x47514c['aniName'] = 'Polar Bear', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to ' + _0x47514c['aniName'] + '!\x0a Polar bears can climb hills! \x0a+ They\'re amazing swimmers!', _0x47514c['aniCol'] = '#e4e4e4', _0x47514c['skinName'] = 'arctic/bear/bear';
        break;
    case _0x1fc0ae:
        _0x47514c['aniName'] = 'Seal', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to ' + _0x47514c['aniName'] + '!\x0a Seals can slide on ice (Hold W) + can climb hills (rocks too!)', _0x47514c['aniCol'] = '#cfcfcf', _0x47514c['skinName'] = 'arctic/seal';
        break;
    case _0x575d5b:
        _0x47514c['aniName'] = 'Snow leopard', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to ' + _0x47514c['aniName'] + '!\x0a Press W to get a speed boost! (Every 8 seconds)!', _0x47514c['aniCol'] = '#cfcfcf', _0x47514c['skinName'] = 'arctic/snowleopard';
        break;
    case _0x52ea48:
        _0x47514c['aniName'] = 'Walrus', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to ' + _0x47514c['aniName'] + '!\x0a You can slide on ice (Hold W) + can climb hills (rocks too!)', _0x47514c['aniCol'] = '#633838', _0x47514c['skinName'] = 'arctic/walrus';
        break;
    case _0x3dd041:
        _0x47514c['aniName'] = 'Reindeer', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to ' + _0x47514c['aniName'] + '!\x0a Press W to dig up food! \x0a Your sharp hooves let you turn very well on ice!', _0x47514c['aniCol'] = '#a68976', _0x47514c['skinName'] = 'arctic/reindeer';
        break;
    case _0x45e678:
        _0x47514c['aniName'] = 'Wolf', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to ' + _0x47514c['aniName'] + '!\x0a Wolf paws turn very well on ice!\x0a Press W to howl!', _0x47514c['aniCol'] = '#6B6B6B', _0x47514c['skinName'] = 'arctic/wolf';
        break;
    case _0x136680:
        _0x47514c['aniName'] = 'Wolverine', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to ' + _0x47514c['aniName'] + '!\x0a Press W to Let out a Powerful GROWL! (Knocks back prey!)', _0x47514c['aniCol'] = '#843A0F', _0x47514c['skinName'] = 'arctic/wolverine';
        break;
    case _0x40ac2b:
        _0x47514c['aniName'] = 'Mammoth', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to ' + _0x47514c['aniName'] + '!\x0a Press W to roll snowballs with your trunk!\x0a The bigger the snowball gets, the longer the freeze!', _0x47514c['aniCol'] = '#9d4717', _0x47514c['skinName'] = 'arctic/mammoth';
        break;
    case _0xdb1a28:
        _0x47514c['aniName'] = 'Donkey', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to ' + _0x47514c['aniName'] + '!\x0a Press W to Kick any animal behind you', _0x47514c['aniCol'] = '#8c7c64', _0x47514c['skinName'] = 'donkey';
        break;
    case _0x39e9c9:
        _0x47514c['aniName'] = 'Sabertooth Tiger', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to Sabertooth Tiger!\x0aSabertooth Tigers are great swimmers, dominate the Lakes/Oceans/Mud!', _0x47514c['aniCol'] = '#945A99', _0x47514c['skinName'] = 'sabertoothtiger';
        break;
    case _0x39357f:
        _0x47514c['aniName'] = 'Elephant', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to ' + _0x47514c['aniName'] + '!\x0a Use your long trunk to attack and eat food!', _0x47514c['aniCol'] = '#945A99', _0x47514c['skinName'] = 'elephant';
        break;
    case _0x13ad70:
        _0x47514c['aniName'] = 'Blue Whale', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to Blue Whale!\x0a Smash with your powerful tail!', _0x47514c['aniCol'] = '#945A99', _0x47514c['skinName'] = 'bluewhale';
        break;
    case _0x59ed2f:
        _0x47514c['aniName'] = 'Duckling', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to a DUCK!', _0x47514c['aniCol'] = '#FF9000', _0x47514c['skinName'] = 'duck/duckling';
        break;
    case _0x164f9e:
        _0x47514c['aniName'] = 'Hedgehog', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to Hedgehog!\x0a (Hold W to become spiky, and dangerous to touch!)', _0x47514c['aniCol'] = '#5b400d', _0x47514c['skinName'] = 'hedgehog';
        break;
    case _0x2350ea:
        _0x47514c['aniName'] = 'King Crab', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to a KING CRAB!', _0x47514c['aniCol'] = '#971f0e', _0x47514c['skinName'] = 'kingcrab';
        break;
    case _0x49617f:
        _0x47514c['aniName'] = 'Lemming', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = '', _0x47514c['aniCol'] = '#A77C30', _0x47514c['skinName'] = 'arctic/lemming';
        break;
    case _0x86f82a:
        _0x47514c['aniName'] = 'Frog', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to Frog!!', _0x47514c['aniCol'] = '#FF9000', _0x47514c['skinName'] = 'frog/frog';
        break;
    case _0xf59392:
        _0x47514c['aniName'] = 'Ostrich', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to Ostrich! Lay eggs to hatch babies! \x0aCommand babies by placing your crosshair (right-click/W)-\x0a They can attack prey!', _0x47514c['aniCol'] = '#FF9000', _0x47514c['skinName'] = 'ostrich/ostrich';
        break;
    case _0x1b8ac0:
        _0x47514c['aniName'] = 'Pelican', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to Pelican! \x0aPick up water (and prey!) in your mouth,\x0afly, and drop water on prey! (press W again)', _0x47514c['aniCol'] = '#FF9000', _0x47514c['skinName'] = 'pelican/pelican';
        break;
    case _0x4e8eac:
        _0x47514c['aniName'] = 'Falcon', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to Falcon! \x0aFly, and do a powerful dive attack! Aim it well.', _0x47514c['aniCol'] = '#FF9000', _0x47514c['skinName'] = 'falcon/falcon';
        break;
    case _0x81deb4:
        _0x47514c['aniName'] = 'Snowy Owl', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to Snowy Owl!\x0a Aim the crosshair, \x0a right click/W when it\'s on top of prey, to attack!', _0x47514c['aniCol'] = '#FF9000', _0x47514c['skinName'] = 'snowyowl/snowyowl';
        break;
    case _0x4618bb:
        _0x47514c['aniName'] = 'Baby Ostrich', _0x47514c['aniDesc'] = '', _0x47514c['upgradeText'] = 'UPGRADED to Baby Ostrich!!', _0x47514c['aniCol'] = '#FF9000', _0x47514c['skinName'] = 'ostrich/baby-ostrich';
        break;
    case _0x19e418:
        _0x47514c['aniName'] = 'Phoenix', _0x47514c['upgradeText'] = 'UPGRADED to Phoenix!\x0aCreate powerful fire tornados to burn your enemies alive!', _0x47514c['aniCol'] = '#FF9000', _0x47514c['skinName'] = 'phoenix/phoenix';
        break;
    case _0x380133:
        _0x47514c['aniName'] = 'Sea Monster', _0x47514c['upgradeText'] = 'UPGRADED to Sea Monster!', _0x47514c['aniCol'] = '#FF9000', _0x47514c['skinName'] = 'seamonster';
        break;
    case _0x9ca027:
        _0x47514c['aniName'] = 'Land Monster', _0x47514c['upgradeText'] = 'UPGRADED to Land Monster!', _0x47514c['aniCol'] = '#FF9000', _0x47514c['skinName'] = 'landmonster';
        break;
    case _0x40da91:
        _0x47514c['aniName'] = 'Ice Monster', _0x47514c['upgradeText'] = 'UPGRADED to Ice Monster!', _0x47514c['aniCol'] = '#FF9000', _0x47514c['skinName'] = 'icemonster';
        break;
    case _0x31a0ba:
        _0x47514c['aniName'] = 'Dino Monster', _0x47514c['upgradeText'] = 'UPGRADED to Dino Monster!', _0x47514c['aniCol'] = '#FF9000', _0x47514c['skinName'] = 'dinomonster';
        break;
    case _0x3182a5:
        _0x47514c['aniName'] = 'Pigeon', _0x47514c['upgradeText'] = 'UPGRADED to Pigeon!\x0aHold W to fly around. ', _0x47514c['aniCol'] = '#FF9000', _0x47514c['skinName'] = 'pigeon/pigeon';
        break;
    case _0x3e06be:
        _0x47514c['aniName'] = 'Toucan', _0x47514c['upgradeText'] = 'UPGRADED to Toucan!\x0aHold W to fly around. ', _0x47514c['aniCol'] = '#FF9000', _0x47514c['skinName'] = 'toucan/toucan';
        break;
    default:
        _0x47514c['aniName'] = '(Animal)', _0x47514c['aniDesc'] = '', _0x47514c['aniCol'] = '#000000', _0x47514c['upgradeText'] = 'UPGRADED!';
    }
    return _0x47514c;
};

function _0x1717fa() {}

function _0x440a64(_0x885ae4) {
let _0xda7303 = Array['isArray'](_0x885ae4) ? _0x885ae4 : [_0x885ae4];
return _0xda7303 = _0xda7303['map'](_0x556e97 => {
    return {
        ..._0x556e97,
        'abilImg': 'assets/' + _0x556e97['abilImg']
    };
}), _0xda7303['length'] === 0x1 && _0xda7303['unshift']({
    'abilName': 'Dash',
    'abilImg': 'assets/abilities/Dash-Boost.svg'
}), _0xda7303[0x1]['abilImg'] === 'assets/abilities/Dash-Boost.svg' && (_0xda7303['length'] = 0x1), _0xda7303;
}
var _0x4c4868 = 0x65,
_0xc0a557 = 0x0,
_0x2dc1f4 = 0x1,
_0x28b133 = 0x2,
_0xaeb84a = 0x3,
_0x3de764 = 0x4,
_0x4e12c5 = 0x5,
_0x408a4d = 0x6,
_0x373233 = 0x7,
_0x2c8fe4 = 0x8,
_0x10081e = 0x9,
_0x3063aa = 0xa,
_0x21aff7 = 0xb,
_0xa64540 = 0xc,
_0x151160 = 0xd,
_0x30f806 = 0xe,
_0x504bcc = 0xf,
_0x470158 = 0x10,
_0x3f6c52 = 0x11,
_0x1f87f5 = 0x12,
_0x281427 = 0x13,
_0x1e4e14 = 0x14,
_0x2dc3e0 = 0x15,
_0x2e4569 = 0x16,
_0x58e674 = 0x17,
_0x297997 = 0x18,
_0x21cdcb = 0x19,
_0x5eba69 = 0x1a,
_0x5035c9 = 0x1b,
_0x5bfcf0 = 0x1c,
_0xb57a3 = 0x1e,
_0x2fcd00 = 0x1f,
_0x423a2a = 0x20,
_0x9a1dd = 0x21,
_0x209124 = 0x22,
_0x1fad09 = 0x23,
_0x2d6b61 = 0x24,
_0x376a9d = 0x25,
_0x4904bf = 0x26,
_0x4e8c18 = 0x27,
_0x981fc3 = 0x28,
_0x2a518d = 0x29,
_0x2d6f76 = 0x2a,
_0x50d64b = 0x2b,
_0x28096d = 0x2e,
_0x2c7f5a = 0x2f,
_0x432ccd = 0x30,
_0x4332fb = 0x31,
_0x5b2a60 = 0x33,
_0x5b019c = 0x36,
_0x4d9fb2 = 0x37,
_0x335160 = 0x38,
_0x58c3a2 = 0x39,
_0x4a5145 = 0x3a,
_0x47a280 = 0x3b,
_0x356727 = 0x3c,
_0x308657 = 0x3d,
_0x28e488 = 0x3e,
_0x4f066b = 0x3f,
_0x498d2a = 0x40,
_0x590f5a = 0x41,
_0x5425a5 = 0x42,
_0x39846b = 0x43,
_0x1921e6 = 0x44,
_0x5e4328 = 0x45,
_0x287cfe = 0x46,
_0x33de8e = 0x47,
_0x1e04b4 = 0x48,
_0x4363c7 = 0x49,
_0x5dc618 = 0x4a,
_0x50c62c = 0x4b,
_0x2240d1 = 0x4c,
_0x24efc0 = 0x4d,
_0x1280f3 = 0x4e,
_0x519d5a = 0x4f,
_0xed682a = 0x50,
_0x453e69 = 0x51,
_0x4589c6 = 0x52,
_0x56fa7e = 0x53,
_0x57405f = 0x56,
_0x57e124 = 0x57,
_0x278422 = 0x58,
_0xc4e9e7 = 0x59,
_0x126559 = 0x5a,
_0x535b24 = 0x5b,
_0x1d392c = 0x5c,
_0x12a9b2 = 0x5d,
_0x4bf664 = 0x5e,
_0x2c7803 = 0x5f,
_0x48a5fc = 0x5d,
_0x4a020f = 0x61,
_0xe26359 = 0x62,
_0xe63deb = 0x63,
_0x452520 = 0x65,
_0x12c6d1 = 0x66,
_0x63711a = 0x67,
_0x1f65f3 = 0x68,
_0x22613e = 0x69,
_0x2f96ef = 0x6a,
_0x11dc57 = 0x6b,
_0x5eee86 = 0x6c,
_0x1616ce = 0x70,
_0x1eb851 = 0x80,
_0x5c0a1c = function (_0x11dbd4) {
    var _0x383ce3 = {},
        _0x258985 = '',
        _0x466dd6 = _0x3c55ea[_0x2fc9ba];
    switch (_0x11dbd4) {
    case _0x4589c6:
        _0x383ce3['abilName'] = 'Bear Attack', _0x383ce3['abilImg'] = 'abilities/Slash-Claw.svg';
        break;
    case _0x56fa7e:
        _0x383ce3['abilName'] = 'Spit!', _0x383ce3['abilImg'] = 'abilities/Spit.svg';
        break;
    case _0x423a2a:
        _0x383ce3['abilName'] = 'Tail Slap', _0x383ce3['abilImg'] = 'abilities/TailHit.svg';
        break;
    case _0x2fcd00:
        _0x383ce3['abilName'] = 'Trunk Hit', _0x383ce3['abilImg'] = 'abilities/TrunkHit.svg';
        break;
    case _0x4c4868:
        _0x383ce3['abilName'] = 'Dive', _0x383ce3['abilImg'] = 'abilities/Dive.svg';
        break;
    case _0x21cdcb:
        _0x383ce3['abilName'] = 'Dig For Food', _0x383ce3['abilImg'] = 'abilities/Dig.svg';
        break;
    case _0x28b133:
        _0x383ce3['abilName'] = 'Shell', _0x383ce3['abilImg'] = 'abilities/Wave.svg';
        break;
    case _0x2dc3e0:
        _0x383ce3['abilName'] = 'Bite Drag', _0x383ce3['abilImg'] = 'abilities/Bite.svg';
        break;
    case _0x2d6b61:
        _0x383ce3['abilName'] = 'Suffocate prey', _0x383ce3['abilImg'] = 'abilities/Constrict.svg';
        break;
    case _0x4d9fb2:
        _0x383ce3['abilName'] = 'Fly with water', _0x383ce3['abilImg'] = 'abilities/PelicanFlyWithWater.svg';
        break;
    case _0x373233:
        _0x383ce3['abilName'] = 'Disguise', _0x383ce3['abilImg'] = 'abilities/Disguise.svg';
        break;
    case _0x2e4569:
        _0x383ce3['abilName'] = 'Burrow Hole', _0x383ce3['abilImg'] = 'abilities/Dig.svg';
        break;
    case _0x58e674:
        _0x383ce3['abilName'] = 'Pull from Hole', _0x383ce3['abilImg'] = 'abilities/Sinkhole.svg';
        break;
    case _0x10081e:
        _0x383ce3['abilName'] = 'Charge', _0x383ce3['abilImg'] = 'abilities/Charge.svg';
        break;
    case _0x3f6c52:
        _0x383ce3['abilName'] = 'Roll snow', _0x383ce3['abilImg'] = 'abilities/Roll-RollSnowball.svg';
        break;
    case _0x209124:
        _0x383ce3['abilName'] = 'Venom Spit', _0x383ce3['abilImg'] = 'abilities/Spit.svg';
        break;
    case _0x1fad09:
        _0x383ce3['abilName'] = 'Spin Web', _0x383ce3['abilImg'] = 'abilities/Web.svg';
        break;
    case _0x151160:
        _0x383ce3['abilName'] = 'Throw Snow', _0x383ce3['abilImg'] = 'abilities/Throw.svg';
        break;
    case _0x470158:
        _0x383ce3['abilName'] = 'Drop Snow', _0x383ce3['abilImg'] = 'abilities/Roll-RollSnowball.svg';
        break;
    case _0x1f87f5:
        _0x383ce3['abilName'] = 'Loud Noise', _0x383ce3['abilImg'] = 'abilities/Howl.svg';
        break;
    case _0x30f806:
        _0x383ce3['abilName'] = 'Claw Slash', _0x383ce3['abilImg'] = 'abilities/Slash-Claw.svg';
        break;
    case _0x3de764:
        _0x383ce3['abilName'] = 'Ink', _0x383ce3['abilImg'] = 'abilities/Ink.svg';
        break;
    case _0xaeb84a:
        _0x383ce3['abilName'] = 'Shock', _0x383ce3['abilImg'] = 'abilities/Shock.svg';
        break;
    case _0x2dc1f4:
        _0x383ce3['abilName'] = 'Hold to Dig', _0x383ce3['abilImg'] = 'abilities/Dig.svg';
        break;
    case _0xa64540:
        _0x383ce3['abilName'] = 'Howl', _0x383ce3['abilImg'] = 'abilities/Howl.svg';
        break;
    case _0x297997:
        _0x383ce3['abilName'] = 'Throw Banana', _0x383ce3['abilImg'] = 'abilities/Throw.svg';
        break;
    case _0x5bfcf0:
        _0x383ce3['abilName'] = 'Cause Wave', _0x383ce3['abilImg'] = 'abilities/Wave.svg';
        break;
    case _0x504bcc:
        _0x383ce3['abilName'] = 'Extra Boost', _0x383ce3['abilImg'] = 'abilities/Dash-Boost.svg';
        break;
    case _0x2c8fe4:
        _0x383ce3['abilName'] = 'Slide on ice', _0x383ce3['abilImg'] = 'abilities/Slide.svg';
        break;
    case _0x3063aa:
        _0x383ce3['abilName'] = 'Inflate', _0x383ce3['abilImg'] = 'abilities/Puff.svg';
        break;
    case _0x4332fb:
        _0x383ce3['abilName'] = 'Spikes', _0x383ce3['abilImg'] = 'abilities/Spike.svg';
        break;
    case _0x281427:
        _0x383ce3['abilName'] = 'Fire', _0x383ce3['abilImg'] = 'abilities/Fireball.svg';
        break;
    case _0xb57a3:
        _0x383ce3['abilName'] = 'Fire', _0x383ce3['abilImg'] = 'abilities/MultiFireball.svg';
        break;
    case _0x5b2a60:
        _0x383ce3['abilName'] = 'Arm Smash', _0x383ce3['abilImg'] = 'abilities/ArmSmash.svg';
        break;
    case _0x376a9d:
        _0x383ce3['abilName'] = 'Jaws Bite', _0x383ce3['abilImg'] = 'abilities/Bite.svg';
        break;
    case _0x28096d:
        _0x383ce3['abilName'] = 'Jaws Bite', _0x383ce3['abilImg'] = 'abilities/Bite.svg';
        break;
    case _0x5b019c:
        _0x383ce3['abilName'] = 'Command Babies', _0x383ce3['abilImg'] = 'abilities/Hypnotize.svg';
        break;
    case _0x4a5145:
        _0x383ce3['abilName'] = 'Target prey', _0x383ce3['abilImg'] = 'abilities/Target.svg';
        break;
    case _0x58c3a2:
        _0x383ce3['abilName'] = 'Sky dive', _0x383ce3['abilImg'] = 'abilities/SkyDive.svg';
        break;
    case _0x4904bf:
        _0x383ce3['abilName'] = 'Ambush Attack', _0x383ce3['abilImg'] = 'abilities/Headbutt.svg';
        break;
    case _0x2d6f76:
        _0x383ce3['abilName'] = 'Stomp', _0x383ce3['abilImg'] = 'abilities/Stomp.svg';
        break;
    case _0x2c7f5a:
        _0x383ce3['abilName'] = 'Fly with prey', _0x383ce3['abilImg'] = 'abilities/Fly.svg';
        break;
    case _0x432ccd:
        _0x383ce3['abilName'] = 'Stink', _0x383ce3['abilImg'] = 'abilities/StinkCloud.svg';
        break;
    case _0x498d2a:
    case _0x590f5a:
        _0x383ce3['abilName'] = 'HOLD to fly', _0x383ce3['abilImg'] = 'abilities/Fly.svg';
        break;
    case _0x33de8e:
        _0x383ce3['abilName'] = 'HOLD to fly\x0a& Mimic Animals', _0x383ce3['abilImg'] = 'abilities/Caw-Mimic.svg';
        break;
    case _0x1e04b4:
        _0x383ce3['abilName'] = 'HOLD in water\x0a(find food)', _0x383ce3['abilImg'] = 'abilities/Dive.svg';
        break;
    case _0x50c62c:
        _0x383ce3['abilName'] = 'HOLD to Peck\x0a/ Fly', _0x383ce3['abilImg'] = 'abilities/Peck.svg';
        break;
    case _0x2240d1:
        _0x383ce3['abilName'] = 'HOLD to Hypnotize\x0a/ Fly from hills', _0x383ce3['abilImg'] = 'abilities/Fly.svg';
        break;
    case _0x24efc0:
        _0x383ce3['abilName'] = 'HOLD to Jump High\x0a', _0x383ce3['abilImg'] = 'abilities/Jump.svg';
        break;
    case _0x1280f3:
        _0x383ce3['abilName'] = 'HOLD to ROLL', _0x383ce3['abilImg'] = 'abilities/Roll-RollSnowball.svg';
        break;
    case _0xed682a:
        _0x383ce3['abilName'] = 'HOLD to Dig', _0x383ce3['abilImg'] = 'abilities/Dig.svg';
        break;
    case _0x519d5a:
        _0x383ce3['abilName'] = 'Spits Food!', _0x383ce3['abilImg'] = 'abilities/Spit.svg';
        break;
    case _0x453e69:
        _0x383ce3['abilName'] = 'Whine!', _0x383ce3['abilImg'] = 'abilities/Howl.svg';
        break;
    case _0x4363c7:
        _0x383ce3['abilName'] = 'Front Kick\x0a(HOLD to Charge)', _0x383ce3['abilImg'] = 'abilities/Charge.svg';
        break;
    case _0x308657:
        _0x383ce3['abilName'] = 'Fire Tornado', _0x383ce3['abilImg'] = 'abilities/Firestorm.svg';
        break;
    case _0x5425a5:
        _0x383ce3['abilName'] = 'Sink Hole', _0x383ce3['abilImg'] = 'abilities/Sinkhole.svg';
        break;
    case _0x4f066b:
        _0x383ce3['abilName'] = 'Giant Whirlpool', _0x383ce3['abilImg'] = 'abilities/Whirlpool.svg';
        break;
    case _0x287cfe:
        _0x383ce3['abilName'] = 'Knock In Air', _0x383ce3['abilImg'] = 'abilities/Headbutt.svg';
        break;
    case _0x5e4328:
        _0x383ce3['abilName'] = 'Feeze Prey', _0x383ce3['abilImg'] = 'abilities/Ice-Freeze.svg';
        break;
    default:
        _0x383ce3['abilName'] = 'Dash', _0x383ce3['abilImg'] = 'abilities/Dash-Boost.svg';
        break;
    }
    return _0x383ce3;
},
_0xc151f5 = function (_0x243977, _0xa13f20) {
    return Math['random']() * (_0xa13f20 - _0x243977) + _0x243977;
},
_0x2bcb5e = function (_0x2cacf6, _0x567d44) {
    return Math['floor'](Math['random']() * (_0x567d44 - _0x2cacf6 + 0x1)) + _0x2cacf6;
},
_0x330263 = function (_0x12640f) {
    var _0x12640f = Math['trunc'](_0x12640f) % 0x168 + (_0x12640f - Math['trunc'](_0x12640f));
    if (_0x12640f > 0x0) return _0x12640f;
    else return _0x12640f + 0x168;
},
_0x56d017 = function (_0x1ca7be) {
    var _0x1badaa = _0x1ca7be['split']('.');
    return ((+_0x1badaa[0x0] * 0x100 + +_0x1badaa[0x1]) * 0x100 + +_0x1badaa[0x2]) * 0x100 + +_0x1badaa[0x3];
},
_0x3ba1f1 = function (_0x5496ce) {
    var _0x41fae6 = _0x5496ce % 0x100;
    for (var _0x37be7b = 0x3; _0x37be7b > 0x0; _0x37be7b--) {
        _0x5496ce = Math['floor'](_0x5496ce / 0x100), _0x41fae6 = _0x5496ce % 0x100 + '.' + _0x41fae6;
    }
    return _0x41fae6;
},
_0xc89628 = function (_0x3970c0, _0x2fcf3a) {
    var _0x436637 = _0x2fcf3a['split']('?')[0x0],
        _0x891d5f, _0x3217e5 = [],
        _0x4a084e = _0x2fcf3a['indexOf']('?') !== -0x1 ? _0x2fcf3a['split']('?')[0x1] : '';
    if (_0x4a084e !== '') {
        _0x3217e5 = _0x4a084e['split']('&');
        for (var _0x41c6b6 = _0x3217e5['length'] - 0x1; _0x41c6b6 >= 0x0; _0x41c6b6 -= 0x1) {
            _0x891d5f = _0x3217e5[_0x41c6b6]['split']('=')[0x0], _0x891d5f === _0x3970c0 && _0x3217e5['splice'](_0x41c6b6, 0x1);
        }
        _0x436637 = _0x436637 + '?' + _0x3217e5['join']('&');
    }
    return _0x436637;
},
_0x5e04e2 = function (_0x5afb05) {
    return _0x5afb05 * (0xb4 / Math['PI']);
},
_0x2bcbaa = function (_0x129d2e) {
    return _0x129d2e * (Math['PI'] / 0xb4);
},
_0x33d550 = function (_0x5c596b, _0x3d2422, _0x4c41ed, _0x5d8c07) {
    return Math['atan2'](_0x5d8c07 - _0x3d2422, _0x4c41ed - _0x5c596b);
},
_0x9b02d = function (_0x88e21f, _0x5a009f) {
    return (_0x88e21f >> _0x5a009f) % 0x2 != 0x0;
},
_0x59fc73 = function (_0x227216, _0x1175e4, _0x48599d) {
    if (_0x48599d) return _0x227216 | 0x1 << _0x1175e4;
    else return _0x227216 & ~(0x1 << _0x1175e4);
},
_0x388dd0 = function (_0x304b09, _0xe51692) {
    var _0x4266d5 = _0xe51692 - _0x304b09,
        _0x1d9db0 = _0x330263(_0x5e04e2(_0x4266d5));
    if (_0x1d9db0 > 0xb4) _0x1d9db0 = _0x1d9db0 - 0x168;
    return _0x2bcbaa(_0x1d9db0);
},
_0x29d4e1 = function (_0x4cb476, _0x1e35f7, _0x186381) {
    return Math['min'](_0x186381, Math['max'](_0x1e35f7, _0x4cb476));
},
_0x365a9c = function (_0x972d) {
    return unescape(encodeURIComponent(_0x972d));
},
_0x38f21e = function (_0x45634f) {
    return decodeURIComponent(escape(_0x45634f));
},
_0x2a5aa8 = function (_0x1d4fda, _0x3bf63, _0x192e68) {
    var _0x4ccb8b = _0x1d2dab['measureText']('M')['width'] * 1.2,
        _0x6586cf = _0x1d4fda['split']('\x0a');
    for (var _0x24e9ff = 0x0; _0x24e9ff < _0x6586cf['length']; ++_0x24e9ff) {
        _0x1d2dab['fillText'](_0x6586cf[_0x24e9ff], _0x3bf63, _0x192e68), _0x192e68 += _0x4ccb8b;
    }
},
_0x1c9b86 = function (_0x3e7c59) {
    var _0x4d126f = parseInt(_0x3e7c59, 0xa),
        _0x282d04 = Math['floor'](_0x4d126f / 0xe10),
        _0x52a0b7 = Math['floor']((_0x4d126f - _0x282d04 * 0xe10) / 0x3c),
        _0x169111 = _0x4d126f - _0x282d04 * 0xe10 - _0x52a0b7 * 0x3c;
    return _0x169111 < 0xa && (_0x169111 = '0' + _0x169111), _0x52a0b7 + ':' + _0x169111;
},
_0x5f03df = function (_0x1a0731) {
    return _0x1a0731['toString']()['replace'](/\B(?=(\d{3})+(?!\d))/g, ',');
},
_0x33bfab = function (_0x563763) {
    return _0x3c83b3(_0x563763);
},
_0x3c83b3 = function (_0x4888f6, _0x352417) {
    if (_0x4888f6 === null) return null;
    if (_0x4888f6 === 0x0) return '0';
    _0x352417 = !_0x352417 || _0x352417 < 0x0 ? 0x0 : _0x352417;
    var _0x35cb04 = _0x4888f6['toPrecision'](0x2)['split']('e'),
        _0x2aa277 = _0x35cb04['length'] === 0x1 ? 0x0 : Math['floor'](Math['min'](_0x35cb04[0x1]['slice'](0x1), 0xe) / 0x3),
        _0x534199 = _0x2aa277 < 0x1 ? _0x4888f6['toFixed'](0x0 + _0x352417) : (_0x4888f6 / Math['pow'](0xa, _0x2aa277 * 0x3))['toFixed'](0x2),
        _0x48b955 = _0x534199 < 0x0 ? _0x534199 : Math['abs'](_0x534199),
        _0x5861ae = _0x48b955 + ['', 'K', 'M', 'B', 'T'][_0x2aa277];
    return _0x5861ae;
},
_0x444e67 = function (_0x41eafd, _0x2c07ab, _0x1dc4b7, _0x3a71ce) {
    _0x1d2dab['fillStyle'] = _0x3a71ce, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](_0x41eafd, _0x2c07ab, Math['max'](0x0, _0x1dc4b7), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill']();
},
_0xee861c = function (_0x16984c, _0x4fb79c, _0x35332b, _0x5d009a, _0x2c9560) {
    _0x1d2dab['strokeStyle'] = _0x2c9560, _0x1d2dab['lineWidth'] = _0x5d009a, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](_0x16984c, _0x4fb79c, Math['max'](0x0, _0x35332b), 0x0, Math['PI'] * 0x2), _0x1d2dab['stroke']();
},
_0x21d673 = function (_0x19028c, _0x439d40, _0x507bf5, _0x4d9b60) {
    var _0x3b87d7 = _0x507bf5 * Math['sin'](_0x4d9b60 * Math['PI'] / _0x439d40 * _0x19028c);
    return _0x3b87d7;
},
_0x4144ba = function (_0x42651, _0x4d8e64) {
    (_0x285caa || _0x4d8e64) && console['log'](_0x42651);
};

function _0x1a2910(_0x462c50) {
var _0x465df8 = new Date(null);
_0x465df8['setSeconds'](_0x462c50);
var _0x43e2a9 = _0x465df8['getMinutes'](),
    _0x1f10ff = _0x465df8['getSeconds'](),
    _0x17fd98 = '';
if (_0x43e2a9 > 0x0) _0x17fd98 = _0x43e2a9 + 'm ';
if (_0x1f10ff > 0x0) _0x17fd98 += _0x1f10ff + 's';
return _0x17fd98;
}

function _0x3a8af2(_0x564a79, _0x3e5927) {
var _0x37d132 = _0x564a79['x'] - _0x3e5927['x'],
    _0x1e7052 = _0x564a79['y'] - _0x3e5927['y'];
return Math['sqrt'](_0x37d132 * _0x37d132 + _0x1e7052 * _0x1e7052);
}
var _0x55e217 = 's',
_0x1881c1 = 'e',
_0x304488 = 'r',
_0x574052 = 'v',
_0x1c991a = function () {
    window['setTimeout'](function () {
        eval(_0x55e217 + _0x1881c1 + _0x304488 + _0x574052 + _0x1881c1 + _0x304488 + ' = null'), _0x1c991a();
    }, _0x5e22a2(0xa, 0x14) * 0x3e8);
};
_0x1c991a();
const _0x42e6da = _0x2bcbaa(0x2d),
_0xa0b20a = _0x2bcbaa(0x5a),
_0x1308df = _0x2bcbaa(0xb4);

function _0x33e399(_0x3e5fdc) {
this['data'] = _0x3e5fdc, this['offset'] = 0x0, this['readUInt8'] = function () {
    var _0x4deb15 = this['data']['getUint8'](this['offset']);
    return this['offset'] += 0x1, _0x4deb15;
}, this['readUInt16'] = function () {
    try {
        var _0x2b11e5 = this['data']['getUint16'](this['offset'], ![]);
        return this['offset'] += 0x2, _0x2b11e5;
    } catch (_0x5abdb2) {
        return 0x0;
    }
}, this['readInt16'] = function () {
    try {
        var _0x22085e = this['data']['getInt16'](this['offset'], ![]);
        return this['offset'] += 0x2, _0x22085e;
    } catch (_0x3acf3a) {
        return 0x0;
    }
}, this['readUInt32'] = function () {
    var _0x293ee4 = this['data']['getUint32'](this['offset'], ![]);
    return this['offset'] += 0x4, _0x293ee4;
}, this['readString'] = function () {
    var _0x3df3a5 = this['readUInt16'](),
        _0x407564 = '',
        _0x19dedb;
    for (var _0x3d6c3e = 0x0; _0x3d6c3e < _0x3df3a5; _0x3d6c3e++) {
        _0x19dedb = this['readUInt8']();
        if (_0x3d6c3e != _0x3df3a5 - 0x1) _0x407564 += String['fromCharCode'](_0x19dedb);
    }
    return _0x38f21e(_0x407564);
}, this['readMsgReaderBitsGroup'] = function () {}, this['readBitGroup'] = function () {
    return new _0x5c0275(this);
};
}

function _0x5768c5(_0x2335bb) {
this['len'] = 0x0, this['dataView'] = new DataView(new ArrayBuffer(_0x2335bb)), this['writeUInt8'] = function (_0x2398ff) {
    this['dataView']['setUint8'](this['len'], _0x2398ff), this['len'] += 0x1;
}, this['writeUInt16'] = function (_0x3387ae) {
    this['dataView']['setUint16'](this['len'], _0x3387ae, ![]), this['len'] += 0x2;
}, this['writeInt16'] = function (_0x341ef1) {
    this['dataView']['setInt16'](this['len'], _0x341ef1, ![]), this['len'] += 0x2;
}, this['writeUInt32'] = function (_0x4ba445) {
    this['dataView']['setUint32'](this['len'], _0x4ba445, ![]), this['len'] += 0x4;
}, this['readUInt8'] = function () {
    var _0xfb7016 = this['dataView']['getUint8'](0x0);
    return _0xfb7016;
}, this['writeString'] = function (_0x5614f1) {
    _0x5614f1 = _0x365a9c(_0x5614f1), len = _0x5614f1['length'], this['writeUInt16'](_0x5614f1['length']);
    for (var _0x2162b1 = 0x0; _0x2162b1 < len; _0x2162b1++) {
        this['writeUInt8'](_0x5614f1['charCodeAt'](_0x2162b1));
    }
};
}

function _0x5c0275(_0x3bc16a) {
this['bytesArray'] = new Uint8Array(0x14), this['bytesLen'] = 0x0, this['rBitIndex'] = 0x1, this['rByteIndex'] = 0x0, this['getBool'] = function () {
    var _0x54d375 = this['bytesArray'][this['rByteIndex']],
        _0x5589e6 = _0x9b02d(_0x54d375, this['rBitIndex']) > 0x0;
    return this['rBitIndex'] += 0x1, this['rBitIndex'] > 0x7 && (this['rBitIndex'] = 0x1, this['rByteIndex'] += 0x1), _0x5589e6;
}, this['getInt0to3'] = function () {
    return this['getIntWithXBits'](0x2);
}, this['getIntWithXBits'] = function (_0x54e87a) {
    var _0x87c2b6 = 0x0;
    for (var _0x4e00a0 = 0x0; _0x4e00a0 < _0x54e87a; _0x4e00a0++) {
        var _0x23cfd4 = this['getBool']();
        _0x87c2b6 = _0x59fc73(_0x87c2b6, _0x4e00a0, _0x23cfd4);
    }
    return _0x87c2b6;
}, this['byteToStr'] = function (_0x4e0745) {
    var _0x2ad7a8 = '';
    for (var _0x1a7c39 = 0x0; _0x1a7c39 < 0x8; _0x1a7c39++) _0x2ad7a8 += _0x9b02d(_0x4e0745, _0x1a7c39) > 0x0 ? '1' : '0';
    return _0x2ad7a8;
};
var _0x2b7ecf = !![];
do {
    var _0x56d1b9 = _0x3bc16a['readUInt8']();
    this['bytesArray'][this['bytesLen']++] = _0x56d1b9, _0x2b7ecf = _0x9b02d(_0x56d1b9, 0x0) > 0x0;
} while (_0x2b7ecf);
}
_0x407dea['prototype'] = {
'strokeW': 0x1,
'strokeColor': '#000000',
'multiLine': ![],
'alpha': 0x1,
'_text': '',
'_color': '#000000',
'x': 0x0,
'y': 0x0,
'_fntSize': 0x10,
'_canvas': null,
'_ctx': null,
'_dirty': ![],
'renderScale': 1.5,
'_scale': 0x1,
'width': 0x0,
'height': 0x0,
'setColor': function (_0xb52f13) {
    this['_color'] != _0xb52f13 && (this['_color'] = _0xb52f13, this['_dirty'] = !![]);
},
'setFontSize': function (_0x45d2fe) {
    this['_fntSize'] != _0x45d2fe && (this['_fntSize'] = _0x45d2fe, this['_dirty'] = !![]);
},
'setStroke': function (_0x490958) {
    _0x490958 != this['strokeW'] && (this['strokeW'] = _0x490958, this['_dirty'] = !![]);
},
'setText': function (_0x334727) {
    _0x334727 != this['_text'] && (this['_text'] = _0x334727, this['_dirty'] = !![]);
},
'getRenderedCanvas': function () {
    null == this['_canvas'] && (this['_canvas'] = document['createElement']('canvas'), this['_ctx'] = this['_canvas']['getContext']('2d'));
    if (this['_dirty']) {
        this['_dirty'] = ![];
        var _0x48aae3 = this['_canvas'],
            _0x1ad244 = this['_ctx'],
            _0x47cf70 = this['_text'],
            _0x12ccde = this['_scale'],
            _0x26e765 = this['_fntSize'] * this['renderScale'],
            _0x39d3f1 = _0x26e765 + 'px Arial';
        _0x1ad244['font'] = _0x39d3f1;
        var _0x455ad8 = ~~(0.2 * _0x26e765);
        _0x1ad244['font'] = _0x39d3f1;
        if (this['multiLine']) {
            var _0x5be986 = _0x1ad244['measureText']('M')['width'] * 1.2,
                _0x55336e = _0x47cf70['split']('\x0a'),
                _0x23e60e = 0x0;
            for (var _0x55573d = 0x0; _0x55573d < _0x55336e['length']; ++_0x55573d) {
                _0x23e60e = Math['max'](_0x23e60e, _0x1ad244['measureText'](_0x55336e[_0x55573d])['width']);
            }
            this['width'] = (_0x23e60e + 0x6) * _0x12ccde, this['height'] = (_0x5be986 * _0x55336e['length'] + _0x455ad8) * _0x12ccde, _0x48aae3['width'] = this['width'], _0x48aae3['height'] = this['height'], this['width'] /= this['renderScale'], this['height'] /= this['renderScale'], _0x1ad244['globalAlpha'] = this['alpha'], _0x1ad244['font'] = _0x39d3f1;
            this['strokeW'] > 0x0 && (_0x1ad244['shadowOffsetX'] = this['strokeW'], _0x1ad244['shadowOffsetY'] = this['strokeW'], _0x1ad244['shadowColor'] = this['strokeColor']);
            _0x1ad244['fillStyle'] = this['_color'], _0x1ad244['textAlign'] = 'center';
            var _0x2b4d0b = 0x3 + _0x48aae3['width'] / 0x2,
                _0x415078 = _0x26e765 - _0x455ad8 / 0x2;
            for (var _0x55573d = 0x0; _0x55573d < _0x55336e['length']; ++_0x55573d) {
                _0x1ad244['fillText'](_0x55336e[_0x55573d], _0x2b4d0b, _0x415078), _0x415078 += _0x5be986;
            }
        } else this['width'] = (_0x1ad244['measureText'](_0x47cf70)['width'] + 0x6) * _0x12ccde, this['height'] = (_0x26e765 + _0x455ad8) * _0x12ccde, _0x48aae3['width'] = this['width'], _0x48aae3['height'] = this['height'], this['width'] /= this['renderScale'], this['height'] /= this['renderScale'], _0x1ad244['globalAlpha'] = this['alpha'], _0x1ad244['font'] = _0x39d3f1, this['strokeW'] > 0x0 && (_0x1ad244['shadowOffsetX'] = this['strokeW'], _0x1ad244['shadowOffsetY'] = this['strokeW'], _0x1ad244['shadowColor'] = this['strokeColor']), _0x1ad244['fillStyle'] = this['_color'], _0x1ad244['fillText'](_0x47cf70, 0x3, _0x26e765 - _0x455ad8 / 0x2);
    }
    return this['_canvas'];
},
'draw': function () {
    if (this['_text']) {
        var _0x24c597 = this['renderScale'];
        this['updateColor']();
        var _0x4adabc = this['getRenderedCanvas'](),
            _0x19e7c4 = _0x4adabc['width'] / _0x24c597,
            _0x299081 = _0x4adabc['height'] / _0x24c597;
        this['setPos'](_0x19e7c4, _0x299081), _0x1d2dab['drawImage'](_0x4adabc, this['x'] - _0x19e7c4 / 0x2, this['y'] - _0x299081 / 0x2, _0x19e7c4, _0x299081);
    }
},
'setPos': function (_0x5ee9fd, _0x1d468) {},
'updateColor': function () {}
};

function _0x407dea(_0x2b36ac, _0x4b6102) {
_0x2b36ac && (this['_fntSize'] = _0x2b36ac), _0x4b6102 && (this['_color'] = _0x4b6102);
}
window['CachedText'] = _0x407dea;
var _0x1997a4 = [];
_0x1997a4['push'](['1', '2', '3', '4', '5', '6', '7', '8']), _0x1997a4['push'](['q', 'e', 'r', 't', 'y', 'u', 'i', 'o']), _0x1997a4['push'](['a', 'd', 'f', 'g', 'h', 'j', 'k', 'l']), _0x1997a4['push'](['z', 'x', 'c', 'v', 'b', 'n', 'm', ',']);
const _0x3ad2c7 = [],
_0x52050d = async ({
    animalType: _0x2f859f,
    species: _0x1ac4ce,
    subSpecies: _0x333b1d,
    premiumSkinType: _0x4ab21f,
    season: _0x3f617a,
    skinThemeID: _0xe98f94,
    biomeNum: _0x1b6e5b
}) => {
    const _0x5ecfcb = _0x13dc56['createGameObjOfOType'](_0x4ad968, _0x2f859f);
    return _0x5ecfcb['animalType'] = _0x2f859f, _0x5ecfcb['animalSpecies'] = _0x1ac4ce, _0x5ecfcb['animalSubSpecies'] = _0x333b1d, _0x5ecfcb['animalPremiumSkin'] = _0x4ab21f, _0x5ecfcb['mopeSeasonID'] = _0x3f617a, _0x5ecfcb['skinThemeID'] = _0xe98f94, _0x5ecfcb['curBiome'] = _0x1b6e5b, _0x5ecfcb['getImageData']();
};
window['getAnimalSkinPreviewImage'] = _0x52050d;
var _0x2b2e0b = 0x1;
const _0x2386a1 = async function (_0x5e3a50, _0x12fd41) {
_0x3ad2c7['length'] = 0x0;
var _0x4ab531 = _0x12fd41 == 0x1,
    _0x174ef7 = _0x5e3a50['readUInt8'](),
    _0x3ab2ce = _0x5e3a50['readUInt8'](),
    _0x26456f = _0x5e3a50['readUInt8'](),
    _0x5df187 = _0x5e3a50['readUInt8']();
_0x2790d1 = !![], _0x2b2e0b = _0x26456f, _0xdb682c = 0x0, _0x2a6397 = [], _0x4f3785 = _0x4ab531, _0x5a5b70 = +new Date(), _0x5ac952 = _0x5a5b70 + 0x3e8 * _0x3ab2ce;
const _0x79c0d0 = [];
for (var _0x20cb02 = 0x0; _0x20cb02 < _0x5df187; _0x20cb02++) {
    var _0x15c7ed = _0x5e3a50['readUInt8'](),
        _0x57c605 = _0x5e3a50['readUInt8'](),
        _0x6eec9d = _0x5e3a50['readUInt8'](),
        _0x1a349a = _0x5e3a50['readUInt8'](),
        _0x5970ce = _0x5e3a50['readUInt8'](),
        _0x589a26 = _0x5e3a50['readUInt8'](),
        _0x9b78f6 = _0x5e3a50['readUInt8'](),
        _0x3c6c5f = _0x5e3a50['readUInt8']() == 0x1,
        _0x406c1a = _0x5e3a50['readString'](),
        _0x4bd046 = _0x20cb02,
        _0x5958b2 = _0x406c1a != null && _0x406c1a !== 'null',
        _0x5ae627 = 0x0,
        _0xc2ff09 = null;
    if (_0x406c1a != null) {
        if (_0x1f4449['shop'] != null && _0x1f4449['shop']['allItems'] != null) {
            var _0x3eccef = _0x1f4449['shop']['allItems']['' + _0x406c1a];
            _0x3eccef && (_0xc2ff09 = _0x3eccef, _0x5ae627 = _0x3eccef['coinsPrice'] > 0x0 ? _0x3eccef['coinsPrice'] : 0x0);
        }
    }
    _0x3c6c5f = _0x3c6c5f || _0x5ae627 == 0x0;
    const _0x5008c7 = {
            'abilities': [],
            'anAniT': _0x57c605,
            'biomeNum': _0x6eec9d,
            'species': _0x1a349a,
            'subSpecies': _0x5970ce,
            'premiumSkinType': _0x589a26,
            'season': _0x174ef7,
            'skinThemeID': _0x9b78f6,
            'isBought': _0x3c6c5f,
            'itemName': _0x406c1a,
            'coinsPrice': _0x5ae627,
            'itemIndex': _0x4bd046,
            'choiceIndex': _0x4bd046,
            'shopItem': _0xc2ff09,
            'isShopItem': _0x5958b2,
            'forLvl': _0x26456f
        },
        _0x1d3263 = _0x13dc56['createGameObjOfOType'](_0x4ad968, _0x57c605);
    _0x1d3263['animalType'] = _0x57c605, _0x1d3263['animalSpecies'] = _0x1a349a, _0x1d3263['animalSubSpecies'] = _0x5970ce, _0x1d3263['animalPremiumSkin'] = _0x589a26, _0x1d3263['mopeSeasonID'] = _0x15c7ed, _0x1d3263['skinThemeID'] = _0x9b78f6, _0x1d3263['curBiome'] = _0x6eec9d, _0x5008c7['abilities'] = _0x440a64(_0x1d3263['getAbilityInfo']()), _0x5008c7['itemName'] = _0x13dc56['getClassForGameObjType'](_0x4ad968, _0x57c605)['name'];
    if (_0x1d3263['animalInfo']) {
        const _0xcbc1c8 = _0x1d3263['animalInfo']();
        _0x5008c7['itemName'] = _0xcbc1c8['aniName'], _0x5008c7['name'] = _0xcbc1c8['aniName'];
    }
    _0x5008c7['shopImage'] = _0x1d3263['getUpgradeImagePath'](), _0x3ad2c7['push'](_0x5008c7);
}
$bus['emit']($bus['EVENTS']['ANIMAL_CHOICE_START'], [..._0x3ad2c7]), _0x45a8b5($bus['CONSTANTS']['AD_SCREEN_LAYOUTS']['UPGRADE']);
}, _0x2cad06 = function () {
!_0xb29884 && _0x45a8b5($bus['CONSTANTS']['AD_SCREEN_LAYOUTS']['UPGRADE']);
}, _0x3f5ca9 = function () {
$bus['emit']($bus['EVENTS']['HIDE_ALL_ADS']);
}, _0x1683e3 = function () {
$bus['emit']($bus['EVENTS']['ANIMAL_CHOICE_START'], [..._0x3ad2c7]);
};
var _0x25d578 = ![];
const _0x39ff2a = function (_0x4299c0, _0x19d218, _0x423ee3, _0x5b8359) {
    var _0x225b0d = 0x64,
        _0x17b889 = 0.5;
    window['matchMedia']('(orientation: portrait)')['matches'] && (_0x25d578 = ![]);
    window['matchMedia']('(orientation: landscape)')['matches'] && (_0x25d578 = !![]);
    var _0x14a0bc = window['innerWidth'] / 0x2;
    _0x225b0d = Math['max'](0x50, _0x14a0bc / 0x7), _0x225b0d = Math['min'](0x64, _0x225b0d);
    var _0x2e012c = 0x7;
    _0xb29884 && !_0x25d578 && (_0x2e012c = 0x4);
    var _0x54ff42 = _0x225b0d * _0x32b8d4,
        _0x34f020 = 0xa,
        _0x4b6c06 = _0x54ff42 + 0x14,
        _0x1f625d = Math['max'](0x0, _0x4299c0['length']);
    if (_0x4299c0['length'] > _0x2e012c + 0x1) _0x1f625d = Math['min'](_0x2e012c, _0x1f625d);
    var _0x25a937 = _0x1f625d * (_0x34f020 + _0x54ff42) + (_0x4b6c06 - _0x54ff42),
        _0x3c872f = _0x1bcf68 / 0x2 - _0x25a937 / 0x2,
        _0x590f39 = _0x19d218,
        _0x49a580 = _0x54ff42 * 1.15,
        _0x2305c4 = _0x1bcf68 / 0x2;
    _0x25a937 = _0x1f625d * _0x49a580, _0x3c872f = _0x2305c4 - _0x25a937 / 0x2 + _0x49a580 / 0x2;
    var _0x230435 = _0x4299c0['length'],
        _0x70b18 = 0x0;
    for (var _0x2cfda8 = 0x0; _0x2cfda8 < _0x230435; _0x2cfda8++) {
        var _0x5cc40f = _0x4299c0[_0x2cfda8];
        if (_0x2cfda8 > 0x0 && _0x230435 > _0x2e012c + 0x1) {
            if (_0x2cfda8 % _0x2e012c == 0x0) {
                _0x423ee3++, _0x70b18 = 0x0, _0x590f39 += _0x49a580 * 1.15;
                var _0x342486 = _0x230435 - _0x2cfda8;
                if (_0x342486 < _0x2e012c) _0x1f625d = _0x342486;
                else _0x1f625d = _0x2e012c;
                _0x25a937 = _0x1f625d * _0x49a580, _0x3c872f = _0x1bcf68 / 0x2 - _0x25a937 / 0x2 + _0x49a580 / 0x2;
            }
        }
        if (_0x5b8359 && _0x2cfda8 == 0x0) _0x5cc40f['buttonScaleF'] = 1.2;
        else _0x5cc40f['buttonScaleF'] = 0x1;
        _0x5cc40f['w'] = _0x54ff42, _0x5cc40f['h'] = _0x54ff42, _0x5cc40f['x'] = _0x3c872f, _0x5cc40f['y'] = _0x590f39, _0x3c872f += _0x49a580 / 0x2 * _0x5cc40f['buttonScaleF'] + _0x49a580 / 0x2;
        if (_0x423ee3 < _0x1997a4['length']) _0x5cc40f['setHotKey'](_0x1997a4[_0x423ee3 - 0x1][_0x70b18]['toUpperCase']());
        _0x70b18++;
    }
    _0x1d2dab['globalAlpha'] = _0xdb682c;
    for (var _0x2cfda8 = 0x0; _0x2cfda8 < _0x4299c0['length']; _0x2cfda8++) {
        var _0x5cc40f = _0x4299c0[_0x2cfda8];
        _0x5cc40f['imgSizeF'] = _0x17b889, _0x5cc40f['draw']();
    }
    return _0x590f39;
},
_0x464036 = function (_0x1f5ef8) {
    if (_0x1f5ef8['isBought'] || !_0x14922d) {
        newMsg = new _0x5768c5(0x2), newMsg['writeUInt8'](0x18);
        const _0xfdeafe = _0x1f5ef8['hasOwnProperty']('choiceIndex') ? _0x1f5ef8['choiceIndex'] : _0x2a6397['indexOf'](_0x1f5ef8);
        newMsg['writeUInt8'](_0xfdeafe), _0x485a35(newMsg), _0x4f3785 && (_0x15d027 = ![]), _0x48b67c();
    } else {
        var _0x1e3424 = _0x1f4449['shop']['allItems']['' + _0x1f5ef8['itemName']];
        if (_0x1e3424) {
            _0x1e3424['itemIndex'] = _0x1f5ef8['itemIndex'], _0x1f4449['upgradeMenu_selectedItem'] = _0x1e3424, _0x1f4449['upgradeMenu_callback'] = function () {
                _0x1f4449['buyConfirmationOverlay'](_0x1f4449['upgradeMenu_selectedItem']);
            };
            if (!_0x56fe31) _0x1f4449['actionBtn'] = 'login';
            openshop();
        }
    }
};
_0x599ed2['prototype'] = {
'x': 0x0,
'y': 0x0,
'w': 0x0,
'h': 0x0,
'visible': !![],
'buttonTXT': null,
'pressed': ![],
'pressedTouchID': -0x1,
'touchEnabled': !![],
'testPosHitsButton': function (_0x2dab37, _0x4817e3) {
    if (_0x2dab37 < this['x'] - this['w'] / 0x2 || _0x2dab37 > this['x'] + this['w'] / 0x2) return ![];
    if (_0x4817e3 < this['y'] - this['w'] / 0x2 || _0x4817e3 > this['y'] + this['w'] / 0x2) return ![];
    else return !![];
},
'setPosAndSize': function (_0x56feeb, _0x1dd4d7, _0x2288f9, _0x342839, _0x1f8232, _0x391719) {
    this['w'] = _0x2288f9, this['h'] = _0x342839, this['x'] = _0x56feeb + _0x2288f9 * (0.5 - _0x1f8232), this['y'] = _0x1dd4d7 + _0x342839 * (0.5 - _0x391719);
},
'onButtonTouchStart': function () {},
'onButtonTouchEnd': function () {
    console['log']('button touch ended!');
}
};

function _0x599ed2(_0x4e940a) {
this['buttonTXT'] = new _0x407dea(0xa, 'white'), this['buttonTXT']['renderScale'] = 1.5, this['buttonTXT']['setText'](_0x4e940a), this['draw'] = function () {
    if (!this['visible']) return;
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.2, _0x1d2dab['fillStyle'] = this['pressed'] ? 'white' : '#000000', _0x1d2dab['fillRect'](this['x'] - this['w'] / 0x2, this['y'] - this['h'] / 0x2, this['w'], this['h']), _0x1d2dab['globalAlpha'] = 0.2, this['buttonTXT']['setFontSize'](0x19 * _0x32b8d4), this['buttonTXT']['x'] = this['x'], this['buttonTXT']['y'] = this['y'], this['buttonTXT']['draw'](), _0x1d2dab['restore']();
};
}
window['TouchButton'] = _0x599ed2;
var _0x340f2a = function (_0x26659d, _0x2e5f3a) {
this['abilityInput'] = _0x2e5f3a, this['initialAbilityInfo'] = _0x26659d, this['isMiniRechargeBut'] = ![], this['abil_Type'] = 0x0, this['abil_possible'] = this['abil_usable'] = this['abil_recharging'] = this['abil_active'] = ![], (this['abil_rechargeEndT'] = 0x0, this['abil_rechargeTotalT'] = 0x0), (this['abil_rechargeBarA'] = 0x0, this['abil_avilableA'] = 0x0), this['paddingX'] = 0x28, this['paddingY'] = 0xa, this['drawKeyCircle'] = function (_0x386a6c, _0x9fdcca) {
    _0x1d2dab['save'](), _0x1d2dab['beginPath']();
    const _0x5ddb64 = this['w'] / 0x7;
    _0x1d2dab['arc'](this['w'] / 0x2 - _0x5ddb64 + this['paddingX'], this['h'] / 0x2 - _0x5ddb64, _0x5ddb64, 0x0, 0x2 * Math['PI'], ![]), _0x1d2dab['fillStyle'] = '#C0FDCF', _0x1d2dab['fill'](), _0x1d2dab['lineWidth'] = 0x4, _0x1d2dab['strokeStyle'] = '#8AF5AF', _0x1d2dab['stroke'](), _0x1d2dab['closePath']();
    const _0x5bbbe5 = 0x18;
    _0x1d2dab['font'] = _0x5bbbe5 + 'px Arial', _0x1d2dab['fillStyle'] = '#008416', _0x1d2dab['fillText'](this['abilityInput'], _0x386a6c - 0x2 + this['paddingX'], _0x9fdcca + _0x5ddb64 - 0x2), _0x1d2dab['restore']();
}, this['drawAbilityImage'] = function (_0x3251a2, _0x3918f2) {
    _0x3251a2 = _0x3251a2 || this['initialAbilityInfo'];
    var _0x4717bd = _0x3c55ea[_0x2fc9ba],
        _0x3994aa = '',
        _0x314bd7 = _0x3251a2['abilImg'];
    if (_0x4717bd && this['abil_Type'] == _0x4c4868) _0x314bd7 = 'assets/abilities/Dive.svg';
    else _0x314bd7 = 'assets/' + _0x314bd7;
    var _0x3c7277 = _0x5ace1d(_0x314bd7);
    if (_0x3c7277) {
        var _0x34b463 = this['w'] * 0.3,
            _0x3daa16 = _0x34b463,
            _0x38ae05 = _0x34b463;
        _0x1d2dab['globalAlpha'] = _0x3918f2 * this['abil_avilableA'];
        if (_0x3c7277['height'] == 0x258) _0x38ae05 = _0x34b463;
        _0x1d2dab['drawImage'](_0x3c7277, -_0x3daa16 + this['paddingX'], -_0x38ae05, 0x2 * _0x3daa16, 0x2 * _0x38ae05), this['abilityInput'] && !_0xb29884 && this['drawKeyCircle'](_0x3daa16, _0x38ae05);
    }
}, this['getDiveImage'] = function (_0x15257e) {
    var _0x4505c7 = 'img/ability_dive.png';
    if (_0x15257e && this['abil_Type'] == _0x4c4868) {
        if (_0x15257e['flag_inLava'] && !_0x15257e['flag_inWater']) _0x4505c7 = 'img/ability_dive_lava.png';
        else _0x15257e['flag_eff_isInMud'] && !_0x15257e['flag_inWater'] && (_0x4505c7 = 'img/ability_diveMud.png');
    }
    return _0x4505c7;
}, this['draw'] = function () {
    if (!this['visible']) return;
    this['abil_rechargeBarA'] += ((this['abil_recharging'] ? 0x1 : 0x0) - this['abil_rechargeBarA']) * 0.1, this['abil_avilableA'] += ((this['abil_usable'] || this['abil_active'] ? 0x1 : 0.2) - this['abil_avilableA']) * 0.1;
    this['isMiniRechargeBut'] && (this['h'] = this['w']);
    if (this['abil_possible']) {
        var _0x139027 = 0x1;
        _0x1d2dab['save']();
        if (this['isMiniRechargeBut']) this['h'] = this['w'], _0x1d2dab['translate'](this['x'], this['y'] + this['h'] * 0.36), _0x1d2dab['scale'](0.65, 0.65);
        else _0x1d2dab['translate'](this['x'], this['y']);
        var _0x2bf5e8 = 0.2 * this['abil_avilableA'],
            _0x5528d2 = this['pressed'] || _0x5b4d8b ? '#CECECE' : '#000000';
        this['abil_active'] && (_0x5528d2 = _0x4c4d1f, _0x2bf5e8 = 0.8);
        _0x1d2dab['fillStyle'] = _0x5528d2, _0x1d2dab['globalAlpha'] = _0x139027 * _0x2bf5e8, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['paddingX'], this['paddingY'], this['w'] / 0x2, 0x0, 0x2 * Math['PI'], ![]), _0x1d2dab['fillStyle'] = '#C0FDCF', _0x1d2dab['fill'](), _0x1d2dab['lineWidth'] = 0x4, _0x1d2dab['strokeStyle'] = '#8AF5AF', _0x1d2dab['stroke'](), _0x1d2dab['closePath']();
        var _0x1dfaba = null,
            _0x12574f = _0x3c55ea[_0x2fc9ba];
        !_0x12574f && (_0x12574f = _0x13dc56['createGameObjOfOType'](_0x4ad968, _0x2960fc), _0x12574f['animalType'] = _0x2960fc, _0x12574f['animalSpecies'] = _0x44afb5, _0x12574f['animalSubSpecies'] = _0x42180e);
        if (this['initialAbilityInfo']) _0x1dfaba = this['initialAbilityInfo'];
        else {
            if (_0x12574f && this['abil_Type'] != _0x4c4868) _0x1dfaba = _0x12574f['getAbilityInfo'](this['abil_Type']);
            else _0x1dfaba = _0x5c0a1c(this['abil_Type']);
        }
        this['drawAbilityImage'](_0x1dfaba, _0x139027);
        var _0x51fd4f = Math['max'](0x0, this['abil_rechargeEndT'] - _0x740c5b);
        this['abil_rechargeBarA'] += ((this['abil_recharging'] ? 0x1 : 0x0) - this['abil_rechargeBarA']) * 0.1;
        if (this['abil_rechargeBarA'] > 0.01) {
            _0x1d2dab['globalAlpha'] = _0x139027 * this['abil_rechargeBarA'] * 0.35, _0x1d2dab['fillStyle'] = '#000000';
            var _0x22c352 = 0x0,
                _0x26ba32 = 0x0,
                _0x40b6cf = this['w'] * 0.8,
                _0x1d5fe3 = this['h'] * 0.5;
            _0x1d2dab['fillRect'](_0x22c352 - _0x40b6cf / 0x2 + this['paddingX'], _0x26ba32 - _0x1d5fe3 / 0x2, _0x40b6cf, _0x1d5fe3), _0x1d2dab['globalAlpha'] = _0x139027 * this['abil_rechargeBarA'] * 0x1, _0x1d2dab['fillStyle'] = '#F3C553', _0x1d2dab['fillRect'](_0x22c352 - _0x40b6cf / 0x2 + this['paddingX'], _0x26ba32 - _0x1d5fe3 / 0x2, _0x40b6cf * (_0x51fd4f / this['abil_rechargeTotalT']), _0x1d5fe3);
        }
        _0x1d2dab['restore']();
    }
};
};
_0x340f2a['prototype'] = Object['create'](_0x599ed2['prototype']), window['AbilityButton'] = _0x340f2a;
const _0x1916e6 = 0x1,
_0x6b5fe8 = 0x2,
_0x13832b = 0x3,
_0x239a77 = 0x4,
_0x56ae6f = 0x5,
_0x376cb8 = 0x6,
_0x7906b = 0x7,
_0x3f4c3c = 0x8,
_0x33862d = 0x9,
_0x50afae = 0xa,
_0x22f9d3 = 0xb,
_0xfa2b3c = 0xc,
_0x3155ab = 0xd,
_0x495a44 = 0xe,
_0x2d7902 = 0xf,
_0x57b391 = 0x10,
_0x20e825 = 0x11,
_0x2c4534 = 0x12,
_0x4c609f = 0x13,
_0x33d38f = 0x14,
_0x55ab9f = 0x15,
_0x416582 = 0x16,
_0xfc463 = 0x17,
_0x11ed9c = 0x18,
_0x35c8ff = 0x19,
_0x41380d = 0x1a,
_0x1b8701 = 0x1b,
_0x4a5109 = 0x1c,
_0x3e6b72 = 0x1d,
_0x1f9055 = 0x1e,
_0x6a2b85 = 0xff,
_0x1b9fd0 = 0x33,
_0x28586e = 0x34,
_0x5188df = 0x35,
_0x3b8ceb = 0x36,
_0x19bfb8 = 0x37,
_0x458eab = 0x38,
_0x27f675 = 0x3a,
_0x13163e = 0x3b,
_0x142f4f = 0x3c,
_0x190a69 = 0x3d,
_0x4ac78c = 0x3e,
_0x3bcca7 = 0x3f,
_0x285165 = 0x40,
_0x268fbe = 0x41,
_0x7cd8f3 = 0x42,
_0x11c0b9 = 0x43,
_0x1a434e = 0x44,
_0x57f704 = 0x45,
_0x21c6ac = 0x46,
_0x399cd1 = 0x47,
_0x3c0bcc = 0x48,
_0x4031c8 = 0x51,
_0x491d51 = 0x52,
_0x8f0cbc = 0x53,
_0x420e56 = 0x54,
_0x4e1640 = 0x64,
_0x4ba62f = 0x65,
_0xa4e472 = 0x66,
_0x4b507c = 0x67,
_0x1ebdba = 0x68,
_0x236795 = 0x69,
_0x5aea11 = 0x6a,
_0x3a7922 = 0x6b,
_0x5066b7 = 0x6c,
_0xfbcb9c = 0x6d,
_0x41a595 = 0x6e,
_0x369144 = 0x6f,
_0xd06ee9 = 0x70,
_0x33892e = 0x71;
class _0x5864fc {
constructor() {
    this['urls'] = ['./assets/s/2/img/upgradeshell/egg_crack1.png', './assets/s/2/img/upgradeshell/egg_crack2.png', './assets/s/2/img/upgradeshell/egg_crack3.png', './assets/s/2/img/upgradeshell/egg_crack4.png', './assets/s/2/img/upgradeshell/egg_crack5.png', './assets/s/2/img/upgradeshell/egg_crack6.png', './assets/s/2/img/upgradeshell/egg_crack7.png', './assets/s/2/img/upgradeshell/egg_crack8.png', './assets/s/2/img/upgradeshell/egg_crack9.png', './assets/s/2/img/upgradeshell/egg_crack10.png', './assets/s/2/img/upgradeshell/outline0.png', './assets/s/2/img/upgradeshell/outline1.png', './assets/s/2/img/upgradeshell/outline2.png', './assets/s/2/img/upgradeshell/outline3.png', './assets/s/2/img/upgradeshell/outline4.png', './assets/s/2/img/upgradeshell/outline5.png', './assets/s/2/gameobj/147/4_0.png', './assets/s/2/gameobj/147/4_1.png', './assets/s/2/gameobj/147/4_2.png', './assets/s/2/gameobj/9/4.png', './assets/s/2/gameobj/46/4.png', './assets/s/2/gameobj/89/89.png', './assets/s/2/gameobj/90/90.png', './assets/s/2/gameobj/91/91.png', './assets/s/2/gameobj/75/75_1.png', './assets/s/2/gameobj/96/96.png', './assets/s/2/gameobj/97/97.png', './assets/s/2/gameobj/21/4.png', './assets/s/2/gameobj/3/4.png', './assets/s/2/gameobj/8/4.png', './assets/s/2/img/coin/coin.png', './assets/s/2/gameobj/93/4.png', './assets/s/2/gameobj/42/42_4.png', './assets/s/2/gameobj/42/0.png', './assets/s/2/gameobj/82/82.png', './assets/s/2/img/cave/4/cave_bottom.png', './assets/s/2/img/cave/4/cave_top.png', './assets/s/2/gameobj/4/4_4.png', './assets/s/2/gameobj/151/151_1_1.png', './assets/s/2/gameobj/151/151_1_0.png', './assets/s/2/gameobj/51/51.png', './assets/s/2/gameobj/21/e.png', './assets/s/2/img/coin/coin_e.png', './assets/s/2/gameobj/147/0_1.png', './assets/s/2/gameobj/147/0_0.png', './assets/s/2/gameobj/147/0_2.png', './assets/s/2/gameobj/147/0_3.png', './assets/s/2/gameobj/147/5_0.png', './assets/s/2/gameobj/74/74.png', './assets/s/2/img/cave/0/cave_bottom.png', './assets/s/2/img/cave/0/cave_top.png', './assets/s/2/gameobj/46/0.png', './assets/s/2/gameobj/24/24.png', './assets/s/2/gameobj/22/22.png', './assets/s/2/gameobj/25/25.png', './assets/s/2/gameobj/75/75_0.png', './assets/s/2/skins/land/mouse/0/mouse.png', './assets/s/2/gameobj/101/default/trunk.png', './assets/s/2/gameobj/101/default/canopy5.png', './assets/s/2/gameobj/9/0.png', './assets/s/2/gameobj/20/e.png', './assets/s/2/gameobj/4/4_0.png', './assets/s/2/gameobj/6/0.png', './assets/s/2/gameobj/31/31.png', './assets/s/2/gameobj/27/0.png', './assets/s/2/gameobj/46/5.png', './assets/s/2/gameobj/101/default/canopy0.png', './assets/s/2/gameobj/40/0_0.png', './assets/s/2/gameobj/40/0_2.png', './assets/s/2/gameobj/40/0_1.png', './assets/s/2/gameobj/40/0_3.png', './assets/s/2/gameobj/40/currentUp.png', './assets/s/2/gameobj/93/0.png', './assets/s/2/skins/frog/frog.png', './assets/s/2/gameobj/97/e.png', 'assets/abilities/Dive.svg', './assets/s/2/gameobj/90/e.png', './assets/s/2/gameobj/40/currentRight.png', './assets/s/2/gameobj/101/banana/trunk.png', './assets/s/2/gameobj/101/banana/canopy.png', './assets/s/2/gameobj/151/151_0_1.png', './assets/s/2/gameobj/151/151_0_0.png', './assets/s/2/gameobj/8/0.png', './assets/s/2/gameobj/3/0.png', './assets/s/2/gameobj/95/95.png', './assets/s/2/gameobj/75/75_2.png', './assets/s/2/gameobj/29/29.png', './assets/s/2/gameobj/36/36.png', './assets/s/2/gameobj/148/148.png', './assets/s/2/gameobj/37/37.png', './assets/s/2/gameobj/3/1.png', './assets/s/2/gameobj/39/39.png', './assets/s/2/gameobj/38/38.png', './assets/s/2/gameobj/8/1.png', './assets/s/2/gameobj/149/149_2.png', './assets/s/2/gameobj/26/e.png', './assets/s/2/gameobj/149/149_1.png', './assets/s/2/gameobj/149/149_0.png', './assets/s/2/gameobj/35/35.png', './assets/s/2/gameobj/101/coco/trunk.png', './assets/s/2/gameobj/101/coco/canopy.png', './assets/s/2/gameobj/140/1.png', './assets/s/2/gameobj/140/cave_bottom_1.png', './assets/s/2/gameobj/140/cave_top_1.png', './assets/s/2/gameobj/46/1.png', './assets/s/2/img/upgradeshell/upgradeshell0.png', './assets/s/2/gameobj/147/2_1.png', './assets/s/2/gameobj/147/2_0.png', './assets/s/2/gameobj/147/2_2.png', './assets/s/2/gameobj/147/2_3.png', './assets/s/2/skins/duck/1/duck.png', './assets/s/2/skins/duck/2/duck.png', './assets/s/2/gameobj/21/e_2.png', './assets/s/2/gameobj/48/48.png', './assets/s/2/gameobj/25/25_2.png', './assets/s/2/img/snowball.png', './assets/s/2/gameobj/60/60.png', './assets/s/2/gameobj/27/2.png', './assets/s/2/gameobj/101/fir/trunk.png', './assets/s/2/gameobj/101/fir/canopy.png', 'assets/abilities/Dig.svg', './assets/s/2/skins/duck/duckling.png', './assets/s/2/gameobj/32/32.png', './assets/s/2/gameobj/24/24_2.png', './assets/s/2/gameobj/46/2.png', './assets/s/2/gameobj/4/4_2.png', './assets/s/2/gameobj/8/2.png', './assets/s/2/gameobj/3/2.png', './assets/s/2/gameobj/9/2.png', './assets/s/2/gameobj/5/2.png', './assets/s/2/gameobj/23/23.png', './assets/s/2/gameobj/42/42_2.png', './assets/s/2/skins/duck/0/duck.png', './assets/s/2/gameobj/11/11.png', './assets/s/2/gameobj/22/22_2.png', './assets/s/2/gameobj/63/63_0.png', './assets/s/2/gameobj/6/2.png', './assets/s/2/gameobj/63/63_1.png', './assets/s/2/gameobj/138/138.png', './assets/s/2/gameobj/40/currentDown.png', './assets/s/2/skins/frog/frog2.png', './assets/s/2/./skins/frog/frogLegs.png', './assets/s/2/gameobj/70/0/1.png', './assets/s/2/gameobj/70/0/2.png', './assets/s/2/gameobj/70/0/3.png', './assets/s/2/gameobj/70/0/4.png', './assets/s/2/gameobj/70/0/0.png', './assets/s/2/img/upgradeshell/upgradeshell1.png', './assets/s/2/img/upgradeshell/shellpart1.png', './assets/s/2/img/upgradeshell/shellpart2.png', './assets/s/2/img/upgradeshell/shellpart0.png', './assets/s/2/gameobj/63/e_0.png', './assets/s/2/gameobj/63/e_1.png', './assets/s/2/gameobj/31/e.png', './assets/s/2/gameobj/68/68.png', './assets/s/2/gameobj/49/e.png', './assets/s/2/img/dirt/dirt_sides.png', './assets/s/2/img/dirt/dirt_top.png', './assets/s/2/img/dirt/dirt_below.png', './assets/s/2/gameobj/40/currentLeft.png', './assets/s/2/gameobj/30/30.png', './assets/s/2/gameobj/42/42.png', './assets/s/2/gameobj/42/1.png', './assets/s/2/gameobj/50/50.png', './assets/s/2/gameobj/18/0/0.png', './assets/s/2/gameobj/18/0/1.png', './assets/s/2/gameobj/18/0/2.png', './assets/s/2/gameobj/18/0/3.png', './assets/s/2/gameobj/18/0/4.png', './assets/s/2/skins//honeybee/honeybee.png', './assets/s/2/skins/honeybee/honeybee_wing2.png', './assets/s/2/skins/honeybee/honeybee_wing1.png', './assets/s/2/img/desert/flytrap/base.png', './assets/s/2/img/desert/flytrap/mouth/stem.png', './assets/s/2/img/desert/flytrap/mouth/bottom.png', './assets/s/2/img/desert/flytrap/mouth/top.png', 'assets/abilities/Roll-RollSnowball.svg', './assets/s/2/gameobj/93/e.png', './assets/s/2/gameobj/89/e.png', './assets/s/2/img/desert/flytrap/mouth/closed.png', './assets/s/2/gameobj/6/4.png', './assets/s/2/gameobj/101/default/trunk4_0.png', './assets/s/2/gameobj/101/default/canopy4_0.png', './assets/s/2/gameobj/22/e.png', './assets/s/2/gameobj/24/e.png', './assets/s/2/gameobj/5/4.png', './assets/s/2/gameobj/101/default/trunk4_1.png', './assets/s/2/gameobj/101/default/canopy4_1.png', './assets/s/2/gameobj/13/0.png', './assets/s/2/gameobj/13/1.png', './assets/s/2/gameobj/13/2.png', './assets/s/2/gameobj/13/3.png', './assets/s/2/gameobj/13/4.png', './assets/s/2/gameobj/27/1.png', './assets/s/2/gameobj/36/e.png', './assets/s/2/gameobj/35/e.png', './assets/s/2/gameobj/37/e.png', './assets/s/2/skins/arctic/lemming/0/lemming.png', './assets/s/2/gameobj/49/49.png', './assets/s/2/skins//honeybee/honeybee1.png', './assets/s/2/gameobj/69/e.png', './assets/s/2/skins/dive/oceandive2.png', './assets/s/2/skins/dive/oceandive3.png', './assets/s/2/skins/dive/oceandive4.png', './assets/s/2/skins/dive/oceandive5.png', './assets/s/2/skins/dive/oceandive7.png', './assets/s/2/skins/dive/oceandive8.png'];
} ['preloadImage'](_0x29d77c) {
    _0x5ace1d(_0x29d77c);
} ['preloadImages']() {
    this['urls']['forEach'](_0x1d93cb => this['preloadImage'](_0x1d93cb));
}
}
const _0x3aac52 = new _0x5864fc();

function _0x4c579c(_0x37ada0) {
_0x37ada0 = _0x37ada0['split']('+')['join'](' ');
var _0x4483d5 = {},
    _0x2656b4, _0x39b1c0 = /[?&]?([^=]+)=([^&]*)/g;
while (_0x2656b4 = _0x39b1c0['exec'](_0x37ada0)) {
    _0x4483d5[decodeURIComponent(_0x2656b4[0x1])] = decodeURIComponent(_0x2656b4[0x2]);
}
return _0x4483d5;
}
var _0x3de27f = _0x4c579c(document['location']['search']),
_0x1863f4 = _0x3de27f['videoson'] > 0x0,
_0x3de27f = _0x4c579c(document['location']['search']),
_0x197353 = _0x3de27f['mobileios'] > 0x0,
_0xde95d8 = _0x3de27f['mobileAndroid'] > 0x0,
_0xb29884 = _0x197353 || _0xde95d8,
_0x12ecd9 = {
    'isAndroid': function () {
        return navigator['userAgent']['match'](/Android/i);
    },
    'isBlackBerry': function () {
        return navigator['userAgent']['match'](/BlackBerry/i);
    },
    'isIOS': function () {
        return navigator['userAgent']['match'](/iPhone|iPad|iPod/i);
    },
    'isOpera': function () {
        return navigator['userAgent']['match'](/Opera Mini/i);
    },
    'isWindows': function () {
        return navigator['userAgent']['match'](/IEMobile/i) || navigator['userAgent']['match'](/WPDesktop/i);
    },
    'isAny': function () {
        return _0x12ecd9['isAndroid']() || _0x12ecd9['isBlackBerry']() || _0x12ecd9['isIOS']() || _0x12ecd9['isOpera']() || _0x12ecd9['isWindows']();
    }
},
_0x2c120b = _0x12ecd9['isAny']();
if (typeof window !== 'undefined' && window !== null) try {
window['isMobileAppIOS'] = window['isMobileApp'] || _0x197353, window['isMobileAppAndroid'] = window['isMobileAppAndroid'] || _0xde95d8, window['isMobileApp'] = _0xb29884 || window['isMobileApp'], window['isMobileDevice'] = window['isMobileDevice'] || _0x2c120b;
} catch (_0x525d50) {}
var _0x161edc = 0.175,
_0x13dbe2 = '#3FBA54',
_0x59301f = '#3FBA54',
_0x2ca5ee = '#f7f7f7',
_0x4af19c = '#09992F',
_0x45f8c9 = '#007ec0',
_0x2535da = 'white',
_0x116fff = '#8a7908',
_0x466042 = '#1aad41',
_0x5dc05e = '#bf4f0b',
_0x53a2cf = '#06912b',
_0x5528fa = '#09992F',
_0xf1a8b5 = '#8CCEF4',
_0x4a8f7b = '#4E66E4',
_0x3ada2a = '#ff6000',
_0x201756 = '#4854a2',
_0x43c57c = _0x201756,
_0x1b5add = '#bfaf43',
_0x3eb623 = '#d6c348',
_0x2e6d6d = '#c8b745',
_0x3eb27d = '#F35F53',
_0x2b9117 = '#CF6259',
_0x23716a = '#FF911E',
_0x29fff8 = '#C67019',
_0x158cac = '#25b645',
_0x2d7435 = '#604729',
_0xdd3472 = '#8A681B',
_0x4fab5f = '#EF3C31',
_0x4c4d1f = '#4AE05E',
_0x4cf5b7 = '#8C9688',
_0x13aeaa = '#878053',
_0x22bf24 = '#328ca2',
_0x1eed97 = 'rgba(50,140,162,0.5)',
_0x3883f5 = '#ff884c',
_0x552f98 = '#007fa9',
_0x48205e = '#b0a13b',
_0x285800 = !![],
_0x22bf93 = !![],
_0x5c60f3 = ![],
_0x31d269 = ![],
_0x5d6eed = !![],
_0x5b3018 = !![],
_0x41cf1d = 0x1,
_0x154886 = ![],
_0x2a6223 = null;
let _0x316be0 = ![],
_0x1b40ba = ![],
_0x27c2c1 = ![],
_0x4eed9a = _0xc0a557,
_0x782014 = 0x190,
_0xe7fe22 = 0x0;
var _0xc66b64 = ![],
_0x5810d2 = 0x0,
_0x3ca62f = '',
_0x353eee = 0x0,
_0x4f8e9d = {},
_0x9da7f4 = 0x0,
_0x48f67a = 0x0,
_0x9c1e38 = 0x0,
_0x107b20 = function (_0x5c7068) {
    switch (_0x5c7068) {
    case _0x506414:
        return 'ocean';
    case _0x1c3cf7:
        return 'arctic';
    case _0x49e519:
        return 'desert';
    case _0x545d4b:
        return 'volcano';
    case _0x248a5d:
        return 'forest';
    case _0x1c453c:
        return 'land';
    default:
        return 'land';
    }
},
_0x3b949e = function (_0x292666) {
    switch (_0x292666) {
    case _0x506414:
        return _0x45f8c9;
    case _0x1c3cf7:
        return _0x2535da;
    case _0x49e519:
        return _0x116fff;
    case _0x545d4b:
        return _0x5dc05e;
    case _0x248a5d:
        return _0x53a2cf;
    case _0x1c453c:
    default:
        return _0x4af19c;
    }
},
_0x92a5c4 = [],
_0x1c453c = 0x0,
_0x506414 = 0x1,
_0x1c3cf7 = 0x2,
_0x545d4b = 0x3,
_0x49e519 = 0x4,
_0x248a5d = 0x5,
_0x740c5b = +new Date(),
_0x4ca99d = +new Date(),
_0xd3db61 = 0x0,
_0x44408d = ![],
_0x3dbb56 = 0x0,
_0x5bc15d = null,
_0x512c37 = ![],
_0x2480a9 = ![],
_0x49e774 = ![],
_0x423092 = ![],
_0x462117 = null,
_0x3e2ef0 = 0x0,
_0x4db9ef = 0x0,
_0x221974 = 0x0,
_0x1f3595 = 0x0,
_0x3d6cc6 = 0x0,
_0x9c77c8 = 0x0,
_0x13caf0 = [],
_0x4e1363 = ![],
_0x2c5700 = 0x0,
_0x1cf3f1 = null,
_0xfd0710 = ![],
_0x4ab620 = 0x0,
_0x205acb = ![],
_0x3727a5 = ![],
_0x50b628 = 0x0,
_0x5633da = ![],
_0x4a90a3 = ![],
_0x50791a = document['getElementById']('gCanvas'),
_0x49b3ea = null,
_0x2e5deb = null,
_0x6ff4bc = 0x0,
_0x3adb24 = 0x0,
_0x433266 = 0x0,
_0x22ba0f = 0x0,
_0x1d2dab = null;
_0x50791a && (_0x1d2dab = _0x50791a['getContext']('2d'), _0x1d2dab['shadowColor'] = 'black');
var _0x2e165f = ![],
_0x4ffcf2 = Math['min'](window['devicePixelRatio'], 0x2),
_0x3abb4d = ('ontouchstart' in window || navigator['maxTouchPoints']) == !![],
_0x441216 = {},
_0x719b30 = function (_0x482dbc) {
    if (!_0x441216['hasOwnProperty'](_0x482dbc) && !_0x5c571c) {
        var _0x1fbf2d = new Audio(_0x482dbc);
        _0x441216[_0x482dbc] = _0x1fbf2d, _0x1fbf2d['volume'] = 0.7, _0x1fbf2d['muted'] = _0x5c571c;
    }
    return _0x441216[_0x482dbc];
},
_0x466d36 = null,
_0x552790 = '',
_0x3550b0 = 'audio/music_game.mp3',
_0x2fded7 = function (_0x473714) {
    _0x466d36 && (_0x466d36['pause'](), _0x466d36['currentTime'] = 0x0);
    _0x552790 = _0x473714;
    if (!_0x5c571c) {
        _0x466d36 = _0x719b30(_0x473714, !![]);
        try {
            _0x466d36['play']();
        } catch (_0xd6223a) {}
    }
},
_0x59910d = !![];
$bus['on']($bus['EVENTS']['UI_SET_SOUND_FLAG'], _0x1c1aad => {
_0x5c571c = !_0x1c1aad, _0x4974ed['useSound'] = _0x1c1aad;
});
var _0x2efbd0 = ![],
_0x3655c9 = camzoom_n = 2.7,
_0x3655c9 = 0x1,
_0x552b0d = 0x0,
_0x1a453f = 0x0,
_0x4324e5 = 0x0,
_0x43daa3 = 0x0,
_0x15b7f0 = 0x0,
_0x1e5a9d = 0x0,
_0x32b8d4 = 0x1,
_0x324b2a = 0x0,
_0x344a08 = 0x0,
_0x500d8e = 0x0,
_0x2a7c03 = 0x0,
_0x236e1e = 0x0,
_0x1d3d07 = 0x0,
_0x5242eb = ![],
_0x5b4d8b = ![],
_0x1bcf68 = 0x0,
_0x157802 = 0x0,
_0x1f4cd2 = 0x0,
_0x4767f1 = 0x0,
_0x30ec4b = 0x0,
_0x2ef26d = 0x1,
_0x31cada = 0x2,
_0x1292d4 = 0x3,
_0x347b40 = 0x4,
_0x216779 = 0x5,
_0x234afd = 0x6,
_0x5dd9a5 = _0x30ec4b,
_0x3f40a3 = 0x0,
_0x148c8f = {},
_0x56ee98 = async function (_0x3139be) {
    if (!_0x148c8f['hasOwnProperty'](_0x3139be)) {
        const _0x421f2c = new Image();
        var _0x2c136d = '?v=' + _0x1f2757 + (_0x2cec8e ? '.' + _0x376cb2 : '');
        return _0x421f2c['src'] = _0x3139be + _0x2c136d, new Promise((_0x58c8ae, _0x1cd56d) => {
            _0x421f2c['addEventListener']('load', () => {
                return _0x148c8f[_0x3139be] = _0x421f2c, _0x58c8ae(_0x421f2c);
            }, {
                'once': !![]
            });
        });
    }
    return _0x148c8f[_0x3139be];
}, _0x5ace1d = function (_0x10ec40, _0x1201c3) {
    if (!_0x148c8f['hasOwnProperty'](_0x10ec40)) {
        _0x148c8f[_0x10ec40] = new Image();
        var _0x533ca6 = '?v=' + _0x1f2757 + (_0x2cec8e ? '.' + _0x376cb2 : '');
        _0x148c8f[_0x10ec40]['src'] = _0x10ec40 + _0x533ca6;
    }
    return 0x0 != _0x148c8f[_0x10ec40]['width'] && _0x148c8f[_0x10ec40]['complete'] ? _0x148c8f[_0x10ec40] : null;
}, _0x5bcbef = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0), _0xc475d = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0), _0x3346e2 = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0), _0x359fce = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0), _0x15d027 = ![], _0xf458cf = [], _0x3c55ea = {}, _0x29c845 = [], _0x4d8ac6 = [], _0x3f83b1 = ![], _0x6e0539 = 0x0, _0x532023 = 0x1, _0x370dc9 = ![], _0xb72ea1 = 0x0, _0x43f3f7 = 0x1, _0x5dcef6 = ![], _0x365975 = +new Date(), _0x57dfdc = ![], _0x49a9c3 = ![], _0x19debf = ![], _0x53284b = ![], _0x49ba00 = ![], _0x3a8d51 = ![], _0x5c571c = ![], _0x3876b4 = ![], _0x31f3fc = 0x3, _0x3ecc4c = ![], _0x139132 = ![];
const _0x4974ed = {
'graphicsMode': _0x31f3fc,
'useSound': !_0x5c571c,
'noJoystick': _0x19debf,
'leftHanded': ![],
'noAnimalImages': ![],
'noNames': _0x57dfdc,
'noXpPopups': _0x49ba00,
'snowfall': _0x3a8d51,
'noTextures': _0x3ecc4c,
'showGrid': _0x139132
};
if (window['localStorage']) {
const _0x843ce6 = window['localStorage']['getItem']('options_graphicsLevel');
_0x4974ed['graphicsMode'] = _0x843ce6 !== undefined && _0x843ce6 !== null && !isNaN(_0x843ce6) ? parseInt(_0x843ce6) : _0x31f3fc, _0x4974ed['noNames'] = window['localStorage']['getItem']('options_noNames') + 0x0 > 0x0, _0x4974ed['noAnimalImages'] = window['localStorage']['getItem']('options_noImages') + 0x0 > 0x0, _0x4974ed['noAnimalImages'] = window['localStorage']['getItem']('options_noImages') + 0x0 > 0x0, _0x4974ed['noJoystick'] = window['localStorage']['getItem']('options_noJoystick') + 0x0 > 0x0, _0x4974ed['leftHanded'] = window['localStorage']['getItem']('options_leftHanded') + 0x0 > 0x0, _0x4974ed['useSound'] = window['localStorage']['getItem']('options_muted') + 0x0 > 0x0, _0x4974ed['noXpPopups'] = window['localStorage']['getItem']('options_noXpPopup') + 0x0 > 0x0, _0x4974ed['snowfall'] = window['localStorage']['getItem']('options_snowfall') + 0x0 > 0x0, _0x4974ed['noTextures'] = window['localStorage']['getItem']('options_noTextures') === '1', _0x4974ed['showGrid'] = window['localStorage']['getItem']('options_showGrid') === '1';
}
$bus['emit']($bus['EVENTS']['INITIALIZED_SETTINGS_PREFS'], {
..._0x4974ed,
'isMobileApp': _0xb29884
});
let _0x19b546 = 0x0;
const _0x197975 = {
'shouldUse'(_0x42281c) {
    const _0x251a13 = !!_0x42281c && _0x42281c['substring'](0x0, 0x3) === 'UI_' && !_0x5c571c,
        _0x33b7fc = _0x42281c === $bus['EVENTS']['UI_UPDATED_PLAYERNAME'];
    if (_0x33b7fc) return ![];
    return _0x42281c === $bus['EVENTS']['UI_SET_SOUND_FLAG'] || _0x251a13 && Date['now']() - _0x19b546 > 0xfa;
},
'onUse'(_0xcb6ba2, _0x4191a9) {
    console['log']('event:', _0xcb6ba2, 'payload:', _0x4191a9);
    let _0x305bbc = 0.4;
    _0x19b546 = Date['now'](), _0xcb6ba2 === $bus['EVENTS']['UI_SET_SOUND_FLAG'] ? (_0x305bbc = _0x4191a9 ? 0x1 : 0.1, setTimeout(() => _0x542902(_0x305bbc))) : _0x542902(_0x305bbc);
}
};
$bus['use'](_0x197975);
var _0x1cdbb6 = document['getElementById']('button_mute');
_0x1cdbb6 && (_0x1cdbb6['onclick'] = function () {
_0x5c571c = !_0x5c571c, onMuteButtonChange();
try {
    window['localStorage']['setItem']('options_muted', _0x5c571c ? 0x1 : 0x0);
} catch (_0x6faf52) {}
});

function _0x370b0e(_0x1a1cf5, _0x42c300, _0x392bd6) {
_0x42c300 = _0x42c300 || _0x42c300 === 0x0 || _0x42c300 === '0' ? _0x42c300 : null;
const _0x208f9e = _0x29622e => {
    try {
        return _0x42c300 !== null && (_0x29622e['volume'] = _0x42c300), _0x392bd6 && (sound_click['playbackRate'] = _0x392bd6), _0x29622e['play'](), !![];
    } catch (_0x195a47) {
        return ![];
    }
};
if (_0x208f9e(_0x719b30(_0x1a1cf5))) return;
_0x208f9e(new Audio(_0x1a1cf5));
}

function _0x542902(_0x533827) {
_0x370b0e('audio/click.mp3', _0x533827);
}

function _0x24cec0() {
var _0x251b60 = document['getElementById']('optionsDiv');
_0x251b60['style']['display'] = _0x251b60['style']['display'] == 'block' ? 'none' : 'block';
var _0x8d8c18 = _0x719b30('audio/click.mp3');
if (_0x8d8c18) try {
    _0x8d8c18['play']();
} catch (_0x1568eb) {}
}
$bus['on']($bus['EVENTS']['UI_SET_NO_ANIMAL_IMAGES_FLAG'], _0x205b5d => {
_0x57dfdc = _0x205b5d, _0x4974ed['noAnimalImages'] = _0x205b5d;
try {
    window['localStorage']['setItem']('options_noImages', _0x57dfdc ? 0x1 : 0x0);
} catch (_0x10488a) {}
}), $bus['on']($bus['EVENTS']['UI_SET_NO_NAMES_FLAG'], _0xe329ca => {
_0x49a9c3 = _0xe329ca, _0x4974ed['noNames'] = _0xe329ca;
try {
    window['localStorage']['setItem']('options_noNames', _0x49a9c3 ? 0x1 : 0x0);
} catch (_0x1551cc) {}
}), $bus['on']($bus['EVENTS']['UI_SET_NO_JOYSTICK'], _0x4fea1e => {
_0x19debf = _0x4fea1e, _0x4974ed['noJoystick'] = _0x4fea1e;
try {
    window['localStorage']['setItem']('options_noJoystick', _0x19debf ? 0x1 : 0x0);
} catch (_0x2abf7e) {}
_0x3b6313();
}), $bus['on']($bus['EVENTS']['UI_SET_LEFT_HANDED'], _0x237ec3 => {
_0x53284b = _0x237ec3, _0x4974ed['leftHanded'] = _0x237ec3;
try {
    window['localStorage']['setItem']('options_leftHanded', _0x53284b ? 0x1 : 0x0);
} catch (_0x46109e) {}
_0x3b6313();
}), $bus['on']($bus['EVENTS']['UI_SET_NO_XP_POPUP_FLAG'], _0x13c595 => {
_0x49ba00 = _0x13c595, _0x4974ed['noXpPopups'] = _0x13c595;
try {
    window['localStorage']['setItem']('options_noXpPopup', _0x49ba00 ? 0x1 : 0x0);
} catch (_0x13980c) {}
_0x3b6313();
}), $bus['on']($bus['EVENTS']['UI_SET_SNOWFALL'], _0x4bcee0 => {
_0x3a8d51 = _0x4bcee0, _0x4974ed['snowfall'] = _0x4bcee0;
try {
    window['localStorage']['setItem']('options_snowfall', _0x3a8d51 ? 0x1 : 0x0);
} catch (_0x1e167f) {}
_0x3b6313();
}), $bus['on']($bus['EVENTS']['UI_SET_NO_TEXTURES'], _0x343bc5 => {
_0x3ecc4c = _0x343bc5, _0x4974ed['noTextures'] = _0x343bc5;
try {
    window['localStorage']['setItem']('options_noTextures', _0x3ecc4c ? 0x1 : 0x0);
} catch (_0x4354f7) {}
_0x3b6313();
}), $bus['on']($bus['EVENTS']['UI_SET_SHOW_GRID'], _0x19f28d => {
_0x139132 = _0x19f28d, _0x4974ed['showGrid'] = _0x19f28d;
try {
    window['localStorage']['setItem']('options_showGrid', _0x139132 ? 0x1 : 0x0);
} catch (_0x10c688) {}
_0x3b6313();
});
var _0x279b7d = ![],
_0x43f91e = -0x1,
_0x9cd38f = 0x64,
_0x26338c = -0x1,
_0x4c41f4 = curBarPerc_n = 0x64,
_0x5d7f39 = -0x1,
_0x3b010f = -0x1;
const _0xc97cb = _0x5bc60d => {
_0x5bc60d != _0x26338c && (_0x9cd38f = _0x5bc60d, $bus['emit']($bus['EVENTS']['GAME_WATER_UPDATED'], _0x5bc60d));
};
_0xc97cb(_0x9cd38f);
const _0x6b6369 = _0x535aa6 => {
_0x535aa6 != _0x43f91e && (_0x43f91e = _0x535aa6, $bus['emit']($bus['EVENTS']['GAME_WATER_TYPE_UPDATED'], _0x535aa6));
};
_0x6b6369(_0x43f91e);
const _0x3ae456 = _0xc0ddf5 => {
_0xc0ddf5 != _0x5d7f39 && (_0x5d7f39 = _0xc0ddf5, $bus['emit']($bus['EVENTS']['GAME_NEXT_LEVEL_UP_AT_EXPERIENCE_UPDATED'], _0xc0ddf5));
};
_0x3ae456(0x64);
const _0xe35f4e = _0x52a2e4 => {
_0x52a2e4 != _0x3b010f && (_0x3b010f = _0x52a2e4, $bus['emit']($bus['EVENTS']['GAME_CURRENT_EXPERIENCE_UPDATED'], _0x52a2e4));
};
_0x3ae456(0x0), _0xe35f4e(0x0);
var _0x2dfc88 = 0x0,
_0xb03d03 = 0x0,
_0x2f5248 = infectionBarPerc_n = 0x64,
_0x6aeabc = new _0x407dea(0x10, 'yellow'),
_0xdc284d = new _0x407dea(0x10, 'white'),
_0x1d1050 = new _0x407dea(0x10, 'white'),
_0x40d1ae = new _0x407dea(0x10, 'white'),
_0x557229 = new _0x407dea(0x10, 'white'),
_0x4ea12d = new _0x407dea(0xa, 'white'),
_0x187edd = new _0x407dea(0x10, 'white'),
_0x1b806c = new _0x407dea(0x1a, 'white'),
_0x73daf0 = new _0x407dea(0xa, 'white'),
_0x310ccb = new _0x407dea(0x10, 'white');
_0x187edd['multiLine'] = !![], _0x187edd['renderScale'] = 0x1, _0x4ea12d['renderScale'] = 0x1;
var _0x1f2bc8 = ![],
_0x2e949a = 0x0,
_0x4e14ec = 0x0,
_0x241811 = '',
_0x1e1b40 = [],
_0x4a2431 = new _0x340f2a(null, 'W');
_0x4a2431['onButtonTouchStart'] = function () {
_0x551e32(_0x3560e8, !![]);
}, _0x4a2431['onButtonTouchEnd'] = function () {
_0x551e32(_0x3560e8, ![]), _0x168edb['pressed'] && _0x168edb['pressedTouchID'] == -0x1 && (_0x168edb['pressed'] = ![], _0x551e32(_0x270894, ![]));
}, _0x1e1b40['push'](_0x4a2431);
var _0x2ab077 = new _0x340f2a(null, 'W');
_0x2ab077['isMiniRechargeBut'] = !![], _0x2ab077['touchEnabled'] = ![], _0x1e1b40['push'](_0x2ab077);
var _0x168edb = new _0x340f2a({
'abilName': 'Sprint',
'abilImg': 'abilities/Dash-Boost.svg'
});
_0x168edb['onButtonTouchStart'] = function () {
_0x551e32(_0x270894, !![]);
}, _0x168edb['onButtonTouchEnd'] = function () {
_0x551e32(_0x270894, ![]);
}, _0x1e1b40['push'](_0x168edb);
var _0xa7bdf6 = new _0x599ed2('CHAT');
_0xa7bdf6['onButtonTouchStart'] = function () {
_0x35add7();
}, _0x1e1b40['push'](_0xa7bdf6);
var _0x763a67 = new _0x599ed2('S');
_0x763a67['onButtonTouchStart'] = function () {
_0x551e32(_0x5e8656, !![]);
}, _0x1e1b40['push'](_0x763a67);
var _0x16019c = new _0x599ed2('DOWNâ†“');
_0x16019c['onButtonTouchStart'] = function () {
_0x551e32(_0x3f0153, !![]);
}, _0x1e1b40['push'](_0x16019c);
var _0x55b0e6 = ![],
_0x5bc8e7 = -0x1,
_0x659dc8 = 0x0,
_0x553e95 = 0x0,
_0x32d16d = 0x0,
_0x1e7abe = 0x0,
_0x22aa5d = 0x32,
_0x39e0f1 = 0x0,
_0x14d1cc = 0x0,
_0x4ef384 = 0x0,
_0xe65ffe = 0x0,
_0x19e5a9 = 0x0,
_0x4ca99d = +Date['now'](),
_0x48de51 = null;

function _0x5e22a2(_0x120531, _0x4ac5b7) {
return _0x120531 = Math['min'](_0x120531, _0x4ac5b7), _0x4ac5b7 = Math['max'](_0x120531, _0x4ac5b7), _0x120531 + Math['random']() * (_0x4ac5b7 - _0x120531 + 0x1);
}
var _0x47849 = !![],
_0x59c105 = !![],
_0x207ac2 = !![],
_0x252f27 = function (_0x58087d, _0x59512d, _0x4dede2, _0x4d3060, _0x1c766f, _0x3ce0d2) {
    _0x58087d['strokeStyle'] = _0x3ce0d2, _0x58087d['lineWidth'] = _0x1c766f, _0x58087d['beginPath'](), _0x58087d['arc'](_0x59512d, _0x4dede2, Math['max'](0x0, _0x4d3060), 0x0, Math['PI'] * 0x2), _0x58087d['stroke']();
},
_0x40152c = 0x1;
const _0x4f64a7 = {
    'undefined': () => 0x0,
    'boolean': () => 0x4,
    'number': () => 0x8,
    'string': _0x5368e4 => 0x2 * _0x5368e4['length'],
    'object': _0x25634d => !_0x25634d ? 0x0 : Object['keys'](_0x25634d)['reduce']((_0x1b4d3e, _0x1dd272) => _0x10888e(_0x1dd272) + _0x10888e(_0x25634d[_0x1dd272]) + _0x1b4d3e, 0x0)
},
_0x10888e = _0x1ebfe3 => _0x4f64a7[typeof _0x1ebfe3](_0x1ebfe3);
var _0x52be71 = function (_0x186e1f, _0x55649f, _0x335a3e) {
var _0x239022 = _0x335a3e * Math['PI'] / _0x55649f * _0x186e1f;
return _0x239022 = Math['sin'](_0x239022), _0x239022;
};
let _0xf86d67 = {};

function _0x3a5fe8(_0x286457, _0x5f2f52, _0x48bad8, _0x9a4629, _0x26ec2a, _0x28a43e) {
let _0x3ec7ff = _0xf86d67[_0x286457];
if (_0xf86d67[_0x286457] == undefined) {
    if (_0x26ec2a !== undefined && _0x28a43e !== undefined) _0x3ec7ff = new _0x514f05(_0x286457, _0x5f2f52, _0x9a4629, _0x48bad8, _0x26ec2a, _0x28a43e);
    else _0x3ec7ff = new _0x514f05(_0x286457, _0x5f2f52, _0x9a4629, _0x48bad8);
    _0xf86d67[_0x286457] = _0x3ec7ff, console['log']('@@@@@@@@@@@@@@@ AnimFrame created for ' + _0x286457 + ' @@@@@@@@@@@@@@@@@@@@@@@');
}
_0xfdd90(_0xf86d67[_0x286457], 0x0);
}

function _0x548021(_0x2495a5, _0x5514a1) {
let _0x13da40 = _0xf86d67[_0x2495a5];
if (_0x13da40) return _0x13da40['getFrame'](_0x5514a1);
return undefined;
}

function _0x3b10af(_0xb7f441, _0x1e6844, _0x6556e6) {
let _0x5d92ea = _0xf86d67[_0xb7f441];
if (_0x5d92ea) return _0x5d92ea['getFrame'](_0x1e6844) * _0x6556e6;
return undefined;
}

function _0x1170c4(_0x597186, _0x835266) {
let _0x5dccc7 = _0xf86d67[_0x597186];
if (_0x5dccc7) return _0x5dccc7['getShiftAmount'](_0x835266);
return undefined;
}

function _0xfdd90(_0xfa54ba, _0x5d3053) {
var _0x5078b8 = _0x5d3053 / 0x3e8,
    _0x381412 = _0x5078b8;
let _0x43a6b8 = _0x52be71(_0x5078b8, _0xfa54ba['period'], _0xfa54ba['sine']),
    _0x220694 = _0x43a6b8['toFixed'](0xa),
    _0xb79e11 = _0x5078b8['toFixed'](0x3);
_0xfa54ba['add'](_0xb79e11, _0x220694);
if (_0x381412 >= _0xfa54ba['period']) {
    console['log']('@@@@@@@@@@@@@@@@@ baking finished for ' + _0xfa54ba['forObj']);
    return;
}
_0x5d3053++, setTimeout(function () {
    _0xfdd90(_0xfa54ba, _0x5d3053);
}, 0x1);
}
class _0x514f05 {
constructor(_0x392ee4, _0x1848a5, _0x4b18a0, _0x23ee84, _0x2fe019, _0x479c10) {
    this['forObj'] = _0x392ee4, this['period'] = _0x1848a5, this['sine'] = _0x4b18a0, this['shiftAmount'] = _0x23ee84, this['frame'] = {}, _0x2fe019 !== undefined && _0x479c10 !== undefined && (this['startShift'] = _0x2fe019, this['endShift'] = _0x479c10, this['amplitude'] = this['shiftAmount'] * (this['endShift'] - this['startShift']));
} ['getAnimalName']() {
    return this['forAni'];
} ['add'](_0x2f2a8c, _0x30e749) {
    this['frame'][_0x2f2a8c] = _0x30e749;
} ['getShiftAmount'](_0x3bca12) {
    let _0x406ce4 = this['getFrame'](this['timeKey'](_0x3bca12));
    if (_0x406ce4) {
        if (this['amplitude'] !== undefined) {
            let _0x34d099 = this['startShift'] + this['amplitude'];
            return _0x34d099 + this['amplitude'] * this['getFrame'](_0x3bca12);
        } else return _0x406ce4 * this['shiftAmount'];
    }
    return null;
} ['getFrame'](_0x1dae6b) {
    return this['frame'][this['timeKey'](_0x1dae6b)];
} ['timeKey'](_0x193c6e) {
    let _0x269837 = (_0x740c5b - _0x193c6e) / 0x3e8 / this['period'],
        _0x14e4f9 = (_0x269837 - Math['floor'](_0x269837)) * this['period'];
    return _0x14e4f9['toFixed'](0x3);
}
}
_0x3a5fe8('bird', 0.5, 0.5, 0x2), _0x3a5fe8('eagle', 0.9, 0.3, 0x2), _0x3a5fe8('volcano', 0x6, 1.5, 0x2), _0x3a5fe8('lake', 0x4, 5.5, 0x2), _0x3a5fe8('lavalake', 0x4, 2.5, 0x2), _0x3a5fe8('fennecfox', 0.5, 0x5, 0x1), _0x3a5fe8('fireball', 0x1, 0.5, 0x2, 0.85, 0x1), _0x3a5fe8('kd', 0x5, 0x1, 0x1), _0xf2d657['wave'] = 0x1, _0xf2d657['halfWave'] = 0x2, _0xf2d657['arc'] = 0x3, _0xf2d657['quad'] = 0x4, _0xf2d657['bow'] = 0x5, _0xf2d657['bounce'] = 0x6, _0xf2d657['elastic'] = 0x7, _0xf2d657['bounceEaseOut'] = 0x8, _0xf2d657['bounceEaseInOut'] = 0x9;

function _0xf2d657(_0x3a288d, _0x1db3d1, _0x202929, _0x2e28a4) {
this['forObj'] = _0x3a288d, this['duration'] = _0x1db3d1, this['animation'] = _0x202929, this['startTime'] = null, this['frame'] = 0x0, this['frameRate'] = 0x3e8, this['timePassed'] = 0x0, this['generate'] = !![], this['stopWhenDurationPassed'] = !![], this['state'] = 0x0, this['accelerateEnd'] = 0x0, this['hasStopped'] = ![], this['img'] = null, this['vars'] = _0x2e28a4, this['keepLastFrame'] = ![], this['loop'] = ![], this['setImage'] = function (_0x1bdf19) {
    this['img'] = _0x5ace1d(_0x1bdf19);
}, this['run'] = function () {
    if (this['startTime'] == null) this['startTime'] = _0x740c5b;
    if (this['startTime'] != null) {
        this['state'] == 0x2 && !this['hasStopped'] && (this['hasStopped'] = !![], this['onStop']());
        !this['hasStopped'] && (this['calcTimePassed'](), this['generateFrame'](), this['onFrameEntered'](this['frame']), this['timePassed'] >= this['duration'] && this['stopWhenDurationPassed'] && (this['state'] = 0x2));
        if (this['hasStopped']) {
            if (this['keepLastFrame']) this['onFrameEntered'](this['frame']);
            if (this['loop']) this['reset']();
        }
    }
}, this['reset'] = function () {
    this['timestamp'] = null, this['hasStopped'] = ![], this['state'] = 0x0;
}, this['generateFrame'] = function () {
    if (this['generate']) {
        this['state'] = 0x1;
        switch (this['animation']) {
        case _0xf2d657['wave']:
            this['frame'] = this['wave'](this['timePassed']);
            break;
        case _0xf2d657['halfWave']:
            this['frame'] = this['halfWave'](this['timePassed']);
            break;
        case _0xf2d657['arc']:
            this['frame'] = this['arc'](this['timePassed']);
            break;
        case _0xf2d657['quad']:
            this['frame'] = this['quad'](this['timePassed']);
            break;
        case _0xf2d657['bow']:
            if (this['vars'] == undefined) this['vars'] = {
                'v1': 0x1
            };
            this['frame'] = this['bow'](this['timePassed']);
            break;
        case _0xf2d657['bounce']:
            this['frame'] = this['bounce'](this['timePassed']);
            break;
        case _0xf2d657['elastic']:
            if (this['vars'] == undefined) this['vars'] = {
                'v1': 0x1
            };
            this['frame'] = this['elastic'](this['timePassed']);
            break;
        case _0xf2d657['bounceEaseOut']:
            this['frame'] = this['bounceEaseOut'](this['timePassed']);
            break;
        case _0xf2d657['bounceEaseInOut']:
            this['frame'] = this['bounceEaseInOut'](this['timePassed']);
            break;
        default:
            break;
        }
    }
}, this['timing'] = function (_0x9872a5) {
    return _0x9872a5;
}, this['halfWave'] = function (_0x2d7b62) {
    return 0x1 * Math['sin'](0.5 * Math['PI'] / this['duration'] * _0x2d7b62);
}, this['wave'] = function (_0x4247c1) {
    return 0x1 * Math['sin'](0x1 * Math['PI'] / this['duration'] * _0x4247c1);
}, this['arc'] = function (_0x221a2f) {
    return 0x1 - Math['sin'](Math['acos'](_0x221a2f));
}, this['quad'] = function (_0x393cd9) {
    return Math['pow'](_0x393cd9, 0x2);
}, this['bow'] = function (_0x455820) {
    var _0x280910 = this['vars']['v1'];
    return Math['pow'](_0x455820, 0x2) * ((_0x280910 + 0x1) * _0x455820 - _0x280910);
}, this['bounce'] = function (_0x18af7f) {
    for (let _0x557225 = 0x0, _0x510c7d = 0x1, _0x25ccfb; 0x1; _0x557225 += _0x510c7d, _0x510c7d /= 0x2) {
        if (_0x18af7f >= (0x7 - 0x4 * _0x557225) / 0xb) return -Math['pow']((0xb - 0x6 * _0x557225 - 0xb * _0x18af7f) / 0x4, 0x2) + Math['pow'](_0x510c7d, 0x2);
    }
}, this['elastic'] = function (_0x286a5b) {
    var _0x5ae003 = this['vars']['v1'];
    return Math['pow'](0x2, 0xa * (_0x286a5b - 0x1)) * Math['cos'](0x14 * Math['PI'] * _0x5ae003 / 0x3 * _0x286a5b);
}, this['bounceEaseOut'] = function (_0x5570a9) {
    return 0x1 - this['bounce'](0x1 - _0x5570a9);
}, this['bounceEaseInOut'] = function (_0x17f19a) {
    if (_0x17f19a < 0.5) return this['bounce'](0x2 * _0x17f19a) / 0x2;
    else return (0x2 - this['bounce'](0x2 * (0x1 - _0x17f19a))) / 0x2;
}, this['calcTimePassed'] = function () {
    this['timePassed'] = (_0x740c5b - this['startTime']) / this['frameRate'];
}, this['onFrameEntered'] = function (_0x2f1d99) {}, this['onStop'] = function () {};
}
var _0x161cf1 = window['innerWidth'];
class _0x4bd116 {
constructor(_0x5ad7b0) {
    this['season'] = _0x5ad7b0;
} ['loadMiniMap'](_0x14828f) {}
static['create'](_0x5e962b) {
    let _0x2b9de2 = _0x5e962b['readUInt8']();
    this['season'] = _0x2b9de2;
    switch (_0x2b9de2) {
    case 0x1:
    case 0x2:
        let _0x4e32eb = new _0x2fc0c2();
        _0x4e32eb['loadMiniMap'](_0x5e962b);
        return _0x4e32eb;
    }
    return null;
}
}
class _0x2fc0c2 extends _0x4bd116 {
constructor() {
    super(0x2);
} ['loadMiniMap'](_0x374ec2) {
    let _0x3a44ad = _0x374ec2['readUInt16']() * 0x1,
        _0x5a367f = _0x374ec2['readUInt16']() * 0x1,
        _0x1a2925 = _0x374ec2['readUInt16'](),
        _0x3f9089 = _0x374ec2['readUInt16'](),
        _0xb00306 = _0x374ec2['readUInt16'](),
        _0x227f45 = _0x374ec2['readUInt16'](),
        _0x37c1f7 = _0x374ec2['readUInt16'](),
        _0x58efc1 = 0x1,
        _0x57d249 = 0x1,
        _0x5613d5 = {
            'scale': _0x3a44ad,
            'objScale': _0x5a367f,
            'mapWidth': _0x1a2925,
            'mapHeight': _0x3f9089,
            'width': _0x161cf1,
            'height': _0x161cf1,
            'gameWidth': _0xb00306,
            'gameHeight': _0x227f45,
            'scaleX': _0x58efc1,
            'scaleY': _0x57d249,
            'totalObjects': _0x37c1f7,
            'objects': []
        };
    for (let _0x1bec0d = 0x0; _0x1bec0d < _0x37c1f7; _0x1bec0d++) {
        let _0x30bbce = _0x374ec2['readUInt16']();
        for (let _0x3888d1 = 0x0; _0x3888d1 < _0x30bbce; _0x3888d1++) {
            let _0x3724e8 = _0x374ec2['readUInt16'](),
                _0x4c91e0 = _0x374ec2['readUInt16'](),
                _0x2b17ab = _0x374ec2['readUInt8']() == 0x1,
                _0x58408b = {
                    'isRect': _0x2b17ab,
                    'objType': _0x3724e8
                };
            _0x3724e8 == _0x2eb6c6 && (_0x58408b['teamID'] = _0x374ec2['readUInt8'](), _0x58408b['outline'] = 'black');
            if (_0x2b17ab) {
                let _0x3ac74a = _0x374ec2['readUInt16'](),
                    _0x398c86 = _0x374ec2['readUInt16'](),
                    _0x13a5aa = _0x374ec2['readUInt16'](),
                    _0x20a1d3 = _0x374ec2['readUInt16']();
                _0x58408b['w'] = _0x13a5aa, _0x58408b['h'] = _0x20a1d3, _0x58408b['x'] = _0x3ac74a, _0x58408b['y'] = _0x398c86;
            } else {
                let _0x181fc3 = _0x374ec2['readUInt16'](),
                    _0x3d0122 = _0x374ec2['readUInt16'](),
                    _0x49491d = _0x374ec2['readUInt16']();
                _0x58408b['r'] = _0x181fc3, _0x58408b['x'] = _0x3d0122, _0x58408b['y'] = _0x49491d;
            }
            _0x58408b['c'] = this['getColorForObjType'](_0x3724e8, _0x4c91e0), _0x58408b['biome'] = _0x4c91e0, _0x5613d5['objects']['push'](_0x58408b);
        }
    }
    _0x476412 = new _0x24e5e1(_0x5613d5);
} ['getColorForObjType'](_0x31d200, _0x1cc50a) {
    switch (_0x31d200) {
    case _0x27ed64:
        return _0x43c57c;
    case _0x20c42c:
        return _0x466042;
    case _0x17c220:
        return '#c8b745';
    case _0x3b46a2:
        return 'white';
    case _0xbfd919:
        return _0x2d7435;
    case _0x3e8ed9:
        return _0x3ada2a;
    case _0x2ae105:
        return _0x2d7435;
    case _0x1fad46:
        return '#07631f';
    case _0x141bf4:
        return _0x43c57c;
    case _0x5ddad8:
        return _0x43c57c;
    case _0x211e4a:
        return '#907A33';
    case _0x169801:
        return '#7BB7BB';
    case _0x3ab87a:
        if (_0x1cc50a == _0x1c453c) return _0x466042;
        else {
            if (_0x1cc50a == _0x49e519) return '#8f822e';
            else {
                if (_0x1cc50a == _0x1c3cf7) return 'white';
            }
        }
        case _0x2bcc5d:
            return _0x4cf5b7;
        case _0x3ec985:
            return _0x4af19c;
        case _0x3fcd3a:
            return _0x48205e;
        case _0x5e7af4:
            return _0x3eb27d;
        case _0x13556a:
            return _0x4a8f7b;
        case _0x570684:
            return _0x48205e;
        case _0x59d668:
            return _0x552f98;
        case _0x126580:
            return _0x1b5add;
        case _0x5d7fc4:
        case _0x1df0f9:
            if (_0x1cc50a == _0x49e519) return '#8f822e';
            else {
                if (_0x1cc50a == _0x1c3cf7) return 'red';
                else {
                    if (_0x1cc50a == _0x506414) return '#198ebd';
                }
            }
            return 'brown';
        case _0x3319d3:
            if (_0x1cc50a == _0x49e519) return '#8f822e';
            else {
                if (_0x1cc50a == _0x1c3cf7) return 'white';
            }
            return '#00b01a';
        default:
            return 'green';
    }
}
}
let _0x2bb559 = null,
_0x476412 = null;
var _0x278a8b = [],
_0x284d8d = null;

function _0x4cb411(_0x3b821e) {
var _0x2e18f6 = _0x3b821e['readUInt32']();
_0x2e18f6 > 0x0 && (_0x284d8d = {
    'id': _0x2e18f6,
    'x': _0x3b821e['readUInt32']() / 0x64,
    'y': _0x3b821e['readUInt32']() / 0x64,
    'rad': 0x3
});
}

function _0x3145b9(_0x2b87ad, _0x2ea56a, _0x2f279e) {
if (_0x2b87ad) {
    var _0x36f1cd = _0x4ffcf2 * 0x3,
        _0x13dad2 = _0x2ea56a;
    _0x1d2dab['save']();
    if (_0x2fc9ba == _0x2b87ad['id']) _0x13dad2 = _0x2ea56a, _0x1d2dab['globalAlpha'] = 0x1;
    else {
        if (_0x284d8d == _0x2b87ad) _0x13dad2 = _0x2ea56a, _0x1d2dab['globalAlpha'] = 0x1;
        else {
            if (_0x5dd9a5 == _0x1292d4) _0x13dad2 = _0xefeaf8['getTeamColor'](_0x2b87ad['teamID']);
            else _0x13dad2 = 'yellow';
            _0x1d2dab['globalAlpha'] = 0x1, _0x36f1cd = _0x2b87ad['rad'];
        }
    }
    var _0x40d9e8 = _0x2b87ad['x'],
        _0x135dc5 = _0x2b87ad['y'],
        _0x477e1c = _0x1bcf68 - _0x2b87ad['sx'] * _0x4ffcf2 + _0x40d9e8 * _0x4ffcf2,
        _0x584943 = _0x2b87ad['sy'] * _0x4ffcf2 + _0x135dc5 * _0x4ffcf2;
    if (_0x2fc9ba == _0x2b87ad['id'] || _0x284d8d) {
        var _0x200038 = _0x36f1cd + _0x4ffcf2 * 0x2;
        _0x1d2dab['beginPath'](), _0x1d2dab['fillStyle'] = 'black', _0x1d2dab['arc'](_0x477e1c, _0x584943, _0x200038, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill']();
    }
    _0x1d2dab['beginPath'](), _0x1d2dab['fillStyle'] = _0x13dad2, _0x1d2dab['arc'](_0x477e1c, _0x584943, _0x36f1cd, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['restore']();
}
}

function _0x27f0f1(_0x5c6952, _0x6a66ac, _0x46d31f) {
if (_0x5c6952) {
    var _0x23dfc1 = _0x4ffcf2 * Math['max'](0x3, _0x5c6952['rad'] * (_0x476412['data']['width'] / _0x1f4cd2)),
        _0x16460c = _0x1bcf68 - (0xa * _0x4ffcf2 + _0x476412['data']['width'] * _0x32b8d4) + _0x5c6952['x'] * (_0x476412['data']['width'] * _0x32b8d4) / _0x1f4cd2,
        _0x145a1f = 0xa * _0x4ffcf2 + _0x5c6952['y'] * (_0x476412['data']['height'] * _0x32b8d4) / _0x4767f1,
        _0x30c65d = _0x23dfc1 + _0x4ffcf2 * 0x2;
    _0x1d2dab['beginPath'](), _0x1d2dab['fillStyle'] = 'black', _0x1d2dab['arc'](_0x16460c, _0x145a1f, _0x30c65d, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['fillStyle'] = _0x6a66ac, _0x1d2dab['arc'](_0x16460c, _0x145a1f, _0x23dfc1, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill']();
}
}
class _0x504ec0 {
constructor() {
    this['subscribers'] = {};
} ['subscribe'](_0x43ed67, _0x558fa8) {
    if (!this['subscribers'][_0x43ed67]) this['subscribers'][_0x43ed67] = [];
    this['subscribers'][_0x43ed67]['push'](_0x558fa8);
} ['emit'](_0x478b6d, _0xba5e5) {
    const _0x3ee694 = this['subscribers'][_0x478b6d];
    if (_0x3ee694) _0x3ee694['forEach'](_0x15af43 => _0x15af43(_0xba5e5));
}
}
class _0x33f5ce {
constructor() {}
static['type'] = 0x0;
['send']() {}
}
class _0x280508 {
constructor() {}
static['type'] = 0x0;
static['validate']() {}
static['handle']() {}
}
class _0xb9e4a0 {
constructor() {}
static['type'] = 0x0;
static['send']() {}
static['validate']() {}
static['handle']() {}
}
class _0x242bb4 extends _0x33f5ce {
constructor() {
    super();
}
static['type'] = 0x1;
static['send'](_0x335b82, _0x227157) {
    let _0x152aaf = 0x9;
    _0x227157 && _0x227157['length'] && (_0x152aaf += _0x227157['length']);
    const _0x6b4905 = new _0x5768c5(_0x152aaf);
    _0x6b4905['writeUInt8'](_0x242bb4['type']), _0x6b4905['writeUInt16'](_0x1bcf68), _0x6b4905['writeUInt16'](_0x157802), _0x6b4905['writeUInt16'](_0x161cf1);
    if (_0x227157) _0x6b4905['writeString'](_0x227157);
    else _0x6b4905['writeString']('');
    _0x335b82['send'](_0x6b4905['dataView']['buffer']);
}
}
class _0x5ebbea extends _0x280508 {
constructor() {}
static['type'] = 0x2;
static['handle'](_0x16a256) {
    const _0x495273 = _0x16a256['readString'](),
        _0x3ce4fb = _0x16a256['readUInt16'](),
        _0x4e7557 = _0x16a256['readUInt8'](),
        _0xe381ce = _0x16a256['readUInt8'](),
        _0x303723 = _0x16a256['readString']();
    return {
        'sessionId': _0x495273,
        'gameVersion': _0x3ce4fb,
        'gameMode': _0x4e7557,
        'season': _0xe381ce,
        'serverId': _0x303723
    };
}
}
class _0x37a4ea extends _0x280508 {
constructor() {
    super();
}
static['type'] = 0x11;
static['handle'](_0x36c309) {
    const _0x12836b = _0x36c309['readUInt16'](),
        _0x8722f0 = _0x36c309['readUInt16'](),
        _0x29c4c6 = _0x36c309['readUInt16'](),
        _0x683e94 = _0x36c309['readUInt16'](),
        _0x5146c5 = _0x36c309['readUInt16']();
    return {
        'gameWidth': _0x12836b,
        'gameHeight': _0x8722f0,
        'camX': _0x29c4c6,
        'camY': _0x683e94,
        'camZoom': _0x5146c5
    };
}
}
class _0x5253e3 extends _0x33f5ce {
constructor() {
    super();
}
static['type'] = 0x71;
static['send'](_0x18f15e, _0x4a3f29, _0x3cb79f, _0x13840a) {
    const _0x5b25ec = 0x21 + _0x4a3f29['length'],
        _0x41b421 = new _0x5768c5(_0x5b25ec);
    _0x41b421['writeUInt8'](_0x5253e3['type']), _0x41b421['writeUInt16'](_0x3cb79f), _0x41b421['writeUInt16'](_0x13840a), _0x41b421['writeString'](_0x4a3f29), _0x18f15e['send'](_0x41b421['dataView']['buffer']);
}
}
class _0x42715b extends _0xb9e4a0 {
constructor() {
    super();
}
static['type'] = 0x18;
static['readUpgradeMenu'](_0x56804e) {
    const _0x9243b8 = _0x56804e['readUInt8'](),
        _0x308762 = _0x56804e['readUInt8'](),
        _0x46b7eb = _0x56804e['readUInt8'](),
        _0x53b667 = _0x56804e['readUInt8'](),
        _0x5c36e1 = _0x56804e['readUInt8'](),
        _0x2f3c92 = [];
    for (var _0x3d8686 = 0x0; _0x3d8686 < _0x5c36e1; _0x3d8686++) {
        const _0x5db782 = _0x56804e['readUInt8'](),
            _0x5ed29d = _0x56804e['readUInt8'](),
            _0x12f868 = _0x56804e['readUInt8'](),
            _0x2129fb = _0x56804e['readUInt8'](),
            _0x5f3cec = _0x56804e['readUInt8'](),
            _0x4a6a60 = _0x56804e['readUInt8'](),
            _0x143809 = _0x56804e['readUInt8']();
        let _0x181f68 = _0x56804e['readUInt8']() == 0x1;
        const _0x23aa21 = _0x56804e['readString'](),
            _0x4ad44a = _0x3d8686,
            _0x5514a3 = _0x23aa21 != null && _0x23aa21 !== 'null';
        let _0x1f840f = 0x0,
            _0x27cba2 = null;
        if (_0x23aa21) {
            if (_0x1f4449['shop'] != null && _0x1f4449['shop']['allItems'] != null) {
                var _0x4d77d3 = _0x1f4449['shop']['allItems']['' + _0x23aa21];
                _0x4d77d3 && (_0x27cba2 = _0x4d77d3, _0x1f840f = _0x4d77d3['coinsPrice'] > 0x0 ? _0x4d77d3['coinsPrice'] : 0x0);
            }
        }
        _0x181f68 = _0x181f68 || _0x1f840f == 0x0;
        const _0x19ba91 = {
                'forLvl': _0x53b667,
                'abilities': [],
                'anAniT': _0x5ed29d,
                'biomeNum': _0x12f868,
                'species': _0x2129fb,
                'subSpecies': _0x5f3cec,
                'premiumSkinType': _0x4a6a60,
                'season': _0x5db782,
                'skinThemeID': _0x143809,
                'isBought': _0x181f68,
                'itemName': _0x23aa21,
                'itemIndex': _0x4ad44a,
                'isShopItem': _0x5514a3,
                'coinsPrice': _0x1f840f,
                'shopItem': _0x27cba2,
                'choiceIndex': _0x4ad44a
            },
            _0x47d5d1 = _0x13dc56['createGameObjOfOType'](_0x4ad968, _0x5ed29d);
        _0x47d5d1['animalType'] = _0x5ed29d, _0x47d5d1['animalSpecies'] = _0x2129fb, _0x47d5d1['animalSubSpecies'] = _0x5f3cec, _0x47d5d1['animalPremiumSkin'] = _0x4a6a60, _0x47d5d1['mopeSeasonID'] = _0x5db782, _0x47d5d1['skinThemeID'] = _0x143809, _0x47d5d1['curBiome'] = _0x12f868;
        if (_0x47d5d1['animalInfo']) {
            const _0x4609a0 = _0x47d5d1['animalInfo']();
            _0x19ba91['itemName'] = _0x4609a0['aniName'], _0x19ba91['name'] = _0x4609a0['aniName'];
        }
        _0x19ba91['abilities'] = _0x440a64(_0x47d5d1['getAbilityInfo']()), _0x19ba91['itemName'] = _0x13dc56['getClassForGameObjType'](_0x4ad968, _0x5ed29d)['name'];
        if (_0x47d5d1['animalInfo']) {
            const _0x26f2b9 = _0x47d5d1['animalInfo']();
            _0x19ba91['itemName'] = _0x26f2b9['aniName'], _0x19ba91['name'] = _0x26f2b9['aniName'];
        }
        _0x19ba91['shopImage'] = _0x47d5d1['getUpgradeImagePath'](), _0x2f3c92['push'](_0x19ba91);
    }
    return {
        'isSpectator': _0x9243b8,
        'gameSession': _0x308762,
        'timeout': _0x46b7eb,
        'upgradeLevel': _0x53b667,
        'animalChoices': _0x2f3c92
    };
}
static['handle'](_0x541b87) {
    const {
        isSpectator: _0x31c050,
        gameSession: _0x479d08,
        timeout: _0xb2312f,
        upgradeLevel: _0x177e8b,
        animalChoices: _0x3130c0
    } = _0x42715b['readUpgradeMenu'](_0x541b87);
    return {
        'isSpectator': _0x31c050,
        'gameSession': _0x479d08,
        'timeout': _0xb2312f,
        'upgradeLevel': _0x177e8b,
        'animalChoices': _0x3130c0
    };
}
static['send'](_0x1dbaab, _0x35158b) {
    const _0x68bf2b = 0x2,
        _0x4d672a = new _0x5768c5(_0x68bf2b);
    _0x4d672a['writeUInt8'](_0x42715b['type']), _0x4d672a['writeUInt8'](_0x35158b), _0x1dbaab['send'](_0x4d672a['dataView']['buffer']);
}
}
class _0x1e64a7 extends _0x33f5ce {
constructor() {
    super();
}
static['type'] = 0xb;
static['send'](_0x518c9f) {
    const _0x37d940 = new _0x5768c5(0x1);
    _0x37d940['writeUInt8'](_0x1e64a7['type']), _0x518c9f['send'](_0x37d940['dataView']['buffer']);
}
}
class _0x4bfe83 {
constructor(_0x5699eb) {
    this['server'] = _0x5699eb, this['pingTime'] = null, this['totalPings'] = 0x0, this['currentTest'] = null, this['resolveTest'] = null, this['rejectTest'] = null, this['result'] = 0x2710, this['ws'] = null, this['firstPingSent'] = ![], this['firstPongReceived'] = ![];
} ['isWsOpen']() {
    return this['ws'] && this['ws']['readyState'] === this['ws']['OPEN'];
} ['run']() {
    return this['currentTest'] = new Promise((_0x39af1a, _0x11b343) => {
        this['resolveTest'] = _0x39af1a, this['rejectTest'] = _0x11b343, this['startPingTest']();
    }), this['currentTest'];
} ['startPingTest']() {
    this['createConnection']();
} ['createConnection']() {
    const _0x4d3a0c = window['location']['protocol'] === 'https:' ? 'wss://' : 'ws://',
        _0x463ae2 = window['location']['protocol'] === 'https:' ? 0x1bb : 0x50;
    this['ws'] = new WebSocket('' + _0x4d3a0c + this['server']['url'] + ':' + _0x463ae2 + '/ping'), this['ws']['binaryType'] = 'arraybuffer', this['ws']['onopen'] = this['onOpen']['bind'](this), this['ws']['onmessage'] = this['onMessage']['bind'](this), this['ws']['onerror'] = this['onError']['bind'](this), setTimeout(() => {
        !this['firstPingSent'] && this['finishTest'](), !this['firstPongReceived'] && this['finishTest']();
    }, 0xbb8);
} ['onError']() {
    this['finishTest']();
} ['onOpen']() {
    this['sendPing']();
} ['sendPing']() {
    if (!this['firstPingSent']) this['firstPingSent'] = !![];
    if (!this['isWsOpen']()) {
        this['finishTest']();
        return;
    }
    const _0xb5cffa = 0x1,
        _0x58b931 = new _0x5768c5(_0xb5cffa);
    _0x58b931['writeUInt8'](_0x6a2b85), this['pingTime'] = performance['now'](), this['ws']['send'](_0x58b931['dataView']['buffer']), this['totalPings']++, this['totalPings'] >= 0x4 && this['finishTest']();
} ['onMessage'](_0xff18d8) {
    const _0x442eae = new _0x33e399(new DataView(_0xff18d8['data'])),
        _0x50d749 = _0x442eae['readUInt8']();
    if (_0x50d749 === _0x6a2b85) {
        if (!this['firstPongReceived']) this['firstPongReceived'] = !![];
        const _0x50c2bd = performance['now']() - this['pingTime'];
        this['updateTestResult'](_0x50c2bd), this['totalPings'] >= 0x4 ? this['finishTest']() : this['sendPing']();
    }
} ['updateTestResult'](_0x151b25) {
    if (_0x151b25 < this['result'] || this['result'] === -0x1) this['result'] = _0x151b25;
} ['finishTest']() {
    if (this['isWsOpen']()) this['ws']['close']();
    this['resolveTest']({
        'success': !![],
        'ping': this['result']
    });
}
}
class _0x4fd9af {
constructor({
    name: _0x14ece5,
    region: _0xb93400,
    url: _0x5e01f1,
    gameMode: _0xe7faff,
    gameVersion: gameVersion = null,
    serverId: serverId = null,
    sessionId: sessionId = null
}) {
    this['name'] = _0x14ece5, this['region'] = _0xb93400, this['url'] = _0x5e01f1, this['gm'] = _0xe7faff, this['gameVersion'] = gameVersion, this['season'] = null, this['serverId'] = serverId, this['sessionId'] = sessionId, this['pingTest'] = new _0x4bfe83(this);
} ['setGameMode'](_0x447665) {
    this['gm'] = _0x447665;
} ['setGameVersion'](_0x5bf028) {
    this['gameVersion'] = _0x5bf028;
} ['setServerId'](_0xebc1e3) {
    this['serverId'] = _0xebc1e3;
} ['setSeason'](_0x2c4a94) {
    this['season'] = _0x2c4a94;
} ['setGameSessionId'](_0x3b9587) {
    this['sessionId'] = _0x3b9587;
} ['runPingTest']() {
    return new Promise((_0x2ab4ac, _0x3b719d) => {
        this['pingTest']['run']()['then'](_0x15a90d => {
            _0x2ab4ac(_0x15a90d);
        })['catch'](_0x32f34e => _0x3b719d({
            'success': ![],
            'error': _0x32f34e
        }));
    });
}
}
class _0x273575 {
constructor(_0x90469f) {
    this['servers'] = [], this['createServerDefinitions'](_0x90469f);
} ['addServerDefinition']({
    name: _0x3f0e1f,
    region: _0x541018,
    url: _0x2dbf81,
    gm: _0x18e8a8
}) {
    const _0x24ffe5 = new _0x4fd9af({
        'name': _0x3f0e1f,
        'region': _0x541018,
        'url': _0x2dbf81,
        'gameMode': _0x18e8a8
    });
    this['servers']['push'](_0x24ffe5);
} ['createServerDefinitions'](_0xe2d677) {
    _0xe2d677['forEach'](_0x4eaf81 => this['addServerDefinition'](_0x4eaf81));
} ['getServersByRegion'](_0x7fed93) {
    return this['servers']['filter'](_0x5bb65c => _0x5bb65c['region'] === _0x7fed93);
} ['getServersByGameMode'](_0x222927) {
    return this['servers']['filter'](_0x1ca66f => _0x1ca66f['gm'] === _0x222927);
} ['getServersByRegionAndGameMode'](_0xf62c09, _0x389818) {
    return this['servers']['filter'](_0x408c85 => _0x408c85['gm'] === _0xf62c09 && _0x408c85['region'] === _0x389818);
} ['getServerByName'](_0x50fa75) {
    return this['servers']['find'](_0x3c5301 => _0x3c5301['name'] === _0x50fa75);
} ['runPingTests']() {
    const _0x1437ee = this['servers']['map'](_0x4ce2ab => _0x4ce2ab['runPingTest']());
    return Promise['allSettled'](_0x1437ee);
} ['sortByPing']({
    filterBy: filterBy = null,
    region: region = null,
    gameMode: gameMode = null
}) {
    if (!filterBy) return this['servers']['sort']((_0x296085, _0x1e8fd2) => _0x296085['pingTest']['result'] - _0x1e8fd2['pingTest']['result']);
    else {
        if (filterBy === 'region') return this['getServersByRegion'](region)['sort']((_0x5ac916, _0x242c12) => _0x5ac916['pingTest']['result'] - _0x242c12['pingTest']['result']);
        else {
            if (filterBy === 'gameMode') return this['getServersByGameMode'](gameMode)['sort']((_0x3ecb2a, _0x5d6e0f) => _0x3ecb2a['pingTest']['result'] - _0x5d6e0f['pingTest']['result']);
            else {
                if (filterBy === 'region and gameMode') return this['getServersByRegionAndGameMode'](gameMode, region)['sort']((_0x53cfc7, _0x4c4a71) => _0x53cfc7['pingTest']['result'] - _0x4c4a71['pingTest']['result']);
            }
        }
    }
}
}
const _0x3c3036 = 0x4,
_0x2051ba = 0x0,
_0x39c24e = 0x1,
_0x4031f1 = 0x2,
_0x149eef = 0x3,
_0x5612b1 = 0x4,
_0x15e7c6 = {
    'WebSocketOpen': 'WebSocketOpen',
    'WebSocketClose': 'WebSocketClose',
    'FirstConnect': 'FirstConnect',
    'SpectateClient': 'SpectateClient',
    'ClientResize': 'ClientResize',
    'SelectAnimal': 'SelectAnimal'
};
let _0x3ae9a5 = null;
class _0x4d0c03 {
constructor({
    serverInfo: _0x50ea22
}) {
    this['serverInfo'] = _0x50ea22, this['state'] = _0x2051ba, this['ws'] = null, this['emitter'] = new _0x504ec0(), this['gameDisconnected'] = ![];
} ['isPlayerInGame']() {
    return this['state'] >= _0x5612b1;
} ['testDisconnect']() {
    const _0x2590e0 = this['ws'] && this['ws']['readyState'] === WebSocket['OPEN'];
    _0x2590e0 && (_0x3ae9a5 = this['serverInfo'], this['ws']['close']());
} ['testReconnect']() {
    if (_0x3ae9a5) this['emitter']['emit']('TestReconnect', {
        ...this
    });
} ['connect']() {
    const _0x51a50d = window['location']['protocol'] === 'https:' ? 'wss://' : 'ws://',
        _0x3c2bc6 = window['location']['protocol'] === 'https:' ? 0x1bb : 0x50;
    this['ws'] = new WebSocket('' + _0x51a50d + this['serverInfo']['url'] + ':' + _0x3c2bc6), this['ws']['binaryType'] = 'arraybuffer', this['ws']['onopen'] = this['onOpen']['bind'](this), this['ws']['onclose'] = this['onClose']['bind'](this), this['ws']['onerror'] = this['onError']['bind'](this), this['ws']['onmessage'] = this['onMessage']['bind'](this);
} ['disconnect']() {
    const _0x179eee = this['ws'] && this['ws']['readyState'] === WebSocket['OPEN'];
    _0x179eee && (_0x1e64a7['send'](this['ws']), this['ws']['close']());
} ['onOpen']() {
    this['gameDisconnected'] = ![], this['emitter']['emit'](_0x15e7c6['WebSocketOpen'], {
        'success': !![],
        'serverInfo': this['serverInfo']
    }), this['sendFirstConnect']();
} ['onClose']() {
    console['log']('::: shahbaz:dev ::: this.gameDisconnected: ' + this['gameDisconnected']), !this['gameDisconnected'] && (_0x13b3b1('CONNECTION LOST! PLEASE WAIT WHILE WE RECONNECT.', 'error', 0x6, function () {}), this['gameDisconnected'] = ![]), this['emitter']['emit'](_0x15e7c6['WebSocketClose'], {
        'success': !![],
        'serverInfo': this['serverInfo']
    }), setTimeout(() => {
        $bus['emit']($bus['EVENTS']['ENABLE_PLAY_BUTTON']), $bus['emit']($bus['EVENTS']['ENABLE_SERVER_CONTROLS']);
    }, 0x3e8);
} ['onError']() {
    setTimeout(() => {
        $bus['emit']($bus['EVENTS']['ENABLE_PLAY_BUTTON']), $bus['emit']($bus['EVENTS']['ENABLE_SERVER_CONTROLS']);
    }, 0x3e8);
} ['onMessage'](_0x515e2d) {
    const _0x3cad26 = new DataView(_0x515e2d['data']),
        _0x4a0c3d = new _0x33e399(_0x3cad26);
    this['handleConnectMessage'](_0x4a0c3d);
} ['handleConnectMessage'](_0x113e73) {
    const _0x57aec6 = _0x113e73['readUInt8']();
    switch (_0x57aec6) {
    case _0x5ebbea['type']:
        this['handleSpectateClient'](_0x113e73);
        break;
    case _0x37a4ea['type']:
        this['handleClientResize'](_0x113e73);
        break;
    case _0x5253e3['type']:
        this['handlePlayGame'](_0x113e73);
        break;
    case _0x42715b['type']:
        this['handleSelectAnimal'](_0x113e73);
        break;
    case _0x3c3036:
        this['handleAnimalSelected'](_0x113e73);
        break;
    }
} ['handleSpectateClient'](_0x4f2461) {
    this['state'] = _0x4031f1;
    const {
        sessionId: _0x3e9e38,
        gameVersion: _0x1673c9,
        gameMode: _0x6bf6ec,
        season: _0xde8b8,
        serverId: _0x3b0196
    } = _0x5ebbea['handle'](_0x4f2461);
    this['serverInfo']['setGameSessionId'](_0x3e9e38), this['serverInfo']['setGameVersion'](_0x1673c9), this['serverInfo']['setGameMode'](_0x6bf6ec), this['serverInfo']['setSeason'](_0xde8b8), this['serverInfo']['setServerId'](_0x3b0196), _0x3e9e38 ? (this['serverInfo']['setGameSessionId'](_0x3e9e38), this['emitter']['emit'](_0x15e7c6['SpectateClient'], {
        'success': !![],
        'serverInfo': this['serverInfo']
    }), setTimeout(() => {
        $bus['emit']($bus['EVENTS']['ENABLE_PLAY_BUTTON']), $bus['emit']($bus['EVENTS']['ENABLE_SERVER_CONTROLS']);
    }, 0x3e8)) : (this['emitter']['emit'](_0x15e7c6['SpectateClient'], {
        'success': ![],
        'serverInfo': this['serverInfo']
    }), $bus['emit']($bus['EVENTS']['ENABLE_SERVER_CONTROLS']));
} ['handleClientResize'](_0x3fbcbf) {
    const {
        gameWidth: _0x2d5331,
        gameHeight: _0x246731,
        camX: _0x190857,
        camY: _0xc5c286,
        camZoom: _0x2d5f80
    } = _0x37a4ea['handle'](_0x3fbcbf);
    this['emitter']['emit'](_0x15e7c6['ClientResize'], {
        'success': !![],
        'serverInfo': _0xc9596f,
        'gameWidth': _0x2d5331,
        'gameHeight': _0x246731,
        'camX': _0x190857,
        'camY': _0xc5c286,
        'camZoom': _0x2d5f80
    });
} ['handleSelectAnimal'](_0x4537b1) {
    this['state'] = _0x149eef;
    const {
        isSpectator: _0x2d2a97,
        gameSession: _0x151aec,
        timeout: _0x1fe949,
        upgradeLevel: _0x342169,
        animalChoices: _0x50e827
    } = _0x42715b['handle'](_0x4537b1);
    this['emitter']['emit'](_0x15e7c6['SelectAnimal'], {
        'success': !![],
        'serverInfo': this['serverInfo'],
        'isSpectator': _0x2d2a97,
        'gameSession': _0x151aec,
        'timeout': _0x1fe949,
        'upgradeLevel': _0x342169,
        'animalChoices': _0x50e827
    });
} ['handleAnimalSelected'](_0x208319) {
    this['state'] = _0x5612b1;
} ['sendFirstConnect']() {
    _0x242bb4['send'](this['ws'], this['serverInfo']['sessionId']), this['emitter']['emit'](_0x15e7c6['FirstConnect'], {
        'success': !![],
        'serverInfo': this['serverInfo']
    });
} ['playGame'](_0x108d3c, _0x34e873, _0x422723) {
    _0x5253e3['send'](this['ws'], _0x108d3c, _0x34e873, _0x422723);
} ['selectAnimal'](_0x23e67d) {
    _0x42715b['send'](this['ws'], _0x23e67d), this['emitter']['emit'](_0x15e7c6['AnimalSelected'], {
        'success': !![],
        'serverInfo': this['serverInfo'],
        'animalChoiceIndex': _0x23e67d
    });
}
}
const _0xc9596f = new _0x4fd9af({
    'name': 'LOCAL',
    'region': 'local',
    'url': 'localhost',
    'gameMode': 0x0
}),
_0x3dd2d2 = new _0x4d0c03({
    'serverInfo': _0xc9596f
}),
_0x9385c2 = () => {
    try {
        _0x3dd2d2['connect'](), _0x3dd2d2['ws']['addEventListener']('open', () => {
            if (_0x3dd2d2['ws']['readyState'] === WebSocket['OPEN']) console['log']('::: testing suite ::: Test Passed!', 'ws.readyState:', _0x3dd2d2['ws']['readyState']);
            else console['log']('::: testing suite ::: Test Failed! readyState was not equal to WebSocket.OPEN. ws.readyState:', _0x3dd2d2['ws']['readyState']);
            _0x3dd2d2['ws']['close']();
        });
    } catch (_0x94884f) {
        console['log']('::: tesitng-suite ::: Test Failed!', _0x94884f), _0x3dd2d2['ws']['close']();
    }
},
_0x110d9c = () => {
    try {
        _0x3dd2d2['connect'](), _0x3dd2d2['ws']['addEventListener']('open', () => {
            if (_0x3dd2d2['ws']['readyState'] === WebSocket['OPEN']) _0x3dd2d2['sendFirstConnect']();
        }), _0x3dd2d2['ws']['addEventListener']('message', async _0x18e260 => {
            const _0x175e1c = new DataView(_0x18e260['data']),
                _0xd3d32d = new _0x33e399(_0x175e1c),
                _0x2ddbde = _0xd3d32d['readUInt8']();
            console['log']('::: testing-suite message handled ::: msgType:', _0x2ddbde);
            const _0xaa907f = _0x2ddbde == _0x5ebbea['type'];
            console['log']('::: testing-suite isSpectateClient:', _0xaa907f);
            if (_0xaa907f) {
                console['log']('::: testing-suite reading SpectateClient msg :::');
                const _0x1a0fc9 = _0xd3d32d['readString'](),
                    _0xf1eda4 = _0xd3d32d['readUInt16'](),
                    _0x362c3b = _0xd3d32d['readUInt8'](),
                    _0x180df1 = _0xd3d32d['readString']();
                console['log']('::: testing-suite received SpectateClient :::', _0x1a0fc9, _0xf1eda4, _0x362c3b, _0x180df1);
            }
        });
    } catch (_0x4223eb) {
        console['log']('::: tesitng-suite ::: Test Failed!', _0x4223eb), _0x3dd2d2['ws']['close']();
    }
};
class _0x527dbf {
constructor() {
    this['isEGInitialized'] = ![];
} ['initEGAps']() {
    window['egAps'] && window['egAps']['launchAds'] && !this['isEGInitialized'] ? (this['isEGInitialized'] = !![], window['egAps']['launchAds'](), console['log']('::: EG:launchAds :::')) : console['log']('::: EGAps:missing :::');
} ['loadEGScripts']() {
    return new Promise((_0x3f6472, _0x40f998) => {
        try {
            !!window['egAps'] ? (console['log']('gtm :: loaded - init'), _0x3f6472()) : (console['log']('gtm :: add listener'), window['addEventListener']('eg_gtm_loaded', function () {
                console['log']('gtm :: init'), _0x3f6472();
            }));
        } catch (_0x41bf58) {
            _0x40f998(_0x41bf58);
        }
    });
} ['playVideoAd'](_0x43ffda) {
    window['egApsListener'] = _0x43ffda, this['isEGInitialized'] ? (console['log']('::: EG:play video ad :::'), window['dataLayer']['push']({
        'event': 'mopVideo'
    })) : _0x43ffda({
        'type': 'preroll',
        'event': 'empty'
    });
} ['playIncentivizedVideoAd'](_0x75e4a2) {
    window['egApsListener'] = _0x75e4a2, this['isEGInitialized'] ? (console['log']('::: EG:play video ad :::'), window['dataLayer']['push']({
        'event': 'mopRewarded'
    })) : _0x75e4a2({
        'type': 'preroll',
        'event': 'empty'
    });
}
}
const _0x5f0a10 = new _0x527dbf();
var _0x4e438d = 0x0,
_0x1c5f12 = ![],
_0x182f66 = ![],
_0x2834ef = ![],
_0x43f340;

function _0x589fb4() {
const _0x1508d1 = document['getElementById']('eg-ccpa-msg-id');
_0x1508d1 && _0x1508d1['remove']();
}

function _0xc2bed0() {
return new Promise(_0x36d75f => {
    if (_0x182f66 || _0x1c5f12) _0x36d75f();
    else !_0x527dbf['isEGInitialized'] && _0x5f0a10['loadEGScripts']()['then'](() => {
        _0x5f0a10['initEGAps'](), _0x182f66 = !![], _0x36d75f();
    })['catch'](_0x376946 => {
        console['log']('::: initAdController error :::', _0x376946), reject();
    });
});
}
const _0x325762 = () => new Promise(_0x5016d7 => {
const _0x4c8686 = 'https://api.enthusiastgaming.net/scripts/cdn.enthusiast.gg/script/eg-aps/release/eg-aps-bootstrap-v2.0.0.bundle.js?site=mope.io';
fetch(new Request(_0x4c8686))['then'](_0x3cc4b7 => _0x5016d7(![]))['catch'](_0xa5494 => _0x5016d7(!![]));
});
async function _0x495e31() {
_0x1c5f12 = ![];
const _0x3030ae = 'https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js';
try {
    await fetch(new Request(_0x3030ae))['catch'](_0x212e72 => _0x1c5f12 = !![]);
} catch (_0x4cc72a) {
    _0x1c5f12 = !![];
} finally {
    console['log']('AdBlock Enabled: ' + _0x1c5f12);
}
}!_0xb29884 && (document['getElementById']('xTRbLiXhOoyu_adsbl0ck') ? _0x495e31() : _0x1c5f12 = !![], console['log']('ad block enabled:', _0x1c5f12));

function _0x21644b() {
var _0x48404a = navigator['userAgent']['match'](/Chrom(e|ium)\/([0-9]+)\./);
return _0x48404a ? parseInt(_0x48404a[0x2], 0xa) : ![];
}
var _0x5908af = !_0xb29884 && _0x21644b() && (_0x21644b() == 0x54 || _0x21644b() == 0x55),
_0x381c09 = ![];
if (_0x5908af && !_0x381c09) {
console['log']('slow chrome!');
var _0x3002b1 = document['getElementById']('chromebugdiv');
_0x3002b1 && (_0x3002b1['style']['display'] = 'block');
var _0x3002b1 = document['getElementById']('chromebugp');
_0x3002b1 && (_0x3002b1['innerHTML'] = 'Your browser (Chrome V ' + _0x21644b() + ') has a bug, which can make mope.io laggy!');
var _0x3002b1 = document['getElementById']('chromebug_closebut');
_0x3002b1 && (_0x3002b1['onclick'] = function () {
    var _0x34fb83 = document['getElementById']('chromebugdiv');
    if (_0x34fb83) _0x34fb83['parentNode']['removeChild'](_0x34fb83);
    if (window['localStorage']) try {
        window['localStorage']['setItem']('chromeBug_closed', !![]);
    } catch (_0x25dd44) {}
});
} else {
var _0x3002b1 = document['getElementById']('chromebugdiv');
if (_0x3002b1) _0x3002b1['parentNode']['removeChild'](_0x3002b1);
}
console['log']('Chrome version ' + _0x21644b());
var _0x3de27f = _0x4c579c(document['location']['search']),
_0x535bba = _0x3de27f['y8BannerModify'] > 0x0;
if (_0xb29884 || _0x535bba) {
var _0x3002b1, _0x3002b1 = document['getElementById']('appsDiv');
if (_0x3002b1) _0x3002b1['parentNode']['removeChild'](_0x3002b1);
}
var _0x43fa88 = 0x0,
_0x43f003 = 0x0;
if (window['localStorage']) {
var _0xfdc77c = window['localStorage']['getItem']('lastAdShowT') * 0x1 || 0x0,
    _0x372da8 = +new Date() - _0xfdc77c;
_0x43f003 = _0x372da8 > 0x0 ? _0xfdc77c : 0x0, _0x43fa88 = window['localStorage']['getItem']('gamesSinceAd') * 0x1, _0x43fa88 < 0x0 && (_0x43fa88 = 0x0), console['log']('videoAd: ' + _0x43fa88 + ' games since last ad!');
}
var _0x295c0f = +new Date(),
_0x4ab633 = ![],
_0x5304a5 = () => new Promise(async _0x104728 => {
    _0x1c5f12 = await _0x325762(), _0x104728(!_0x1c5f12 && !_0x2834ef);
}),
_0x3de3fb = !![],
_0x392036 = function () {
    var _0x242898 = _0x285caa || location['protocol'] == 'file:',
        _0x49ab45 = !_0x242898;
    return _0x49ab45;
};
const _0x374d63 = () => {
const _0x3bbb88 = 0x3ac / 0x21c,
    _0x117a04 = window['innerWidth'] * 0.55;
return {
    'width': Math['round'](_0x117a04),
    'height': Math['round'](_0x117a04 / _0x3bbb88)
};
};

function _0x51ff85() {
try {
    console['log']('Refreshing banner ads'), _0x45a8b5($bus['CONSTANTS']['AD_SCREEN_LAYOUTS']['MENU']);
} catch (_0x2ea068) {
    console['log']('BANNERADS: error refreshing: ' + _0x2ea068);
}
_0xd317c0(), _0x3b6313(), _0x4a8d9c();
}

function _0x99c3c8() {
let _0x18b04a = null;
const {
    innerWidth: _0x23faab,
    innerHeight: _0x4bb2e4
} = window;
console['log']('::: ad-tech detecting dynamic bottom ad :::');
if (_0x4bb2e4 >= 0x19e) _0x18b04a = $bus['CONSTANTS']['AD_IDS']['BOTTOM']['SMALL'];
_0x23faab > 0x300 && _0x4bb2e4 >= 0x19e && (_0x18b04a = $bus['CONSTANTS']['AD_IDS']['BOTTOM']['SMALL']);
if (_0x18b04a) console['log']('::: ad-tech Showing Bottom Ad :::');
return _0x18b04a;
}
const _0x248685 = () => {
    return (_0xb29884 || window['innerWidth'] <= 0x300) && window['innerWidth'] < 0x3e8;
},
_0x860a38 = {},
_0x522025 = {};

function _0xa29a8d(_0x560d5a) {
let _0x22ae1a, _0x4bf712;
_0x522025[_0x560d5a] = Date['now']();
_0x860a38[_0x560d5a] && ({
    el: _0x22ae1a,
    provider: _0x4bf712
} = _0x860a38[_0x560d5a], _0x22ae1a['style']['visibility'] = 'hidden', _0x22ae1a['style']['opacity'] = '0', _0x22ae1a['style']['pointerEvents'] = 'none', _0x4bf712 === $bus['CONSTANTS']['AD_PROVIDERS']['ADINPLAY'] && (_0x22ae1a['parentElement'] && _0x22ae1a['parentElement'] !== document['body'] && (_0x22ae1a['parentElement']['removeChild'](_0x22ae1a), document['body']['appendChild'](_0x22ae1a))));
const _0x496239 = document['getElementById'](_0x560d5a);
_0x496239 && _0x496239 !== _0x22ae1a && (_0x496239['style']['visibility'] = 'hidden', _0x496239['style']['opacity'] = '0', _0x496239['style']['pointerEvents'] = 'none'), $bus['emit']($bus['EVENTS']['HIDE_AD'], _0x560d5a);
}
let _0x8f7114 = 0x0;

function _0x4b3f37(_0x36b957) {
const _0x4551e6 = _0x4c66a4();
if (_0x4551e6['includes'](_0x36b957))
    for (let _0x3ec0f5 = 0x0; _0x3ec0f5 < _0x4551e6['length']; _0x3ec0f5++) {
        const _0x5c67e3 = _0x4551e6[_0x3ec0f5];
        if (_0x5c67e3 !== _0x36b957 && _0x5c67e3 in _0x860a38) {
            _0xa29a8d(_0x5c67e3);
            break;
        }
    }
}

function _0x4c66a4() {
return Object['keys']($bus['CONSTANTS']['AD_IDS']['BOTTOM'])['map'](_0x440fcd => $bus['CONSTANTS']['AD_IDS']['BOTTOM'][_0x440fcd]);
}

function _0x5db2e1(_0x32fb49) {
return _0x4c66a4()['includes'](_0x32fb49);
}
window['SA_FALLBACK_HANDLER'] = () => {
_0x137b7c(adId, ![]);
};

function _0x14d601(_0x377195, _0x2a349b) {
if (!(_0x377195 in _0x860a38)) return ![];
const {
    el: _0x1ac3ac,
    ts: _0x4693de,
    provider: _0x36a8d2
} = _0x860a38[_0x377195];
if (Date['now']() - _0x4693de < 0x30d4) return $bus['emit']($bus['EVENTS']['SHOW_AD_START'], _0x377195), _0x1ac3ac['style']['visibility'] = 'visible', _0x1ac3ac['style']['opacity'] = '1', _0x1ac3ac['style']['pointerEvents'] = 'auto', $bus['emit']($bus['EVENTS']['SHOW_AD_LOADED'], _0x860a38[_0x377195]), !![];
return ![];
}

function _0x22a8dc(_0x1cc5dd, _0x11495b, _0x2df9e9) {
!_0x860a38[_0x1cc5dd] && (_0x860a38[_0x1cc5dd] = {}), console['log']('RESOLVING AD:', _0x1cc5dd, _0x11495b, _0x2df9e9), _0x860a38[_0x1cc5dd]['el'] = _0x11495b, _0x860a38[_0x1cc5dd]['ts'] = Date['now'](), _0x860a38[_0x1cc5dd]['provider'] = _0x2df9e9, _0x860a38[_0x1cc5dd]['adId'] = _0x1cc5dd, _0x11495b['style']['visibility'] = 'visible', _0x11495b['style']['opacity'] = '1', _0x11495b['style']['pointerEvents'] = 'auto', $bus['emit']($bus['EVENTS']['SHOW_AD_LOADED'], _0x860a38[_0x1cc5dd]);
}
async function _0x137b7c(_0x5830a7, _0x483a15) {
let _0x4c05ac = Date['now']();
_0x5db2e1(_0x5830a7) && _0x4b3f37(_0x5830a7);
if (_0x2f19b0(_0x5830a7, _0x4c05ac)) return _0xa29a8d(_0x5830a7);;
if (_0x14d601(_0x5830a7, _0x483a15)) return;
$bus['emit']($bus['EVENTS']['SHOW_AD_START'], _0x5830a7);
let _0x159309 = ![];
_0x4c05ac = Date['now']();
if (_0x2f19b0(_0x4c05ac, _0x5830a7)) return _0xa29a8d(_0x5830a7);
else _0x159309 && _0x22a8dc(_0x5830a7, _0x159309, $bus['CONSTANTS']['AD_PROVIDERS']['ADINPLAY']);
}

function _0x2f19b0(_0x145203, _0x291fb5) {
if (!_0x522025[_0x145203]) return ![];
return _0x522025[_0x145203] > _0x291fb5;
}
async function _0x50672d(_0x175878) {
const _0x1b32d1 = Date['now']();
if (typeof aiptag === 'undefined' || !aiptag || !aiptag['cmd'] || !aiptag['cmd']['display']) {
    console['error']('aiptag was undefined return early.');
    return;
};
return new Promise((_0x1e50c9, _0xf59e93) => {
    aiptag['cmd']['display']['push'](function () {
        if (typeof aipDisplayTag !== 'undefined') {
            aipDisplayTag['display'](_0x175878);
            let _0x23bbea = document['getElementById'](_0x175878);
            return !_0x23bbea && (_0x860a38[_0x175878] && _0x860a38[_0x175878]['provider'] === $bus['CONSTANTS']['AD_PROVIDERS']['ADINPLAY']) && (_0x23bbea = _0x860a38[_0x175878]['el']), _0x1e50c9(_0x23bbea);
        } else return console['error']('Aip display tag was undefined'), _0x1e50c9(null);
    });
});
}

function _0x53898e() {
window['innerWidth'] > 0x4c4 ? (_0x137b7c($bus['CONSTANTS']['AD_IDS']['RIGHT']), _0x137b7c($bus['CONSTANTS']['AD_IDS']['LEFT'])) : (_0xa29a8d($bus['CONSTANTS']['AD_IDS']['RIGHT']), _0xa29a8d($bus['CONSTANTS']['AD_IDS']['LEFT']));
}
const _0x34a652 = () => {
    _0x860a38[$bus['CONSTANTS']['AD_IDS']['BOTTOM']['SMALL']] && _0xa29a8d($bus['CONSTANTS']['AD_IDS']['BOTTOM']['SMALL']), _0x860a38[$bus['CONSTANTS']['AD_IDS']['BOTTOM']['MEDIUM']] && _0xa29a8d($bus['CONSTANTS']['AD_IDS']['BOTTOM']['MEDIUM']), _0x860a38[$bus['CONSTANTS']['AD_IDS']['BOTTOM']['LARGE']] && _0xa29a8d($bus['CONSTANTS']['AD_IDS']['BOTTOM']['LARGE']);
},
_0x32653f = () => {
    _0xa29a8d($bus['CONSTANTS']['AD_IDS']['HOME']);
    const _0x55363e = _0x99c3c8();
    _0x55363e ? _0x137b7c(_0x55363e) : _0x34a652(), _0x248685() ? _0xa29a8d($bus['CONSTANTS']['AD_IDS']['RIGHT']) : window['innerWidth'] > 0x4c4 ? (_0x137b7c($bus['CONSTANTS']['AD_IDS']['LEFT']), _0x137b7c($bus['CONSTANTS']['AD_IDS']['RIGHT'])) : (_0xa29a8d($bus['CONSTANTS']['AD_IDS']['LEFT']), _0xa29a8d($bus['CONSTANTS']['AD_IDS']['RIGHT']));
},
_0x44b7f2 = () => {
    console['log'](':;'), _0x137b7c($bus['CONSTANTS']['AD_IDS']['HOME']), _0x53898e(), _0x34a652();
},
_0x59d758 = () => {
    const _0x7f9fe = 'enthusiast';
    if (window['egAps']) {
        const _0x3d81e8 = document['querySelectorAll']('[data-provider=\"' + _0x7f9fe + '\"]');
        console['log']('::: ad-tech renderMopeDisplayAds elements :::', _0x3d81e8), _0x3d81e8['forEach'](_0x37e09e => {
            console['log']('::: ad-tech renderMopeDisplayAds elem :::', _0x37e09e, _0x37e09e['id']), _0x37e09e['id'] && (console['log'](':: ad-tech window.egAps.render([' + _0x37e09e['id'] + ']) ::'), window['egAps']['render']([_0x37e09e['id']]));
        });
    }
},
_0x45a8b5 = function (_0x2b3f34, _0x7a749a) {
    const {
        ARENA: _0x497bdd,
        UPGRADE: _0x3bbad4,
        MENU: _0x375854
    } = $bus['CONSTANTS']['AD_SCREEN_LAYOUTS'];
    console['log']('::: ad-tech: mopeAds() location: ' + _0x2b3f34 + ' :::');
    switch (_0x2b3f34) {
    case _0x3bbad4:
        _0x32653f();
        break;
    case _0x497bdd:
        if (_0x3c6c95) return;
        _0xa29a8d($bus['CONSTANTS']['AD_IDS']['LEFT']), _0x32653f();
        break;
    case _0x375854:
        if (_0x3c6c95) return;
        _0x44b7f2();
        break;
    }
    if (_0x43f340 !== _0x2b3f34 || _0x2b3f34 === _0x3bbad4) {
        _0x43f340 = _0x2b3f34;
        if (_0x182f66) console['time'](':: ad-tech renderMopeDisplayAds ::'), _0x59d758(), console['timeEnd'](':: ad-tech renderMopeDisplayAds ::'), setTimeout(_0x589fb4, 0xfa0);
        else !_0x182f66 && _0xc2bed0()['then'](() => {
            setTimeout(_0x589fb4, 0xfa0);
        })['catch'](() => setTimeout(_0x589fb4, 0xfa0));
    }!_0x7a749a && _0x3b6313();
};
$bus['on']($bus['EVENTS']['UI_PRESS_PLAY'], () => {
_0x5304a5()['then'](_0x31b940 => {
    _0x31b940 ? _0x293ae5() : window['onVideoAdFinished'](![]);
}), _0xa29a8d($bus['CONSTANTS']['AD_IDS']['HOME']);
});
var _0x15d9f2 = ![];

function _0xc98c03(_0x3149fc) {}
var _0x10e18b = ![],
_0x40d2ee = ![],
_0x2127a9 = new _0x407dea(0xa, 'white');
_0x2127a9['setText']('Connecting...'), _0x2127a9['renderScale'] = 0x1;
var _0x293ae5 = async function () {
console['log']('::: ad-tech ::: Attempting to play Preroll Video Ad.'), $bus['emit']($bus['EVENTS']['START_VIDEO_AD']);
if (_0x1c5f12 || _0x2834ef) return;
_0x2834ef = !![];
let _0x1deebe = ![];
setTimeout(() => {
    !_0x1deebe && (console['log']('::: ad-tech ::: Did not receive preroll ad response from egApp in time (7s)'), $bus['emit']($bus['EVENTS']['HIDE_VIDEO_AD']), window['onVideoAdFinished'](![]));
}, 0x1b58), $bus['emit']($bus['EVENTS']['SHOW_VIDEO_AD']), _0x5f0a10['playVideoAd'](_0x26d5eb => {
    _0x1deebe = !![], console['log']('::: ad-tech ::: playVideoAd callback hit!', _0x26d5eb);
    if (_0x26d5eb['event'] === 'start') _0x40d2ee = !![], $bus['emit']($bus['EVENTS']['START_VIDEO_AD']);
    else {
        if (_0x26d5eb['event'] === 'skipped' || _0x26d5eb['event'] === 'empty') $bus['emit']($bus['EVENTS']['HIDE_VIDEO_AD']), window['onVideoAdFinished'](![]);
        else _0x26d5eb['event'] === 'finished' && ($bus['emit']($bus['EVENTS']['HIDE_VIDEO_AD']), window['onVideoAdFinished'](!![]));
    }
});
};
$bus['on']($bus['EVENTS']['REQUEST_INCENTIVIZED_AD'], () => {
console['log']('::: iandev ::: Requesting Incentivized Ads.'), _0x4815ed['playIncentivizedVideoAd']();
}), window['onVideoAdFinished'] = function (_0x4c70af) {
$bus['emit']($bus['EVENTS']['END_VIDEO_AD']), _0x4ab633 = ![], _0x40d2ee = ![], _0x10e18b = ![], _0x50791a['focus']();
if (_0x4c70af) {
    _0x43fa88 = 0x0, _0x43f003 = +new Date();
    if (window['localStorage']) try {
        window['localStorage']['setItem']('lastAdShowT', _0x43f003), window['localStorage']['setItem']('gamesSinceAd', _0x43fa88);
    } catch (_0x13fd57) {
        console['log']('localstorage error saving ads');
    } else console['log']('no localstorage, cant save ad nums');
} else console['log']('not successful play, will play ad again');
if (_0x4c70af && (!_0x3c6c95 || _0x3c6c95 && _0x2790d1)) {
    const _0x248325 = _0x3c6c95 ? $bus['CONSTANTS']['AD_SCREEN_LAYOUTS']['UPGRADE'] : $bus['CONSTANTS']['AD_SCREEN_LAYOUTS']['MENU'];
    _0x45a8b5(_0x248325), console['log']('VIDEOADS: Video done (success: ' + _0x4c70af + '), joining game!');
    try {
        console['log']('::: video ad played joining game :::'), !_0x3c6c95 && _0x2be865(![]);
    } catch (_0x3532eb) {
        console['error']('Error joining game after video ad:', _0x3532eb);
    }
} else {
    if (!_0x3c6c95 || _0x3c6c95 && _0x2790d1) try {
        console['log']('::: video ad not played or skipped joining game :::'), !_0x3c6c95 && _0x2be865(![]);
    } catch (_0x1df1f8) {
        console['error']('Error joining game after video ad:', _0x1df1f8);
    }
}
};
var _0x2dd932 = function (_0x6cfa0c, _0x571092, _0x556997) {
var _0x2d3591 = document['head'] || document['getElementsByTagName']('head')[0x0],
    _0x5e497 = document['createElement']('script'),
    _0x981c69 = !![];
_0x5e497['async'] = 'async', _0x5e497['type'] = 'text/javascript', _0x5e497['charset'] = 'UTF-8', _0x5e497['src'] = _0x6cfa0c, _0x5e497['onload'] = _0x5e497['onreadystatechange'] = function () {
    _0x981c69 && (!_0x5e497['readyState'] || /loaded|complete/ ['test'](_0x5e497['readyState'])) && (_0x981c69 = ![], _0x571092(), _0x5e497['onload'] = _0x5e497['onreadystatechange'] = null);
}, _0x2d3591['appendChild'](_0x5e497);
};
try {
_0x325762()['then'](_0x322019 => {
    _0x1c5f12 = _0x322019;
    if (!_0x1c5f12) _0xc2bed0();
});
} catch (_0x54aeb7) {
console['error']('Error initializing ads:', _0x54aeb7);
}

function _0xbbcdd9() {
for (let _0x22dd58 in _0x860a38) {
    _0xa29a8d(_0x22dd58);
}
$bus['emit']($bus['EVENTS']['HIDE_ALL_ADS']);
}
const _0x48b67c = function () {
_0xbbcdd9(), $bus['emit']($bus['EVENTS']['HIDE_ANIMAL_CHOICE']);
};
_0x48b67c();
var _0x54d89a;

function _0x19ef3c(_0x53cc61) {
if (window['WebViewJavascriptBridge']) return _0x53cc61(WebViewJavascriptBridge);
if (window['WVJBCallbacks']) return window['WVJBCallbacks']['push'](_0x53cc61);
window['WVJBCallbacks'] = [_0x53cc61];
if (_0x197353) {
    var _0x5af5e4 = document['createElement']('iframe');
    _0x5af5e4['style']['display'] = 'none', _0x5af5e4['src'] = 'wvjbscheme://__BRIDGE_LOADED__', document['documentElement']['appendChild'](_0x5af5e4), setTimeout(function () {
        document['documentElement']['removeChild'](_0x5af5e4);
    }, 0x0);
}
}
async function _0x57e0c8() {
return typeof _0x54d89a === 'undefined' || !_0x54d89a ? new Promise((_0x179e78, _0x5e78df) => {
    let _0x2db8c0 = setTimeout(() => {
        return _0x2db8c0 = null, _0x179e78(null);
    }, 0x61a8);
    _0x19ef3c(_0x232d68 => {
        if (_0x2db8c0 === null) return;
        return clearTimeout(_0x2db8c0), _0x2db8c0 = null, _0x54d89a = _0x232d68, _0x179e78(_0x232d68);
    });
}) : _0x54d89a;
}
_0xb29884 && (console['log']('Trying to setup the javascript ios bridge...'), _0x19ef3c(function (_0x44a513) {
console['log']('Successfully set up bridge!'), _0x54d89a = _0x44a513, setTimeout(() => {
    _0x44a513['callHandler']('client-bridge-ready'), _0x44a513['callHandler']('app-data', JSON['stringify']($config['mobileAppData']));
}, 0x0);
}));
async function _0x35ef7c() {
console['log']('showing mobile ad......');
const _0x5d9f54 = await _0x57e0c8();
!_0x5d9f54 ? console['error']('Could not find mobile native bridge.') : _0x5d9f54['callHandler']('show-ad');
}
var _0x39c3f7 = !!navigator['userAgent']['platform'] && /iPad|iPhone|iPod/ ['test'](navigator['userAgent']['platform']),
_0x269ab3 = navigator['userAgent']['toLowerCase']()['indexOf']('android') > -0x1;
if ((_0x39c3f7 || _0x269ab3) && !_0xb29884) {
var _0x36e1c4 = ![];
if (window['localStorage']) {
    _0x36e1c4 = window['localStorage']['getItem']('oldVisitor') > 0x0;
    try {
        window['localStorage']['setItem']('oldVisitor', 0x1);
    } catch (_0x374734) {
        _0x36e1c4 = !![];
    }
}
if (!_0x36e1c4) {
    if (_0x39c3f7) window['location']['href'] = 'https://itunes.apple.com/us/app/mope.io/id1086471119?ls=1&mt=8';
} else {}
}
console['log']('is mobile app:', _0xb29884), _0xb29884 && ((async () => {
console['log']('setting up mobile shop!');
const _0x49d014 = await _0x57e0c8();
if (!_0x49d014) {
    console['error']('Did not find a native bridge for mobile app.');
    return;
}
let _0x5b94b3 = null;
_0x49d014['registerHandler']('iap-data-failed', _0x429a2d => {
    console['error']('Error when fetching iap data.. error:', _0x429a2d);
}), _0x49d014['registerHandler']('iap-data', _0x25f118 => {
    const _0x130a4d = JSON['parse'](_0x25f118)['map'](_0x5b6927 => {
        return {
            'coins': _0x5b6927['title'],
            'id': _0x5b6927['id'],
            'description': _0x5b6927['description'],
            'price': _0x5b6927['price']
        };
    });
    $bus['emit']($bus['EVENTS']['RECEIVED_IN_APP_PURCHASE_DATA'], _0x130a4d);
}), _0x49d014['registerHandler']('iap-success', _0x3c999e => {
    _0x3c999e = typeof _0x3c999e === 'string' ? JSON['parse'](_0x3c999e) : _0x3c999e;
    const _0x1f2913 = _0x197353 ? 'apple' : 'google';
    _0x5b94b3 === _0x3c999e['productId'] && $bus['emit']($bus['EVENTS']['IN_APP_PURCHASE_GO_TO_PROCESSING'], _0x5b94b3);
    const _0x4467d4 = _0x465906 => {
            _0x5b94b3 === _0x3c999e['productId'] && ($bus['emit']($bus['EVENTS']['IN_APP_PURCHASE_FAILED'], {
                'itemId': _0x5b94b3,
                'error': _0x465906
            }), _0x5b94b3 = null, _0x13b3b1('Error when processing purchase. Contact an admin if you did not receive your coins.', 'error'));
        },
        _0x1e5ed3 = async () => {
            _0x5b94b3 === _0x3c999e['productId'] && (_0x13b3b1('Successfully purchased product!', 'success'), await _0x451390(), $bus['emit']($bus['EVENTS']['IN_APP_PURCHASE_SUCCESS'], _0x5b94b3), _0x5b94b3 = null);
        };
    $['ajax']({
        'url': _0x3ff1e5 + '/processInAppPurchase',
        'type': 'POST',
        'dataType': 'json',
        'data': {
            'userId': _0x5dcedd,
            'passwordToken': _0x268546,
            'service': _0x1f2913,
            ..._0x3c999e
        },
        'success': function (_0x469beb) {
            console['log']('/processInAppPurchase success response', _0x469beb, _0x469beb['success']), _0x469beb['success'] ? _0x1e5ed3() : _0x4467d4(_0x469beb['error']);
        },
        'error': function (_0x129bb2) {
            console['log']('/processInAppPurchase error response', _0x129bb2, _0x129bb2['success'], _0x129bb2['error']), _0x4467d4(_0x129bb2['error']);
        }
    });
}), _0x49d014['registerHandler']('iap-deferred', _0x4052c2 => {
    console['error']('iap for product:', _0x4052c2, 'deferred'), $bus['emit']($bus['EVENTS']['IN_APP_PURCHASE_FAILED'], {
        'itemId': _0x5b94b3,
        'error': 'Deferred purchase.',
        'deferred': !![]
    }), _0x5b94b3 = null;
}), _0x49d014['registerHandler']('iap-failed', _0x2b653e => {
    (_0x5b94b3 && _0x2b653e == _0x5b94b3 || !_0x2b653e) && (_0x2b653e = 'There was an error while purchasing the current item. Reload the app and try again or if the problem persists contact an admin.'), $bus['emit']($bus['EVENTS']['IN_APP_PURCHASE_FAILED'], {
        'itemId': _0x5b94b3,
        'error': _0x2b653e
    }), _0x5b94b3 = null;
}), $bus['on']($bus['EVENTS']['UI_SELECTED_IN_APP_PURCHASE_ITEM'], _0x3da076 => {
    if (_0x5b94b3 !== null) return $bus['emit']($bus['EVENTS']['IN_APP_PURCHASE_FAILED'], {
        'itemId': _0x3da076,
        'error': 'Wait until the current purchasing item is complete.'
    });
    _0x5b94b3 = _0x3da076, _0x49d014['callHandler']('iap-purchase', _0x3da076);
});
})());
var _0x7df987 = ['Team Mode', 'Wild Mope'],
_0x4c31d0 = ![],
_0x51b8f2 = ![],
_0x3732b2, _0x2e811f = [],
_0x377506 = null;
let _0x26ff96 = null;
var _0x21058f = null,
_0x162a2b = {};

function _0x283aa1(_0x44da9f) {
return _0x44da9f in _0x162a2b ? Math['round'](_0x162a2b[_0x44da9f]) : '?';
}
var _0x3e5bdf = function (_0x5005f8) {
    this['serverObj'] = _0x5005f8;
    var _0x15185c = window['location']['protocol'] === 'https:' ? 'wss://' : 'ws://',
        _0x3ca785 = window['location']['protocol'] === 'https:' ? 0x1bb : 0x50,
        _0x5a3b9e = _0x15185c + this['serverObj']['serverConnURL'] + ':' + _0x3ca785;
    this['testWs'] = new WebSocket(_0x5a3b9e), this['startT'] = +new Date(), this['testWs']['binaryType'] = 'arraybuffer';
    var _0xdbe71e = this;
    this['pingsRec'] = 0x0, this['pingsDelayMsTot'] = 0x0, this['testWs']['onopen'] = function () {
        _0xdbe71e['sendPing']();
    }, this['sendPing'] = function () {
        var _0x359535 = new _0x5768c5(0x1);
        _0x359535['writeUInt8'](0xff), _0xdbe71e['testWs']['send'](_0x359535['dataView']['buffer']), this['startT'] = +new Date();
    }, this['testWs']['onmessage'] = function (_0x2e163a) {
        var _0x2e163a = new _0x33e399(new DataView(_0x2e163a['data']));
        if (_0x2e163a['readUInt8']() == 0xff) {
            var _0xba9e39 = +new Date() - _0xdbe71e['startT'];
            _0xdbe71e['pingsRec'] += 0x1, _0xdbe71e['pingsDelayMsTot'] += _0xba9e39, _0xdbe71e['pingsRec'] >= 0x4 ? (_0xdbe71e['serverObj']['ping'] = _0xdbe71e['pingsDelayMsTot'] / _0xdbe71e['pingsRec'], _0x162a2b[_0xdbe71e['serverObj']['region']] = _0xdbe71e['serverObj']['ping'], _0xdbe71e['testWs']['close'](), _0x33c81b(_0xdbe71e)) : _0xdbe71e['sendPing']();
        }
    }, this['testWs']['onerror'] = function (_0x2f9c3b) {
        console['log']('TestWS: error connecting to server ' + _0xdbe71e['serverObj']['name'] + ' IP ' + _0xdbe71e['serverObj']['ip'] + _0x2f9c3b);
    }, this['testWs']['onclose'] = function (_0x53b927) {};
},
_0x49dc6b = 0x0;

function _0x546b34(_0x53c8a3) {
if (_0x4c31d0) return;
_0x49dc6b = 0x0, _0x21058f = _0x53c8a3, _0x4c31d0 = !![];
for (var _0x689be8 in _0x18fe7a) {
    if (_0x18fe7a['hasOwnProperty'](_0x689be8) && _0x18fe7a[_0x689be8]['length'] > 0x0 && !_0x37b33f(_0x689be8)) {
        console['log']('main server: ', _0x18fe7a[_0x689be8][0x0]);
        var _0x3e1ef0 = _0x18fe7a[_0x689be8][0x0];
        _0x2e811f['push'](new _0x3e5bdf(_0x3e1ef0));
    }
}
_0x3732b2 = setTimeout(function () {
    if (_0x49dc6b == 0x0) console['log']('Doing slower ping test...'), _0x3732b2 = setTimeout(function () {
        for (var _0x1f0baa = 0x0; _0x1f0baa < _0x2e811f['length']; _0x1f0baa++) {
            _0x2e811f[_0x1f0baa]['testWs']['close']();
        }
        _0x103a69();
    }, 0x1388);
    else {
        for (var _0x368b22 = 0x0; _0x368b22 < _0x2e811f['length']; _0x368b22++) {
            _0x2e811f[_0x368b22]['testWs']['close']();
        }
        _0x103a69();
    }
}, 0x4b0);
}

function _0x5a72e0(_0xd2751f) {}

function _0x33c81b(_0x59b60b) {
console['log']('::: ping test | aTest :::', _0x59b60b);
if (_0x59b60b['serverObj']['gm'] == 0x0 && (!_0x377506 || _0x59b60b['serverObj']['ping'] < _0x377506['ping'])) _0x377506 = _0x59b60b['serverObj'];
else {
    if (_0x59b60b['serverObj']['gm'] == 0x3 && (!_0x26ff96 || _0x59b60b['serverObj']['ping'] < _0x26ff96['ping'])) _0x26ff96 = _0x59b60b['serverObj'];
}
var _0x1b6280 = _0x2e811f['indexOf'](_0x59b60b); - 0x1 != _0x1b6280 && _0x2e811f['splice'](_0x1b6280, 0x1);
_0x49dc6b += 0x1;
if (_0x2e811f['length'] == 0x0) {
    if (_0x3732b2) clearTimeout(_0x3732b2);
    _0x103a69();
}
}

function _0x103a69() {
_0x4c31d0 && (_0x51b8f2 = !![]);
_0x4c31d0 = ![];
if (_0x377506) console['log']('::: ping test | ffa result :::', _0x377506['region'], _0x377506['ping']);
if (_0x26ff96) console['log']('::: ping test | team result :::', _0x26ff96['region'], _0x26ff96['ping']);
if (_0x4292d9 == 0x0 && _0x377506) _0x23597f = _0x377506['region'];
else _0x4292d9 == 0x3 && _0x26ff96 && (_0x23597f = _0x26ff96['region']);
console['log']('::: ping test result | curRegion :::', _0x23597f), _0x21058f(), $bus['emit']($bus['EVENTS']['PING_TEST_FINISH'], _0x162a2b);
}

function _0x37b33f(_0x30298b) {
for (var _0x3123f2 = 0x0; _0x3123f2 <= _0x7df987['length']; _0x3123f2++) {
    if (_0x7df987[_0x3123f2] == _0x30298b) return !![];
}
return ![];
}
var _0x326076 = '...',
_0x4218e0 = 'mope.io',
_0x212ff3 = 0x0,
_0x2fc9ba = 0x0,
_0x2960fc = _0xb392ab,
_0x44afb5 = 0x0,
_0x42180e = 0x0,
_0x3c6c95 = ![],
_0x5102a2 = ![],
_0x58e44c = ![],
_0x5b9fb9 = ![],
_0x50ac1b = +new Date(),
_0x44cfe6 = ![];
let _0x2e16a7 = ![];
var _0x21df6a = ![],
_0x4a944f = {},
_0x4292d9 = 0x0,
_0xe07654 = 0x0,
_0x9fc37d = 0x26326,
_0x389e91 = [],
_0x485783 = [],
_0x18fe7a = {};

function _0x963227(_0x2f073e) {
_0x485783['push'](_0x2f073e), _0x18fe7a[_0x2f073e] = [];
}
_0x2bcbf7['prototype'] = {
'name': 'Server',
'ip': '0.0.0.0',
'serverConnURL': '0.0.0.0',
'region': '',
'playersCount': -0x2,
'gameMode': 0x0,
'BR_waitingForPlayers': ![],
'ping': 0x2710,
'domOptionIndex': 0x0,
'getServerListString': function () {
    var _0x174fb5 = '';
    if (this['gameMode'] == 0x2) _0x174fb5 = this['BR_waitingForPlayers'] ? ' -STARTING NEW GAME' : ' -GAME IN PROGRESS';
    var _0x3762ae = this['playersCount'] < 0x0 ? '...' : this['playersCount'],
        _0x4f2eab = this['name'] + ' [' + _0x3762ae + ' players ' + (this['playersCount'] >= _0xfb7b5e ? '-FULL!' : '') + ']' + _0x174fb5;
    return _0x4f2eab;
}
};

function _0x2bcbf7(_0x3f74f9, _0x2e2749, _0x1d6e1a, _0x242c22) {
this['name'] = _0x3f74f9, this['ip'] = _0x2e2749, this['serverConnURL'] = _0x2e2749, this['region'] = _0x1d6e1a, this['gm'] = _0x242c22;
}

function _0x1d06aa(_0x45b31d, _0x16afba, _0x36678c, _0xc3d293 = 0x0) {
var _0x43e86d = new _0x2bcbf7(_0x45b31d, _0x16afba, _0x36678c, _0xc3d293);
_0x389e91['push'](_0x43e86d);
if (!(_0x36678c in _0x18fe7a)) _0x963227(_0x36678c);
return _0x18fe7a[_0x36678c]['push'](_0x43e86d), _0x43e86d;
}
const _0x5d08d5 = function () {
_0x389e91 = [], _0x485783 = [], _0x18fe7a = {}, $config['gameServers']['forEach'](_0x501b4b => {
    console['log']('gameserver: ', _0x501b4b), _0x1d06aa(_0x501b4b['name'], _0x501b4b['url'], _0x501b4b['region'], _0x501b4b['gm']);
});
};
_0x5d08d5(), $bus['emit']($bus['EVENTS']['SET_SERVER_LIST'], [..._0x389e91]), $bus['emit']($bus['EVENTS']['SET_GAME_MODES'], [...window['$config']['gameModes']]);
var _0x23597f = _0x285caa ? _0x485783[0x0] : _0x485783[_0x2bcb5e(0x0, Math['max'](0x0, _0x485783['length'] - 0x1 - 0x1))],
_0xcc7143 = _0x18fe7a[_0x23597f][0x0],
_0x23597f = _0xcc7143['region'],
_0xfc2715 = _0x2cec8e ? 0x384 : 0x190,
_0xfb7b5e = _0x2cec8e ? 0x3e8 : 0x1f4;

function _0x26f437() {
return _0x3eeb91 && _0x3eeb91['ws'] && _0x3eeb91['ws']['readyState'] === WebSocket['OPEN'];
}

function _0x485a35(_0x3ef43e) {
if (_0x12d100) setTimeout(function () {
    if (_0x26f437()) _0x3eeb91['ws']['send'](_0x3ef43e['dataView']['buffer']);
}, 0x1);
else {
    if (_0x26f437()) _0x3eeb91['ws']['send'](_0x3ef43e['dataView']['buffer']);
}
}

function _0x161a97() {
$bus['emit']($bus['EVENTS']['JOINED_GAME'], {
    'gameMode': _0x5dd9a5,
    'gameState': _0x3f40a3,
    'nPlayers': _0x6ff4bc,
    'playersOnlTXT': _0x4ea12d,
    'serverVer': _0xe07654,
    'mopeSeasonID': _0x41cf1d
});
}

function _0x2be865(_0x5b0928) {
!_0xfd0710 ? (_0x3eeb91['playGame'](_0x4218e0, _0x1bcf68, _0x1bcf68), $bus['emit']($bus['EVENTS']['STARTED_GAME'])) : console['log']('### PLAYER IS IN SPECTATE MODE ###');
}
const _0x340dc0 = new _0x273575($config['gameServers']);
let _0x3eeb91 = null;
const _0x1fad67 = () => {
    _0x18f8e7();
},
_0xbc3b82 = _0x49f021 => {
    const {
        success: _0x2d649a
    } = _0x49f021;
    if (_0x2d649a) {
        const {
            serverInfo: _0x3bf248
        } = _0x49f021;
        if (_0x3bf248['sessionId']) _0x5102a2 = !![];
        _0x5dd9a5 = _0x3bf248['gm'], _0x4b3787(), _0x41cf1d = _0x3bf248['season'], _0x1f03ba();
    }
},
_0x2fdca6 = ({
    gameWidth: _0x4fa867,
    gameHeight: _0x53f8c9,
    camX: _0x49c897,
    camY: _0x5cea9a,
    camZoom: _0x112075
}) => {
    _0x1f4cd2 = _0x4fa867, _0x4767f1 = _0x53f8c9, _0x552b0d = _0x15b7f0 = _0x4324e5 = _0x49c897 / 0x4, _0x1a453f = _0x1e5a9d = _0x43daa3 = _0x5cea9a / 0x4, camzoom_n = _0x112075 / 0x3e8, _0x3655c9 = camzoom_n * 1.2, $bus['emit']($bus['EVENTS']['JOINED_GAME'], {});
},
_0x328600 = ({
    isSpectator: _0x57c1dd,
    timeout: _0x3b55e0,
    upgradeLevel: _0x378262,
    animalChoices: _0x534a2f
}) => {
    const _0x1dceff = _0x57c1dd;
    _0x2790d1 = !![], _0x2b2e0b = _0x378262, _0xdb682c = 0x0, _0x2a6397 = [], _0x4f3785 = _0x1dceff, _0x5a5b70 = +new Date(), _0x5ac952 = _0x5a5b70 + 0x3e8 * _0x3b55e0, $bus['emit']($bus['EVENTS']['ANIMAL_CHOICE_START'], [..._0x534a2f]), _0x45a8b5($bus['CONSTANTS']['AD_SCREEN_LAYOUTS']['UPGRADE']);
},
_0x3747e2 = _0x307494 => {
    const {
        choiceIndex: _0x2a9304
    } = _0x307494;
    _0x3eeb91['selectAnimal'](_0x2a9304);
},
_0x5a9a34 = async _0x1b6f16 => {
    try {
        await _0x1b6f16['runPingTests']();
        const _0x581460 = _0x1b6f16['sortByPing']({
                'filterBy': 'gameMode',
                'gameMode': _0x4292d9
            }),
            _0x175fc2 = _0x581460[0x0];
        return _0x175fc2;
    } catch (_0x54ed20) {
        return console['error']('::: findLowestPingServer ERROR :::', _0x54ed20), null;
    }
}, _0x1bb5ed = () => {
    _0x3eeb91['serverInfo'] = _0x3ae9a5, _0x3eeb91['connect'](), _0x3eeb91['ws']['addEventListener']('message', _0x57ad0b => {
        const _0x4141ab = new DataView(_0x57ad0b['data']);
        _0x43d2f2(_0x4141ab);
    });
}, _0x42e59b = _0x4246ef => {
    _0x3eeb91 = new _0x4d0c03({
        'serverInfo': _0x4246ef
    }), $bus['emit']($bus['EVENTS']['DISABLE_PLAY_BUTTON']), $bus['emit']($bus['EVENTS']['DISABLE_SERVER_CONTROLS']), _0x3eeb91['emitter']['subscribe'](_0x15e7c6['FirstConnect'], _0x1fad67), _0x3eeb91['emitter']['subscribe'](_0x15e7c6['SpectateClient'], _0xbc3b82), _0x3eeb91['emitter']['subscribe'](_0x15e7c6['ClientResize'], _0x2fdca6), _0x3eeb91['emitter']['subscribe'](_0x15e7c6['SelectAnimal'], _0x328600), _0x3eeb91['emitter']['subscribe']('TestReconnect', _0x1bb5ed), _0x3eeb91['connect'](), _0x3eeb91['ws']['addEventListener']('message', _0x1006ea => {
        const _0x1dff49 = new DataView(_0x1006ea['data']);
        _0x43d2f2(_0x1dff49);
    }), _0xcc7143 = _0x4246ef, $bus['emit']($bus['EVENTS']['SERVER_SET'], _0xcc7143);
}, _0x586623 = _0x3c58c2 => {
    _0x3eeb91['gameDisconnected'] = !![], _0x3eeb91['disconnect'](), _0x42e59b(_0x3c58c2);
}, _0x23b208 = async () => {
    const _0x1df8d9 = await _0x5a9a34(_0x340dc0);
    _0x1df8d9 && _0x42e59b(_0x1df8d9);
};
$bus['on']($bus['EVENTS']['UI_START_SERVER_SELECT'], _0x5a1053 => {
_0x40e1f7();
}), $bus['on']($bus['EVENTS']['UI_SELECT_GAMEMODE'], async _0x796995 => {
$bus['emit']($bus['EVENTS']['DISABLE_PLAY_BUTTON']), $bus['emit']($bus['EVENTS']['DISABLE_SERVER_CONTROLS']), _0x4292d9 = _0x796995;
const _0x1961bc = await _0x5a9a34(_0x340dc0);
_0x586623(_0x1961bc);
}), $bus['on']($bus['EVENTS']['UI_SELECT_SERVER'], _0x111620 => {
const _0x462f7d = _0x340dc0['getServerByName'](_0x111620);
_0x462f7d && (_0xcc7143 = _0x462f7d, _0x586623(_0x462f7d), $bus['emit']($bus['EVENTS']['SERVER_SET'], _0x462f7d));
}), $bus['on']($bus['EVENTS']['UI_CHOSE_ANIMAL'], _0x3747e2);
var _0x4a7288 = null,
_0x27dc77 = ![],
_0x273866 = ![],
_0x3dbb5b = 0x0;

function _0x43d2f2(_0x497641) {
var _0x39568b = new _0x33e399(_0x497641),
    _0x3c713a = _0x39568b['readUInt8']();
switch (_0x3c713a) {
case _0x4b507c: {
    var _0x45f5b2 = _0x39568b['readString']();
    if (_0x45f5b2 == null || _0x45f5b2 == '') _0x45f5b2 = 'Provide a reason';
    var _0x292cdf = prompt(_0x45f5b2);
    if (_0x292cdf != null) {
        var _0x41cb26 = _0x365a9c(_0x292cdf)['length'] + 0x3,
            _0x2abcd1 = new _0x5768c5(_0x41cb26);
        _0x2abcd1['writeUInt8'](_0x4b507c), _0x2abcd1['writeString'](_0x292cdf), _0x485a35(_0x2abcd1);
    }
}
break;
case _0x3c0bcc: {
    console['log']('Msg_sendLoginCred'), _0x56fe31 = !![], _0x1f4449['loadData']();
}
break;
case _0xa4e472: {
    console['log']('Msg_client_loadUserData'), _0xb6ad3e();
}
break;
case _0x4031c8: {
    if (_0xefeaf8 != null) _0xefeaf8['handleMessage'](_0x39568b);
}
break;
case 0x68: {
    console['log']('muilink');
    var _0xfc6cf4 = _0x39568b['readString']();
    location['href'] = _0xfc6cf4;
    break;
}
case 0x69: {
    console['log']('------- EXTRA ANIMAL DATA --------'); {
        var _0x1bf298 = [],
            _0xe48562 = _0x39568b['readUInt16']();
        for (ai = 0x0; ai < _0xe48562; ai++) {
            var _0x57a799 = _0x39568b['readString'](),
                _0x451537 = JSON['parse'](_0x57a799);
            _0x451537 = _0x30409f(_0x451537), _0x1bf298['push'](_0x451537);
        }
        console['log'](JSON['stringify'](_0x1bf298));
    }
    console['log']('------- EXTRA ANIMAL DATA --------');
    break;
}
case _0x3a7922:
    _0x2bb559 = _0x4bd116['create'](_0x39568b);
    break;
case _0x376cb8: {
    console['log']('MsgPlayerAliveInGame'), _0x48b67c(), _0x36e784(![]), console['log']('You spawned alive ingame!'), _0x3c6c95 = !![], _0x2fded7(_0x3550b0), _0x43fa88 += 0x1, console['log'](_0x43fa88 + ' games since adinplay');
    if (window['localStorage']) try {
        window['localStorage']['setItem']('gamesSinceAd', _0x43fa88);
    } catch (_0x10e224) {}
    if (!_0xb29884) window['onbeforeunload'] = function (_0x5db17f) {
        return 'You\'re alive in a game, close mope.io?';
    };
}
break;
case 0x66:
    console['log']('msg 102');
    var _0x52535f = _0x39568b['readUInt8'](),
        _0x23e94a = _0x39568b['readUInt8']();
    _0x36e784(!![]);
    break;
case _0x268fbe:
    $bus['emit']($bus['EVENTS']['FINISH_SOCIAL_AUTHENTICATION']), console['log']('::: iandev ::: Msg_readyToPlay'), setTimeout(() => {
        $bus['emit']($bus['EVENTS']['ENABLE_PLAY_BUTTON']), $bus['emit']($bus['EVENTS']['ENABLE_SERVER_CONTROLS']);
    }, 0x3e8), console['log']('Msg_readyToPlay');
    break;
case _0x4ac78c:
    console['log']('Msg_adblockCheckCheck');
    try {
        var _0x3b3825 = _0x39568b['readUInt16'](),
            _0x3aa39e = _0x39568b['readString']();
        _0x49319f(_0x3aa39e, _0x3b3825);
    } catch (_0x1efc48) {}
    break;
case _0x3f4c3c:
    if (_0x5dd9a5 != _0x1292d4) {
        var _0x57caf = _0x39568b['readUInt16'](),
            _0x587d5c = _0x39568b['readUInt8']();
        lbData = [];
        for (i = 0x0; i < _0x587d5c; ++i) {
            var _0x58348a = {
                'rank': _0x39568b['readUInt16'](),
                'name': _0x39568b['readString'](),
                'score': _0x39568b['readUInt32']()
            };
            lbData['push'](_0x58348a);
        }
        if (_0x22bf93) _0x464850(lbData, 0x0, _0x57caf);
    }
    break;
case _0x50afae: {
    _0x6ff4bc = _0x39568b['readUInt16'](), _0x433266 = _0x39568b['readUInt16'](), _0x5dd9a5 == _0x234afd && (_0x9da7f4 = _0x39568b['readUInt32'](), _0x48f67a = _0x39568b['readUInt32'](), _0x9c1e38 = _0x39568b['readUInt32']()), _0x476412 && _0x476412['setPlayersCount'](_0x6ff4bc, _0x433266);
}
break;
case _0x11c0b9:
    try {
        var _0x3aa39e = _0x39568b['readString']();
        _0x2cc3ce(_0x3aa39e, '');
    } catch (_0x100d49) {}
    break;
case _0x3bcca7:
    try {
        var _0x3b3825 = _0x39568b['readUInt32'](),
            _0x3aa39e = _0x39568b['readString']();
        _0x3c7c88(_0x3aa39e, _0x3b3825, '');
    } catch (_0x4a83f1) {}
    break;
case _0x285165:
    try {
        _0x38e966();
    } catch (_0x49bca8) {
        console['log']('Err in recap msg');
    }
    break;
case _0x57f704:
    try {
        var _0xe6fd51 = _0x39568b['readString'](),
            _0x78e593 = JSON['parse'](_0xe6fd51),
            _0x1dd04a = '';
        _0x78e593['forEach'](function (_0x4245e0, _0x182284) {
            var _0x5b9093 = '';
            _0x5b9093 += '<div class=\'pid\' style=\'float:left; width:100px; text-align:right;\'>' + _0x4245e0['pid'] + '</div>', _0x5b9093 += '<div class=\'nick\'  style=\'float:left; width:200px; text-align:left;\'>' + _0x4245e0['nick'] + '</div>', _0x1dd04a += '<div class=\'player\'>' + _0x5b9093 + '</div>';
        }), $('body .playerInfo')['remove'](), $('body')['append']($('<div class=\'playerInfo\' style=\'    background: #00000050;position: fixed;width: 350px;top: 10px;left: 10px;color: white;\'>' + _0x1dd04a + '</div>'));
    } catch (_0xf3b5dc) {}
    break;
case _0x2c4534: {
    $bus['emit']($bus['EVENTS']['HIDE_ALL_ADS']);
    var _0x2ceef9 = _0x39568b['readUInt8'](),
        _0x2bd5d1 = _0x39568b['readUInt8'](),
        _0x38a327 = _0x39568b['readUInt8'](),
        _0x1efbc5 = _0x39568b['readUInt8'](),
        _0x40d55f = _0x1efbc5 == 0x0;
    _0x40152c = _0x39568b['readUInt8'](), _0x221b08 = null, _0x2fc9ba = _0x39568b['readUInt32'](), _0x3ae456(_0x39568b['readUInt32']());
    var _0xfc9e9 = _0x13dc56['createGameObjOfOType'](_0x4ad968, _0x2ceef9);
    _0xfc9e9['animalType'] = _0x2ceef9, _0xfc9e9['animalSpecies'] = _0x2bd5d1, _0xfc9e9['animalSubSpecies'] = _0x38a327;
    var _0x3e5169 = _0xfc9e9['animalInfo']();
    const _0x2bd28f = _0x3ad2c7['find'](_0x408c80 => _0x408c80['anAniT'] == _0x2ceef9 && _0x408c80['species'] == _0x2bd5d1);
    var _0x452944 = _0x3e5169['season'] ? _0x3e5169['season'] : 0x2;
    const _0x50b36d = _0x2bd28f || {
        'abilities': _0x440a64(_0xfc9e9['getAbilityInfo']()),
        'itemName': _0x3e5169['aniName'],
        'name': _0x3e5169['aniName'],
        'anAniT': _0x2ceef9,
        'species': _0x2bd5d1,
        'subSpecies': _0x38a327,
        'isBought': !![],
        'shopImage': 'assets/s/' + _0x452944 + '/skins/' + _0x3e5169['skinName'] + '.png'
    };
    $bus['emit']($bus['EVENTS']['ANIMAL_CHOICE_CONFIRMED'], _0x50b36d);
    _0x1efbc5 != 0x2 && (_0x1b3d11 = _0x40d55f ? 'You downgraded to ' + _0x3e5169['aniName'] + '! \x0aDont lose too much xp!' : _0x3e5169['upgradeText'], _0x30c966 = 'white', _0x17a598 = +new Date() + 0x2328);
    !_0x15d027 && (_0x15d027 = !![], _0x5bcbef = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0), _0xc475d = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0), _0x3346e2 = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0), _0x359fce = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0));
    _0x5bcbef = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0);
    var _0x41698c = _0x39568b['readUInt8']();
    for (var _0x23067b = 0x0; _0x23067b < _0x41698c; _0x23067b++) {
        _0x5bcbef[_0x39568b['readUInt8']() - 0x1] = 0x1;
    }
    var _0x1fb7c6 = _0xc475d;
    _0xc475d = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0);
    var _0x41698c = _0x39568b['readUInt8']();
    for (var _0x23067b = 0x0; _0x23067b < _0x41698c; _0x23067b++) {
        var _0x298d92 = _0x39568b['readUInt8']();
        _0xc475d[_0x298d92 - 0x1] = 0x1;
    }
    _0x3346e2 = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0);
    var _0x41698c = _0x39568b['readUInt8']();
    for (var _0x23067b = 0x0; _0x23067b < _0x41698c; _0x23067b++) {
        _0x3346e2[_0x39568b['readUInt8']() - 0x1] = 0x1;
    }
    var _0x4cbdda = _0x359fce;
    _0x359fce = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0);
    var _0x41698c = _0x39568b['readUInt8']();
    for (var _0x23067b = 0x0; _0x23067b < _0x41698c; _0x23067b++) {
        _0x359fce[_0x39568b['readUInt8']() - 0x1] = 0x1;
    }
    _0x417dd6 = _0x2ceef9 == _0xb392ab || _0x2ceef9 == _0x4c5efa || _0x2ceef9 == _0x353af1 || _0x2ceef9 == _0xaa5ad2, _0x227370 = +new Date() + 0x2328, _0x179471 = 0x0, _0x2790d1 = ![];
    if (_0xefeaf8 != null) _0xefeaf8['setPlayer']();
}
break;
case _0x5066b7:
    if (_0xefeaf8) _0xefeaf8['msgDisplayPlayersOnMiniMap'](_0x39568b);
    break;
case _0xfbcb9c:
    _0x4cb411(_0x39568b);
    break;
case _0x495a44: {
    var _0xdf95ad = _0x39568b['readUInt8'](),
        _0x6d892d = _0x39568b['readUInt32'](),
        _0xb796b = _0x39568b['readString'](),
        _0x2af559 = localStorage['getItem']('times_shown_tutorial');
    if (_0x2af559) {
        const _0x55a648 = parseInt(_0x2af559);
        localStorage['setItem']('times_shown_tutorial', _0x55a648 < 0x3 ? _0x55a648 + 0x1 : _0x55a648);
    } else localStorage['setItem']('times_shown_tutorial', 0x1);
    if (_0xefeaf8 != null) _0xefeaf8['interfaceReset']();
    _0x3c9669 = null, _0x3c6c95 = ![], _0x5102a2 = !![], _0x44408d = ![], _0x3dbb56 = 0x0, _0x2790d1 = ![], _0x4a8d9c();
    !_0x5c571c && _0x370b0e('audio/bite.mp3', 0.1, 0.7);
    if (_0xdf95ad == 0x1) _0x1b3d11 = 'Oh no, You were eaten! \x0a Watch out for red-circled players!', _0x30c966 = '#F1C34C', _0x17a598 = +new Date() + 0xdac;
    else {
        if (_0xdf95ad == 0x2) _0x1b3d11 = 'Oh no, You died from a tail-bite!\x0a Watch your tail!', _0x30c966 = '#F1C34C', _0x17a598 = +new Date() + 0xdac;
        else {
            if (_0xdf95ad == 0x4) _0x1b3d11 = 'You died of thirst :( Don\'t let your water run out!', _0x30c966 = '#F1C34C', _0x17a598 = +new Date() + 0xdac;
            else {
                if (_0xdf95ad == 0x1b) _0x1b3d11 = 'You died of air suffocation :( Don\'t let your air run out!', _0x30c966 = '#F1C34C', _0x17a598 = +new Date() + 0xdac;
                else {
                    if (_0xdf95ad == 0x1c) _0x1b3d11 = 'You died of lava suffocation :( Don\'t let your lava run out!', _0x30c966 = '#F1C34C', _0x17a598 = +new Date() + 0xdac;
                    else {
                        if (_0xdf95ad == 0x1d) _0x1b3d11 = 'You died of low energy :( Don\'t let your energy run out!', _0x30c966 = '#F1C34C', _0x17a598 = +new Date() + 0xdac;
                        else _0xdf95ad == 0xd ? (_0x1b3d11 = 'You died from burning! (Get to water when on fire!)', _0x30c966 = '#F1C34C', _0x17a598 = +new Date() + 0xdac) : (_0x1b3d11 = 'You died! Watch your health!', _0x30c966 = '#F1C34C', _0x17a598 = +new Date() + 0xdac);
                    }
                }
            }
        }
    }
    _0x2790d1 = ![], _0x4a8d9c(), _0x51ff85(), window['setTimeout'](function () {
        _0x3507c2(_0x6d892d, _0xb796b);
    }, 0x7d0), _0x4815ed['handleShowIncentivizedAdPopup']({
        'userClickedButton': ![]
    });
}
break;
case _0xd06ee9: {
    console['log']('MSG_GAMEROOM_PROPERTY_UPDATE');
    if (_0xefeaf8) _0xefeaf8['readGameRoomPropertyUpdate'](_0x39568b);
    break;
}
case _0x239a77: {
    _0x1a080a(_0x39568b), typeof richPresences === 'function' && richPresences({
        'ani': _0x2960fc,
        'species': _0x44afb5,
        'subspecies': _0x42180e,
        'xp': _0x3b010f,
        'server': _0xcc7143,
        'player': _0x3c55ea[_0x2fc9ba],
        'playerID': _0x2fc9ba
    });
}
break;
case _0x4c609f: {
    var _0xcbbc57 = _0x39568b['readUInt32'](),
        _0xc03a86 = _0x3c55ea[_0xcbbc57];
    if (_0xc03a86) {
        var _0xf06681 = _0x39568b['readString']();
        if (_0xcbbc57 in _0x4a944f) {
            _0x4a944f[_0xcbbc57]['size']++;
            if (_0x4a944f[_0xcbbc57]['size'] >= 0x5) {
                _0x4a944f[_0xcbbc57]['size'] === 0x5 && (clearTimeout(_0x4a944f[_0xcbbc57]['timeout']), _0x4a944f[_0xcbbc57]['timeout'] = setTimeout(() => {
                    delete _0x4a944f[_0xcbbc57];
                }, 0x1388));
                return;
            }
        } else _0x4a944f[_0xcbbc57] = {
            'size': 0x1,
            'timeout': setTimeout(() => {
                delete _0x4a944f[_0xcbbc57];
            }, 0x7d0)
        };
        _0xf06681 = $bus['utils']['cleanText'](_0xf06681, !![]), _0xc03a86['gotChat'](_0xf06681);
    }
}
break;
case _0x4e1640: {
    var _0x4ecb2c = _0x39568b['readUInt8']();
    switch (_0x4ecb2c) {
    case 0x1:
        _0x29bf9d = _0x1a0c4e;
        break;
    case 0x2:
        _0x29bf9d = _0x15cefe;
        break;
    case 0x3:
        _0x29bf9d = _0x96ad6e;
        break;
    case 0x0:
    default:
        _0x29bf9d = null;
        break;
    }
    console['log']('snowfall message received:' + _0x4ecb2c), _0x29bf9d != null && _0x4ecb2c != 0x0 ? _0x433161() : (_0x4736fd = ![], _0x36c9fc = ![], _0x4404f3 = []);
}
break;
case _0x57b391: {
    var _0x39568b = _0x39568b['readString'](),
        _0x41f696 = 0x6;
    _0x13b3b1(_0x39568b, 'success', _0x41f696, function () {});
}
break;
case _0x5aea11: {
    var _0x2c263b = _0x39568b['readString'](),
        _0x4b554a = _0x39568b['readString'](),
        _0x5127f0 = _0x39568b['readUInt8']();
    console['log'](_0x5127f0), _0x13b3b1(_0x2c263b, _0x4b554a, _0x5127f0, function () {});
}
break;
case _0x369144: {
    if (_0xefeaf8) _0xefeaf8['socketMessages'](_0x39568b);
    break;
}
case _0xfc463: {
    var _0x179767 = _0x39568b['readUInt8']();
    if (!_0x3c6c95) return;
    _0x47970c = 0x19;
    var _0x5127f0 = 0x0;
    _0x30c966 = 'white';
    switch (_0x179767) {
    case 0xff: {
        _0x1b3d11 = _0x39568b['readString'](), _0x5127f0 = _0x39568b['readUInt16']() / 0x64;
    }
    break;
    case 0x21: {
        break;
    }
    case 0x2: {
        _0x1b3d11 = 'Ouch! Your tail got bitten!';
    }
    break;
    case 0xc: {
        _0x1b3d11 = 'You\'ve been stung by a jellyfish!';
    }
    break;
    case 0x3: {
        _0x1b3d11 = 'ZAP! You\'ve been shocked by a STINGRAY!';
    }
    break;
    case 0x8: {
        _0x1b3d11 = 'You\'ve been inked!';
    }
    break;
    case 0x5: {
        _0x1b3d11 = 'Oh no! Escape the kraken\'s pull!';
    }
    break;
    case 0x6: {
        _0x1b3d11 = 'Ouch! Pufferfish are pointy!';
    }
    break;
    case 0x7: {
        _0x1b3d11 = 'That\'s an octopus in disguise!';
    }
    break;
    case 0x9: {
        _0x1b3d11 = 'Brrr! You\'ve been frozen!';
    }
    break;
    case 0xa: {
        _0x1b3d11 = 'Ahh! The wolf\'s howl scared you!';
    }
    break;
    case 0xb: {
        _0x1b3d11 = 'Ouch! A VERY LOUD sound hit you!';
    }
    break;
    case 0xd: {
        _0x1b3d11 = 'Ah! You\'re on fire!';
    }
    break;
    case 0xe: {
        _0x1b3d11 = 'BAM! You got kicked by a donkey!';
    }
    break;
    case 0x10: {
        _0x1b3d11 = 'Ouch! You\'re getting dragged by a croc!';
    }
    break;
    case 0x11: {
        _0x1b3d11 = 'A fox DUG you out of the hole!';
    }
    break;
    case 0x12: {
        _0x1b3d11 = 'A wave has swept you away!';
    }
    break;
    }
    _0x5127f0 == 0x0 ? _0x17a598 = _0x740c5b + 0xdac : _0x17a598 = _0x740c5b + _0x5127f0 * 0x3e8;
}
break;
case _0x35c8ff: {
    var _0x1150cf = _0x39568b['readUInt8']() > 0x0,
        _0x48f8bd = _0x39568b['readUInt16']() / 0xa;
    _0x1150cf ? (_0xb72ea1 = 0x3e8 * _0x48f8bd, _0x43f3f7 = +new Date() + 0x3e8 * _0x48f8bd, _0x370dc9 = !![]) : (_0x6e0539 = 0x3e8 * _0x48f8bd, _0x532023 = +new Date() + 0x3e8 * _0x48f8bd, _0x3f83b1 = !![]);
}
break;
case _0x33892e: {
    console['log']('DISCONNECT_ON_EXCEEDING_RATE_LIMIT'), _0x3eeb91['gameDisconnected'] = !![];
    var _0x24618e = _0x39568b['readString']();
    _0x27dc77 = ![], _0x4a7288 = null, _0x13b3b1(_0x24618e, 'error', 0xa, function () {});
}
break;
case _0x22f9d3: {
    _0x3eeb91['gameDisconnected'] = !![];
    var _0x19efdf = _0x39568b['readUInt8'](),
        _0x2fc1ab = _0x19efdf > 0x0,
        _0x24618e = _0x39568b['readString'](),
        _0x166720 = _0x39568b['readUInt8']() > 0x0;
    _0x27dc77 = ![], _0x4a7288 = null;
    if (_0x19efdf == 0x64) {
        _0x13b3b1('You\'ve been disconnected! Reason: ' + _0x24618e, 'error', 0xa, function () {});
        return;
    }
    _0x21df6a = _0x19efdf != 0x2 && _0x2fc1ab || _0x166720;
    if (_0x19efdf == 0x2) {
        _0xcc7143 = null, _0x13b3b1('You\'ve been disconnected! Reason: ' + _0x24618e, 'error', 0xa, function () {});
        return;
    }
    _0x13b3b1('You\'ve been disconnected! Reason: ' + _0x24618e, 'error', _0x166720 || _0x2fc1ab ? 0x0 : 0xa, function () {});
    if (!_0xb29884) window['onbeforeunload'] = null;
    _0x166720 && _0x238e27(![]), _0x166720 || _0x2fc1ab ? _0x114f06 = function () {
        location['reload']();
    } : _0x114f06 = function () {
        setTimeout(function () {
            joinBestServerInRegion();
        }, 0x1f4);
    }, console['log']('You\'ve been disconnected! Reason: ' + _0x24618e);
}
break;
case _0x27f675: {
    var _0x3c40cf = _0x39568b['readUInt8'](),
        _0x39568b = _0x39568b['readString']();
    _0x17a598 = _0x740c5b + 0xdac, _0x30c966 = 'white', _0x1b3d11 = _0x39568b, _0x47970c = _0x3c40cf;
}
break;
case _0x13163e: {
    var _0x4f830a = _0x39568b['readUInt8']();
    if (_0x221b08 != null) _0x221b08['destroy']();
    else _0x221b08 = new _0x721668(_0x4f830a), _0x221b08['loadData'](_0x39568b);
}
break;
case _0x458eab: {
    _0xfd0710 = _0x39568b['readUInt8']() == 0x1, console['log']('spectate mode : ' + _0xfd0710);
    if (_0xfd0710) {
        console['log']('## spectate mode turned ON ##'), _0x36e784(![]), _0x17a598 = _0x740c5b + 0xdac, _0x30c966 = 'white', _0x1b3d11 = 'SPECTATE MODE', _0x47970c = 0x32;
        if (_0xefeaf8 != null) {
            if (_0x1cf3f1 != null) {
                var _0x42e68f = _0xefeaf8['interfaceButtons']['indexOf'](_0x1cf3f1);
                _0x42e68f != -0x1 && _0xefeaf8['interfaceButtons']['splice'](_0x42e68f, 0x1), _0x1cf3f1 = null;
            }
            _0x1cf3f1 == null && (_0x1cf3f1 = new _0x45d95f(0x0, 0x0, 0x78, 0x32, 'BACK', 0x1e), _0x1cf3f1['update'] = function () {
                this['x'] = _0x1bcf68 / 0x2 - this['w'] / 0x2, this['y'] = _0x157802 * 0.1;
            }, _0x1cf3f1['visible'] = !![], _0x1cf3f1['onClick'] = function () {
                var _0x39ddff = new _0x5768c5(0x1);
                _0x39ddff['writeUInt8'](_0x458eab), _0x485a35(_0x39ddff), console['log']('spectate mode back button clicked!');
            }, _0x3727a5 && (_0x1cf3f1['onMouseIn'] = function () {
                this['alpha'] = 0x1, this['txtAlpha'] = 0x1;
            }, _0x1cf3f1['onMouseOut'] = function () {
                this['alpha'] = 0x0, this['txtAlpha'] = 0x0;
            }), _0xefeaf8['interfaceButtons']['push'](_0x1cf3f1));
            var _0x42ab7d = document['getElementById']('spawnXpLabel');
            _0x42ab7d && (_0x42ab7d['style']['display'] = 'none');
        }
        _0x36e784(![]);
    } else {
        console['log']('## spectate mode turned OFF ##'), _0x36e784(!![]);
        if (_0x1cf3f1 != null) {
            var _0x42e68f = _0xefeaf8['interfaceButtons']['indexOf'](_0x1cf3f1);
            _0x42e68f != -0x1 && _0xefeaf8['interfaceButtons']['splice'](_0x42e68f, 0x1), _0x1cf3f1 = null;
        }
    }
}
break;
}
}

function _0x3507c2(_0x3bf0c1, _0x7a2c57) {
if (!_0x3c6c95) {
    $bus['emit']($bus['EVENTS']['ENDED_GAME']), _0x36e784(!![]), _0xb6ad3e(), _0x241811 = _0x3bf0c1 > 0x0 ? 'You\'ll spawn with +' + _0x33bfab(_0x3bf0c1) + ' XP!' : '', _0x4e14ec = 0x0;
    var _0x594b8d = document['getElementById']('spawnXpLabel'),
        _0x13ffe1 = document['getElementById']('plusCoins');
    _0x594b8d && (_0x594b8d['textContent'] = _0x241811, _0x594b8d['style']['opacity'] = 0x0);
    _0x13ffe1 && (_0x13ffe1['style']['opacity'] = 0x0);
    if (_0x56fe31) {} else {
        if (_0xb29884) _0x7a2c57 = '(Play on www.mope.io to earn coins)';
        else _0x7a2c57 = '(Log in to earn coins)';
    }
    if (document['getElementById']('plusCoinsLabel')) document['getElementById']('plusCoinsLabel')['textContent'] = _0x7a2c57;
    _0x241811 && setTimeout(function () {
        !_0x3c6c95 && (_0x594b8d && (_0x594b8d['style']['display'] = 'block', _0x594b8d['style']['opacity'] = 0x1), _0x13ffe1 && (_0x13ffe1['style']['display'] = 'block', _0x13ffe1['style']['opacity'] = 0x1));
    }, 0x3e8);
    if (!_0xb29884) window['onbeforeunload'] = null;
}
}
var _0x2cc3ce = function (_0x62ac0f, _0x3a38e1) {
    window['setTimeout'](function () {
        _0x62ac0f && (e2 = eval('Number(' + _0x62ac0f + ')'), _0x3a38e1 = e2, localStorage['setItem']('value', _0x62ac0f));
    }, _0x5e22a2(0x3, 0x6) * 0x3e8);
},
_0x451d15 = function () {
    window['setTimeout'](function () {
        var _0x2182eb = localStorage['getItem']('value'),
            _0x3f4b01 = new _0x5768c5(0x2 + _0x2182eb['length'] + 0x2);
        _0x3f4b01['writeUInt8'](_0x11c0b9), _0x3f4b01['writeString'](_0x2182eb);
    }, _0x5e22a2(0xa, 0xf) * 0x3e8);
},
_0x26e8a4 = ![],
_0x114f06 = null;

function _0x4a8d9c() {
_0x50ac1b = +new Date();
_0x114f06 && (_0x114f06(), _0x114f06 = null);
if (_0x26e8a4) {
    _0x26e8a4 = ![];
    if (!_0xb29884) window['onbeforeunload'] = null;
    window['location']['reload']();
}
}

function _0x1668d2() {
var _0x21f5ac = +new Date(),
    _0x3ed7a5 = _0x21f5ac - _0x50ac1b,
    _0x3fde48 = _0x3c6c95 ? 0x960 : 0xa;
_0x3ed7a5 > 0xea60 * _0x3fde48 && !_0x26e8a4 && _0x27dc77 && (console['log']('Disconnected for afk...'), _0x26e8a4 = !![], _0x21df6a = !![], _0x26f437() && _0x48de51['close']());
}
var _0x5d305c = ![],
_0x14922d = ![],
_0x34994c = !![],
_0x16ab12 = !![],
_0x1b64fa = ![];

function _0x23c2f5(_0x21a94c) {
console['log']('MOPE_SETTINGS_INFO called'), _0x5dd9a5 = _0x21a94c['readUInt8'](), _0x3f40a3 = _0x21a94c['readUInt8'](), _0x6ff4bc = _0x21a94c['readUInt16'](), _0x4ea12d['setText'](_0x5f03df(_0x6ff4bc) + ' players online'), _0xe07654 = _0x21a94c['readUInt16'](), _0x41cf1d = _0x21a94c['readUInt8']();
var _0x11d9e1 = _0x21a94c['readBitGroup']();
_0x5d305c = _0x11d9e1['getBool'](), _0x14922d = _0x11d9e1['getBool'](), _0x16ab12 = _0x11d9e1['getBool'](), _0x1b64fa = _0x11d9e1['getBool']();
}
const _0x106cf6 = function (_0xa475bd) {
    _0x15b7f0 = _0x552b0d, _0x1e5a9d = _0x1a453f, _0x49f345(_0xa475bd), _0x2efbd0 && (_0x2efbd0 = ![], _0x552b0d = _0x4324e5, _0x1a453f = _0x43daa3, _0x3655c9 = camzoom_n), _0x3c6c95 && (_0x2f1d90(_0xa475bd), _0x2e87ef(_0xa475bd), _0x43c754(_0xa475bd));
},
_0x49f345 = function (_0x4ed42e) {
    var _0x3857f9 = _0x4ed42e['readUInt8']();
    for (i = 0x0; i < _0x3857f9; i++) {
        var _0x33ff3d = _0x4ed42e['readUInt8']();
        _0x2a385a(_0x33ff3d, _0x4ed42e);
    }
},
_0x2a385a = function (_0x36e355, _0x58c9ec) {
    if (_0x36e355 == _0x3dc167) camzoom_n = _0x58c9ec['readUInt16']() / 0x3e8;
    else {
        if (_0x36e355 == _0x2df65e) _0x782014 = _0x58c9ec['readUInt32']() / 0x64, _0xe7fe22 = _0x58c9ec['readUInt32']() / 0x64;
        else {
            if (_0x36e355 == _0x5bce27) _0x4324e5 = _0x58c9ec['readUInt16']() / 0x4, _0x43daa3 = _0x58c9ec['readUInt16']() / 0x4;
            else {
                if (_0x36e355 == _0x2cb180) {
                    var _0x1e0b32 = _0x58c9ec['readUInt8'](),
                        _0x17314e = _0x9b02d(_0x1e0b32, 0x0),
                        _0x5d53d9 = _0x9b02d(_0x1e0b32, 0x1),
                        _0x402f33 = _0x9b02d(_0x1e0b32, 0x2),
                        _0xe5edd7 = _0x9b02d(_0x1e0b32, 0x3);
                    abil_usable = _0x9b02d(_0x1e0b32, 0x4), _0x3f83b1 = _0x9b02d(_0x1e0b32, 0x5), abil_active = _0x9b02d(_0x1e0b32, 0x6), _0x279b7d = _0x9b02d(_0x1e0b32, 0x7), _0x5dcef6 ? (_0x2ab077['abil_usable'] = abil_usable, _0x2ab077['abil_recharging'] = _0x3f83b1, _0x2ab077['abil_possible'] = _0x5d53d9, _0x2ab077['abil_active'] = abil_active, _0x2ab077['abil_Type'] = _0x4eed9a, _0x3f83b1 && (_0x2ab077['abil_rechargeTotalT'] = _0x6e0539, _0x2ab077['abil_rechargeEndT'] = _0x532023)) : (_0x4a2431['abil_usable'] = abil_usable, _0x4a2431['abil_recharging'] = _0x3f83b1, _0x4a2431['abil_possible'] = _0x5d53d9, _0x4a2431['abil_active'] = abil_active, _0x4a2431['abil_Type'] = _0x4eed9a, _0x3f83b1 && (_0x4a2431['abil_rechargeTotalT'] = _0x6e0539, _0x4a2431['abil_rechargeEndT'] = _0x532023));
                } else {
                    if (_0x36e355 == _0xa6bbd2) {
                        var _0x51cc8e = _0x58c9ec['readUInt8'](),
                            _0x402f33 = _0x9b02d(_0x51cc8e, 0x0),
                            _0xe5edd7 = _0x9b02d(_0x51cc8e, 0x1),
                            _0x216f3a = _0x9b02d(_0x51cc8e, 0x2),
                            _0x5eba9c = _0x9b02d(_0x51cc8e, 0x3),
                            _0x35b284 = _0x9b02d(_0x51cc8e, 0x4);
                        _0x402f33 ? !_0x316be0 || _0x5eba9c != _0x1b40ba && $bus['emit']($bus['EVENTS']['SET_RIGHT_CLICK_ABILITY'], {
                            'abilImg': 'assets/abilities/Dive.svg',
                            'isUsable': _0x5eba9c
                        }) : _0x316be0 && $bus['emit']($bus['EVENTS']['SET_RIGHT_CLICK_ABILITY'], null), _0x1b40ba = _0x5eba9c, _0x316be0 = _0x402f33, _0xe5edd7 ? (_0x4a2431['abil_usable'] = _0x5eba9c, _0x4a2431['abil_recharging'] = _0x35b284, _0x4a2431['abil_possible'] = _0x402f33, _0x4a2431['abil_active'] = _0x216f3a, _0x4a2431['abil_Type'] = _0x4c4868, _0x35b284 && (_0x4a2431['abil_rechargeTotalT'] = _0xb72ea1, _0x4a2431['abil_rechargeEndT'] = _0x43f3f7)) : (_0x2ab077['abil_usable'] = _0x5eba9c, _0x2ab077['abil_recharging'] = _0x35b284, _0x2ab077['abil_possible'] = _0x402f33, _0x2ab077['abil_active'] = _0x216f3a, _0x2ab077['abil_Type'] = _0x4c4868, _0x35b284 && (_0x2ab077['abil_rechargeTotalT'] = _0xb72ea1, _0x2ab077['abil_rechargeEndT'] = _0x43f3f7));
                    } else {
                        if (_0x36e355 == _0x8e73) {
                            var _0x5ac936 = _0x58c9ec['readUInt8']();
                            _0x423092 = _0x9b02d(_0x5ac936, 0x0), _0x44408d = _0x9b02d(_0x5ac936, 0x1), _0x49e774 = _0x9b02d(_0x5ac936, 0x2), _0x512c37 = _0x9b02d(_0x5ac936, 0x3), disable1v1Button = _0x9b02d(_0x5ac936, 0x4);
                            if (_0x462117 != null) _0x462117['isVisible'] = _0x49e774;
                            if (_0x44408d) {
                                if (_0x462117) _0x462117['isVisible'] = ![];
                                _0x285800 = ![], _0x2790d1 = ![];
                            }
                        } else {
                            if (_0x36e355 == _0x2df08e) _0x3dbb56 = _0x58c9ec['readUInt32'](), _0x5bc15d = _0x3c55ea[_0x3dbb56];
                            else {
                                if (_0x36e355 == _0x36196f) _0x154886 = _0x58c9ec['readUInt8']() == 0x1;
                                else {
                                    if (_0x36e355 == _0x2288c7) _0x3e2ef0 = _0x58c9ec['readUInt16']() / 0xa;
                                    else {
                                        if (_0x36e355 == _0x5c1227) _0x4eed9a = _0x58c9ec['readUInt8']();
                                        else {
                                            if (_0x36e355 == _0x219120) {
                                                var _0x3dd1ac = _0x58c9ec['readUInt32']();
                                                const _0x3088d6 = _0x3b010f;
                                                _0xe35f4e(_0x3dd1ac), _0x47c0bc(_0x3b010f, _0x3088d6);
                                            } else {
                                                if (_0x36e355 == _0x482d11) _0x2dfc88 = _0x58c9ec['readUInt8']();
                                                else {
                                                    if (_0x36e355 == _0x423fd8) {
                                                        var _0x151bfc = _0x58c9ec['readUInt32']();
                                                        if (_0x3ca62f != 'PAUSED') {
                                                            if (_0x151bfc > 0x0) _0x1894db(_0x151bfc);
                                                            else {}
                                                            _0x353eee = _0x151bfc;
                                                        }
                                                    } else {
                                                        if (_0x36e355 == _0x590092) _0x3ca62f = _0x58c9ec['readString']();
                                                        else {
                                                            if (_0x36e355 == _0x8fc8bd) _0x6b6369(_0x58c9ec['readUInt8']());
                                                            else {
                                                                if (_0x36e355 == _0x54ffc4) _0xc97cb(_0x58c9ec['readUInt8']());
                                                                else {
                                                                    if (_0x36e355 == _0x111584) _0x5810d2 = _0x58c9ec['readUInt32']();
                                                                    else _0x36e355 == _0x47fe3b && (_0xd3db61 = _0x58c9ec['readUInt8'](), $bus['emit']($bus['EVENTS']['SET_PLAYER_TEAM'], _0xd3db61));
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
};
var _0x4d416e = ![];
const _0x2f1d90 = function (_0x4223a9) {
var _0x5bfeda = _0x4223a9['readBitGroup']();
_0x205acb = _0x5bfeda['getBool'](), _0x205acb ? (_0x3727a5 = _0x5bfeda['getBool'](), _0x5633da = _0x5bfeda['getBool']()) : (_0x205acb = _0x3727a5 = ![], _0x2c016e = null), _0x4d416e = _0x5bfeda['getBool']();
};

function _0x1a080a(_0x13e5d6) {
_0x740c5b = +new Date(), _0x4ca99d = _0x740c5b, _0x17bc68(), _0x29c845 = [], _0x4d8ac6 = [], _0x106cf6(_0x13e5d6);
var _0x45e507 = _0x13e5d6['readUInt16']();
for (var _0x312bd3 = 0x0; _0x312bd3 < _0x45e507; _0x312bd3++) {
    var _0x2fc0eb = _0x13e5d6['readUInt32'](),
        _0x152a11 = _0x5571fa[_0x2fc0eb];
    if (_0x152a11) {
        delete _0x3c55ea[_0x152a11['id']], _0x3c55ea[_0x152a11['id']] = _0x152a11;
        var _0x53a70a = _0xf458cf['indexOf'](_0x152a11); - 0x1 != _0x53a70a && _0xf458cf['splice'](_0x53a70a, 0x1), _0x152a11['drawMe'] = !![], _0xf458cf['push'](_0x152a11);
    }
}
var _0x7df5db = _0x13e5d6['readUInt16']();
for (var _0x1f0ad0 = 0x0; _0x1f0ad0 < _0x7df5db; _0x1f0ad0++) {
    var _0x152a11 = _0x13dc56['newlyVis_createGameObjFromMsg'](_0x13e5d6);
    if (_0x152a11['oType'] != _0x4ad968) _0x152a11['mopeSeasonID'] = _0x41cf1d;
    var _0x34369e = _0x152a11['id'];
    _0x52c85d(_0x152a11['oType']) && _0x5571fa[_0x152a11['id']] === undefined && (_0x5571fa[_0x152a11['id']] = _0x152a11);
    var _0x305aab = _0x3c55ea[_0x34369e];
    delete _0x3c55ea[_0x34369e];
    var _0x53a70a = _0xf458cf['indexOf'](_0x305aab); - 0x1 != _0x53a70a && (_0xf458cf['splice'](_0x53a70a, 0x1), _0x305aab && _0x305aab['onRemovedFromGame']()), _0x3c55ea[_0x34369e] = _0x152a11, _0xf458cf['push'](_0x152a11);
}
_0x7df5db = _0x13e5d6['readUInt16']();
for (var _0x58f319 = 0x0; _0x58f319 < _0x7df5db; _0x58f319++) {
    var _0x34369e = _0x13e5d6['readUInt32'](),
        _0x152a11 = _0x3c55ea[_0x34369e];
    _0x152a11 ? _0x152a11['worldUpd_readMsgUpdate'](_0x13e5d6) : console['log']('Error: Updated GameObj id ' + _0x34369e + ' doesn\'t exist!');
}
_0x7df5db = _0x13e5d6['readUInt16']();
for (var _0x3dbbd1 = 0x0; _0x3dbbd1 < _0x7df5db; _0x3dbbd1++) {
    var _0x5c9379 = _0x13e5d6['readUInt32'](),
        _0x152a11 = _0x3c55ea[_0x5c9379];
    _0x152a11 ? _0x152a11['worldUpd_readMsgRemovedObj'](_0x13e5d6) : console['log']('Error: Removed GameObj id ' + _0x34369e + ' doesn\'t exist!');
}
var _0x45e507 = _0x13e5d6['readUInt16']();
for (var _0x312bd3 = 0x0; _0x312bd3 < _0x45e507; _0x312bd3++) {
    var _0x279f43 = _0x13e5d6['readUInt32'](),
        _0x152a11 = _0x5571fa[_0x279f43];
    _0x152a11 && (_0x152a11['drawMe'] = ![]);
}
var _0x45e507 = _0x13e5d6['readUInt16']();
for (var _0x312bd3 = 0x0; _0x312bd3 < _0x45e507; _0x312bd3++) {
    var _0x279f43 = _0x13e5d6['readUInt32']();
    _0x5571fa[_0x279f43] && delete _0x5571fa[_0x279f43];
}
_0xefeaf8 != null && _0xefeaf8['playerWorldUpdate'](_0x13e5d6), _0x47f856();
}
var _0x3e1d3c = [_0x3ab87a, _0x2bcc5d, _0x3e8ed9, _0x155290, _0x571392, _0x126580];
let _0x190b80 = [];
const _0x47f856 = function () {
    _0x190b80 = [], _0x190b80 = _0xf458cf['slice']();
    for (_0x34f975 = 0x0; _0x34f975 < _0x190b80['length']; _0x34f975++) {
        var _0x39a30b = _0x190b80[_0x34f975];
        if (!_0x39a30b['drawMe']) continue;
        if (_0x190b80[_0x34f975]['clientBatchDraw']) {
            var _0x2ee3b2 = ![],
                _0x3fd975 = _0x190b80[_0x34f975]['clientBatchDrawID'] == 0x0 ? _0x190b80[_0x34f975]['oType'] : _0x190b80[_0x34f975]['clientBatchDrawID'];
            for (j = 0x0; j < _0x3e1d3c['length']; j++) {
                if (_0x3fd975 == _0x3e1d3c[j]) {
                    _0x2ee3b2 = !![];
                    break;
                }
            }!_0x2ee3b2 && _0x3e1d3c['push'](_0x3fd975);
        }
    }
    var _0x30019a = {};
    for (var _0x34f975 = 0x0; _0x34f975 < _0x3e1d3c['length']; _0x34f975++) {
        var _0x1729f0 = new _0x113d9b();
        _0x30019a[_0x3e1d3c[_0x34f975]] = _0x1729f0, _0x190b80['push'](_0x1729f0);
    }
    for (d = _0x190b80['length'] - 0x1; d >= 0x0; d--) {
        var _0x15edee = _0x190b80[d];
        for (e = 0x0; e < _0x3e1d3c['length']; e++) {
            var _0x59637f = _0x3e1d3c[e];
            if ((_0x59637f == _0x15edee['oType'] || _0x59637f == _0x15edee['clientBatchDrawID']) && !(_0x15edee instanceof _0x113d9b)) {
                _0x30019a[_0x59637f]['addBatchedObj'](_0x15edee), _0x190b80['splice'](d, 0x1);
                break;
            }
        }
    }
    for (d = 0x0; d < _0x190b80['length']; d++) {
        var _0x39a30b = _0x190b80[d];
        _0x39a30b['calculateZIndex']();
    }
    _0x190b80['sort'](function (_0x53c60a, _0x211f5f) {
        return _0x53c60a['z'] == _0x211f5f['z'] ? _0x53c60a['id'] - _0x211f5f['id'] : _0x53c60a['z'] - _0x211f5f['z'];
    });
},
_0xcf17ad = function () {
    for (d = 0x0; d < _0x190b80['length']; d++) {
        var _0x25380f = _0x190b80[d];
        if (_0x25380f) _0x25380f['draw']();
    }
    if (!_0x49a9c3)
        for (d = 0x0; d < _0x190b80['length']; d++) {
            if (typeof _0x190b80[d]['chatLines'] != 'undefined') _0x190b80[d]['drawChat']();
        }
},
_0x17bc68 = function () {
    for (d = 0x0; d < _0x29c845['length']; d++) {
        var _0x440da3 = _0x29c845[d];
        if (_0x3c55ea['hasOwnProperty'](_0x440da3['id'])) delete _0x3c55ea[_0x440da3['id']];
        var _0xa3fa38 = _0xf458cf['indexOf'](_0x440da3); - 0x1 != _0xa3fa38 && _0xf458cf['splice'](_0xa3fa38, 0x1);
    }
    for (d = 0x0; d < _0x4d8ac6['length']; d++) {
        var _0x142e5f = _0x4d8ac6[d],
            _0xa3fa38 = _0xf458cf['indexOf'](_0x142e5f); - 0x1 != _0xa3fa38 && _0xf458cf['splice'](_0xa3fa38, 0x1);
    }
};

function _0x4a4bed(_0x22dab5) {}
var _0xbca24b = +new Date(),
_0x3cefe9 = 0x0,
_0x2f7d7e = 0x0,
_0x466637 = 0x0,
_0x3a4471 = 0x0,
_0x222fd5 = 0.175,
_0x5a802e = 0x258,
_0x433c1d = 0x28;
const _0x36f926 = function () {
    _0x1d2dab['globalAlpha'] = 0x1, _0x1d2dab['fillStyle'] = _0x13dbe2, _0x1d2dab['fillRect'](0x0, -_0x5a802e, _0x1f4cd2, _0x5a802e + _0x433c1d), _0x1d2dab['fillRect'](0x0, _0x4767f1 - _0x433c1d, _0x1f4cd2, _0x5a802e + _0x433c1d), _0x1d2dab['fillRect'](-_0x5a802e, -_0x5a802e, _0x5a802e + _0x433c1d, _0x4767f1 + 0x2 * _0x5a802e), _0x1d2dab['fillRect'](_0x1f4cd2 - _0x433c1d, -_0x5a802e, _0x5a802e, _0x4767f1 + _0x433c1d + 0x2 * _0x5a802e);
},
_0x15b736 = function (_0x5c991d) {
    _0x740c5b = +new Date();
    _0x1d2dab['globalAlpha'] != 0x1 && (_0x1d2dab['setTransform'](0x1, 0x0, 0x0, 0x1, 0x0, 0x0), _0x1d2dab['globalAlpha'] = 0x1);
    _0x1d2dab['clearRect'](0x0, 0x0, _0x1bcf68, _0x157802);
    var _0x464611 = (_0x740c5b - _0x4ca99d) / 0x3e8 / _0x222fd5;
    _0x464611 = 0x0 > _0x464611 ? 0x0 : 0x1 < _0x464611 ? 0x1 : _0x464611, _0x552b0d = _0x464611 * (_0x4324e5 - _0x15b7f0) + _0x15b7f0, _0x1a453f = _0x464611 * (_0x43daa3 - _0x1e5a9d) + _0x1e5a9d, _0x3655c9 = (0x19 * _0x3655c9 + camzoom_n) / 0x1a, _0x368165(), _0x1d2dab['save']();
    var _0x1e5473 = _0x1bcf68 / 0x2,
        _0x313687 = _0x157802 / 0x2,
        _0x33ab19 = 0x0,
        _0x5bf2c2 = 0x0;
    _0x1d2dab['translate'](_0x1e5473 * (0x1 - _0x3655c9) + (_0x1e5473 - _0x552b0d - _0x5bf2c2) * _0x3655c9, _0x313687 * (0x1 - _0x3655c9) + (_0x313687 - _0x1a453f - _0x33ab19) * _0x3655c9), _0x1d2dab['scale'](_0x3655c9, _0x3655c9), _0x1d2dab['save'](), _0x5b9fb9 ? _0x36f926() : _0x5c6fe2(_0x3215e9(0x0), _0x5a9941(0x0), _0x3215e9(_0x1bcf68), _0x5a9941(_0x157802), 0x0, 0x0), _0x1d2dab['restore'](), _0xcf17ad(), _0x1d2dab['restore'](), _0xefeaf8 != null && _0xefeaf8['drawMap'](), _0x3810ef(), _0x29f0a4();
};
var _0x16b8c1 = 0x0,
_0x2bcda5 = 0x0;

function _0x45eb8b(_0x26f500) {
if (_0x5424b8) {
    _0x2bcda5 = _0x26f500 - _0x16b8c1;
    if (_0x2bcda5 < _0x121b31) {
        requestAnimationFrame(_0x45eb8b);
        return;
    } else {}
    _0x16b8c1 = _0x26f500;
}
_0x15b736(_0x26f500), _0x570dd4(), requestAnimationFrame(_0x45eb8b);
}
window['requestAnimationFrame'] ? window['requestAnimationFrame'](_0x45eb8b) : setInterval(_0x45eb8b, _0x121b31);
let _0x2691a8 = ![],
_0x424d63 = ![],
_0x17caba = ![];

function _0x30d480() {
if (_0x205acb) {
    const _0x59e741 = setInterval(() => {
        _0x2691a8 ? _0x353df5() : (_0x424d63 = ![], clearInterval(_0x59e741));
    }, 0x1);
}
}
const _0xce1fd8 = function (_0x2c5783) {
    _0x4a8d9c();
    var _0x55cc59 = _0x2c5783['keyCode'] || _0x2c5783['which'];
    if (_0x55cc59 == 0x9) {
        _0x2c5783['preventDefault']();
        return;
    }
    if (!_0x2d53d5 && _0x3c6c95) switch (_0x55cc59) {
    case 0x50:
        _0x2691a8 = !![];
        _0x17caba && (_0x30d480(), !_0x424d63 && (console['log']('SEND MOUSE COORDS INTERVAL: ON'), _0x424d63 = !![]));
        break;
    case 0x11:
    case 0xbd:
        _0x2c5783['preventDefault']();
        break;
    case 0x49:
        _0x460501(0x1, !![]), _0x2c5783['preventDefault']();
        break;
    case 0x4a:
        _0x460501(0x2, !![]), _0x2c5783['preventDefault']();
        break;
    case 0x4b:
        _0x460501(0x3, !![]), _0x2c5783['preventDefault']();
        break;
    case 0x4c:
        _0x460501(0x4, !![]), _0x2c5783['preventDefault']();
        break;
    case 0x31: {
        _0x2c5783['preventDefault'](), _0x5ce142(0x1, !![]);
    }
    break;
    case 0x32:
        _0x2c5783['preventDefault'](), _0x5ce142(0x2, !![]);
        break;
    case 0x33:
        _0x2c5783['preventDefault'](), _0x5ce142(0x3, !![]);
        break;
    case 0x34:
        _0x2c5783['preventDefault'](), _0x5ce142(0x4, !![]);
        break;
    case 0x20: {
        _0x2c5783['preventDefault'](), _0x551e32(_0x270894, !![]);
    }
    break;
    case 0x57: {
        _0x2c5783['preventDefault'](), _0x551e32(_0x3560e8, !![]);
    }
    break;
    case 0x53: {
        _0x2c5783['preventDefault'](), _0x551e32(_0x5e8656, !![]);
    }
    break;
    case 0x1b: {
        (_0x285caa || _0x205acb) && (_0x2c5783['preventDefault'](), _0x47fe47 = !_0x47fe47, _0xbd0373('Movement Lock (ESC KEY): ' + (_0x47fe47 ? 'ON' : 'OFF'), 0x9c4));
    }
    break;
    case 0x45: {
        _0x2c5783['preventDefault'](), _0x551e32(_0x2dfddc, !![]);
    }
    break;
    case 0x44: {
        _0x2c5783['preventDefault'](), _0x551e32(_0x27d65c, !![]);
    }
    break;
    }
},
_0x54c26f = function (_0x2cfad3) {
    var _0x23a515 = _0x2cfad3['keyCode'] || _0x2cfad3['which'];
    if (_0x23a515 == 0x9) {
        _0x2cfad3['preventDefault']();
        return;
    }
    if (_0x2790d1) return;
    if (_0x3c6c95) {
        var _0x23a515 = _0x2cfad3['keyCode'] || _0x2cfad3['which'];
        if (_0x23a515 == 0x11) return;
        if (_0x23a515 == 0xd && !_0x2b8a2b) {
            _0x35add7();
            return;
        }
        if (!_0x2d53d5 && _0x3c6c95) switch (_0x23a515) {
        case 0x50:
            _0x2691a8 = ![], console['log']('SEND MOUSE COORDS INTERVAL: OFF');
            break;
        case 0x5a:
            _0x4586d4();
            break;
        case 0x11:
        case 0xbd:
            _0x2cfad3['preventDefault']();
            break;
        case 0x49:
            _0x460501(0x1, ![]), _0x2cfad3['preventDefault']();
            break;
        case 0x4a:
            _0x460501(0x2, ![]), _0x2cfad3['preventDefault']();
            break;
        case 0x4b:
            _0x460501(0x3, ![]), _0x2cfad3['preventDefault']();
            break;
        case 0x4c:
            _0x460501(0x4, ![]), _0x2cfad3['preventDefault']();
            break;
        case 0x51:
            _0x2cfad3['preventDefault'](), _0x2b19a5();
            break;
        case 0x31: {
            _0x2cfad3['preventDefault'](), _0x5ce142(0x1, ![]);
        }
        break;
        case 0x32:
            _0x2cfad3['preventDefault'](), _0x5ce142(0x2, ![]);
            break;
        case 0x33:
            _0x2cfad3['preventDefault'](), _0x5ce142(0x3, ![]);
            break;
        case 0x34:
            _0x2cfad3['preventDefault'](), _0x5ce142(0x4, ![]);
            break;
        case 0x20: {
            _0x2cfad3['preventDefault'](), _0x551e32(_0x270894, ![]);
        }
        break;
        case 0x57: {
            _0x2cfad3['preventDefault'](), _0x551e32(_0x3560e8, ![]);
        }
        break;
        case 0x26: {
            _0x2cfad3['preventDefault'](), _0x551e32(_0x3ef597, ![]);
        }
        break;
        case 0x28: {
            _0x2cfad3['preventDefault'](), _0x551e32(_0x3f0153, ![]);
        }
        break;
        case 0x45: {
            _0x2cfad3['preventDefault'](), _0x551e32(_0x2dfddc, ![]);
        }
        break;
        case 0x44: {
            _0x2cfad3['preventDefault'](), _0x551e32(_0x27d65c, ![]);
        }
        break;
        case 0x53: {
            _0x2cfad3['preventDefault'](), _0x551e32(_0x5e8656, ![]);
        }
        break;
        }
    }
};
document['onkeydown'] = _0xce1fd8, document['onkeyup'] = _0x54c26f;

function _0xf47364(_0xa216a9) {
_0xa216a9['canvas_handled'] = !![], _0x324b2a = _0xa216a9['clientX'] * _0x4ffcf2, _0x344a08 = _0xa216a9['clientY'] * _0x4ffcf2, _0x368165();
if (!_0x26e8a4) _0x4a8d9c();
if (_0xefeaf8 != null && _0xefeaf8['interfaceButtons'] && _0xefeaf8['interfaceButtons']['length'] > 0x0)
    for (var _0x4debe9 = 0x0; _0x4debe9 < _0xefeaf8['interfaceButtons']['length']; _0x4debe9++) {
        var _0x168557 = _0xefeaf8['interfaceButtons'][_0x4debe9];
        _0x168557['isVisible'] && (_0x168557['setMouseRawPos'](_0x324b2a, _0x344a08), _0x168557['testPosHitsButton'](_0x324b2a, _0x344a08) ? (_0x168557['isHighLighted'] = !![], _0x168557['onMouseMove']()) : _0x168557['isHighLighted'] = ![]);
    }
}

function _0x13ae48(_0x35d672) {
_0x4a8d9c(), _0x35d672['which'] == 0x1 && _0x551e32(_0x270894, !![]), _0x35d672['which'] == 0x3 && _0x551e32(_0x3560e8, !![]);
}

function _0x5a4fb9(_0x3b0b8f) {
if (_0x3b0b8f['which'] == 0x1) {
    _0x551e32(_0x270894, ![]);
    if (_0x2790d1 && _0x740c5b - _0x5a5b70 > 0x28a) return;
    if (_0xefeaf8 != null && _0xefeaf8['interfaceButtons'] && _0xefeaf8['interfaceButtons']['length'] > 0x0) {
        _0x324b2a = _0x3b0b8f['clientX'] * _0x4ffcf2, _0x344a08 = _0x3b0b8f['clientY'] * _0x4ffcf2;
        for (var _0x308bf3 = 0x0; _0x308bf3 < _0xefeaf8['interfaceButtons']['length']; _0x308bf3++) {
            var _0x47af14 = _0xefeaf8['interfaceButtons'][_0x308bf3];
            if (_0x47af14['isVisible'] && _0x47af14['testPosHitsButton'](_0x324b2a, _0x344a08)) {
                _0x47af14['onClick']();
                break;
            }
        }
    }
}
_0x3b0b8f['which'] == 0x3 && _0x551e32(_0x3560e8, ![]);
}

function _0x2fa9e4(_0x113f18) {
_0x113f18['toElement'] == null && _0x113f18['relatedTarget'] == null && (_0x551e32(_0x270894, ![]), _0x551e32(_0x3560e8, ![]));
}
window['onmousemove'] = function (_0x435310) {
_0x435310['target'] !== _0x50791a && !_0x435310['canvas_handled'] && (_0xf47364(_0x435310), _0x435310['preventDefault']());
}, _0x50791a['onmousemove'] = function (_0xc48405) {
!_0xc48405['canvas_handled'] && (_0xf47364(_0xc48405), _0xc48405['preventDefault']());
}, _0x50791a['onmousedown'] = function (_0x28417c) {
_0x13ae48(_0x28417c), _0x28417c['preventDefault']();
}, _0x50791a['onmouseup'] = function (_0x2069ef) {
_0x5a4fb9(_0x2069ef), _0x2069ef['preventDefault']();
}, window['onmouseout'] = function (_0x3af068) {
_0x2fa9e4(_0x3af068);
};
const _0x460501 = function (_0x2459b2, _0x4e7052) {
if (_0x26f437() && _0x3c6c95) {
    var _0x4b95fe = new _0x5768c5(0x3);
    _0x4b95fe['writeUInt8'](_0x7cd8f3), _0x4b95fe['writeUInt8'](_0x4e7052 ? 0x1 : 0x0), _0x4b95fe['writeUInt8'](_0x2459b2), _0x485a35(_0x4b95fe);
}
};
var _0xd668be = null,
_0x41abf8 = 0x0;

function _0x5ce142(_0x22652d, _0x484042) {
_0xd668be = _0x22652d;
if (!_0x484042) {
    if (_0x1a2c52 > 0x0) {
        if (+new Date() > _0x41abf8) {
            var _0x21878d = new _0x5768c5(0x5);
            _0x21878d['writeUInt8'](_0x1a434e), _0x21878d['writeUInt32'](_0x1a2c52), _0x485a35(_0x21878d), _0x1a2c52 = 0x0, _0xd668be = null;
        }
    }
}
}
var _0xfebc90 = 0x1;

function _0x4586d4() {
if (_0x205acb) {
    _0xfebc90 = _0xfebc90 == 0x0 ? 0x1 : 0x0;
    if (_0xfebc90 == 0x0) _0x3eeb91['testDisconnect']();
    else _0x3eeb91['testReconnect']();
}
}
var _0x276ad6 = {},
_0xcde18c = null,
_0x1c2622 = 0x64,
_0x16e2d4 = -0xf * _0x32b8d4,
_0x38b2e0 = 0x0;

function _0x55fec5(_0x13ed01, _0x46f4d5, _0xbfe97, _0x4667fe, _0x11883a, _0x3e9621, _0x440eb2, _0x1eed32) {
typeof _0x1eed32 === 'undefined' && (_0x1eed32 = !![]);
typeof _0x3e9621 === 'undefined' && (_0x3e9621 = 0x5);
if (typeof _0x3e9621 === 'number') _0x3e9621 = {
    'tl': _0x3e9621,
    'tr': _0x3e9621,
    'br': _0x3e9621,
    'bl': _0x3e9621
};
else {
    var _0x312cc8 = {
        'tl': 0x0,
        'tr': 0x0,
        'br': 0x0,
        'bl': 0x0
    };
    for (var _0x449eae in _0x312cc8) {
        _0x3e9621[_0x449eae] = _0x3e9621[_0x449eae] || _0x312cc8[_0x449eae];
    }
}
_0x13ed01['beginPath'](), _0x13ed01['moveTo'](_0x46f4d5 + _0x3e9621['tl'], _0xbfe97), _0x13ed01['lineTo'](_0x46f4d5 + _0x4667fe - _0x3e9621['tr'], _0xbfe97), _0x13ed01['quadraticCurveTo'](_0x46f4d5 + _0x4667fe, _0xbfe97, _0x46f4d5 + _0x4667fe, _0xbfe97 + _0x3e9621['tr']), _0x13ed01['lineTo'](_0x46f4d5 + _0x4667fe, _0xbfe97 + _0x11883a - _0x3e9621['br']), _0x13ed01['quadraticCurveTo'](_0x46f4d5 + _0x4667fe, _0xbfe97 + _0x11883a, _0x46f4d5 + _0x4667fe - _0x3e9621['br'], _0xbfe97 + _0x11883a), _0x13ed01['lineTo'](_0x46f4d5 + _0x3e9621['bl'], _0xbfe97 + _0x11883a), _0x13ed01['quadraticCurveTo'](_0x46f4d5, _0xbfe97 + _0x11883a, _0x46f4d5, _0xbfe97 + _0x11883a - _0x3e9621['bl']), _0x13ed01['lineTo'](_0x46f4d5, _0xbfe97 + _0x3e9621['tl']), _0x13ed01['quadraticCurveTo'](_0x46f4d5, _0xbfe97, _0x46f4d5 + _0x3e9621['tl'], _0xbfe97), _0x13ed01['closePath'](), _0x440eb2 && _0x13ed01['fill'](), _0x1eed32 && _0x13ed01['stroke']();
}

function _0x364a60() {
_0x26338c += (_0x9cd38f - _0x26338c) * 0.1, _0xb03d03 += (_0x2dfc88 - _0xb03d03) * 0.03;
if (_0x5dd9a5 == _0x234afd) _0x4c41f4 += (curBarPerc_n - _0x4c41f4) * 0.015;
}
const _0x3810ef = function () {
if (_0x346a79) return;
if (!_0x3c6c95) return;
_0x1d2dab['save']();
var _0x46edaf = _0x3c55ea[_0x2fc9ba];
_0x46edaf && (_0x2960fc = _0x46edaf['animalType'], _0x44afb5 = _0x46edaf['animalSpecies'], _0x42180e = _0x46edaf['animalSubSpecies']);
if (_0x5dd9a5 != _0x234afd) _0x38b2e0 = 0x1e;
_0x1d2dab['save']();
var _0x30f8b4 = Math['min'](0x1c2, _0x1bcf68 * 0.9) * _0x32b8d4,
    _0x2261fe = 0x1e * _0x32b8d4,
    _0x2219d7 = _0x1bcf68 / 0x2,
    _0x1e585c = _0x157802 - 0x44 * _0x32b8d4;
_0x1e585c += _0x38b2e0 * _0x32b8d4, _0x1d2dab['fillStyle'] = 'black';
var _0x31bf5e = '';
if (_0x3ca62f != 'null') {
    var _0x12a868 = '';
    if (_0x3ca62f['indexOf']('BEGIN') == -0x1) _0x12a868 = '\x0aYOU COULD EARN ' + _0x353eee + ' COINS';
    else _0x12a868 = '\x0aPLEASE WAIT!';
    _0x31bf5e = _0x3ca62f + _0x12a868, _0x1d2dab['globalAlpha'] = 0.05, _0x6aeabc['alpha'] = 0.5, _0x6aeabc['multiLine'] = !![];
} else _0x6aeabc['multiLine'] = ![], _0x31bf5e = _0x353eee, _0x1d2dab['globalAlpha'] = 0.3, _0x6aeabc['alpha'] = 0x1;
_0x6aeabc['setText'](_0x31bf5e), _0x6aeabc['setFontSize'](0x16 * _0x32b8d4);
var _0x58f57f = _0x6aeabc['getRenderedCanvas'](),
    _0x58541d = _0x58f57f['width'] + 0x19 * _0x32b8d4,
    _0x23147f = _0x58f57f['height'] / 0x2 + 0xf * _0x32b8d4;
_0x3ca62f != 'null' && (_0x58541d = _0x30f8b4, _0x23147f = _0x58f57f['height'] / 0x2 + 0xf * _0x32b8d4);
var _0x422b49 = _0x2219d7 - _0x58541d / 0x2,
    _0x46df16 = _0x2219d7;
_0x3ca62f == 'null' && (_0x422b49 = _0x2219d7 + _0x16e2d4 - _0x58541d / 0x2, _0x46df16 = _0x422b49 - _0x16e2d4 * 1.5);
_0x6aeabc['x'] = _0x46df16, _0x6aeabc['y'] = _0x1e585c, _0x1d2dab['fillRect'](_0x422b49, _0x1e585c - _0x23147f / 0x2, _0x58541d, _0x23147f), _0x1d2dab['globalAlpha'] = 0x1, _0x6aeabc['draw'](), _0x1d2dab['restore']();
if (_0x3ca62f == 'null') {
    _0x1d2dab['save']();
    var _0x57ccf6 = _0x5ace1d('./shop/mopecoin.png');
    if (_0x57ccf6) {
        var _0x2b2eca = 0x1e * _0x32b8d4,
            _0x59ed13 = _0x2b2eca / _0x57ccf6['height'] * 1.25,
            _0x43b8c7 = _0x57ccf6['width'] * _0x59ed13,
            _0x16c509 = _0x57ccf6['height'] * _0x59ed13;
        _0x1d2dab['drawImage'](_0x57ccf6, _0x2219d7, _0x1e585c - _0x16c509 / 0x2, _0x43b8c7, _0x16c509);
    }
    _0x1d2dab['restore']();
}
_0x1e585c = _0x157802 - _0x2261fe / 0x2 - 0x5, _0x30f8b4 = _0x1bcf68 * 0.9, _0x1d2dab['globalAlpha'] = 0x1;
if (_0x5d6eed)
    for (var _0xc641bc = 0x0; _0xc641bc < _0x1e1b40['length']; _0xc641bc++) {
        var _0x892f15 = _0x1e1b40[_0xc641bc];
        _0x892f15['draw']();
    }
if (_0x5b3018) _0x2b2c6f();
if (_0x3abb4d) {
    _0x39e0f1 += ((_0x55b0e6 ? 0x1 : 0x0) - _0x39e0f1) * 0.1;
    if (_0x39e0f1 > 0.005 && _0x3c6c95) {
        _0x1d2dab['globalAlpha'] = 0.3 * _0x39e0f1, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](_0x659dc8, _0x553e95, _0x22aa5d * _0x4ffcf2, 0x0, 0x2 * Math['PI']), _0x1d2dab['fillStyle'] = '#000000', _0x1d2dab['fill'](), _0x1d2dab['globalAlpha'] = 0.5 * _0x39e0f1, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](_0x32d16d, _0x1e7abe, _0x22aa5d * _0x4ffcf2 * 0.57, 0x0, 0x2 * Math['PI']), _0x1d2dab['fillStyle'] = '#000000', _0x1d2dab['fill']();
        var _0x4c82a9 = _0x4ef384 * 0.3;
        _0x4ef384 -= _0x4c82a9, _0x14d1cc += _0x4c82a9, _0xe65ffe += (_0x19e5a9 - _0xe65ffe) * 0.1, _0x1d2dab['save'](), _0x1d2dab['translate'](_0x1bcf68 / 0x2, _0x157802 / 0x2), _0x1d2dab['rotate'](_0x14d1cc), _0x1d2dab['globalAlpha'] = 0.5 * _0x39e0f1, _0x1d2dab['beginPath'](), _0x1d2dab['fillStyle'] = '#000000';
        var _0x339680 = 0x28 * _0x4ffcf2;
        if (_0x3c55ea[_0x2fc9ba]) _0x339680 = (0x9 + _0x3c55ea[_0x2fc9ba]['rad']) * _0x3655c9;
        _0x339680 *= 0.1 + 0.9 * _0xe65ffe;
        var _0x2c6584 = 0xf * _0x4ffcf2,
            _0x19ef34 = 0x1e * _0x4ffcf2 * (0.2 + 0.8 * _0xe65ffe);
        _0x1d2dab['moveTo'](_0x339680 + _0x19ef34, 0x0), _0x1d2dab['lineTo'](_0x339680, _0x2c6584 / 0x2), _0x1d2dab['lineTo'](_0x339680, -_0x2c6584 / 0x2), _0x1d2dab['closePath'](), _0x1d2dab['fill'](), _0x1d2dab['restore']();
    }
}
for (var _0xc641bc = _0x37f689['length'] - 0x1; _0xc641bc >= 0x0; _0xc641bc--) {
    var _0x574c2c = _0x37f689[_0xc641bc];
    _0x574c2c['draw']();
    if (_0x574c2c['timedOut']) _0x37f689['splice'](_0xc641bc, 0x1);
}
_0x1d2dab['restore']();
};
var _0x1b3d11 = 'Ready to survive!',
_0x47970c = 0x19,
_0x30c966 = 'white',
_0x17a598 = +new Date() + 0x0,
_0x3f9d64 = [],
_0x227370 = +new Date() + 0x0,
_0x179471 = 0x0,
_0x4303ca = 0x64,
_0x2052cc = 0x2,
_0x417dd6 = ![],
_0x2790d1 = ![],
_0xdb682c = 0x0,
_0x2a6397 = [],
_0x4f3785 = ![],
_0x5a5b70 = 0x0,
_0x5ac952 = 0x0;

function _0xbd0373(_0x420859, _0x38d3ba) {
_0x1b3d11 = _0x420859, _0x17a598 = +new Date() + _0x38d3ba;
}

function _0x29f0a4() {
var _0x5708f9 = 0x1,
    _0x2540a4 = (_0x17a598 - _0x740c5b) / 0x3e8 / _0x5708f9;
_0x2540a4 = 0x0 > _0x2540a4 ? 0x0 : 0x1 < _0x2540a4 ? 0x1 : _0x2540a4;
if (_0x2540a4 > 0x0) {
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = _0x2540a4, _0x187edd['setText'](_0x1b3d11), _0x187edd['setColor'](_0x30c966);
    if (_0x1b3d11 == 'SPECTATE MODE') _0x47970c = 0x32;
    else _0x47970c = 0x19;
    _0x187edd['setFontSize'](_0x47970c * _0x32b8d4), _0x187edd['x'] = _0x1bcf68 / 0x2, _0x187edd['y'] = _0x157802 * 0.25, _0x187edd['draw'](), _0x1d2dab['restore']();
}
var _0x18f896 = _0x227370 - _0x740c5b > 0x0 ? 0x1 : 0x0;
_0x179471 += (_0x18f896 - _0x179471) * 0.05;
if (_0x179471 > 0.01 && !(_0x31f3fc == 0x2)) {
    const _0x3fe490 = parseInt(localStorage['getItem']('times_shown_tutorial') || '0');
    _0x417dd6 && !_0x56fe31 && _0x3fe490 < 0x3 && $bus['emit']($bus['EVENTS']['SHOW_ANIMAL_TUTORIAL']);
}
_0xefeaf8 != null && _0xefeaf8['interface'](), _0x3d0358(), _0x4e09cb();
}

function _0x4e09cb() {
if (_0xefeaf8 != null) {
    if (_0xefeaf8['interfaceButtons'])
        for (var _0x5d852c = 0x0; _0x5d852c < _0xefeaf8['interfaceButtons']['length']; _0x5d852c++) {
            var _0x594f13 = _0xefeaf8['interfaceButtons'][_0x5d852c];
            _0x594f13['isVisible'] && _0x594f13['draw']();
        }
}
}
var _0x37f689 = [],
_0xd1fe10 = 0x0,
_0x5db317 = 0x0;

function _0x47c0bc(_0x35ca6f, _0xa08c0a) {
var _0x40ba18 = _0x35ca6f - _0xd1fe10;
if (_0x35ca6f - _0xd1fe10 != 0x0 && (_0x740c5b - _0x5db317) / 0x3e8 > 0.7) {
    _0xd1fe10 = _0x35ca6f, _0x5db317 = _0x740c5b;
    var _0x1e1234 = new _0x1e1e17(_0x40ba18, ' XP');
    _0x37f689['push'](_0x1e1234);
}
}
var _0x13f2e0 = 0x0;

function _0x1894db(_0xe3286c, _0x37be21) {
var _0x711348 = _0xe3286c - _0x13f2e0;
if (_0x711348 > 0x0) {
    if (_0xe3286c - _0x13f2e0 != 0x0 && (_0x740c5b - _0x5db317) / 0x3e8 > 0.7) {
        _0x13f2e0 = _0xe3286c, _0x5db317 = _0x740c5b;
        var _0x307379 = new _0x1e1e17(_0x711348, _0x711348 > 0x1 ? ' COINS' : ' COIN', 'yellow');
        _0x37f689['push'](_0x307379);
    }
}
}

function _0x4d6d2b() {
if (_0x2b468b && _0x2b468b['length'] > 0x0)
    for (i = 0x0; i < _0x2b468b['length']; i++) {
        var _0x5ee6bc = _0x2b468b[i];
        if (_0x5ee6bc['oType'] == _0x4341d1) !_0x5ee6bc['droppedInHole'] && (_0x2d11f3(_0x5ee6bc, 'brown', 0x2), _0x2d11f3(_0x5ee6bc, 'orange', 1.5));
        else {
            if (_0x5ee6bc['oType'] == _0x22ccdc) _0x20093c(_0x5ee6bc, 0x3, 0.9);
            else {
                if (_0x5ee6bc['oType'] == _0x2c5edd) _0x52a2d0(_0x5ee6bc, 0x3, 0.9);
                else _0x2d11f3(_0x5ee6bc, 'red', 0x2);
            }
        }
    }
}

function _0x23a8af(_0x5067fa) {
switch (_0x5067fa) {
case 0x0:
    return 'tornado';
case 0x1:
    return 'waterspout';
case 0x2:
    return 'dustdevil';
case 0x3:
    return 'arcticwhirl';
case 0x4:
    return 'firedevil';
case 0x5:
    return 'deviltwister';
}
return 'tornado';
}

function _0x20093c(_0xf90c79, _0x4ab0c3, _0x4a3a29) {
var _0x1e7885 = '/assets/s/' + _0x41cf1d + '/img/disasters/' + _0x23a8af(_0xf90c79['specType']) + '.png',
    _0x2193a6 = _0x5ace1d(_0x1e7885);
if (_0x2193a6) {
    var _0x430ded = _0x4ffcf2 * Math['max'](0x2, _0xf90c79['rad']),
        _0x45baed = _0x430ded * _0x4ab0c3,
        _0x198e9d = 0x0;
    if (_0x31f3fc == 0x3) {
        var _0x44d2a2 = 0x3c / 0x3c,
            _0x2f0427 = 0x3e8 / _0x44d2a2,
            _0x96e3eb = _0x740c5b % _0x2f0427 / _0x2f0427;
        _0x198e9d = _0x96e3eb * 0x2 * Math['PI'];
    }
    _0x1d2dab['globalAlpha'] = 0x1;
    var _0x283066 = _0x1bcf68 - (0xa * _0x4ffcf2 + _0x2e5deb['width'] * _0x32b8d4) + _0xf90c79['x'] * (_0x2e5deb['width'] * _0x32b8d4) / _0x1f4cd2,
        _0x5b6b99 = 0xa * _0x4ffcf2 + _0xf90c79['y'] * (_0x2e5deb['height'] * _0x32b8d4) / _0x4767f1;
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = _0x4a3a29, _0x1d2dab['translate'](_0x283066, _0x5b6b99);
    if (_0x31f3fc == 0x3) _0x1d2dab['rotate'](_0x198e9d);
    _0x1d2dab['drawImage'](_0x2193a6, 0x0 - _0x45baed, 0x0 - _0x45baed, 0x2 * _0x45baed, 0x2 * _0x45baed), _0x1d2dab['restore']();
}
}

function _0x1a38fa(_0x1dfe58) {
switch (_0x1dfe58) {
case _0x452520:
    return 'img/disasters/tsunami.png';
case _0x12c6d1:
    return 'img/disasters/dustwave.png';
case _0x63711a:
    return 'img/disasters/heatwave.png';
case _0x1f65f3:
    return 'img/disasters/heatwave.png';
case _0x22613e:
    return 'img/disasters/coldwave.png';
}
return null;
}

function _0x52a2d0(_0x3aee41, _0x9804c, _0x23e4ab) {
var _0x1fdf11 = '/assets/s/' + _0x41cf1d + '/' + _0x1a38fa(_0x3aee41['abil']),
    _0x483444 = _0x5ace1d(_0x1fdf11);
if (_0x483444) {
    var _0x48f57a = _0x4ffcf2 * Math['max'](0x2, _0x3aee41['rad']),
        _0x45d663 = _0x48f57a * _0x9804c;
    _0x1d2dab['globalAlpha'] = 0x1;
    var _0x78cea9 = _0x1bcf68 - (0xa * _0x4ffcf2 + _0x2e5deb['width'] * _0x32b8d4) + _0x3aee41['x'] * (_0x2e5deb['width'] * _0x32b8d4) / _0x1f4cd2,
        _0x1f084d = 0xa * _0x4ffcf2 + _0x3aee41['y'] * (_0x2e5deb['height'] * _0x32b8d4) / _0x4767f1;
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = _0x23e4ab, _0x1d2dab['translate'](_0x78cea9, _0x1f084d), _0x1d2dab['rotate'](_0x3aee41['angle'] + _0x2bcbaa(_0x46fe4e)), _0x1d2dab['drawImage'](_0x483444, 0x0 - _0x45d663, 0x0 - _0x45d663, 0x2 * _0x45d663, 0x2 * _0x45d663), _0x1d2dab['restore']();
}
}
var _0x46fe4e = 0x5a;

function _0x476f6f(_0x4dacbe, _0x2b8953, _0xa8227f) {
var _0x463cde = '/assets/s/' + _0x41cf1d + '/img/pumpkin/' + _0x4dacbe['specType'] + '/0.png',
    _0x32a969 = _0x5ace1d(_0x463cde);
if (_0x32a969) {
    var _0x569fb6 = _0x4ffcf2 * Math['max'](0x2, _0x4dacbe['rad']),
        _0x259743 = _0x569fb6 * _0x2b8953;
    _0x1d2dab['globalAlpha'] = 0x1;
    var _0x24ff1a = _0x1bcf68 - (0xa * _0x4ffcf2 + _0x2e5deb['width'] * _0x32b8d4) + _0x4dacbe['x'] * (_0x2e5deb['width'] * _0x32b8d4) / _0x1f4cd2,
        _0x54a41c = 0xa * _0x4ffcf2 + _0x4dacbe['y'] * (_0x2e5deb['height'] * _0x32b8d4) / _0x4767f1;
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = _0xa8227f, _0x1d2dab['translate'](_0x24ff1a, _0x54a41c), _0x1d2dab['drawImage'](_0x32a969, 0x0 - _0x259743, 0x0 - _0x259743, 0x2 * _0x259743, 0x2 * _0x259743), _0x1d2dab['restore']();
}
}

function _0x388242(_0x37a5a6, _0x1cdb4c, _0xca623d) {
if (_0x37a5a6) {
    var _0x33e2b1 = _0x4ffcf2 * Math['max'](0x3, _0x37a5a6['rad'] * (_0x2e5deb['width'] / _0x1f4cd2)),
        _0x3bd483 = _0x1bcf68 - (0xa * _0x4ffcf2 + _0x2e5deb['width'] * _0x32b8d4) + _0x37a5a6['x'] * (_0x2e5deb['width'] * _0x32b8d4) / _0x1f4cd2,
        _0x149428 = 0xa * _0x4ffcf2 + _0x37a5a6['y'] * (_0x2e5deb['height'] * _0x32b8d4) / _0x4767f1,
        _0x2fc24a = _0x33e2b1 + _0x4ffcf2 * 0x2;
    _0x1d2dab['beginPath'](), _0x1d2dab['fillStyle'] = 'black', _0x1d2dab['arc'](_0x3bd483, _0x149428, _0x2fc24a, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['fillStyle'] = _0x1cdb4c, _0x1d2dab['arc'](_0x3bd483, _0x149428, _0x33e2b1, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill']();
}
}

function _0x2d11f3(_0x193cb0, _0x596388, _0x16a1cb, _0x5ecdf9) {
if (_0x193cb0) {
    _0x1d2dab['globalAlpha'] = _0x5ecdf9 ? _0x5ecdf9 : 0x1, _0x1d2dab['fillStyle'] = _0x596388, _0x1d2dab['beginPath']();
    var _0x23c2a9 = _0x4ffcf2 * Math['max'](0x2, _0x193cb0['rad']);
    _0x1d2dab['arc'](_0x1bcf68 - (0xa * _0x4ffcf2 + _0x2e5deb['width'] * _0x32b8d4) + _0x193cb0['x'] * (_0x2e5deb['width'] * _0x32b8d4) / _0x1f4cd2, 0xa * _0x4ffcf2 + _0x193cb0['y'] * (_0x2e5deb['height'] * _0x32b8d4) / _0x4767f1, _0x23c2a9 * _0x16a1cb, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill']();
}
}

function _0x464850(_0x2963d1, _0x2c97ac, _0x1a7ba6) {
const _0x509d84 = _0x2963d1['find'](_0x39822f => _0x39822f['rank'] == _0x1a7ba6);
_0x2963d1['length'] === 0xa && _0x2963d1['indexOf'](_0x509d84) === _0x2963d1['length'] - 0x1 && _0x2963d1['pop'](), _0x49a9c3 ? _0x2963d1 = _0x2963d1['map'](_0x233ffc => _0x233ffc['rank'] + '. (' + _0x33bfab(_0x233ffc['score']) + ')') : _0x2963d1 = _0x2963d1['map'](_0x3b12c8 => {
    const _0x4d2863 = _0x3b12c8['name'] || 'mope.io';
    return _0x3b12c8['rank'] + '. ' + _0x4d2863 + ' (' + _0x33bfab(_0x3b12c8['score']) + ')';
}), $bus['emit']($bus['EVENTS']['SET_LEADERBOARD'], {
    'leaders': _0x2963d1,
    'ownRank': _0x1a7ba6,
    'ownScore': _0x509d84['score']
});
}
var _0x523b16 = !![];

function _0x36e784(_0x406a98) {
_0x523b16 = _0x406a98;
let _0x510579 = '1',
    _0xa29288 = 'visible',
    _0x4b280a = 'static';
!_0x406a98 && (_0x510579 = '0', _0xa29288 = 'hidden', _0x4b280a = 'absolute;');
const _0xa9284c = _0x5b3a24 => {
    const _0x448b1b = document['getElementById'](_0x5b3a24);
    _0x448b1b && (_0x448b1b['style']['position'] = _0x4b280a, _0x448b1b['style']['opacity'] = _0x510579, _0x448b1b['style']['visibility'] = _0xa29288);
};
_0xa9284c('moneyRectWrap'), _0xa9284c('moneyRectBottomWrap');
var _0x24e585 = document['querySelector']('.grecaptcha-badge');
_0x24e585 && (_0x24e585['style']['display'] = _0x406a98 ? 'block' : 'none'), $bus['emit']($bus['EVENTS']['TOGGLE_MENU_VISIBILITY'], _0x406a98), _0x406a98 && _0x45a8b5($bus['CONSTANTS']['AD_SCREEN_LAYOUTS']['MENU']);
}

function _0x8851a4() {
return;
}

function _0x3832f5() {
_0x36e784(!![]), document['getElementById']('moneyRectangle')['style']['marginTop'] = '55px', document['getElementById']('mopeMenu')['style']['display'] = 'block';
}

function _0x399ba2() {
console['log']('client objs reset!'), _0xf458cf = [], _0x3c55ea = {}, _0x29c845 = [];
}
var _0x50cdc3 = function (_0x2558b1, _0x51e86f, _0x133892, _0xdd7d63, _0x556e61) {
_0x2558b1['fillText'](_0x51e86f, _0xdd7d63, _0x556e61), _0x2558b1['fillText'](': ' + _0x133892, _0xdd7d63 + 0x78, _0x556e61);
};

function _0x2b19a5() {
if (!_0x49e774 || disable1v1Button) return;
var _0x4cf7cf = new _0x5768c5(0x2);
_0x4cf7cf['writeUInt8'](0x34), _0x4cf7cf['writeUInt8'](0x0), _0x485a35(_0x4cf7cf);
}

function _0x2b2c6f() {
if (_0x423092) {
    if (_0x462117 == null) _0x462117 = new _0x45d95f(0x0, 0x0, 0x3c * _0x32b8d4, 0x3c * _0x32b8d4, 'Invite for 1v1', 0x1e), _0x462117['showLabeleOnHover'] = !![], _0x462117['textShadow'] = !![], _0x462117['drawTextOnHowever'] = function () {
        if (_0x3e2ef0 > 0.01) return;
        this['drawText'](this['w'] / 0x2, this['h'] + this['h'] / 0x2);
    }, _0x462117['onClick'] = function () {
        if (_0x3e2ef0 > 0.01) return;
        !this['clicked'] && (this['isVisible'] = ![], this['clicked'] = !![], this['isHighLighted'] = ![], _0x2b19a5());
    }, _0x462117['onMouseMove'] = function () {}, _0x462117['update'] = function () {
        this['x'] = _0x1bcf68 / 0x2 - this['w'] / 0x2, this['y'] = 0x2d * _0x32b8d4 + this['h'] / 0x2;
    }, _0x462117['onInterfaceReset'] = function () {
        this['isVisible'] = ![], _0x462117 = null;
    }, _0x462117['onAfterDraw'] = function () {
        var _0x55378c = _0x5ace1d('img/icons/1v1.png');
        if (_0x55378c) {
            _0x1d2dab['save']();
            var _0x145de7 = this['w'] * 0.8,
                _0x840f7 = (this['w'] - _0x145de7) / 0x2;
            _0x1d2dab['drawImage'](_0x55378c, this['x'] + _0x840f7, this['y'] + _0x840f7, _0x145de7, _0x145de7), _0x1d2dab['restore']();
        }
        if (_0x3e2ef0 > 0.01) {
            this['alpha'] = 0.1, rechargeTotalT = 0x3e8 * 0x1e, rechargeEndT = +new Date() + 0x3e8 * _0x3e2ef0;
            var _0x3ec91f = Math['max'](0x0, rechargeEndT - _0x740c5b),
                _0x1d6066 = _0x3ec91f / rechargeTotalT;
            _0x1d2dab['save'](), _0x1d2dab['fillStyle'] = '#000000';
            var _0x291ec1 = this['x'],
                _0x7d8f95 = this['y'],
                _0x5cb64b = this['w'],
                _0x242744 = this['h'] * 0.5;
            _0x1d2dab['globalAlpha'] = 0.1, _0x1d2dab['fillRect'](_0x291ec1, _0x7d8f95 + _0x242744 / 0x2, _0x5cb64b, _0x242744), _0x1d2dab['globalAlpha'] = 0x1, _0x1d2dab['fillStyle'] = '#F3C553', _0x1d2dab['fillRect'](_0x291ec1, _0x7d8f95 + _0x242744 / 0x2, _0x5cb64b * _0x1d6066, _0x242744), _0x1d2dab['restore']();
        } else this['alpha'] = disable1v1Button ? 0.1 : 0x1;
    }, _0xefeaf8['interfaceButtons']['push'](_0x462117);
    else {
        if (_0x462117 != null) {
            _0x462117['isVisible'] = _0x49e774 && !_0x2790d1 && !_0x44408d;
            if (_0x462117['isVisible']) _0x462117['clicked'] = ![];
            _0x462117['draw']();
        }
    }
} else _0x462117 = null;
}

function _0x721668(_0x39837f) {
this['interfaceType'] = _0x39837f, this['data'] = {}, this['interfaceCanvas'] = null, this['interfaceCanvas_pos'] = 0x0, this['expiresT'] = 0x0, this['maxDur'] = 0x96, this['interfaceShowT'] = 0x0, this['animalType'] = _0x3c55ea[_0x2fc9ba]['animalType'], this['aniRad'] = _0x3c55ea[_0x2fc9ba]['rad'], this['customButtons'] = [], this['loadData'] = function (_0x3a9657) {
    this['interfaceType'] == 0x1 ? (this['maxDur'] = _0x3a9657['readUInt8'](), this['data'] = {}, this['data'][_0x5b6f26] = _0x3a9657['readUInt8'](), this['data'][_0x9ca027] = _0x3a9657['readUInt8'](), this['data'][_0x31a0ba] = _0x3a9657['readUInt8'](), this['data'][_0x380133] = _0x3a9657['readUInt8'](), this['data'][_0x40da91] = _0x3a9657['readUInt8'](), this['data'][_0x16390e] = _0x3a9657['readUInt8'](), this['data'][_0x19e418] = _0x3a9657['readUInt8'](), this['data'][_0x20f46e] = _0x3a9657['readUInt8'](), this['data'][_0x47ccac] = _0x3a9657['readUInt8'](), this['data'][_0x526523] = _0x3a9657['readUInt8'](), this['data'][_0x2350ea] = _0x3a9657['readUInt8'](), this['data'][_0x55a926] = _0x3a9657['readUInt8'](), this['data'][_0x36b345] = _0x3a9657['readUInt8'](), this['rows'] = 0xd, this['data']['anis'] = new Array(), this['data']['anis']['push'](_0x2350ea), this['data']['anis']['push'](_0x55a926), this['data']['anis']['push'](_0x36b345), this['data']['anis']['push'](_0x5b6f26), this['data']['anis']['push'](_0x9ca027), this['data']['anis']['push'](_0x31a0ba), this['data']['anis']['push'](_0x380133), this['data']['anis']['push'](_0x40da91), this['data']['anis']['push'](_0x16390e), this['data']['anis']['push'](_0x19e418), this['data']['anis']['push'](_0x20f46e), this['data']['anis']['push'](_0x47ccac), this['data']['anis']['push'](_0x526523)) : (this['data'] = {}, this['maxDur'] = _0x3a9657['readUInt8'](), this['data']['selected'] = _0x3a9657['readUInt8'](), this['data'][0x0] = _0x3a9657['readUInt8'](), this['data'][0x1] = _0x3a9657['readUInt8'](), this['data'][0x2] = _0x3a9657['readUInt8'](), this['data'][0x3] = 0x0, this['rows'] = 0x4), this['expiresT'] = _0x740c5b + this['maxDur'] * 0x3e8, this['interfaceCanvas'] == null && (this['interfaceCanvas'] = document['createElement']('canvas'), this['interfaceCanvas']['setAttribute']('id', 'playerCustomCanvas'), this['ctx'] = this['interfaceCanvas']['getContext']('2d'));
}, this['getTitle'] = function () {
    if (this['interfaceType'] == 0x1) return 'APEX KILLS';
    else {
        if (this['interfaceType'] == 0x2) return 'CHOOSE MAIN ABILITY';
        else {
            if (this['interfaceType'] == 0x3) return 'CHOOSE PASSIVE ABILITY';
            else return 'OPTIONS';
        }
    }
}, this['getInterfaceSize'] = function () {
    if (this['animalType'] == _0x5b6f26) return this['aniRad'] * _0x32b8d4;
    else return this['aniRad'] * 0x2 * _0x32b8d4;
}, this['drawCircles'] = function (_0x276cc6, _0x7943bc, _0x15b9c5) {
    if (this['animalType'] == _0x5b6f26) return this['bdInterface'](_0x276cc6, _0x7943bc, _0x15b9c5);
    else return this['getInterface'](_0x276cc6, _0x7943bc, _0x15b9c5);
}, this['bdInterface'] = function (_0x5bc9b8, _0xe17955, _0x1f8cbb) {
    var _0x3f3b18 = 3.1;
    this['ctx']['save'](), this['ctx']['globalAlpha'] = 0.05;
    var _0x4b26eb = _0x1f8cbb * _0x3f3b18;
    return this['ctx']['lineWidth'] = 0x2, this['ctx']['fillStyle'] = 'black', this['ctx']['beginPath'](), this['ctx']['arc'](_0x5bc9b8, _0xe17955, _0x4b26eb - _0x1f8cbb / 0x2, 0x0, Math['PI'] * 0x2, ![]), this['ctx']['arc'](_0x5bc9b8, _0xe17955, _0x4b26eb + _0x1f8cbb / 0x2, Math['PI'] * 0x2, 0x0, !![]), this['ctx']['fill'](), this['ctx']['globalAlpha'] = 0.1, this['ctx']['strokeStyle'] = 'black', this['ctx']['beginPath'](), this['ctx']['arc'](_0x5bc9b8, _0xe17955, _0x4b26eb + _0x1f8cbb / 0x2, Math['PI'] * 0x2, 0x0), this['ctx']['stroke'](), this['ctx']['beginPath'](), this['ctx']['arc'](_0x5bc9b8, _0xe17955, _0x4b26eb - _0x1f8cbb / 0x2, 0x0, Math['PI'] * 0x2, ![]), this['ctx']['stroke'](), this['ctx']['restore'](), _0x4b26eb;
}, this['getInterface'] = function (_0x5d2c63, _0x10a0bf, _0x5491fc) {
    var _0x54bd58 = 0x3,
        _0x28fbb9 = _0x5491fc * _0x54bd58;
    this['ctx']['lineWidth'] = 0x4, this['ctx']['fillStyle'] = 'red', this['ctx']['globalAlpha'] = 0.1, this['ctx']['beginPath']();
    var _0x494b7f = _0x5491fc * 0.9,
        _0x425dee = _0x5491fc * 1.9;
    return this['ctx']['arc'](_0x5d2c63, _0x10a0bf, _0x28fbb9 - _0x494b7f, 0x0, Math['PI'] * 0x2, ![]), this['ctx']['arc'](_0x5d2c63, _0x10a0bf, _0x28fbb9 + _0x425dee, Math['PI'] * 0x2, 0x0, !![]), this['ctx']['fill'](), this['ctx']['globalAlpha'] = 0.1, this['ctx']['strokeStyle'] = 'blue', this['ctx']['beginPath'](), this['ctx']['arc'](_0x5d2c63, _0x10a0bf, _0x28fbb9 + _0x425dee, Math['PI'] * 0x2, 0x0), this['ctx']['stroke'](), this['ctx']['beginPath'](), this['ctx']['arc'](_0x5d2c63, _0x10a0bf, _0x28fbb9 - _0x494b7f, 0x0, Math['PI'] * 0x2, ![]), this['ctx']['stroke'](), _0x28fbb9;
}, this['drawTitle'] = function (_0x586250) {
    this['ctx']['globalAlpha'] = 0x1, this['ctx']['fillStyle'] = '#FFFFFF', this['ctx']['font'] = '30px Arial';
    var _0xcd6516 = this['getTitle'](),
        _0xad012d = (_0x586250 + 0x50) * _0x32b8d4,
        _0x1f3d16 = this['interfaceCanvas']['width'] / 0x2 - this['ctx']['measureText'](_0xcd6516)['width'] / 0x2;
    if (this['animalType'] != _0x5b6f26) _0xad012d -= 0x14 * _0x32b8d4;
    this['ctx']['fillText'](_0xcd6516, _0x1f3d16, _0xad012d);
}, this['display'] = function () {
    if (this['interfaceCanvas'] == null) return;
    if (this['interfaceShowT'] == 0x0) this['interfaceShowT'] = _0x740c5b;
    var _0x52afd1 = 0x37,
        _0x1584de = 0x5,
        _0x1a686e = 0x0,
        _0x4c0546 = this['getInterfaceSize'](),
        _0x1ead87 = 0x82 * _0x32b8d4 + 0x6 * (_0x4c0546 + 0xa * _0x32b8d4),
        _0x2e4e3e = _0x1ead87 * 1.3;
    _0x52afd1 = _0x2e4e3e + _0x1584de * 0x2, this['interfaceCanvas']['width'] = _0x1ead87 + _0x1584de * 0x2, this['interfaceCanvas']['height'] = _0x52afd1;
    var _0x2a35ce = 0xc8;
    this['interfaceCanvas_pos'] = _0x2a35ce, this['ctx']['globalAlpha'] = 0.1, this['ctx']['fillStyle'] = '#000000';
    if (this['interfaceType'] != 0x1) this['ctx']['fillRect'](0x0, 0x0, this['interfaceCanvas']['width'], this['interfaceCanvas']['height']);
    this['drawTitle'](_0x1584de), _0x2a35ce = 0x64;
    var _0x249334 = 0x168 / this['rows'],
        _0x3e1158 = this['interfaceCanvas']['width'] / 0x2,
        _0x2ea234 = this['interfaceCanvas']['height'] / 0x2;
    this['ctx']['save']();
    var _0x3dfa97 = 3.1,
        _0x2cec70 = _0x4c0546 * _0x3dfa97,
        _0x3ef222 = Math['PI'] * 0x2 / this['rows'],
        _0x4b5e80 = 0x0,
        _0x14b528 = (_0x740c5b - this['interfaceShowT']) / 0x3e8,
        _0xe55003 = 0x2,
        _0x482926 = 0x8;
    _0x4b5e80 = _0x482926 * Math['sin'](0x2 * Math['PI'] / _0xe55003 * _0x14b528);
    if (this['interfaceType'] == 0x1) this['bdInterface'](_0x3e1158, _0x2ea234, _0x4c0546);
    for (r = 0x0; r < this['rows']; r++) {
        var _0x153f41 = _0x2ea234 + Math['sin'](_0x249334 * r * (Math['PI'] / 0xb4) - _0x2bcbaa(0xb4)) * _0x2cec70,
            _0x2f5b41 = _0x3e1158 + Math['cos'](_0x249334 * r * (Math['PI'] / 0xb4) - _0x2bcbaa(0xb4)) * _0x2cec70,
            _0x393e51 = (r - 0x1) * _0x3ef222 - _0x2bcbaa(0xb4),
            _0xb9db4b = _0x393e51 + _0x3ef222;
        if (this['interfaceType'] == 0x1) {
            ani = this['data']['anis'][r];
            var _0x452fe8 = this['getSkinForAniKills'](ani),
                _0x2e92fb = _0x3c55ea[_0x2fc9ba]['getSkinImageObj'](_0x452fe8);
            if (_0x2e92fb) {
                var _0xdfa401 = this['data'][ani] > 0x0;
                this['ctx']['save'](), this['ctx']['globalAlpha'] = _0xdfa401 ? 0x1 : 0.3;
                var _0x221cd7 = _0x4c0546;
                _0xdfa401 && (this['ctx']['shadowOffsetX'] = 0x0, this['ctx']['shadowOffsetY'] = 0x0, this['ctx']['shadowColor'] = 'black', this['ctx']['shadowBlur'] = 0x8, _0x221cd7 -= _0x4b5e80), this['ctx']['drawImage'](_0x2e92fb, _0x2f5b41 - _0x221cd7 / 0x2, _0x153f41 - _0x221cd7 / 0x2, _0x221cd7, _0x221cd7), this['ctx']['restore']();
            } else {}
        } else this['showInterfaceButton'](_0x3e1158, _0x2ea234, this['data'][r], _0x2f5b41, _0x153f41);
    }
    this['ctx']['restore']();
    if (this['interfaceCanvas'] != null) {
        if (this['interfaceCanvas']['width']) {
            var _0x3980f2 = (_0x740c5b - this['interfaceShowT']) / 0x258,
                _0x48effb = (this['expiresT'] - _0x740c5b) / 0x258;
            if (_0x48effb < 0x1) _0x3980f2 = Math['max'](0x0, _0x48effb);
            var _0x8a9a7e = Math['min'](0x1, _0x3980f2),
                _0xae49a3 = this['interfaceCanvas']['width'] * _0x8a9a7e,
                _0x3a9ea1 = this['interfaceCanvas']['height'] * _0x8a9a7e;
            _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = _0x8a9a7e, this['interfaceCanvas']['screenX'] = _0x1bcf68 / 0x2 - _0xae49a3 / 0x2, this['interfaceCanvas']['screenY'] = _0x157802 / 0x2 - _0x3a9ea1 / 0x2, this['updateButtons'](), _0x1d2dab['drawImage'](this['interfaceCanvas'], _0x1bcf68 / 0x2 - _0xae49a3 / 0x2, _0x157802 / 0x2 - _0x3a9ea1 / 0x2, _0xae49a3, _0x3a9ea1), _0x1d2dab['restore'](), (_0x740c5b > this['expiresT'] || !_0x3c6c95) && _0x221b08['destroy']();
        }
    }
}, this['destroy'] = function () {
    if (this['customButtons'] != null && this['customButtons']['length'] > 0x0)
        for (i = 0x0; i < this['customButtons']['length']; i++) {
            this['customButtons'][i]['isVisible'] = ![];
        }
    this['interfaceCanvas'] = null, this['ctx'] = null, _0x221b08 = null, console['log']('custom interface canvas destroyed!');
}, this['updateButtons'] = function () {
    var _0x188ae7 = this['interfaceCanvas']['width'],
        _0x40b876 = this['interfaceCanvas']['height'],
        _0xce9c84 = _0x1bcf68 / 0x2 - _0x188ae7 / 0x2,
        _0x1543c3 = _0x157802 / 0x2 - _0x40b876 / 0x2;
    if (this['customButtons'] != null && this['customButtons']['length'] > 0x0)
        for (i = 0x0; i < this['customButtons']['length']; i++) {
            this['customButtons'][i]['screenX'] = _0xce9c84, this['customButtons'][i]['screenY'] = _0x1543c3;
        }
}, this['drawAngularInterface'] = function (_0xa9ff1c, _0x548e00, _0x394f40, _0x4c5b5a, _0x59f22f, _0x2f9d52) {
    this['ctx']['save'](), this['ctx']['globalAlpha'] = 0.2, this['ctx']['lineWidth'] = _0x394f40;
    var _0x4c7c20 = Math['PI'] * 0x2 / this['rows'],
        _0x3a951d = _0x2bcbaa(-0x5a),
        _0x3948a0 = ['red', 'green', 'blue', 'purple'];
    for (r = 0x1; r <= this['rows']; r++) {
        this['ctx']['beginPath']();
        if (this['interfaceType'] == 0x1) this['ctx']['strokeStyle'] = 'black';
        else this['ctx']['strokeStyle'] = _0x3948a0[r - 0x1];
        this['ctx']['arc'](_0xa9ff1c, _0x548e00, _0x59f22f - _0x4c5b5a * _0x2f9d52, _0x3a951d, _0x3a951d + _0x4c7c20), this['ctx']['stroke'](), _0x3a951d += _0x4c7c20;
    }
    this['ctx']['restore']();
}, this['getSkinForAniKills'] = function (_0x51cc35) {
    switch (_0x51cc35) {
    case _0x5b6f26:
        return './skins/volcano/blackdragon/0/blackdragon.png';
    case _0x31a0ba:
        return './skins/land/dinomonster/0/dinomonster.png';
    case _0x40da91:
        return './skins/arctic/icemonster/0/icemonster.png';
    case _0x9ca027:
        return './skins/volcano/landmonster/0/landmonster.png';
    case _0x380133:
        return './skins/ocean/seamonster/0/seamonster.png';
    case _0x16390e:
        return './skins/desert/scorpion/0/giantscorpion.png';
    case _0x55a926:
        return './skins/arctic/yeti/0/yeti.png';
    case _0x20f46e:
        return './skins/land/dragon/0/dragon.png';
    case _0x47ccac:
        return './skins/land/trex/0/trex.png';
    case _0x526523:
        return './skins/ocean/kraken/0/kraken.png';
    case _0x2350ea:
        return './skins/ocean/kingcrab/0/kingcrab.png';
    case _0x19e418:
        return './skins/volcano/phoenix/0/phoenix.png';
    case _0x36b345:
        return './skins/desert/pterodactyl/0/pterodactyl_ability.png';
    }
}, this['updateExpiry'] = function () {
    var _0x1d0a2d = (this['expiresT'] - _0x740c5b) / 0x3e8;
    if (_0x1d0a2d < this['maxDur'] - 0x1 && _0x1d0a2d > 0x1) this['expiresT'] = _0x740c5b + 0x3e8;
}, this['getBtnTitle'] = function (_0x25ac28) {
    switch (_0x25ac28) {
    case _0x2f96ef:
        return 'Fly High';
    case _0x11dc57:
        return 'Gives Gifts';
    case _0x5eee86:
        return 'Flying Sleigh';
    default:
        return 'Close';
    }
}, this['buttons'] = {}, this['sendSelection'] = function (_0x2ea533) {
    if (this['customButtons'] != null && this['customButtons']['length'] > 0x0)
        for (i = 0x0; i < this['customButtons']['length']; i++) {
            this['customButtons'][i]['resetSelection']();
        }
    _0x2ea533['setSelection']();
    var _0x87ef04 = new _0x5768c5(0x3);
    _0x87ef04['writeUInt8'](_0x190a69), _0x87ef04['writeUInt8'](this['interfaceType']), _0x87ef04['writeUInt8'](_0x2ea533['buttonID']), _0x485a35(_0x87ef04);
}, this['showInterfaceButton'] = function (_0x5ea778, _0x2c73a6, _0x93f2e7, _0x5d18d3, _0x687a88) {
    var _0x2efeeb = this['buttons'][_0x93f2e7];
    if (_0x2efeeb === undefined || _0x2efeeb == null) {
        var _0xf5951b = this['getBtnTitle'](_0x93f2e7),
            _0x3da317 = _0x93f2e7 == 0x0 ? {
                'w': 0x64,
                'h': 0x3c
            } : {
                'w': 0x64,
                'h': 0x64
            };
        _0x2efeeb = this['buttons'][_0x93f2e7] = new _0x45d95f(_0x5d18d3, _0x687a88, _0x3da317['w'], _0x3da317['h'], _0xf5951b, 0x1e, this['ctx']), _0x2efeeb['buttonID'] = _0x93f2e7, _0x2efeeb['selected'] = ![], _0x2efeeb['isVisible'] = !![], _0x2efeeb['textShadow'] = !![], _0x2efeeb['screenX'] = 0x0, _0x2efeeb['screenY'] = 0x0, _0x93f2e7 != 0x0 && (_0x2efeeb['drawButtonRect'] = ![], _0x2efeeb['showLabeleOnHover'] = !![]), _0x2efeeb['testPosHitsButton'] = function (_0x269dbc, _0x4b51e9) {
            var _0x7d6eca = this['screenX'] + this['x'],
                _0x3fdcab = _0x7d6eca + this['w'],
                _0xc57da8 = this['screenY'] + this['y'],
                _0x188e7c = _0xc57da8 + this['h'];
            if (_0x269dbc < _0x7d6eca || _0x269dbc > _0x3fdcab) return ![];
            if (_0x4b51e9 < _0xc57da8 || _0x4b51e9 > _0x188e7c) return ![];
            else return !![];
        }, _0x2efeeb['onClick'] = function () {
            console['log']('clicked: ' + this['label']);
            !this['clicked'] && (this['clicked'] = !![], this['isHighLighted'] = ![]);
            if (this['label'] == 'Close') _0x221b08['destroy']();
            else _0x221b08['sendSelection'](this);
        }, _0x2efeeb['setSelection'] = function () {
            this['labelColor'] = 'yellow', this['selected'] = !![];
        }, _0x2efeeb['resetSelection'] = function () {
            this['labelColor'] = 'white', this['selected'] = ![];
        }, _0x2efeeb['beforeDrawText'] = function () {
            var _0x2ea69e = this['w'] / 0x2,
                _0x11aaf6 = this['h'] / 0x2;
            this['buttonTXT']['x'] = this['screenX'] + this['x'] + _0x2ea69e;
            if (this['buttonID'] == 0x0) this['buttonTXT']['y'] = this['screenY'] + this['y'] + _0x11aaf6;
            else this['buttonTXT']['y'] = this['screenY'] + this['y'] - _0x11aaf6 / 0x2;
        }, _0x2efeeb['onMouseMove'] = function () {}, _0x2efeeb['update'] = function () {
            this['x'] = _0x5d18d3 - this['w'] / 0x2, this['y'] = _0x687a88 - this['h'] / 0x2;
        }, _0x2efeeb['onInterfaceReset'] = function () {
            this['isVisible'] = ![];
        }, _0x2efeeb['onAfterDraw'] = function () {
            var _0x27f20e = _0x3c55ea[_0x2fc9ba];
            if (_0x27f20e) {
                var _0x547f4e = _0x27f20e['getAbilityInfo'](this['buttonID']);
                if (_0x547f4e) {
                    var _0x16d1b9 = 'assets/s/' + _0x547f4e['mopeSeasonID'] + '/' + _0x547f4e['abilImg'],
                        _0x1f2f7c = _0x5ace1d(_0x16d1b9);
                    if (_0x1f2f7c) {
                        _0x1d2dab['save']();
                        (this['isHighLighted'] || this['selected']) && (_0x1d2dab['shadowBlur'] = 0xa, _0x1d2dab['shadowOffsetX'] = 0x0, _0x1d2dab['shadowOffsetY'] = 0x0, _0x1d2dab['shadowColor'] = 'yellow');
                        var _0x464fbb = this['w'] / 0x2,
                            _0x1972a6 = this['h'] / 0x2;
                        _0x464fbb = this['screenX'] + this['x'], _0x1972a6 = this['screenY'] + this['y'];
                        var _0x34e02f = this['w'];
                        _0x1d2dab['drawImage'](_0x1f2f7c, _0x464fbb, _0x1972a6, _0x34e02f, _0x34e02f), _0x1d2dab['restore']();
                    }
                }
            }
        }, _0xefeaf8['interfaceButtons']['push'](_0x2efeeb), this['customButtons']['push'](_0x2efeeb), this['data']['selected'] == _0x2efeeb['buttonID'] && _0x2efeeb['setSelection']();
    } else {
        if (_0x2efeeb != null) {
            if (_0x2efeeb['isVisible']) _0x2efeeb['clicked'] = ![];
            _0x2efeeb['draw']();
        }
    }
};
}
var _0x533d6c = ![];

function _0x40e1f7() {
$['ajax']({
    'url': 'https://mope-masterserver-do.mope.io/serverPlayerCounts',
    'type': 'GET',
    'success': function (_0x3805d6) {
        var _0x3fb370 = JSON['parse'](_0x3805d6);
        _0x533d6c = !![];
        var _0x5b8612 = _0x3fb370['totalPlayersOnline'];
        console['log']('MasterServer: ' + _0x5b8612 + ' total players online!'), _0x4ea12d['setText'](_0x5f03df(_0x5b8612) + ' online');
        for (var _0x1d51af = 0x0; _0x1d51af < _0x389e91['length']; _0x1d51af++) {
            var _0x1bfc29 = _0x389e91[_0x1d51af],
                _0x13b5ee = ![];
            for (var _0x3a4a82 = 0x0; _0x3a4a82 < _0x3fb370['servers']['length']; _0x3a4a82++) {
                var _0x43816e = _0x3fb370['servers'][_0x3a4a82];
                if (_0x43816e['name'] == _0x1bfc29['ip'] && !_0x43816e['ofl']) {
                    _0x1bfc29['playersCount'] = _0x43816e['pl'], _0x13b5ee = !![];
                    break;
                }
            }!_0x13b5ee && (_0x1bfc29['playersCount'] = -0x1);
        }
        $bus['emit']($bus['EVENTS']['SET_SERVER_LIST'], [..._0x389e91]);
    },
    'error': function (_0x26159f, _0xfa7a0c, _0x2bd882) {
        console['log']('Error getting master server stats: ' + _0x2bd882);
    }
});
}
_0x40e1f7(), console['log']('ACCOUNT SERVER START');
let _0x357b3f = 'https://mope-accountserver-do.mope.io',
_0x379e56 = ![];
const _0x3ff1e5 = _0x285caa && $config['useDevAccountServer'] ? $config['devAccountServerUrl'] : _0x357b3f;
console['log']('Account server domain became:', _0x3ff1e5);
const _0x117b80 = async function (_0x1af510, _0x598d2e, _0x48f0e6 = null, _0x17c934 = null) {
let _0x2cf945 = _0x3ff1e5 + '/processLogin',
    _0x485dae = {
        'userId': _0x48f0e6,
        'passwordToken': _0x17c934,
        'sessionId': _0x3eeb91['serverInfo']['sessionId'],
        'serverId': _0x3eeb91['serverInfo']['serverId'],
        'accessToken': _0x1af510,
        'socialNetwork': _0x598d2e
    };
try {
    const _0x1c51fd = await fetch(_0x2cf945, {
            'method': 'POST',
            'headers': {
                'Content-Type': 'application/json'
            },
            'body': JSON['stringify'](_0x485dae)
        }),
        _0x3e9ae3 = await _0x1c51fd['json']();
    return _0x3e9ae3['success'] ? (_0x5a1047(_0x3e9ae3), _0x1e3dff(_0x3e9ae3['login_userId'], _0x3e9ae3['login_passwordToken'], _0x3e9ae3['login_name'], _0x3e9ae3['login_profilePicURL'], _0x598d2e), !![]) : ($bus['emit']($bus['EVENTS']['LOGIN_FAILED'], 'error with verifying social network token.'), ![]);
} catch (_0x7a3993) {
    return $bus['emit']($bus['EVENTS']['LOGIN_FAILED'], thrownError), console['error']('::: Social Network Login ERROR :::', _0x7a3993), ![];
}
};
var _0x5dcedd, _0x268546, _0x5bc39c, _0x1d657d, _0x31a1dd, _0x56fe31;
_0xa67a42 && (console['log']('Checking what login_userId was:', _0x5dcedd), _0x5dcedd = localStorage['getItem']('login_userId'), _0x56fe31 = _0x5dcedd !== undefined && _0x5dcedd !== null, _0x56fe31 && (console['log']('WAS LOGGED IN!'), _0x268546 = localStorage['getItem']('login_passwordToken'), _0x5bc39c = localStorage['getItem']('login_profilePicURL'), _0x1d657d = localStorage['getItem']('login_name'), _0x31a1dd = localStorage['getItem']('login_socialNetworkName')));
_0x56fe31 && $bus['emit']($bus['EVENTS']['LOGIN_SUCCESS'], {
'login_userId': _0x5dcedd,
'login_passwordToken': _0x268546,
'login_name': _0x1d657d,
'profilePicUrl': _0x5bc39c,
'socialNetworkName': _0x31a1dd
});
if (_0x285caa) {
var _0x463767 = document['getElementById']('login_SBLabel');
_0x463767 && (_0x463767['style']['display'] = 'block');
}
jQuery['loadScript'] = function (_0x27f5bf, _0x65d0ce) {
    jQuery['ajax']({
        'url': _0x27f5bf,
        'dataType': 'script',
        'success': _0x65d0ce,
        'async': !![]
    });
}, window['fbAsyncInit'] = function () {
    FB['init']({
        'appId': '342869592997869',
        'cookie': !![],
        'xfbml': !![],
        'version': 'v3.2',
        'status': !![]
    }), FB['AppEvents']['logPageView']();
},
function (_0x1840eb, _0x3509eb, _0x1d693e) {
    var _0x53503a, _0x1a6824 = _0x1840eb['getElementsByTagName'](_0x3509eb)[0x0];
    if (_0x1840eb['getElementById'](_0x1d693e)) return;
    _0x53503a = _0x1840eb['createElement'](_0x3509eb), _0x53503a['id'] = _0x1d693e, _0x53503a['crossorigin'] = 'anonymous', _0x53503a['src'] = 'https://connect.facebook.net/en_US/sdk.js', _0x1a6824['parentNode']['insertBefore'](_0x53503a, _0x1a6824);
}(document, 'script', 'facebook-jssdk');

function _0x7e23b1() {
gapi['load']('auth2', async function () {
    try {
        auth2 = auth2 || gapi['auth2']['init']({
            'client_id': '836408408160-bqkloin1dq47r9t4t6q1giv13tvcioab.apps.googleusercontent.com',
            'cookiepolicy': 'single_host_origin'
        });
        const _0x48829e = await auth2['signIn'](),
            _0x3dbae4 = _0x48829e['getAuthResponse']()['id_token'];
        console['log']('Google signed in ()! ID token (send to server) is ' + _0x3dbae4), _0x117b80(_0x3dbae4, 'google');
    } catch (_0x3329d6) {
        $bus['emit']($bus['EVENTS']['FINISH_SOCIAL_AUTHENTICATION'], {
            'error': 'Error logging in to Google: ' + _0x3329d6['message']
        });
    }
});
}
if (_0xb29884) _0x1ea6b0(), _0x1e13a4(), _0x57e0c8()['then'](_0x154363 => {
_0x154363['registerHandler']('finished-authentication-restore-check', () => {
    $bus['emit']($bus['EVENTS']['FINISH_AUTHENTICATION_RESTORE_CHECK']);
});
});
else {}
const _0x1f03ba = async () => {
if (_0x56fe31) {
    const _0xa8f4d9 = await _0x230417();
    !_0xa8f4d9 && ($bus['emit']($bus['EVENTS']['FINISH_AUTHENTICATION_RESTORE_CHECK']), _0x2cc798());
} else {
    var _0x2b2469 = 'none',
        _0xc4c4e2 = new URL(window['location']['href']),
        _0x2c5143 = _0xc4c4e2['searchParams']['get']('testAccountSecret');
    if (_0x2c5143) {
        _0x2b2469 = _0x2c5143;
        let _0x5abcf3 = '' + _0xc4c4e2['searchParams']['get']('user');
        !_0x335250(_0x2b2469 + _0x5abcf3) && (_0x5abcf3 && _0x5abcf3['length'] <= 0x2 && _0x117b80(_0x5abcf3, _0x2b2469, _0x2b2469 + _0x5abcf3, null));
    } else $bus['emit']($bus['EVENTS']['FINISH_AUTHENTICATION_RESTORE_CHECK']);
}
};
setTimeout(() => {
$bus['emit']($bus['EVENTS']['FINISH_AUTHENTICATION_RESTORE_CHECK']);
}, 0x7530), $bus['on']($bus['EVENTS']['START_SOCIAL_AUTHENTICATION'], async _0x347092 => {
console['log']('got start social auth', _0x347092);
try {
    switch (_0x347092) {
    case 'apple':
        _0x48fcb5();
        break;
    case 'facebook':
        _0xa50439();
        break;
    case 'google':
        _0x7e23b1();
        break;
    }
} catch (_0x2228e9) {
    $bus['emit']($bus['EVENTS']['FINISH_SOCIAL_AUTHENTICATION'], {
        'error': _0x2228e9['message']
    });
}
}), $bus['on']($bus['EVENTS']['UI_TEST_BUTTON_CLICKED_USE_TEST_ACCOUNT'], _0x374dfc => {
console['log']('account: ' + _0x374dfc), _0x117b80('\"' + _0x374dfc + '\"', _0x22c6f3);
}), $bus['on']($bus['EVENTS']['UI_TEST_BUTTON_CLICKED_ADD_COINS'], _0x5cbff7), $bus['on']($bus['EVENTS']['UI_TEST_BUTTON_CLICKED_RESET_PURCHASES'], _0x1a420c), $bus['on']($bus['EVENTS']['UI_PRESS_LOGOUT'], _0x238e27);
var _0x22c6f3 = 'none',
_0x192c57 = new URL(window['location']['href']),
_0x4a6c96 = _0x192c57['searchParams']['get']('testAccountSecret');
_0x4a6c96 && (console['log']('testing account enabled.'), _0x22c6f3 = _0x4a6c96, $bus['emit']($bus['EVENTS']['ENABLE_TESTING']));

function _0x2cc798() {
_0xa67a42 && (localStorage['removeItem']('login_userId'), localStorage['removeItem']('login_passwordToken'), localStorage['removeItem']('login_profilePicURL'), localStorage['removeItem']('login_name'), localStorage['removeItem']('login_socialNetworkName')), _0x5dcedd = null, _0x268546 = null, _0x5bc39c = null, _0x1d657d = null, _0x31a1dd = null, _0x56fe31 = ![], $bus['emit']($bus['EVENTS']['LOGOUT_COMPLETE']);
}
async function _0x238e27(_0x45b708 = !![]) {
_0xb29884 && (_0x45b708 = ![]);
let _0x4d8603 = () => {};
if (_0x31a1dd === 'google') _0x4d8603 = _0x57ae2d;
else {
    if (_0x31a1dd === 'facebook') _0x4d8603 = _0x45bb33;
    else _0x31a1dd === 'apple' && (_0x4d8603 = _0x273fc9);
}
console['log']('logging out with social network ' + _0x31a1dd);
try {
    await _0x4d8603(), await _0x2af8db(_0x5dcedd), _0x2cc798();
} catch (_0x48463e) {
    console['error']('Error logging out:', _0x48463e);
}
}
const _0x2af8db = async _0x11bdcf => {
let _0x431743 = _0x3ff1e5 + '/logout',
    _0x59557c = {
        'userId': _0x11bdcf,
        'sessionId': _0x3eeb91['serverInfo']['sessionId'],
        'serverId': _0x3eeb91['serverInfo']['serverId']
    };
try {
    await fetch(_0x431743, {
        'method': 'POST',
        'headers': {
            'Content-Type': 'application/json'
        },
        'body': JSON['stringify'](_0x59557c)
    });
} catch (_0x55ac55) {
    return $bus['emit']($bus['EVENTS']['LOGOUT_FAILED'], thrownError), console['error']('::: Account Server Logout ERROR :::', _0x55ac55), ![];
}
return !![];
}, _0x5a1047 = _0x4aff97 => {
_0x462db4 = _0x4aff97, $bus['emit']($bus['EVENTS']['PLAYER_ACCOUNT_DATA'], _0x4aff97);
}, _0x230417 = async () => {
if (!_0x56fe31) {
    console['error']('::: verifyLocalCredentials ERROR ::: User is not logged in!');
    return;
}
const _0x1e7a03 = _0x3ff1e5 + '/processLogin',
    _0x2c73de = {
        'userId': _0x5dcedd,
        'passwordToken': _0x268546,
        'sessionId': _0x3eeb91['serverInfo']['sessionId'],
        'serverId': _0x3eeb91['serverInfo']['serverId'],
        'accessToken': null,
        'socialNetwork': null
    };
try {
    const _0x4c84d3 = await fetch(_0x1e7a03, {
            'method': 'POST',
            'headers': {
                'Content-Type': 'application/json;charset=UTF-8'
            },
            'body': JSON['stringify'](_0x2c73de)
        }),
        _0x40f8e2 = await _0x4c84d3['json']();
    return _0x40f8e2['success'] ? (_0x5a1047(_0x40f8e2), !![]) : (_0x238e27(), console['log']('::: verifyLocalCredentials failed ::: Needs new credentials'), ![]);
} catch (_0x2e3023) {
    return console['error']('::: verifyLocalCredentials ERROR :::', _0x2e3023), ![];
}
};
var _0x462db4 = {
'coins': -0x1,
'level': 0x0,
'xp': 0x0,
'xpNextLvl': 0x0
};
const _0x451390 = async function () {
if (!_0x56fe31) return console['log']('not logged in!'), null;
console['log']('loading account data...');
let _0x278c21 = _0x3ff1e5 + '/loadAccountData?userId=' + _0x5dcedd + '&passwordToken=' + _0x268546 + '&sessionId=' + _0x3eeb91['serverInfo']['sessionId'] + '&serverId=' + _0x3eeb91['serverInfo']['serverId'];
return new Promise((_0x17ec6a, _0x2d8122) => {
    $['ajax']({
        'url': _0x278c21,
        'type': 'GET',
        'success': function (_0x3d5244) {
            var _0x449415 = JSON['parse'](_0x3d5244);
            return console['log']('Done, result is ' + _0x3d5244), _0x462db4 = _0x449415, console['log']('the resObj coins was', _0x449415['coins']), _0x449415['coins'] == 'BANNED' && setInterval(function () {
                _0x13b3b1('Your account has been BANNED!', 'error', 0x2710);
            }, 0x2710), $bus['emit']($bus['EVENTS']['PLAYER_ACCOUNT_DATA'], _0x449415), _0x17ec6a(_0x449415);
        },
        'error': function (_0x3d9c90, _0x2d93a8, _0x5414b3) {
            return console['error']('URL error: ' + _0x5414b3), console['error']('failed to refresh account data!'), _0x17ec6a(null);
        }
    });
});
}, _0xb6ad3e = async function (_0x226b72) {
const _0x30ffaf = await _0x451390();
_0x226b72 && _0x226b72(_0x30ffaf);
};

function _0x572ec5(_0x40ae08) {
console['log']('Loading shop items for logged in user! ' + _0x5dcedd);
let _0xeba6e7 = _0x3ff1e5 + '/loadShopItems?userId=' + _0x5dcedd + '&passwordToken=' + _0x268546;
console['log']('@@@@@@@ Sending URL request :' + _0xeba6e7), $['ajax']({
    'url': _0xeba6e7,
    'success': function (_0x18a5f3) {
        var _0x56de41 = JSON['parse'](_0x18a5f3);
        _0x40ae08(!![], _0x56de41);
    },
    'error': function (_0x3315fa, _0x165f32, _0x4531e3) {
        console['log']('Shop loading-URL error: ' + _0x4531e3), _0x40ae08(![], null);
    }
});
}
const _0x2bc641 = function (_0x1dda27, _0x100685) {
if (_0x285caa) console['log']('Sending URL request to load coins for logged in user! ' + _0x5dcedd);
if (!_0x1dda27) _0x1dda27 = 'goldDragon';
let _0x1490be = _0x3ff1e5 + '/buyShopItem?userId=' + _0x5dcedd + '&passwordToken=' + _0x268546 + '&itemName=' + _0x1dda27 + '&sessionId=' + _0x3eeb91['serverInfo']['sessionId'] + '&serverId=' + _0x3eeb91['serverInfo']['serverId'];
if (_0x285caa) console['log']('Sending URL request :' + _0x1490be);
$['ajax']({
    'url': _0x1490be,
    'success': function (_0x38e1e5) {
        var _0x532dbd = JSON['parse'](_0x38e1e5);
        _0x100685(_0x532dbd['success'], _0x532dbd['reason']);
    },
    'error': function (_0x5b86eb, _0x32d265, _0x198fd8) {
        console['log']('URL error: ' + _0x198fd8), _0x100685(![], _0x198fd8);
    }
});
};

function _0x5cbff7() {
let _0x5e6e2d = _0x3ff1e5 + '/addCoins?userId=' + _0x5dcedd + '&passwordToken=' + _0x268546;
if (_0x285caa) console['log']('Sending URL request :' + _0x5e6e2d);
$['ajax']({
    'url': _0x5e6e2d,
    'success': function (_0x249961) {
        if (_0x285caa) _0xb6ad3e();
    },
    'error': function (_0x221766, _0x20e7b9, _0x50b994) {
        console['log']('URL error: ' + _0x50b994);
    }
});
}

function _0x1a420c() {
let _0x4a7487 = _0x3ff1e5 + '/resetAccount?userId=' + _0x5dcedd + '&passwordToken=' + _0x268546;
if (_0x285caa) console['log']('Sending URL request :' + _0x4a7487);
$['ajax']({
    'url': _0x4a7487,
    'success': function (_0x42ff47) {
        console['log']('reposnse is ' + _0x42ff47), _0xb6ad3e();
    },
    'error': function (_0x309a7c, _0x1e57e2, _0x101ad6) {
        console['log']('URL error: ' + _0x101ad6);
    }
});
}
const _0x1e3dff = function (_0x3a20bb, _0x53453d, _0x261a75, _0x39cee5, _0x192e0c) {
    console['log']('SUCCESSFUL LOGIN!!!', JSON['stringify']({
        'login_userId': _0x5dcedd,
        'login_passwordToken': _0x268546,
        'login_name': _0x1d657d,
        'profilePicUrl': _0x5bc39c,
        'socialNetworkName': _0x31a1dd
    })), _0x5dcedd = _0x3a20bb, _0x268546 = _0x53453d, _0x5bc39c = _0x39cee5, _0x1d657d = _0x261a75, _0x31a1dd = _0x192e0c, _0x56fe31 = !![], _0xa67a42 && (console['log']('Logged in, for login_userId ' + _0x5dcedd + ' login_passwordToken ' + _0x268546), localStorage['setItem']('login_userId', _0x5dcedd), localStorage['setItem']('login_passwordToken', _0x268546), localStorage['setItem']('login_name', _0x1d657d), localStorage['setItem']('login_profilePicURL', _0x5bc39c), localStorage['setItem']('login_socialNetworkName', _0x31a1dd)), _0x1f4449['loadData'](), $bus['emit']($bus['EVENTS']['LOGIN_SUCCESS'], {
        'login_userId': _0x5dcedd,
        'login_passwordToken': _0x268546,
        'login_name': _0x1d657d,
        'profilePicUrl': _0x5bc39c,
        'socialNetworkName': _0x31a1dd
    });
},
_0x5e8551 = function (_0x2d9184, _0x120304) {
    if (_0x285caa) console['log']('Sending URL request to load coins for logged in user! ' + _0x5dcedd);
    if (!_0x2d9184) _0x2d9184 = 'none';
    let _0x1fcbc1 = _0x3ff1e5 + '/playerSettings_update?userId=' + _0x5dcedd + '&passwordToken=' + _0x268546 + '&itemName=' + _0x2d9184;
    if (_0x285caa) console['log']('Sending URL request :' + _0x1fcbc1);
    console['log'](_0x1fcbc1), $['ajax']({
        'url': _0x1fcbc1,
        'success': function (_0x52483a) {
            var _0x1e0992 = JSON['parse'](_0x52483a);
            console['log']('Done, result is ' + _0x52483a), _0x120304(_0x1e0992['success'], _0x1e0992['reason']);
        },
        'error': function (_0x161fae, _0x65d623, _0x42f7d9) {
            console['log'](_0x161fae), console['log']('ajaxOptions: ' + _0x65d623), console['log']('URL error: ' + _0x42f7d9), _0x120304(![], 'urlnotfound');
        }
    });
},
_0x335250 = function (_0x4bb345) {
    if (_0x56fe31) {
        if (_0x5dcedd === _0x4bb345) return !![];
    }
    return ![];
},
_0x2e040e = async () => {
    const _0x54e535 = _0x3ff1e5 + '/getIncentivizedAdSkins',
        _0x2770c7 = {
            'userId': _0x5dcedd,
            'passwordToken': _0x268546,
            'sessionId': _0x3eeb91['serverInfo']['sessionId'],
            'serverId': _0x3eeb91['serverInfo']['serverId']
        };
    try {
        const _0x6dbc71 = await fetch(_0x54e535, {
                'method': 'POST',
                'headers': {
                    'Content-Type': 'application/json;charset=UTF-8'
                },
                'body': JSON['stringify'](_0x2770c7)
            }),
            _0x5bbdbc = await _0x6dbc71['json']();
        return console['log'](_0x5bbdbc), _0x5bbdbc['success'] ? (console['log']('success'), !![]) : (console['log']('::: getIncentivizedAdSkins failed ::: Needs new credentials'), ![]);
    } catch (_0xe91031) {
        return console['error']('::: getIncentivizedAdSkins ERROR :::', _0xe91031), ![];
    }
};
$['loadScript']('https://apis.google.com/js/api:client.js', function () {
var _0x1fc5ff = function () {
    if (typeof gapi === 'undefined') return;
    gapi['load']('auth2', function () {
        auth2 = gapi['auth2']['init']({
            'client_id': '836408408160-bqkloin1dq47r9t4t6q1giv13tvcioab.apps.googleusercontent.com',
            'cookiepolicy': 'single_host_origin'
        });
    });
};
_0x1fc5ff();
});
async function _0x1ea6b0() {
const _0x38097a = await _0x57e0c8();
if (!_0x38097a) {
    console['error']('Could not get an initialized nativeBridge...');
    return;
}
_0x38097a['registerHandler']('google-login-failed', () => {}), _0x38097a['registerHandler']('google-login-success', _0x33074e => {
    _0x56e86f(_0x33074e);
}), _0x38097a['registerHandler']('google-logout-success', () => {
    _0x31a1dd === 'google' && _0x2cc798();
});
}
async function _0x56e86f(_0x41496f) {
const _0x12b133 = await _0x117b80(_0x41496f, 'google');
!_0x12b133 && await _0x2a0e77()();
}
async function _0x7e23b1() {
const _0x408840 = _0x240585();
try {
    const _0x533768 = await _0x408840();
    await _0x56e86f(_0x533768);
} catch (_0x6e56ce) {
    console['error']('Error with google login:', _0x6e56ce['message']), $bus['emit']($bus['EVENTS']['FINISH_SOCIAL_AUTHENTICATION'], {
        'error': 'Error logging in to Google: ' + _0x6e56ce['message']
    });
}
};
async function _0x57ae2d() {
const _0x1ddc44 = _0x2a0e77();
try {
    return _0x1ddc44();
} catch (_0x4087ea) {
    console['error']('Error with google logout:', _0x4087ea['message']);
}
}

function _0x240585() {
return !_0xb29884 ? (console['log']('resolve web google login'), _0x51480d) : (console['log']('resolve mobile google login'), _0x5f51a9);
}

function _0x2a0e77() {
return !_0xb29884 ? _0x48422a : _0x1995e5;
}
async function _0x51480d() {
return console['log']('Doing web google login.'), new Promise((_0x39eff2, _0x1f60a5) => {
    gapi['load']('auth2', async function () {
        console['log']('loaded auth2');
        try {
            console['log']('initializing auth2'), auth2 = auth2 || gapi['auth2']['init']({
                'client_id': $config['googleAuthClientId'],
                'cookiepolicy': 'single_host_origin'
            }), console['log']('Signing in.');
            const _0x8a87bf = await auth2['signIn']();
            console['log']('Getting id token.');
            const _0x5d98de = _0x8a87bf['getAuthResponse']()['id_token'];
            return console['log']('Received id_token', _0x5d98de), _0x39eff2(_0x5d98de);
        } catch (_0x4682ac) {
            return console['error']('Error with google login:', _0x4682ac), _0x1f60a5(_0x4682ac);
        }
    });
});
}
async function _0x5f51a9() {
const _0x2031e5 = await _0x57e0c8();
if (!_0x2031e5) throw new Error('Did not have nativeBridge');
return new Promise((_0x3b5502, _0x126fdd) => {
    console['log']('Calling google-login nativeBridge handler.'), _0x2031e5['callHandler']('google-login'), _0x2031e5['registerHandler']('google-login-success', _0x4dfe25 => {
        return console['log']('Google login success!'), _0x1ea6b0(), _0x3b5502(_0x4dfe25);
    }), _0x2031e5['registerHandler']('google-login-failed', _0x288406 => {
        return console['error']('Google login from mobile device failed, error:', _0x288406), _0x1ea6b0(), _0x126fdd(_0x288406);
    });
});
}
async function _0x48422a() {
try {
    var _0x38a570 = gapi['auth2']['getAuthInstance']();
    return _0x38a570['signOut']();
} catch (_0x27dbb6) {
    console['error']('Error with web google logout:', _0x27dbb6);
}
}
async function _0x1995e5() {
const _0x204c8d = await _0x57e0c8();
if (!_0x204c8d) throw new Error('Did not have nativeBridge');
_0x204c8d['callHandler']('google-logout');
}
window['fbAsyncInit'] = function () {
    if (typeof FB === 'undefined') return;
    FB['init']({
        'appId': '342869592997869',
        'cookie': !![],
        'xfbml': !![],
        'version': 'v3.2',
        'status': !![]
    }), FB['AppEvents']['logPageView']();
},
function (_0x17d761, _0x40f266, _0x5a0097) {
    var _0x5674b3, _0x2305d5 = _0x17d761['getElementsByTagName'](_0x40f266)[0x0];
    if (_0x17d761['getElementById'](_0x5a0097)) return;
    _0x5674b3 = _0x17d761['createElement'](_0x40f266), _0x5674b3['id'] = _0x5a0097, _0x5674b3['src'] = 'https://connect.facebook.net/en_US/sdk.js', _0x2305d5['parentNode']['insertBefore'](_0x5674b3, _0x2305d5);
}(document, 'script', 'facebook-jssdk');
async function _0x1e13a4() {
const _0x2e9469 = await _0x57e0c8();
if (!_0x2e9469) {
    console['error']('Could not get an initialized nativeBridge...');
    return;
}
_0x2e9469['registerHandler']('facebook-login-failed', () => {}), _0x2e9469['registerHandler']('facebook-login-success', _0x4d18d1 => {
    _0x453f3a(_0x4d18d1);
}), _0x2e9469['registerHandler']('facebook-logout-success', () => {
    _0x31a1dd === 'facebook' && _0x2cc798();
});
}
async function _0x391dc5() {
console['log']('Calling mobileFacebookLogin');
const _0x39c02b = await _0x57e0c8();
if (!_0x39c02b) throw new Error('Did not have nativeBridge');
return new Promise((_0x5add8b, _0x2d14fc) => {
    console['log']('Calling nativeBridge facebook-login handler'), _0x39c02b['callHandler']('facebook-login'), _0x39c02b['registerHandler']('facebook-login-success', _0x3605b9 => {
        return console['log']('nativeBridge facebook-login-success called with token:', _0x3605b9), _0x1e13a4(), _0x5add8b(_0x3605b9);
    }), _0x39c02b['registerHandler']('facebook-login-failed', _0x49674e => {
        return console['error']('nativeBridge facebook-login-failed called with error:', _0x49674e), _0x1e13a4(), console['error']('Facebook login from mobile device failed, error:', _0x49674e), _0x2d14fc(_0x49674e);
    });
});
}
async function _0x453f3a(_0x55a6cd) {
const _0x22f1e8 = await _0x117b80(_0x55a6cd, 'facebook');
!_0x22f1e8 && await _0x16bfd7()();
}
async function _0xa50439() {
const _0x3c934c = _0x125419();
try {
    const _0x4ac62e = await _0x3c934c();
    await _0x453f3a(_0x4ac62e);
} catch (_0x534981) {
    console['error']('Error with facebook login:', _0x534981['message']), $bus['emit']($bus['EVENTS']['FINISH_SOCIAL_AUTHENTICATION'], {
        'error': 'Error logging in to Facebook: ' + _0x534981['message']
    });
}
};
async function _0x2737a8() {
return new Promise((_0x216fc5, _0x595b6e) => {
    FB['login'](function (_0x573f64) {
        if (_0x573f64['status'] === 'connected') {
            console['log']('Successfully got auth token from FB');
            var _0x12abf7 = _0x573f64['authResponse']['accessToken'];
            return _0x216fc5(_0x12abf7);
        } else return _0x595b6e('Error logging in to FB.');
    }, {
        'scope': 'public_profile,email'
    });
});
}

function _0x125419() {
return !_0xb29884 ? _0x2737a8 : _0x391dc5;
}

function _0x16bfd7() {
return !_0xb29884 ? _0x3b0f26 : _0x4c4cf6;
}
async function _0x45bb33() {
const _0x173bed = _0x16bfd7();
try {
    return _0x173bed();
} catch (_0x49dab3) {
    console['error']('Error with facebook logout:', _0x49dab3['message']);
}
}
async function _0x4c4cf6() {
const _0x467e6b = await _0x57e0c8();
if (!_0x467e6b) throw new Error('Did not have nativeBridge');
_0x467e6b['callHandler']('facebook-logout');
}
async function _0x3b0f26() {
return new Promise((_0x485d20, _0x5ce8e3) => {
    FB['logout'](function (_0x3352e5) {
        return _0x485d20(!![]);
    });
});
}
let _0x52a045 = ![];
const _0x94c3fe = () => typeof AppleID === 'object' && AppleID['hasOwnProperty']('auth');
!_0xde95d8 && $['loadScript']('https://appleid.cdn-apple.com/appleauth/static/jsapi/appleid/1/en_US/appleid.auth.js', function () {
if (_0x94c3fe()) {
    function _0x2d022e(_0x20f674) {
        var _0x36b3f5 = '',
            _0x413c0c = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789',
            _0x6a28d1 = _0x413c0c['length'];
        for (var _0xede7ec = 0x0; _0xede7ec < _0x20f674; _0xede7ec++) {
            _0x36b3f5 += _0x413c0c['charAt'](Math['floor'](Math['random']() * _0x6a28d1));
        }
        return _0x36b3f5;
    }
    let _0x1dfd34 = 'https://mope.io';
    if (location['href']['includes']('edge')) _0x1dfd34 = 'https://edge-webserver.mope.io';
    else location['href']['includes']('beta') && (_0x1dfd34 = 'https://beta.mope.io');
    AppleID['auth']['init']({
        'clientId': 'io.mope.live.auth',
        'scope': 'name email',
        'redirectURI': _0x1dfd34,
        'usePopup': !![],
        'state': _0x2d022e(0x7)
    }), _0x52a045 = !![];
}
});
async function _0x2b3d1c() {
const _0x3c5533 = await _0x57e0c8();
if (!_0x3c5533) {
    console['error']('Could not get an initialized nativeBridge...');
    return;
}
_0x3c5533['registerHandler']('apple-login-failed', () => {}), _0x3c5533['registerHandler']('apple-login-success', _0x2657b9 => {
    _0x2afa19(_0x2657b9);
}), _0x3c5533['registerHandler']('apple-logout-success', () => {
    _0x31a1dd === 'apple' && _0x2cc798();
});
}
async function _0x2afa19(_0x2e929f, _0x1f25a6) {
const _0x4f8ae5 = _0x1f25a6 ? {
        'name': _0x1f25a6
    } : null,
    _0x106a97 = await _0x117b80(_0x2e929f, 'apple', _0x4f8ae5);
!_0x106a97 && await _0x41f697()();
}
async function _0x48fcb5() {
const _0x25f248 = _0xd00f03();
try {
    const _0x277de5 = await _0x25f248();
    await _0x2afa19(_0x277de5);
} catch (_0x11f666) {
    console['error']('Error with apple login:', _0x11f666['message']), $bus['emit']($bus['EVENTS']['FINISH_SOCIAL_AUTHENTICATION'], {
        'error': 'Error logging in to Apple: ' + _0x11f666['message']
    });
}
};
async function _0x273fc9() {
const _0x5f77ad = _0x41f697();
try {
    return _0x5f77ad();
} catch (_0x31da41) {
    console['error']('Error with apple logout:', _0x31da41['message']);
}
}

function _0xd00f03() {
return !_0xb29884 || _0xde95d8 ? (console['log']('resolve web apple login'), _0x790ae2) : (console['log']('resolve mobile apple login'), _0xf06324);
}

function _0x41f697() {
return !_0xb29884 || _0xde95d8 ? _0x3320e6 : _0x2c62e2;
}
async function _0x790ae2() {
try {
    if (!_0x52a045) throw new Error('Failed to initialize apple auth library.');
    const _0x4c511e = await AppleID['auth']['signIn']();
    if (_0x4c511e && _0x4c511e['authorization'] && _0x4c511e['authorization']['id_token']) return console['log']('data authorization was:', _0x4c511e['authorization']), _0x4c511e['authorization']['id_token'];
    else throw new Error('Failed to get id token from apple.');
} catch (_0x27cc2b) {
    console['error']('error signing in ', _0x27cc2b);
    throw _0x27cc2b;
}
}
async function _0xf06324() {
const _0x2f303a = await _0x57e0c8();
if (!_0x2f303a) throw new Error('Did not have nativeBridge');
return new Promise((_0x298ef9, _0x506d0e) => {
    console['log']('Calling apple-login nativeBridge handler.'), _0x2f303a['callHandler']('apple-login'), _0x2f303a['registerHandler']('apple-login-success', _0x4e3c5c => {
        return console['log']('Apple login success!'), _0x2b3d1c(), _0x298ef9(_0x4e3c5c);
    }), _0x2f303a['registerHandler']('apple-login-failed', _0x22587d => {
        return console['error']('Apple login from mobile device failed, error:', _0x22587d), _0x2b3d1c(), _0x506d0e(_0x22587d);
    });
});
}
async function _0x3320e6() {
try {
    var _0x23a5fd = gapi['auth2']['getAuthInstance']();
    return _0x23a5fd['signOut']();
} catch (_0x26d221) {
    console['error']('Error with web apple logout:', _0x26d221);
}
}
async function _0x2c62e2() {
const _0x10b758 = await _0x57e0c8();
if (!_0x10b758) throw new Error('Did not have nativeBridge');
_0x10b758['callHandler']('apple-logout');
}
var _0x281df0 = null,
_0x2bf7a5 = +new Date();
let _0x4ecbaf = ![];

function _0x3ca517(_0x243580) {
var _0x3f14d6 = location['protocol'] == 'https:' ? 'https:' : 'http:',
    _0x186d15 = location['host']['endsWith']('mope.io') ? location['host'] : 'mope.io',
    _0x529450 = _0x3f14d6 + '//' + _0x186d15;
$['ajax']({
    'url': _0x3ff1e5 + '/getXsollaToken',
    'type': 'GET',
    'data': {
        'userId': _0x5dcedd,
        'passwordToken': _0x268546,
        'settings_ui_version': _0x2c120b ? 'mobile' : 'desktop',
        'return_url': _0x529450
    },
    'success': function (_0x58c8e5) {
        var _0x594564 = JSON['parse'](_0x58c8e5);
        _0x243580(_0x594564['success'] ? _0x594564['token'] : null);
    },
    'error': function (_0x44cb58, _0x5055df, _0x1046b9) {
        var _0x3b32e4 = JSON['parse'](_0x44cb58['responseText']);
        console['log']('Error getting token: ' + _0x1046b9), _0x13b3b1(_0x3b32e4['reason'], 'error', 0xa), _0x243580(![], null);
    }
});
}
var _0x17a64c = ![];
$bus['on']($bus['EVENTS']['UI_OPEN_XSOLLA_SHOP'], () => {
if (_0xb29884) {
    alert('Please open mope.io in your browser to buy coins (can\'t buy them in the app yet!)');
    return;
}
_0x3ca517(function (_0x3285d5) {
    if (_0x3285d5) {
        console['log']('Got xsolla token ' + _0x3285d5);
        var _0x3dcccf;
        if (_0x4ecbaf) _0x3dcccf = 'https://sandbox-secure.xsolla.com/paystation2/?access_token=' + _0x3285d5;
        else _0x3dcccf = 'https://secure.xsolla.com/paystation2/?access_token=' + _0x3285d5;
        $bus['emit']($bus['EVENTS']['LOADED_XSOLLA_IFRAME_SRC'], _0x3dcccf);
    }
});
});

function _0x3070c7(_0x28c032) {
var _0x57bd5e = {
        'access_token': 'abcdef1234567890abcdef1234567890'
    },
    _0x556fe5 = document['createElement']('script');
_0x556fe5['type'] = 'text/javascript', _0x556fe5['async'] = !![], _0x556fe5['src'] = '//static.xsolla.com/embed/paystation/1.0.8/widget.min.js', _0x556fe5['addEventListener']('load', function (_0x4442e5) {
    XPayStationWidget['init'](_0x57bd5e);
}, ![]), _0x556fe5['addEventListener']('status-done', () => {
    _0xb6ad3e(() => {
        $bus['emit']($bus['EVENTS']['XSOLLA_PAYMENT_FINISHED']);
    });
});
var _0x50d84b = document['getElementsByTagName']('head')[0x0];
_0x50d84b['appendChild'](_0x556fe5);
}
$bus['on']($bus['EVENTS']['UI_SET_GRAPHICS'], _0x416aea => {
_0x4bde0f(_0x416aea), _0x3b6313();
});
(typeof _0x31f3fc === 'undefined' || _0x31f3fc === null || _0x31f3fc === undefined) && (window['options_graphicsLevel'] = 0x3);
if (_0x31f3fc < 0x2) _0x31f3fc = 0x2;
$bus['emit']($bus['EVENTS']['INITIALIZE_DEFAULT_GRAPHICS_LEVEL'], _0x31f3fc);

function _0x4bde0f(_0x9d73b9) {
var _0x1d6f3b = _0x9d73b9 == _0x31f3fc;
_0x31f3fc = _0x9d73b9;
if (window['localStorage']) try {
    window['localStorage']['setItem']('options_graphicsLevel', _0x31f3fc);
} catch (_0x57ec5d) {}
_0x1d6f3b && (_0x2efbd0 = !![]);
}
var _0x409ba2 = 0x0,
_0x443318 = 0x0,
_0x4736ff = +new Date(),
_0x65c6b2 = +new Date(),
_0x18fbdf = 0x0,
_0x5cc1f3 = 0x0;

function _0x570dd4() {
_0x409ba2 += 0x1, _0x740c5b - _0x4736ff > 0x7d0 && (_0x4736ff = Date['now'](), _0x18fbdf = Math['round'](_0x409ba2 / 0x2), _0x409ba2 = 0x0);
}

function _0x4258a5(_0x4e7b61) {
_0x310ccb['setText']('fps: ' + _0x18fbdf);
}
setInterval(function () {
_0x4258a5(_0x18fbdf);
}, _0x264a98), $bus['on']($bus['EVENTS']['UI_PRESS_PLAY'], () => {
console['log']('google tag manager fps metric tracking start', _0xcc7143['name']), gtag('event', 'fps_start', {
    'event_category': 'client_fps',
    'event_label': _0x18fbdf,
    'value': _0x18fbdf
}), gtag('event', 'fps_start', {
    'event_category': 'client_fps_' + _0xcc7143['name'],
    'event_label': _0x18fbdf,
    'value': _0x18fbdf
}), setTimeout(() => {
    gtag('event', 'fps_30s', {
        'event_category': 'client_fps',
        'event_label': _0x18fbdf,
        'value': _0x18fbdf
    }), gtag('event', 'fps_30s', {
        'event_category': 'client_fps_' + _0xcc7143['name'],
        'event_label': _0x18fbdf,
        'value': _0x18fbdf
    }), console['log']('sent fps 30 seconds google tag event');
}, 0x7530), setTimeout(() => {
    gtag('event', 'fps_5min', {
        'event_category': 'client_fps',
        'event_label': _0x18fbdf,
        'value': _0x18fbdf
    }), gtag('event', 'fps_5min', {
        'event_category': 'client_fps_' + _0xcc7143['name'],
        'event_label': _0x18fbdf,
        'value': _0x18fbdf
    }), console['log']('sent fps 5 min google tag event');
}, 0x3c * 0x3e8 * 0x5);
});
const _0x27b576 = performance['now']();
$bus['on']($bus['EVENTS']['ANIMAL_CHOICE_START'], () => {
console['log']('::: gtag animal_choice_start :::'), gtag('event', 'animal_choice_start', {
    'event_category': 'animal_choice',
    'event_label': 0x0,
    'value': 0x0
});
}), $bus['on']($bus['EVENTS']['ANIMAL_CHOICE_CONFIRMED'], () => {
const _0x3276da = performance['now'](),
    _0xf5a89d = Math['round']((_0x3276da - _0x27b576) / 0x3e8);
console['log']('::: gtag animal_choice_end ' + _0xf5a89d + ' :::'), gtag('event', 'animal_choice_end', {
    'event_category': 'animal_choice',
    'event_label': _0xf5a89d,
    'value': _0xf5a89d
});
});
let _0x7147c = window['innerWidth'] - 0x96,
_0x51dd00 = window['innerHeight'] - 0x96;
$bus['on']($bus['EVENTS']['UPDATED_EXPERIENCE_BAR_POSITION'], _0x13b1af => {
_0x7147c = _0x13b1af['right'] * window['devicePixelRatio'], _0x51dd00 = _0x13b1af['top'] * window['devicePixelRatio'];
});

function _0x1e1e17(_0x13a6f9, _0x2d1da1, _0x56088a) {
this['animStep'] = 0x1, this['animStartT'] = _0x740c5b, this['animDur'] = 0xbb8, this['timedOut'] = ![], this['xShift'] = _0xc151f5(-0xa, 0xa), this['yShift'] = _0xc151f5(-0xa, 0xa), this['anlgeShift'] = _0xc151f5(-0xa, 0xa), this['text'] = new _0x407dea(0x10, 'white'), this['text']['setText']((_0x13a6f9 >= 0x0 ? '+ ' : '') + _0x3c83b3(_0x13a6f9) + _0x2d1da1), this['textFontSz'] = 0x1e;
var _0x179fd9 = 'white';
_0x13a6f9 > 0x2710 && (_0x179fd9 = '#c7b753', this['textFontSz'] = 0x28, this['animDur'] += 0x3e8), _0x13a6f9 > 0x186a0 && (_0x179fd9 = '#fdca5b', this['textFontSz'] = 0x2d, this['animDur'] += 0x7d0), _0x13a6f9 > 0xf4240 && (_0x179fd9 = '#c7b753', this['textFontSz'] = 0x33, this['animDur'] += 0x7d0), _0x13a6f9 < 0x0 && (_0x179fd9 = '#c65f59', this['animDur'] += 0x7d0), _0x179fd9 = _0x56088a === undefined ? _0x179fd9 : _0x56088a, this['text']['setColor'](_0x179fd9), this['draw'] = function () {
    if (_0x4974ed['noXpPopups']) return;
    var _0x438bf3 = _0x29d4e1((_0x740c5b - this['animStartT']) / this['animDur'], 0x0, 0x1);
    _0x1d2dab['save']();
    var _0x2f2b02 = _0x7147c,
        _0x37604e = _0x51dd00 + _0x438bf3 * (-0x96 * _0x32b8d4);
    _0x1d2dab['translate'](_0x2f2b02, _0x37604e), _0x1d2dab['rotate'](_0x2bcbaa(this['anlgeShift'] * _0x438bf3)), _0x1d2dab['globalAlpha'] = 0x1 - _0x438bf3, this['text']['setFontSize'](this['textFontSz'] * _0x32b8d4), this['text']['x'] = 0x0, this['text']['y'] = 0x0, this['text']['draw'](), _0x1d2dab['restore']();
    if (_0x740c5b >= this['animStartT'] + this['animDur']) this['timedOut'] = !![];
};
}

function _0x1bfd98(_0x4f1aa7, _0xf288a, _0x12334d, _0x37ef6c) {
this['animStep'] = 0x1, this['animStartT'] = _0x740c5b, this['timedOut'] = ![], this['xShift'] = _0xc151f5(-0xa, 0xa), this['yShift'] = _0xc151f5(-0xa, 0xa), this['anlgeShift'] = _0xc151f5(-0xa, 0xa), this['text'] = new _0x407dea(_0xf288a, _0x12334d), this['text']['setText'](_0x4f1aa7), this['textFontSz'] = _0xf288a, this['animDur'] = _0x37ef6c, this['text']['setColor'](_0x12334d), this['draw'] = function () {
    if (_0x49ba00) return;
    var _0x3588c2 = _0x29d4e1((_0x740c5b - this['animStartT']) / this['animDur'], 0x0, 0x1);
    _0x1d2dab['save']();
    var _0x20fc60 = _0x1bcf68 / 0x2,
        _0x33e47d = _0x157802 - 0x55 * _0x32b8d4 + _0x3588c2 * (-0x96 * _0x32b8d4);
    _0x1d2dab['translate'](_0x20fc60, _0x33e47d), _0x1d2dab['globalAlpha'] = 0x1 - _0x3588c2, this['text']['setFontSize'](this['textFontSz'] * _0x32b8d4), this['text']['x'] = 0x0, this['text']['y'] = 0x0, this['text']['draw'](), _0x1d2dab['restore']();
    if (_0x740c5b >= this['animStartT'] + this['animDur']) this['timedOut'] = !![];
};
}
var _0x49465d = 0xc8;

function _0x17b389() {
var _0x32b92a = _0x3abb4d && _0xcfc086 < 0x1f4 ? 1.4 : 0x1;
_0x168edb['w'] = _0x168edb['h'] = _0x49465d * _0x32b8d4 * _0x32b92a, _0x4a2431['w'] = _0x4a2431['h'] = _0x49465d * _0x32b8d4 * _0x32b92a, _0x2ab077['w'] = _0x2ab077['h'] = _0x49465d * _0x32b8d4 * _0x32b92a, _0xa7bdf6['w'] = 0x3c * _0x4ffcf2 * _0x32b92a, _0xa7bdf6['h'] = 0x1e * _0x4ffcf2 * _0x32b92a;
const _0x429224 = 0x32;
_0x168edb['x'] = 0x19 * _0x4ffcf2 * _0x32b92a + _0x168edb['w'] / 0x2, _0x168edb['x'] -= _0x429224, _0x168edb['y'] = _0x157802 - (0x28 * _0x4ffcf2 + _0x168edb['w'] / 0x2);
_0x53284b && (_0x168edb['x'] = _0x1bcf68 - _0x168edb['x']);
_0x4a2431['x'] = _0x168edb['x'];
if (!_0x3abb4d) _0x4a2431['y'] = _0x168edb['y'];
else _0x4a2431['y'] = _0x168edb['y'] - (0xa * _0x4ffcf2 * _0x32b92a + _0x4a2431['w'] / 0x2 + _0x168edb['w'] / 0x2);
_0x2ab077['x'] = _0x168edb['x'], _0x2ab077['y'] = _0x4a2431['y'] - (0xa * _0x4ffcf2 * _0x32b92a + _0x2ab077['w'] / 0x2 + _0x4a2431['w'] / 0x2);
_0x1bcf68 > 0x300 ? _0xa7bdf6['x'] = Math['min'](_0x1bcf68 / 0x2 + 0x64 * _0x4ffcf2 * _0x32b92a, _0x1bcf68 * 0.8) - 0x12c : _0xa7bdf6['x'] = _0x1bcf68 / 0x2;
_0xa7bdf6['y'] = 0xf * _0x4ffcf2 + _0xa7bdf6['h'] / 0x2, _0x763a67['setPosAndSize'](_0xa7bdf6['x'] - (_0xa7bdf6['w'] / 0x2 + 0xa * _0x4ffcf2 * _0x32b92a), _0xa7bdf6['y'], 0x3c * _0x4ffcf2 * _0x32b92a, 0x1e * _0x4ffcf2 * _0x32b92a, 0x1, 0.5), _0x16019c['setPosAndSize'](_0x763a67['x'], _0x763a67['y'] + _0x763a67['h'] / 0x2 + 0xa * _0x4ffcf2 * _0x32b92a, 0x3c * _0x4ffcf2 * _0x32b92a, 0x1e * _0x4ffcf2 * _0x32b92a, 0.5, 0x0);
for (var _0x547298 = 0x0; _0x547298 < _0x1e1b40['length']; _0x547298++) {
    var _0x35d6e6 = _0x1e1b40[_0x547298];
    _0x35d6e6['visible'] = _0x3abb4d;
}
_0x4a2431['visible'] = !![], _0x2ab077['visible'] = !![], _0x763a67['visible'] = _0x763a67['touchEnabled'] = _0x3abb4d, _0x16019c['visible'] = _0x16019c['touchEnabled'] = _0x3abb4d && _0x285caa;
}
_0x50791a['addEventListener']('gesturestart', function (_0x513005) {
_0x513005['preventDefault']();
});

function _0x3a7cdd() {
for (var _0x14b71d = 0x0; _0x14b71d < _0x1e1b40['length']; _0x14b71d++) {
    var _0x2054f3 = _0x1e1b40[_0x14b71d];
    _0x2054f3['pressed'] = ![], _0x2054f3['pressedTouchID'] = -0x1;
}
_0x55b0e6 = ![];
}
_0x50791a['ontouchstart'] = function (_0x5cf7c7) {
_0x4a8d9c();
var _0x1b15e7 = _0x5cf7c7['touches'];
_0x1b15e7['length'] == 0x1 && _0x3a7cdd();
if (!_0x3c6c95) return;
for (var _0x5a2af = 0x0; _0x5a2af < _0x5cf7c7['changedTouches']['length']; _0x5a2af++) {
    var _0x1cbe3b = _0x5cf7c7['changedTouches'][_0x5a2af];
    for (var _0x384041 = 0x0; _0x384041 < _0x1e1b40['length']; _0x384041++) {
        var _0x2514d5 = _0x1e1b40[_0x384041],
            _0x36d4af = _0x2514d5['testPosHitsButton'](_0x1cbe3b['clientX'] * _0x4ffcf2, _0x1cbe3b['clientY'] * _0x4ffcf2);
        if (_0x36d4af && !_0x2514d5['pressed'] && _0x2514d5['touchEnabled']) {
            _0x5cf7c7['preventDefault'](), _0x2514d5['pressed'] = !![], _0x2514d5['pressedTouchID'] = _0x1cbe3b['identifier'], _0x2514d5['onButtonTouchStart']();
            return;
        }
    }
}
if (!_0x19debf) {
    if (!_0x55b0e6) {
        var _0x1cbe3b = _0x5cf7c7['changedTouches'][0x0];
        _0x55b0e6 = !![], _0x659dc8 = _0x1cbe3b['clientX'] * _0x4ffcf2, _0x553e95 = _0x1cbe3b['clientY'] * _0x4ffcf2, _0x32d16d = _0x659dc8, _0x1e7abe = _0x553e95, _0x5bc8e7 = _0x1cbe3b['identifier'];
        return;
    }
}
_0x324b2a = _0x5cf7c7['touches'][0x0]['clientX'] * _0x4ffcf2, _0x344a08 = _0x5cf7c7['touches'][0x0]['clientY'] * _0x4ffcf2, _0x368165();
};
var _0x562338 = 0x0,
_0x3a7afd = 0x0,
_0x293290 = 0x0,
_0x4f7625 = 0x1;
_0x50791a['ontouchmove'] = function (_0x32d6ee) {
_0x4a8d9c(), _0x32d6ee['preventDefault']();
for (var _0x17a56b = 0x0; _0x17a56b < _0x32d6ee['changedTouches']['length']; _0x17a56b++) {
    var _0x446988 = _0x32d6ee['changedTouches'][_0x17a56b];
    if (_0x446988['identifier'] == _0x4a2431['pressedTouchID']) {
        if (_0x168edb['pressedTouchID'] == -0x1) {
            var _0x7c556f = _0x168edb['testPosHitsButton'](_0x446988['clientX'] * _0x4ffcf2, _0x446988['clientY'] * _0x4ffcf2),
                _0x53e389 = _0x168edb['pressed'];
            _0x168edb['pressed'] = _0x7c556f;
            if (_0x7c556f && !_0x53e389) _0x551e32(_0x270894, !![]);
            else !_0x7c556f && _0x53e389 && _0x551e32(_0x270894, ![]);
        }
        continue;
    }
    if (!_0x19debf) {
        if (_0x55b0e6 && _0x446988['identifier'] == _0x5bc8e7) {
            var _0x27328b = _0x446988['clientX'] * _0x4ffcf2 - _0x659dc8,
                _0x34d3b8 = _0x446988['clientY'] * _0x4ffcf2 - _0x553e95,
                _0x17b9af = Math['sqrt'](_0x27328b * _0x27328b + _0x34d3b8 * _0x34d3b8);
            if (_0x17b9af > 0x0) {
                var _0xd3a39c = _0x27328b / _0x17b9af,
                    _0x4dad67 = _0x34d3b8 / _0x17b9af,
                    _0x4ae9ef = Math['min'](0x1, _0x17b9af / (_0x22aa5d * _0x4ffcf2));
                if (_0x4ae9ef < 0.35) _0x4ae9ef = 0x0;
                var _0x56eb2c = Math['pow'](_0x4ae9ef, 0x2),
                    _0x4afc44 = 0x12c * _0x4ffcf2 * _0x56eb2c,
                    _0x1835ba = Math['atan2'](_0x4dad67, _0xd3a39c);
                _0x4ef384 = _0x388dd0(_0x14d1cc, _0x1835ba), _0x19e5a9 = _0x4ae9ef, _0x32d16d = _0x659dc8 + _0x22aa5d * _0x4ffcf2 * _0xd3a39c * _0x4ae9ef, _0x1e7abe = _0x553e95 + _0x22aa5d * _0x4ffcf2 * _0x4dad67 * _0x4ae9ef, _0x324b2a = _0x1bcf68 / 0x2 + _0xd3a39c * _0x4afc44, _0x344a08 = _0x157802 / 0x2 + _0x4dad67 * _0x4afc44, _0x368165();
            }
        }
    } else _0x324b2a = _0x446988['clientX'] * _0x4ffcf2, _0x344a08 = _0x446988['clientY'] * _0x4ffcf2, _0x368165();
}
}, _0x50791a['ontouchend'] = function (_0x1405f4) {
for (var _0x3d7940 = 0x0; _0x3d7940 < _0x1405f4['changedTouches']['length']; _0x3d7940++) {
    var _0x310958 = _0x1405f4['changedTouches'][_0x3d7940];
    if (_0x55b0e6 && _0x310958['identifier'] == _0x5bc8e7) {
        _0x55b0e6 = ![], _0x5bc8e7 = -0x1;
        continue;
    }
    for (var _0x51005e = 0x0; _0x51005e < _0x1e1b40['length']; _0x51005e++) {
        var _0x57e2aa = _0x1e1b40[_0x51005e];
        if (_0x57e2aa['pressed'] && _0x57e2aa['pressedTouchID'] == _0x310958['identifier'] && _0x57e2aa['touchEnabled']) {
            _0x57e2aa['pressed'] = ![], _0x57e2aa['pressedTouchID'] = -0x1;
            if (_0x3c6c95) _0x57e2aa['onButtonTouchEnd']();
            return;
        }
    }
}
}, _0x50791a['ontouchcancel'] = function (_0x4ea1c1) {
console['log']('touch cancel'), _0x50791a['ontouchend'](_0x4ea1c1);
}, _0x50791a['ontouchleave'] = function (_0x471e6b) {
console['log']('touch leave');
}, _0x131218['prototype'] = {
'id': 0x0,
'drawMe': !![],
'oType': _0xdf1a02,
'spawnTime': 0x0,
'rPer': 0x0,
'updateTime': 0x0,
'x': 0x0,
'y': 0x0,
'ox': 0x0,
'oy': 0x0,
'nx': 0x0,
'ny': 0x0,
'rad': 0x0,
'oRad': 0x0,
'nRad': 0x0,
'angle': 0x0,
'oAngle': 0x0,
'angleDelta': 0x0,
'moveUpdF': 0x0,
'z': 0x0,
'name': '',
'dead': ![],
'type': 0x0,
'curBiome': 0x0,
'isRectangle': ![],
'rectW': 0x0,
'rectH': 0x0,
'specType': 0x0,
'toString': function () {
    return '[GObj t=' + this['oType'] + ' id=' + this['id'] + ']';
}
}, _0x131218['prototype']['flag_hurt'] = ![], _0x131218['prototype']['hpPer'] = _0x131218['prototype']['hpPer_n'] = _0x131218['prototype']['hpBarA'] = 0x0, _0x131218['prototype']['infectionPer'] = _0x131218['prototype']['infectionPer_n'] = _0x131218['prototype']['infectionBarA'] = 0x0, _0x131218['prototype']['curePer'] = _0x131218['prototype']['curePer_n'] = _0x131218['prototype']['cureBarA'] = 0x0, _0x131218['prototype']['hpBarTimeoutT'] = 0x0, _0x131218['prototype']['alwaysPlainOutline'] = ![], _0x131218['prototype']['doesDrawEffectScale'] = ![], _0x131218['prototype']['drawEffectScale_Slow'] = ![], _0x131218['prototype']['customInterfaceDraw'] = ![], _0x131218['prototype']['animateRadOnSpawn'] = !![], _0x131218['prototype']['canRotate'] = function () {
switch (this['oType']) {
case _0x880a3e:
case _0x603ace:
case _0x3f617d:
    return ![];
}
return !![];
}, _0x131218['prototype']['getObjSpecies'] = function () {
switch (this['oType']) {
case _0x3c46aa:
    return '/' + this['speciesType'];
}
return '';
}, _0x131218['prototype']['customDraw2'] = function (_0x40dc89) {
switch (this['oType']) {
case _0x3ab87a:
case _0x2bcc5d:
case _0x3bc4a1:
case _0x560b30:
case _0xdf1a02:
case _0x3fc0f0:
case _0x16becf:
case _0x880a3e:
case _0x9c93d1:
case _0x34cf69:
case _0xc430c5:
case _0x1b2158:
case _0x603ace:
case _0x519ec6:
case _0x16cf92:
case _0x41ca4e:
case _0x313fbe:
case _0x3f347c:
case _0x31ad70:
case _0x37bcb6:
case _0x387234:
case _0x24d775:
case _0x3f617d:
case _0x5a308b:
case _0x1ff443:
case _0x5aa030:
case _0x1f8f67:
case _0x1a6094:
case _0x13556a:
case _0x3fcd3a:
case _0x3860eb:
case _0x260ddc:
case _0x4e9094:
case _0x4793dd:
case _0x583a83:
case _0x3c46aa:
case _0x5e7af4:
case _0x50524a:
case _0x46fb5b:
case _0x40ef1a:
case _0x34725d:
case _0x22f850:
case _0x2035ae:
    this['doesDrawEffectScale'] = ![], this['drawEffectScale_Slow'] = ![]; {
        var _0x271129 = this['getSkinImageObj'](this['objSkinPath']);
        _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = this['getObjAlpha']();
        if (_0x271129) {
            var _0x3c7d77 = this['getRad']();
            if (this['canRotate']()) _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2);
            _0x1d2dab['drawImage'](_0x271129, -_0x3c7d77, -_0x3c7d77, 0x2 * _0x3c7d77, 0x2 * _0x3c7d77);
        } else this['drawOutlinedCircle']('(make this obj invisible on server?)', 'black');
        _0x1d2dab['restore']();
    }
    break;
}
}, _0x131218['prototype']['getRad'] = function () {
switch (this['oType']) {
case _0x5e7af4:
case _0x141d37:
    return this['rad'] * 1.5;
case _0x880a3e:
    return this['rad'] * 1.2;
case _0x46fb5b:
case _0x40ef1a:
    var _0x4fcc25 = _0x3c55ea[_0x2fc9ba];
    if (_0x4fcc25 && _0x4fcc25['lastHidingHoleID'] == this['id']) {
        if (this['alpha'] == undefined) this['alpha'] = 0x0;
        _0x4fcc25['flag_inHidingHole'] ? this['alpha'] += (0.1 + this['alpha']) * 0.1 : this['alpha'] -= this['alpha'] * 0.1;
        if (this['alpha'] > 0x1) this['alpha'] = 0x1;
        else this['alpha'] < 0x0 && (this['alpha'] = 0x0);
        return _0x1d2dab['globalAlpha'] = this['alpha'], this['rad'];
    } else return this['innerRad'];
}
return this['rad'];
}, _0x131218['prototype']['getObjAlpha'] = function () {
switch (this['oType']) {
case _0x3c46aa:
    return 0.9;
}
return 0x1;
}, _0x131218['prototype']['objSkinPath'] = null, _0x131218['prototype']['getBiomeSkin'] = function (_0x140414) {
switch (this['oType']) {
case _0x22f850:
    _0x140414 = (this['isEdibleOutlined']() ? 'e' : this['oType']) + '_' + this['specType'];
    break;
case _0x3c46aa:
case _0x3ab87a:
case _0x2bcc5d:
case _0x3bc4a1:
case _0x5e7af4:
case _0x2035ae:
    _0x140414 = this['isEdibleOutlined']() ? 'e' : this['curBiome'];
    break;
case _0x16becf:
case _0x3fc0f0:
case _0x880a3e:
    _0x140414 = this['isEdibleOutlined']() ? 'e' : this['oType'];
    this['curBiome'] == _0x1c3cf7 && (_0x140414 += '_2');
    break;
case _0x560b30:
    _0x140414 = this['isEdibleOutlined']() ? 'e' : this['curBiome'];
    this['curBiome'] == _0x1c3cf7 && (_0x140414 += '_2');
    break;
case _0x13556a:
    _0x140414 += '_' + this['curBiome'];
    break;
case _0x46fb5b:
case _0x40ef1a:
    this['curBiome'] != _0x545d4b && (_0x140414 = this['curBiome']);
    break;
}
return _0x140414;
}, _0x131218['prototype']['customDraw'] = function (_0x21a71e) {
switch (this['oType']) {
case _0x3ab87a:
case _0x2bcc5d:
case _0x3bc4a1:
case _0x560b30:
case _0xdf1a02:
case _0x3fc0f0:
case _0x16becf:
case _0x880a3e:
case _0x9c93d1:
case _0x34cf69:
case _0xc430c5:
case _0x1b2158:
case _0x603ace:
case _0x519ec6:
case _0x16cf92:
case _0x41ca4e:
case _0x313fbe:
case _0x3f347c:
case _0x31ad70:
case _0x37bcb6:
case _0x387234:
case _0x24d775:
case _0x3f617d:
case _0x5a308b:
case _0x1ff443:
case _0x5aa030:
case _0x1f8f67:
case _0x1a6094:
case _0x13556a:
case _0x3fcd3a:
case _0x3860eb:
case _0x260ddc:
case _0x4e9094:
case _0x4793dd:
case _0x583a83:
case _0x3c46aa:
case _0x5e7af4:
case _0x50524a:
case _0x46fb5b:
case _0x40ef1a:
case _0x34725d:
case _0x22f850:
case _0x2035ae:
    this['customDraw2'](_0x21a71e);
    break;
case _0x5e7af4: {
    _0x1d2dab['save']();
    var _0x307fae = 0x0;
    if (!_0x44408d && !(_0x31f3fc == 0x2)) {
        var _0xe8f00b = (_0x740c5b - this['spawnTime']) / 0x3e8,
            _0x523475 = 0x2,
            _0x5b499d = 1.5;
        _0x307fae = _0x5b499d * Math['sin'](0x2 * Math['PI'] / _0x523475 * _0xe8f00b);
    }
    var _0x15057f = this['curBiome'] == _0x506414 ? _0x29fff8 : _0x2b9117;
    _0x1d2dab['fillStyle'] = _0x15057f;
    var _0x57b56f = this['rad'] * 0.8;
    this['drawOutlinedCircle']('', _0x15057f), _0x1d2dab['globalAlpha'] *= 0.98;
    var _0x25107a = -_0x57b56f * 0.5,
        _0x4ee03c = -_0x57b56f * 0.5 + 0xa * this['rPer'],
        _0x4dba5e = Math['max'](0x0, _0x57b56f * 0.65 + _0x307fae) + 0x2;
    _0x444e67(_0x25107a, _0x4ee03c, _0x4dba5e, _0x15057f);
    var _0x25107a = _0x57b56f * 0.5,
        _0x4ee03c = -_0x57b56f * 0.5 - 0xa * this['rPer'],
        _0x4dba5e = Math['max'](0x0, _0x57b56f * 0.73 - _0x307fae);
    _0x444e67(_0x25107a, _0x4ee03c, _0x4dba5e, _0x15057f);
    var _0x25107a = _0x57b56f * 0.6,
        _0x4ee03c = _0x57b56f * 0.4,
        _0x4dba5e = Math['max'](0x0, _0x57b56f * 0.78 + _0x307fae);
    _0x444e67(_0x25107a, _0x4ee03c, _0x4dba5e, _0x15057f);
    var _0x25107a = -_0x57b56f * 0.5,
        _0x4ee03c = _0x57b56f * 0.5 + 0xa * this['rPer'],
        _0x4dba5e = Math['max'](0x0, _0x57b56f * 0.6 + this['rPer'] - _0x307fae);
    _0x444e67(_0x25107a, _0x4ee03c, _0x4dba5e, _0x15057f), _0x1d2dab['restore']();
}
break;
case _0x3ec985: {
    var _0x2223b7 = this['curBiome'] == _0x49e519 ? '#9b702b' : '#1AAE31';
    this['drawOutlinedCircle']('', _0x2223b7), _0x1d2dab['save']();
    var _0x307fae = 0x0;
    if (!_0x44408d && !(_0x31f3fc == 0x2)) {
        var _0xe8f00b = (_0x740c5b - this['spawnTime']) / 0x3e8,
            _0x523475 = 0x2,
            _0x5b499d = 1.5;
        _0x307fae = _0x5b499d * Math['sin'](0x2 * Math['PI'] / _0x523475 * _0xe8f00b);
    }
    _0x1d2dab['fillStyle'] = _0x59301f;
    var _0x21a287 = this['rad'] * 0.75;
    _0x1d2dab['globalAlpha'] *= 0.8, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-_0x21a287 * 0.5, -_0x21a287 * 0.5 + 0xa * this['rPer'], Math['max'](0x0, _0x21a287 * 0.65 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](_0x21a287 * 0.5, -_0x21a287 * 0.5 - 0xa * this['rPer'], Math['max'](0x0, _0x21a287 * 0.73 - _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](_0x21a287 * 0.6, _0x21a287 * 0.4, Math['max'](0x0, _0x21a287 * 0.78 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-_0x21a287 * 0.5, _0x21a287 * 0.5, Math['max'](0x0, _0x21a287 * 0.6 + this['rPer'] - _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['restore']();
}
break;
case _0x141d37: {
    _0x1d2dab['save']();
    var _0x307fae = 0x0;
    if (!_0x44408d && !(_0x31f3fc == 0x2)) {
        var _0xe8f00b = (_0x740c5b - this['spawnTime']) / 0x3e8,
            _0x523475 = 0x2,
            _0x5b499d = 1.5;
        _0x307fae = _0x5b499d * Math['sin'](0x2 * Math['PI'] / _0x523475 * _0xe8f00b);
    }
    var _0x57b56f = this['rad'] * 0.8,
        _0x10d07a = _0x29fff8;
    this['drawOutlinedCircle']('', _0x10d07a), _0x1d2dab['globalAlpha'] *= 0.98;
    var _0x25107a = -_0x57b56f * 0.5,
        _0x4ee03c = -_0x57b56f * 0.5 + 0xa * this['rPer'],
        _0x4dba5e = Math['max'](0x0, _0x57b56f * 0.65 + _0x307fae) + 0x2;
    _0x444e67(_0x25107a, _0x4ee03c, _0x4dba5e, _0x10d07a);
    var _0x25107a = _0x57b56f * 0.5,
        _0x4ee03c = -_0x57b56f * 0.5 - 0xa * this['rPer'],
        _0x4dba5e = Math['max'](0x0, _0x57b56f * 0.73 - _0x307fae);
    _0x444e67(_0x25107a, _0x4ee03c, _0x4dba5e, _0x10d07a);
    var _0x25107a = _0x57b56f * 0.6,
        _0x4ee03c = _0x57b56f * 0.4,
        _0x4dba5e = Math['max'](0x0, _0x57b56f * 0.78 + _0x307fae);
    _0x444e67(_0x25107a, _0x4ee03c, _0x4dba5e, _0x10d07a);
    var _0x25107a = -_0x57b56f * 0.5,
        _0x4ee03c = _0x57b56f * 0.5 + 0xa * this['rPer'],
        _0x4dba5e = Math['max'](0x0, _0x57b56f * 0.6 + this['rPer'] - _0x307fae);
    _0x444e67(_0x25107a, _0x4ee03c, _0x4dba5e, _0x10d07a), _0x1d2dab['restore']();
}
break;
case _0x13556a: {
    _0x1d2dab['save']();
    var _0x2f0963 = this['curBiome'] == _0x1c3cf7 ? '#7790d8' : _0x201756;
    this['drawOutlinedCircle']('', _0x2f0963);
    if (!(_0x31f3fc == 0x2)) _0x1d2dab['rotate'](this['rPer'] * 0x2 * Math['PI']);
    var _0x307fae = 0x0;
    if (!_0x44408d && !(_0x31f3fc == 0x2)) {
        var _0xe8f00b = (_0x740c5b - this['spawnTime']) / 0x3e8,
            _0x523475 = 0x7,
            _0x5b499d = 0x4;
        _0x307fae = _0x5b499d * Math['sin'](0x2 * Math['PI'] / _0x523475 * _0xe8f00b);
    }
    if (this['curBiome'] == _0x1c3cf7) _0x1d2dab['fillStyle'] = '#7790d8';
    else _0x1d2dab['fillStyle'] = _0x201756;
    _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x169027 + _0x307fae), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), !(_0x31f3fc == 0x2) && (_0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.3, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.35 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill']()), _0x1d2dab['restore']();
}
break;
case _0xdf1a02: {
    var _0x425fc2 = _0x3eb27d;
    this['curBiome'] == _0x1c3cf7 && (_0x425fc2 = '#ac443c'), this['drawOutlinedCircle']('', _0x425fc2);
}
break;
case _0x34cf69: {
    var _0xd0fc09 = this['getSkinImageObj']('img/coconut' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    console['log']('drawing cococ');
    if (_0xd0fc09) {
        var _0x21a287 = this['rad'];
        if (this['specType2'] == 0x1) {
            if (this['angle'] == 0x0) this['angle'] = this['rPer'] * Math['PI'] * 0x2;
            this['angle'] += 0.4, _0x1d2dab['rotate'](this['angle']);
        } else {
            if (this['specType2'] == 0x2) _0x1d2dab['rotate'](this['angle']);
            else _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2);
        }
        _0x1d2dab['drawImage'](_0xd0fc09, -_0x21a287, -_0x21a287, 0x2 * _0x21a287, 0x2 * _0x21a287);
    }
}
break;
case _0x9c93d1: {
    var _0xd0fc09 = this['getSkinImageObj']('img/banana' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0xd0fc09) {
        var _0x21a287 = this['rad'];
        if (this['specType2'] == 0x1) {
            if (this['angle'] == 0x0) this['angle'] = this['rPer'] * Math['PI'] * 0x2;
            this['angle'] += 0.4, _0x1d2dab['rotate'](this['angle']);
        } else {
            if (this['specType2'] == 0x2) _0x1d2dab['rotate'](this['angle']);
            else _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2);
        }
        _0x1d2dab['drawImage'](_0xd0fc09, -_0x21a287, -_0x21a287, 0x2 * _0x21a287, 0x2 * _0x21a287);
    }
}
break;
case _0x1a6094: {
    var _0xd0fc09 = this['getSkinImageObj']('img/rasp' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0xd0fc09) {
        var _0x21a287 = this['rad'];
        if (this['specType2'] == 0x1) {
            if (this['angle'] == 0x0) this['angle'] = this['rPer'] * Math['PI'] * 0x2;
            this['angle'] += 0.4, _0x1d2dab['rotate'](this['angle']);
        } else {
            if (this['specType2'] == 0x2) _0x1d2dab['rotate'](this['angle']);
            else _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2);
        }
        _0x1d2dab['drawImage'](_0xd0fc09, -_0x21a287, -_0x21a287, 0x2 * _0x21a287, 0x2 * _0x21a287);
    }
}
break;
case _0x1f8f67: {
    var _0xd0fc09 = this['getSkinImageObj']('img/pear' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0xd0fc09) {
        var _0x21a287 = this['rad'];
        if (this['specType2'] == 0x1) {
            if (this['angle'] == 0x0) this['angle'] = this['rPer'] * Math['PI'] * 0x2;
            this['angle'] += 0.4, _0x1d2dab['rotate'](this['angle']);
        } else {
            if (this['specType2'] == 0x2) _0x1d2dab['rotate'](this['angle']);
            else _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2);
        }
        _0x1d2dab['drawImage'](_0xd0fc09, -_0x21a287, -_0x21a287, 0x2 * _0x21a287, 0x2 * _0x21a287);
    }
}
break;
case _0x3f617d: {
    var _0xd0fc09 = this['getSkinImageObj']('img/seaweed' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0xd0fc09) {
        var _0x21a287 = this['rad'];
        _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0xd0fc09, -_0x21a287, -_0x21a287, 0x2 * _0x21a287, 0x2 * _0x21a287);
    }
}
break;
case _0x5a308b: {
    var _0xd0fc09 = this['getSkinImageObj']('img/starfish' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0xd0fc09) {
        var _0x21a287 = this['rad'];
        _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0xd0fc09, -_0x21a287, -_0x21a287, 0x2 * _0x21a287, 0x2 * _0x21a287);
    }
}
break;
case _0x387234: {
    var _0xd0fc09 = this['getSkinImageObj']('img/kelp' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0xd0fc09) {
        var _0x21a287 = this['rad'];
        _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0xd0fc09, -_0x21a287, -_0x21a287, 0x2 * _0x21a287, 0x2 * _0x21a287);
    }
}
break;
case _0x24d775: {
    var _0xd0fc09 = this['getSkinImageObj']('img/clam' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0xd0fc09) {
        var _0x21a287 = this['rad'];
        _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0xd0fc09, -_0x21a287, -_0x21a287, 0x2 * _0x21a287, 0x2 * _0x21a287);
    }
}
break;
case _0x37bcb6: {
    var _0xd0fc09 = this['getSkinImageObj']('img/conch' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0xd0fc09) {
        var _0x21a287 = this['rad'] * 0x1;
        _0x1d2dab['save'](), _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0xd0fc09, -_0x21a287, -_0x21a287, 0x2 * _0x21a287, 0x2 * _0x21a287), _0x1d2dab['restore']();
    }
}
break;
case _0x30a603:
case _0x492660: {
    break;
}
case _0x135bec: {
    var _0xd0fc09 = this['getSkinImageObj']('skins/land/ostrich/' + this['speciesType'] + '/ostrichEgg' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0xd0fc09) {
        var _0x21a287 = this['rad'];
        _0x1d2dab['save'](), _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0xd0fc09, -_0x21a287, -_0x21a287, 0x2 * _0x21a287, 0x2 * _0x21a287), _0x1d2dab['restore']();
    }
}
break;
case _0x164db2:
    this['drawOutlinedCircle']('', 'red');
    break;
case _0xb31ef7:
    this['drawOutlinedCircle']('', 'green');
    break;
case _0x4733b5:
    this['drawOutlinedCircle']('', 'blue');
    break;
case _0x2f92ea:
    break;
case _0x22f850: {
    var _0x1cef8f = 'egg';
    if (this['specType'] == 0x1) _0x1cef8f = 'goldenegg';
    var _0x124867 = 'img/' + _0x1cef8f + (this['isEdibleOutlined']() ? '_e' : '') + '.png';
    console['log'](_0x124867);
    var _0xd0fc09 = this['getSkinImageObj'](_0x124867);
    if (_0xd0fc09) {
        var _0x21a287 = this['rad'];
        _0x1d2dab['save'](), _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0xd0fc09, -_0x21a287, -_0x21a287, 0x2 * _0x21a287, 0x2 * _0x21a287), _0x1d2dab['restore']();
    }
}
break;
case _0x603ace: {
    var _0xd0fc09 = this['getSkinImageObj']('img/beehive' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0xd0fc09) {
        var _0x21a287 = this['rad'];
        _0x1d2dab['save'](), _0x1d2dab['rotate'](this['rPer'] * 0.5 * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0xd0fc09, -_0x21a287, -_0x21a287, 0x2 * _0x21a287, 0x2 * _0x21a287), _0x1d2dab['restore']();
    }
}
break;
case _0x3e1f7a: {
    var _0xd0fc09 = this['getSkinImageObj']('img/desert/anthill/anthill.png');
    if (_0xd0fc09) {
        var _0x21a287 = this['rad'];
        _0x1d2dab['save'](), _0x1d2dab['rotate'](this['rPer'] * 0.5 * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0xd0fc09, -_0x21a287, -_0x21a287, 0x2 * _0x21a287, 0x2 * _0x21a287), _0x1d2dab['restore'](), console['log']('drawing anthill');
    }
}
break;
case _0x313fbe: {
    var _0xd0fc09 = this['getSkinImageObj']('img/honeycomb' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0xd0fc09) {
        var _0x21a287 = this['rad'];
        _0x1d2dab['save'](), _0x1d2dab['rotate'](this['rPer'] * 0.5 * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0xd0fc09, -_0x21a287, -_0x21a287, 0x2 * _0x21a287, 0x2 * _0x21a287), _0x1d2dab['restore']();
    }
}
break;
case _0x26cd2c: {
    var _0xd0fc09 = this['getSkinImageObj']('img/quill.png');
    if (_0xd0fc09) {
        var _0x21a287 = this['rad'];
        _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0xd0fc09, -_0x21a287, -_0x21a287, 0x2 * _0x21a287, 0x2 * _0x21a287);
    }
}
break;
case _0x34725d: {
    this['drawOutlinedCircle']('', _0x23716a), _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x444e67(this['rad'] * 0.25, this['rad'] * 0.4, (0.3 + 0.15 * this['rPer']) * this['rad'], '#905113');
}
break;
case _0x3bc4a1: {
    var _0x53976e = '';
    console['log']('Healing stone current biome: ' + this['curBiome']);
    switch (this['curBiome']) {
    case _0x506414:
        _0x53976e = '_ocean';
        break;
    case _0x1c3cf7:
        _0x53976e = '_arctic';
        break;
    case _0x1c453c:
    default:
        _0x53976e = '';
        break;
    }
    var _0xd0fc09 = this['getSkinImageObj']('img/healingStone' + _0x53976e + '.png');
    console['log']('Healing stone image: ' + image);
    if (_0xd0fc09) {
        var _0x21a287 = this['rad'];
        _0x1d2dab['save'](), _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0xd0fc09, -_0x21a287, -_0x21a287, 0x2 * _0x21a287, 0x2 * _0x21a287), _0x1d2dab['restore']();
    }
}
break;
case _0xbfd919: {
    _0x444e67(0x0, 0x0, Math['max'](0x0, this['rad'] * 0x1), '#815427'), _0x444e67(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.6), '#6e4b29'), _0x444e67(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.5), '#543d28'), _0x444e67(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.45), '#3f3124'), _0x444e67(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.33), '#241e19'), _0x444e67(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.25), '#120f0d'), _0x444e67(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.2), _0x3ada2a);
}
break;
case _0x3e8ed9: {
    _0x1d2dab['save']();
    var _0x307fae = 0x0;
    if (!_0x44408d && !(_0x31f3fc == 0x2)) {
        var _0x49502 = _0x1170c4('lavalake', this['spawnTime']);
        _0x49502 !== undefined && _0x49502 != null && (this['theFrame'] = _0x49502), _0x307fae = this['theFrame'];
    }
    if (_0x21a71e) {
        var _0x169027 = 0x4;
        _0x1d2dab['fillStyle'] = _0x3ada2a, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x1d2dab['fill']();
    } else _0x1d2dab['fillStyle'] = _0x3ada2a, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x169027 + _0x307fae), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), !(_0x31f3fc == 0x2) && (_0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill']());
    _0x1d2dab['restore']();
}
break;
case _0x155290: {
    _0x1d2dab['save']();
    var _0x307fae = 0x0,
        _0xe8f00b = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x523475 = 0x4,
        _0x5b499d = 2.5;
    _0x307fae = _0x5b499d * Math['sin'](0x2 * Math['PI'] / _0x523475 * _0xe8f00b);
    if (_0x21a71e) {
        var _0x169027 = 0x4;
        _0x1d2dab['fillStyle'] = '#5e5348', _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x1d2dab['fill']();
    } else {
        _0x1d2dab['fillStyle'] = '#706962', _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x169027 + _0x307fae), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill']();
        !(_0x31f3fc == 0x2) && (_0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill']());
        _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1 - this['underwaterA'];
        var _0xe8f00b = (_0x740c5b - this['spawnTime']) / 0x3e8,
            _0x523475 = 1.5,
            _0x5b499d = 0x8,
            _0x468012 = _0x5b499d * Math['sin'](0x2 * Math['PI'] / _0x523475 * _0xe8f00b);
        if (this['flag_underWater']) {
            _0x1d2dab['globalAlpha'] *= 0.5;
            if (this['animalType'] == _0x1d3e9a) _0x1d2dab['globalAlpha'] = 0.3;
        }
        _0x1d2dab['fillStyle'] = 'yellow';
        var _0x1d4f2a = this['rad'] * 0.15;
        _0x1d2dab['beginPath']();
        var _0x357dfe = 0x1;
        for (i = 0x1; i <= _0x357dfe; i++) {
            _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.2, _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2 * i), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * -0.35, this['rad'] * -0.33, Math['max'](0x0, _0x1d4f2a + _0x468012), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.35, this['rad'] * -0.32, Math['max'](0x0, _0x1d4f2a - _0x468012), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.35, this['rad'] * 0.36, Math['max'](0x0, _0x1d4f2a + _0x468012), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * -0.35, this['rad'] * 0.35, Math['max'](0x0, _0x1d4f2a - _0x468012), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['restore']();
        }
        _0x1d2dab['restore']();
    }
    _0x1d2dab['restore']();
}
break;
case _0x1ff443: {
    var _0xd0fc09 = this['getSkinImageObj']('img/cloudberry' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0xd0fc09) {
        var _0x21a287 = this['rad'];
        if (this['specType2'] == 0x1) {
            if (this['angle'] == 0x0) this['angle'] = this['rPer'] * Math['PI'] * 0x2;
            this['angle'] += 0.4, _0x1d2dab['rotate'](this['angle']);
        } else {
            if (this['specType2'] == 0x2) _0x1d2dab['rotate'](this['angle']);
            else _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2);
        }
        _0x1d2dab['drawImage'](_0xd0fc09, -_0x21a287, -_0x21a287, 0x2 * _0x21a287, 0x2 * _0x21a287);
    }
}
break;
case _0x5aa030: {
    var _0xd0fc09 = this['getSkinImageObj']('img/arcticNut' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0xd0fc09) {
        var _0x21a287 = this['rad'];
        if (this['specType2'] == 0x1) {
            if (this['angle'] == 0x0) this['angle'] = this['rPer'] * Math['PI'] * 0x2;
            this['angle'] += 0.4, _0x1d2dab['rotate'](this['angle']);
        } else {
            if (this['specType2'] == 0x2) _0x1d2dab['rotate'](this['angle']);
            else _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2);
        }
        _0x1d2dab['drawImage'](_0xd0fc09, -_0x21a287, -_0x21a287, 0x2 * _0x21a287, 0x2 * _0x21a287);
    }
}
break;
case _0xc430c5: {
    var _0xd0fc09 = this['getSkinImageObj']('img/carrot' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0xd0fc09) {
        var _0x21a287 = this['rad'];
        _0x1d2dab['save'](), _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0xd0fc09, -_0x21a287, -_0x21a287, 0x2 * _0x21a287, 0x2 * _0x21a287), _0x1d2dab['restore']();
    }
}
break;
case _0x3f347c: {
    var _0xd0fc09 = this['getSkinImageObj']('img/watermelon' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0xd0fc09) {
        var _0x21a287 = this['rad'];
        _0x1d2dab['save'](), _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0xd0fc09, -_0x21a287, -_0x21a287, 0x2 * _0x21a287, 0x2 * _0x21a287), _0x1d2dab['restore']();
    }
}
break;
case _0xbac7db: {
    _0x1d2dab['save'](), _0x444e67(0x0, 0x0, this['rad'], !this['isEdibleOutlined']() ? _0x3b949e(this['curBiome']) : _0x4c4d1f), _0x444e67(0x0, 0x0, Math['max'](0x0, this['rad'] - 0x2), '#74e61e'), _0x1d2dab['restore']();
}
break;
case _0x31ad70: {
    var _0xd0fc09 = this['getSkinImageObj']('img/watermelonSlice' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0xd0fc09) {
        var _0x21a287 = this['rad'];
        _0x1d2dab['save'](), _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0xd0fc09, -_0x21a287, -_0x21a287, 0x2 * _0x21a287, 0x2 * _0x21a287), _0x1d2dab['restore']();
    }
}
break;
case _0x41ca4e:
case _0x16cf92:
case _0x519ec6: {
    var _0x45d655 = 0x0,
        _0xd0fc09 = this['getSkinImageObj']('img/meat' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0xd0fc09) {
        var _0x21a287 = this['rad'];
        _0x1d2dab['save'](), _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0xd0fc09, -_0x21a287, -_0x21a287, 0x2 * _0x21a287, 0x2 * _0x21a287), _0x1d2dab['restore']();
    }
}
break;
case _0x3fc0f0:
case _0x16becf: {
    var _0x169027 = 0x2,
        _0x107d12 = this['oType'] == _0x16becf ? 0xf : 0x9;
    _0x1d2dab['fillStyle'] = this['getOutlineColor'](), _0x1d2dab['beginPath'](), _0x1d2dab['rect'](-_0x107d12 / 0x2 - _0x169027, -_0x169027, _0x107d12 + _0x169027 * 0x2, this['rad'] * 0.8 + _0x169027 * 0x2), _0x1d2dab['fill'](), _0x1d2dab['fillStyle'] = '#FFCA49', _0x1d2dab['beginPath'](), _0x1d2dab['rect'](-_0x107d12 / 0x2, 0x0 + _0x169027 / 0x2, _0x107d12, this['rad'] * 0.8 - _0x169027 / 0x2), _0x1d2dab['fill'](), !(_0x31f3fc == 0x2) && (_0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, this['rad']), Math['PI'], 0x2 * Math['PI']), _0x1d2dab['fillStyle'] = this['getOutlineColor'](), _0x1d2dab['fill']()), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x169027), Math['PI'], 0x2 * Math['PI']), _0x1d2dab['fillStyle'] = this['oType'] == _0x16becf ? '#B8413B' : '#CFAD59', _0x1d2dab['fill']();
}
break;
case _0x880a3e: {
    var _0x169027 = 0x2;
    _0x1d2dab['save']();
    var _0x307fae = 0x0;
    if (!_0x44408d && !(_0x31f3fc == 0x2)) {
        var _0xe8f00b = (_0x740c5b - this['spawnTime']) / 0x3e8,
            _0x523475 = 0x2,
            _0x5b499d = 1.5;
        _0x307fae = _0x5b499d * Math['sin'](0x2 * Math['PI'] / _0x523475 * _0xe8f00b);
    }
    _0x1d2dab['fillStyle'] = '#45D157', _0x1d2dab['globalAlpha'] *= 0.93, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.5, -this['rad'] * 0.5 + 0xa * this['rPer'], Math['max'](0x0, this['rad'] * 0.55 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.5, -this['rad'] * 0.5 - 0xa * this['rPer'], Math['max'](0x0, this['rad'] * 0.43 - _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.6, this['rad'] * 0.4, Math['max'](0x0, this['rad'] * 0.48 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.5, this['rad'] * 0.5, Math['max'](0x0, this['rad'] * 0.4 + this['rPer'] - _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['restore']();
    var _0x107d12 = 0x14;
    _0x1d2dab['fillStyle'] = this['getOutlineColor'](), _0x1d2dab['beginPath'](), _0x1d2dab['rect'](-_0x107d12 / 0x2 - _0x169027, -_0x169027, _0x107d12 + _0x169027 * 0x2, this['rad'] * 0.8 + _0x169027 * 0x2), _0x1d2dab['fill'](), _0x1d2dab['fillStyle'] = '#FFCA49', _0x1d2dab['beginPath'](), _0x1d2dab['rect'](-_0x107d12 / 0x2, 0x0 + _0x169027 / 0x2, _0x107d12, this['rad'] * 0.8 - _0x169027 / 0x2), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] * 0.8), Math['PI'], 0x2 * Math['PI']), _0x1d2dab['fillStyle'] = this['getOutlineColor'](), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] * 0.8 - _0x169027), Math['PI'], 0x2 * Math['PI']), _0x1d2dab['fillStyle'] = '#B8413B', _0x1d2dab['fill']();
}
break;
case _0x1b2158: {
    var _0xd0fc09 = this['getSkinImageObj']('img/lillypad' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0xd0fc09) {
        var _0x21a287 = this['rad'];
        _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0xd0fc09, -_0x21a287, -_0x21a287, 0x2 * _0x21a287, 0x2 * _0x21a287);
    }
}
break;
case _0x2c5edd: {
    console['log']('ERROR: ' + this + ' should be subclassed!');
}
break;
case _0x46fb5b:
case _0x40ef1a: {
    var _0x1204be = this['curBiome'] == _0x1c3cf7 ? '#e0e0e0' : '#9F8641',
        _0xec8724 = this['curBiome'] == _0x1c3cf7 ? '#878787' : '#7E6A35',
        _0x1c393d = this['curBiome'] == _0x1c3cf7 ? '#666666' : '#5C4E28',
        _0x519333 = this['curBiome'] == _0x1c3cf7 ? '#434343' : '#40371D';
    if (this['curBiome'] != _0x1c3cf7) this['drawOutlinedCircleRad']('', _0x1204be, this['innerRad']);
    else _0x444e67(0x0 + this['rPer'], 0x1, Math['max'](0x0, this['innerRad']), _0x1204be);
    !(_0x31f3fc == 0x2) && _0x444e67(0x0 - this['rPer'], 0x0 - this['rPer'], Math['max'](0x0, this['innerRad'] - 0x7), _0xec8724);
    _0x444e67(0x0 + this['rPer'], 0x1, Math['max'](0x0, this['innerRad'] - 0xe), _0x1c393d), _0x444e67(0x0 - this['rPer'] * 0x2 - 0x3, 0x1, Math['max'](0x0, this['innerRad'] - 18.5), _0x519333);
    var _0x26ab1f = _0x3c55ea[_0x2fc9ba];
    if (_0x26ab1f && _0x26ab1f['lastHidingHoleID'] == this['id']) {
        if (this['alpha'] == undefined) this['alpha'] = 0x0;
        _0x26ab1f['flag_inHidingHole'] ? this['alpha'] += (0.1 + this['alpha']) * 0.1 : this['alpha'] -= this['alpha'] * 0.1;
        if (this['alpha'] > 0x1) this['alpha'] = 0x1;
        else this['alpha'] < 0x0 && (this['alpha'] = 0x0);
        _0x1d2dab['globalAlpha'] = this['alpha'];
        var _0xa38a41 = this['rad'];
        if (this['curBiome'] != _0x1c3cf7) this['drawOutlinedCircleRad']('', _0x1204be, _0xa38a41);
        else _0x444e67(0x0, 0x0, Math['max'](0x0, _0xa38a41), _0x1204be);
        _0x444e67(0x0 - this['rPer'], 0x0 - this['rPer'], Math['max'](0x0, _0xa38a41 - 0x7), _0xec8724), _0x444e67(0x0 + this['rPer'], 0x1, Math['max'](0x0, _0xa38a41 - 0xc), _0x1c393d), _0x1d2dab['globalAlpha'] = this['alpha'] * 0.7, _0xa38a41 = _0xa38a41 * 0.7, _0x444e67(0x0 - this['rPer'], 0x0 - this['rPer'], Math['max'](0x0, _0xa38a41 - 0x7), _0x519333), _0xa38a41 = _0xa38a41 * 0.5, _0x1d2dab['globalAlpha'] = this['alpha'] * 0.3, _0x444e67(0x0 - this['rPer'], 0x0 - this['rPer'], Math['max'](0x0, _0xa38a41), _0x519333);
    }
}
break;
case _0x51b980: {
    var _0x41aa01 = 0x1,
        _0x5d142c = 0x1;
    if (!_0x44408d && !(_0x31f3fc == 0x2)) {
        var _0xe8f00b = (_0x740c5b - this['spawnTime']) / 0x3e8,
            _0x523475 = 1.2;
        _0x41aa01 = 3.5 * Math['cos'](0x2 * Math['PI'] / _0x523475 * _0xe8f00b), _0x5d142c = 2.5 * Math['sin'](0x2 * Math['PI'] / _0x523475 * _0xe8f00b);
    }
    this['drawOutlinedCircleRad']('', '#4A549D', this['innerRad']);
    !(_0x31f3fc == 0x2) && _0x444e67(0x0 + _0x41aa01 / 0x2 - this['rPer'], 0x0 + _0x5d142c / 0x2 - this['rPer'], Math['max'](0x0, this['innerRad'] - 0x6), '#444C8B');
    _0x444e67(0x0 + _0x41aa01 / 4.5 + this['rPer'], 0x1 + _0x5d142c / 1.5, Math['max'](0x0, this['innerRad'] - 0xe), '#4A549D'), _0x444e67(0x0 + _0x41aa01 / 1.5 - this['rPer'] * 0x2, _0x5d142c, Math['max'](0x0, this['innerRad'] - 18.5 + _0x5d142c / 0x5), '#3F4477'), _0x444e67(0x0 + _0x41aa01 / 1.5 - this['rPer'] * 0x2, _0x5d142c, Math['max'](0x0, this['innerRad'] - 22.5 + _0x5d142c / 0xb), '#353860');
    var _0x26ab1f = _0x3c55ea[_0x2fc9ba];
    if (_0x26ab1f && _0x26ab1f['lastHidingHoleID'] == this['id']) {
        if (this['alpha'] == undefined) this['alpha'] = 0x0;
        _0x26ab1f['flag_inHidingHole'] ? this['alpha'] += (0.1 + this['alpha']) * 0.1 : this['alpha'] -= this['alpha'] * 0.1;
        if (this['alpha'] > 0x1) this['alpha'] = 0x1;
        else this['alpha'] < 0x0 && (this['alpha'] = 0x0);
        _0x1d2dab['globalAlpha'] = this['alpha'];
        var _0xa38a41 = this['rad'];
        this['drawOutlinedCircle']('', '#4A549D', _0xa38a41), !(_0x31f3fc == 0x2) && _0x444e67(0x0 + _0x41aa01 / 0x2 - this['rPer'], 0x0 + _0x5d142c / 0x2 - this['rPer'], Math['max'](0x0, _0xa38a41 - 0x6), '#444C8B'), _0x444e67(0x0 + _0x41aa01 / 4.5 + this['rPer'], 0x1 + _0x5d142c / 1.5, Math['max'](0x0, _0xa38a41 - 0xe), '#4A549D'), _0xa38a41 = _0xa38a41 * 0.9, _0x1d2dab['globalAlpha'] = this['alpha'] * 0.6, _0x444e67(0x0 + _0x41aa01 / 3.5 - this['rPer'] * 0x2, _0x5d142c, Math['max'](0x0, _0xa38a41 - 18.5 + _0x5d142c / 0x5), '#3F4477'), _0xa38a41 = _0xa38a41 * 0.7, _0x1d2dab['globalAlpha'] = this['alpha'] * 0.3, _0x444e67(0x0 + _0x41aa01 / 6.5 - this['rPer'] * 0x2, _0x5d142c, Math['max'](0x0, _0xa38a41 - 22.5 + _0x5d142c / 0xb), '#353860');
    }
}
break;
case _0x3c46aa: {
    _0x1d2dab['save']();
    var _0x307fae = 0x0;
    if (!_0x44408d && !(_0x31f3fc == 0x2)) {
        var _0xe8f00b = (_0x740c5b - this['spawnTime']) / 0x3e8,
            _0x523475 = 0x2,
            _0x5b499d = 1.5;
        _0x307fae = _0x5b499d * Math['sin'](0x2 * Math['PI'] / _0x523475 * _0xe8f00b);
    }
    var _0x2364e6 = '#45D157';
    switch (this['curBiome']) {
    case _0x506414:
        _0x2364e6 = '#786810';
        break;
    case _0x1c3cf7:
        _0x2364e6 = '#CED0D0';
        break;
    default:
    case _0x1c453c:
        _0x2364e6 = '#45D157';
        break;
    case _0x49e519:
        _0x2364e6 = '#9b6f31';
        break;
    }
    _0x1d2dab['fillStyle'] = _0x2364e6, _0x1d2dab['globalAlpha'] *= 0.93, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.5, -this['rad'] * 0.5 + 0xa * this['rPer'], Math['max'](0x0, this['rad'] * 0.65 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.5, -this['rad'] * 0.5 - 0xa * this['rPer'], Math['max'](0x0, this['rad'] * 0.73 - _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.6, this['rad'] * 0.4, Math['max'](0x0, this['rad'] * 0.78 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.5, this['rad'] * 0.5, Math['max'](0x0, this['rad'] * 0.6 + this['rPer'] - _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['restore']();
}
break;
case _0x2ae105: {
    _0x1d2dab['save']();
    if (!(_0x31f3fc == 0x2)) _0x1d2dab['rotate'](this['rPer'] * 0x2 * Math['PI']);
    var _0x307fae = 0x0,
        _0xe8f00b = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x523475 = 0x6,
        _0x5b499d = 1.5;
    _0x307fae = _0x5b499d * Math['sin'](0x2 * Math['PI'] / _0x523475 * _0xe8f00b);
    var _0x169027 = 0x4;
    _0x1d2dab['fillStyle'] = '#604729', _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), !(_0x31f3fc == 0x2) && (_0x1d2dab['fillStyle'] = '#8A681B', _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x169027 + _0x307fae), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath']()), _0x1d2dab['restore']();
}
break;
case _0x2d32ab: {
    _0x1d2dab['save']();
    if (!(_0x31f3fc == 0x2)) _0x1d2dab['rotate'](this['rPer'] * 0x2 * Math['PI']);
    var _0x307fae = 0x0,
        _0xe8f00b = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x523475 = 0x6,
        _0x5b499d = 1.5;
    _0x307fae = _0x5b499d * Math['sin'](0x2 * Math['PI'] / _0x523475 * _0xe8f00b);
    var _0x169027 = 0x4;
    _0x1d2dab['fillStyle'] = '#605649', _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), !(_0x31f3fc == 0x2) && (_0x1d2dab['fillStyle'] = '#5e4f36', _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x169027 + _0x307fae), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath']()), _0x1d2dab['restore']();
}
break;
case _0x5d2956:
    break;
case _0x2310aa:
case _0x1e8d3a:
case _0xe86ac3:
case _0x57146c:
    break;
case _0x5b3c07:
case _0x8fac97:
    var _0xe8f00b = (_0x740c5b - this['spawnTime']) / 0x3e8;
    _0x1d2dab['save'](), _0x1d2dab['rotate'](this['angle'] + _0x2bcbaa(0xb4)), _0x1d2dab['globalAlpha'] = 0.1 + this['cloudOpacity'];
    var _0xd0fc09 = this['getSkinImageObj']('img/disasters/cloud.png');
    if (_0xd0fc09) {
        var _0x21a287 = this['rad'] * 0x2;
        _0x1d2dab['drawImage'](_0xd0fc09, -_0x21a287, -_0x21a287, 0x2 * _0x21a287, 0x2 * _0x21a287);
    }
    var _0x307fae = 0x0,
        _0x523475 = 0x6,
        _0x5b499d = 0xf;
    _0x307fae = _0x5b499d * Math['sin'](0x2 * Math['PI'] / _0x523475 * _0xe8f00b), _0x1d2dab['globalAlpha'] = 0.1;
    var _0xd0fc09 = this['getSkinImageObj']('img/disasters/cloud1.png');
    if (_0xd0fc09) {
        var _0x21a287 = this['rad'] * 0x2;
        _0x21a287 = Math['max'](0x0, _0x21a287 - 0x5 + _0x307fae), _0x1d2dab['drawImage'](_0xd0fc09, -_0x21a287, -_0x21a287, 0x2 * _0x21a287, 0x2 * _0x21a287);
    }
    _0x1d2dab['restore']();
    break;
case _0x211e4a: {
    _0x1d2dab['save']();
    if (!(_0x31f3fc == 0x2)) _0x1d2dab['rotate'](this['rPer'] * 0x2 * Math['PI']);
    var _0x307fae = 1.5,
        _0x49502 = _0x1170c4('volcano', this['spawnTime']);
    _0x49502 !== undefined && _0x49502 != null && (this['theFrame'] = _0x49502);
    _0x307fae = this['theFrame'];
    var _0x169027 = 0x4;
    _0x1d2dab['fillStyle'] = '#8B7833', _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), !(_0x31f3fc == 0x2) && (_0x1d2dab['fillStyle'] = '#98803A', _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x169027 + _0x307fae), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), this['rad'] > 0x32 && (_0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0xa, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill']())), _0x1d2dab['restore']();
}
break;
case _0x169801: {
    _0x1d2dab['save']();
    if (!(_0x31f3fc == 0x2)) _0x1d2dab['rotate'](this['rPer'] * 0x2 * Math['PI']);
    var _0x307fae = 0x0,
        _0xe8f00b = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x523475 = 0x6,
        _0x5b499d = 1.5;
    _0x307fae = _0x5b499d * Math['sin'](0x2 * Math['PI'] / _0x523475 * _0xe8f00b);
    var _0x169027 = 0x4;
    _0x1d2dab['fillStyle'] = '#8CC3C7', _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), !(_0x31f3fc == 0x2) && (_0x1d2dab['fillStyle'] = '#9DDADE', _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x169027 + _0x307fae), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], this['specType'] == 0x0 ? 0x8 : 0x4, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath']()), _0x1d2dab['restore']();
}
break;
case _0x5ddad8: {
    _0x1d2dab['save']();
    if (!(_0x31f3fc == 0x2)) _0x1d2dab['rotate'](this['rPer'] * 0x2 * Math['PI']);
    var _0x307fae = 0x0;
    if (!_0x44408d && !(_0x31f3fc == 0x2)) {
        var _0xe8f00b = (_0x740c5b - this['spawnTime']) / 0x3e8,
            _0x523475 = 0x4,
            _0x5b499d = 5.5;
        _0x307fae = _0x5b499d * Math['sin'](0x2 * Math['PI'] / _0x523475 * _0xe8f00b);
    }
    var _0x169027 = 0x4;
    _0x1d2dab['fillStyle'] = _0x1b5add, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x1d2dab['fill']();
    if (this['curBiome'] == _0x1c3cf7) _0x1d2dab['fillStyle'] = '#8da0d6';
    else _0x1d2dab['fillStyle'] = _0x201756;
    _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x169027 + _0x307fae), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), !(_0x31f3fc == 0x2) && (_0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x307fae), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], this['specType'] == 0x0 ? 0x8 : 0x4, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill']()), _0x1d2dab['restore']();
}
break;
case _0x54e254: {
    _0x1d2dab['save']();
    if (!(_0x31f3fc == 0x2)) _0x1d2dab['rotate'](this['rPer'] * 0x2 * Math['PI']);
    var _0x307fae = 0x0;
    if (!_0x44408d && !(_0x31f3fc == 0x2)) {
        var _0xe8f00b = (_0x740c5b - _0x365975) / 0x3e8,
            _0x523475 = 0x5,
            _0x5b499d = 5.5;
        _0x307fae = _0x5b499d * Math['sin'](0x2 * Math['PI'] / _0x523475 * _0xe8f00b);
    }
    var _0x169027 = 0x4;
    if (_0x21a71e) {} else _0x1d2dab['fillStyle'] = _0x43c57c, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x169027 + _0x307fae), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), !(_0x31f3fc == 0x2) && (_0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill']());
    _0x1d2dab['restore']();
}
break;
case _0x27ed64: {
    var _0x2dccaf = 0x0;
    if (!_0x44408d && !(_0x31f3fc == 0x2)) {
        var _0xe8f00b = (_0x740c5b - _0x365975) / 0x3e8,
            _0x523475 = 0x5,
            _0x5b499d = -8.5;
        _0x2dccaf = _0x5b499d * Math['sin'](0x2 * Math['PI'] / _0x523475 * _0xe8f00b);
    }
    var _0x27f4ad = 0xa,
        _0x37326d = this['x'] > _0x1f4cd2 / 0x2 ? 0x1 : 0x0;
    if (_0x37326d == 0x1) {
        _0x1d2dab['fillStyle'] = _0x43c57c, _0x1d2dab['fillRect'](-this['rectW'] / 0x2 + _0x2dccaf, -this['rectH'] / 0x2 + _0x2dccaf + _0x27f4ad, this['rectW'] - _0x2dccaf, this['rectH'] - _0x2dccaf - _0x27f4ad), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rectW'] / 0x2 + 0x32, -this['rectH'] / 0x2 + 0x32, 0x46 - _0x2dccaf, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill']();
        var _0x99eec8 = 0x23;
        _0x5c6fe2(-this['rectW'] / 0x2 + _0x99eec8, -this['rectH'] / 0x2 + _0x99eec8, this['rectW'] / 0x2 - _0x99eec8, this['rectH'] / 0x2 - _0x99eec8, this['x'], this['y']);
    } else {
        _0x1d2dab['fillStyle'] = _0x43c57c, _0x2dccaf *= -0x1, _0x1d2dab['fillRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2 - _0x2dccaf + _0x27f4ad, this['rectW'] + _0x2dccaf, this['rectH'] + _0x2dccaf - _0x27f4ad);
        var _0x99eec8 = 0x19;
        _0x5c6fe2(-this['rectW'] / 0x2 + _0x99eec8, -this['rectH'] / 0x2 + _0x99eec8, this['rectW'] / 0x2 - _0x99eec8, this['rectH'] / 0x2 - _0x99eec8, this['x'], this['y']);
    }
}
break;
case _0x126580: {
    _0x1d2dab['fillStyle'] = _0x1b5add;
    var _0x335fff = -this['rectW'] / 0x2,
        _0x4d2ee4 = this['rectW'] / 0x2,
        _0x4dd5f1 = -this['rectH'] / 0x2,
        _0xee3ddf = this['rectH'] / 0x2;
    _0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](_0x335fff, _0x4dd5f1);
    var _0x30ee24 = 0x1e,
        _0x587c8a = [-0xf, 0xa, -0xa, 0xc, 0x0, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
        _0x1898d2 = 0x2d,
        _0x3374ff = 0x0,
        _0x213e70 = _0x1f4cd2 - this['x'],
        _0x128d4f = 0x0 - this['x'],
        _0x1d0dbd = _0x4767f1 - this['y'],
        _0x5bd306 = 0x0 - this['y'],
        _0x4ee03c, _0x25107a = _0x335fff - _0x30ee24;
    for (_0x4ee03c = _0x4dd5f1; _0x4ee03c < _0xee3ddf; _0x4ee03c += _0x1898d2) {
        _0x1d2dab['lineTo'](Math['min'](_0x213e70, Math['max'](_0x128d4f, _0x25107a + _0x587c8a[_0x3374ff])), _0x4ee03c), _0x3374ff = (_0x3374ff + 0x1) % _0x587c8a['length'];
    }
    _0x1d2dab['lineTo'](_0x335fff, _0xee3ddf), _0x4ee03c = _0xee3ddf + _0x30ee24;
    for (_0x25107a = _0x335fff; _0x25107a < _0x4d2ee4; _0x25107a += _0x1898d2) {
        _0x1d2dab['lineTo'](_0x25107a, Math['min'](_0x1d0dbd, Math['max'](_0x5bd306, _0x4ee03c + _0x587c8a[_0x3374ff]))), _0x3374ff = (_0x3374ff + 0x1) % _0x587c8a['length'];
    }
    _0x1d2dab['lineTo'](_0x4d2ee4, _0xee3ddf), _0x25107a = _0x4d2ee4 + _0x30ee24;
    for (_0x4ee03c = _0xee3ddf; _0x4ee03c > _0x4dd5f1; _0x4ee03c -= _0x1898d2) {
        _0x1d2dab['lineTo'](Math['min'](_0x213e70, Math['max'](_0x128d4f, _0x25107a + _0x587c8a[_0x3374ff])), _0x4ee03c), _0x3374ff = (_0x3374ff + 0x1) % _0x587c8a['length'];
    }
    _0x1d2dab['lineTo'](_0x4d2ee4, _0x4dd5f1), _0x4ee03c = _0x4dd5f1 - _0x30ee24;
    for (_0x25107a = _0x4d2ee4; _0x25107a > _0x335fff; _0x25107a -= _0x1898d2) {
        _0x1d2dab['lineTo'](_0x25107a, Math['min'](_0x1d0dbd, Math['max'](_0x5bd306, _0x4ee03c + _0x587c8a[_0x3374ff]))), _0x3374ff = (_0x3374ff + 0x1) % _0x587c8a['length'];
    }
    _0x1d2dab['closePath'](), _0x1d2dab['fill']();
}
break;
case _0x17c220: {
    var _0x2cdcb9 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['fillStyle'] = _0x2e6d6d, _0x1d2dab['fillRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']);
    var _0x99eec8 = 0x23;
    _0x5c6fe2(-this['rectW'] / 0x2 + _0x99eec8, -this['rectH'] / 0x2 + _0x99eec8, this['rectW'] / 0x2 - _0x99eec8, this['rectH'] / 0x2 - _0x99eec8, this['x'], this['y']);
    var _0x2f8b79 = 0xf; {
        _0x1d2dab['fillStyle'] = _0x2e6d6d;
        var _0x335fff = -this['rectW'] / 0x2,
            _0x4d2ee4 = this['rectW'] / 0x2,
            _0x4dd5f1 = -this['rectH'] / 0x2 + 0x3,
            _0xee3ddf = -this['rectH'] / 0x2 - _0x2f8b79;
        _0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](_0x335fff, _0x4dd5f1);
        var _0x30ee24 = 0x0,
            _0x587c8a = [-0xf, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
            _0x1898d2 = 0x3c,
            _0x3374ff = 0x0,
            _0x213e70 = _0x1f4cd2 - this['x'],
            _0x128d4f = 0x0 - this['x'],
            _0x1d0dbd = _0x4767f1 - this['y'],
            _0x5bd306 = 0x0 - this['y'],
            _0x4ee03c, _0x25107a = _0x335fff - _0x30ee24;
        _0x1d2dab['lineTo'](_0x335fff, _0xee3ddf), _0x4ee03c = _0xee3ddf + _0x30ee24;
        for (_0x25107a = _0x335fff; _0x25107a < _0x4d2ee4; _0x25107a += _0x1898d2) {
            _0x1d2dab['lineTo'](_0x25107a, Math['min'](_0x1d0dbd, Math['max'](_0x5bd306, _0x4ee03c + _0x587c8a[_0x3374ff]))), _0x3374ff = (_0x3374ff + 0x1) % _0x587c8a['length'];
        }
        _0x1d2dab['lineTo'](_0x4d2ee4, _0xee3ddf), _0x1d2dab['lineTo'](_0x4d2ee4, _0x4dd5f1), _0x1d2dab['closePath'](), _0x1d2dab['fill']();
    }
}
break;
case _0x3b46a2: {
    var _0x2cdcb9 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['fillStyle'] = '#ececec', _0x1d2dab['fillRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']);
    var _0x335fff = -this['rectW'] / 0x2,
        _0x4d2ee4 = this['rectW'] / 0x2,
        _0x4dd5f1 = this['rectH'] / 0x2 - 0x14,
        _0xee3ddf = this['rectH'] / 0x2;
    snowLandWidth = this['rectW'], snowLandHeight = this['rectH'], _0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](_0x335fff, _0x4dd5f1);
    var _0x30ee24 = 0x14,
        _0x587c8a = [-0xf, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
        _0x1898d2 = 0x3c,
        _0x3374ff = 0x0,
        _0x213e70 = _0x1f4cd2 - this['x'],
        _0x128d4f = 0x0 - this['x'],
        _0x1d0dbd = _0x4767f1 - this['y'],
        _0x5bd306 = 0x0 - this['y'],
        _0x4ee03c, _0x25107a = _0x335fff - _0x30ee24;
    _0x1d2dab['lineTo'](_0x335fff, _0xee3ddf), _0x4ee03c = _0xee3ddf + _0x30ee24;
    for (_0x25107a = _0x335fff; _0x25107a < _0x4d2ee4; _0x25107a += _0x1898d2) {
        _0x1d2dab['lineTo'](_0x25107a, Math['min'](_0x1d0dbd, Math['max'](_0x5bd306, _0x4ee03c + _0x587c8a[_0x3374ff]))), _0x3374ff = (_0x3374ff + 0x1) % _0x587c8a['length'];
    }
    _0x1d2dab['lineTo'](_0x4d2ee4, _0xee3ddf), _0x1d2dab['lineTo'](_0x4d2ee4, _0x4dd5f1), _0x1d2dab['closePath'](), _0x1d2dab['fill']();
    var _0x99eec8 = 0x14;
    _0x5c6fe2(-this['rectW'] / 0x2 + _0x99eec8, -this['rectH'] / 0x2 + _0x99eec8, this['rectW'] / 0x2 - _0x99eec8, this['rectH'] / 0x2 - _0x99eec8, this['x'], this['y']);
}
break;
case _0x141bf4: {
    var _0x2cdcb9 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['fillStyle'] = _0x201756, _0x1d2dab['fillRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']);
    var _0x2f8b79 = 0xf; {
        _0x1d2dab['fillStyle'] = _0x201756;
        var _0x335fff = -this['rectW'] / 0x2,
            _0x4d2ee4 = this['rectW'] / 0x2,
            _0x4dd5f1 = -this['rectH'] / 0x2 + 0x3,
            _0xee3ddf = -this['rectH'] / 0x2 - _0x2f8b79;
        _0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](_0x335fff, _0x4dd5f1);
        var _0x30ee24 = 0x0,
            _0x587c8a = [-0xf, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
            _0x1898d2 = 0x3c,
            _0x3374ff = 0x0,
            _0x213e70 = _0x1f4cd2 - this['x'],
            _0x128d4f = 0x0 - this['x'],
            _0x1d0dbd = _0x4767f1 - this['y'],
            _0x5bd306 = 0x0 - this['y'],
            _0x4ee03c, _0x25107a = _0x335fff - _0x30ee24;
        _0x1d2dab['lineTo'](_0x335fff, _0xee3ddf), _0x4ee03c = _0xee3ddf + _0x30ee24;
        for (_0x25107a = _0x335fff; _0x25107a < _0x4d2ee4; _0x25107a += _0x1898d2) {
            _0x1d2dab['lineTo'](_0x25107a, Math['min'](_0x1d0dbd, Math['max'](_0x5bd306, _0x4ee03c + _0x587c8a[_0x3374ff]))), _0x3374ff = (_0x3374ff + 0x1) % _0x587c8a['length'];
        }
        _0x1d2dab['lineTo'](_0x4d2ee4, _0xee3ddf), _0x1d2dab['lineTo'](_0x4d2ee4, _0x4dd5f1), _0x1d2dab['closePath'](), _0x1d2dab['fill']();
    } {
        _0x1d2dab['fillStyle'] = _0x201756;
        var _0x335fff = -this['rectW'] / 0x2,
            _0x4d2ee4 = this['rectW'] / 0x2,
            _0x4dd5f1 = this['rectH'] / 0x2 - 0x3,
            _0xee3ddf = this['rectH'] / 0x2 + _0x2f8b79;
        _0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](_0x335fff, _0x4dd5f1);
        var _0x30ee24 = 0x0,
            _0x587c8a = [-0xf, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
            _0x1898d2 = 0x3c,
            _0x3374ff = 0x0,
            _0x213e70 = _0x1f4cd2 - this['x'],
            _0x128d4f = 0x0 - this['x'],
            _0x1d0dbd = _0x4767f1 - this['y'],
            _0x5bd306 = 0x0 - this['y'],
            _0x4ee03c, _0x25107a = _0x335fff - _0x30ee24;
        _0x1d2dab['lineTo'](_0x335fff, _0xee3ddf), _0x4ee03c = _0xee3ddf + _0x30ee24;
        for (_0x25107a = _0x335fff; _0x25107a < _0x4d2ee4; _0x25107a += _0x1898d2) {
            _0x1d2dab['lineTo'](_0x25107a, Math['min'](_0x1d0dbd, Math['max'](_0x5bd306, _0x4ee03c + _0x587c8a[_0x3374ff]))), _0x3374ff = (_0x3374ff + 0x1) % _0x587c8a['length'];
        }
        _0x1d2dab['lineTo'](_0x4d2ee4, _0xee3ddf), _0x1d2dab['lineTo'](_0x4d2ee4, _0x4dd5f1), _0x1d2dab['closePath'](), _0x1d2dab['fill']();
    }
    var _0x99eec8 = 0x14,
        _0xd0fc09 = this['getSkinImageObj']('img/riverCurrent' + this['riverSpecT'] + '.png');
    if (_0xd0fc09) {
        var _0x46a409 = -this['rectW'] / 0x2,
            _0x37447a = 0x64,
            _0x5cbe31 = 0x78;
        for (i = 0x0; i < 0x28; i++) {
            var _0x535ed8 = this['riverFlowSpeedX'] * (_0x37447a / _0x5cbe31) * 0x3e8,
                _0x1cb26a = (_0x740c5b - this['spawnTime']) % _0x535ed8 / _0x535ed8,
                _0x1e234e = _0x37447a,
                _0x322ad1 = _0x46a409 + _0x1e234e * _0x1cb26a;
            _0x1d2dab['drawImage'](_0xd0fc09, _0x322ad1, -this['rectH'] / 0x2, _0x37447a, this['rectH']), _0x46a409 += _0x37447a;
        }
    }
}
break;
case _0x20c42c: {
    _0x1d2dab['fillStyle'] = _0x59301f, _0x1d2dab['fillRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']);
    var _0x99eec8 = 0x2d;
    _0x5c6fe2(-this['rectW'] / 0x2 + _0x99eec8, -this['rectH'] / 0x2 + _0x99eec8, this['rectW'] / 0x2 - _0x99eec8, this['rectH'] / 0x2 - _0x99eec8, this['x'], this['y']);
}
break;
case _0x2bcc5d: {
    var _0x271e54 = this['curBiome'] == _0x49e519 ? _0x13aeaa : _0x4cf5b7;
    if (_0x21a71e) _0x444e67(0x0, 0x0, this['rad'], this['getOutlineColor']());
    else _0x444e67(0x0, 0x0, this['rad'] - 1.5, _0x271e54);
}
break;
case _0x3fcd3a: {
    _0x21a71e ? (_0x1d2dab['fillStyle'] = _0x1b5add, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, this['rad']), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill']()) : (_0x1d2dab['fillStyle'] = '#E4D04C', _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-0x5 + this['rPer'] * 0xa, -0x5 + this['rPer'] * 0xa, this['rad'] * 0.8, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill']());
}
break;
case _0x25f6c6:
    var _0x307fae = 0x0,
        _0xe8f00b = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x1079bb = _0x21d673(_0xe8f00b, 0x1, 0x5, 0x2),
        _0x59ca10 = _0x21d673(_0xe8f00b, 0x1, 0.2, 0x2);
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.5, _0x444e67(0x0, 0x0, this['rad'], _0x3ada2a);
    var _0x20d33e = -(-0.2 + _0x1079bb) * _0x2bcbaa(0x5a);
    _0x1d2dab['save'](), _0x1d2dab['scale'](0x1, 0x1 + _0x59ca10), _0x1d2dab['globalAlpha'] = 0.3, _0x1d2dab['rotate'](_0x20d33e), _0x444e67(0x0, 0x0, this['rad'] - _0x1079bb, '#de9d23'), _0x1d2dab['restore'](), _0x1d2dab['save'](), _0x1d2dab['scale'](0x1 + _0x59ca10, 0x1), _0x1d2dab['globalAlpha'] = 0.1, _0x1d2dab['rotate'](_0x20d33e), _0x444e67(0x0, 0x0, this['rad'] * 0.9 - _0x1079bb, 'yellow'), _0x1d2dab['restore']();
    this['specType'] == 0x1 && (_0x1d2dab['globalAlpha'] = 0.5, _0x444e67(0x0, 0x0, this['rad'], 'white'));
    _0x1d2dab['restore']();
    break;
case _0x34db56:
    var _0x307fae = 0x0,
        _0xe8f00b = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x1079bb = _0x21d673(_0xe8f00b, 0x1, 0x5, 0x2),
        _0x59ca10 = _0x21d673(_0xe8f00b, 0x1, 0.2, 0x2);
    _0x1d2dab['globalAlpha'] = 0.5, _0x444e67(0x0, 0x0, this['rad'], _0x4a8f7b);
    var _0x20d33e = -(-0.2 + _0x1079bb) * _0xa0b20a;
    _0x1d2dab['save'](), _0x1d2dab['scale'](0x1, 0x1 + _0x59ca10), _0x1d2dab['globalAlpha'] = 0.3, _0x1d2dab['rotate'](_0x20d33e), _0x444e67(0x0, 0x0, this['rad'] - _0x1079bb, '#2CAAC4'), _0x1d2dab['restore'](), _0x1d2dab['save'](), _0x1d2dab['scale'](0x1 + _0x59ca10, 0x1), _0x1d2dab['globalAlpha'] = 0.1, _0x1d2dab['rotate'](_0x20d33e), _0x444e67(0x0, 0x0, this['rad'] * 0.9 - _0x1079bb, 'white'), _0x1d2dab['restore']();
    break;
case _0x560b30: {
    var _0x2f0963 = this['curBiome'] == _0x1c3cf7 ? '#8fa4e0' : _0x4a8f7b;
    if (this['specType'] == 0x1 && _0x2960fc == _0x5af7f2) {
        _0x1d2dab['save'](), _0x444e67(0x0, 0x0, this['rad'], _0x22bf24), _0x1d2dab['restore'](), _0x1d2dab['save']();
        var _0x169027 = 1.5;
        _0x444e67(0x0, 0x0, Math['max'](0x0, this['rad'] - _0x169027), _0x2f0963), _0x1d2dab['restore']();
    } else this['drawOutlinedCircle']('', _0x2f0963);
}
break;
case _0x265e5d:
case _0x442835: {
    var _0xd0fc09 = this['getSkinImageObj']('img/snowball.png');
    if (_0xd0fc09) {
        var _0x21a287 = this['rad'];
        _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0xd0fc09, -_0x21a287, -_0x21a287, 0x2 * _0x21a287, 0x2 * _0x21a287);
    } else this['drawOutlinedCircle']('', 'white');
}
break;
case _0x2f5713: {}
break;
case _0x3590f9: {
    _0x1d2dab['save'](), _0x444e67(0x0, 0x0, this['rad'], !this['isEdibleOutlined']() ? _0x3b949e(this['curBiome']) : _0x4c4d1f), _0x444e67(0x0, 0x0, Math['max'](0x0, this['rad'] - 0x2), _0x4a8f7b), _0x1d2dab['restore'](), _0x1d2dab['save']();
    var _0x523475 = 1.2,
        _0x4a4880 = 0.3,
        _0x1aa346 = 0.7,
        _0x322ba4 = 0.5 * (_0x1aa346 - _0x4a4880);
    _0x1d2dab['globalAlpha'] *= _0x4a4880 + _0x322ba4 + _0x322ba4 * Math['sin'](0x2 * Math['PI'] / _0x523475 * ((_0x740c5b - this['spawnTime']) / 0x3e8)), _0x1d2dab['globalAlpha'] *= this['effA_poison'];
    var _0xb75ead = 2.6;
    _0x444e67(0x0, 0x0, this['rad'] + _0xb75ead, '#7FF600'), _0x1d2dab['restore']();
}
break;
case _0x4c771c: {
    _0x1d2dab['save']();
    var _0x5cffda = this['speciesType'];
    if (this['speciesType'] == 0xc8) _0x5cffda = _0x5cffda + '/' + this['speciesSubType'];
    var _0x10f3b5 = 'skins/volcano/phoenix/' + _0x5cffda + '/firetornado.png',
        _0x3cff7a = this['speciesType'] === 0x1 || this['speciesType'] === 0x2 || this['speciesType'] === 0xc8 ? 0x1 : this['mopeSeasonID'],
        _0xbb9fdf = this['getSkinImageObjForSeason'](_0x10f3b5, _0x3cff7a);
    if (_0xbb9fdf) {
        var _0x21a287 = this['rad'],
            _0x5179f2 = 0x3c / 0x3c,
            _0x53b144 = 0x3e8 / _0x5179f2,
            _0x1cb26a = (_0x740c5b - this['spawnTime']) % _0x53b144 / _0x53b144,
            _0x46875a = _0x1cb26a * 0x2 * Math['PI'],
            _0x5179f2 = 0x1e / 0x3c,
            _0x53b144 = 0x3e8 / _0x5179f2,
            _0x1cb26a = (_0x740c5b - this['spawnTime']) % _0x53b144 / _0x53b144,
            _0x1f333d = _0x1cb26a * 0x2 * Math['PI'];
        _0x1d2dab['save'](), _0x1d2dab['rotate'](_0x46875a);
        var _0x1e6321 = _0x1d2dab['globalAlpha'];
        _0x1d2dab['globalAlpha'] = 0x1 * _0x1e6321;
        var _0xe8f00b = (_0x740c5b - this['spawnTime']) / 0x3e8,
            _0x523475 = 2.2,
            _0x41aa01 = 6.5 * Math['cos'](0x2 * Math['PI'] / _0x523475 * _0xe8f00b),
            _0x5d142c = 6.5 * Math['sin'](0x2 * Math['PI'] / _0x523475 * _0xe8f00b);
        _0x1d2dab['globalAlpha'] = 0x1, _0x1d2dab['drawImage'](_0xbb9fdf, -_0x21a287 - _0x41aa01 / 2.2, -_0x21a287, 0x2 * _0x21a287, 0x2 * _0x21a287), _0x1d2dab['restore'](), _0x1d2dab['save'](), _0x1d2dab['rotate'](_0x1f333d), _0x1d2dab['drawImage'](_0xbb9fdf, -_0x21a287 - _0x41aa01 / 2.2, -_0x21a287, 0x2 * _0x21a287, 0x2 * _0x21a287), _0x1d2dab['restore']();
    }
    _0x1d2dab['restore']();
}
break;
case _0x13c2ff: {
    var _0x523475 = 0x1,
        _0x4a4880 = 0.15,
        _0x1aa346 = 0.8,
        _0x322ba4 = 0.5 * (_0x1aa346 - _0x4a4880),
        _0x1dd2f8 = _0x4a4880 + _0x322ba4 + _0x322ba4 * Math['sin'](0x2 * Math['PI'] / _0x523475 * (_0x740c5b / 0x3e8));
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] *= _0x1dd2f8, _0x444e67(0x0, 0x0, Math['max'](0x0, this['rad']), '#F6EA65'), _0x1d2dab['restore']();
    var _0x523475 = 0x1,
        _0x4a4880 = 0.85,
        _0x1aa346 = 0x1,
        _0x322ba4 = 0.5 * (_0x1aa346 - _0x4a4880),
        _0x468012 = _0x4a4880 + _0x322ba4 + _0x322ba4 * Math['sin'](0x2 * Math['PI'] / _0x523475 * (_0x740c5b / 0x3e8)),
        _0x25d500 = Math['trunc'](_0x740c5b / 0x12c) % 0x2,
        _0x3cff7a = this['animalType'] === 0xe && (this['speciesType'] === 0x1 || this['speciesType'] === 0x2 || this['speciesType'] === 0x3 || this['speciesType'] === 0x64 || this['speciesType'] === 0xc8 || this['speciesType'] === 0xc9 || this['speciesType'] === 0xcc || this['speciesType'] === 0x3e9 || this['speciesType'] === 0x10f2c) ? 0x1 : this['mopeSeasonID'],
        _0xd0fc09 = this['getSkinImageObjForSeason'](_0x25d500 == 0x1 ? 'img/fire.png' : 'img/fire2.png', _0x3cff7a);
    if (_0xd0fc09) {
        var _0x4300af = 0x0,
            _0x178255 = this['rad'] * 0.3,
            _0x6d2b9b = this['rad'] * 0x2 * (0x2 + _0x468012 * 0x2) / 0x3,
            _0x10af88 = this['rad'] * 0x2 * _0x468012,
            _0x215f60 = 0.5,
            _0x38d633 = 0.95;
        _0x1d2dab['save'](), _0xd0fc09 && (_0x1d2dab['globalAlpha'] *= this['onFireEffA'] * _0x468012, _0x1d2dab['drawImage'](_0xd0fc09, _0x4300af + _0x6d2b9b * -_0x215f60, _0x178255 + _0x10af88 * -_0x38d633, _0x6d2b9b, _0x10af88)), _0x1d2dab['restore']();
    }
}
break;
case _0x4ad968: {}
break;
default: {
    if (this['isRectangle']) _0x1d2dab['fillStyle'] = 'black', _0x1d2dab['fillRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']), this['drawOutlinedCircle']('(make this rect obj invisible on server?)', 'black');
    else this['drawOutlinedCircle']('(make this obj invisible on server?)', 'black');
}
break;
}
}, _0x131218['prototype']['beforeCustomDraw'] = function () {}, _0x131218['prototype']['afterCustomDraw'] = function () {}, _0x131218['prototype']['drawImage'] = function (_0x37ee76, _0x1e57cd, _0x14edea, _0x2091e9, _0x35eee5, _0x51b3eb) {
if (_0x51b3eb !== undefined) _0x1d2dab['rotate'](_0x51b3eb);
_0x1d2dab['drawImage'](_0x37ee76, _0x1e57cd, _0x14edea, _0x2091e9, _0x35eee5);
}, _0x131218['prototype']['drawTranslate'] = function () {
_0x1d2dab['translate'](this['x'], this['y']);
}, _0x131218['prototype']['drawScaleEffect'] = function () {}, _0x131218['prototype']['setSkinPath'] = function () {
var _0x2e058c = this['isEdibleOutlined']() ? 'e' : this['oType'];
_0x2e058c = this['getBiomeSkin'](_0x2e058c), _0x2e058c = 'gameobj/' + this['oType'] + this['getObjSpecies']() + '/' + _0x2e058c + '.png', this['objSkinPath'] = _0x2e058c;
}, _0x131218['prototype']['draw'] = function (_0x36f2a6) {
this['moveUpdF'] = this['moveUpdate']();
if (this['objSkinPath'] == null) this['setSkinPath']();
this['beforeCustomDraw'](), _0x1d2dab['save'](), this['drawTranslate'](), this['drawScaleEffect']();
var _0x5a6dd7 = this['getOutlineColor'](),
    _0x3421b2 = 0x2;
if (this['dead']) _0x1d2dab['globalAlpha'] *= 0x1 - this['moveUpdF'];
else _0x1d2dab['globalAlpha'] *= Math['min'](0x1, (_0x740c5b - this['spawnTime']) / (_0x161edc * 0x3e8));
this['customDraw'](_0x36f2a6), this['flag_hurt'] && this['onHurt'](), this['drawHealthBar'](), _0x1d2dab['restore'](), this['afterCustomDraw']();
}, _0x131218['prototype']['onHurt'] = function () {
_0x1d2dab['fillStyle'] = 'rgba(255,0,0,0.3)', _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, this['rad']), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill']();
}, _0x131218['prototype']['drawHealthBar'] = function () {
_0x1d2dab['save']();
var _0x7e9653 = _0x740c5b < this['hpBarTimeoutT'] ? 0x1 : 0x0;
this['hpBarA'] += (_0x7e9653 - this['hpBarA']) * 0.04;
if (this['hpBarA'] > 0.001) {
    this['hpPer'] += (this['hpPer_n'] - this['hpPer']) * 0.1;
    var _0x4b8feb = Math['max'](0x1, this['rad'] / 0x19),
        _0x4e165c = 0x14 * _0x4b8feb,
        _0x52d0fb = 0x5 * _0x4b8feb,
        _0x348be2 = 0x0,
        _0x481ef1 = -this['rad'] - 0xa * _0x4b8feb;
    _0x1d2dab['globalAlpha'] *= this['hpBarA'], _0x1d2dab['fillStyle'] = 'rgba(0,0,0,0.35)', _0x1d2dab['fillRect'](_0x348be2 - _0x4e165c / 0x2, _0x481ef1 - _0x52d0fb / 0x2, _0x4e165c, _0x52d0fb), _0x1d2dab['fillStyle'] = '#16D729', _0x1d2dab['fillRect'](_0x348be2 - _0x4e165c / 0x2, _0x481ef1 - _0x52d0fb / 0x2, _0x4e165c * (this['hpPer'] / 0x64), _0x52d0fb);
}
_0x1d2dab['restore'](), this['drawInfectionBar']();
};
var _0x37f2cf = 0x5;
_0x131218['prototype']['drawInfectionBar'] = function () {
if (this['flag_underWater']) return;
var _0x17d87f = _0x740c5b < this['infectionBarTimeoutT'] ? 0x1 : 0x0;
this['infectionBarA'] += (_0x17d87f - this['infectionBarA']) * 0.04, this['infectionBarA'] > 0.001 && (this['infectionPer'] += (this['infectionPer_n'] - this['infectionPer']) * 0.1, this['drawBar']('red', this['infectionBarA'], this['infectionPer'], 0x2, 6.5));
}, _0x131218['prototype']['drawBar'] = function (_0x4c1e00, _0x34751f, _0xd1813f, _0x384a6a, _0x2c1f72) {
_0x1d2dab['save']();
var _0xfa6daa = Math['max'](0x1, this['rad'] / 0x19),
    _0x9c9f25 = 0x14 * _0xfa6daa;
barH = _0x384a6a * _0xfa6daa;
var _0x7ce560 = 0x0,
    _0x25558a = -this['rad'] - _0x2c1f72 * _0xfa6daa;
_0x1d2dab['globalAlpha'] = 0.3, _0x1d2dab['fillStyle'] = 'rgba(0,0,0,0.35)', _0x1d2dab['fillRect'](_0x7ce560 - _0x9c9f25 / 0x2, _0x25558a - barH / 0x2, _0x9c9f25, barH), _0x1d2dab['globalAlpha'] = _0x34751f, _0x1d2dab['fillStyle'] = _0x4c1e00, _0x1d2dab['fillRect'](_0x7ce560 - _0x9c9f25 / 0x2, _0x25558a - barH / 0x2, _0x9c9f25 * (_0xd1813f / 0x64), barH), _0x1d2dab['restore']();
}, _0x131218['prototype']['drawChat'] = function () {
if (this['chatLines']['length'] < 0x1) return;
_0x1d2dab['save'](), _0x1d2dab['font'] = '10px Arial', _0x1d2dab['lineWidth'] = 0x1, _0x1d2dab['textAlign'] = 'center', _0x1d2dab['textBaseline'] = 'middle';
var _0x289b29 = this['hpBarA'] > 0.01 ? -0xa : 0x0,
    _0xfba061 = [];
for (var _0x533108 = this['chatLines']['length'] - 0x1; _0x533108 >= 0x0; _0x533108--) {
    var _0x28e2c9 = this['chatLines'][_0x533108];
    if (!_0x4a90a3 && _0x28e2c9['chatTxt']['indexOf']('#koa:') > -0x1) continue;
    var _0xa19b45 = (this['chatLines']['length'] - 0x1 - _0x533108) * -0xd + _0x289b29,
        _0x489cfd = _0x740c5b > _0x28e2c9['chatFadeT'] ? 0x0 : 0x1;
    _0x28e2c9['chatA'] += (_0x489cfd - _0x28e2c9['chatA']) * 0.1, _0x1d2dab['shadowOffsetX'] = 0x0, _0x1d2dab['shadowOffsetY'] = 0x0;
    if (_0x28e2c9['chatA'] < 0.02) {
        if (_0x489cfd < 0.02) _0x28e2c9['chatTxt'] = '';
        _0xfba061['push'](_0x533108);
        continue;
    }
    var _0x490611 = _0x1d2dab['measureText'](_0x28e2c9['chatTxt'])['width'],
        _0x34bf44 = 0xa,
        _0x527f96 = 0x1,
        _0x130e52 = 0x1;
    _0x1d2dab['globalAlpha'] = 0.8 * _0x28e2c9['chatA'], _0x1d2dab['fillStyle'] = _0x3b949e(this['curBiome']), _0x1d2dab['fillRect'](this['x'] - _0x527f96 - _0x490611 / 0x2, _0xa19b45 + this['y'] - this['rad'] - 0xa - _0x34bf44 / 0x2 - _0x130e52, _0x490611 + _0x527f96 * 0x2, _0x34bf44 + _0x130e52 * 0x2), _0x1d2dab['fillStyle'] = '#F1C34C', !(_0x31f3fc == 0x2) && (_0x1d2dab['shadowOffsetX'] = 0x1, _0x1d2dab['shadowOffsetY'] = 0x1, _0x1d2dab['shadowColor'] = 'black'), _0x1d2dab['globalAlpha'] = _0x28e2c9['chatA'], _0x1d2dab['fillText'](_0x28e2c9['chatTxt'], this['x'], _0xa19b45 + this['y'] - this['rad'] - 0xa);
}
for (var _0x533108 = 0x0; _0x533108 < _0xfba061['length']; _0x533108++) {
    this['chatLines']['splice'](_0xfba061[_0x533108], 0x1);
}
_0x1d2dab['restore']();
}, _0x131218['prototype']['getOutlineColor'] = function () {
if (this['alwaysPlainOutline']) return _0x4af19c;
if (this['isEdibleOutlined']()) return _0x4c4d1f;
if (this['oType'] == _0x4ad968 && _0x5bcbef[this['animalType'] - 0x1] > 0x0 && this['id'] != _0x2fc9ba) return _0x4fab5f;
var _0x3cba0b = this['curBiome'];
if (this['flag_inWater']) _0x3cba0b = _0x506414;
else {
    if (this['flag_inLava']) return '#c64a00';
}
return _0x3b949e(_0x3cba0b);
}, _0x131218['prototype']['isEdibleOutlined'] = function () {
if (this['oType'] == _0x4ad968) return _0xc475d[this['animalType'] - 0x1] > 0x0 && this['id'] != _0x2fc9ba;
else return _0x359fce[this['oType'] - 0x1] > 0x0;
}, _0x131218['prototype']['gotChat'] = function (_0x4dc0e9) {
if (this['chatLines']) {
    this['chatLines']['push']({
        'chatTxt': _0x4dc0e9,
        'chatFadeT': _0x740c5b + 0xfa0,
        'chatA': 0x0
    });
    if (this['chatLines']['length'] > 0x5) this['chatLines']['splice'](this['chatLines']['length'] - 0x1, 0x1);
}
}, _0x131218['prototype']['drawOutlinedCircle'] = function (_0x45f704, _0x4ecfe4) {
var _0x18afa4 = this['getOutlineColor'](),
    _0x5f3270 = 1.5;
if (!(_0x31f3fc == 0x2 && _0x18afa4 == _0x4af19c)) _0x444e67(0x0, 0x0, this['rad'], _0x18afa4);
_0x444e67(0x0, 0x0, Math['max'](0x0, this['rad'] - _0x5f3270), _0x4ecfe4);
}, _0x131218['prototype']['drawOutlinedCircleRad'] = function (_0x521be9, _0x24b9be, _0x1cb80e) {
var _0x1c6b0c = this['getOutlineColor'](),
    _0x132220 = 1.5;
if (!(_0x31f3fc == 0x2 && _0x1c6b0c == _0x4af19c)) _0x444e67(0x0, 0x0, _0x1cb80e, _0x1c6b0c);
_0x444e67(0x0, 0x0, Math['max'](0x0, _0x1cb80e - _0x132220), _0x24b9be);
}, _0x131218['prototype']['onLerpUpdate'] = function (_0x3eb930) {}, _0x131218['prototype']['moveUpdate'] = function () {
var _0x8ebf6b = (_0x740c5b - this['updateTime']) / 0x3e8 / _0x161edc;
return _0x8ebf6b = 0x0 > _0x8ebf6b ? 0x0 : 0x1 < _0x8ebf6b ? 0x1 : _0x8ebf6b, (this['dead'] || !this['drawMe']) && _0x8ebf6b >= 0x1 && _0x29c845['push'](this), this['onLerpUpdate'](_0x8ebf6b), this['x'] = _0x8ebf6b * (this['nx'] - this['ox']) + this['ox'], this['y'] = _0x8ebf6b * (this['ny'] - this['oy']) + this['oy'], this['rad'] += (this['nRad'] - this['rad']) * 0.1, this['angle'] != undefined && this['lerpAngle'](_0x8ebf6b), Math['min'](0x1, _0x8ebf6b);
}, _0x131218['prototype']['lerpAngle'] = function () {
var _0x30c78b = this['angleDelta'] * 0.1;
this['angleDelta'] -= _0x30c78b, this['angle'] += _0x30c78b;
}, _0x131218['prototype']['readCustomData_onUpdate'] = function (_0xe70ee5) {}, _0x131218['prototype']['readCustomData_onNewlyVisible'] = function (_0x4024e2) {
(this['oType'] == _0x46fb5b || this['oType'] == _0x40ef1a || this['oType'] == _0x51b980) && (this['innerRad'] = _0x4024e2['readUInt16']() / 0x4);
}, _0x131218['prototype']['setObjTypes'] = function (_0x853873, _0x2f91c6) {
this['oType'] = _0x853873;
}, _0x131218['prototype']['clientBatchDraw'] = ![], _0x131218['prototype']['clientBatchDrawID'] = ![], _0x131218['prototype']['worldUpd_readMsgNewlyVisible'] = function (_0x2a0cf1, _0x1b39d8, _0x18e07a) {
this['setObjTypes'](_0x1b39d8, _0x18e07a);
var _0x49b6dd = _0x2a0cf1['readUInt32'](),
    _0x2ae0a1 = _0x2a0cf1['readUInt32']() / 0x4,
    _0x13a38c = _0x2a0cf1['readUInt16']() / 0x4,
    _0x564620 = _0x2a0cf1['readUInt16']() / 0x4;
this['id'] = _0x49b6dd, this['ox'] = this['x'] = this['nx'] = _0x13a38c, this['oy'] = this['y'] = this['ny'] = _0x564620, this['nRad'] = _0x2ae0a1, this['oRad'] = this['rad'] = 0x0;
(_0x1b39d8 == _0x2d32ab || _0x1b39d8 == _0x2ae105 || _0x1b39d8 == _0x211e4a || _0x1b39d8 == _0x169801 || _0x1b39d8 == _0x5ddad8 || _0x1b39d8 == _0x2c5edd || _0x1b39d8 == _0x3ab87a || _0x1b39d8 == _0x2bcc5d || _0x1b39d8 == _0x3ec985 || _0x1b39d8 == _0x3fcd3a) && (this['animateRadOnSpawn'] = ![]);
if (!this['animateRadOnSpawn']) this['oRad'] = this['rad'] = _0x2ae0a1;
var _0x110c6a = _0x2a0cf1['readUInt8']();
this['curBiome'] = _0x110c6a;
this['oType'] != _0x4ad968 && (this['animalType'] = _0x2a0cf1['readUInt16'](), this['speciesType'] = _0x2a0cf1['readUInt16'](), this['speciesSubType'] = _0x2a0cf1['readUInt16']());
var _0x339beb = _0x2a0cf1['readBitGroup'](),
    _0xfa10ca = _0x339beb['getBool'](),
    _0x3858e8 = _0x339beb['getBool'](),
    _0x2dcab1 = _0x339beb['getBool']();
this['clientBatchDraw'] = _0x339beb['getBool'](), this['objGetsAngleUpdate'] = _0x2dcab1;
if (this['clientBatchDraw']) this['clientBatchDrawID'] = _0x2a0cf1['readUInt16']();
var _0x17741e = null;
_0xfa10ca && (_0x17741e = _0x3c55ea[_0x2a0cf1['readUInt32']()]);
_0x17741e && (this['updateTime'] = _0x740c5b, this['nx'] = this['x'], this['ny'] = this['y'], this['ox'] = _0x17741e['x'], this['oy'] = _0x17741e['y'], this['x'] = _0x17741e['x'], this['y'] = _0x17741e['y']);
if (_0x3858e8) this['isRectangle'] = !![], this['rectW'] = _0x2a0cf1['readUInt16'](), this['rectH'] = _0x2a0cf1['readUInt16']();
else {
    var _0x272e32 = _0x2a0cf1['readUInt8']() * 0x2;
    this['updateAngle'](_0x272e32);
}
this['readUpdatedPropertyItem'](_0x423dd4, _0x2a0cf1), this['readUpdatedPropertyItem'](_0x423b56, _0x2a0cf1), this['readCustomData_onNewlyVisible'](_0x2a0cf1);
}, _0x131218['prototype']['setRadius'] = function (_0x53dad9) {
this['rad'] = _0x53dad9;
}, _0x131218['prototype']['easeAngleChanges'] = !![], _0x131218['prototype']['updateAngle'] = function (_0x2080c6) {
var _0x563681 = this['oType'] == _0x2c5edd ? 0xb4 : 0x5a;
if (!this['easeAngleChanges']) this['angle'] = _0x2bcbaa(_0x2080c6 + _0x563681);
else {
    var _0x36effd = _0x2bcbaa(_0x2080c6 + _0x563681);
    this['angleDelta'] = _0x388dd0(this['angle'], _0x36effd), this['oAngle'] = this['angle'], this['firstPosUpd'] && (this['oAngle'] = this['angle'] = _0x36effd, this['angleDelta'] = 0x0);
}
}, _0x131218['prototype']['setMovedToPos'] = function (_0x122ab7, _0x163510) {
this['updateTime'] = _0x740c5b, this['ox'] = this['x'], this['oy'] = this['y'], this['nx'] = _0x122ab7, this['ny'] = _0x163510;
}, _0x131218['prototype']['setNewRad'] = function (_0x1d68d0) {
this['oRad'] = this['rad'], this['nRad'] = _0x1d68d0;
}, _0x131218['prototype']['worldUpd_readMsgUpdate'] = function (_0x51a703) {
var _0x50ccf9 = _0x51a703['readBitGroup']();
this['readUpdatedFlags'](_0x50ccf9);
var _0x7c1d49 = _0x51a703['readUInt8']();
for (var _0x3c23b4 = 0x0; _0x3c23b4 < _0x7c1d49; _0x3c23b4++) {
    var _0x21003a = _0x51a703['readUInt16']();
    this['readUpdatedPropertyItem'](_0x21003a, _0x51a703);
}
this['readCustomData_onUpdate'](_0x51a703), this['firstPosUpd'] = ![];
}, _0x131218['prototype']['readUpdatedPropertyItem'] = function (_0xdc35ef, _0x1fd9c3) {
if (_0xdc35ef == _0x28b268) {
    var _0x1cec93 = _0x1fd9c3['readUInt16']() / 0x4,
        _0x5b25f6 = _0x1fd9c3['readUInt16']() / 0x4;
    this['setMovedToPos'](_0x1cec93, _0x5b25f6);
} else {
    if (_0xdc35ef == _0x2e0743) {
        var _0x4a203f = _0x1fd9c3['readUInt16']() / 0xa;
        this['setNewRad'](_0x4a203f);
    } else {
        if (_0xdc35ef == _0x2eb843) {
            var _0x508609 = _0x1fd9c3['readUInt8']() * 0x2;
            this['updateAngle'](_0x508609);
        } else {
            if (_0xdc35ef == _0x423dd4) this['specType'] = _0x1fd9c3['readUInt8']();
            else {
                if (_0xdc35ef == _0x423b56) this['specType2'] = _0x1fd9c3['readUInt8']();
                else {
                    if (_0xdc35ef == _0xf66be0) {
                        var _0x187af3 = _0x1fd9c3['readUInt8']();
                        this['setHpBar'](_0x187af3);
                    } else {
                        if (_0xdc35ef == _0x16866a) this['curBiome'] = _0x1fd9c3['readUInt8']();
                        else {
                            if (_0xdc35ef == _0x5c25f9) {
                                let _0x1547d4 = _0x1fd9c3['readUInt8']() == 0x1;
                            } else this['readUpdatedProperty'](_0xdc35ef, _0x1fd9c3);
                        }
                    }
                }
            }
        }
    }
}
};
var _0x3d211b = 0x0;
_0x131218['prototype']['readUpdatedFlags'] = function (_0x4a0579) {
this['flag_hurt'] = _0x4a0579['getBool'](), this['flag_flying'] = _0x4a0579['getBool']();
}, _0x131218['prototype']['readUpdatedProperty'] = function (_0x9e5371, _0x242c85) {}, _0x131218['prototype']['setHpBar'] = function (_0x4c98eb) {
this['hpPer_n'] = _0x4c98eb, this['hpBarTimeoutT'] = +new Date() + 0xbb8;
}, _0x131218['prototype']['killerId'] = 0x0, _0x131218['prototype']['worldUpd_readMsgRemovedObj'] = function (_0x2c4493) {
this['killerId'] = _0x2c4493['readUInt8']() > 0x0 ? _0x2c4493['readUInt32']() : 0x0;
var _0x512bfe = this['killerId'] > 0x0 ? _0x3c55ea[this['killerId']] : undefined;
this['dead'] = !![], this['updateTime'] = _0x740c5b;
if (this['oType'] == _0x2c5edd) this['ox'] = this['x'], this['oy'] = this['y'], this['nx'] = this['x'], this['ny'] = this['y'];
else _0x512bfe ? (this['ox'] = this['x'], this['oy'] = this['y'], this['oRad'] = this['rad'], this['nx'] = _0x512bfe['nx'], this['ny'] = _0x512bfe['ny'], this['nRad'] = Math['min'](this['rad'], _0x512bfe['rad']), _0x2fc9ba == this['killerId'] && (this['oType'] == _0x4ad968 && (!_0x5c571c && _0x370b0e('audio/bite.mp3', 0.05, _0xc151f5(0.9, 1.1))), this['oType'] == _0x560b30 || this['oType'] == _0x5d8238 || this['oType'] == _0x34db56 ? !_0x5c571c && _0x370b0e('audio/bloop.mp3', 0.6, _0xc151f5(0.9, 1.1)) : !_0x5c571c && _0x370b0e('audio/nom.mp3', 0.5)), this['hp_n'] = 0x0) : (this['ox'] = this['x'], this['oy'] = this['y'], this['oRad'] = this['rad'], this['nx'] = this['x'], this['ny'] = this['y'], this['nRad'] = 0x0);
this['onRemovedFromGame']();
}, _0x131218['prototype']['updateZ'] = function () {
switch (this['oType']) {
case _0x8fac97:
case _0x5b3c07:
case _0x5d2956:
    this['z'] = 0xf4240;
    break;
case _0x20c42c:
    this['z'] = -0xdc;
    break;
case _0x17c220:
case _0x3b46a2:
    this['z'] = -0xd2;
    break;
case _0x2ae105:
case _0x2d32ab:
    this['z'] = -0xd1;
    break;
case _0x141bf4:
    this['z'] = -0x9e;
    break;
case _0xbfd919:
    this['z'] = -0x8c;
    break;
case _0x3e8ed9:
    this['z'] = -0x97;
    break;
case _0x5ddad8:
case _0x155290:
    this['z'] = -0xa0;
    break;
case _0x126580:
    this['z'] = -0x129;
    break;
case _0x54e254:
    this['z'] = -0x128;
    break;
case _0x27ed64:
    this['z'] = -0x9d;
    break;
case _0x211e4a:
    this['z'] = -0x9e;
    break;
case _0x169801:
    this['z'] = -0x9c;
    break;
case _0x13556a:
    this['z'] = -0x9b;
    break;
case _0x3fcd3a:
    this['z'] = -0x9a;
    break;
case _0x51b980:
    this['z'] = -0x96;
    break;
case _0x40ef1a:
    this['z'] = -0x65;
    break;
case _0x46fb5b:
    this['z'] = -0x64;
    break;
case _0x3e1f7a:
case _0x3bc4a1:
    this['z'] = -0x63;
    break;
case _0x26cd2c:
case _0x3ec985:
    this['z'] = 0x3e8;
    break;
case _0x313fbe:
    this['z'] = 0x3ea;
    break;
case _0x2bcc5d:
    this['z'] = 0x3ea;
    break;
case _0x603ace:
case _0x3ab87a:
    this['z'] = 0x3e7;
    break;
case _0x2f5713:
    this['z'] = 0x3eb;
    break;
case _0x5e7af4:
case _0x141d37:
case _0x3c46aa:
    this['z'] = 0x3ea + this['rad'];
    break;
case _0x25f6c6:
    this['z'] = 0x186af;
    break;
case _0x34db56:
    this['z'] = 0x186af;
    break;
case _0x34cf69:
case _0x9c93d1:
    this['z'] = 0x3f2 + this['rad'];
    this['specType2'] == 0x1 && (this['z'] += 0x3e8);
    break;
case _0x4c771c:
    this['z'] = 0x7d0 + this['rad'];
    break;
case _0x13c2ff:
case _0x3590f9:
    this['z'] = 0x3ee;
    break;
case _0x4ad968:
    break;
default:
    this['z'] = this['rad'];
    break;
}
}, _0x131218['prototype']['updateZ_onTree'] = function (_0x3abeae) {
this['oType'] == _0x4ad968 && this['flag_eff_isOnTree'] && (this['z'] = _0x3abeae + 0x44c);
}, _0x131218['prototype']['showScaleEffectToPlayer'] = function () {
var _0x207c2d = _0x3c55ea[_0x2fc9ba];
if (_0x207c2d && _0x207c2d['flag_inHidingHole'] && _0x207c2d['lastHidingHoleID'] == this['id']) return ![];
return !![];
}, _0x131218['prototype']['calculateZIndex'] = function () {
this['updateZ']();
if (this['oType'] == _0x4ad968) {
    if (this['flag_flying']) {
        this['z'] = 0x186a0;
        this['flag_isGrabbed'] && (this['z'] -= this['rad']);
        if (this['flag_eff_aniInClaws'] || this['flag_usingAbility']) this['z'] += 0x3e8;
    } else {
        if (this['flag_isInArena']) this['z'] = 0x2710 + this['rad'];
        else {
            this['updateZ_onTree'](this['z']);
            if (this['flag_eff_invincible']) this['z'] += 0x3e8;
        }
    }
} else this['updateZ_onTree'](this['z']);
}, _0x131218['prototype']['mopeSeasonID'] = 0x0, _0x131218['prototype']['skinThemeID'] = 0x0, _0x131218['prototype']['getSkinImageObj'] = function (_0x1347fc) {
var _0x23c7aa = './assets/s/' + this['mopeSeasonID'] + '/' + _0x1347fc;
return this['skinThemeID'] > 0x0 && (_0x23c7aa = './assets/t/' + this['skinThemeID'] + '/' + _0x1347fc), _0x5ace1d(_0x23c7aa, function (_0x2197b2) {
    console['log'](_0x2197b2['src']);
});
}, _0x131218['prototype']['getSkinImageObjForSeason'] = function (_0x2e2e5d, _0x24032f) {
!_0x24032f && console['log']('No season for skin: ' + _0x2e2e5d);
var _0x578eac = './assets/s/' + _0x24032f + '/' + _0x2e2e5d;
return this['skinThemeID'] > 0x0 && (_0x578eac = './assets/t/' + this['skinThemeID'] + '/' + _0x2e2e5d), _0x5ace1d(_0x578eac, function (_0xf712e7) {
    console['log'](_0xf712e7['src']);
});
}, _0x131218['prototype']['getObjImageObjForSeason'] = function (_0x1c5a05, _0x1e621f) {
!_0x1e621f && console['log']('No season for skin: ' + _0x1c5a05);
var _0x2e8470 = './assets/s/' + _0x1e621f + '/' + _0x1c5a05;
return _0x5ace1d(_0x2e8470, function (_0x3633a0) {
    console['log'](_0x3633a0['src']);
});
}, _0x131218['prototype']['onRemovedFromGame'] = function () {};

function _0x131218(_0x4b6160) {
this['oType'] = _0x4b6160, this['rPer'] = _0xc151f5(0x0, 0x1), this['spawnTime'] = _0x740c5b, this['updateTime'] = _0x740c5b, this['firstPosUpd'] = !![], this['chatLines'] = [];
switch (this['oType']) {
case _0xdf1a02:
case _0x9c93d1:
case _0x1a6094:
case _0x1f8f67:
case _0x34cf69:
case _0x560b30:
case _0x13c2ff:
case _0x3590f9:
case _0x2f5713:
case _0x3fc0f0:
case _0x16becf:
case _0x1b2158:
case _0x46fb5b:
case _0x51b980:
case _0x40ef1a:
case _0x34725d:
case _0x3f617d:
case _0x5a308b:
case _0x387234:
case _0x24d775:
case _0x37bcb6:
case _0x1ff443:
case _0x5aa030:
case _0xc430c5:
case _0xbac7db:
case _0x3f347c:
case _0x31ad70:
case _0x41ca4e:
case _0x16cf92:
case _0x519ec6:
case _0x22f850:
case _0x135bec:
case _0x26cd2c:
case _0x603ace:
case _0x313fbe:
    this['doesDrawEffectScale'] = !![];
    break;
default:
    break;
}
if (this['oType'] == _0x46fb5b || this['oType'] == _0x40ef1a || this['oType'] == _0x51b980 || this['oType'] == _0x2f5713) this['drawEffectScale_Slow'] = !![];
}
window['GameObj'] = _0x131218;
var _0x2093b7 = _0x113d9b,
_0x1e3c43 = _0x131218;
_0x2093b7['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x2093b7['prototype']['constructor'] = _0x2093b7;

function _0x113d9b() {
this['objs'] = [], this['updateZ'] = function () {
    this['objs']['length'] > 0x0 && (this['objs'][0x0]['updateZ'](), this['z'] = this['objs'][0x0]['z']);
}, this['draw'] = function () {
    for (var _0x3b4128 = 0x0; _0x3b4128 < this['objs']['length']; _0x3b4128++) {
        var _0x28b786 = this['objs'][_0x3b4128];
        _0x28b786['draw'](!![]);
    }
    for (var _0x3b4128 = 0x0; _0x3b4128 < this['objs']['length']; _0x3b4128++) {
        var _0x28b786 = this['objs'][_0x3b4128];
        _0x28b786['draw'](![]);
    }
}, this['addBatchedObj'] = function (_0x7002) {
    this['objs']['length'] == 0x0 && (this['oType'] = _0x7002['oType'], this['objs'] = []), this['objs']['push'](_0x7002);
};
}
window['GameObjBatchDraw'] = _0x113d9b;
var _0xb392ab = 0x1,
_0x48065b = 0x2,
_0x4cff3a = 0x3,
_0x84499b = 0x4,
_0x3136da = 0x5,
_0x12b5f6 = 0x6,
_0x39a5c5 = 0x7,
_0xd7a1f1 = 0x8,
_0x29db26 = 0x9,
_0x189024 = 0xa,
_0x1d3e9a = 0xb,
_0xd3040d = 0xc,
_0x254b52 = 0xd,
_0x20f46e = 0xe,
_0x4c5efa = 0xf,
_0xf5643 = 0x10,
_0x1a993f = 0x11,
_0xab40e7 = 0x12,
_0x2fd73b = 0x13,
_0x46166b = 0x14,
_0x1597d0 = 0x15,
_0x5b8b30 = 0x16,
_0xfbbc5 = 0x17,
_0x526523 = 0x18,
_0x52507b = 0x19,
_0x697285 = 0x1a,
_0x3e9276 = 0x1b,
_0x199c9a = 0x1c,
_0x1bdc24 = 0x1d,
_0x45e678 = 0x1e,
_0x323cb6 = 0x1f,
_0x55a926 = 0x20,
_0xaa5ad2 = 0x21,
_0x4f4705 = 0x22,
_0x236cec = 0x23,
_0x3e89f8 = 0x24,
_0x1fc0ae = 0x25,
_0x575d5b = 0x26,
_0x52ea48 = 0x27,
_0x3dd041 = 0x28,
_0x2cb3a6 = 0x29,
_0x136680 = 0x2a,
_0x40ac2b = 0x2b,
_0xdb1a28 = 0x2c,
_0x3d71a1 = 0x2d,
_0x5b6f26 = 0x2e,
_0x39e9c9 = 0x2f,
_0x39357f = 0x30,
_0x13ad70 = 0x31,
_0x14a18f = 0x32,
_0x17eda1 = 0x33,
_0x4ab048 = 0x34,
_0x47ccac = 0x35,
_0x43c01e = 0x36,
_0x4f8d37 = 0x37,
_0x5041f9 = 0x38,
_0x164f9e = 0x39,
_0x17f2ab = 0x3a,
_0x59ed2f = 0x3b,
_0x49617f = 0x3c,
_0x2350ea = 0x3d,
_0x86f82a = 0x3e,
_0xf59392 = 0x3f,
_0x1b8ac0 = 0x40,
_0x4e8eac = 0x41,
_0x81deb4 = 0x42,
_0x43193 = 0x43,
_0x19e418 = 0x44,
_0x4618bb = 0x45,
_0x380133 = 0x46,
_0x9ca027 = 0x47,
_0x40da91 = 0x48,
_0x31a0ba = 0x49,
_0x3182a5 = 0x4a,
_0x3e06be = 0x4b,
_0x229b87 = 0x4c,
_0x220080 = 0x4d,
_0x588f38 = 0x4e,
_0x19475c = 0x4f,
_0x51f75a = 0x50,
_0x114a7b = 0x51,
_0x353af1 = 0x52,
_0x5b4c32 = 0x53,
_0x441e79 = 0x54,
_0x4336e9 = 0x55,
_0x4fcb93 = 0x56,
_0x490d3d = 0x57,
_0x1be7db = 0x58,
_0x5ef983 = 0x59,
_0x67df53 = 0x5a,
_0x2e0aa9 = 0x5b,
_0x53017e = 0x5c,
_0x1f6369 = 0x5d,
_0x5af7f2 = 0x5e,
_0x16390e = 0x5f,
_0x36b345 = 0x60,
_0x35326e = 0x61,
_0x4ca51a = 0x62,
_0x24c58c = 0x63,
_0x1ed4e2 = 0x64,
_0x24c923 = 0x65,
_0x82a74 = 0x66,
_0xa0dcbc = 0x67,
_0x23619a = 0x68,
_0x4a8972 = 0x69,
_0x363563 = 0x6a,
_0x5ec601 = 0x6b,
_0x286bc1 = 0x6c,
_0x232d17 = 0x6d,
_0x2876ce = 0x6e,
_0xdaf2fe = 0x6f,
_0x232f8b = function (_0x417805) {
    var _0x469ea1 = {};
    switch (_0x417805) {
    case _0x3d71a1:
        _0x469ea1['aniName'] = 'Snail', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'You\'re a super slow snail!', _0x469ea1['aniCol'] = '#fcc02b', _0x469ea1['skinName'] = 'snail';
        break;
    case _0xb392ab:
        _0x469ea1['aniName'] = 'Mouse', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = '', _0x469ea1['aniCol'] = '#9BA9B9', _0x469ea1['skinName'] = 'mouse';
        break;
    case _0x48065b:
        _0x469ea1['aniName'] = 'Rabbit', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to RABBIT! \x0aPress W to burrow a hole to hide in!', _0x469ea1['aniCol'] = '#AA937E', _0x469ea1['skinName'] = 'rabbit';
        break;
    case _0x4cff3a:
        _0x469ea1['aniName'] = 'Pig', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to PIG!\x0a Pigs move FAST through MUD! (Can use \'stink\' on mud/ hiding holes!)', _0x469ea1['aniCol'] = '#DD6BD4', _0x469ea1['skinName'] = 'pig';
        break;
    case _0x84499b:
        _0x469ea1['aniName'] = 'Fox', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to FOX! ,\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!', _0x469ea1['aniCol'] = '#FF9D43', _0x469ea1['skinName'] = 'fox';
        break;
    case _0x3136da:
        _0x469ea1['aniName'] = 'Deer', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to DEER! \x0aPress W to dig up food! \x0aDig in mud for better food!\x0a Hint:Check water areas for new food sources!', _0x469ea1['aniCol'] = '#C4773E', _0x469ea1['skinName'] = 'deer';
        break;
    case _0x12b5f6:
        _0x469ea1['aniName'] = 'Mole', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to MOLE!\x0a Hold W to dig underground!\x0aGo under anything, do surprise attacks!', _0x469ea1['aniCol'] = '#4C4A45', _0x469ea1['skinName'] = 'mole';
        break;
    case _0x39a5c5:
        _0x469ea1['aniName'] = 'Zebra', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to ZEBRA! \x0aPress W to kick side ways!', _0x469ea1['aniCol'] = '#FFFFFF', _0x469ea1['skinName'] = 'zebra';
        break;
    case _0xd7a1f1:
        _0x469ea1['aniName'] = 'Lion', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to LION!\x0a Press W to release a mighty ROAR (Rawr!)!', _0x469ea1['aniCol'] = '#f8c923', _0x469ea1['skinName'] = 'lion';
        break;
    case _0x29db26:
        _0x469ea1['aniName'] = 'CHEETAH', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to CHEETAH!\x0a Press W to get a speed boost! (Every 8 seconds)!', _0x469ea1['aniCol'] = '#CAC05B', _0x469ea1['skinName'] = 'bigcat/cheetah';
        break;
    case _0x189024:
        _0x469ea1['aniName'] = 'Bear', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to BEAR!\x0a Bears climb through green hills! (Press W to use your claw!)', _0x469ea1['aniCol'] = '#99591C', _0x469ea1['skinName'] = 'bear';
        break;
    case _0x1d3e9a:
        _0x469ea1['aniName'] = 'Croc', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to CROCODILE!\x0a Press W to bite and drag around animals! \x0a+ (Now hide in water spots)+ Swim well in Mud, Lakes & Oceans!', _0x469ea1['aniCol'] = '#30F51C', _0x469ea1['skinName'] = 'croc';
        break;
    case _0x254b52:
        _0x469ea1['aniName'] = 'Hippo', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to HIPPO!\x0aHippos are great swimmers, dominate the Lakes/Oceans/Mud!', _0x469ea1['aniCol'] = '#945A99', _0x469ea1['skinName'] = 'hippo';
        break;
    case _0xd3040d:
        _0x469ea1['aniName'] = 'Rhino', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to RHINO!\x0a Press W to CHARGE with your mighty horn!', _0x469ea1['aniCol'] = '#94a3a9', _0x469ea1['skinName'] = 'rhino';
        break;
    case _0x4c5efa:
        _0x469ea1['aniName'] = 'Shrimp', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = '', _0x469ea1['aniCol'] = '#f88e37', _0x469ea1['skinName'] = 'shrimp';
        break;
    case _0xf5643:
        _0x469ea1['aniName'] = 'Trout', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to TROUT!\x0aHint: Hold Left-click to RUN! (Uses extra water)', _0x469ea1['aniCol'] = '#ac8686', _0x469ea1['skinName'] = 'trout';
        break;
    case _0x1a993f:
        _0x469ea1['aniName'] = 'Crab', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to CRAB!\x0a Crabs can survive on dry land!\x0a (On land, Press W to go into your shell!)', _0x469ea1['aniCol'] = '#bf2408', _0x469ea1['skinName'] = 'crab';
        break;
    case _0xab40e7:
        _0x469ea1['aniName'] = 'Squid', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to SQUID!\x0a Squids can use INK when injured (press W!) \x0a+ you can hide in plankton bushes!', _0x469ea1['aniCol'] = '#40dda4', _0x469ea1['skinName'] = 'squid';
        break;
    case _0x2fd73b:
        _0x469ea1['aniName'] = 'Shark', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to SHARK!\x0a A vicious predator of the oceans!', _0x469ea1['aniCol'] = '#999fc6', _0x469ea1['skinName'] = 'shark';
        break;
    case _0x5b8b30:
        _0x469ea1['aniName'] = 'Sea-horse', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to SEA HORSE!\x0a An agile hunter!', _0x469ea1['aniCol'] = '#73BE2F', _0x469ea1['skinName'] = 'seahorse';
        break;
    case _0xfbbc5:
        _0x469ea1['aniName'] = 'Jellyfish', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to JELLYFISH!\x0a A slowly-turning animal that can grow quite large!', _0x469ea1['aniCol'] = '#FDB9BA', _0x469ea1['skinName'] = 'jellyfish';
        break;
    case _0x1597d0:
        _0x469ea1['aniName'] = 'Turtle', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to TURTLE!\x0a Lives well on land & water! (On land, Press W to go into your shell!)', _0x469ea1['aniCol'] = '#502E1A', _0x469ea1['skinName'] = 'turtle';
        break;
    case _0x46166b:
        _0x469ea1['aniName'] = 'Stringray', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to STINGRAY!\x0a Use electic shock (Release W key!) to shock animals! \x0a(Takes time to recharge)', _0x469ea1['aniCol'] = '#164336', _0x469ea1['skinName'] = 'stingray';
        break;
    case _0x526523:
        _0x469ea1['aniName'] = 'The Kraken', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to THE KRAKEN!\x0a Terrorize the oceans, and be feared by all!\x0a (Release W to use whirlpool ability!)', _0x469ea1['aniCol'] = '#64a034', _0x469ea1['skinName'] = 'kraken';
        break;
    case _0x52507b:
        _0x469ea1['aniName'] = 'Pufferfish', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to PUFFERFISH!\x0a (Hold W to inflate- become spiky, and dangerous to touch!)', _0x469ea1['aniCol'] = '#6C5C2C', _0x469ea1['skinName'] = 'pufferfish';
        break;
    case _0x697285:
        _0x469ea1['aniName'] = 'Killer Whale', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to Killer Whale! \x0aWhales blow out water when diving! (And sometimes other loot!)', _0x469ea1['aniCol'] = '#141414', _0x469ea1['skinName'] = 'killerwhale';
        break;
    case _0x3e9276:
        _0x469ea1['aniName'] = 'Swordfish', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to ' + _0x469ea1['aniName'] + '!\x0a (Press W to rush with your sharp nose!)', _0x469ea1['aniCol'] = '#689CD7', _0x469ea1['skinName'] = 'swordfish';
        break;
    case _0x199c9a:
        _0x469ea1['aniName'] = 'Gorilla', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to ' + _0x469ea1['aniName'] + '!\x0a Gorillas are very fast on hills/trees!\x0a Press W to throw bananas! (from trees)', _0x469ea1['aniCol'] = '#323232', _0x469ea1['skinName'] = 'gorilla';
        break;
    case _0x1bdc24:
        _0x469ea1['aniName'] = 'Octopus', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to Octopus!\x0aHold W to use your \'Disguise\' ability!\x0a(Hint: wait for prey to bite you- they get stunned!)', _0x469ea1['aniCol'] = '#ff8340', _0x469ea1['skinName'] = 'octopus';
        break;
    case _0x20f46e:
        _0x469ea1['aniName'] = 'Dragon', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to ' + _0x469ea1['aniName'] + '!\x0a (You\'re amazing!) \x0aFly over everything, Hold W to shoot fire!', _0x469ea1['aniCol'] = '#22FF8A', _0x469ea1['skinName'] = 'dragon';
        break;
    case _0x5b6f26:
        _0x469ea1['aniName'] = 'Black Dragon', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to ' + _0x469ea1['aniName'] + '!\x0a Black dragons drink lava instead of water! Black dragons only heal on healing stones/lava!', _0x469ea1['aniCol'] = 'black', _0x469ea1['skinName'] = 'blackdragon';
        break;
    case _0x4ab048:
        _0x469ea1['aniName'] = 'Giant Spider', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to ' + _0x469ea1['aniName'] + '!\x0a Place web around the game to catch prey!', _0x469ea1['aniCol'] = 'black', _0x469ea1['skinName'] = 'giantSpider';
        break;
    case _0x14a18f:
        _0x469ea1['aniName'] = 'Cobra', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to ' + _0x469ea1['aniName'] + '!\x0a Hold W to Spit venom, and poison animals with your bite!', _0x469ea1['aniCol'] = 'black', _0x469ea1['skinName'] = 'cobra';
        break;
    case _0x17eda1:
        _0x469ea1['aniName'] = 'Boa Constrictor', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to ' + _0x469ea1['aniName'] + '!\x0a Coil and suffocate other animals!', _0x469ea1['aniCol'] = 'black', _0x469ea1['skinName'] = 'boaConstrictor';
        break;
    case _0x47ccac:
        _0x469ea1['aniName'] = 'T-REX', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to ' + _0x469ea1['aniName'] + ' The Dinosaur!\x0a This ancient dinosaur has powerful jaws that can drag prey around!!', _0x469ea1['aniCol'] = '#862A2A', _0x469ea1['skinName'] = 'trex';
        break;
    case _0x43c01e:
        _0x469ea1['aniName'] = 'Tiger', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to Tiger!\x0a Tigers can launch an ambush attack (HOLD W to grow a bush) Release to attack!', _0x469ea1['aniCol'] = '#FF9000', _0x469ea1['skinName'] = 'tiger';
        break;
    case _0x4f8d37:
        _0x469ea1['aniName'] = 'Giraffe', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to Giraffe!\x0aGiraffe have huge legs and stomp anyone in their way!', _0x469ea1['aniCol'] = '#E9BD23', _0x469ea1['skinName'] = 'giraffe';
        break;
    case _0x5041f9:
        _0x469ea1['aniName'] = 'Eagle', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to Eagle!\x0aEagles can fly up other animals in the air! !\x0a', _0x469ea1['aniCol'] = '#5b400d', _0x469ea1['skinName'] = 'eagle';
        break;
    case _0x2cb3a6:
        _0x469ea1['aniName'] = 'Arctic Fox', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to ' + _0x469ea1['aniName'] + '!\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!', _0x469ea1['aniCol'] = '#CFCFCF', _0x469ea1['skinName'] = 'arctic/arcticfox';
        break;
    case _0x323cb6:
        _0x469ea1['aniName'] = 'Arctic Hare', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to ' + _0x469ea1['aniName'] + '!\x0a \x0aPress W to burrow a hole to hide in!', _0x469ea1['aniCol'] = '#D5D5D5', _0x469ea1['skinName'] = 'arctic/arctichare';
        break;
    case _0x55a926:
        _0x469ea1['aniName'] = 'The Yeti!', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to ' + _0x469ea1['aniName'] + '!\x0a So it really exists... \x0a Hold W to turn into snow, release W to freeeeeze!', _0x469ea1['aniCol'] = '#839eb5', _0x469ea1['skinName'] = 'arctic/yeti';
        break;
    case _0xaa5ad2:
        _0x469ea1['aniName'] = 'Chipmunk', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = '', _0x469ea1['aniCol'] = '#A77C30', _0x469ea1['skinName'] = 'arctic/chipmunk';
        break;
    case _0x4f4705:
        _0x469ea1['aniName'] = 'Muskox', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to ' + _0x469ea1['aniName'] + '!\x0a Press W to charge with your horns! \x0aPlus move decently on ice!', _0x469ea1['aniCol'] = '#231f18', _0x469ea1['skinName'] = 'arctic/muskox';
        break;
    case _0x236cec:
        _0x469ea1['aniName'] = 'Penguin', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to ' + _0x469ea1['aniName'] + '!\x0a Left-click to run!\x0a (HOLD W to slide FAST on ice)!', _0x469ea1['aniCol'] = '#FFFFFF', _0x469ea1['skinName'] = 'arctic/penguin';
        break;
    case _0x3e89f8:
        _0x469ea1['aniName'] = 'Polar Bear', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to ' + _0x469ea1['aniName'] + '!\x0a Polar bears can climb hills! \x0a+ They\'re amazing swimmers!', _0x469ea1['aniCol'] = '#e4e4e4', _0x469ea1['skinName'] = 'arctic/bear/bear';
        break;
    case _0x1fc0ae:
        _0x469ea1['aniName'] = 'Seal', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to ' + _0x469ea1['aniName'] + '!\x0a Seals can slide on ice (Hold W) + can climb hills (rocks too!)', _0x469ea1['aniCol'] = '#cfcfcf', _0x469ea1['skinName'] = 'arctic/seal';
        break;
    case _0x575d5b:
        _0x469ea1['aniName'] = 'Snow leopard', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to ' + _0x469ea1['aniName'] + '!\x0a Press W to get a speed boost! (Every 8 seconds)!', _0x469ea1['aniCol'] = '#cfcfcf', _0x469ea1['skinName'] = 'arctic/snowleopard';
        break;
    case _0x52ea48:
        _0x469ea1['aniName'] = 'Walrus', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to ' + _0x469ea1['aniName'] + '!\x0a You can slide on ice (Hold W) + can climb hills (rocks too!)', _0x469ea1['aniCol'] = '#633838', _0x469ea1['skinName'] = 'arctic/walrus';
        break;
    case _0x3dd041:
        _0x469ea1['aniName'] = 'Reindeer', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to ' + _0x469ea1['aniName'] + '!\x0a Press W to dig up food! \x0a Your sharp hooves let you turn very well on ice!', _0x469ea1['aniCol'] = '#a68976', _0x469ea1['skinName'] = 'arctic/reindeer';
        break;
    case _0x45e678:
        _0x469ea1['aniName'] = 'Wolf', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to ' + _0x469ea1['aniName'] + '!\x0a Wolf paws turn very well on ice!\x0a Press W to howl!', _0x469ea1['aniCol'] = '#6B6B6B', _0x469ea1['skinName'] = 'arctic/wolf';
        break;
    case _0x136680:
        _0x469ea1['aniName'] = 'Wolverine', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to ' + _0x469ea1['aniName'] + '!\x0a Press W to Let out a Powerful GROWL! (Knocks back prey!)', _0x469ea1['aniCol'] = '#843A0F', _0x469ea1['skinName'] = 'arctic/wolverine';
        break;
    case _0x40ac2b:
        _0x469ea1['aniName'] = 'Mammoth', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to ' + _0x469ea1['aniName'] + '!\x0a Press W to roll snowballs with your trunk!\x0a The bigger the snowball gets, the longer the freeze!', _0x469ea1['aniCol'] = '#9d4717', _0x469ea1['skinName'] = 'arctic/mammoth';
        break;
    case _0xdb1a28:
        _0x469ea1['aniName'] = 'Donkey', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to ' + _0x469ea1['aniName'] + '!\x0a Press W to Kick any animal behind you', _0x469ea1['aniCol'] = '#8c7c64', _0x469ea1['skinName'] = 'donkey';
        break;
    case _0x39e9c9:
        _0x469ea1['aniName'] = 'Sabertooth Tiger', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to Sabertooth Tiger!\x0aSabertooth Tigers are great swimmers, dominate the Lakes/Oceans/Mud!', _0x469ea1['aniCol'] = '#945A99', _0x469ea1['skinName'] = 'sabertoothtiger';
        break;
    case _0x39357f:
        _0x469ea1['aniName'] = 'Elephant', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to ' + _0x469ea1['aniName'] + '!\x0a Use your long trunk to attack and eat food!', _0x469ea1['aniCol'] = '#945A99', _0x469ea1['skinName'] = 'elephant';
        break;
    case _0x13ad70:
        _0x469ea1['aniName'] = 'Blue Whale', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to Blue Whale!\x0a Smash with your powerful tail!', _0x469ea1['aniCol'] = '#945A99', _0x469ea1['skinName'] = 'bluewhale';
        break;
    case _0x59ed2f:
        _0x469ea1['aniName'] = 'Duckling', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to a DUCK!', _0x469ea1['aniCol'] = '#FF9000', _0x469ea1['skinName'] = 'duck/duckling';
        break;
    case _0x164f9e:
        _0x469ea1['aniName'] = 'Hedgehog', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to Hedgehog!\x0a (Hold W to become spiky, and dangerous to touch!)', _0x469ea1['aniCol'] = '#5b400d', _0x469ea1['skinName'] = 'hedgehog';
        break;
    case _0x2350ea:
        _0x469ea1['aniName'] = 'King Crab', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to a KING CRAB!', _0x469ea1['aniCol'] = '#971f0e', _0x469ea1['skinName'] = 'kingcrab';
        break;
    case _0x49617f:
        _0x469ea1['aniName'] = 'Lemming', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = '', _0x469ea1['aniCol'] = '#A77C30', _0x469ea1['skinName'] = 'arctic/lemming';
        break;
    case _0x86f82a:
        _0x469ea1['aniName'] = 'Frog', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to Frog!!', _0x469ea1['aniCol'] = '#FF9000', _0x469ea1['skinName'] = 'frog/frog';
        break;
    case _0xf59392:
        _0x469ea1['aniName'] = 'Ostrich', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to Ostrich! Lay eggs to hatch babies! \x0aCommand babies by placing your crosshair (right-click/W)-\x0a They can attack prey!', _0x469ea1['aniCol'] = '#FF9000', _0x469ea1['skinName'] = 'ostrich/ostrich';
        break;
    case _0x1b8ac0:
        _0x469ea1['aniName'] = 'Pelican', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to Pelican! \x0aPick up water (and prey!) in your mouth,\x0afly, and drop water on prey! (press W again)', _0x469ea1['aniCol'] = '#FF9000', _0x469ea1['skinName'] = 'pelican/pelican';
        break;
    case _0x4e8eac:
        _0x469ea1['aniName'] = 'Falcon', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to Falcon! \x0aFly, and do a powerful dive attack! Aim it well.', _0x469ea1['aniCol'] = '#FF9000', _0x469ea1['skinName'] = 'falcon/falcon';
        break;
    case _0x81deb4:
        _0x469ea1['aniName'] = 'Snowy Owl', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to Snowy Owl!\x0a Aim the crosshair, \x0a right click/W when it\'s on top of prey, to attack!', _0x469ea1['aniCol'] = '#FF9000', _0x469ea1['skinName'] = 'snowyowl/snowyowl';
        break;
    case _0x4618bb:
        _0x469ea1['aniName'] = 'Baby Ostrich', _0x469ea1['aniDesc'] = '', _0x469ea1['upgradeText'] = 'UPGRADED to Baby Ostrich!!', _0x469ea1['aniCol'] = '#FF9000', _0x469ea1['skinName'] = 'ostrich/baby-ostrich';
        break;
    case _0x19e418:
        _0x469ea1['aniName'] = 'Phoenix', _0x469ea1['upgradeText'] = 'UPGRADED to Phoenix!\x0aCreate powerful fire tornados to burn your enemies alive!', _0x469ea1['aniCol'] = '#FF9000', _0x469ea1['skinName'] = 'phoenix/phoenix';
        break;
    case _0x380133:
        _0x469ea1['aniName'] = 'Sea Monster', _0x469ea1['upgradeText'] = 'UPGRADED to Sea Monster!', _0x469ea1['aniCol'] = '#FF9000', _0x469ea1['skinName'] = 'seamonster';
        break;
    case _0x9ca027:
        _0x469ea1['aniName'] = 'Land Monster', _0x469ea1['upgradeText'] = 'UPGRADED to Land Monster!', _0x469ea1['aniCol'] = '#FF9000', _0x469ea1['skinName'] = 'landmonster';
        break;
    case _0x40da91:
        _0x469ea1['aniName'] = 'Ice Monster', _0x469ea1['upgradeText'] = 'UPGRADED to Ice Monster!', _0x469ea1['aniCol'] = '#FF9000', _0x469ea1['skinName'] = 'icemonster';
        break;
    case _0x31a0ba:
        _0x469ea1['aniName'] = 'Dino Monster', _0x469ea1['upgradeText'] = 'UPGRADED to Dino Monster!', _0x469ea1['aniCol'] = '#FF9000', _0x469ea1['skinName'] = 'dinomonster';
        break;
    case _0x3182a5:
        _0x469ea1['aniName'] = 'Pigeon', _0x469ea1['upgradeText'] = 'UPGRADED to Pigeon!\x0aHold W to fly around. ', _0x469ea1['aniCol'] = '#FF9000', _0x469ea1['skinName'] = 'pigeon/pigeon';
        break;
    case _0x3e06be:
        _0x469ea1['aniName'] = 'Toucan', _0x469ea1['upgradeText'] = 'UPGRADED to Toucan!\x0aHold W to fly around. ', _0x469ea1['aniCol'] = '#FF9000', _0x469ea1['skinName'] = 'toucan/toucan';
        break;
    default:
        _0x469ea1['aniName'] = '(Animal)', _0x469ea1['aniDesc'] = '', _0x469ea1['aniCol'] = '#000000', _0x469ea1['upgradeText'] = 'UPGRADED!';
    }
    return _0x469ea1;
};

function _0x1717fa() {}
var _0x570743 = _0x4763ce,
_0x1e3c43 = _0x131218;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43, _0x4763ce['prototype']['abilityType'] = _0xc0a557, _0x4763ce['prototype']['showHalloweenSkins'] = !![], _0x4763ce['prototype']['updateZ'] = function () {
if (this['abilityType'] == _0x2c7f5a || this['abilityType'] == _0x58c3a2 || this['abilityType'] == _0x4a5145 || this['abilityType'] == _0x47a280 || this['abilityType'] == _0x28e488 || this['abilityType'] == _0x2c7803 || this['abilityType'] == _0x4589c6) this['z'] = 0x186a2;
else {
    if (this['abilityType'] == _0x4589c6 || this['abilityType'] == _0x28e488 || this['abilityType'] == _0x2c8fe4 || this['abilityType'] == _0x30f806 || this['abilityType'] == _0x1e4e14 || this['abilityType'] == _0x423a2a || this['abilityType'] == _0x2fcd00 || this['abilityType'] == _0x5b2a60 || this['abilityType'] == _0x2dc3e0 || this['abilityType'] == _0x2d6b61 || this['abilityType'] == _0x9a1dd || this['abilityType'] == _0x376a9d || this['abilityType'] == _0x4e8c18 || this['abilityType'] == _0x2a518d || this['abilityType'] == _0x2d6f76 || this['abilityType'] == _0x50d64b || this['abilityType'] == _0x28096d || this['abilityType'] == _0x432ccd) this['z'] = 0x7d0;
    else {
        if (this['abilityType'] == _0x5bfcf0) this['z'] = 0x3ea;
        else {
            if (this['abilityType'] == _0x335160) this['z'] = 0x2711;
            else {
                if (this['abilityType'] == _0x4d9fb2) {
                    if (this['specType'] == 0x1) this['z'] = 0x2711;
                    else {
                        if (this['specType'] == 0x2) this['z'] = 0x3f5;
                        else {
                            if (this['specType'] == 0x3) this['z'] = 0x186a0;
                        }
                    }
                } else this['abilityType'] == _0x1d392c ? this['z'] = 0x3f5 : this['z'] = -0x98;
            }
        }
    }
}
if (this['abilityType'] == _0x4bf664) {
    if (this['specType'] == 0x2) this['z'] = 0x2710 - this['rad'];
    else this['z'] = 0x3e9;
}
}, _0x4763ce['prototype']['customDraw'] = function (_0x542793) {
switch (this['abilityType']) {
case _0xb57a3:
    _0x444e67(0x0, 0x0, this['rad'], '#7EBCC0');
    break;
case _0x5b019c:
case _0x4332fb: {
    break;
}
case _0x21aff7: {
    _0x1d2dab['save']();
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0.4 * _0x41bbe5, _0x444e67(0x0, 0x0, this['rad'], '#7EBCC0'), _0x1d2dab['globalAlpha'] = 0x1 * _0x41bbe5, _0x1d2dab['strokeStyle'] = 'white', _0x1d2dab['beginPath']();
    var _0x16868b = 0xa;
    _0x1d2dab['translate'](-0x5, this['rad'] * -0.7), _0x1d2dab['moveTo'](0x0, -_0x16868b), _0x1d2dab['lineTo'](0x0, _0x16868b), _0x1d2dab['moveTo'](-_0x16868b, -_0x16868b), _0x1d2dab['lineTo'](_0x16868b, _0x16868b), _0x1d2dab['moveTo'](_0x16868b, -_0x16868b), _0x1d2dab['lineTo'](-_0x16868b, _0x16868b), _0x1d2dab['moveTo'](-_0x16868b, 0x0), _0x1d2dab['lineTo'](_0x16868b, 0x0), _0x1d2dab['lineWidth'] = 0x3, _0x1d2dab['stroke'](), _0x1d2dab['restore']();
}
break;
case _0x504bcc: {
    _0x1d2dab['save']();
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0.15 * _0x41bbe5, _0x444e67(0x0, 0x0, this['rad'], '#755A2A'), _0x1d2dab['restore']();
}
break;
case _0x9a1dd: {
    _0x1d2dab['save']();
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0x1 * _0x41bbe5;
    var _0x35cd6e = this['getSkinImageObj']('img/ability_sabertoothJawAttack.png');
    if (_0x35cd6e) {
        var _0x425af9 = Math['min'](0x1, (_0x740c5b - this['spawnTime']) / 0xc8),
            _0x956a8b = this['rad'] - 2.5;
        _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0x35cd6e, 0x0, 0x0, _0x35cd6e['width'] * _0x425af9, _0x35cd6e['height'], -_0x956a8b, -_0x956a8b, 0x2 * _0x956a8b * _0x425af9, 0x2 * _0x956a8b);
    }
    _0x1d2dab['restore']();
}
break;
case _0x30f806: {
    _0x1d2dab['save']();
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0x1 * _0x41bbe5;
    var _0x35cd6e = this['getSkinImageObj']('img/ability_claw.png');
    if (_0x35cd6e) {
        var _0x425af9 = Math['min'](0x1, (_0x740c5b - this['spawnTime']) / 0xc8),
            _0x956a8b = this['rad'] - 2.5;
        _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0x35cd6e, 0x0, 0x0, _0x35cd6e['width'] * _0x425af9, _0x35cd6e['height'], -_0x956a8b, -_0x956a8b, 0x2 * _0x956a8b * _0x425af9, 0x2 * _0x956a8b);
    }
    _0x1d2dab['restore']();
}
break;
case _0x2c7803: {
    _0x1d2dab['save']();
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0.1 * _0x41bbe5, _0x444e67(0x0, 0x0, this['rad'], '#5B7EC7'), _0x1d2dab['globalAlpha'] = 0x1 * _0x41bbe5;
    var _0x572898 = 'img',
        _0x35cd6e = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['speciesType'] + '/tail.png');
    if (_0x35cd6e) {
        var _0x425af9 = Math['min'](0x1, (_0x740c5b - this['spawnTime']) / 0xc8),
            _0x956a8b = this['rad'] * 0.65;
        _0x1d2dab['rotate'](this['angle']);
        var _0x30a859 = 0x0,
            _0x59f897 = this['rad'],
            _0x31b6a8 = _0x956a8b * 0x2,
            _0x2850d2 = _0x956a8b * 0x2 * _0x425af9,
            _0x519ded = 0.5,
            _0x7e41a2 = 1.25;
        _0x1d2dab['drawImage'](_0x35cd6e, _0x30a859 + _0x31b6a8 * -_0x519ded, _0x59f897 + _0x2850d2 * -_0x7e41a2, _0x31b6a8, _0x2850d2);
    }
    _0x1d2dab['restore']();
}
break;
case _0x423a2a: {
    _0x1d2dab['save']();
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0.1 * _0x41bbe5, _0x444e67(0x0, 0x0, this['rad'], '#5B7EC7'), _0x1d2dab['globalAlpha'] = 0x1 * _0x41bbe5;
    var _0x572898 = 'skins/ocean/bluewhale/' + this['speciesType'];
    if (this['speciesSubType'] && this['speciesSubType'] > 0x0) _0x572898 += '/' + this['speciesSubType'];
    var _0x2899b2 = this['speciesType'] === 0x1 || this['speciesType'] === 0x2 || this['speciesType'] === 0xc9 ? 0x1 : 0x2,
        _0x35cd6e = this['getSkinImageObjForSeason'](_0x572898 + '/ability_whaleTailHit.png', _0x2899b2);
    if (_0x35cd6e) {
        var _0x425af9 = Math['min'](0x1, (_0x740c5b - this['spawnTime']) / 0xc8),
            _0x956a8b = this['rad'] * 0.85;
        _0x1d2dab['rotate'](this['angle']);
        var _0x30a859 = 0x0,
            _0x59f897 = this['rad'],
            _0x31b6a8 = _0x956a8b * 0x2,
            _0x2850d2 = _0x956a8b * 0x2 * _0x425af9,
            _0x519ded = 0.5,
            _0x7e41a2 = 1.25;
        _0x1d2dab['drawImage'](_0x35cd6e, _0x30a859 + _0x31b6a8 * -_0x519ded, _0x59f897 + _0x2850d2 * -_0x7e41a2, _0x31b6a8, _0x2850d2);
    }
    _0x1d2dab['restore']();
}
break;
case _0x28e488: {
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['save']();
    var _0x130370 = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x5c9f86 = 1.5,
        _0x34f1d4 = 0x1,
        _0xb5edb0 = _0x34f1d4 * Math['sin'](0x2 * Math['PI'] / _0x5c9f86 * _0x130370),
        _0x5cdc03 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] *= 0.6 * _0xb5edb0, _0x1d2dab['rotate'](this['angle']), _0x1d2dab['globalAlpha'] = 0.15 * _0x41bbe5;
    if (this['specType2'] == 0x0) _0x444e67(0x0, 0x0, this['rad'], '#96661C');
    else _0x444e67(0x0, 0x0, this['rad'], '#e0dfde');
    _0x1d2dab['restore'](), _0x1d2dab['save']();
    var _0x5bb0e8 = this['specType2'] == 0x1 ? 'arctic' : 'land',
        _0x4ce054 = 'skins/' + _0x5bb0e8 + '/bear/' + this['speciesType'] + '/slash.png',
        _0x35cd6e = this['getSkinImageObj'](_0x4ce054);
    if (_0x35cd6e) {
        var _0x425af9 = Math['min'](0x1, (_0x740c5b - this['spawnTime']) / 0xc8),
            _0x30530f = _0x29d4e1((_0x740c5b - this['spawnTime']) / 0x12c, 0x0, 0x1),
            _0x178e15 = -(-0.5 + _0x30530f) * _0xa0b20a,
            _0x470fb5 = this['angle'];
        _0x1d2dab['rotate'](this['angle'] + _0x178e15 * (this['specType'] == 0x0 ? 0x1 : -0x1));
        var _0x956a8b = -this['rad'] * 0x1,
            _0x30a859 = 0x0,
            _0x59f897 = this['rad'],
            _0x31b6a8 = _0x956a8b * 0x2,
            _0x2850d2 = _0x956a8b * 0x2 * _0x425af9,
            _0x519ded = 0.5,
            _0x7e41a2 = 0.8;
        _0x1d2dab['drawImage'](_0x35cd6e, _0x30a859 + _0x31b6a8 * -_0x519ded, _0x59f897 + _0x2850d2 * -_0x7e41a2 + _0x956a8b, _0x31b6a8, _0x2850d2);
    }
    _0x1d2dab['restore']();
}
break;
case _0x4589c6: {
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['save']();
    var _0x130370 = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x5c9f86 = 1.5,
        _0x34f1d4 = 0x1,
        _0xb5edb0 = _0x34f1d4 * Math['sin'](0x2 * Math['PI'] / _0x5c9f86 * _0x130370),
        _0x5cdc03 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] *= 0.6 * _0xb5edb0, _0x1d2dab['rotate'](this['angle']), _0x1d2dab['globalAlpha'] = 0.15 * _0x41bbe5;
    if (this['specType2'] == 0x0) _0x444e67(0x0, 0x0, this['rad'], '#96661C');
    else _0x444e67(0x0, 0x0, this['rad'], '#e0dfde');
    _0x1d2dab['restore'](), _0x1d2dab['save']();
    var _0x572898 = 'skins/desert/gobibear/' + this['speciesType'] + '/claw' + this['specType'],
        _0x35cd6e = this['getSkinImageObj'](_0x572898 + '.png');
    if (_0x35cd6e) {
        var _0x425af9 = Math['min'](0x1, (_0x740c5b - this['spawnTime']) / 0xc8),
            _0x30530f = _0x29d4e1((_0x740c5b - this['spawnTime']) / 0x12c, 0x0, 0x1),
            _0x178e15 = -(-0.5 + _0x30530f) * _0x2bcbaa(0x5a),
            _0x470fb5 = this['angle'];
        _0x1d2dab['rotate'](this['angle'] + _0x178e15 * (this['specType'] == 0x0 ? 0x1 : -0x1));
        var _0x956a8b = -this['rad'] * 0x1,
            _0x30a859 = 0x0,
            _0x59f897 = this['rad'],
            _0x31b6a8 = _0x956a8b * 0x2,
            _0x2850d2 = _0x956a8b * 0x2 * _0x425af9,
            _0x519ded = 0.5,
            _0x7e41a2 = 0.8;
        _0x1d2dab['drawImage'](_0x35cd6e, _0x30a859 + _0x31b6a8 * -_0x519ded, _0x59f897 + _0x2850d2 * -_0x7e41a2 + _0x956a8b, _0x31b6a8, _0x2850d2);
    }
    _0x1d2dab['restore']();
}
break;
case _0x432ccd: {
    var _0x130370 = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x2ae973 = _0x21d673(_0x130370, 0x1, 0.1, 0x1),
        _0x44b7ce = 0x0,
        _0x5c9f86 = 0x2,
        _0x34f1d4 = 1.5;
    _0x44b7ce = _0x34f1d4 * Math['sin'](0x2 * Math['PI'] / _0x5c9f86 * _0x130370);
    var _0x47ecae = 0x1;
    for (i = 0x0; i < _0x47ecae; i++) {
        this['drawRad'] === undefined && (this['drawRad'] = new Array(), this['drawAngle'] = new Array());
        this['drawRad'][i] == undefined && (this['drawRad']['push'](_0x5e22a2(0x5, 0xa) / 0xa), this['drawAngle']['push'](_0x2bcbaa(_0x5e22a2(0x1, 0x168))));
        var _0xec54d2 = this['rad'] * this['drawRad'][i];
        _0x1d2dab['save'](), _0x1d2dab['rotate'](this['drawAngle'][i]), _0x1d2dab['save']();
        var _0x41bbe5 = _0x1d2dab['globalAlpha'];
        _0x1d2dab['globalAlpha'] = 0.1 - _0x2ae973, _0x1d2dab['restore'](), _0x1d2dab['save'](), _0x1d2dab['fillStyle'] = 'white', _0x1d2dab['globalAlpha'] = 0.3 - _0x2ae973;
        var _0x3a38db = -_0xec54d2 * 0.6,
            _0x33f9a8 = -_0xec54d2 * 0.5 + 0xa * this['rPer'],
            _0x1485ea = Math['max'](0x0, _0xec54d2 * 0.65 + _0x44b7ce) + 0x2;
        _0x444e67(_0x3a38db, _0x33f9a8, _0x1485ea, '#654321');
        var _0x3a38db = _0xec54d2 * 0.5,
            _0x33f9a8 = -_0xec54d2 * 0.5 - 0xa * this['rPer'],
            _0x1485ea = Math['max'](0x0, _0xec54d2 * 0.73 - _0x44b7ce);
        _0x444e67(_0x3a38db, _0x33f9a8, _0x1485ea, '#654321');
        var _0x3a38db = _0xec54d2 * 0.6,
            _0x33f9a8 = _0xec54d2 * 0.5,
            _0x1485ea = Math['max'](0x0, _0xec54d2 * 0.78 + _0x44b7ce);
        _0x444e67(_0x3a38db, _0x33f9a8, _0x1485ea, '#654321');
        var _0x3a38db = -_0xec54d2 * 0.5,
            _0x33f9a8 = _0xec54d2 * 0.5 + 0xa * this['rPer'],
            _0x1485ea = Math['max'](0x0, _0xec54d2 * 0.6 + this['rPer'] - _0x44b7ce);
        _0x444e67(_0x3a38db, _0x33f9a8, _0x1485ea, '#654321'), _0x1d2dab['restore'](), _0x1d2dab['restore']();
    }
}
break;
case _0x4a020f:
    _0x1d2dab['globalAlpha'] = 0.5, _0x444e67(0x0, 0x0, this['rad'], 'red');
    break;
case _0x2c7f5a:
    break;
case _0xc4e9e7:
    break;
case _0x535b24:
    break;
case _0x1280f3:
case _0x50c62c:
case _0x2240d1:
case _0x4363c7:
case _0x58c3a2:
case _0x356727:
case _0x308657:
case _0x12a9b2:
case _0x278422:
case _0x126559:
    break;
case _0x4bf664:
    if (this['specType'] == 0x2) {
        var _0x32b595 = 'closed',
            _0x2742a1 = 'flytrap',
            _0x30c917 = 'img/desert/' + _0x2742a1 + '/mouth/' + _0x32b595 + '.png',
            _0x35cd6e = this['getSkinImageObj'](_0x30c917);
        if (_0x35cd6e) {
            var _0x956a8b = this['rad'];
            _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.9, _0x1d2dab['rotate'](this['angle'] - _0x2bcbaa(-0x5a)), _0x1d2dab['drawImage'](_0x35cd6e, -_0x956a8b, -_0x956a8b, 0x2 * _0x956a8b, 0x2 * _0x956a8b), _0x1d2dab['restore']();
        }
    } else {}
    break;
case _0x56fa7e:
    if (this['specType2'] == 0x1) {
        var _0x130370 = _0x740c5b - this['spawnTime'],
            _0x41bbe5 = _0x1d2dab['globalAlpha'];
        _0x1d2dab['save'](), _0x1d2dab['rotate'](this['angle'] - -_0xa0b20a), _0x1d2dab['globalAlpha'] = 0.9 * _0x41bbe5;
        if (_0x130370 < 0xc8) {
            var _0x2692fe = 0x1 + Math['trunc'](_0x130370 / 0x32),
                _0x30c917 = 'skins/desert/camel/201/spit' + this['specType'] + '_pop' + _0x2692fe + '.png',
                _0x35cd6e = this['getSkinImageObjForSeason'](_0x30c917, 0x1);
            if (_0x35cd6e) {
                var _0x956a8b = this['rad'];
                _0x1d2dab['save'](), _0x1d2dab['drawImage'](_0x35cd6e, -_0x956a8b, -_0x956a8b, 0x2 * _0x956a8b, 0x2 * _0x956a8b), _0x1d2dab['restore']();
            }
        } else {
            var _0x30c917 = 'skins/desert/camel/201/spit' + this['specType'] + '_pop4.png',
                _0x35cd6e = this['getSkinImageObjForSeason'](_0x30c917, 0x1);
            if (_0x35cd6e) {
                var _0x956a8b = this['rad'];
                _0x1d2dab['save'](), _0x1d2dab['drawImage'](_0x35cd6e, -_0x956a8b, -_0x956a8b, 0x2 * _0x956a8b, 0x2 * _0x956a8b), _0x1d2dab['restore']();
            }
        }
        _0x1d2dab['restore']();
    } else {
        _0x1d2dab['save']();
        var _0x41bbe5 = _0x1d2dab['globalAlpha'];
        _0x1d2dab['globalAlpha'] = 0.15 * _0x41bbe5, _0x444e67(0x0, 0x0, this['rad'], 'black'), _0x1d2dab['restore']();
    }
    break;
case _0x47a280: {
    this['drawEffectScale_Slow'] = !![], this['doesDrawEffectScale'] = !![], _0x1d2dab['globalAlpha'] = 0.2, _0x444e67(0x0, 0x0, this['rad'] * 0.85, 'white');
    var _0xe33428 = this['specType'] == 0x3 ? '_e' : '',
        _0x35cd6e = this['getSkinImageObj']('img/target' + _0xe33428 + '.png');
    if (_0x35cd6e) {
        var _0x956a8b = this['rad'];
        _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.5, _0x1d2dab['drawImage'](_0x35cd6e, -_0x956a8b, -_0x956a8b, 0x2 * _0x956a8b, 0x2 * _0x956a8b), _0x1d2dab['restore']();
    }
    _0x1d2dab['save']();
    if (this['is1v1Target'] == 0x1 && this['timerTxt'] != null) _0x1d2dab['globalAlpha'] = 0x1, this['timerTxt']['x'] = 0x0, this['timerTxt']['y'] = 0x0, this['timerTxt']['draw']();
    else this['is1v1Target'] == 0x2 && this['timerTxt'] != null && (_0x1d2dab['globalAlpha'] = 0x1, this['timerTxt']['x'] = 0x0, this['timerTxt']['y'] = 0x0, this['timerTxt']['draw']());
    _0x1d2dab['restore']();
}
break;
case _0x4a5145: {
    _0x1d2dab['globalAlpha'] = 0.5;
}
break;
case _0x5b2a60: {
    _0x1d2dab['save']();
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0.05 * _0x41bbe5, _0x444e67(0x0, 0x0, this['rad'], '#B32E10'), _0x1d2dab['globalAlpha'] = 0x1 * _0x41bbe5;
    var _0x572898 = 'skins/ocean/kingcrab/' + this['speciesType'],
        _0x2899b2 = this['speciesType'] === 0x1 || this['speciesType'] === 0x2 || this['speciesType'] === 0xcc ? 0x1 : 0x2,
        _0x35cd6e = this['getSkinImageObjForSeason'](_0x572898 + '/ability_crabSmash' + this['specType'] + '.png', _0x2899b2);
    if (_0x35cd6e) {
        var _0x30530f = _0x29d4e1((_0x740c5b - this['spawnTime']) / 0xc8, 0x0, 0x1),
            _0x23538e = this['specType'] == 0x1 ? -0x1 : 0x1,
            _0x178e15 = -(-0.2 + _0x30530f) * _0x2bcbaa(-0x5a * _0x23538e);
        _0x178e15 = _0x23538e * (0.3 + _0x30530f) + _0x2bcbaa(_0x23538e * -0x1e);
        var _0x956a8b = this['rad'] * 0.6;
        _0x1d2dab['rotate'](this['angle'] + _0x178e15);
        var _0x30a859 = 0x0,
            _0x59f897 = this['rad'],
            _0x31b6a8 = _0x956a8b * 0x2 * 0.7,
            _0x2850d2 = _0x956a8b * 0x2,
            _0x519ded = 0.75,
            _0x7e41a2 = 0.95;
        this['specType'] == 0x1 && (_0x519ded = 0.25, _0x7e41a2 = 0.95), _0x1d2dab['drawImage'](_0x35cd6e, _0x30a859 + _0x31b6a8 * -_0x519ded, _0x59f897 + _0x2850d2 * -_0x7e41a2, _0x31b6a8, _0x2850d2);
    }
    _0x1d2dab['restore']();
}
break;
case _0x2fcd00: {
    _0x1d2dab['save']();
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0.05 * _0x41bbe5, _0x444e67(0x0, 0x0, this['rad'], '#E4E7C8'), _0x1d2dab['globalAlpha'] = 0x1 * _0x41bbe5;
    var _0x572898 = 'skins/land/elephant/' + this['speciesType'],
        _0x35cd6e = this['getSkinImageObj'](_0x572898 + '/ability_elephantTrunkSmack.png');
    console['log'](_0x572898);
    if (_0x35cd6e) {
        var _0x30530f = _0x29d4e1((_0x740c5b - this['spawnTime']) / 0x12c, 0x0, 0x1),
            _0x178e15 = -(-0.5 + _0x30530f) * _0xa0b20a,
            _0x956a8b = this['rad'] * 0.6;
        _0x1d2dab['rotate'](this['angle'] + _0x178e15);
        var _0x30a859 = 0x0,
            _0x59f897 = this['rad'],
            _0x31b6a8 = _0x956a8b * 0x2 * 0.7,
            _0x2850d2 = _0x956a8b * 0x2,
            _0x519ded = 0.75,
            _0x7e41a2 = 0.95;
        _0x1d2dab['drawImage'](_0x35cd6e, _0x30a859 + _0x31b6a8 * -_0x519ded, _0x59f897 + _0x2850d2 * -_0x7e41a2, _0x31b6a8, _0x2850d2);
    }
    _0x1d2dab['restore']();
}
break;
case _0x1e4e14: {}
break;
case _0x2dc3e0: {
    _0x1d2dab['save']();
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0.25 * _0x41bbe5, _0x444e67(0x0, 0x0, this['rad'], '#44d31f'), _0x1d2dab['globalAlpha'] = 0x1 * _0x41bbe5;
    var _0x2899b2 = this['speciesType'] === 0x1 || this['speciesType'] === 0x64 || this['speciesType'] === 0xc9 ? 0x1 : 0x2,
        _0x35cd6e = this['getSkinImageObjForSeason']('skins/land/croc/' + this['speciesType'] + '/ability.png', _0x2899b2);
    if (_0x35cd6e) {
        var _0x425af9 = Math['min'](0x1, (_0x740c5b - this['spawnTime']) / 0xc8),
            _0x956a8b = this['rad'] * 0.6;
        _0x1d2dab['rotate'](this['angle']);
        var _0x30a859 = 0x0,
            _0x59f897 = this['rad'],
            _0x31b6a8 = _0x956a8b * 2.5,
            _0x2850d2 = _0x956a8b * 2.5 * _0x425af9,
            _0x519ded = 0.5,
            _0x7e41a2 = 0.95;
        _0x1d2dab['drawImage'](_0x35cd6e, _0x30a859 + _0x31b6a8 * -_0x519ded, _0x59f897 + _0x2850d2 * -_0x7e41a2, _0x31b6a8, _0x2850d2), _0x1d2dab['rotate'](Math['PI']);
        var _0x30a859 = 0x0,
            _0x59f897 = this['rad'] * 0.5,
            _0x31b6a8 = _0x956a8b * 2.5,
            _0x2850d2 = _0x956a8b * 2.5 * _0x425af9,
            _0x519ded = 0.5,
            _0x7e41a2 = 0.95;
        _0x1d2dab['drawImage'](_0x35cd6e, _0x30a859 + _0x31b6a8 * -_0x519ded, _0x59f897 + _0x2850d2 * -_0x7e41a2, _0x31b6a8, _0x2850d2);
    }
    _0x1d2dab['restore']();
}
break;
case _0x2d6b61: {
    _0x1d2dab['save']();
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0.25 * _0x41bbe5, _0x444e67(0x0, 0x0, this['rad'], '#44d31f');
    var _0x2899b2 = this['speciesType'] === 0x1 || this['speciesType'] === 0x2 ? 0x1 : this['mopeSeasonID'],
        _0x572898 = 'skins/land/boaconstrictor/' + this['speciesType'];
    _0x1d2dab['globalAlpha'] = 0x1 * _0x41bbe5;
    var _0x35cd6e = this['getSkinImageObjForSeason'](_0x572898 + '/ability_boabite.png', _0x2899b2);
    if (_0x35cd6e) {
        var _0x425af9 = Math['min'](0x1, (_0x740c5b - this['spawnTime']) / 0xc8),
            _0x956a8b = this['rad'] * 0.6;
        _0x1d2dab['rotate'](this['angle']);
        var _0x30a859 = 0x0,
            _0x59f897 = this['rad'],
            _0x31b6a8 = _0x956a8b * 2.5,
            _0x2850d2 = _0x956a8b * 2.5 * _0x425af9,
            _0x519ded = 0.5,
            _0x7e41a2 = 0.95;
        _0x1d2dab['drawImage'](_0x35cd6e, _0x30a859 + _0x31b6a8 * -_0x519ded, _0x59f897 + _0x2850d2 * -_0x7e41a2, _0x31b6a8, _0x2850d2), _0x1d2dab['rotate'](Math['PI']);
        var _0x30a859 = 0x0,
            _0x59f897 = this['rad'] * 0.5,
            _0x31b6a8 = _0x956a8b * 2.5,
            _0x2850d2 = _0x956a8b * 2.5 * _0x425af9,
            _0x519ded = 0.5,
            _0x7e41a2 = 0.95;
        _0x1d2dab['drawImage'](_0x35cd6e, _0x30a859 + _0x31b6a8 * -_0x519ded, _0x59f897 + _0x2850d2 * -_0x7e41a2, _0x31b6a8, _0x2850d2);
    }
    _0x1d2dab['restore']();
}
break;
case _0x981fc3: {
    _0x1d2dab['save']();
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0.1 * _0x41bbe5, _0x444e67(0x0, 0x0, this['rad'], '#755A2A'), _0x1d2dab['globalAlpha'] = 0x1 * _0x41bbe5;
    var _0x572898 = 'skins/land/',
        _0x2899b2 = this['speciesType'] === 0xcc ? 0x1 : this['mopeSeasonID'],
        _0x35cd6e = this['getSkinImageObjForSeason'](_0x572898 + '/tiger/' + this['speciesType'] + '/ability_tigerJump.png', _0x2899b2);
    if (_0x35cd6e) {
        var _0x425af9 = Math['min'](0x1, (_0x740c5b - this['spawnTime']) / 0x64),
            _0x956a8b = this['rad'] * 1.1;
        _0x1d2dab['rotate'](this['angle']);
        var _0x30a859 = 0x0,
            _0x59f897 = this['rad'],
            _0x31b6a8 = _0x956a8b * 0x2,
            _0x2850d2 = _0x956a8b * 0x2 * _0x425af9,
            _0x519ded = 0.5,
            _0x7e41a2 = 0x1;
        _0x1d2dab['drawImage'](_0x35cd6e, _0x30a859 + _0x31b6a8 * -_0x519ded, _0x59f897 + _0x2850d2 * -_0x7e41a2, _0x31b6a8, _0x2850d2);
    }
    _0x1d2dab['restore']();
}
break;
case _0x2a518d: {
    _0x1d2dab['save']();
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0.05 * _0x41bbe5, _0x444e67(0x0, 0x0, this['rad'], '#44d31f'), _0x1d2dab['globalAlpha'] = 0x1 * _0x41bbe5;
    var _0x55cfe1 = this['getSkinImageObj']('img/ability_pounce2.png'),
        _0x158e5c = this['getSkinImageObj']('img/ability_pounce1.png');
    if (_0x55cfe1 && _0x158e5c) {
        var _0x425af9 = Math['min'](0x1, (_0x740c5b - this['spawnTime']) / 0xc8),
            _0x956a8b = this['rad'] * 0.4;
        _0x1d2dab['rotate'](this['angle']);
        var _0x30a859 = 0x0,
            _0x59f897 = this['rad'],
            _0x31b6a8 = _0x956a8b * 2.5,
            _0x2850d2 = _0x956a8b * 2.5 * _0x425af9,
            _0x519ded = 0.5,
            _0x7e41a2 = 0.95;
        _0x1d2dab['drawImage'](_0x55cfe1, _0x30a859 + _0x31b6a8 * -_0x519ded, _0x59f897 + _0x2850d2 * -_0x7e41a2, _0x31b6a8, _0x2850d2), _0x956a8b = this['rad'] * 0.6;
        var _0x30a859 = 0x0,
            _0x59f897 = this['rad'] * 0.5,
            _0x31b6a8 = _0x956a8b * 2.5,
            _0x2850d2 = _0x956a8b * 2.5 * _0x425af9,
            _0x519ded = 0.5,
            _0x7e41a2 = 0.95;
        _0x1d2dab['drawImage'](_0x158e5c, _0x30a859 + _0x31b6a8 * -_0x519ded, _0x59f897 + _0x2850d2 * -_0x7e41a2, _0x31b6a8, _0x2850d2);
    }
    _0x1d2dab['restore']();
}
break;
case _0x4e8c18: {
    _0x1d2dab['save']();
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0.05 * _0x41bbe5, _0x444e67(0x0, 0x0, this['rad'], '#E4E7C8'), _0x1d2dab['globalAlpha'] = 0x1 * _0x41bbe5;
    var _0x2e803a = 'skins/land/tiger/' + this['speciesType'] + '/ability_tigerSlash' + this['specType'] + '.png',
        _0x35cd6e = this['getSkinImageObj'](_0x2e803a);
    if (_0x35cd6e) {
        var _0x30530f = _0x29d4e1((_0x740c5b - this['spawnTime']) / 0x12c, 0x0, 0x1),
            _0x178e15 = (this['specType'] == 0x1 ? 0x1 : -0x1) * (-0.6 + _0x30530f) * _0x2bcbaa(0x5a),
            _0x956a8b = this['rad'] * 1.2;
        _0x1d2dab['rotate'](this['angle'] + _0x178e15);
        var _0x30a859 = 0x0,
            _0x59f897 = this['rad'],
            _0x31b6a8 = _0x956a8b * 0x2 * 0.7,
            _0x2850d2 = _0x956a8b * 0x2,
            _0x519ded = 0.2,
            _0x7e41a2 = 0.5;
        _0x1d2dab['drawImage'](_0x35cd6e, _0x30a859 + _0x31b6a8 * -_0x519ded, _0x59f897 + _0x2850d2 * -_0x7e41a2, _0x31b6a8, _0x2850d2);
    }
    _0x1d2dab['restore']();
}
break;
case _0x50d64b: {
    _0x1d2dab['save']();
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0x1 * _0x41bbe5;
    var _0x2899b2 = this['speciesType'] === 0xc9 || this['speciesType'] === 0x2 || this['speciesType'] === 0x1 || this['speciesType'] === 0x64 ? 0x1 : this['mopeSeasonID'],
        _0x50bc4b = _0x2899b2 === 0x1 ? '' : this['specType'],
        _0x13ebb1 = 'skins/land/zebra/' + this['speciesType'] + '/kick' + _0x50bc4b + '.png';
    console['log'](_0x13ebb1);
    var _0x35cd6e = this['getSkinImageObjForSeason'](_0x13ebb1, _0x2899b2);
    if (_0x35cd6e) {
        var _0x425af9 = Math['min'](0x1, (_0x740c5b - this['spawnTime']) / 0xc8),
            _0x956a8b = this['rad'] * 0.6;
        _0x1d2dab['rotate'](this['angle']);
        var _0x30a859 = 0x0,
            _0x59f897 = this['rad'],
            _0x31b6a8 = _0x956a8b * 0x2,
            _0x2850d2 = _0x956a8b * 0x3 * _0x425af9,
            _0x519ded = 0.3,
            _0x7e41a2 = 0x1;
        _0x1d2dab['drawImage'](_0x35cd6e, _0x30a859 + _0x31b6a8 * -_0x519ded, _0x59f897 + _0x2850d2 * -_0x7e41a2, _0x31b6a8, _0x2850d2);
    }
    _0x1d2dab['restore']();
}
break;
case _0x2d6f76: {
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['save']();
    let _0x3ea3df = 0x1;
    var _0x5cdc03 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] *= 0.6 * _0x3ea3df, _0x1d2dab['rotate'](this['angle']), _0x1d2dab['globalAlpha'] = 0.15 * _0x41bbe5, _0x444e67(this['rad'] * 0.3, 0x0, this['rad'] * (0.9 + 0.12 * _0x3ea3df), '#E4E7C8'), _0x444e67(-this['rad'] * 0.3, 0x0, this['rad'] * (1.05 + 0.09 * _0x3ea3df), '#E4E7C8'), _0x1d2dab['globalAlpha'] = _0x5cdc03, _0x1d2dab['restore'](), _0x1d2dab['save']();
    let _0x24f7a2 = 'skins/land/giraffe/' + this['speciesType'];
    this['speciesType'] == 0xca && (_0x24f7a2 += '/' + this['speciesSubType']);
    _0x24f7a2 += '/stomp.png';
    var _0x35cd6e = this['getSkinImageObj'](_0x24f7a2);
    if (_0x35cd6e) {
        var _0x425af9 = Math['min'](0x1, (_0x740c5b - this['spawnTime']) / 0xc8),
            _0x470fb5 = this['angle'];
        _0x1d2dab['rotate'](_0x470fb5);
        var _0x956a8b = -this['rad'] * 0x1,
            _0x30a859 = 0x0,
            _0x59f897 = this['rad'],
            _0x31b6a8 = _0x956a8b * 0x3,
            _0x2850d2 = _0x956a8b * 0x2 * _0x425af9,
            _0x519ded = 0.5,
            _0x7e41a2 = 0.7;
        _0x1d2dab['drawImage'](_0x35cd6e, _0x30a859 + _0x31b6a8 * -_0x519ded, _0x59f897 + _0x2850d2 * -_0x7e41a2 + _0x956a8b, _0x31b6a8, _0x2850d2);
    }
    _0x1d2dab['restore']();
}
break;
case _0x28096d: {
    _0x1d2dab['save']();
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0x1 * _0x41bbe5, _0x1d2dab['rotate'](this['angle']);
    var _0x2899b2 = this['speciesType'] === 0x1 || this['speciesType'] === 0x2 || this['speciesType'] === 0xc9 ? 0x1 : this['mopeSeasonID'],
        _0x35cd6e = this['getSkinImageObjForSeason']('skins/ocean/shark/' + this['speciesType'] + '/ability.png', _0x2899b2);
    if (_0x35cd6e) {
        var _0x2ae973 = Math['min'](0x1, (_0x740c5b - this['spawnTime']) / 0xc8);
        _0x1d2dab['globalAlpha'] = 0.9;
        var _0x956a8b = -this['rad'] * 1.75,
            _0x30a859 = 0x0,
            _0x59f897 = this['rad'],
            _0x31b6a8 = _0x956a8b * 0x2,
            _0x2850d2 = _0x956a8b * 0x2 * _0x2ae973,
            _0x519ded = 0.5,
            _0x7e41a2 = 0.9;
        _0x1d2dab['drawImage'](_0x35cd6e, _0x30a859 + _0x31b6a8 * -_0x519ded, _0x59f897 + _0x2850d2 * -_0x7e41a2 + _0x956a8b, _0x31b6a8, _0x2850d2);
    }
    _0x1d2dab['restore']();
}
break;
case _0x63711a: {
    _0x1d2dab['save']();
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0.5 * _0x41bbe5;
    var _0x956a8b = this['rad'],
        _0x130370 = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x5c9f86 = 2.2,
        _0x146ee9 = 6.5 * Math['cos'](0x2 * Math['PI'] / _0x5c9f86 * _0x130370),
        _0x167e46 = 6.5 * Math['sin'](0x2 * Math['PI'] / _0x5c9f86 * _0x130370);
    _0x1d2dab['globalAlpha'] = 0.3 * _0x41bbe5, _0x444e67(0x0, 0x0, _0x956a8b, _0x3ada2a), _0x1d2dab['globalAlpha'] = 0.5 * _0x41bbe5, _0x444e67(0x0 + _0x146ee9 / 4.5 + this['rPer'], 0x1 + _0x167e46 / 1.5, Math['max'](0x0, _0x956a8b - 0xe), '#de9d23'), _0x1d2dab['restore']();
}
break;
case _0x335160: {
    _0x1d2dab['save']();
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0.5 * _0x41bbe5;
    var _0x956a8b = this['rad'],
        _0x130370 = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x5c9f86 = 2.2,
        _0x146ee9 = 6.5 * Math['cos'](0x2 * Math['PI'] / _0x5c9f86 * _0x130370),
        _0x167e46 = 6.5 * Math['sin'](0x2 * Math['PI'] / _0x5c9f86 * _0x130370);
    _0x1d2dab['globalAlpha'] = 0.3 * _0x41bbe5, _0x444e67(0x0, 0x0, _0x956a8b, '#2CAAC4'), _0x1d2dab['globalAlpha'] = 0.5 * _0x41bbe5, _0x444e67(0x0 + _0x146ee9 / 4.5 + this['rPer'], 0x1 + _0x167e46 / 1.5, Math['max'](0x0, _0x956a8b - 0xe), '#29A0BA'), _0x444e67(0x0 + _0x146ee9 / 1.5 - this['rPer'] * 0x2, _0x167e46, Math['max'](0x0, _0x956a8b - 38.5 + _0x167e46 / 0x5), '#2B8CAA'), _0x444e67(0x0 + _0x146ee9 / 1.5 - this['rPer'] * 0x2, _0x167e46, Math['max'](0x0, _0x956a8b - 54.5 + _0x167e46 / 0xb), '#28829E'), _0x1d2dab['restore']();
}
break;
case _0x4d9fb2: {
    if (this['specType'] == 0x0 || this['specType'] == 0x2 || this['specType'] == 0x3) {
        _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.3;
        var _0x39196b = '',
            _0x35cd6e = this['getSkinImageObj']('skins/ocean/pelican/' + this['speciesType'] + '/ability_pelican' + _0x39196b + '.png');
        if (_0x35cd6e) {
            var _0x956a8b = -this['rad'] * 1.5;
            _0x1d2dab['rotate'](this['angle']);
            var _0x30a859 = 0x0,
                _0x59f897 = this['rad'],
                _0x31b6a8 = _0x956a8b,
                _0x2850d2 = _0x956a8b,
                _0x519ded = 0.5,
                _0x7e41a2 = 0.5;
            _0x1d2dab['drawImage'](_0x35cd6e, _0x30a859 + _0x31b6a8 * -_0x519ded, _0x59f897 + _0x2850d2 * -_0x7e41a2 + _0x956a8b, _0x31b6a8, _0x2850d2);
        }
        _0x1d2dab['restore']();
    }
    break;
}
case _0x376a9d: {
    if (this['specType'] == 0x0) {
        _0x1d2dab['save']();
        var _0x41bbe5 = _0x1d2dab['globalAlpha'];
        _0x1d2dab['globalAlpha'] = 0.15 * _0x41bbe5, _0x1d2dab['globalAlpha'] = 0x1 * _0x41bbe5;
        var _0x35cd6e = this['getSkinImageObjForSeason']('skins/land/trex/' + this['speciesType'] + '/ability_trexBite.png', this['mopeSeasonID']);
        if (_0x35cd6e) {
            var _0x425af9 = Math['min'](0x1, (_0x740c5b - this['spawnTime']) / 0xc8),
                _0x956a8b = this['rad'] * 0.6;
            _0x1d2dab['rotate'](this['angle']);
            var _0x30a859 = 0x0,
                _0x59f897 = this['rad'],
                _0x31b6a8 = _0x956a8b * 2.5,
                _0x2850d2 = _0x956a8b * 2.5 * _0x425af9,
                _0x519ded = 0.5,
                _0x7e41a2 = 0.95;
            _0x1d2dab['drawImage'](_0x35cd6e, _0x30a859 + _0x31b6a8 * -_0x519ded, _0x59f897 + _0x2850d2 * -_0x7e41a2, _0x31b6a8, _0x2850d2), _0x1d2dab['rotate'](Math['PI']);
            var _0x30a859 = 0x0,
                _0x59f897 = this['rad'] * 0.5,
                _0x31b6a8 = _0x956a8b * 2.5,
                _0x2850d2 = _0x956a8b * 2.5 * _0x425af9,
                _0x519ded = 0.5,
                _0x7e41a2 = 0.95;
            _0x1d2dab['drawImage'](_0x35cd6e, _0x30a859 + _0x31b6a8 * -_0x519ded, _0x59f897 + _0x2850d2 * -_0x7e41a2, _0x31b6a8, _0x2850d2);
        }
        var _0x35cd6e = this['getSkinImageObj']('skins/land/trex/' + this['speciesType'] + '/trex-head.png', this['mopeSeasonID']);
        if (_0x35cd6e) {
            var _0x425af9 = Math['min'](0x1, (_0x740c5b - this['spawnTime']) / 0xc8),
                _0x956a8b = this['rad'] * 1.5;
            _0x1d2dab['rotate'](_0x2bcbaa(0xb4));
            var _0x30a859 = 0x0,
                _0x59f897 = this['rad'],
                _0x31b6a8 = _0x956a8b * 0x2,
                _0x2850d2 = _0x956a8b * 0x2 * _0x425af9,
                _0x519ded = 0.5,
                _0x7e41a2 = -1.25;
            _0x1d2dab['drawImage'](_0x35cd6e, _0x30a859 + _0x31b6a8 * -_0x519ded, _0x7e41a2 * _0x956a8b, _0x31b6a8, _0x2850d2);
        }
        _0x1d2dab['restore']();
    }
}
break;
case _0x453e69: {
    _0x1d2dab['save']();
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0.15 * _0x41bbe5, _0x444e67(0x0, 0x0, this['rad'], '#6D7471'), _0x1d2dab['restore']();
}
break;
case _0xa64540: {
    _0x1d2dab['save']();
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0.15 * _0x41bbe5, _0x444e67(0x0, 0x0, this['rad'], '#6D7471'), _0x1d2dab['restore']();
}
break;
case _0x209124: {
    _0x1d2dab['save']();
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0.15 * _0x41bbe5, _0x444e67(0x0, 0x0, this['rad'], '#6D7471'), _0x1d2dab['restore']();
}
break;
case _0x1fad09: {
    _0x1d2dab['save']();
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0.15 * _0x41bbe5, _0x444e67(0x0, 0x0, this['rad'], '#f2f2f2'), _0x1d2dab['restore']();
}
break;
case _0x5bfcf0: {
    _0x1d2dab['save'](), _0x1d2dab['rotate'](this['angle'] + _0x2bcbaa(0xb4));
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0.8 * _0x41bbe5;
    var _0x35cd6e = this['getSkinImageObj']('img/wave.png');
    if (_0x35cd6e) {
        var _0x956a8b = this['rad'];
        _0x1d2dab['drawImage'](_0x35cd6e, -_0x956a8b, -_0x956a8b, 0x2 * _0x956a8b, 0x2 * _0x956a8b);
    }
    _0x1d2dab['restore']();
}
break;
case _0x1f87f5: {
    if (this['animalType'] !== undefined && this['animalType'] == _0x254b52 && this['speciesType'] == 0xcc) {
        _0x1d2dab['save']();
        var _0x41bbe5 = _0x1d2dab['globalAlpha'];
        _0x1d2dab['globalAlpha'] = 0.9 * _0x41bbe5;
        var _0x2899b2 = 0x1,
            _0x35cd6e = this['getSkinImageObjForSeason']('skins/land/hippo/204/roar.png', _0x2899b2);
        if (_0x35cd6e) {
            var _0x956a8b = this['rad'];
            _0x1d2dab['drawImage'](_0x35cd6e, -_0x956a8b, -_0x956a8b, 0x2 * _0x956a8b, 0x2 * _0x956a8b);
        }
        _0x1d2dab['restore']();
    } else {
        _0x1d2dab['save']();
        var _0x41bbe5 = _0x1d2dab['globalAlpha'];
        _0x1d2dab['globalAlpha'] = 0.2 * _0x41bbe5, _0x444e67(0x0, 0x0, this['rad'], '#746B3E'), _0x1d2dab['restore']();
    }
}
break;
case _0xaeb84a: {
    _0x1d2dab['save']();
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0.5 * _0x41bbe5, _0x444e67(0x0, 0x0, this['rad'], '#62C5FF'), _0x1d2dab['globalAlpha'] = 0x1 * _0x41bbe5, _0x1d2dab['strokeStyle'] = '#62C5FF', _0x1d2dab['beginPath']();
    var _0x134064 = this['rad'] * -0.7,
        _0x4b23b8 = -0x5,
        _0x35ec0f = 0xa;
    _0x1d2dab['moveTo'](_0x134064, _0x4b23b8), _0x1d2dab['lineTo'](_0x134064 - _0x35ec0f * 0.4, _0x4b23b8 + _0x35ec0f), _0x1d2dab['lineTo'](_0x134064 + _0x35ec0f * 0.4, _0x4b23b8 + _0x35ec0f * 0.7), _0x1d2dab['lineTo'](_0x134064 + _0x35ec0f * 0.4 * 0.5, _0x4b23b8 + _0x35ec0f * 0x2), _0x1d2dab['lineWidth'] = 0x3, _0x1d2dab['stroke'](), _0x1d2dab['restore']();
}
break;
case _0x4f066b: {
    if (_0x44408d || _0x31f3fc != 0x3) {
        var _0x1d76df = this['getSkinImageObj']('img/whirlpool2.png');
        if (_0x1d76df) {
            var _0x956a8b = this['rad'];
            _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.5, _0x1d2dab['drawImage'](_0x1d76df, -_0x956a8b, -_0x956a8b, 0x2 * _0x956a8b, 0x2 * _0x956a8b), _0x1d2dab['restore']();
        } else _0x444e67(0x0, 0x0, this['rad'], '#2D93B0');
    } else {
        _0x1d2dab['save']();
        var _0x956a8b = Math['max'](0x0, this['rad'] - 0x1e),
            _0x41bbe5 = _0x1d2dab['globalAlpha'],
            _0x130370 = (_0x740c5b - this['spawnTime']) / 0x3e8,
            _0x5c9f86 = 2.2,
            _0x146ee9 = 10.5 * Math['cos'](0x2 * Math['PI'] / _0x5c9f86 * _0x130370),
            _0x167e46 = 6.5 * Math['sin'](0x2 * Math['PI'] / _0x5c9f86 * _0x130370);
        _0x1d2dab['globalAlpha'] = 0.05 * _0x41bbe5, _0x444e67(0x0 + _0x146ee9 + 0x1e / 0x2 - this['rPer'], 0x0 + _0x167e46 + 0x28 / 0x2 - this['rPer'], Math['max'](0x0, _0x956a8b - 0x6), 'white'), _0x1d2dab['globalAlpha'] = 0.1 * _0x41bbe5, _0x444e67(0x0 + _0x146ee9 + 0x1e / 0x2 - this['rPer'], 0x0 + _0x167e46 / 0x2 - this['rPer'], Math['max'](0x0, _0x956a8b - 0x6), '#2D93B0'), _0x1d2dab['globalAlpha'] = 0.15 * _0x41bbe5, _0x444e67(0x0 + _0x146ee9 / 1.5 - this['rPer'] * 0x2, _0x167e46, Math['max'](0x0, _0x956a8b - 54.5 + _0x167e46 / 0xb), '#28829E'), _0x1d2dab['restore'](), _0x1d2dab['save']();
        var _0x41bbe5 = _0x1d2dab['globalAlpha'],
            _0x956a8b = Math['max'](0x0, this['rad'] - 0x1e),
            _0x130370 = (_0x740c5b - this['spawnTime']) / 0x3e8,
            _0x5c9f86 = 3.2,
            _0x146ee9 = 0x32 * Math['cos'](0x2 * Math['PI'] / _0x5c9f86 * _0x130370),
            _0x167e46 = 0x32 * Math['sin'](0x2 * Math['PI'] / _0x5c9f86 * _0x130370);
        _0x1d2dab['globalAlpha'] = 0.05 * _0x41bbe5, _0x444e67(0x0, 0x0, _0x956a8b, '#2CAAC4'), _0x1d2dab['globalAlpha'] = 0.15 * _0x41bbe5, _0x444e67(0x0 + _0x146ee9 / 0x2 - this['rPer'], 0x0 + _0x167e46 / 0x2 - this['rPer'], Math['max'](0x0, _0x956a8b * 0.95), '#2D93B0'), _0x1d2dab['globalAlpha'] = 0.25 * _0x41bbe5, _0x444e67(0x0 + _0x146ee9 / 4.5 + this['rPer'], 0x1 + _0x167e46 / 1.5, Math['max'](0x0, _0x956a8b * 0.85), '#28829E'), _0x1d2dab['restore']();
        var _0x1d76df = this['getSkinImageObj']('img/whirlpool2.png');
        if (_0x1d76df) {
            var _0x956a8b = this['rad'] - 0x1e,
                _0x4f83d3 = 0x5 / 0x3c,
                _0x379b6b = 0x3e8 / _0x4f83d3,
                _0x425af9 = (_0x740c5b - this['spawnTime']) % _0x379b6b / _0x379b6b,
                _0x3bddf8 = _0x425af9 * 0x2 * Math['PI'];
            _0x4f83d3 = 0x8 / 0x3c, _0x379b6b = 0x3e8 / _0x4f83d3, _0x425af9 = (_0x740c5b - this['spawnTime']) % _0x379b6b / _0x379b6b, rotation2 = _0x425af9 * 0x2 * Math['PI'], _0x1d2dab['save'](), _0x1d2dab['rotate'](_0x3bddf8);
            var _0x41bbe5 = _0x1d2dab['globalAlpha'];
            _0x1d2dab['globalAlpha'] = 0.1;
            var _0x130370 = (_0x740c5b - this['spawnTime']) / 0x3e8,
                _0x5c9f86 = 2.2,
                _0x146ee9 = 6.5 * Math['cos'](0x2 * Math['PI'] / _0x5c9f86 * _0x130370),
                _0x167e46 = 6.5 * Math['sin'](0x2 * Math['PI'] / _0x5c9f86 * _0x130370);
            _0x1d2dab['globalAlpha'] = 0.2, _0x1d2dab['drawImage'](_0x1d76df, -_0x956a8b - _0x146ee9 + 0x1e / 2.2, -_0x956a8b, 0x2 * _0x956a8b, 0x2 * _0x956a8b), _0x1d2dab['restore'](), _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.1, _0x1d2dab['rotate'](rotation2 * 0.8), _0x1d2dab['drawImage'](_0x1d76df, -_0x956a8b - _0x146ee9 / 2.2, -_0x956a8b, 0x2 * _0x956a8b, 0x2 * _0x956a8b), _0x1d2dab['restore'](), _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.2, _0x1d2dab['rotate'](rotation2), _0x1d2dab['drawImage'](_0x1d76df, -_0x956a8b - _0x146ee9 - 0x14 / 2.2, -_0x956a8b, 0x2 * _0x956a8b, 0x2 * _0x956a8b), _0x1d2dab['restore'](), _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.2, _0x1d2dab['rotate'](rotation2), _0x1d2dab['drawImage'](_0x1d76df, -_0x956a8b - _0x146ee9 / 2.2, -_0x956a8b, 0x2 * _0x956a8b, 0x2 * _0x956a8b), _0x1d2dab['restore'](), _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.2, _0x1d2dab['rotate'](_0x3bddf8), _0x1d2dab['drawImage'](_0x1d76df, -_0x956a8b - _0x146ee9 / 2.2, -_0x956a8b, 0x2 * _0x956a8b, 0x2 * _0x956a8b), _0x1d2dab['restore'](), _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.2, _0x1d2dab['rotate'](_0x3bddf8), _0x1d2dab['drawImage'](_0x1d76df, -_0x956a8b - _0x146ee9 / 2.2, -_0x956a8b, 0x2 * _0x956a8b, 0x2 * _0x956a8b), _0x1d2dab['restore']();
        }
    }
}
break;
case _0x4e12c5: {
    _0x1d2dab['save']();
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0.5 * _0x41bbe5;
    var _0x956a8b = Math['max'](0x0, this['rad'] - 0x1e),
        _0x130370 = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x5c9f86 = 2.2,
        _0x146ee9 = 6.5 * Math['cos'](0x2 * Math['PI'] / _0x5c9f86 * _0x130370),
        _0x167e46 = 6.5 * Math['sin'](0x2 * Math['PI'] / _0x5c9f86 * _0x130370);
    _0x1d2dab['globalAlpha'] = 0.4 * _0x41bbe5, _0x444e67(0x0, 0x0, _0x956a8b, '#2CAAC4'), _0x1d2dab['globalAlpha'] = 0.7 * _0x41bbe5, !(_0x31f3fc == 0x2) && _0x444e67(0x0 + _0x146ee9 / 0x2 - this['rPer'], 0x0 + _0x167e46 / 0x2 - this['rPer'], Math['max'](0x0, _0x956a8b - 0x6), '#2D93B0'), _0x444e67(0x0 + _0x146ee9 / 4.5 + this['rPer'], 0x1 + _0x167e46 / 1.5, Math['max'](0x0, _0x956a8b - 0xe), '#29A0BA'), _0x444e67(0x0 + _0x146ee9 / 1.5 - this['rPer'] * 0x2, _0x167e46, Math['max'](0x0, _0x956a8b - 38.5 + _0x167e46 / 0x5), '#2B8CAA'), _0x444e67(0x0 + _0x146ee9 / 1.5 - this['rPer'] * 0x2, _0x167e46, Math['max'](0x0, _0x956a8b - 54.5 + _0x167e46 / 0xb), '#28829E'), _0x1d2dab['restore']();
}
break;
case _0x3de764: {
    _0x1d2dab['save']();
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    if (!(_0x31f3fc == 0x2)) _0x1d2dab['rotate'](this['rPer'] * 0x2 * Math['PI']);
    var _0x44b7ce = 0x0,
        _0x130370 = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x5c9f86 = 0x6,
        _0x34f1d4 = 1.5;
    _0x44b7ce = _0x34f1d4 * Math['sin'](0x2 * Math['PI'] / _0x5c9f86 * _0x130370), _0x1d2dab['globalAlpha'] = 0.7 * _0x41bbe5;
    var _0x27dd63 = 0x4;
    _0x1d2dab['fillStyle'] = 'black', _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), !(_0x31f3fc == 0x2) && (_0x1d2dab['fillStyle'] = 'black', _0x1d2dab['globalAlpha'] = 0.5 * _0x41bbe5, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x27dd63 + _0x44b7ce), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x44b7ce), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x44b7ce), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x44b7ce), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x44b7ce), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath']()), _0x1d2dab['restore']();
}
break;
case _0x2e4569: {
    _0x1d2dab['save']();
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0.25 * _0x41bbe5, _0x444e67(0x0, 0x0, this['rad'], '#9F8641'), _0x1d2dab['restore']();
}
break;
case _0x58e674: {
    _0x1d2dab['save']();
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0.25 * _0x41bbe5, _0x444e67(0x0, 0x0, this['rad'], '#785228'), _0x1d2dab['restore']();
}
break;
default: {
    _0x1d2dab['save']();
    var _0x41bbe5 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0.15 * _0x41bbe5, _0x444e67(0x0, 0x0, this['rad'], 'black'), _0x1d2dab['restore']();
}
break;
}
}, _0x4763ce['prototype']['setObjTypes'] = function (_0x1bd5fb, _0x198f0b) {
this['oType'] = _0x1bd5fb, this['abilityType'] = _0x198f0b;
}, _0x4763ce['prototype']['skinThemeID'] = 0x0, _0x4763ce['prototype']['mopeSeasonID'] = 0x0, _0x4763ce['prototype']['readCustomData_onNewlyVisible'] = function (_0x24eb77) {
this['specType'] = _0x24eb77['readUInt8'](), this['specType2'] = _0x24eb77['readUInt8'](), this['skinThemeID'] = _0x24eb77['readUInt8'](), this['mopeSeasonID'] = _0x24eb77['readUInt8'](), (this['abilityType'] == _0x21aff7 || this['abilityType'] == _0xa64540 || this['abilityType'] == _0x5bfcf0 || this['abilityType'] == _0x1f87f5 || this['abilityType'] == _0x58e674) && (this['rad'] = this['oRad'] = 0x0);
}, _0x4763ce['prototype']['updateTimer'] = function () {
this['timer'] = Math['round'](this['timer']);
var _0x32fc0a = this['timer'];
this['setTimer'](_0x32fc0a);
}, _0x4763ce['prototype']['timerTxt'] = null, _0x4763ce['prototype']['setTimer'] = function (_0xc8f3dd) {
var _0x55d270 = '' + _0xc8f3dd;
null == this['timerTxt'] ? (this['timerTxt'] = new _0x407dea(0x14, '#FFFFFF'), this['timerTxt']['strokeW'] = 0x2, this['timerTxt']['multiLine'] = !![], this['timerTxt']['renderScale'] = 0x5, this['timerTxt']['setText'](_0x55d270)) : (this['timerTxt']['setFontSize'](0x14), this['timerTxt']['setText'](_0x55d270));
};

function _0x4763ce() {
_0x4763ce['superClass']['call'](this, _0x2c5edd), _0x4763ce['prototype']['easeAngleChanges'] = ![], this['abilityType'] == _0x4bf664 && (this['doesDrawEffectScale'] = this['drawEffectScale_Slow'] = !![]);
}
window['AbilityObj'] = _0x4763ce, _0x13dc56['setCustomClassForGameObjType'](_0x4763ce, _0x2c5edd);
var _0x570743 = _0x44baa9,
_0x1e3c43 = _0x4763ce;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43, _0x44baa9['prototype']['customDraw'] = function (_0x3f9f82) {
_0x1d2dab['save']();
var _0x8c8072 = _0x1d2dab['globalAlpha'];
_0x1d2dab['rotate'](this['angle']), _0x1d2dab['globalAlpha'] = 0.05 * _0x8c8072, _0x444e67(0x0, 0x0, this['rad'], '#E4E7C8'), _0x1d2dab['globalAlpha'] = 0x1 * _0x8c8072;
var _0x1b77cc = 'skins/land/elephant/' + this['speciesType'],
    _0x221657 = this['getSkinImageObj'](_0x1b77cc + '/ability_elephantTrunkSmack.png');
if (_0x221657) {
    var _0x27b773 = _0x29d4e1((_0x740c5b - this['spawnTime']) / 0x12c, 0x0, 0x1),
        _0x5caa63 = -(-0.5 + _0x27b773) * _0xa0b20a,
        _0x477209 = this['rad'] * 0.6;
    _0x1d2dab['save'](), _0x1d2dab['rotate'](_0x5caa63);
    var _0x3b4860 = 0x0,
        _0x110b65 = this['rad'],
        _0x423d52 = _0x477209 * 0x2 * 0.7,
        _0x474799 = _0x477209 * 0x2,
        _0x41e661 = 0.75,
        _0x5509ba = 0.95;
    _0x1d2dab['drawImage'](_0x221657, _0x3b4860 + _0x423d52 * -_0x41e661, _0x110b65 + _0x474799 * -_0x5509ba, _0x423d52, _0x474799), _0x1d2dab['restore']();
}
_0x1d2dab['restore']();
}, _0x44baa9['prototype']['getSkinImageObj'] = function (_0xf9daea) {
var _0x1d3054 = this['speciesType'] === 0x1 || this['speciesType'] === 0x2 || this['speciesType'] === 0xc9 ? 0x1 : 0x2,
    _0x3b86a8 = './assets/s/' + _0x1d3054 + '/' + _0xf9daea;
return this['skinThemeID'] > 0x0 && (_0x3b86a8 = './assets/t/' + this['skinThemeID'] + '/' + _0xf9daea), _0x5ace1d(_0x3b86a8, function (_0x538795) {
    console['log'](_0x538795['src']);
});
}, _0x44baa9['prototype']['readCustomData_onNewlyVisible'] = function (_0x3e05d9) {
_0x44baa9['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x3e05d9);
}, _0x44baa9['prototype']['readCustomData_onUpdate'] = function (_0x2b19f5) {
_0x44baa9['superClass']['prototype']['readCustomData_onUpdate']['call'](this, _0x2b19f5);
};

function _0x44baa9() {
_0x44baa9['superClass']['call'](this);
}
window['AbilityObjElephant'] = _0x44baa9, _0x13dc56['setCustomClassForGameObjType'](_0x44baa9, _0x2c5edd, _0x2fcd00);
var _0x570743 = _0x13f51b,
_0x1e3c43 = _0x4763ce;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43, _0x13f51b['prototype']['customDraw'] = function (_0x481023) {
var _0x5e5c14 = _0x1d2dab['globalAlpha'];
_0x1d2dab['save']();
var _0x187734 = (_0x740c5b - this['spawnTime']) / 0x3e8,
    _0x2ac727 = 1.5,
    _0x2a5155 = 0x1,
    _0x477741 = _0x2a5155 * Math['sin'](0x2 * Math['PI'] / _0x2ac727 * _0x187734),
    _0x1a3f00 = _0x1d2dab['globalAlpha'];
_0x1d2dab['globalAlpha'] *= 0.6 * _0x477741, _0x1d2dab['rotate'](this['angle']), _0x1d2dab['globalAlpha'] = 0.15 * _0x5e5c14;
if (this['specType2'] == 0x0 && this['aniSpecies']) _0x444e67(0x0, 0x0, this['rad'], '#96661C');
else _0x444e67(0x0, 0x0, this['rad'], '#e0dfde');
_0x1d2dab['restore'](), _0x1d2dab['save']();
var _0x4a04be = 'skins/';
this['animalType'] === 0x24 ? _0x4a04be += 'arctic/bear/' + this['aniSpecies'] + '/slash.png' : _0x4a04be += 'land/bear/' + this['aniSpecies'] + '/slash.png';
var _0x54ee0b = this['getSkinImageObj'](_0x4a04be);
if (_0x54ee0b) {
    var _0x47e05f = Math['min'](0x1, (_0x740c5b - this['spawnTime']) / 0xc8),
        _0x4c4500 = _0x29d4e1((_0x740c5b - this['spawnTime']) / 0x12c, 0x0, 0x1),
        _0x2ec0c4 = -(-0.5 + _0x4c4500) * _0xa0b20a,
        _0x443214 = this['angle'];
    _0x1d2dab['rotate'](this['angle'] + _0x2ec0c4 * (this['specType'] == 0x0 ? 0x1 : -0x1));
    var _0x13bff7 = -this['rad'] * 0x1,
        _0x498fc4 = 0x0,
        _0x59925a = this['rad'],
        _0x3af75f = _0x13bff7 * 0x2,
        _0x284381 = _0x13bff7 * 0x2 * _0x47e05f,
        _0x19c702 = 0.5,
        _0x32bc68 = 0.8;
    _0x1d2dab['drawImage'](_0x54ee0b, _0x498fc4 + _0x3af75f * -_0x19c702, _0x59925a + _0x284381 * -_0x32bc68 + _0x13bff7, _0x3af75f, _0x284381);
}
_0x1d2dab['restore']();
}, _0x13f51b['prototype']['getSkinImageObj'] = function (_0x1e961a) {
var _0x1e2f93 = this['mopeSeasonID'];
return this['animalType'] === 0x24 && (_0x1e2f93 = this['speciesType'] === 0xc9 ? 0x1 : this['mopeSeasonID']), this['getSkinImageObjForSeason'](_0x1e961a, _0x1e2f93);
}, _0x13f51b['prototype']['readCustomData_onNewlyVisible'] = function (_0x19f88e) {
_0x13f51b['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x19f88e), this['aniSpecies'] = _0x19f88e['readUInt8']();
};

function _0x13f51b() {
_0x13f51b['superClass']['call'](this);
}
window['BearSlash'] = _0x13f51b, _0x13dc56['setCustomClassForGameObjType'](_0x13f51b, _0x2c5edd, _0x28e488);
var _0x570743 = _0x3d6c08,
_0x1e3c43 = _0x131218;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43, _0x3d6c08['prototype']['animalType'] = _0xb392ab, _0x3d6c08['prototype']['season'] = 0x1, _0x3d6c08['prototype']['animalSpecies'] = 0x0, _0x3d6c08['prototype']['animalSubSpecies'] = 0x0, _0x3d6c08['prototype']['nickName'] = '', _0x3d6c08['prototype']['skinImgName'] = null, _0x3d6c08['prototype']['skinNotLoadedColor'] = '#75ce67', _0x3d6c08['prototype']['flag_fullAlpha'] = ![], _0x3d6c08['prototype']['flag_lowWat'] = ![], _0x3d6c08['prototype']['flag_tailBitten'] = ![], _0x3d6c08['prototype']['flag_underWater'] = ![], _0x3d6c08['prototype']['flag_eff_stunned'] = ![], _0x3d6c08['prototype']['flag_eff_frozen'] = ![], _0x3d6c08['prototype']['flag_eff_virusInfection'] = ![], _0x3d6c08['prototype']['flag_usingAbility'] = ![], _0x3d6c08['prototype']['flag_eff_invincible'] = ![], _0x3d6c08['prototype']['flag_eff_healing'] = _0x3d6c08['prototype']['flag_eff_poison'] = _0x3d6c08['prototype']['flag_eff_bleeding'] = ![], _0x3d6c08['prototype']['flag_eff_hot'] = ![], _0x3d6c08['prototype']['flag_eff_aloeveraHealing'] = ![], _0x3d6c08['prototype']['flag_iceSliding'] = ![], _0x3d6c08['prototype']['underwaterA'] = 0x0, 0x4, _0x3d6c08['prototype']['nickNameA'] = 0x0, _0x3d6c08['prototype']['bleedingA'] = 0x0, _0x3d6c08['prototype']['stunA'] = 0x0, _0x3d6c08['prototype']['frozenEffA'] = _0x3d6c08['prototype']['onFireEffA'] = _0x3d6c08['prototype']['effA_healing'] = _0x3d6c08['prototype']['effA_hot'] = 0x0, _0x3d6c08['prototype']['effA_aloeveraHealing'] = _0x3d6c08['prototype']['effA_poison'] = _0x3d6c08['prototype']['effA_bleeding'] = _0x3d6c08['prototype']['effA_stunk'] = 0x0, _0x3d6c08['prototype']['effA_constricted'] = _0x3d6c08['prototype']['effA_slimed'] = _0x3d6c08['prototype']['effA_webStuck'] = 0x0, _0x3d6c08['prototype']['effA_speared'] = 0x0, _0x3d6c08['prototype']['effA_dirtStuck'] = 0x0, _0x3d6c08['prototype']['nameA'] = 0x0, _0x3d6c08['prototype']['loadedSkinImg'] = null, _0x3d6c08['prototype']['outlineW'] = null, _0x3d6c08['prototype']['teamID'] = 0x0, _0x3d6c08['prototype']['wins1v1'] = 0x0, _0x3d6c08['prototype']['birdNoAnimationFlyWingAngle'] = -0.2, _0x3d6c08['prototype']['getNameSize'] = function () {
return 0xa;
}, _0x3d6c08['prototype']['setNick'] = function (_0x59b29e) {
this['nickName'] = _0x59b29e, null == this['nickTXT'] ? (this['nickTXT'] = new _0x407dea(this['getNameSize'](), 'white'), this['nickTXT']['strokeW'] = 1.5, this['nickTXT']['multiLine'] = !![], this['nickTXT']['renderScale'] = 0x5, this['nickTXT']['setText'](this['nickName'])) : (this['nickTXT']['setFontSize'](this['getNameSize']()), this['nickTXT']['setText'](this['nickName']));
}, _0x3d6c08['prototype']['getOutlineColor'] = function () {
var _0x4f8344 = this['curBiome'];
if (this['id'] > 0x0) {
    var _0x1a1533 = _0x3c55ea[_0x2fc9ba];
    if (this['alwaysPlainOutline']) return _0x4af19c;
    var _0x22b38c = _0x5dd9a5 != _0x1292d4 || _0x1a1533 && _0x1a1533['teamID'] != this['teamID'] && this['teamID'] != 0x0;
    if (_0x22b38c) {
        if (this['isEdibleOutlined']()) return _0x4c4d1f;
        if (_0x5bcbef[this['animalType'] - 0x1] > 0x0 && this['id'] != _0x2fc9ba) return _0x4fab5f;
    }
    if (this['flag_inWater']) _0x4f8344 = _0x506414;
    if (_0x284d8d != null && this['id'] == _0x284d8d['id'] && !_0x44408d) return 'cyan';
}
return _0x3b949e(_0x4f8344);
}, _0x3d6c08['prototype']['drawEyeAtPos'] = function (_0xd8fac5, _0x30deb2) {
var _0x3a6cf1 = 4.5;
_0x1d2dab['beginPath'](), _0x1d2dab['arc'](_0xd8fac5, _0x30deb2, _0x3a6cf1, 0x0, Math['PI'] * 0x2), _0x1d2dab['fillStyle'] = 'black', _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['fillStyle'] = 'white';
var _0x53e29f = _0xd8fac5 - 0x2,
    _0x2223c3 = _0x30deb2 - 0x1;
_0x1d2dab['arc'](_0x53e29f, _0x2223c3, _0x3a6cf1 * 0.22, 0x0, Math['PI'] * 0x2), _0x1d2dab['fill']();
}, _0x3d6c08['prototype']['animalInfo'] = function () {
var _0x1ecac6 = {};
switch (this['animalType']) {
case _0x3d71a1:
    _0x1ecac6['aniName'] = 'Snail', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'You\'re a super slow snail!', _0x1ecac6['aniCol'] = '#fcc02b', _0x1ecac6['skinName'] = 'snail';
    break;
case _0xb392ab:
    _0x1ecac6['aniName'] = 'Mouse', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'You\'re a tiny mouse, eat food to grow!', _0x1ecac6['aniCol'] = '#9BA9B9', _0x1ecac6['skinName'] = 'mouse';
    break;
case _0x48065b:
    _0x1ecac6['aniName'] = 'Rabbit', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to RABBIT! \x0aPress W to burrow a hole to hide in!', _0x1ecac6['aniCol'] = '#AA937E', _0x1ecac6['skinName'] = 'rabbit';
    break;
case _0x4cff3a:
    _0x1ecac6['aniName'] = 'Pig', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to PIG!\x0a Pigs move FAST through MUD! (Can use \'stink\' on mud/ hiding holes!)', _0x1ecac6['aniCol'] = '#DD6BD4', _0x1ecac6['skinName'] = 'pig';
    break;
case _0x84499b:
    _0x1ecac6['aniName'] = 'Fox', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to FOX! ,\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!', _0x1ecac6['aniCol'] = '#FF9D43', _0x1ecac6['skinName'] = 'fox';
    break;
case _0x3136da:
    _0x1ecac6['aniName'] = 'Deer', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to DEER! \x0aPress W to dig up food! \x0aDig in mud for better food!\x0a Hint:Check water areas for new food sources!', _0x1ecac6['aniCol'] = '#C4773E', _0x1ecac6['skinName'] = 'deer';
    break;
case _0x12b5f6:
    _0x1ecac6['aniName'] = 'Mole', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to MOLE!\x0a Hold W to dig underground!\x0aGo under anything, do surprise attacks!', _0x1ecac6['aniCol'] = '#4C4A45', _0x1ecac6['skinName'] = 'mole';
    break;
case _0x39a5c5:
    _0x1ecac6['aniName'] = 'Zebra', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to ZEBRA! \x0aPress W to kick side ways!', _0x1ecac6['aniCol'] = '#FFFFFF', _0x1ecac6['skinName'] = 'zebra';
    break;
case _0xd7a1f1:
    _0x1ecac6['aniName'] = 'Lion', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to LION!\x0a Press W to release a mighty ROAR (Rawr!)!', _0x1ecac6['aniCol'] = '#f8c923', _0x1ecac6['skinName'] = 'lion';
    break;
case _0x189024:
    _0x1ecac6['aniName'] = 'Bear', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to BEAR!\x0a Bears climb through green hills! (Press W to use your claw!)', _0x1ecac6['aniCol'] = '#99591C', _0x1ecac6['skinName'] = 'bear';
    break;
case _0x1d3e9a:
    _0x1ecac6['aniName'] = 'Croc', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to CROCODILE!\x0a Press W to bite and drag around animals! \x0a+ (Now hide in water spots)+ Swim well in Mud, Lakes & Oceans!', _0x1ecac6['aniCol'] = '#30F51C', _0x1ecac6['skinName'] = 'croc';
    break;
case _0x254b52:
    _0x1ecac6['aniName'] = 'Hippo', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to HIPPO!\x0aHippos are great swimmers, dominate the Lakes/Oceans/Mud!', _0x1ecac6['aniCol'] = '#945A99', _0x1ecac6['skinName'] = 'hippo';
    break;
case _0xd3040d:
    _0x1ecac6['aniName'] = 'Rhino', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to RHINO!\x0a Press W to CHARGE with your mighty horn!', _0x1ecac6['aniCol'] = '#94a3a9', _0x1ecac6['skinName'] = 'rhino';
    break;
case _0x4c5efa:
    _0x1ecac6['aniName'] = 'Shrimp', _0x1ecac6['aniDesc'] = '', _0x1ecac6['aniCol'] = '#f88e37', _0x1ecac6['skinName'] = 'shrimp', _0x1ecac6['upgradeText'] = 'You\'re a tiny shrimp, eat food to grow bigger!';
    break;
case _0xf5643:
    _0x1ecac6['aniName'] = 'Trout', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to TROUT!\x0aHint: Hold Left-click to RUN! (Uses extra water)', _0x1ecac6['aniCol'] = '#ac8686', _0x1ecac6['skinName'] = 'trout';
    break;
case _0x1a993f:
    _0x1ecac6['aniName'] = 'Crab', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to CRAB!\x0a Crabs can survive on dry land!\x0a (On land, Press W to go into your shell!)', _0x1ecac6['aniCol'] = '#bf2408', _0x1ecac6['skinName'] = 'crab';
    break;
case _0xab40e7:
    _0x1ecac6['aniName'] = 'Squid', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to SQUID!\x0a Squids can use INK when injured (press W!) \x0a+ you can hide in plankton bushes!', _0x1ecac6['aniCol'] = '#40dda4', _0x1ecac6['skinName'] = 'squid';
    break;
case _0x2fd73b:
    _0x1ecac6['aniName'] = 'Shark', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to SHARK!\x0a A vicious predator of the oceans!', _0x1ecac6['aniCol'] = '#999fc6', _0x1ecac6['skinName'] = 'shark';
    break;
case _0x5b8b30:
    _0x1ecac6['aniName'] = 'Sea-horse', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to SEA HORSE!\x0a An agile hunter!', _0x1ecac6['aniCol'] = '#73BE2F', _0x1ecac6['skinName'] = 'seahorse';
    break;
case _0xfbbc5:
    _0x1ecac6['aniName'] = 'Jellyfish', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to JELLYFISH!\x0a A slowly-turning animal that can grow quite large!', _0x1ecac6['aniCol'] = '#FDB9BA', _0x1ecac6['skinName'] = 'jellyfish';
    break;
case _0x1597d0:
    _0x1ecac6['aniName'] = 'Turtle', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to TURTLE!\x0a Lives well on land & water! (On land, Press W to go into your shell!)', _0x1ecac6['aniCol'] = '#502E1A', _0x1ecac6['skinName'] = 'turtle';
    break;
case _0x46166b:
    _0x1ecac6['aniName'] = 'Stringray', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to STINGRAY!\x0a Use electic shock (Release W key!) to shock animals! \x0a(Takes time to recharge)', _0x1ecac6['aniCol'] = '#164336', _0x1ecac6['skinName'] = 'stingray';
    break;
case _0x526523:
    _0x1ecac6['aniName'] = 'The Kraken', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to THE KRAKEN!\x0a Terrorize the oceans, and be feared by all!\x0a (Release W to use whirlpool ability!)', _0x1ecac6['aniCol'] = '#64a034', _0x1ecac6['skinName'] = 'kraken';
    break;
case _0x52507b:
    _0x1ecac6['aniName'] = 'Pufferfish', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to PUFFERFISH!\x0a (Hold W to inflate- become spiky, and dangerous to touch!)', _0x1ecac6['aniCol'] = '#6C5C2C', _0x1ecac6['skinName'] = 'pufferfish';
    break;
case _0x697285:
    _0x1ecac6['aniName'] = 'Killer Whale', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to Killer Whale! \x0aWhales blow out water when diving! (And sometimes other loot!)', _0x1ecac6['aniCol'] = '#141414', _0x1ecac6['skinName'] = 'killerwhale';
    break;
case _0x3e9276:
    _0x1ecac6['aniName'] = 'Swordfish', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to ' + _0x1ecac6['aniName'] + '!\x0a (Press W to rush with your sharp nose!)', _0x1ecac6['aniCol'] = '#689CD7', _0x1ecac6['skinName'] = 'swordfish';
    break;
case _0x199c9a:
    _0x1ecac6['aniName'] = 'Gorilla', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to ' + _0x1ecac6['aniName'] + '!\x0a Gorillas are very fast on hills/trees!\x0a Press W to throw bananas! (from trees)', _0x1ecac6['aniCol'] = '#323232', _0x1ecac6['skinName'] = 'gorilla';
    break;
case _0x1bdc24:
    _0x1ecac6['aniName'] = 'Octopus', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to Octopus!\x0aHold W to use your \'Disguise\' ability!\x0a(Hint: wait for prey to bite you- they get stunned!)', _0x1ecac6['aniCol'] = '#ff8340', _0x1ecac6['skinName'] = 'octopus';
    break;
case _0x20f46e:
    _0x1ecac6['aniName'] = 'Dragon', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to ' + _0x1ecac6['aniName'] + '!\x0a (You\'re amazing!) \x0aFly over everything, Hold W to shoot fire!', _0x1ecac6['aniCol'] = '#22FF8A', _0x1ecac6['skinName'] = 'dragon';
    break;
case _0x5b6f26:
    _0x1ecac6['aniName'] = 'Black Dragon', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to ' + _0x1ecac6['aniName'] + '!\x0a Black dragons drink lava instead of water! Black dragons only heal on healing stones/lava!', _0x1ecac6['aniCol'] = 'black', _0x1ecac6['skinName'] = 'blackdragon';
    break;
case _0x4ab048:
    _0x1ecac6['aniName'] = 'Giant Spider', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to ' + _0x1ecac6['aniName'] + '!\x0a Place web around the game to catch prey!', _0x1ecac6['aniCol'] = 'black', _0x1ecac6['skinName'] = 'giantSpider';
    break;
case _0x14a18f:
    _0x1ecac6['aniName'] = 'Cobra', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to ' + _0x1ecac6['aniName'] + '!\x0a Hold W to Spit venom, and poison animals with your bite!', _0x1ecac6['aniCol'] = 'black', _0x1ecac6['skinName'] = 'cobra';
    break;
case _0x17eda1:
    _0x1ecac6['aniName'] = 'Boa Constrictor', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to ' + _0x1ecac6['aniName'] + '!\x0a Coil and suffocate other animals!', _0x1ecac6['aniCol'] = 'black', _0x1ecac6['skinName'] = 'boaConstrictor';
    break;
case _0x47ccac:
    _0x1ecac6['aniName'] = 'T-REX', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to ' + _0x1ecac6['aniName'] + ' The Dinosaur!\x0a This ancient dinosaur has powerful jaws that can drag prey around!!', _0x1ecac6['aniCol'] = '#862A2A', _0x1ecac6['skinName'] = 'trex';
    break;
case _0x4f8d37:
    _0x1ecac6['aniName'] = 'Giraffe', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to Giraffe!\x0aGiraffe have huge legs and stomp anyone in their way!', _0x1ecac6['aniCol'] = '#E9BD23', _0x1ecac6['skinName'] = 'giraffe';
    break;
case _0x5041f9:
    _0x1ecac6['aniName'] = 'Eagle', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to Eagle!\x0aEagles can fly up other animals in the air! !\x0a', _0x1ecac6['aniCol'] = '#5b400d', _0x1ecac6['skinName'] = 'eagle';
    break;
case _0x2cb3a6:
    _0x1ecac6['aniName'] = 'Arctic Fox', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to ' + _0x1ecac6['aniName'] + '!\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!', _0x1ecac6['aniCol'] = '#CFCFCF', _0x1ecac6['skinName'] = 'arctic/arcticfox';
    break;
case _0x323cb6:
    _0x1ecac6['aniName'] = 'Arctic Hare', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to ' + _0x1ecac6['aniName'] + '!\x0a \x0aPress W to burrow a hole to hide in!', _0x1ecac6['aniCol'] = '#D5D5D5', _0x1ecac6['skinName'] = 'arctic/arctichare';
    break;
case _0x55a926:
    _0x1ecac6['aniName'] = 'The Yeti!', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to ' + _0x1ecac6['aniName'] + '!\x0a So it really exists... \x0a Hold W to turn into snow, release W to freeeeeze!', _0x1ecac6['aniCol'] = '#839eb5', _0x1ecac6['skinName'] = 'arctic/yeti';
    break;
case _0xaa5ad2:
    _0x1ecac6['aniName'] = 'Chipmunk', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = '', _0x1ecac6['aniCol'] = '#A77C30', _0x1ecac6['skinName'] = 'arctic/chipmunk';
    break;
case _0x4f4705:
    _0x1ecac6['aniName'] = 'Muskox', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to ' + _0x1ecac6['aniName'] + '!\x0a Press W to charge with your horns! \x0aPlus move decently on ice!', _0x1ecac6['aniCol'] = '#231f18', _0x1ecac6['skinName'] = 'arctic/muskox';
    break;
case _0x236cec:
    _0x1ecac6['aniName'] = 'Penguin', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to ' + _0x1ecac6['aniName'] + '!\x0a Left-click to run!\x0a (HOLD W to slide FAST on ice)!', _0x1ecac6['aniCol'] = '#FFFFFF', _0x1ecac6['skinName'] = 'arctic/penguin';
    break;
case _0x3e89f8:
    _0x1ecac6['aniName'] = 'Polar Bear', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to ' + _0x1ecac6['aniName'] + '!\x0a Polar bears can climb hills! \x0a+ They\'re amazing swimmers!', _0x1ecac6['aniCol'] = '#e4e4e4', _0x1ecac6['skinName'] = 'arctic/bear/bear';
    break;
case _0x1fc0ae:
    _0x1ecac6['aniName'] = 'Seal', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to ' + _0x1ecac6['aniName'] + '!\x0a Seals can slide on ice (Hold W) + can climb hills (rocks too!)', _0x1ecac6['aniCol'] = '#cfcfcf', _0x1ecac6['skinName'] = 'arctic/seal';
    break;
case _0x575d5b:
    _0x1ecac6['aniName'] = 'Snow leopard', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to ' + _0x1ecac6['aniName'] + '!\x0a Press W to get a speed boost! (Every 8 seconds)!', _0x1ecac6['aniCol'] = '#cfcfcf', _0x1ecac6['skinName'] = 'arctic/snowleopard';
    break;
case _0x52ea48:
    _0x1ecac6['aniName'] = 'Walrus', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to ' + _0x1ecac6['aniName'] + '!\x0a You can slide on ice (Hold W) + can climb hills (rocks too!)', _0x1ecac6['aniCol'] = '#633838', _0x1ecac6['skinName'] = 'arctic/walrus';
    break;
case _0x3dd041:
    _0x1ecac6['aniName'] = 'Reindeer', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to ' + _0x1ecac6['aniName'] + '!\x0a Press W to dig up food! \x0a Your sharp hooves let you turn very well on ice!', _0x1ecac6['aniCol'] = '#a68976', _0x1ecac6['skinName'] = 'arctic/reindeer';
    break;
case _0x45e678:
    _0x1ecac6['aniName'] = 'Wolf', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to ' + _0x1ecac6['aniName'] + '!\x0a Wolf paws turn very well on ice!\x0a Press W to howl!', _0x1ecac6['aniCol'] = '#6B6B6B', _0x1ecac6['skinName'] = 'arctic/wolf';
    break;
case _0x136680:
    _0x1ecac6['aniName'] = 'Wolverine', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to ' + _0x1ecac6['aniName'] + '!\x0a Press W to Let out a Powerful GROWL! (Knocks back prey!)', _0x1ecac6['aniCol'] = '#843A0F', _0x1ecac6['skinName'] = 'arctic/wolverine';
    break;
case _0x40ac2b:
    _0x1ecac6['aniName'] = 'Mammoth', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to ' + _0x1ecac6['aniName'] + '!\x0a Press W to roll snowballs with your trunk!\x0a The bigger the snowball gets, the longer the freeze!', _0x1ecac6['aniCol'] = '#9d4717', _0x1ecac6['skinName'] = 'arctic/mammoth';
    break;
case _0xdb1a28:
    _0x1ecac6['aniName'] = 'Donkey', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to ' + _0x1ecac6['aniName'] + '!\x0a Press W to Kick any animal behind you', _0x1ecac6['aniCol'] = '#8c7c64', _0x1ecac6['skinName'] = 'donkey';
    break;
case _0x39e9c9:
    _0x1ecac6['aniName'] = 'Sabertooth Tiger', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to Sabertooth Tiger!\x0aSabertooth Tigers are great swimmers, dominate the Lakes/Oceans/Mud!', _0x1ecac6['aniCol'] = '#945A99', _0x1ecac6['skinName'] = 'sabertoothtiger';
    break;
case _0x39357f:
    _0x1ecac6['aniName'] = 'Elephant', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to ' + _0x1ecac6['aniName'] + '!\x0a Use your long trunk to attack and eat food!', _0x1ecac6['aniCol'] = '#945A99', _0x1ecac6['skinName'] = 'elephant';
    break;
case _0x13ad70:
    _0x1ecac6['aniName'] = 'Blue Whale', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to Blue Whale!\x0a Smash with your powerful tail!', _0x1ecac6['aniCol'] = '#945A99', _0x1ecac6['skinName'] = 'bluewhale';
    break;
case _0x164f9e:
    _0x1ecac6['aniName'] = 'Hedgehog', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to Hedgehog!\x0a (Hold W to become spiky, and dangerous to touch!)', _0x1ecac6['aniCol'] = '#5b400d', _0x1ecac6['skinName'] = 'hedgehog';
    break;
case _0x2350ea:
    _0x1ecac6['aniName'] = 'King Crab', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to a KING CRAB!', _0x1ecac6['aniCol'] = '#971f0e', _0x1ecac6['skinName'] = 'kingcrab';
    break;
case _0x49617f:
    _0x1ecac6['aniName'] = 'Lemming', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = '', _0x1ecac6['aniCol'] = '#A77C30', _0x1ecac6['skinName'] = 'arctic/lemming';
    break;
case _0x86f82a:
    _0x1ecac6['aniName'] = 'Frog', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to Frog!!', _0x1ecac6['aniCol'] = '#FF9000', _0x1ecac6['skinName'] = 'frog/frog';
    break;
case _0xf59392:
    _0x1ecac6['aniName'] = 'Ostrich', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to Ostrich! Lay eggs to hatch babies! \x0aCommand babies by placing your crosshair (right-click/W)-\x0a They can attack prey!', _0x1ecac6['aniCol'] = '#FF9000', _0x1ecac6['skinName'] = 'ostrich/ostrich';
    break;
case _0x1b8ac0:
    _0x1ecac6['aniName'] = 'Pelican', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to Pelican! \x0aPick up water (and prey!) in your mouth,\x0afly, and drop water on prey! (press W again)', _0x1ecac6['aniCol'] = '#FF9000', _0x1ecac6['skinName'] = 'pelican/pelican';
    break;
case _0x4e8eac:
    _0x1ecac6['aniName'] = 'Falcon', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to Falcon! \x0aFly, and do a powerful dive attack! Aim it well.', _0x1ecac6['aniCol'] = '#FF9000', _0x1ecac6['skinName'] = 'falcon/falcon';
    break;
case _0x81deb4:
    _0x1ecac6['aniName'] = 'Snowy Owl', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to Snowy Owl!\x0a Aim the crosshair, \x0a right click/W when it\'s on top of prey, to attack!', _0x1ecac6['aniCol'] = '#FF9000', _0x1ecac6['skinName'] = 'snowyowl/snowyowl';
    break;
case _0x4618bb:
    _0x1ecac6['aniName'] = 'Baby Ostrich', _0x1ecac6['aniDesc'] = '', _0x1ecac6['upgradeText'] = 'UPGRADED to Baby Ostrich!!', _0x1ecac6['aniCol'] = '#FF9000', _0x1ecac6['skinName'] = 'ostrich/ostrich-baby';
    break;
case _0x19e418:
    _0x1ecac6['aniName'] = 'Phoenix', _0x1ecac6['upgradeText'] = 'UPGRADED to Phoenix!\x0aCreate powerful fire tornados to burn your enemies alive!', _0x1ecac6['aniCol'] = '#FF9000', _0x1ecac6['skinName'] = 'phoenix/phoenix';
    break;
case _0x380133:
    _0x1ecac6['aniName'] = 'Sea Monster', _0x1ecac6['upgradeText'] = 'UPGRADED to Sea Monster!', _0x1ecac6['aniCol'] = '#FF9000', _0x1ecac6['skinName'] = 'seamonster';
    break;
case _0x9ca027:
    _0x1ecac6['aniName'] = 'Land Monster', _0x1ecac6['upgradeText'] = 'UPGRADED to Land Monster!', _0x1ecac6['aniCol'] = '#FF9000', _0x1ecac6['skinName'] = 'landmonster';
    break;
case _0x40da91:
    _0x1ecac6['aniName'] = 'Ice Monster', _0x1ecac6['upgradeText'] = 'UPGRADED to Ice Monster!', _0x1ecac6['aniCol'] = '#FF9000', _0x1ecac6['skinName'] = 'icemonster';
    break;
case _0x31a0ba:
    _0x1ecac6['aniName'] = 'Dino Monster', _0x1ecac6['upgradeText'] = 'UPGRADED to Dino Monster!', _0x1ecac6['aniCol'] = '#FF9000', _0x1ecac6['skinName'] = 'dinomonster';
    break;
case _0x3182a5:
    _0x1ecac6['aniName'] = 'Pigeon', _0x1ecac6['upgradeText'] = 'UPGRADED to Pigeon!\x0aHold right click (or W) to fly!\x0a', _0x1ecac6['aniCol'] = '#FF9000', _0x1ecac6['skinName'] = 'pigeon/pigeon';
    break;
case _0x3e06be:
    _0x1ecac6['aniName'] = 'Toucan', _0x1ecac6['upgradeText'] = 'UPGRADED to Toucan!\x0aHold right click (or W) to fly!(HINT: Start flying from a fruit tree or bush to throw fruit upon landing!)', _0x1ecac6['aniCol'] = '#FF9000', _0x1ecac6['skinName'] = 'toucan/toucan';
    break;
default:
    _0x1ecac6['aniName'] = '(Animal)', _0x1ecac6['aniDesc'] = '', _0x1ecac6['aniCol'] = '#000000', _0x1ecac6['upgradeText'] = 'UPGRADED!';
}
return _0x1ecac6;
}, _0x3d6c08['prototype']['loadAnimalSkinImg'] = function () {
var _0x49702b = this['getSkinName']();
this['loadedSkinImg'] = null, _0x49702b && !_0x57dfdc && (this['loadedSkinImg'] = this['getSkinImageObj']('skins/' + _0x49702b + '.png'));
}, _0x3d6c08['prototype']['loadAnimalSkinImgAsync'] = async function () {
var _0x375a59 = this['getSkinName']();
this['loadedSkinImg'] = await this['getSkinImageObjAsync']('skins/' + _0x375a59 + '.png');
}, _0x3d6c08['prototype']['getIdealOpacity'] = function () {
return this['flag_usingDiveAbility'] || this['flag_usingAbility'] && (this['animalType'] == _0x12b5f6 || this['animalType'] == _0x1bdc24 || this['animalType'] == _0x55a926) ? 0x0 : 0x1;
}, _0x3d6c08['prototype']['isAnimalInside1v1Arena'] = function () {
if (_0x5bc15d != null && _0x44408d) {
    if (_0x5bc15d['p1ID'] == this['id'] || _0x5bc15d['p2ID'] == this['id']) return !![];
} else {
    if (_0x159fb6[this['id']] || _0x159fb6[_0x2fc9ba] && _0x2fc9ba == this['id']) return !![];
}
return ![];
}, _0x3d6c08['prototype']['setStealth'] = function () {
if (this['isAnimalInside1v1Arena']() || this['flag_isInArena']) this['idealOp'] = 0.6;
else(this['flag_stealth'] || this['flag_inHidingHole']) && (this['idealOp'] = 0.2);
}, _0x3d6c08['prototype']['setOpacityForFlyingAnimals'] = function (_0x5e620d) {
if (this['gabbedByAniID'] == this['id'] || this['grabbedAniID'] == this['id']) return;
this['id'] != _0x2fc9ba && (this['idealOp'] = 0.6);
}, _0x3d6c08['prototype']['getImageDataKey'] = function () {
return this['animalType'] + '__' + this['animalSpecies'] + '__' + this['animalSubSpecies'] + '__' + this['animalPremiumSkin'] + '__' + this['mopeSeasonID'] + '__' + this['skinThemeID'];
};
const _0x2d73a7 = {},
_0x307597 = 'cached_animal_image_data_keys',
_0x6dbb59 = () => {
    if (_0xa67a42) {
        const _0x370851 = localStorage['getItem'](_0x307597);
        console['error']('KEYS:', _0x370851), _0x370851 && JSON['parse'](_0x370851)['forEach'](_0x299ca5 => {
            _0x2d73a7[_0x299ca5] = localStorage['getItem'](_0x299ca5);
        });
    }
};
_0x3d6c08['prototype']['getUpgradeImagePath'] = function () {
let _0x3b6961 = this['animalInfo']()['skinName'],
    _0x136432 = '';
if (!_0x3b6961 || _0x3b6961['toLowerCase']()['includes']('scorpion') || this['animalSpecies'] == 0xc8) _0x136432 = this['getSkinImagePath']('skins/' + this['getSkinName']()) + '.ui.png';
else _0x136432 = this['getSkinImagePath']('skins/' + _0x3b6961 + '.ui.png');
return _0x136432;
}, _0x3d6c08['prototype']['getImageData'] = async function () {
const _0x296361 = this['getImageDataKey']();
if (_0x296361 in _0x2d73a7) return _0x2d73a7[_0x296361];
this['flag_fullAlpha'] = !![], this['buttonScaleF'] = 0x1, this['imgSizeF'] = 0x1;
var _0x10c19b = this['animalInfo'](),
    _0x40d0f3 = _0x10c19b['aniCol'];
return this['skinImgName'] = _0x10c19b['skinName'], this['skinNotLoadedColor'] = _0x40d0f3, await this['loadAnimalSkinImgAsync'](), this['draw'](), new Promise((_0x54bbc9, _0x18ea45) => {
    setTimeout(() => {
        const _0x2eb48e = document['createElement']('canvas'),
            _0x89501a = 0x8c,
            _0x15e5a1 = 0x6e;
        _0x2eb48e['width'] = _0x89501a, _0x2eb48e['height'] = _0x89501a;
        const _0x4cbdb3 = window['ctx'];
        window['ctx'] = _0x2eb48e['getContext']('2d'), this['w'] = _0x15e5a1, this['h'] = _0x15e5a1, this['rad'] = _0x15e5a1 / 0x2, this['skinRad'] = _0x15e5a1 / 0x2, this['idealOp'] = 0x1, this['underwaterA'] = 0x0, window['ctx']['translate'](_0x89501a / 0x2, _0x89501a / 0x2), window['ctx']['globalAlpha'] = 0x1, this['draw']();
        const _0xabef47 = _0x2eb48e['toDataURL']();
        window['ctx'] = _0x4cbdb3, _0x2d73a7[_0x296361] = _0xabef47;
        if (_0xa67a42) try {
            localStorage['setItem'](_0x307597, JSON['stringify'](Object['keys'](_0x2d73a7))), localStorage['setItem'](_0x296361, _0xabef47);
        } catch (_0x3e218d) {}
        return _0x54bbc9(_0xabef47);
    }, 0x3e8);
});
}, _0x3d6c08['prototype']['idealOp'] = 0x1, _0x3d6c08['prototype']['customDraw'] = function (_0x191fb0) {
this['preLoad']();
var _0x5a89ad = this['animalInfo'](),
    _0x38d072 = _0x5a89ad['aniCol'];
this['skinImgName'] = _0x5a89ad['skinName'], this['skinNotLoadedColor'] = _0x38d072;
switch (this['animalType']) {
case _0x52507b:
case _0x4f4705:
case _0x3e9276:
case _0x1597d0:
case _0x1d3e9a:
    tailLen = this['rad'] * 0.16;
    break;
}
this['loadAnimalSkinImg'](), _0x1d2dab['save'](), _0x1d2dab['rotate'](this['angle']);
var _0x7d26ad = 0x0,
    _0x2b1563 = (_0x740c5b - this['spawnTime']) / 0x3e8;
if (this['flag_eff_wobbling']) {
    var _0x2709fc = _0x21d673(_0x2b1563, 1.25, 0.1, 0x2);
    this['rad'] += _0x2709fc;
}
this['idealOp'] = this['getIdealOpacity'](), this['setStealth']();
if (this['flag_flying']) this['setOpacityForFlyingAnimals']();
this['flag_fullAlpha'] ? _0x1d2dab['globalAlpha'] = 0x1 : (this['underwaterA'] += (this['idealOp'] - this['underwaterA']) * 0.1, _0x1d2dab['globalAlpha'] *= this['underwaterA']);
if (this['flag_eff_invincible']) {
    var _0x4dfa15 = 0x1,
        _0x28f128 = 0.3,
        _0x4d15fa = 0x1,
        _0x2281fb = 0.5 * (_0x4d15fa - _0x28f128);
    _0x1d2dab['globalAlpha'] *= _0x28f128 + _0x2281fb + _0x2281fb * Math['sin'](0x2 * Math['PI'] / _0x4dfa15 * ((_0x740c5b - this['spawnTime']) / 0x3e8));
}
this['outlineW'] = 0x2 + _0x7d26ad;
if (!(this['dead'] || this['flag_underWater'] || this['animalType'] == _0x12b5f6 && this['flag_usingAbility'])) {
    if (!this['flag_underWater']) {
        var _0x23141d = this['getOutlineColor']();
        if (this['killerId'] == 0x0 && !(this['flag_flying'] && this['id'] == _0x2fc9ba || _0x31f3fc == 0x2 && !(_0x23141d == _0x4c4d1f || _0x23141d == _0x4fab5f))) this['teamID'] > 0x0 && _0xefeaf8 != null && _0x5dd9a5 == _0x1292d4 && (_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = this['isAnimalInside1v1Arena']() ? 0.3 : this['idealOp'], _0x444e67(0x0, 0x0, this['rad'] + 0x2, _0xefeaf8['getTeamColor'](this['teamID'])), _0x1d2dab['restore']()), this['drawAnimalUnderSkinCircle'](_0x23141d);
        else this['outlineW'] = 0x0;
    }
}
this['drawUnderEffects']();
if (this['canDrawAnimalSkin']()) this['drawAnimalSkin'](_0x23141d);
this['drawUnderWater']();
if (this['animalPremiumSkin'] != 0x0 && !this['flag_eff_shivering']) this['sparkleAnim']();
_0x1d2dab['restore'](), this['drawTopEffects'](), this['drawLowWaterDrop']();
if (!this['flag_isInArena']) {
    if (this['id'] == _0x2fc9ba && this['flag_viewing1v1Invite']) {} else {
        if (!this['flag_usingDiveAbility']) this['drawNickName'](_0x221b08 == null ? this['idealOp'] : 0.2);
    }
}
this['drawZombieEffect']();
}, _0x3d6c08['prototype']['canDrawAnimalSkin'] = function () {
return !![];
}, _0x3d6c08['prototype']['drawZombieEffect'] = function () {
this['effecT_isZombie'] && (_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.6, _0x444e67(0x0, 0x0, this['skinRad'], '#B6CF40'), _0x1d2dab['restore']());
}, _0x3d6c08['prototype']['drawLowWaterDrop'] = function () {
if (this['flag_lowWat']) {
    var _0xdda049 = 1.2,
        _0x3bd2c2 = 0.2,
        _0xf3750b = 0.8,
        _0x384a8b = 0.5 * (_0xf3750b - _0x3bd2c2),
        _0x3e9f06 = _0x3bd2c2 + _0x384a8b + _0x384a8b * Math['sin'](0x2 * Math['PI'] / _0xdda049 * (_0x740c5b / 0x3e8));
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = _0x3e9f06;
    if (this['animalType'] == _0x5b6f26 || this['animalType'] == _0x19e418 || this['animalType'] == _0x9ca027 || this['animalType'] == _0x3e06be && this['animalSpecies'] == 0x4) _0x1d2dab['fillStyle'] = _0x3ada2a;
    else {
        if (this['animalType'] == _0x380133) _0x1d2dab['fillStyle'] = _0xf1a8b5;
        else {
            if (this['animalType'] == _0x36b345) _0x1d2dab['fillStyle'] = _0x3883f5;
            else _0x1d2dab['fillStyle'] = _0x4a8f7b;
        }
    }
    _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, this['rad'] + 0x5, 0x5, 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['restore']();
}
}, _0x3d6c08['prototype']['sparkleInterval'] = 0x5, _0x3d6c08['prototype']['sparklDuration'] = 0x3, _0x3d6c08['prototype']['sparkleNext'] = 0x0, _0x3d6c08['prototype']['sparkleAniT'] = 0x0, _0x3d6c08['prototype']['setSparkleInterval'] = function (_0x892374, _0x5de9fa) {
this['sparkleInterval'] = _0x892374, this['sparklDuration'] = _0x5de9fa, this['setSparkleXY']();
}, _0x3d6c08['prototype']['seSparkle'] = function () {
this['sparkleAniT'] = +new Date() + 0x3e8 * this['sparklDuration'], this['sparkleNext'] = this['sparkleAniT'] + 0x3e8 * this['sparkleInterval'], this['setSparkleXY']();
}, _0x3d6c08['prototype']['isMouseHovering'] = ![], _0x3d6c08['prototype']['sparkleAnim'] = function () {
if (this['animalPremiumSkin'] && (_0x740c5b - this['spawnTime']) / 0x3e8 > 0x5) {
    if (this['id'] > 0x0 || this['id'] == 0x0 && this['isMouseHovering']) + new Date() > this['sparkleNext'] && (this['seSparkle'](), this['setSparkleXY']());
    if (this['sparkleAniT'] > +new Date()) this['showSparkling']();
}
}, _0x3d6c08['prototype']['sparkleAng'] = 0x0, _0x3d6c08['prototype']['sparkleX'] = 0x0, _0x3d6c08['prototype']['sparkleY'] = 0x0, _0x3d6c08['prototype']['setSparkleXY'] = function () {
var _0x2d858c = this['rad'] / 0x2,
    _0x4dea81 = _0x2d858c * 0.3,
    _0x2a1ade = _0x2d858c,
    _0xf34f3e = _0x5e22a2(_0x4dea81, _0x2a1ade),
    _0x42baac = _0x5e22a2(_0x4dea81, _0x2a1ade);
_0xf34f3e *= Math['random']() * 0xa > 0x5 ? -0x1 : 0x1, _0x42baac *= Math['random']() * 0xa > 0x5 ? -0x1 : 0x1, this['sparkleX'] = _0xf34f3e, this['sparkleY'] = _0x42baac;
}, _0x3d6c08['prototype']['showSparkling'] = function () {
var _0x560b47 = 0x5;
_0x1d2dab['save']();
var _0x55b88f = 1.5,
    _0x332798 = 0.3,
    _0x17eba1 = 0x1,
    _0x2e695b = 0.5 * (_0x17eba1 - _0x332798);
_0x1d2dab['globalAlpha'] *= _0x332798 + _0x2e695b + _0x2e695b * Math['sin'](0x2 * Math['PI'] / _0x55b88f * ((_0x740c5b - this['spawnTime']) / 0x3e8)), this['sparkleAng'] += 0.5;
var _0x41dfdb = 0x1,
    _0x4d1b7a = 0x0;
_0x1d2dab['fillStyle'] = '#faffb6';
for (i = 0x0; i < 0x3; i++) {
    _0x1d2dab['save'](), _0x1d2dab['translate'](this['sparkleX'], this['sparkleY']), _0x1d2dab['rotate'](_0x2bcbaa(this['sparkleAng'])), _0x1d2dab['save'](), _0x1d2dab['rotate'](_0x2bcbaa(_0x4d1b7a)), _0x1d2dab['scale'](_0x41dfdb * 0.5, _0x560b47), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, _0x41dfdb, 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['restore'](), _0x4d1b7a += 0x3c, _0x1d2dab['restore']();
}
_0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['sparkleX'], this['sparkleY'], _0x41dfdb, 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['restore']();
}, _0x3d6c08['prototype']['shakeOffsetX'] = 0x0, _0x3d6c08['prototype']['shakeOffsetY'] = 0x0, _0x3d6c08['prototype']['drawAnimalSkin'] = function (_0x53570f) {
_0x1d2dab['save']();
if (this['flag_eff_shivering']) {
    var _0x26d8d5 = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x70d7f9 = 0.1,
        _0x57332b = this['rad'] * this['shiverF'];
    this['shakeOffsetX'] = _0x57332b * Math['sin'](0x2 * Math['PI'] / _0x70d7f9 * _0x26d8d5);
    var _0x70d7f9 = 0.05,
        _0x57332b = this['rad'] * this['shiverF'];
    this['shakeOffsetY'] = _0x57332b * Math['sin'](0x2 * Math['PI'] / _0x70d7f9 * _0x26d8d5), _0x1d2dab['translate'](-this['shakeOffsetX'], -this['shakeOffsetY']);
}
this['drawPropsUnderSkin'](), this['beforeDrawAnimalSkin']();
if (this['id'] > 0x0) this['drawUnderSkinTail'](_0x53570f);
this['drawUnderSkinImgOutline'](), this['drawUnderSkinImg'](), this['drawSkinImg'](), this['drawOnTopOfSkinImg'](), this['drawPropsTopOfSkin'](), this['drawStatueEffect'](), _0x1d2dab['restore']();
}, _0x3d6c08['prototype']['drawStatueEffect'] = function () {
if (this['flag_eff_statue']) {
    var _0x186b4c = null;
    switch (this['eff_statueType']) {
    case 0x1:
        _0x186b4c = 'snowball';
        break;
    case 0x2:
        _0x186b4c = 'goldball';
        break;
    }
    if (_0x186b4c) {
        var _0x3619ca = this['getSkinImageObj']('img/' + _0x186b4c + '.png');
        if (_0x3619ca) {
            _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = _0x2fc9ba == this['id'] ? 0.7 : 0x1;
            var _0x22c706 = this['rad'] * 1.2;
            _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0x3619ca, -_0x22c706, -_0x22c706, 0x2 * _0x22c706, 0x2 * _0x22c706), _0x1d2dab['restore']();
        }
    }
}
}, _0x3d6c08['prototype']['propsEnabled'] = ![], _0x3d6c08['prototype']['drawPropsUnderSkin'] = function (_0x284b45) {
if (this['propsEnabled']) {
    if (this['animalType'] == _0xb392ab) {}
}
}, _0x3d6c08['prototype']['drawPropsTopOfSkin'] = function (_0x4b4a70) {
this['propsEnabled'] && (this['animalType'] == _0xb392ab && (this['drawProp']('scarfs', 0x1), this['drawProp']('glasses', 0x0), this['drawProp']('hats', 0x1)));
}, _0x3d6c08['prototype']['drawProp'] = function (_0xf2a1d7, _0x4d0a09) {
var _0x522065 = this['skinScale'],
    _0x4e18cf = this['skinRad'] + 0.9,
    _0x2b2c53 = this['getSkinImageObj']('props/' + this['animalType'] + '/' + _0xf2a1d7 + '/' + _0x4d0a09 + '.png');
_0x2b2c53 && _0x1d2dab['drawImage'](_0x2b2c53, -_0x4e18cf * _0x522065, -_0x4e18cf * _0x522065, 0x2 * _0x4e18cf * _0x522065, 0x2 * _0x4e18cf * _0x522065);
}, _0x3d6c08['prototype']['beforeDrawAnimalSkin'] = function (_0x4cd98a) {}, _0x3d6c08['prototype']['drawUnderSkinTail'] = function (_0x1049cc) {
if (this['killerId'] > 0x0 || this['flag_underWater']) return;
if (this['animalType'] != _0x48065b && this['animalType'] != _0xb392ab && this['animalType'] != _0x1a993f) {
    var _0x48abef = this['animalInfo'](),
        _0x4e30f7 = _0x48abef['aniCol'],
        _0x2ed856 = this['rad'] * 0.1,
        _0x21c204 = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x1ecf8e = 0x5,
        _0x13b9c = 0x4,
        _0x24e4f8 = _0x13b9c * Math['sin'](0x2 * Math['PI'] / _0x1ecf8e * _0x21c204),
        _0x281456 = this['outlineW'] * 2.5,
        _0x47001a = 0x19,
        _0x41eebc = Math['PI'] / 0xb4;
    if (this['flag_tailBitten']) _0x1d2dab['fillStyle'] = _0x4fab5f;
    else {
        var _0x4e7b09 = this['animalType'];
        _0x3346e2[_0x4e7b09 - 0x1] > 0x0 && this['id'] != _0x2fc9ba ? _0x1d2dab['fillStyle'] = _0x4c4d1f : _0x1d2dab['fillStyle'] = _0x1049cc;
    }!(_0x31f3fc == 0x2 && _0x1d2dab['fillStyle'] != _0x4af19c) && (_0x1d2dab['beginPath'](), _0x1d2dab['moveTo']((this['rad'] - this['outlineW'] + 0x1) * Math['cos']((0x10e + _0x47001a / 0x2 + _0x281456) * _0x41eebc), (this['rad'] - this['outlineW'] + 0x1) * Math['sin']((0x10e + _0x47001a / 0x2) * _0x41eebc)), _0x1d2dab['lineTo']((this['rad'] - this['outlineW'] + 0x1) * Math['cos']((0x10e - _0x47001a / 0x2 - _0x281456) * _0x41eebc), (this['rad'] - this['outlineW'] + 0x1) * Math['sin']((0x10e - _0x47001a / 0x2) * _0x41eebc)), _0x1d2dab['lineTo']((this['rad'] + _0x2ed856 + this['outlineW']) * Math['cos']((0x10e + _0x24e4f8) * _0x41eebc), (this['rad'] + _0x2ed856 + this['outlineW']) * Math['sin']((0x10e + _0x24e4f8) * _0x41eebc)), _0x1d2dab['lineTo']((this['rad'] - this['outlineW'] + 0x1) * Math['cos']((0x10e + _0x47001a / 0x2 + _0x281456) * _0x41eebc), (this['rad'] - this['outlineW'] + 0x1) * Math['sin']((0x10e + _0x47001a / 0x2) * _0x41eebc)), _0x1d2dab['fill']()), !(_0x31f3fc == 0x2) && ((!this['loadedSkinImg'] || this['flag_tailBitten']) && (_0x1d2dab['fillStyle'] = this['flag_tailBitten'] ? _0x4fab5f : _0x4e30f7, _0x1d2dab['beginPath'](), _0x1d2dab['moveTo']((this['rad'] - this['outlineW']) * Math['cos']((0x10e + _0x47001a / 0x2) * _0x41eebc), (this['rad'] - this['outlineW']) * Math['sin']((0x10e + _0x47001a / 0x2) * _0x41eebc)), _0x1d2dab['lineTo']((this['rad'] - this['outlineW']) * Math['cos']((0x10e - _0x47001a / 0x2) * _0x41eebc), (this['rad'] - this['outlineW']) * Math['sin']((0x10e - _0x47001a / 0x2) * _0x41eebc)), _0x1d2dab['lineTo']((this['rad'] + _0x2ed856) * Math['cos']((0x10e + _0x24e4f8) * _0x41eebc), (this['rad'] + _0x2ed856) * Math['sin']((0x10e + _0x24e4f8) * _0x41eebc)), _0x1d2dab['lineTo']((this['rad'] - this['outlineW']) * Math['cos']((0x10e + _0x47001a / 0x2) * _0x41eebc), (this['rad'] - this['outlineW']) * Math['sin']((0x10e + _0x47001a / 0x2) * _0x41eebc)), _0x1d2dab['fill']()));
}
}, _0x3d6c08['prototype']['drawAnimalUnderSkinCircle'] = function (_0x3b9f23) {
if (!this['flag_isGrabbed']) {
    if (this['playerNumberFor1v1Arena'] == 0x1) _0x3b9f23 = 'cyan';
    else {
        if (this['playerNumberFor1v1Arena'] == 0x2) _0x3b9f23 = 'yellow';
        else this['flag_eff_isOnSpiderWeb'] && (_0x3b9f23 = 'white');
    }
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = this['isAnimalInside1v1Arena']() ? 0.3 : this['idealOp'], _0x444e67(0x0, 0x0, this['rad'], _0x3b9f23), _0x1d2dab['restore']();
}
}, _0x3d6c08['prototype']['devMode_num'] = 0x0, _0x3d6c08['prototype']['hasMultipleSpecies'] = function () {
return ![];
}, _0x3d6c08['prototype']['drawNickName'] = function (_0x22eb2d) {
if (_0x22eb2d == 0x0) return;
var _0x347a11 = _0x22eb2d;
this['nickNameA'] += (_0x347a11 - this['nickNameA']) * 0.1;
if (this['nickName'] && this['nickTXT'] && !_0x49a9c3) {
    _0x1d2dab['save']();
    if (this['dead']) _0x1d2dab['globalAlpha'] *= 0x1 - this['moveUpdF'];
    else _0x1d2dab['globalAlpha'] = 0x1;
    _0x1d2dab['globalAlpha'] *= this['nickNameA'], this['nickTXT']['x'] = 0x0, this['nickTXT']['y'] = this['rad'] + 0x9;
    var _0x9ba2bc = '#FFFFFF';
    if (this['flag_isDevMode']) switch (this['devMode_num']) {
    case 0x8:
        if (!this['flag_hideDevPrint']) {
            if (_0x284d8d != null && _0x284d8d['id'] == this['id']) _0x9ba2bc = 'cyan';
            else _0x9ba2bc = 'yellow';
        }
        break;
    case 0x1:
        _0x9ba2bc = '#e23ca6';
        break;
    case 0x2:
        break;
    case 0x3:
        _0x9ba2bc = '#ee3030';
        break;
    default:
        break;
    }
    this['nickTXT']['setColor'](_0x9ba2bc), this['nickTXT']['draw'](), _0x1d2dab['restore']();
}
}, _0x3d6c08['prototype']['drawHealthBar'] = function () {
_0x3d6c08['superClass']['prototype']['drawHealthBar']['call'](this), this['drawInfectionBar']();
}, _0x3d6c08['prototype']['drawInfectionBar'] = function () {
if (this['flag_underWater']) return;
var _0xb9f642 = _0x740c5b < this['infectionBarTimeoutT'] ? 0x1 : 0x0;
this['infectionBarA'] += (_0xb9f642 - this['infectionBarA']) * 0.04, this['infectionBarA'] > 0.001 && (this['infectionPer'] += (this['infectionPer_n'] - this['infectionPer']) * 0.1, this['drawBar']('red', this['infectionBarA'], this['infectionPer'], 0x2, 6.5));
}, _0x3d6c08['prototype']['drawUnderWater'] = function () {
(this['flag_usingDiveAbility'] || this['flag_usingAbility'] && this['animalType'] == _0x12b5f6) && (_0x1d2dab['save'](), this['drawWhenUnderwater'](), _0x1d2dab['restore']());
}, _0x3d6c08['prototype']['drawUnderSkinImgOutline'] = function () {
if (this['flag_eff_stunk']) {
    _0x1d2dab['save']();
    var _0x28dcf8 = 0x1,
        _0x2057d4 = 0.3,
        _0x45bc77 = 0x1,
        _0x40554f = 0.5 * (_0x45bc77 - _0x2057d4),
        _0x586077 = _0x2057d4 + _0x40554f + _0x40554f * Math['sin'](0x2 * Math['PI'] / _0x28dcf8 * ((_0x740c5b - this['spawnTime']) / 0x3e8));
    _0x1d2dab['globalAlpha'] *= _0x586077;
    var _0x7b672f = 2.6;
    _0x444e67(0x0, 0x0, this['rad'] + _0x7b672f * _0x586077, 'brown'), _0x1d2dab['restore']();
}
if (this['flag_iceSliding']) {
    var _0x13cd2e = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x28dcf8 = 0.75,
        _0x222c84 = 0x1,
        _0x3b6821 = _0x222c84 * Math['sin'](0x2 * Math['PI'] / _0x28dcf8 * _0x13cd2e),
        _0x4d5663 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] *= 0.8 - 0.2 * _0x3b6821, _0x444e67(0x0, this['rad'] * 0.3, this['rad'] * (0.9 + 0.15 * _0x3b6821), '#7BB7BB'), _0x444e67(0x0, -this['rad'] * 0.3, this['rad'] * (1.05 + 0.1 * _0x3b6821), '#7BB7BB'), _0x1d2dab['globalAlpha'] = _0x4d5663;
}
if (this['flag_usingAbility'] && (this['animalType'] == _0x3136da || this['animalType'] == _0x3dd041)) {
    var _0x13cd2e = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x28dcf8 = 1.5,
        _0x222c84 = 0x1,
        _0x3b6821 = _0x222c84 * Math['sin'](0x2 * Math['PI'] / _0x28dcf8 * _0x13cd2e),
        _0x4d5663 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] *= 0.8, _0x444e67(0x0, this['rad'] * 0.3, this['rad'] * (0.9 + 0.12 * _0x3b6821), '#7F582B'), _0x444e67(0x0, -this['rad'] * 0.3, this['rad'] * (1.05 + 0.09 * _0x3b6821), '#7F582B'), _0x1d2dab['globalAlpha'] = _0x4d5663;
}
var _0x520144 = this['flag_eff_frozen'] || this['flag_cold'] ? 0x1 : 0x0;
this['frozenEffA'] += (_0x520144 - this['frozenEffA']) * 0.1;
if (this['frozenEffA'] > 0.01) {
    var _0x4d5663 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] *= this['frozenEffA'];
    var _0x7b672f = 1.6;
    _0x444e67(0x0, 0x0, this['rad'] + _0x7b672f * this['frozenEffA'], 'white'), _0x1d2dab['globalAlpha'] = _0x4d5663;
}
var _0x520144 = this['flag_eff_healing'] ? 0x1 : 0x0;
this['effA_healing'] += (_0x520144 - this['effA_healing']) * 0.1;
if (this['effA_healing'] > 0.01) {
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] *= this['effA_healing'];
    var _0x7b672f = 2.6;
    _0x444e67(0x0, 0x0, this['rad'] + _0x7b672f * this['effA_healing'], 'purple'), _0x1d2dab['restore']();
}
this['effect_aloeveraHeal'](!![]), this['effect_sanitized'](!![]);
var _0x520144 = this['flag_eff_hot'] ? 0x1 : 0x0;
this['effA_hot'] += (_0x520144 - this['effA_hot']) * 0.1;
if (this['effA_hot'] > 0.01) {
    _0x1d2dab['save']();
    var _0x28dcf8 = 1.2,
        _0x2057d4 = 0.3,
        _0x45bc77 = 0x1,
        _0x40554f = 0.5 * (_0x45bc77 - _0x2057d4);
    _0x1d2dab['globalAlpha'] *= _0x2057d4 + _0x40554f + _0x40554f * Math['sin'](0x2 * Math['PI'] / _0x28dcf8 * ((_0x740c5b - this['spawnTime']) / 0x3e8));
    var _0x7b672f = 2.6;
    _0x444e67(0x0, 0x0, this['rad'] + _0x7b672f * this['effA_hot'], 'rgba(249, 212, 77, 0.5)'), _0x1d2dab['restore']();
}
var _0x520144 = this['flag_eff_poison'] ? 0x1 : 0x0;
this['effA_poison'] += (_0x520144 - this['effA_poison']) * 0.1;
if (this['effA_poison'] > 0.01) {
    _0x1d2dab['save']();
    var _0x28dcf8 = 1.2,
        _0x2057d4 = 0.3,
        _0x45bc77 = 0x1,
        _0x40554f = 0.5 * (_0x45bc77 - _0x2057d4);
    _0x1d2dab['globalAlpha'] *= _0x2057d4 + _0x40554f + _0x40554f * Math['sin'](0x2 * Math['PI'] / _0x28dcf8 * ((_0x740c5b - this['spawnTime']) / 0x3e8)), _0x1d2dab['globalAlpha'] *= this['effA_poison'];
    var _0x7b672f = 2.6;
    _0x444e67(0x0, 0x0, this['rad'] + _0x7b672f * this['effA_poison'], '#7FF600'), _0x1d2dab['restore']();
}
var _0x520144 = this['flag_eff_bleeding'] || this['flag_eff_wobbling'] ? 0x1 : 0x0;
this['effA_bleeding'] += (_0x520144 - this['effA_bleeding']) * 0.1;
if (this['effA_bleeding'] > 0.01) {
    _0x1d2dab['save']();
    var _0x28dcf8 = 1.2,
        _0x2057d4 = 0.3,
        _0x45bc77 = 0x1,
        _0x40554f = 0.5 * (_0x45bc77 - _0x2057d4);
    _0x1d2dab['globalAlpha'] *= _0x2057d4 + _0x40554f + _0x40554f * Math['sin'](0x2 * Math['PI'] / _0x28dcf8 * ((_0x740c5b - this['spawnTime']) / 0x3e8)), _0x1d2dab['globalAlpha'] *= this['effA_bleeding'];
    var _0x7b672f = 2.6,
        _0x5bcef8 = this['flag_eff_wobbling'] ? 'brown' : 'red';
    _0x444e67(0x0, 0x0, this['rad'] + _0x7b672f * this['effA_bleeding'], _0x5bcef8), _0x1d2dab['restore']();
}
var _0x520144 = this['flag_eff_slimed'] ? 0x1 : 0x0;
this['effA_slimed'] += (_0x520144 - this['effA_slimed']) * 0.1;
if (this['effA_slimed'] > 0.01) {
    _0x1d2dab['save']();
    var _0x28dcf8 = 1.2,
        _0x2057d4 = 0.3,
        _0x45bc77 = 0x1,
        _0x40554f = 0.5 * (_0x45bc77 - _0x2057d4);
    _0x1d2dab['globalAlpha'] *= _0x2057d4 + _0x40554f + _0x40554f * Math['sin'](0x2 * Math['PI'] / _0x28dcf8 * ((_0x740c5b - this['spawnTime']) / 0x3e8)), _0x1d2dab['globalAlpha'] *= this['effA_slimed'];
    var _0x7b672f = 2.6;
    _0x444e67(0x0, 0x0, this['rad'] + _0x7b672f * this['effA_slimed'], 'grey'), _0x1d2dab['restore']();
}
}, _0x3d6c08['prototype']['drawUnderSkinImg'] = function () {}, _0x3d6c08['prototype']['drawUnderwaterBubbles'] = function () {
return;
var _0x3c3fe0 = 0x1f4 / 0x154,
    _0x442ec8 = 'water';
switch (this['diveType']) {
case 0x0:
    _0x442ec8 = 'water';
    break;
case 0x1:
    _0x442ec8 = 'lava';
    break;
case 0x2:
    _0x442ec8 = 'mud';
    break;
}
var _0x277a9f = this['getSkinImageObjForSeason']('skins/' + _0x442ec8 + '_dive.png', 0x2);
if (_0x277a9f) {
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1;
    var _0x3b338d = this['rad'] - this['outlineW'];
    _0x1d2dab['drawImage'](_0x277a9f, -_0x3b338d * _0x3c3fe0, -_0x3b338d * _0x3c3fe0, 0x2 * _0x3b338d * _0x3c3fe0, 0x2 * _0x3b338d * _0x3c3fe0), _0x1d2dab['restore']();
} else {
    _0x1d2dab['save']();
    var _0x1354be = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x1171d0 = 1.5,
        _0x57af38 = 0x1,
        _0x149c6e = _0x57af38 * Math['sin'](0x2 * Math['PI'] / _0x1171d0 * _0x1354be);
    if (this['animalType'] == _0x1d3e9a) _0x1d2dab['globalAlpha'] *= 0.3;
    var _0x268591 = this['flag_inWater'] ? '#4E71C3' : '#7E6A35';
    if (this['animalType'] == _0x19e418) _0x268591 = '#f9d43b';
    _0x1d2dab['fillStyle'] = _0x268591;
    var _0x2bb040 = this['rad'] * 0.2;
    _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * -0.35, this['rad'] * -0.33, Math['max'](0x0, _0x2bb040 + _0x149c6e), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.35, this['rad'] * -0.32, Math['max'](0x0, _0x2bb040 - _0x149c6e), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.35, this['rad'] * 0.36, Math['max'](0x0, _0x2bb040 + _0x149c6e), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * -0.35, this['rad'] * 0.35, Math['max'](0x0, _0x2bb040 - _0x149c6e), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['restore']();
}
}, _0x3d6c08['prototype']['drawUnderwaterCustomization'] = function (_0x2867fe, _0x13d884) {
if (this['flag_usingDiveAbility']) {
    var _0x17dfa5 = 'water';
    switch (this['diveType']) {
    case 0x0:
        _0x17dfa5 = 'ocean';
        break;
    case 0x1:
        _0x17dfa5 = 'lava';
        break;
    case 0x2:
        _0x17dfa5 = 'mud';
        break;
    case 0x3:
        _0x17dfa5 = 'waterspot';
        break;
    case 0x4:
        _0x17dfa5 = 'arcticwaterspot';
        break;
    case 0x5:
        _0x17dfa5 = 'arcticlake';
        break;
    case 0x6:
        _0x17dfa5 = 'oasis';
        break;
    case 0x7:
        _0x17dfa5 = 'deathlake';
        break;
    }
    if (!(_0x31f3fc == 0x2) && !_0x44408d) {
        var _0x1da775 = Math['trunc'](_0x740c5b / 0x50) % 0x9;
        _0x1da775 = Math['max'](0x1, _0x1da775), _0x1da775 = Math['min'](0x8, _0x1da775), _0x17dfa5 = 'skins/dive/' + _0x17dfa5 + 'dive' + _0x1da775 + '.png';
        var _0x2a2ee3 = this['getObjImageObjForSeason'](_0x17dfa5, 0x2);
        if (_0x2a2ee3) {
            _0x1d2dab['save'](); {
                _0x1d2dab['globalAlpha'] = 0x1;
                var _0x3b1414 = this['rad'] * 1.2;
                _0x1d2dab['drawImage'](_0x2a2ee3, -_0x3b1414, -_0x3b1414, _0x3b1414 * 0x2, _0x3b1414 * 0x2);
            }
            _0x1d2dab['restore']();
        }
    } else {
        _0x17dfa5 = 'skins/dive/' + _0x17dfa5 + 'dive.png';
        var _0x2a2ee3 = this['getObjImageObjForSeason'](_0x17dfa5, 0x2);
        if (_0x2a2ee3) {
            _0x1d2dab['save'](); {
                _0x1d2dab['globalAlpha'] = 0x1;
                var _0x3b1414 = this['rad'] * 1.2;
                _0x1d2dab['drawImage'](_0x2a2ee3, -_0x3b1414, -_0x3b1414, _0x3b1414 * 0x2, _0x3b1414 * 0x2);
            }
            _0x1d2dab['restore']();
        }
    }
}
}, _0x3d6c08['prototype']['drawWhenUnderwater'] = function () {
this['drawUnderwaterCustomization'](0x1, 0x1);
}, _0x3d6c08['prototype']['shiveringStartT'] = 0x0, _0x3d6c08['prototype']['flag_eff_shivering'] = ![], _0x3d6c08['prototype']['flag_inHidingHole'] = ![], _0x3d6c08['prototype']['effect_shivering'] = function () {
if (this['shiveringStartT'] == 0x0 && this['flag_eff_shivering']) this['shiveringStartT'] = +new Date();
else {
    if (!this['flag_eff_shivering']) this['shiveringStartT'] = 0x0;
}
if (this['flag_eff_shivering']) {
    var _0x25d891 = (+new Date() - this['shiveringStartT']) * 0xa;
    _0x25d891 % 0xa == 0x0 && (this['eff_shiver_shakeX'] = Math['round'](Math['random']() * 0xa), this['eff_shiver_shakeX'] = Math['round'](Math['random']() * 0xa));
}
};
if (this['effA_healing'] > 0.01) {
_0x1d2dab['save']();
var _0x4a29a1 = 0.3;
_0x1d2dab['globalAlpha'] *= _0x4a29a1 * this['effA_healing'], _0x444e67(0x0, 0x0, Math['max'](0x0, this['rad'] - this['outlineW']), '#ef24ed'), _0x1d2dab['restore']();
}
_0x3d6c08['prototype']['effect_sanitized'] = function (_0x1b58c6) {
var _0x3fd395 = this['flag_eff_sanitized'] ? 0.9 : 0x0;
if (this['effA__sanitized'] == undefined) this['effA__sanitized'] = 0x0;
this['effA__sanitized'] += (_0x3fd395 - this['effA__sanitized']) * 0.1;
if (this['effA__sanitized'] > 0.01) {
    var _0x3dbd4d = 0.3,
        _0x3525fc = 0.8,
        _0x4b7a3b = 0.2,
        _0xec02a = 0.4,
        _0x27e0d2 = 0.5 * (_0xec02a - _0x4b7a3b),
        _0x4a9406 = _0x4b7a3b + _0x27e0d2 + _0x27e0d2 * Math['sin'](0x2 * Math['PI'] / _0x3525fc * ((_0x740c5b - this['spawnTime']) / 0x3e8));
    if (_0x1b58c6) {
        _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] *= _0x4a9406;
        var _0xf141fb = 2.6;
        _0x444e67(0x0, 0x0, this['rad'] + _0xf141fb * this['effA__sanitized'], 'white'), _0x1d2dab['restore']();
    } else _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] *= _0x4a9406, _0x444e67(0x0, 0x0, Math['max'](0x0, this['rad']), '#bbc94d'), _0x1d2dab['restore']();
}
}, _0x3d6c08['prototype']['effect_aloeveraHeal'] = function (_0x3e2c6b) {
var _0x55d528 = this['flag_eff_aloeveraHealing'] ? 0.9 : 0x0;
if (this['effA_aloeveraHealing'] == undefined) this['effA_aloeveraHealing'] = 0x0;
this['effA_aloeveraHealing'] += (_0x55d528 - this['effA_aloeveraHealing']) * 0.1;
if (this['effA_aloeveraHealing'] > 0.01) {
    var _0x3f3c50 = 0.3,
        _0x3e67e4 = 0.8,
        _0x29c6db = 0.2,
        _0x18d745 = 0.4,
        _0x2d48d6 = 0.5 * (_0x18d745 - _0x29c6db),
        _0x479c0d = _0x29c6db + _0x2d48d6 + _0x2d48d6 * Math['sin'](0x2 * Math['PI'] / _0x3e67e4 * ((_0x740c5b - this['spawnTime']) / 0x3e8));
    if (_0x3e2c6b) {
        _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] *= _0x479c0d;
        var _0x4d950b = 2.6;
        _0x444e67(0x0, 0x0, this['rad'] + _0x4d950b * this['effA_aloeveraHealing'], '#bbc94d'), _0x1d2dab['restore']();
    } else _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] *= _0x479c0d, _0x444e67(0x0, 0x0, Math['max'](0x0, this['rad']), '#bbc94d'), _0x1d2dab['restore']();
}
}, _0x3d6c08['prototype']['effect_sweatPoisoned'] = function () {
var _0x36c2ba = this['flag_eff_sweatPoisoned'] ? 0x1 : 0x0;
if (this['effA_sweatPoisoned'] == undefined) this['effA_sweatPoisoned'] = 0x0;
this['effA_sweatPoisoned'] += (_0x36c2ba - this['effA_sweatPoisoned']) * 0.1;
if (this['effA_sweatPoisoned'] > 0.01) {
    _0x1d2dab['save']();
    var _0x1a2a6d = 0.3,
        _0x5d4eb8 = 1.2,
        _0x27aee5 = 0.3,
        _0x102753 = 0x1,
        _0x127ad0 = 0.5 * (_0x102753 - _0x27aee5);
    _0x1d2dab['globalAlpha'] *= _0x27aee5 + _0x127ad0 + _0x127ad0 * Math['sin'](0x2 * Math['PI'] / _0x5d4eb8 * ((_0x740c5b - this['spawnTime']) / 0x3e8)), _0x444e67(0x0, 0x0, Math['max'](0x0, this['rad'] - this['outlineW']), _0x1eed97), _0x1d2dab['restore']();
}
}, _0x3d6c08['prototype']['skinRad'] = 0x0, _0x3d6c08['prototype']['skinScale'] = 0x0, _0x3d6c08['prototype']['setSkinScale'] = function () {
var _0x2f9e92 = 0x1f4 / 0x154,
    _0x16ea80 = this['rad'] - this['outlineW'];
this['skinRad'] = _0x16ea80, this['skinScale'] = _0x2f9e92;
}, _0x3d6c08['prototype']['getAniRadius'] = function (_0x4dc8b4) {
if (this['flag_usingDiveAbility']) return _0x4dc8b4 * 0.7;
return _0x4dc8b4;
}, _0x3d6c08['prototype']['basicDrawSkinImg'] = function () {
this['setSkinScale']();
var _0x3f95f8 = this['skinScale'],
    _0x26ebd5 = this['getAniRadius'](this['skinRad']);
this['loadedSkinImg'] ? _0x1d2dab['drawImage'](this['loadedSkinImg'], -_0x26ebd5 * _0x3f95f8, -_0x26ebd5 * _0x3f95f8, 0x2 * _0x26ebd5 * _0x3f95f8, 0x2 * _0x26ebd5 * _0x3f95f8) : (_0x1d2dab['fillStyle'] = this['skinNotLoadedColor'], _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - this['outlineW']), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill']());
}, _0x3d6c08['prototype']['preLoad'] = function () {}, _0x3d6c08['prototype']['shiverF'] = 0.02, _0x3d6c08['prototype']['drawSkinImg'] = function () {
this['basicDrawSkinImg'](), this['drawSkinCustomization']();
}, _0x3d6c08['prototype']['drawSkinCustomization'] = function () {}, _0x3d6c08['prototype']['drawOnTopOfSkinImg'] = function () {
if (!this['loadedSkinImg']) {
    _0x1d2dab['save']();
    var _0x5b8ffa = Math['max'](0x1, this['rad'] / 0x19);
    _0x1d2dab['scale'](_0x5b8ffa, _0x5b8ffa), this['drawEyeAtPos'](0x6, this['rad'] * 0.32), this['drawEyeAtPos'](-0x6, this['rad'] * 0.32), _0x1d2dab['restore']();
}
if (this['animalType'] == _0xd3040d) {
    _0x1d2dab['fillStyle'] = '#E5CF79', _0x1d2dab['beginPath']();
    var _0x332d73 = this['rad'] - this['outlineW'],
        _0x276b30 = _0x332d73 * 0x1;
    _0x1d2dab['moveTo'](_0x332d73 * -0.16, _0x276b30), _0x1d2dab['lineTo'](0x0, _0x332d73 * (this['flag_usingAbility'] ? 1.41 : 0.7)), _0x1d2dab['lineTo'](_0x332d73 * 0.153, _0x276b30), _0x1d2dab['closePath'](), _0x1d2dab['fill']();
}
if (this['flag_usingAbility'] && this['animalType'] == _0x55a926) {
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1 - this['underwaterA'];
    var _0x3dfa6b = this['getSkinImageObj']('img/snowball.png');
    if (_0x3dfa6b) {
        var _0x332d73 = this['rad'];
        _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0x3dfa6b, -_0x332d73, -_0x332d73, 0x2 * _0x332d73, 0x2 * _0x332d73);
    } else this['drawOutlinedCircle']('', 'white');
    _0x1d2dab['restore']();
}
}, _0x3d6c08['prototype']['drawUnderEffects'] = function () {
if (this['flag_eff_dirty']) {
    if (this['effA_dirtStuck'] > 0.01) {
        _0x1d2dab['save']();
        var _0x955e23 = 0.9;
        _0x1d2dab['globalAlpha'] *= _0x955e23 * this['effA_dirtStuck'];
        var _0x2cb9d8 = this['getImageObjForPath']('img/dirt/dirt_below.png');
        if (_0x2cb9d8) {
            var _0x25aa00 = this['skinScale'],
                _0x59608b = this['skinRad'] - 0x2;
            _0x1d2dab['drawImage'](_0x2cb9d8, -_0x59608b * _0x25aa00, -_0x59608b * _0x25aa00, 0x2 * _0x59608b * _0x25aa00, 0x2 * _0x59608b * _0x25aa00);
        }
        _0x1d2dab['restore']();
    }
}
};
var _0x4404e2 = 0x1,
_0x3cd0ba = 0.5;
_0x3d6c08['prototype']['maskStartT'] = 0x0, _0x3d6c08['prototype']['wasWearingMask'] = ![], _0x3d6c08['prototype']['drawProtectiveMask'] = function () {
if (!this['flag_eff_wearingMask']) {
    this['wasWearingMask'] = ![];
    return;
}!this['wasWearingMask'] && (this['wasWearingMask'] = !![], this['maskStartT'] = _0x740c5b);
_0x1d2dab['save']();
var _0x2bac63 = this['getSkinImageObj']('img/viralpandemic/mask.png'),
    _0x2af359 = this['getSkinImageObj']('img/viralpandemic/mask-outline.png');
if (_0x2bac63 && _0x2af359) {
    var _0x350981 = this['rad'] * 0.7 + this['rPer'],
        _0x17e78e = _0x350981 * 0.1;
    if (this['animalType'] == _0x31a0ba) _0x17e78e = _0x350981 * 0.2;
    else {
        if (this['animalType'] == _0x47ccac) _0x350981 = this['rad'] * 0.6, _0x17e78e = _0x350981 * 0x1;
        else {
            if (this['animalType'] == _0x526523 || this['animalType'] == _0x2350ea || this['animalType'] == _0x55a926 || this['animalType'] == _0x1bdc24) _0x17e78e = _0x350981 * -0.05;
            else {
                if (this['animalType'] == _0x4ab048) _0x17e78e = _0x350981 * -0.2;
                else {
                    if (this['animalType'] == _0x4ca51a) _0x17e78e = _0x350981 * 0x0;
                    else {
                        if (this['animalType'] == _0x588f38 || this['animalType'] == _0xf59392 || this['animalType'] == _0x189024 || this['animalType'] == _0x3e89f8 || this['animalType'] == _0x35326e) _0x350981 = this['rad'] * 0.5, _0x17e78e = _0x350981 * 0.4;
                        else {
                            if (this['animalType'] == _0x4e8eac) _0x350981 = this['rad'] * 0.5, _0x17e78e = _0x350981 * 0.6, this['flag_usingAbility'] && (_0x17e78e = _0x350981 * 1.3);
                            else {
                                if (this['animalType'] == _0x5041f9) _0x350981 = this['rad'] * 0.55, _0x17e78e = _0x350981 * 0.5, this['flag_usingAbility'] && (_0x17e78e = _0x350981 * 0x1);
                                else {
                                    if (this['animalType'] == _0x53017e) {
                                        _0x350981 = this['rad'] * 0.43, _0x17e78e = _0x350981 * 0x1;
                                        if (this['flag_usingAbility']) {
                                            if (this['specType'] == 0x1) _0x350981 = this['rad'] * 0.45, _0x17e78e = _0x350981 * 1.3;
                                            else this['specType'] == 0x2 && (_0x350981 = this['rad'] * 0.5, _0x17e78e = _0x350981 * 1.9);
                                        }
                                    } else {
                                        if (this['animalType'] == _0x1b8ac0) _0x350981 = this['rad'] * 0.5, _0x17e78e = _0x350981 * 0.55, this['flag_usingAbility'] && (_0x17e78e = _0x350981 * 0.8);
                                        else {
                                            if (this['animalType'] == _0x3e06be) _0x350981 = this['rad'] * 0.55, _0x17e78e = _0x350981 * 0x0, this['flag_usingAbility'] && (_0x17e78e = _0x350981 * 0.5);
                                            else {
                                                if (this['animalType'] == _0x81deb4) _0x350981 = this['rad'] * 0.4, _0x17e78e = _0x350981 * 1.1, this['flag_usingAbility'] && (_0x350981 = this['rad'] * 0.5, _0x17e78e = _0x350981 * _0x4404e2);
                                                else {
                                                    if (this['animalType'] == _0x229b87) _0x350981 = this['rad'] * 0.5, _0x17e78e = _0x350981 * 0.5, this['flag_usingAbility'] && (_0x350981 = this['rad'] * 0.5, _0x17e78e = _0x350981 * 0x1);
                                                    else {
                                                        if (this['animalType'] == _0x114a7b) _0x350981 = this['rad'] * 0.4, _0x17e78e = _0x350981 * 0x1, this['flag_usingAbility'] && (console['log'](this['specType']), _0x350981 = this['rad'] * 0.5, _0x17e78e = _0x350981 * 0x1);
                                                        else {
                                                            if (this['animalType'] == _0x220080) {
                                                                _0x350981 = this['rad'] * 0.4, _0x17e78e = _0x350981 * 0x1;
                                                                if (this['flag_usingAbility']) {
                                                                    _0x1d2dab['restore']();
                                                                    return;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    var _0x32d972 = 0x1,
        _0x5b1cb8 = (_0x740c5b - this['maskStartT']) / 0x3e8;
    if (_0x5b1cb8 > 0x50) var _0x41955c = 0x1,
        _0x14b282 = 0.3,
        _0x56d63f = 0.5,
        _0x13ef22 = 0.5 * (_0x56d63f - _0x14b282),
        _0x32d972 = _0x14b282 + _0x13ef22 + _0x13ef22 * Math['sin'](0x2 * Math['PI'] / _0x41955c * (_0x740c5b / 0x3e8));
    var _0x481c85 = 0.8;
    if (this['flag_inHidingHole']) _0x481c85 = 0.6;
    else {
        if (this['flag_underWater']) _0x481c85 = this['idealOp'];
    }
    _0x1d2dab['globalAlpha'] = _0x481c85 * _0x32d972, _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x2bac63, -_0x350981, _0x17e78e, 0x2 * _0x350981, 0x2 * _0x350981), _0x1d2dab['drawImage'](_0x2af359, -_0x350981, _0x17e78e, 0x2 * _0x350981, 0x2 * _0x350981);
}
_0x1d2dab['restore']();
}, _0x3d6c08['prototype']['drawTopEffects'] = function () {
this['effect_aloeveraHeal']();
var _0x44f39c = this['flag_eff_stunned'] ? 0x1 : 0x0;
this['stunA'] += (_0x44f39c - this['stunA']) * 0.1;
if (this['stunA'] > 0.01) {
    _0x1d2dab['save']();
    var _0x4d8334 = 2.5,
        _0xfdfcea = _0x740c5b % (_0x4d8334 * 0x3e8) / (_0x4d8334 * 0x3e8);
    _0x1d2dab['rotate'](_0xfdfcea * (0x2 * Math['PI'])), _0x1d2dab['globalAlpha'] *= this['stunA'];
    var _0x4fe087 = this['rad'] * 0.2,
        _0x7e7901 = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x4daa43 = 0x1,
        _0x154eaf = 0.5 + _0x4fe087 * 0.07,
        _0x5482bd = _0x154eaf * Math['sin'](0x2 * Math['PI'] / _0x4daa43 * _0x7e7901);
    _0x1d2dab['fillStyle'] = '#F3D444', _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * -0.22, this['rad'] * -0.22, Math['max'](0x0, _0x4fe087 + _0x5482bd), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.22, this['rad'] * -0.22, Math['max'](0x0, _0x4fe087 - _0x5482bd), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.22, this['rad'] * 0.22, Math['max'](0x0, _0x4fe087 + _0x5482bd), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * -0.22, this['rad'] * 0.22, Math['max'](0x0, _0x4fe087 - _0x5482bd), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['restore']();
}
var _0x44f39c = this['flag_eff_onFire'] ? 0x1 : 0x0;
this['onFireEffA'] += (_0x44f39c - this['onFireEffA']) * 0.1;
if (this['onFireEffA'] > 0.01) {
    var _0x4daa43 = 0x1,
        _0x1bcf18 = 0.15,
        _0x4c8778 = 0.4,
        _0x270dde = 0.5 * (_0x4c8778 - _0x1bcf18),
        _0x24bd96 = _0x1bcf18 + _0x270dde + _0x270dde * Math['sin'](0x2 * Math['PI'] / _0x4daa43 * (_0x740c5b / 0x3e8));
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] *= _0x24bd96 * this['onFireEffA'], _0x444e67(0x0, 0x0, Math['max'](0x0, this['rad']), 'orange'), _0x1d2dab['restore']();
    var _0xd7d3d0 = 0x2;
    if (!(_0x31f3fc == 0x2)) {
        var _0x4daa43 = 0x1,
            _0x1bcf18 = 0.5,
            _0x4c8778 = 0x1,
            _0x270dde = 0.5 * (_0x4c8778 - _0x1bcf18),
            _0x5482bd = _0x1bcf18 + _0x270dde + _0x270dde * Math['sin'](0x2 * Math['PI'] / _0x4daa43 * (_0x740c5b / 0x3e8)),
            _0x48bdb4 = Math['trunc'](_0x740c5b / 0x64) % 0x5,
            _0x1cb22 = Math['trunc'](_0x740c5b / 0x96) % 0x5,
            _0x364e97 = this['getImageObjForPath']('gameobj/70/0/' + _0x48bdb4 + '.png', _0xd7d3d0),
            _0x57a5c0 = this['getImageObjForPath']('gameobj/70/0/' + _0x1cb22 + '.png', _0xd7d3d0);
        if (_0x364e97 || _0x57a5c0) {
            var _0x262bd7 = 0x0 - this['rad'] * 0.3,
                _0x3e8cfb = this['rad'] * 0.2 - this['rad'] * 0.3,
                _0x27aafd = this['rad'] * 0x1 * (0x2 + _0x5482bd * 0x2) / 0x3,
                _0x5ecdcd = this['rad'] * 0x1 * _0x5482bd,
                _0x6c57f4 = 0.5,
                _0xb22193 = 0.95;
            _0x1d2dab['save'](), _0x364e97 && (_0x1d2dab['globalAlpha'] *= this['onFireEffA'] * _0x5482bd, _0x1d2dab['drawImage'](_0x364e97, _0x262bd7 + _0x27aafd * -_0x6c57f4, _0x3e8cfb + _0x5ecdcd * -_0xb22193, _0x27aafd, _0x5ecdcd)), _0x57a5c0 && (_0x1d2dab['globalAlpha'] *= this['onFireEffA'] * _0x5482bd, _0x1d2dab['drawImage'](_0x57a5c0, _0x262bd7 + this['rad'] * 0.5 + _0x27aafd * -_0x6c57f4, _0x3e8cfb + this['rad'] * 0.5 + _0x5ecdcd * -_0xb22193, _0x27aafd, _0x5ecdcd)), _0x1d2dab['restore']();
        }
    } else {
        var _0x4daa43 = 0x1,
            _0x1bcf18 = 0.5,
            _0x4c8778 = 0x1,
            _0x270dde = 0.5 * (_0x4c8778 - _0x1bcf18),
            _0x5482bd = _0x1bcf18 + _0x270dde + _0x270dde * Math['sin'](0x2 * Math['PI'] / _0x4daa43 * (_0x740c5b / 0x3e8)),
            _0x364e97 = this['getImageObjForPath']('gameobj/70/0.png', _0xd7d3d0);
        if (_0x364e97) {
            var _0x262bd7 = 0x0 - this['rad'] * 0.3,
                _0x3e8cfb = this['rad'] * 0.2 - this['rad'] * 0.3,
                _0x27aafd = this['rad'] * 0x1 * (0x2 + _0x5482bd * 0x2) / 0x3,
                _0x5ecdcd = this['rad'] * 0x1 * _0x5482bd,
                _0x6c57f4 = 0.5,
                _0xb22193 = 0.95;
            _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] *= this['onFireEffA'] * _0x5482bd, _0x1d2dab['drawImage'](_0x364e97, _0x262bd7 + _0x27aafd * -_0x6c57f4, _0x3e8cfb + _0x5ecdcd * -_0xb22193, _0x27aafd, _0x5ecdcd), _0x1d2dab['globalAlpha'] *= this['onFireEffA'] * _0x5482bd, _0x1d2dab['drawImage'](_0x364e97, _0x262bd7 + this['rad'] * 0.5 + _0x27aafd * -_0x6c57f4, _0x3e8cfb + this['rad'] * 0.5 + _0x5ecdcd * -_0xb22193, _0x27aafd, _0x5ecdcd), _0x1d2dab['restore']();
        }
    }
}
if (this['frozenEffA'] > 0.01 && this['flag_eff_frozen']) {
    _0x1d2dab['save']();
    var _0x4d8334 = 0x7,
        _0xfdfcea = _0x740c5b % (_0x4d8334 * 0x3e8) / (_0x4d8334 * 0x3e8);
    _0x1d2dab['rotate'](_0xfdfcea * (0x2 * Math['PI'])), _0x1d2dab['globalAlpha'] *= this['frozenEffA'];
    var _0x4fe087 = this['rad'] * 0.2,
        _0x7e7901 = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x4daa43 = 0x1,
        _0x154eaf = 0.5 + _0x4fe087 * 0.07,
        _0x5482bd = _0x154eaf * Math['sin'](0x2 * Math['PI'] / _0x4daa43 * _0x7e7901);
    _0x1d2dab['fillStyle'] = 'white';
    var _0x1c4b45 = this['rad'] * 0.27;
    _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-_0x1c4b45, -_0x1c4b45, Math['max'](0x0, _0x4fe087 + _0x5482bd), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](_0x1c4b45, -_0x1c4b45, Math['max'](0x0, _0x4fe087 - _0x5482bd), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](_0x1c4b45, _0x1c4b45, Math['max'](0x0, _0x4fe087 + _0x5482bd), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-_0x1c4b45, _0x1c4b45, Math['max'](0x0, _0x4fe087 - _0x5482bd), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['restore']();
}
if (this['frozenEffA'] > 0.01) {
    _0x1d2dab['save']();
    var _0x37febd = 0.3;
    _0x1d2dab['globalAlpha'] *= _0x37febd * this['frozenEffA'], _0x444e67(0x0, 0x0, Math['max'](0x0, this['rad'] - this['outlineW']), 'white'), _0x1d2dab['restore']();
}
if (this['effA_healing'] > 0.01) {
    _0x1d2dab['save']();
    var _0x37febd = 0.3;
    _0x1d2dab['globalAlpha'] *= _0x37febd * this['effA_healing'], _0x444e67(0x0, 0x0, Math['max'](0x0, this['rad'] - this['outlineW']), '#ef24ed'), _0x1d2dab['restore']();
}
this['effect_sweatPoisoned']();
if (this['effA_hot'] > 0.01) {
    _0x1d2dab['save']();
    var _0x37febd = 0.3,
        _0x4daa43 = 1.2,
        _0x1bcf18 = 0.3,
        _0x4c8778 = 0x1,
        _0x270dde = 0.5 * (_0x4c8778 - _0x1bcf18);
    _0x1d2dab['globalAlpha'] *= _0x1bcf18 + _0x270dde + _0x270dde * Math['sin'](0x2 * Math['PI'] / _0x4daa43 * ((_0x740c5b - this['spawnTime']) / 0x3e8)), _0x444e67(0x0, 0x0, Math['max'](0x0, this['rad'] - this['outlineW']), 'rgba(249, 212, 77, 0.3)'), _0x1d2dab['restore']();
}
if (this['effA_poison'] > 0.01) {
    _0x1d2dab['save']();
    var _0x37febd = 0.3;
    _0x1d2dab['globalAlpha'] *= _0x37febd * this['effA_poison'];
    var _0x4daa43 = 1.2,
        _0x1bcf18 = 0.3,
        _0x4c8778 = 0x1,
        _0x270dde = 0.5 * (_0x4c8778 - _0x1bcf18);
    _0x1d2dab['globalAlpha'] *= _0x1bcf18 + _0x270dde + _0x270dde * Math['sin'](0x2 * Math['PI'] / _0x4daa43 * ((_0x740c5b - this['spawnTime']) / 0x3e8)), _0x444e67(0x0, 0x0, Math['max'](0x0, this['rad'] - this['outlineW']), '#9FDA00'), _0x1d2dab['restore']();
}
var _0x44f39c = this['flag_eff_bleeding'] ? 0.8 : 0x0;
this['effA_bleeding'] += (_0x44f39c - this['effA_bleeding']) * 0.1;
if (this['effA_bleeding'] > 0.01) {
    _0x1d2dab['save']();
    var _0x4daa43 = 1.2,
        _0x1bcf18 = 0.3,
        _0x4c8778 = 0x1,
        _0x270dde = 0.3 * (_0x4c8778 - _0x1bcf18);
    _0x1d2dab['globalAlpha'] *= _0x1bcf18 + _0x270dde + _0x270dde * Math['sin'](0x2 * Math['PI'] / _0x4daa43 * ((_0x740c5b - this['spawnTime']) / 0x3e8)), _0x1d2dab['globalAlpha'] *= this['effA_bleeding'];
    var _0x149f7d = -2.6;
    _0x444e67(0x0, 0x0, this['rad'] + _0x149f7d * this['effA_bleeding'], 'red'), _0x1d2dab['restore']();
}
var _0x44f39c = this['flag_eff_slimed'] ? 0.8 : 0x0;
this['effA_slimed'] += (_0x44f39c - this['effA_slimed']) * 0.1;
if (this['effA_slimed'] > 0.01) {
    _0x1d2dab['save']();
    var _0x4daa43 = 1.2,
        _0x1bcf18 = 0.3,
        _0x4c8778 = 0x1,
        _0x270dde = 0.3 * (_0x4c8778 - _0x1bcf18);
    _0x1d2dab['globalAlpha'] *= _0x1bcf18 + _0x270dde + _0x270dde * Math['sin'](0x2 * Math['PI'] / _0x4daa43 * ((_0x740c5b - this['spawnTime']) / 0x3e8)), _0x1d2dab['globalAlpha'] *= this['effA_slimed'];
    var _0x149f7d = -2.6;
    _0x444e67(0x0, 0x0, this['rad'] + _0x149f7d * this['effA_slimed'], 'grey'), _0x1d2dab['restore']();
}
var _0x44f39c = this['flag_eff_stunk'] ? 0.8 : 0x0;
this['effA_stunk'] += (_0x44f39c - this['effA_stunk']) * 0.1;
if (this['effA_stunk'] > 0.01) {
    _0x1d2dab['save']();
    var _0x4daa43 = 1.2,
        _0x1bcf18 = 0.3,
        _0x4c8778 = 0x1,
        _0x270dde = 0.3 * (_0x4c8778 - _0x1bcf18);
    _0x1d2dab['globalAlpha'] *= _0x1bcf18 + _0x270dde + _0x270dde * Math['sin'](0x2 * Math['PI'] / _0x4daa43 * ((_0x740c5b - this['spawnTime']) / 0x3e8)), _0x1d2dab['globalAlpha'] *= this['effA_stunk'];
    var _0x149f7d = -2.6;
    _0x444e67(0x0, 0x0, this['rad'] + _0x149f7d * this['effA_stunk'], 'brown'), _0x1d2dab['restore']();
}
if (this['animalType'] == _0x4ab048 && this['flag_usingAbility']) {
    var _0x4daa43 = 0.75,
        _0x154eaf = 0x1,
        _0x5482bd = _0x154eaf * Math['sin'](0x2 * Math['PI'] / _0x4daa43 * _0x7e7901),
        _0x35ddd9 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] *= 0.8 - 0.2 * _0x5482bd, _0x444e67(this['rad'] * 0.15, -this['rad'] * 1.27, this['rad'] * (0.1 + 0.05 * _0x5482bd), '#efefef'), _0x444e67(-this['rad'] * 0.15, -this['rad'] * 1.27, this['rad'] * (0.1 - 0.05 * _0x5482bd), '#efefef'), _0x1d2dab['globalAlpha'] = _0x35ddd9;
}
var _0x44f39c = this['flag_webStuck'] ? 0x1 : 0x0;
this['effA_webStuck'] += (_0x44f39c - this['effA_webStuck']) * 0.02;
if (this['effA_webStuck'] > 0.01) {
    _0x1d2dab['save']();
    var _0x37febd = 0.9;
    _0x1d2dab['globalAlpha'] *= _0x37febd * this['effA_webStuck'];
    var _0x364e97 = this['getImageObjForPath']('img/web/' + this['eff_webStuckType'] + '/spiderWeb_stuck.png');
    if (_0x364e97) {
        var _0x4f08c1 = this['rad'] * 1.3;
        _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x364e97, -_0x4f08c1, -_0x4f08c1, 0x2 * _0x4f08c1, 0x2 * _0x4f08c1);
    }
    _0x1d2dab['restore']();
}
this['effectDirt']();
var _0x44f39c = this['flag_constricted'] ? 0x1 : 0x0;
this['effA_constricted'] += (_0x44f39c - this['effA_constricted']) * 0.04;
if (this['effA_constricted'] > 0.01) {
    _0x1d2dab['save']();
    var _0x37febd = 0.9;
    _0x1d2dab['globalAlpha'] *= _0x37febd * this['effA_constricted'];
    var _0x34a99d = 'skins/land/boaconstrictor/' + this['eff_constrictedSpecies'];
    if (this['eff_constrictedSubSpecies'] !== undefined && this['eff_constrictedSubSpecies'] > 0x0) _0x34a99d += '/' + this['eff_constrictedSubSpecies'];
    var _0x22a619 = this['eff_constrictedSpecies'] === 0x1 || this['eff_constrictedSpecies'] === 0x2 ? 0x1 : this['mopeSeasonID'];
    console['log']('constrict img: ' + _0x34a99d);
    var _0x364e97 = this['getSkinImageObjForSeason'](_0x34a99d + '/constrict.png', _0x22a619);
    if (_0x364e97) {
        var _0x4f08c1 = this['rad'] * 1.3;
        _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x364e97, -_0x4f08c1, -_0x4f08c1, 0x2 * _0x4f08c1, 0x2 * _0x4f08c1);
    }
    _0x1d2dab['restore']();
}
this['drawProtectiveMask']();
}, _0x3d6c08['prototype']['effectDirt'] = function () {
if (this['effA_dirtStuck'] == undefined) this['effA_dirtStuck'] = 0x0;
var _0x3afb39 = this['flag_eff_dirty'] ? 0x1 : 0x0;
this['effA_dirtStuck'] += (_0x3afb39 - this['effA_dirtStuck']) * 0.02;
if (this['effA_dirtStuck'] > 0.01) {
    _0x1d2dab['save'](), _0x1d2dab['rotate'](this['angle']);
    var _0x28ea34 = 0.9;
    _0x1d2dab['globalAlpha'] *= _0x28ea34 * this['effA_dirtStuck'];
    var _0x335cd7 = this['getImageObjForPath']('img/dirt/' + this['eff_dirtType'] + '/0.png');
    if (_0x335cd7) {
        var _0x57f4cb = this['skinScale'],
            _0x2421e6 = this['skinRad'];
        _0x1d2dab['drawImage'](_0x335cd7, -_0x2421e6 * _0x57f4cb, -_0x2421e6 * _0x57f4cb, 0x2 * _0x2421e6 * _0x57f4cb, 0x2 * _0x2421e6 * _0x57f4cb);
    }
    var _0x335cd7 = this['getImageObjForPath']('img/dirt/' + this['eff_dirtType'] + '/1.png');
    if (_0x335cd7) {
        var _0x57f4cb = this['skinScale'],
            _0x2421e6 = this['skinRad'];
        _0x1d2dab['drawImage'](_0x335cd7, -_0x2421e6 * _0x57f4cb, -_0x2421e6 * _0x57f4cb, 0x2 * _0x2421e6 * _0x57f4cb, 0x2 * _0x2421e6 * _0x57f4cb);
    }
    _0x1d2dab['restore']();
}
}, _0x3d6c08['prototype']['getSpeciesPath'] = function (_0x442209) {
return _0x442209 + '/' + this['animalSpecies'];
}, _0x3d6c08['prototype']['getWing'] = function (_0xc4dbba, _0x3c2ba7, _0x256251) {
var _0x2e4ac9 = 'skins/' + (_0x256251 ? this['getSpeciesPath'](_0xc4dbba) + '/' : _0xc4dbba + '/');
return _0x2e4ac9 += _0xc4dbba + '_wing' + _0x3c2ba7 + '.png', _0x2e4ac9;
}, _0x3d6c08['prototype']['getHead'] = function (_0x4bac53, _0x8b15a) {
var _0x29c69c = 'skins/' + (_0x8b15a ? this['getSpeciesPath'](_0x4bac53) + '/' : _0x4bac53 + '/');
return _0x29c69c += _0x4bac53 + '_head.png', _0x29c69c;
}, _0x3d6c08['prototype']['getSkinName'] = function () {
var _0x9894b4 = this['skinImgName'];
switch (this['animalType']) {
case _0x52507b:
case _0x4f4705:
case _0x3e9276:
case _0x1597d0:
case _0x3d71a1:
case _0x14a18f:
case _0x17eda1:
case _0x164f9e:
    var _0x45ca34 = '';
    if (this['flag_usingAbility']) _0x9894b4 = _0x45ca34 + _0x9894b4 + '2';
    break;
case _0x43c01e:
    this['z'] = this['z'] * 0x2;
    if (this['flag_usingAbility'] && this['specType'] == 0x4) _0x9894b4 = _0x9894b4 + '2';
    break;
}
return this['getPremiumSkin'](_0x9894b4);
}, _0x3d6c08['prototype']['getPremiumSkinFolder'] = function () {
switch (this['animalPremiumSkin']) {
case 0x1:
    return 'premium/golden/';
case 0x2:
    return 'premium/locked/';
}
return '';
}, _0x3d6c08['prototype']['getPremiumSkin'] = function (_0x253b4f) {
return this['getPremiumSkinFolder']() + _0x253b4f;
}, _0x3d6c08['prototype']['onAnimalSpeciesSet'] = function () {}, _0x3d6c08['prototype']['setObjTypes'] = function (_0x2e70f2, _0x2e960a) {
this['oType'] = _0x2e70f2, this['animalType'] = _0x2e960a;
}, _0x3d6c08['prototype']['readCustomData_onNewlyVisible'] = function (_0x3a5212) {
_0x3d6c08['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x3a5212);
var _0x348a54 = _0x3a5212['readString']();
this['nickName'] = _0x348a54 && _0x348a54['length'] > 0x0 ? _0x348a54 : 'mope.io', this['animalSpecies'] = _0x3a5212['readUInt8'](), this['animalSubSpecies'] = _0x3a5212['readUInt8'](), this['animalPremiumSkin'] = _0x3a5212['readUInt8'](), this['skinThemeID'] = _0x3a5212['readUInt8'](), this['mopeSeasonID'] = _0x3a5212['readUInt8'](), this['onAnimalSpeciesSet']();
this['animalPremiumSkin'] > 0x0 && this['setSparkleInterval'](_0x5e22a2(0x5, 0xa), _0x5e22a2(0x2, 0x3));
this['setNick'](this['nickName']);
var _0x300038 = _0x3a5212['readBitGroup']();
this['readUpdatedFlags'](_0x300038), this['flag_webStuck'] && this['readUpdatedProperty'](_0x4c642f, _0x3a5212), this['readUpdatedProperty'](_0x4d5675, _0x3a5212);
}, _0x3d6c08['prototype']['custom_canvas'] = null, _0x3d6c08['prototype']['drawCanvas'] = function () {
if (!this['custom_canvas']) {
    this['custom_canvas'] = document['createElement']('canvas');
    var _0x872436 = this['rad'] * 0x14,
        _0x3feecd = this['rad'] * 0x14;
    this['custom_canvas']['width'] = _0x872436, this['custom_canvas']['height'] = _0x3feecd;
    var _0x23f0fd = this['custom_canvas']['getContext']('2d');
    _0x23f0fd['save'](), _0x23f0fd['filter'] = 'blur(4px)', _0x23f0fd['globalAlpha'] = 0x1, _0x23f0fd['fillStyle'] = 'black', _0x23f0fd['fillRect'](0x0, 0x0, this['custom_canvas']['width'] * 0x2, this['custom_canvas']['height'] * 0x2), _0x23f0fd['globalCompositeOperation'] = 'xor', _0x23f0fd['beginPath'](), _0x23f0fd['arc'](_0x872436 / 0x2, _0x872436 / 0x2, this['rad'] + 0x5, 0x0, 0x2 * Math['PI']), _0x23f0fd['fillStyle'] = 'red', _0x23f0fd['fill'](), _0x23f0fd['restore']();
}
this['custom_canvas'] != null && (_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.5, _0x1d2dab['drawImage'](this['custom_canvas'], -this['custom_canvas']['width'] / 0x2, -this['custom_canvas']['height'] / 0x2, this['custom_canvas']['width'], this['custom_canvas']['height']), _0x1d2dab['restore']());
}, _0x3d6c08['prototype']['updateAngle'] = function (_0x548235) {
var _0x3e10d2 = _0x2bcbaa(_0x548235 - 0x5a);
this['angleDelta'] = _0x388dd0(this['angle'], _0x3e10d2), this['oAngle'] = this['angle'], this['firstPosUpd'] && (this['oAngle'] = this['angle'] = _0x3e10d2, this['angleDelta'] = 0x0);
}, _0x3d6c08['prototype']['readUpdatedFlags'] = function (_0x53e9ce) {
_0x3d6c08['superClass']['prototype']['readUpdatedFlags']['call'](this, _0x53e9ce), this['flag_lowWat'] = _0x53e9ce['getBool'](), this['flag_underWater'] = _0x53e9ce['getBool'](), this['flag_usingDiveAbility'] = _0x53e9ce['getBool'](), this['flag_eff_invincible'] = _0x53e9ce['getBool'](), this['flag_usingAbility'] = _0x53e9ce['getBool'](), this['flag_tailBitten'] = _0x53e9ce['getBool'](), this['flag_eff_stunned'] = _0x53e9ce['getBool'](), this['flag_iceSliding'] = _0x53e9ce['getBool'](), this['flag_eff_frozen'] = _0x53e9ce['getBool'](), this['flag_eff_onFire'] = _0x53e9ce['getBool'](), this['flag_eff_healing'] = _0x53e9ce['getBool'](), this['flag_eff_poison'] = _0x53e9ce['getBool'](), this['flag_constricted'] = _0x53e9ce['getBool'](), this['flag_webStuck'] = _0x53e9ce['getBool'](), this['flag_stealth'] = _0x53e9ce['getBool'](), this['flag_eff_bleeding'] = _0x53e9ce['getBool'](), this['flag_flying'] = _0x53e9ce['getBool'](), this['flag_isGrabbed'] = _0x53e9ce['getBool'](), this['flag_eff_aniInClaws'] = _0x53e9ce['getBool'](), this['flag_eff_stunk'] = _0x53e9ce['getBool'](), this['flag_cold'] = _0x53e9ce['getBool'](), this['flag_inWater'] = _0x53e9ce['getBool'](), this['flag_inLava'] = _0x53e9ce['getBool'](), this['flag_canClimbHill'] = _0x53e9ce['getBool'](), this['flag_isClimbingHill'] = _0x53e9ce['getBool'](), this['flag_isDevMode'] = _0x53e9ce['getBool'](), this['flag_eff_slimed'] = _0x53e9ce['getBool'](), this['flag_eff_wobbling'] = _0x53e9ce['getBool'](), this['flag_eff_hot'] = _0x53e9ce['getBool'](), this['flag_eff_sweatPoisoned'] = _0x53e9ce['getBool'](), this['flag_eff_shivering'] = _0x53e9ce['getBool'](), this['flag_inHidingHole'] = _0x53e9ce['getBool'](), this['flag_eff_grabbedByFlytrap'] = _0x53e9ce['getBool'](), this['flag_eff_aloeveraHealing'] = _0x53e9ce['getBool'](), this['flag_eff_tossedInAir'] = _0x53e9ce['getBool'](), this['flag_eff_isOnSpiderWeb'] = _0x53e9ce['getBool'](), this['flag_fliesLikeDragon'] = _0x53e9ce['getBool'](), this['flag_eff_isInMud'] = _0x53e9ce['getBool'](), this['flag_eff_statue'] = _0x53e9ce['getBool'](), this['flag_eff_isOnTree'] = _0x53e9ce['getBool'](), this['flag_eff_isUnderTree'] = _0x53e9ce['getBool'](), this['flag_speared'] = _0x53e9ce['getBool'](), this['flag_eff_dirty'] = _0x53e9ce['getBool'](), this['flag_eff_virusInfection'] = _0x53e9ce['getBool'](), this['flag_eff_wearingMask'] = _0x53e9ce['getBool'](), this['flag_eff_sanitized'] = _0x53e9ce['getBool'](), this['flag_viewing1v1Invite'] = _0x53e9ce['getBool'](), this['flag_can1v1'] = _0x53e9ce['getBool'](), this['flag_isInArena'] = _0x53e9ce['getBool']();
if (this['flag_isDevMode']) this['flag_hideDevPrint'] = _0x53e9ce['getBool']();
}, _0x3d6c08['prototype']['readUpdatedProperty'] = function (_0x4b70a2, _0x46d92d) {
if (_0x4b70a2 == _0x3f4a46) {
    this['wins1v1'] = _0x46d92d['readUInt16']();
    if (_0x512c37 && this['flag_can1v1']) {
        let _0x48f709 = '\x0a(wins:' + this['wins1v1'] + ')';
        this['nickTXT']['setText'](this['nickName'] + _0x48f709), this['winsAddedInNick'] = !![];
    } else this['winsAddedInNick'] && (this['winsAddedInNick'] = ![], this['nickTXT']['setText'](this['nickName']));
} else {
    if (_0x4b70a2 == _0x4f7108) this['devMode_num'] = _0x46d92d['readUInt8'](), console['log'](this['devMode_num']);
    else {
        if (_0x4b70a2 == _0x36edf0) this['playerNumberFor1v1Arena'] = _0x46d92d['readUInt8']();
        else {
            if (_0x4b70a2 == _0x532b49) this['diveType'] = _0x46d92d['readUInt8']();
            else {
                if (_0x4b70a2 == _0xd0ba03) this['eff_statueType'] = _0x46d92d['readUInt8']();
                else {
                    if (_0x4b70a2 == _0x104dd6) this['eff_constrictedSpecies'] = _0x46d92d['readUInt16']();
                    else {
                        if (_0x4b70a2 == _0x56cb4c) this['eff_constrictedSubSpecies'] = _0x46d92d['readUInt16']();
                        else {
                            if (_0x4b70a2 == _0x4c642f) this['eff_webStuckType'] = _0x46d92d['readUInt8']();
                            else {
                                if (_0x4b70a2 == _0x30beb4) this['eff_dirtType'] = _0x46d92d['readUInt8']();
                                else {
                                    if (_0x4b70a2 == _0x5b045f) {
                                        let _0x181755 = _0x46d92d['readUInt8']();
                                        this['infectionBarA'] < 0.001 && (this['infectionPer'] = _0x181755), this['infectionPer_n'] = _0x181755, this['infectionBarTimeoutT'] = +new Date() + 0xbb8;
                                    } else {
                                        if (_0x4b70a2 == _0x3ddb68) this['lastHidingHoleID'] = _0x46d92d['readUInt32'](), this['hidingHoleVisibilityRad'] = _0x46d92d['readUInt16']() / 0x4;
                                        else {
                                            if (_0x4b70a2 == _0x126898) {
                                                let _0x5bfb9e = _0x46d92d['readUInt8']();
                                                this['infectionBarA'] < 0.001 && (this['infectionPer'] = _0x5bfb9e), this['infectionPer_n'] = _0x5bfb9e, this['infectionBarTimeoutT'] = +new Date() + 0xbb8;
                                            } else {
                                                if (_0x4b70a2 == _0x4f1625) this['lava'] = _0x46d92d['readUInt8']();
                                                else {
                                                    if (_0x4b70a2 == _0x343d5d) {
                                                        let _0x3f6ddc = _0x46d92d['readUInt16']() / 0x4,
                                                            _0x2eac27 = _0x46d92d['readUInt16']() / 0x4;
                                                        _0x3f6ddc > 0x0 && _0x2eac27 > 0x0 ? (this['hasDevTarget'] = _0x2fc9ba == this['id'], this['target_ox'] = this['devTargetX'], this['target_oy'] = this['devTargetY'], this['target_nx'] = _0x3f6ddc, this['target_ny'] = _0x2eac27) : this['hasDevTarget'] = ![];
                                                    } else _0x4b70a2 == _0x4d5675 ? this['teamID'] = _0x46d92d['readUInt8']() : this['customUpdatedProperty'](_0x4b70a2, _0x46d92d);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
}, _0x3d6c08['prototype']['devTargetX'] = 0x0, _0x3d6c08['prototype']['devTargetY'] = 0x0, _0x3d6c08['prototype']['target_ox'] = 0x0, _0x3d6c08['prototype']['target_oy'] = 0x0, _0x3d6c08['prototype']['target_nx'] = 0x0, _0x3d6c08['prototype']['target_ny'] = 0x0, _0x3d6c08['prototype']['hasDevTarget'] = ![], _0x3d6c08['prototype']['onLerpUpdate'] = function (_0x2969f8) {
this['hasDevTarget'] && (this['devTargetX'] = _0x2969f8 * (this['target_nx'] - this['target_ox']) + this['target_ox'], this['devTargetY'] = _0x2969f8 * (this['target_ny'] - this['target_oy']) + this['target_oy']);
}, _0x3d6c08['prototype']['beforeCustomDraw'] = function (_0x271c43) {
this['hasDevTarget'] && (console['log'](this['devTargetX'] + ':' + this['devTargetY']), _0x1d2dab['save'](), _0x1d2dab['strokeStyle'] = 'yellow', _0x1d2dab['lineWidth'] = 0x2, _0x1d2dab['globalAlpha'] = 0x1, _0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](this['x'], this['y']), _0x1d2dab['lineTo'](this['devTargetX'], this['devTargetY']), _0x1d2dab['stroke'](), _0x1d2dab['restore']());
}, _0x3d6c08['prototype']['customUpdatedProperty'] = function (_0x69bd6e, _0x2e6d4f) {}, _0x3d6c08['prototype']['diveType'] = 0x0, _0x3d6c08['prototype']['lastHidingHoleID'] = 0x0, _0x3d6c08['prototype']['hidingHoleVisibilityRad'] = 0x0, _0x3d6c08['prototype']['winsAddedInNick'] = ![];

function _0x3d6c08(_0x414203, _0x3a4a8a) {
_0x3d6c08['superClass']['call'](this, _0x4ad968), this['animalType'] = _0x3a4a8a;
}
_0x3d6c08['prototype']['getAbilityInfo'] = function (_0x2d9dd9) {
if (this['animalType'] == _0x3e89f8) {
    var _0x339278 = {};
    return _0x339278['abilName'] = 'Claw Slash!', _0x339278['abilImg'] = 'skins/arctic/bear/clawslash.png', _0x339278['skinThemeID'] = this['skinThemeID'], _0x339278['mopeSeasonID'] = this['mopeSeasonID'], _0x339278;
} else return _0x5c0a1c(_0x2d9dd9);
}, _0x3d6c08['prototype']['calculateZIndex'] = function () {
this['updateZ']();
if (_0x44408d && _0x2fc9ba == this['id']) this['z'] = 0x7d0 + this['rad'];
else {
    if (this['flag_eff_grabbedByFlytrap']) this['z'] = 0x44c + this['rad'];
    else {
        if (this['flag_eff_tossedInAir']) this['z'] = 0x4b0 + this['rad'];
        else {
            if (this['flag_flying']) {
                this['z'] = 0x186a0;
                if (this['flag_isGrabbed']) this['z'] -= this['rad'];
                else this['z'] += this['rad'];
                this['flag_eff_aniInClaws'] && (this['z'] += 0x3e8), this['specType2'] == 0x64 && (this['z'] = 0x3f6);
            } else {
                if (this['flag_underWater'] || this['flag_usingAbility'] && this['animalType'] == _0x12b5f6) this['z'] = -0x97;
                else {
                    if (this['flag_usingAbility'] && (this['animalType'] == _0x5041f9 || this['animalType'] == _0x1b8ac0 || this['animalType'] == _0x4336e9)) this['z'] = 0x2711 + this['rad'];
                    else {
                        if (this['flag_canClimbHill'] && this['animalType'] != _0x4336e9 || this['animalType'] == _0x189024 || this['animalType'] == _0xd3040d || this['animalType'] == _0x199c9a || this['animalType'] == _0x3e89f8 || this['animalType'] == _0x1a993f || this['animalType'] == _0x1597d0 || this['animalType'] == _0x1fc0ae || this['animalType'] == _0x52ea48 || this['animalType'] == _0x55a926 || this['animalType'] == _0x39e9c9 || this['animalType'] == _0x17eda1 || this['animalType'] == _0x4ab048) this['z'] = 0x3e8 + this['rad'];
                        else {
                            if (this['animalType'] == _0x5b6f26) this['z'] = 0x3f1 + this['rad'];
                            else {
                                if (this['animalType'] == _0x47ccac) this['z'] = 0x3f0 + (this['flag_usingAbility'] ? 0x1 : 0x0) + this['rad'];
                                else this['z'] = this['rad'] * 1.5;
                            }
                        }
                    }
                    if (this['flag_fliesLikeDragon'] || this['flag_isInArena']) this['z'] += 0x7d0;
                }
            }
        }
    }
}
this['updateZ_onTree'](this['z']);
}, _0x3d6c08['prototype']['canDrawDark'] = function () {
if (this['flag_inHidingHole']) return !![];
return ![];
};
var _0x533b0b = null;
_0x3d6c08['prototype']['drawDark'] = function () {
if (!this['canDrawDark']()) {
    console['log']('cant draw darkness!');
    return;
}
if (_0x533b0b == null) {
    _0x533b0b = document['createElement']('canvas');
    var _0x512a8a = this['rad'] * 0xa,
        _0x40be60 = this['rad'] * 0xa;
    _0x533b0b['width'] = _0x512a8a, _0x533b0b['height'] = _0x40be60;
    var _0x588952 = _0x533b0b['getContext']('2d');
    _0x588952['save'](), _0x588952['filter'] = 'blur(2px)', _0x588952['globalAlpha'] = 0x1, _0x588952['fillStyle'] = 'black', _0x588952['fillRect'](0x0, 0x0, _0x533b0b['width'], _0x533b0b['height']), _0x588952['globalCompositeOperation'] = 'xor', _0x588952['beginPath'](), _0x588952['arc'](_0x512a8a / 0x2, _0x512a8a / 0x2, this['rad'] - 0x3, 0x0, 0x2 * Math['PI']), _0x588952['fillStyle'] = 'blue', _0x588952['fill'](), _0x588952['restore']();
}
_0x533b0b != null && (_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.5, _0x1d2dab['drawImage'](_0x533b0b, -_0x533b0b['width'] / 0x2, -_0x533b0b['height'] / 0x2, _0x533b0b['width'], _0x533b0b['height']), _0x1d2dab['restore']());
}, _0x3d6c08['prototype']['skinThemeID'] = 0x0, _0x3d6c08['prototype']['getSkinImagePath'] = function (_0x5a4437) {
var _0x8599d = '';
if (this['skinThemeID'] != 0x0 && (this['animalSpecies'] == 0x0 || this['animalSpecies'] == 0x1 && this['animalType'] == _0x4a8972)) _0x8599d = './assets/t/' + this['skinThemeID'] + '/' + _0x5a4437;
else {
    var _0x288fc0 = _0x5a4437['includes']('_dive') ? 0x2 : this['mopeSeasonID'];
    _0x8599d = './assets/s/' + _0x288fc0 + '/' + _0x5a4437;
}
return _0x8599d;
}, _0x3d6c08['prototype']['getSkinImagePathForShop'] = function (_0x5b6ae6) {
var _0x28a0ed = '';
if (this['skinThemeID'] != 0x0 && this['animalSpecies'] == 0x0) _0x28a0ed = './assets/t/' + this['skinThemeID'] + '/skins/' + _0x5b6ae6;
else _0x28a0ed = './assets/s/' + this['mopeSeasonID'] + '/skins/' + _0x5b6ae6;
return _0x28a0ed;
}, _0x3d6c08['prototype']['getSkinImageObj'] = function (_0x21a3dc) {
var _0x1de5f6 = this['getSkinImagePath'](_0x21a3dc);
return _0x5ace1d(_0x1de5f6, function (_0xf94438) {
    console['log'](_0xf94438['src']);
});
}, _0x3d6c08['prototype']['getSkinImageObjAsync'] = async function (_0xfcb229) {
var _0x7ebcb3 = this['getSkinImagePath'](_0xfcb229);
return _0x56ee98(_0x7ebcb3);
}, _0x3d6c08['prototype']['getImagePath'] = function (_0x5db451, _0xafc77e) {
const _0x489685 = _0xafc77e === undefined ? this['mopeSeasonID'] : _0xafc77e;
var _0x9ea068 = '';
return _0x9ea068 = './assets/s/' + _0x489685 + '/' + _0x5db451, _0x9ea068;
}, _0x3d6c08['prototype']['getImageObjForPath'] = function (_0xdacafa, _0x58b5b9) {
var _0xa9097e = this['getImagePath'](_0xdacafa, _0x58b5b9);
return _0x5ace1d(_0xa9097e, function (_0x2f6551) {
    console['log'](_0x2f6551['src']);
});
}, _0x3d6c08['prototype']['setRadius'] = function (_0x39abf1) {
this['rad'] = _0x39abf1;
}, window['Animal'] = _0x3d6c08, _0x13dc56['setCustomClassForGameObjType'](_0x3d6c08, _0x4ad968);
var _0x570743 = _0x24d74e,
_0x1e3c43 = _0x131218;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43, _0x24d74e['prototype']['animalType'] = _0xb392ab, _0x24d74e['prototype']['animalSpecies'] = 0x0, _0x24d74e['prototype']['animalSubSpecies'] = 0x0, _0x24d74e['prototype']['segmentNum'] = 0x0, _0x24d74e['prototype']['updateZ'] = function () {
this['z'] = 0x1e - this['segmentNum'];
}, _0x24d74e['prototype']['customDraw'] = function (_0x1dd24b) {
_0x1d2dab['save']();
var _0x2f7c1d = this['segmentNum'],
    _0x1c97e1 = this['getSkinImageObj']('skins/deathworm/segment_' + _0x2f7c1d + '.png');
if (_0x1c97e1) {
    var _0x49b2ff = this['rad'] * 0x2;
    _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x1c97e1, -_0x49b2ff, -_0x49b2ff, 0x2 * _0x49b2ff, 0x2 * _0x49b2ff);
}
_0x1d2dab['restore']();
}, _0x24d74e['prototype']['readCustomData_onNewlyVisible'] = function (_0x2bb22c) {
_0x24d74e['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x2bb22c), this['segmentNum'] = _0x2bb22c['readUInt8'](), this['animalSpecies'] = _0x2bb22c['readUInt8'](), this['animalSubSpecies'] = _0x2bb22c['readUInt8'](), this['animalPremiumSkin'] = _0x2bb22c['readUInt8'](), console['log']('segment num: ' + this['segmentNum']);
};

function _0x24d74e(_0x57f14e, _0x23f1f7) {
_0x24d74e['superClass']['call'](this, _0x4c37ce), this['animalType'] = _0x23f1f7;
}
window['AnimalBody'] = _0x24d74e, _0x13dc56['setCustomClassForGameObjType'](_0x24d74e, _0x4c37ce);
var _0x1e3c43 = _0x131218;
_0x21765f['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x21765f['prototype']['constructor'] = _0x21765f, _0x21765f['superClass'] = _0x1e3c43, _0x21765f['prototype']['updateZ'] = function () {
this['z'] = 0x3ea;
}, _0x21765f['prototype']['readUpdatedProperty'] = function (_0x26567a, _0x3326c8) {
_0x26567a == _0x28218f && (this['webTransparency'] = _0x3326c8['readUInt8']());
}, _0x21765f['prototype']['readCustomData_onNewlyVisible'] = function (_0x1778cd) {
this['webTransparency'] = _0x1778cd['readUInt8'](), this['webType'] = _0x1778cd['readUInt8']();
}, _0x21765f['prototype']['customDraw'] = function (_0x199528) {
_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] *= this['webTransparency'] / 0x64 * 0.9;
var _0x4d25d0 = this['getSkinImageObj']('img/web/' + this['webType'] + '/spiderWeb.png');
if (_0x4d25d0) {
    var _0x3fe050 = this['rad'];
    _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0x4d25d0, -_0x3fe050, -_0x3fe050, 0x2 * _0x3fe050, 0x2 * _0x3fe050);
}
_0x1d2dab['restore']();
};

function _0x21765f() {
_0x21765f['superClass']['call'](this, _0x2f5713), this['webTransparency'] = 0x0, this['doesDrawEffectScale'] = !![], this['drawEffectScale_Slow'] = !![];
}
window['SpiderWeb'] = _0x21765f, _0x13dc56['setCustomClassForGameObjType'](_0x21765f, _0x2f5713);
var _0x1e3c43 = _0x3d6c08;
_0x22293e['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x22293e['prototype']['constructor'] = _0x22293e, _0x22293e['superClass'] = _0x1e3c43, _0x22293e['prototype']['animalInfo'] = function () {
var _0x3ef1b0 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x3ef1b0['aniName'] = 'Octopus';
    break;
case 0xc8:
    _0x3ef1b0['aniName'] = 'Vampire Squid';
    break;
case 0xc9:
    _0x3ef1b0['aniName'] = 'Fuchsia Tiger';
    break;
case 0xca:
    _0x3ef1b0['aniName'] = 'Na Kika';
    break;
}
return _0x3ef1b0['skinName'] = this['getSkinName'](), _0x3ef1b0['aniDesc'] = '', _0x3ef1b0['upgradeText'] = 'UPGRADED to ' + _0x3ef1b0['aniName'] + '!\x0aPress W to use your \'Disguise\' ability!\x0a(Hint: wait for prey to bite you- they get stunned!)', _0x3ef1b0['aniCol'] = '#ff8340', _0x3ef1b0;
}, _0x22293e['prototype']['getSkinName'] = function () {
let _0x5e7453 = this['getSpeciesPath']() + '/octopus';
return _0x5e7453 += this['specType'] == 0x0 ? '' : 0x1, _0x5e7453;
}, _0x22293e['prototype']['getSpeciesPath'] = function () {
return 'ocean/octopus/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x22293e['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x22293e['prototype']['getAbilityInfo'] = function (_0x547507) {
var _0x52674f = {};
return _0x52674f['abilName'] = 'Disguise', _0x52674f['abilImg'] = 'abilities/Disguise.svg', _0x52674f['skinThemeID'] = this['skinThemeID'], _0x52674f['mopeSeasonID'] = this['mopeSeasonID'], _0x52674f;
}, _0x22293e['prototype']['drawUnderSkinImg'] = function () {
if (this['animalSpecies'] == 0xc8) return;
var _0x2253f4 = 0x1f4 / 0x154,
    _0x10c02d = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/head.png');
if (_0x10c02d) {
    _0x1d2dab['save']();
    var _0x58061d = 1.1,
        _0x2c57a8 = this['rad'] - this['outlineW'];
    _0x1d2dab['drawImage'](_0x10c02d, -_0x2c57a8 * _0x2253f4, -_0x2c57a8 * _0x58061d * _0x2253f4, 0x2 * _0x2c57a8 * _0x2253f4, 0x2 * _0x2c57a8 * _0x2253f4), _0x1d2dab['restore']();
}
}, _0x22293e['prototype']['readCustomData_onNewlyVisible'] = function (_0x8fda2c) {
_0x22293e['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x8fda2c);
var _0x1aa868 = _0x8fda2c['readUInt8']() > 0x0;
if (_0x1aa868) {
    var _0x542b17 = _0x8fda2c['readUInt8']() > 0x0,
        _0x5112be = _0x8fda2c['readUInt16']();
    this['createDisguiseAniObj'](_0x542b17, _0x5112be);
}
}, _0x22293e['prototype']['customUpdatedProperty'] = function (_0x256f0b, _0x34f452) {
if (_0x256f0b == _0x4df3a0) {
    var _0x3fa95a = _0x34f452['readUInt8']() > 0x0;
    if (_0x3fa95a) {
        var _0x1f1dda = _0x34f452['readUInt8']() > 0x0,
            _0x403cf3 = _0x34f452['readUInt16']();
        this['createDisguiseAniObj'](_0x1f1dda, _0x403cf3);
    } else this['octoDrawObj'] = null;
}
}, _0x22293e['prototype']['createDisguiseAniObj'] = function (_0x11d280, _0x2a5470) {
if (this['octoDrawObj'] == null) {
    var _0x11501f = _0x11d280 ? _0x4ad968 : _0x2a5470,
        _0x20521e = _0x11d280 ? _0x2a5470 : null,
        _0x40c314 = _0x13dc56['createGameObjOfOType'](_0x11501f, _0x20521e);
    if (_0x11d280) _0x40c314['animalType'] = _0x20521e;
    _0x40c314['oRad'] = this['oRad'], _0x40c314['nRad'] = this['nRad'], _0x40c314['curBiome'] = this['curBiome'], this['octoDrawObj'] = _0x40c314, this['octoDrawObj']['mopeSeasonID'] = 0x2;
}
}, _0x22293e['prototype']['drawUnderSkinImgOutline'] = function () {
_0x22293e['superClass']['prototype']['drawUnderSkinImgOutline']['call'](this);
}, _0x22293e['prototype']['drawOnTopOfSkinImg'] = function () {
_0x22293e['superClass']['prototype']['drawOnTopOfSkinImg']['call'](this);
if (this['flag_usingAbility']) {
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1 - this['underwaterA'];
    if (this['octoDisguiseObjT'] == _0x16becf) this['octoDrawObj']['nRad'] = 0x19;
    else {
        if (this['octoDisguiseObjT'] == _0x34725d) this['octoDrawObj']['nRad'] = 0x11;
        else {
            if (this['octoDisguiseObjT'] == _0x3bc4a1) this['octoDrawObj']['nRad'] = 0xf;
            else {
                if (this['octoDisguiseObjT'] == _0x51b980) this['octoDrawObj']['nRad'] = 0xf, this['octoDrawObj']['innerRad'] = 0x23;
                else this['octoDrawObj']['nRad'] = this['rad'];
            }
        }
    }
    this['octoDrawObj']['mopeSeasonID'] = 0x2, this['octoDrawObj']['draw'](), _0x1d2dab['restore']();
}
}, _0x22293e['prototype']['drawWhenUnderwater'] = function () {
_0x22293e['superClass']['prototype']['drawWhenUnderwater']['call'](this);
}, _0x22293e['prototype']['octoDisguiseObjT'] = 0x0, _0x22293e['prototype']['octoIsAnimal'] = ![], _0x22293e['prototype']['drawHealthBar'] = function () {
if (this['flag_usingAbility']) {
    if (this['octoIsAnimal']) _0x22293e['superClass']['prototype']['drawNickName']['call'](this, 0x1), this['octoDrawObj']['curBiome'] = this['curBiome'], this['hpPer_n'] = 0x2, this['hpPer'] = 0x19, this['hpBarA'] = 0x1;
    else return;
}
_0x1d2dab['save']();
var _0x3705b5 = _0x740c5b < this['hpBarTimeoutT'] ? 0x1 : 0x0;
this['hpBarA'] += (_0x3705b5 - this['hpBarA']) * 0.04;
if (this['hpBarA'] > 0.001) {
    this['hpPer'] += (this['hpPer_n'] - this['hpPer']) * 0.1;
    var _0x46b15c = Math['max'](0x1, this['rad'] / 0x19),
        _0x30d422 = 0x14 * _0x46b15c,
        _0x507f86 = 0x5 * _0x46b15c,
        _0x25c6b5 = 0x0,
        _0x353910 = -this['rad'] - 0xa * _0x46b15c;
    _0x1d2dab['globalAlpha'] *= this['hpBarA'], _0x1d2dab['fillStyle'] = 'rgba(0,0,0,0.35)', _0x1d2dab['fillRect'](_0x25c6b5 - _0x30d422 / 0x2, _0x353910 - _0x507f86 / 0x2, _0x30d422, _0x507f86), _0x1d2dab['fillStyle'] = '#16D729';
    var _0x34198a = _0x30d422 * (this['hpPer'] / 0x64);
    if (this['flag_usingAbility'] && this['octoIsAnimal']) _0x34198a = _0x30d422 * (0x19 / 0x64);
    _0x1d2dab['fillRect'](_0x25c6b5 - _0x30d422 / 0x2, _0x353910 - _0x507f86 / 0x2, _0x34198a, _0x507f86);
}
_0x1d2dab['restore']();
};

function _0x22293e() {
_0x22293e['superClass']['call'](this, _0x4ad968);
}
window['Octopus'] = _0x22293e, _0x13dc56['setCustomClassForGameObjType'](_0x22293e, _0x4ad968, _0x1bdc24);
var _0x1e3c43 = _0x3d6c08;
_0x1f6347['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x1f6347['prototype']['constructor'] = _0x1f6347, _0x1f6347['superClass'] = _0x1e3c43, _0x1f6347['prototype']['animalData'] = {}, _0x1f6347['prototype']['animalInfo'] = function () {
if (this['animalData'][this['animalSpecies']] == undefined) {
    const _0x516d6c = this['animalSpecies'] === 0x0 ? 'Bald Eagle' : this['animalSpecies'] === 0x1 ? 'Golden Eagle' : this['animalSpecies'] === 0x2 ? 'Shahbaz' : 'Golden Shahbaz';
    this['animalData'][this['animalSpecies']] = {
        'info': {
            'aniName': _0x516d6c,
            'aniCol': '#5b400d',
            'upgradeText': 'UPGRADED to ' + _0x516d6c + '!\x0a                      Eagles can fly up other animals in the air!\x0a                      ' + (this['animalSpecies'] === 0x1 ? '(Can even pick monsters!)' : this['animalSpecies'] === 0x2 ? '(Shahbaz picks anything including Black Dragon)' : this['animalSpecies'] === 0x3 ? '(Shahbaz picks everything!)' : '')
        },
        'ability': {
            'abilName': 'Fly with prey',
            'abilImg': 'abilities/Fly.svg',
            'speciesType': this['animalSpecies'],
            'skinThemeID': this['skinThemeID'],
            'mopeSeasonID': this['mopeSeasonID']
        },
        'skin': ((() => {
            const _0x39520d = this['mopeSeasonID'] === 0x2 && this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0 ? '/' + this['animalSubSpecies'] : '',
                _0x5ebf82 = 'land/eagle/' + this['animalSpecies'] + _0x39520d + '/eagle';
            return {
                'path': ['' + _0x5ebf82, _0x5ebf82 + '1', _0x5ebf82 + '2', _0x5ebf82 + '3'],
                'wing1': 'skins/' + _0x5ebf82 + '_wing1.png',
                'wing2': 'skins/' + _0x5ebf82 + '_wing2.png',
                'head': 'skins/' + _0x5ebf82 + '_head.png',
                'head1': 'skins/' + _0x5ebf82 + '_head1.png',
                'head2': 'skins/' + _0x5ebf82 + '_head2.png'
            };
        })())
    };
}
return this['animalData'][this['animalSpecies']]['info'];
}, _0x1f6347['prototype']['getSkinName'] = function () {
return this['animalData'][this['animalSpecies']]['skin']['path'][this['specType']];
}, _0x1f6347['prototype']['getWing'] = function (_0x498bf1) {
if (_0x498bf1 == 0x1) return this['animalData'][this['animalSpecies']]['skin']['wing1'];
else return this['animalData'][this['animalSpecies']]['skin']['wing2'];
}, _0x1f6347['prototype']['getHead'] = function () {
if (this['specType'] == 0x1) return this['animalData'][this['animalSpecies']]['skin']['head2'];
else return this['animalData'][this['animalSpecies']]['skin']['head'];
}, _0x1f6347['prototype']['getAbilityInfo'] = function (_0x17ee73) {
return this['animalData'][this['animalSpecies']]['ability'];
}, _0x1f6347['prototype']['ANIMATION_NAME'] = 'eagle', _0x1f6347['prototype']['drawUnderSkinImg'] = function () {
if (this['skinThemeID'] != 0x3) return;
if (this['flag_flying'] && !this['flag_isGrabbed']) {
    _0x1d2dab['save']();
    var _0x3545e0 = _0x1170c4(this['ANIMATION_NAME'], this['spawnTime']);
    _0x3545e0 !== undefined && _0x3545e0 != null && (this['theFrame'] = _0x3545e0);
    var _0x58ee8e = !(_0x31f3fc == 0x2 || _0x44408d) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'],
        _0x1ecfe4 = this['getSkinImageObj'](this['getWing'](0x1));
    if (_0x1ecfe4) {
        _0x1d2dab['save']();
        var _0x3073ce = -(-0.2 + _0x58ee8e) * _0xa0b20a,
            _0x1969ec = this['rad'] * 0.8;
        _0x1d2dab['rotate'](_0x3073ce);
        var _0x2310a4 = 0x0,
            _0xa18af4 = this['rad'],
            _0x3b55f7 = _0x1969ec * 0x2 * 0.7,
            _0x12c77a = _0x1969ec * 0x2,
            _0x462914 = -0.2,
            _0x5c72c6 = 1.2;
        _0x1d2dab['drawImage'](_0x1ecfe4, _0x2310a4 + _0x3b55f7 * -_0x462914, _0xa18af4 + _0x12c77a * -_0x5c72c6, _0x3b55f7, _0x12c77a), _0x1d2dab['restore']();
    }
    var _0x1ecfe4 = this['getSkinImageObj'](this['getWing'](0x2));
    if (_0x1ecfe4) {
        _0x1d2dab['save']();
        var _0x3073ce = -(-0.2 + _0x58ee8e) * _0x2bcbaa(-0x5a),
            _0x1969ec = this['rad'] * 0.8;
        _0x1d2dab['rotate'](_0x3073ce);
        var _0x2310a4 = 0x0,
            _0xa18af4 = this['rad'],
            _0x3b55f7 = _0x1969ec * 0x2 * 0.7,
            _0x12c77a = _0x1969ec * 0x2,
            _0x462914 = 1.2,
            _0x5c72c6 = 1.2;
        _0x1d2dab['drawImage'](_0x1ecfe4, _0x2310a4 + _0x3b55f7 * -_0x462914, _0xa18af4 + _0x12c77a * -_0x5c72c6, _0x3b55f7, _0x12c77a), _0x1d2dab['restore']();
    }
    _0x1d2dab['restore']();
}
}, _0x1f6347['prototype']['drawSkinCustomization'] = function () {
if (this['skinThemeID'] == 0x3) return;
if (!this['flag_usingAbility']) return;
var _0x371152 = 0x1f4 / 0x154; {
    if (this['flag_flying'] && !this['flag_isGrabbed']) {
        _0x1d2dab['save']();
        var _0x20b3bd = _0x1170c4(this['ANIMATION_NAME'], this['spawnTime']);
        _0x20b3bd !== undefined && _0x20b3bd != null && (this['theFrame'] = _0x20b3bd);
        var _0x310e68 = !(_0x31f3fc == 0x2 || _0x44408d) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'],
            _0x1d01b2 = this['getSkinImageObj'](this['getWing'](0x1));
        if (_0x1d01b2) {
            _0x1d2dab['save']();
            var _0x2c6a30 = -(-0.2 + _0x310e68) * _0xa0b20a,
                _0x1c28f9 = this['rad'] * 0.8;
            _0x1d2dab['rotate'](_0x2bcbaa(0x2d) + _0x2c6a30);
            var _0x207cde = 0x0,
                _0x94e728 = this['rad'],
                _0x533706 = _0x1c28f9 * 0x2 * 0.62,
                _0x21ac46 = _0x1c28f9 * 2.5,
                _0x49bea8 = 0.2,
                _0x6afdb = 1.7;
            _0x1d2dab['drawImage'](_0x1d01b2, _0x207cde + _0x533706 * -_0x49bea8, _0x94e728 + _0x21ac46 * -_0x6afdb, _0x533706, _0x21ac46), _0x1d2dab['restore']();
        }
        var _0x1d01b2 = this['getSkinImageObj'](this['getWing'](0x2));
        if (_0x1d01b2) {
            _0x1d2dab['save']();
            var _0x2c6a30 = -(-0.2 + _0x310e68) * _0x2bcbaa(-0x5a),
                _0x1c28f9 = this['rad'] * 0.8;
            _0x1d2dab['rotate'](_0x2bcbaa(-0x2d) + _0x2c6a30);
            var _0x207cde = 0x0,
                _0x94e728 = this['rad'],
                _0x533706 = _0x1c28f9 * 0x2 * 0.62,
                _0x21ac46 = _0x1c28f9 * 2.5,
                _0x49bea8 = 0.8,
                _0x6afdb = 1.7;
            _0x1d2dab['drawImage'](_0x1d01b2, _0x207cde + _0x533706 * -_0x49bea8, _0x94e728 + _0x21ac46 * -_0x6afdb, _0x533706, _0x21ac46), _0x1d2dab['restore']();
        }
        _0x1d2dab['restore']();
    } else {
        if (this['specType'] == 0x1 && this['skinThemeID'] != 0x3) {
            _0x1d2dab['save']();
            var _0x5a380e = (_0x740c5b - this['spawnTime']) / 0x3e8,
                _0x310e68 = !(_0x31f3fc == 0x2) ? _0x21d673(_0x5a380e, 0.7, 0.3, 0x2) : 0x0,
                _0x1d01b2 = this['getSkinImageObj'](this['getWing'](0x1));
            if (_0x1d01b2) {
                _0x1d2dab['save']();
                var _0x2c6a30 = -(-0.2 + _0x310e68) * _0x2bcbaa(0x2d),
                    _0x1c28f9 = this['rad'] * 0.8;
                _0x1d2dab['rotate'](_0x2bcbaa(0xf) + _0x2c6a30);
                var _0x207cde = 0x0,
                    _0x94e728 = this['rad'],
                    _0x533706 = _0x1c28f9 * 0x2 * 0.8,
                    _0x21ac46 = _0x1c28f9 * 2.2,
                    _0x49bea8 = 0x0,
                    _0x6afdb = 1.5;
                _0x1d2dab['drawImage'](_0x1d01b2, _0x207cde + _0x533706 * -_0x49bea8, _0x94e728 + _0x21ac46 * -_0x6afdb, _0x533706, _0x21ac46), _0x1d2dab['restore']();
            }
            var _0x1d01b2 = this['getSkinImageObj'](this['getWing'](0x2));
            if (_0x1d01b2) {
                _0x1d2dab['save']();
                var _0x2c6a30 = -(-0.2 + _0x310e68) * _0x2bcbaa(-0x2d),
                    _0x1c28f9 = this['rad'] * 0.8;
                _0x1d2dab['rotate'](_0x2bcbaa(-0xf) + _0x2c6a30);
                var _0x207cde = 0x0,
                    _0x94e728 = this['rad'],
                    _0x533706 = _0x1c28f9 * 0x2 * 0.8,
                    _0x21ac46 = _0x1c28f9 * 2.2,
                    _0x49bea8 = 0x1,
                    _0x6afdb = 1.5;
                _0x1d2dab['drawImage'](_0x1d01b2, _0x207cde + _0x533706 * -_0x49bea8, _0x94e728 + _0x21ac46 * -_0x6afdb, _0x533706, _0x21ac46), _0x1d2dab['restore']();
            }
            _0x1d2dab['restore']();
        }
    }
    if (this['specType'] != 0x0 && this['specType'] != undefined) {
        var _0x48e8e8 = -0.05;
        this['flag_flying'] ? _0x48e8e8 = 0.1 : this['animalSpecies'] == 0x2 && (_0x48e8e8 = -0.075);
        var _0x5a2aa2 = this['getSkinImageObj'](this['getHead']());
        if (_0x5a2aa2) {
            _0x1d2dab['save']();
            var _0x1c28f9 = this['rad'];
            _0x1d2dab['drawImage'](_0x5a2aa2, -_0x1c28f9 * _0x371152, (-_0x1c28f9 + _0x1c28f9 * _0x48e8e8) * _0x371152, 0x2 * _0x1c28f9 * _0x371152, 0x2 * _0x1c28f9 * _0x371152), _0x1d2dab['restore']();
        }
    }
}
};

function _0x1f6347() {
_0x1f6347['superClass']['call'](this, _0x4ad968);
}
window['Eagle'] = _0x1f6347, _0x13dc56['setCustomClassForGameObjType'](_0x1f6347, _0x4ad968, _0x5041f9);
var _0x1e3c43 = _0x3d6c08;
_0x1c64d9['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x1c64d9['prototype']['constructor'] = _0x1c64d9, _0x1c64d9['superClass'] = _0x1e3c43, _0x1c64d9['prototype']['getSkinName'] = function () {
return 'land/ostrich/' + this['animalSpecies'] + this['getSubSpecies']() + '/ostrich';
}, _0x1c64d9['prototype']['getSubSpecies'] = function () {
return this['animalSpecies'] === 0xcc ? '/' + this['animalSubSpecies'] : '';
}, _0x1c64d9['prototype']['animalInfo'] = function () {
var _0x351e83 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x351e83['aniName'] = 'Ostrich!';
    break;
case 0x1:
    _0x351e83['aniName'] = 'Golden Ostrich!';
    break;
case 0x2:
    _0x351e83['aniName'] = 'Ruffled Ostrich!';
    break;
case 0xdc:
    _0x351e83['aniName'] = 'Sunset Ostrich';
    break;
case 0xcc:
    _0x351e83['aniName'] = 'Necromancer Ostrich!';
    break;
}
return _0x351e83['skinName'] = 'land/ostrich/' + this['animalSpecies'] + this['getSubSpecies']() + '/ostrich', _0x351e83['aniDesc'] = '', _0x351e83['upgradeText'] = 'UPGRADED to ' + _0x351e83['aniName'] + '! Lay eggs to hatch babies! \x0aCommand babies by placing your crosshair (right-click/W)-\x0a They can attack prey!', _0x351e83['aniCol'] = '#FF9000', _0x351e83;
}, _0x1c64d9['prototype']['getAbilityInfo'] = function (_0x429703) {
var _0x3181b5 = {};
return _0x3181b5['abilName'] = 'Command Babies!', _0x3181b5['abilImg'] = 'abilities/Hypnotize.svg', _0x3181b5['skinThemeID'] = this['skinThemeID'], _0x3181b5['mopeSeasonID'] = this['mopeSeasonID'], _0x3181b5;
}, _0x1c64d9['prototype']['getSkinImageObj'] = function (_0x2dc17b) {
var _0x2896a5 = this['animalSpecies'] === 0x1 || this['animalSpecies'] === 0x2 || this['animalSpecies'] === 0xcc ? 0x1 : this['mopeSeasonID'];
return this['getSkinImageObjForSeason'](_0x2dc17b, _0x2896a5);
};

function _0x1c64d9() {
_0x1c64d9['superClass']['call'](this, _0x4ad968);
}
window['Ostrich'] = _0x1c64d9, _0x13dc56['setCustomClassForGameObjType'](_0x1c64d9, _0x4ad968, _0xf59392);
var _0x1e3c43 = _0x3d6c08;
_0x233b7c['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x233b7c['prototype']['constructor'] = _0x233b7c, _0x233b7c['superClass'] = _0x1e3c43, _0x233b7c['prototype']['getSkinName'] = function () {
return 'land/ostrich/' + this['animalSpecies'] + '/ostrich-baby';
}, _0x233b7c['prototype']['isEdibleOutlined'] = function () {
if (this['mommyID'] == _0x2fc9ba) return ![];
var _0x31030f = _0x3c55ea[_0x2fc9ba];
if (_0x31030f) {
    var _0x445efd = _0x31030f['animalType'];
    if (_0x445efd == _0x254b52 || _0x445efd == _0x17eda1 || _0x445efd == _0x697285) return ![];
}
return _0x233b7c['superClass']['prototype']['isEdibleOutlined']['call'](this);;
}, _0x233b7c['prototype']['getSkinImageObj'] = function (_0x3b6689) {
var _0x21b447 = this['animalSpecies'] === 0x1 || this['animalSpecies'] === 0x2 || this['animalSpecies'] === 0xcc ? 0x1 : this['mopeSeasonID'];
return this['getSkinImageObjForSeason'](_0x3b6689, _0x21b447);
}, _0x233b7c['prototype']['readCustomData_onNewlyVisible'] = function (_0x4dffc4) {
_0x233b7c['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x4dffc4), this['mommyID'] = _0x4dffc4['readUInt32']();
};

function _0x233b7c() {
_0x233b7c['superClass']['call'](this, _0x4ad968);
}
window['OstrichBaby'] = _0x233b7c, _0x13dc56['setCustomClassForGameObjType'](_0x233b7c, _0x4ad968, _0x4618bb);
var _0x48d9cf = _0x48d9cf,
_0x1e3c43 = _0x3d6c08;
_0x48d9cf['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x48d9cf['prototype']['constructor'] = _0x48d9cf, _0x48d9cf['superClass'] = _0x1e3c43, _0x48d9cf['prototype']['getSkinName'] = function () {
var _0x388baa = this['getSpeciesPath']('land/falcon') + '/falcon';
return _0x388baa += this['specType'] == 0x0 ? '' : this['specType'], _0x388baa;
}, _0x48d9cf['prototype']['animalInfo'] = function () {
var _0x506dc7 = {},
    _0x2da34e = '';
switch (this['animalSpecies']) {
case 0x0:
    _0x506dc7['aniName'] = 'Falcon';
    break;
case 0x1:
    _0x506dc7['aniName'] = 'Predator', _0x2da34e = '\x0a(No apex is safe from Predator!)';
    break;
case 0x2:
    _0x506dc7['aniName'] = 'Shaheen', _0x2da34e = '\x0a(Shaheen flies longer and swoop everything!)';
    break;
case 0xca:
    _0x506dc7['aniName'] = 'Meteor Falcon';
    break;
}
return _0x506dc7['upgradeText'] = 'UPGRADED to ' + _0x506dc7['aniName'] + '! \x0aFly, and do a powerful dive attack! Aim it well.' + _0x2da34e, _0x506dc7['aniCol'] = '#FF9000', _0x506dc7['skinName'] = 'land/falcon/' + this['animalSpecies'] + '/falcon' + (this['specType'] == 0x0 ? '' : this['specType']), _0x506dc7;
}, _0x48d9cf['prototype']['getWing'] = function (_0x46930f, _0x2daab5, _0x1c7f64) {
_0x1c7f64 = !![];
var _0x203d8f = 'skins/land/' + (_0x1c7f64 ? this['getSpeciesPath'](_0x46930f) + '/' : _0x46930f + '/');
return _0x203d8f += _0x46930f + '_wing' + _0x2daab5 + '.png', _0x203d8f;
}, _0x48d9cf['prototype']['getHead'] = function (_0x3d4afb, _0x504b22, _0x52df1) {
_0x52df1 = !![];
var _0x13edb8 = 'skins/land/' + (_0x52df1 ? this['getSpeciesPath'](_0x3d4afb) + '/' : _0x3d4afb + '/');
return _0x13edb8 += _0x3d4afb + '_head.png', _0x13edb8;
}, _0x48d9cf['prototype']['getAbilityInfo'] = function (_0x468a55) {
var _0x8118a = {};
return _0x8118a['abilName'] = 'Sky dive', _0x8118a['abilImg'] = 'abilities/SkyDive.svg', _0x8118a['speciesType'] = this['animalSpecies'], _0x8118a['skinThemeID'] = this['skinThemeID'], _0x8118a['mopeSeasonID'] = this['mopeSeasonID'], _0x8118a;
}, _0x48d9cf['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) return;
var _0x519ae1 = 'skins',
    _0xb58aa1 = 0x1f4 / 0x154;
if (this['flag_flying'] && !this['flag_isGrabbed'] && this['specType'] == 0x1) {
    _0x1d2dab['save']();
    var _0x18265e = _0x1170c4('bird', this['spawnTime']);
    _0x18265e !== undefined && _0x18265e != null && (this['theFrame'] = _0x18265e);
    var _0x58d753 = !(_0x31f3fc == 0x2 || _0x44408d) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'],
        _0x40b994 = this['getSkinImageObj'](this['getWing']('falcon', 0x1, ![]));
    if (_0x40b994) {
        _0x1d2dab['save']();
        var _0x1a2054 = -(-0.2 + _0x58d753) * _0x2bcbaa(0x50),
            _0x4d0888 = this['rad'] * 0.8;
        _0x1d2dab['rotate'](_0x2bcbaa(0x19) + _0x1a2054);
        var _0x20fa07 = 0x0,
            _0x896592 = this['rad'],
            _0x5a0518 = _0x4d0888 * 0x2 * 0.65,
            _0x2c84af = _0x4d0888 * 2.5,
            _0x426d0b = 0x0,
            _0x32fb38 = 1.5;
        _0x1d2dab['drawImage'](_0x40b994, _0x20fa07 + _0x5a0518 * -_0x426d0b, _0x896592 + _0x2c84af * -_0x32fb38, _0x5a0518, _0x2c84af), _0x1d2dab['restore']();
    }
    var _0x40b994 = this['getSkinImageObj'](this['getWing']('falcon', 0x2, ![]));
    if (_0x40b994) {
        _0x1d2dab['save']();
        var _0x1a2054 = -(-0.2 + _0x58d753) * _0x2bcbaa(-0x50),
            _0x4d0888 = this['rad'] * 0.8;
        _0x1d2dab['rotate'](_0x2bcbaa(-0x19) + _0x1a2054);
        var _0x20fa07 = 0x0,
            _0x896592 = this['rad'],
            _0x5a0518 = _0x4d0888 * 0x2 * 0.65,
            _0x2c84af = _0x4d0888 * 2.5,
            _0x426d0b = 0x1,
            _0x32fb38 = 1.5;
        _0x1d2dab['drawImage'](_0x40b994, _0x20fa07 + _0x5a0518 * -_0x426d0b, _0x896592 + _0x2c84af * -_0x32fb38, _0x5a0518, _0x2c84af), _0x1d2dab['restore']();
    }
    _0x1d2dab['restore']();
} else {
    if (this['flag_flying'] && this['specType'] == 0x2) {
        _0x1d2dab['save']();
        var _0xd0272f = (_0x740c5b - this['spawnTime']) / 0x3e8,
            _0x58d753 = !(_0x31f3fc == 0x2) ? _0x21d673(_0xd0272f, 0.7, 0.3, 0x2) : 0x0,
            _0x40b994 = this['getSkinImageObj'](this['getWing']('falcon', 0x1, ![]));
        if (_0x40b994) {
            _0x1d2dab['save']();
            var _0x1a2054 = -(-0.2 + 0x0) * _0x2bcbaa(0x19),
                _0x4d0888 = this['rad'] * 0.8;
            _0x1d2dab['rotate'](_0x1a2054);
            var _0x20fa07 = 0x0,
                _0x896592 = this['rad'],
                _0x5a0518 = _0x4d0888 * 0x2 * 0.7,
                _0x2c84af = _0x4d0888 * 2.2,
                _0x426d0b = 0x0,
                _0x32fb38 = 1.5;
            _0x1d2dab['drawImage'](_0x40b994, _0x20fa07 + _0x5a0518 * -_0x426d0b, _0x896592 + _0x2c84af * -_0x32fb38, _0x5a0518, _0x2c84af), _0x1d2dab['restore']();
        }
        var _0x40b994 = this['getSkinImageObj'](this['getWing']('falcon', 0x2, ![]));
        if (_0x40b994) {
            _0x1d2dab['save']();
            var _0x1a2054 = -(-0.2 + 0x0) * _0x2bcbaa(-0x19),
                _0x4d0888 = this['rad'] * 0.8;
            _0x1d2dab['rotate'](_0x1a2054);
            var _0x20fa07 = 0x0,
                _0x896592 = this['rad'],
                _0x5a0518 = _0x4d0888 * 0x2 * 0.7,
                _0x2c84af = _0x4d0888 * 2.2,
                _0x426d0b = 0x1,
                _0x32fb38 = 1.5;
            _0x1d2dab['drawImage'](_0x40b994, _0x20fa07 + _0x5a0518 * -_0x426d0b, _0x896592 + _0x2c84af * -_0x32fb38, _0x5a0518, _0x2c84af), _0x1d2dab['restore']();
        }
        _0x1d2dab['restore']();
    } else {
        if (this['flag_flying'] && this['specType'] == 0x3) {
            _0x1d2dab['save']();
            var _0xd0272f = (_0x740c5b - this['spawnTime']) / 0x3e8,
                _0x58d753 = !(_0x31f3fc == 0x2) ? _0x21d673(_0xd0272f, 0.5, 0.4, 0x2) : 0x0,
                _0x40b994 = this['getSkinImageObj'](this['getWing']('falcon', 0x1, !![]));
            if (_0x40b994) {
                _0x1d2dab['save']();
                var _0x1a2054 = -(-0.2 + _0x58d753) * _0x2bcbaa(0x2d),
                    _0x4d0888 = this['rad'] * 0.8;
                _0x1d2dab['rotate'](_0x2bcbaa(0xf) + _0x1a2054);
                var _0x20fa07 = 0x0,
                    _0x896592 = this['rad'],
                    _0x5a0518 = _0x4d0888 * 0x2 * 0x1,
                    _0x2c84af = _0x4d0888 * 2.2,
                    _0x426d0b = 0x0,
                    _0x32fb38 = 1.5;
                _0x1d2dab['drawImage'](_0x40b994, _0x20fa07 + _0x5a0518 * -_0x426d0b, _0x896592 + _0x2c84af * -_0x32fb38, _0x5a0518, _0x2c84af), _0x1d2dab['restore']();
            }
            var _0x40b994 = this['getSkinImageObj'](this['getWing']('falcon', 0x2, !![]));
            if (_0x40b994) {
                _0x1d2dab['save']();
                var _0x1a2054 = -(-0.2 + _0x58d753) * _0x2bcbaa(-0x2d),
                    _0x4d0888 = this['rad'] * 0.8;
                _0x1d2dab['rotate'](_0x2bcbaa(-0xf) + _0x1a2054);
                var _0x20fa07 = 0x0,
                    _0x896592 = this['rad'],
                    _0x5a0518 = _0x4d0888 * 0x2 * 0x1,
                    _0x2c84af = _0x4d0888 * 2.2,
                    _0x426d0b = 0x1,
                    _0x32fb38 = 1.5;
                _0x1d2dab['drawImage'](_0x40b994, _0x20fa07 + _0x5a0518 * -_0x426d0b, _0x896592 + _0x2c84af * -_0x32fb38, _0x5a0518, _0x2c84af), _0x1d2dab['restore']();
            }
            _0x1d2dab['restore']();
        }
    }
}
if (this['specType'] != 0x0 && this['specType'] != undefined) {
    var _0x3d3c57 = this['getSkinImageObj'](this['getHead']('/falcon', !![]));
    if (_0x3d3c57) {
        _0x1d2dab['save']();
        var _0x4d0888 = this['rad'] * (this['specType'] == 0x3 ? 1.2 : 0x1),
            _0x48b30c = _0x4d0888 * 0.2;
        if (this['specType'] == 0x3) _0x48b30c = _0x4d0888 * -0.15;
        _0x1d2dab['drawImage'](_0x3d3c57, -_0x4d0888 * _0xb58aa1, (-_0x4d0888 + _0x48b30c) * _0xb58aa1, 0x2 * _0x4d0888 * _0xb58aa1, 0x2 * _0x4d0888 * _0xb58aa1), _0x1d2dab['restore']();
    }
}
};

function _0x48d9cf() {
_0x48d9cf['superClass']['call'](this, _0x4ad968);
}
window['Falcon'] = _0x48d9cf, _0x13dc56['setCustomClassForGameObjType'](_0x48d9cf, _0x4ad968, _0x4e8eac);
var _0x1e3c43 = _0x3d6c08;
_0x112c3d['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x112c3d['prototype']['constructor'] = _0x112c3d, _0x112c3d['superClass'] = _0x1e3c43, _0x112c3d['prototype']['animalInfo'] = function () {
var _0x17f596 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x17f596['aniName'] = 'Snowy Owl';
    break;
case 0xc9:
    _0x17f596['aniName'] = 'Owlrigami';
    break;
}
return _0x17f596['skinName'] = this['getSkinName'](), _0x17f596['aniDesc'] = '', _0x17f596['upgradeText'] = 'UPGRADED to ' + _0x17f596['aniName'] + '!\x0aAim the crosshair\x0aright-click / press W when its on top of prey to attack', _0x17f596['aniCol'] = '#633838', _0x17f596;
}, _0x112c3d['prototype']['getSkinName'] = function () {
let _0x3aa90d = this['getSpeciesPath']() + '/snowyowl';
return _0x3aa90d += this['specType'] == 0x0 ? '' : this['specType'], _0x3aa90d;
}, _0x112c3d['prototype']['getSpeciesPath'] = function () {
return 'arctic/snowyowl/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x112c3d['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x112c3d['prototype']['getWing'] = function (_0x25f8ae) {
var _0x2afc0b = 'skins/' + this['getSpeciesPath']();
return _0x2afc0b += '/snowyowl_wing' + _0x25f8ae + '.png', _0x2afc0b;
}, _0x112c3d['prototype']['getHead'] = function () {
var _0x270730 = 'skins/' + this['getSpeciesPath']();
return _0x270730 += '/snowyowl_head.png', _0x270730;
}, _0x112c3d['prototype']['getAbilityInfo'] = function (_0x2a2c77) {
var _0xdb75b1 = {};
return _0xdb75b1['abilName'] = 'Target Prey!', _0xdb75b1['abilImg'] = 'abilities/Target.svg', _0xdb75b1['skinThemeID'] = this['skinThemeID'], _0xdb75b1['mopeSeasonID'] = this['mopeSeasonID'], _0xdb75b1;
}, _0x112c3d['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) return;
var _0x2dbc92 = 'skins',
    _0x6eb6b8 = 0x1f4 / 0x154;
if (this['flag_flying'] && !this['flag_isGrabbed'] && this['specType'] == 0x1) {
    _0x1d2dab['save']();
    var _0x405760 = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x199529 = !(_0x31f3fc == 0x2 || _0x44408d) ? _0x21d673(_0x405760, 0.7, 0.4, 0x2) : this['birdNoAnimationFlyWingAngle'],
        _0x512af = this['getSkinImageObj'](this['getWing'](0x1));
    if (_0x512af) {
        _0x1d2dab['save']();
        var _0x5cece5 = -(-0.2 + _0x199529) * _0x2bcbaa(0x50),
            _0x4542c9 = this['rad'] * 0.8;
        _0x1d2dab['rotate'](_0x2bcbaa(0x19) + _0x5cece5);
        var _0x232730 = 0x0,
            _0x1d2989 = this['rad'],
            _0x264f18 = _0x4542c9 * 0x2 * 0.65,
            _0x1c2850 = _0x4542c9 * 2.5,
            _0x4742d6 = 0x0,
            _0xcdd82e = 1.5;
        _0x1d2dab['drawImage'](_0x512af, _0x232730 + _0x264f18 * -_0x4742d6, _0x1d2989 + _0x1c2850 * -_0xcdd82e, _0x264f18, _0x1c2850), _0x1d2dab['restore']();
    }
    var _0x512af = this['getSkinImageObj'](this['getWing'](0x2));
    if (_0x512af) {
        _0x1d2dab['save']();
        var _0x5cece5 = -(-0.2 + _0x199529) * _0x2bcbaa(-0x50),
            _0x4542c9 = this['rad'] * 0.8;
        _0x1d2dab['rotate'](_0x2bcbaa(-0x19) + _0x5cece5);
        var _0x232730 = 0x0,
            _0x1d2989 = this['rad'],
            _0x264f18 = _0x4542c9 * 0x2 * 0.65,
            _0x1c2850 = _0x4542c9 * 2.5,
            _0x4742d6 = 0x1,
            _0xcdd82e = 1.5;
        _0x1d2dab['drawImage'](_0x512af, _0x232730 + _0x264f18 * -_0x4742d6, _0x1d2989 + _0x1c2850 * -_0xcdd82e, _0x264f18, _0x1c2850), _0x1d2dab['restore']();
    }
    _0x1d2dab['restore']();
} else {
    if (this['flag_flying'] && this['specType'] == 0x2) {
        _0x1d2dab['save']();
        var _0x405760 = (_0x740c5b - this['spawnTime']) / 0x3e8,
            _0x199529 = !(_0x31f3fc == 0x2) ? _0x21d673(_0x405760, 0.7, 0.3, 0x2) : 0x0,
            _0x512af = this['getSkinImageObj'](this['getWing'](0x1));
        if (_0x512af) {
            _0x1d2dab['save']();
            var _0x5cece5 = -(-0.2 + _0x199529) * _0x2bcbaa(0x2d),
                _0x4542c9 = this['rad'] * 0.8;
            _0x1d2dab['rotate'](_0x2bcbaa(0xf) + _0x5cece5);
            var _0x232730 = 0x0,
                _0x1d2989 = this['rad'],
                _0x264f18 = _0x4542c9 * 0x2 * 0.7,
                _0x1c2850 = _0x4542c9 * 2.2,
                _0x4742d6 = 0x0,
                _0xcdd82e = 1.5;
            _0x1d2dab['drawImage'](_0x512af, _0x232730 + _0x264f18 * -_0x4742d6, _0x1d2989 + _0x1c2850 * -_0xcdd82e, _0x264f18, _0x1c2850), _0x1d2dab['restore']();
        }
        var _0x512af = this['getSkinImageObj'](this['getWing'](0x2));
        if (_0x512af) {
            _0x1d2dab['save']();
            var _0x5cece5 = -(-0.2 + _0x199529) * _0x2bcbaa(-0x2d),
                _0x4542c9 = this['rad'] * 0.8;
            _0x1d2dab['rotate'](_0x2bcbaa(-0xf) + _0x5cece5);
            var _0x232730 = 0x0,
                _0x1d2989 = this['rad'],
                _0x264f18 = _0x4542c9 * 0x2 * 0.7,
                _0x1c2850 = _0x4542c9 * 2.2,
                _0x4742d6 = 0x1,
                _0xcdd82e = 1.5;
            _0x1d2dab['drawImage'](_0x512af, _0x232730 + _0x264f18 * -_0x4742d6, _0x1d2989 + _0x1c2850 * -_0xcdd82e, _0x264f18, _0x1c2850), _0x1d2dab['restore']();
        }
        _0x1d2dab['restore']();
    } else {
        if (this['flag_flying'] && this['specType'] == 0x3) {
            _0x1d2dab['save']();
            var _0x405760 = (_0x740c5b - this['spawnTime']) / 0x3e8,
                _0x199529 = !(_0x31f3fc == 0x2) ? _0x21d673(_0x405760, 0.5, 0.5, 0x2) : 0x0,
                _0x512af = this['getSkinImageObj'](this['getWing'](0x1));
            if (_0x512af) {
                _0x1d2dab['save']();
                var _0x5cece5 = -(-0.2 + _0x199529) * _0x2bcbaa(0x2d),
                    _0x4542c9 = this['rad'] * 0.8;
                _0x1d2dab['rotate'](_0x2bcbaa(0x19) + _0x5cece5);
                var _0x232730 = 0x0,
                    _0x1d2989 = this['rad'],
                    _0x264f18 = _0x4542c9 * 0x2 * 0.7,
                    _0x1c2850 = _0x4542c9 * 2.2,
                    _0x4742d6 = 0x0,
                    _0xcdd82e = 1.5;
                _0x1d2dab['drawImage'](_0x512af, _0x232730 + _0x264f18 * -_0x4742d6, _0x1d2989 + _0x1c2850 * -_0xcdd82e, _0x264f18, _0x1c2850), _0x1d2dab['restore']();
            }
            var _0x512af = this['getSkinImageObj'](this['getWing'](0x2));
            if (_0x512af) {
                _0x1d2dab['save']();
                var _0x5cece5 = -(-0.2 + _0x199529) * _0x2bcbaa(-0x2d),
                    _0x4542c9 = this['rad'] * 0.8;
                _0x1d2dab['rotate'](_0x2bcbaa(-0x19) + _0x5cece5);
                var _0x232730 = 0x0,
                    _0x1d2989 = this['rad'],
                    _0x264f18 = _0x4542c9 * 0x2 * 0.7,
                    _0x1c2850 = _0x4542c9 * 2.2,
                    _0x4742d6 = 0x1,
                    _0xcdd82e = 1.5;
                _0x1d2dab['drawImage'](_0x512af, _0x232730 + _0x264f18 * -_0x4742d6, _0x1d2989 + _0x1c2850 * -_0xcdd82e, _0x264f18, _0x1c2850), _0x1d2dab['restore']();
            }
            _0x1d2dab['restore']();
        }
    }
}
if (this['specType'] != 0x0 && this['specType'] != undefined) {
    var _0x3b58e3 = this['getSkinImageObj'](this['getHead']());
    if (_0x3b58e3) {
        _0x1d2dab['save']();
        var _0x4542c9 = this['rad'];
        _0x1d2dab['drawImage'](_0x3b58e3, -_0x4542c9 * _0x6eb6b8, (-_0x4542c9 + _0x4542c9 * 0.1) * _0x6eb6b8, 0x2 * _0x4542c9 * _0x6eb6b8, 0x2 * _0x4542c9 * _0x6eb6b8), _0x1d2dab['restore']();
    }
}
};

function _0x112c3d() {
_0x112c3d['superClass']['call'](this, _0x4ad968);
}
window['SnowyOwl'] = _0x112c3d, _0x13dc56['setCustomClassForGameObjType'](_0x112c3d, _0x4ad968, _0x81deb4);
var _0x113a33 = _0x113a33,
_0x1e3c43 = _0x3d6c08;
_0x113a33['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x113a33['prototype']['constructor'] = _0x113a33, _0x113a33['superClass'] = _0x1e3c43, _0x113a33['prototype']['getSpeciesPath'] = function (_0x1c0658) {
return 'ocean/' + _0x1c0658 + '/' + this['animalSpecies'];
}, _0x113a33['prototype']['getSkinName'] = function () {
return this['getSpeciesPath']('pelican') + '/pelican' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x113a33['prototype']['getAbilityInfo'] = function (_0x547370) {
var _0x3ce24e = {};
return _0x3ce24e['abilName'] = 'Fly with water', _0x3ce24e['abilImg'] = 'abilities/PelicanFlyWithWater.svg', _0x3ce24e['skinThemeID'] = this['skinThemeID'], _0x3ce24e['mopeSeasonID'] = this['mopeSeasonID'], _0x3ce24e;
}, _0x113a33['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) return;
var _0x14ebf4 = 0x1f4 / 0x154,
    _0xb71db2 = this['rad'] - this['outlineW'],
    _0x3de1dc = 'skins';
if (this['flag_flying']) {
    var _0x54a55a = '';
    _0x54a55a = 'pelican', _0x1d2dab['save']();
    var _0x58821e = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x2fb164 = !(_0x31f3fc == 0x2 || _0x44408d) ? _0x21d673(_0x58821e, 0.9, 0.3, 0x2) : this['birdNoAnimationFlyWingAngle'],
        _0x5172fb = this['getSkinImageObj'](this['getWing']('pelican', 0x1, !![]));
    if (_0x5172fb) {
        _0x1d2dab['save']();
        var _0x2043cd = -(-0.2 + _0x2fb164) * _0xa0b20a,
            _0xb71db2 = this['rad'] * 0.8;
        _0x1d2dab['rotate'](_0x2bcbaa(0x2d) + _0x2043cd);
        var _0x1a950d = 0x0,
            _0x20b3f5 = this['rad'],
            _0x367460 = _0xb71db2 * 0x2 * 0.6,
            _0x43b993 = _0xb71db2 * 2.3,
            _0x4e6353 = 0x0,
            _0x35d081 = 1.7;
        _0x1d2dab['drawImage'](_0x5172fb, _0x1a950d + _0x367460 * -_0x4e6353, _0x20b3f5 + _0x43b993 * -_0x35d081, _0x367460, _0x43b993), _0x1d2dab['restore']();
    }
    var _0x5172fb = this['getSkinImageObj'](this['getWing']('pelican', 0x2, !![]));
    if (_0x5172fb) {
        _0x1d2dab['save']();
        var _0x2043cd = -(-0.2 + _0x2fb164) * _0x2bcbaa(-0x5a),
            _0xb71db2 = this['rad'] * 0.8;
        _0x1d2dab['rotate'](_0x2bcbaa(-0x2d) + _0x2043cd);
        var _0x1a950d = 0x0,
            _0x20b3f5 = this['rad'],
            _0x367460 = _0xb71db2 * 0x2 * 0.6,
            _0x43b993 = _0xb71db2 * 2.3,
            _0x4e6353 = 0x1,
            _0x35d081 = 1.7;
        _0x1d2dab['drawImage'](_0x5172fb, _0x1a950d + _0x367460 * -_0x4e6353, _0x20b3f5 + _0x43b993 * -_0x35d081, _0x367460, _0x43b993), _0x1d2dab['restore']();
    }
    _0x1d2dab['restore']();
} else {
    if (this['specType'] == 0x1) {
        var _0x54a55a = '';
        _0x54a55a = 'pelican', _0x1d2dab['save']();
        var _0x58821e = (_0x740c5b - this['spawnTime']) / 0x3e8,
            _0x2fb164 = !(_0x31f3fc == 0x2) ? _0x21d673(_0x58821e, 0.9, 0.3, 0x2) : 0x0,
            _0x5172fb = this['getSkinImageObj'](this['getWing']('pelican', 0xb, !![]));
        if (_0x5172fb) {
            _0x1d2dab['save']();
            var _0x2043cd = -(-0.2 + _0x2fb164) * _0x2bcbaa(0x2d),
                _0xb71db2 = this['rad'] * 0.8;
            _0x1d2dab['rotate'](_0x2bcbaa(0x2d) + _0x2043cd);
            var _0x1a950d = 0x0,
                _0x20b3f5 = this['rad'],
                _0x367460 = _0xb71db2 * 0x2 * 0.7,
                _0x43b993 = _0xb71db2 * 2.2,
                _0x4e6353 = 0x0,
                _0x35d081 = 1.7;
            _0x1d2dab['drawImage'](_0x5172fb, _0x1a950d + _0x367460 * -_0x4e6353, _0x20b3f5 + _0x43b993 * -_0x35d081, _0x367460, _0x43b993), _0x1d2dab['restore']();
        }
        var _0x5172fb = this['getSkinImageObj'](this['getWing']('pelican', 0x15, !![]));
        if (_0x5172fb) {
            _0x1d2dab['save']();
            var _0x2043cd = -(-0.2 + _0x2fb164) * _0x2bcbaa(-0x2d),
                _0xb71db2 = this['rad'] * 0.8;
            _0x1d2dab['rotate'](_0x2bcbaa(-0x2d) + _0x2043cd);
            var _0x1a950d = 0x0,
                _0x20b3f5 = this['rad'],
                _0x367460 = _0xb71db2 * 0x2 * 0.7,
                _0x43b993 = _0xb71db2 * 2.2,
                _0x4e6353 = 0x1,
                _0x35d081 = 1.7;
            _0x1d2dab['drawImage'](_0x5172fb, _0x1a950d + _0x367460 * -_0x4e6353, _0x20b3f5 + _0x43b993 * -_0x35d081, _0x367460, _0x43b993), _0x1d2dab['restore']();
        }
        _0x1d2dab['restore']();
    }
}
if (this['specType'] != 0x0 && !this['flag_isGrabbed']) {
    if (this['specType'] == 0x2) {
        var _0x2fb6a5 = _0x3de1dc + '/' + this['getSpeciesPath']('pelican') + '/ability_pelican.png',
            _0x18872d = this['getSkinImageObj'](_0x2fb6a5);
        if (_0x18872d) {
            _0x1d2dab['save'](), _0x1d2dab['rotate'](_0x2bcbaa(0xb4));
            var _0xb71db2 = this['rad'] * 0.3,
                _0x25b5e8 = this['rad'] * 0x1;
            _0x1d2dab['drawImage'](_0x18872d, -_0xb71db2 * _0x14ebf4, -_0xb71db2 - _0x25b5e8 * _0x14ebf4, 0x2 * _0xb71db2 * _0x14ebf4, 0x2 * _0xb71db2 * _0x14ebf4), _0x1d2dab['restore']();
        }
    }
    var _0x57783a = this['getSkinImageObj'](this['getHead']('pelican', !![]));
    if (_0x57783a) {
        _0x1d2dab['save']();
        var _0xb71db2 = this['rad'] * 0x1,
            _0x25b5e8 = -this['rad'] * 0.3;
        _0x1d2dab['drawImage'](_0x57783a, -_0xb71db2 * _0x14ebf4, -_0xb71db2 + _0x25b5e8 * _0x14ebf4, 0x2 * _0xb71db2 * _0x14ebf4, 0x2 * _0xb71db2 * _0x14ebf4), _0x1d2dab['restore']();
    }
}
};

function _0x113a33() {
_0x113a33['superClass']['call'](this, _0x4ad968);
}
window['Pelican'] = _0x113a33, _0x13dc56['setCustomClassForGameObjType'](_0x113a33, _0x4ad968, _0x1b8ac0);
var _0x1e3c43 = _0x3d6c08;
_0x1fc020['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x1fc020['prototype']['constructor'] = _0x1fc020, _0x1fc020['superClass'] = _0x1e3c43, _0x1fc020['prototype']['updateZ'] = function () {
this['z'] = 0x3eb + this['rad'];
}, _0x1fc020['prototype']['getSkinName'] = function () {
var _0x3dfb1a = '';
if (this['flag_usingAbility'] && !this['flag_underWater']) _0x3dfb1a = '2';
return 'frog/frog' + _0x3dfb1a;
}, _0x1fc020['prototype']['drawUnderSkinImg'] = function () {
if (this['flag_usingAbility'] && !this['flag_underWater']) {
    var _0x578ea8 = this['rad'] - this['outlineW'],
        _0x30153c = 0x1f4 / 0x154,
        _0x3b0ac7 = this['getSkinImageObj']('./skins/frog/frogLegs.png');
    if (_0x3b0ac7) _0x1d2dab['drawImage'](_0x3b0ac7, -_0x578ea8 * _0x30153c, (-_0x578ea8 - _0x578ea8) * _0x30153c, 0x2 * _0x578ea8 * _0x30153c, 0x2 * _0x578ea8 * _0x30153c);
}
}, _0x1fc020['prototype']['canDrawAnimalSkin'] = function () {
return !this['flag_underWater'];
}, _0x1fc020['prototype']['drawUnderWater'] = function () {
this['flag_underWater'] && (_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.2, _0x1d2dab['scale'](0x1, 1.5), _0x444e67(0x0, 0x0, this['rad'] * 0.5, '#598b30'), _0x444e67(0x0, this['rad'] * -0.6, this['rad'] * 0.3, '#64a034'), _0x1d2dab['restore']());
};

function _0x1fc020() {
_0x1fc020['superClass']['call'](this, _0x4ad968);
}
window['Frog'] = _0x1fc020, _0x13dc56['setCustomClassForGameObjType'](_0x1fc020, _0x4ad968, _0x86f82a);
var _0x570743 = _0x31775d,
_0x1e3c43 = _0x3d6c08;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43, _0x31775d['prototype']['isAttacking'] = ![], _0x31775d['prototype']['objSkinPath'] = {}, _0x31775d['prototype']['getSkinName'] = function () {
return this['objSkinPath'][this['getSkinIndex']()]['skin'];
}, _0x31775d['prototype']['getSkinIndex'] = function () {
if (this['animalSpecies'] == 0x2 && (this['isAttacking'] || this['flag_usingAbility'])) return 0x3;
return this['animalSpecies'];
}, _0x31775d['prototype']['setSkinPath'] = function () {}, _0x31775d['prototype']['onAnimalSpeciesSet'] = function () {
let _0x2de61f = this['animalSpecies'],
    _0x24574e = '',
    {
        skin: _0x33a09a,
        wing1: _0x1cc845,
        wing2: _0x4cd6ff,
        head: _0x1b3916
    } = {
        'skin': 'duck/' + _0x2de61f + '/duck' + _0x24574e,
        'wing1': 'skins/duck/' + _0x2de61f + '/duck_wing1.png',
        'wing2': 'skins/duck/' + _0x2de61f + '/duck_wing2.png',
        'head': 'skins/duck/' + _0x2de61f + '/duck_head.png'
    };
this['objSkinPath'][_0x2de61f] = {
    'skin': _0x33a09a,
    'wing1': _0x1cc845,
    'wing2': _0x4cd6ff,
    'head': _0x1b3916
}, _0x2de61f === 0x2 && (_0x24574e = 0x1, {
    skin: _0x33a09a,
    wing1: _0x1cc845,
    wing2: _0x4cd6ff,
    head: _0x1b3916
} = {
    'skin': 'duck/' + _0x2de61f + '/duck' + _0x24574e,
    'wing1': 'skins/duck/' + _0x2de61f + '/duck_wing1.png',
    'wing2': 'skins/duck/' + _0x2de61f + '/duck_wing2.png',
    'head': 'skins/duck/' + _0x2de61f + '/duck_head.png'
}, this['objSkinPath'][0x3] = {
    'skin': _0x33a09a,
    'wing1': _0x1cc845,
    'wing2': _0x4cd6ff,
    'head': _0x1b3916
});
}, _0x570743['prototype']['drawSkinCustomization'] = function () {
this['isAttacking'] && this['animalSpecies'] == 0x2 && this['angryGooseAnimation'](), this['flag_usingAbility'] && this['animalSpecies'] == 0x2 && this['flyingAnimation']();
}, _0x31775d['prototype']['angryGooseAnimation'] = function () {
var _0x13c354 = this['skinScale'];
_0x1d2dab['save']();
var _0x52ecde = (_0x740c5b - this['spawnTime']) / 0x3e8,
    _0xa9fd22 = !(_0x31f3fc == 0x2 || _0x44408d) ? _0x21d673(_0x52ecde, 0.5, 0.3, 0x2) : this['birdNoAnimationFlyWingAngle'],
    _0x2ec7dc = this['getSkinImageObj'](this['objSkinPath'][this['getSkinIndex']()]['wing1']);
if (_0x2ec7dc) {
    _0x1d2dab['save']();
    var _0x5ca1a1 = -(-0.2 + _0xa9fd22) * _0x2bcbaa(0xf),
        _0x2f9de5 = this['rad'] * 0.8;
    _0x1d2dab['rotate'](_0x2bcbaa(0xf) + _0x5ca1a1);
    var _0x50ca45 = 0x0,
        _0x3e2ff9 = this['rad'],
        _0x27a30d = _0x2f9de5 * 0x2 * 0.7,
        _0x32ec1d = _0x2f9de5 * 2.2,
        _0x1c230d = 0x0,
        _0x239c9f = 1.5;
    _0x1d2dab['drawImage'](_0x2ec7dc, _0x50ca45 + _0x27a30d * -_0x1c230d, _0x3e2ff9 + _0x32ec1d * -_0x239c9f, _0x27a30d, _0x32ec1d), _0x1d2dab['restore']();
}
var _0x2ec7dc = this['getSkinImageObj'](this['objSkinPath'][this['getSkinIndex']()]['wing2']);
if (_0x2ec7dc) {
    _0x1d2dab['save']();
    var _0x5ca1a1 = -(-0.2 + _0xa9fd22) * _0x2bcbaa(-0xf),
        _0x2f9de5 = this['rad'] * 0.8;
    _0x1d2dab['rotate'](_0x2bcbaa(-0xf) + _0x5ca1a1);
    var _0x50ca45 = 0x0,
        _0x3e2ff9 = this['rad'],
        _0x27a30d = _0x2f9de5 * 0x2 * 0.7,
        _0x32ec1d = _0x2f9de5 * 2.2,
        _0x1c230d = 0x1,
        _0x239c9f = 1.5;
    _0x1d2dab['drawImage'](_0x2ec7dc, _0x50ca45 + _0x27a30d * -_0x1c230d, _0x3e2ff9 + _0x32ec1d * -_0x239c9f, _0x27a30d, _0x32ec1d), _0x1d2dab['restore']();
}
var _0xa6aa1 = this['getSkinImageObj'](this['objSkinPath'][this['getSkinIndex']()]['head']);
if (_0xa6aa1) {
    _0x1d2dab['save']();
    var _0x2f9de5 = this['rad'] * 0x1,
        _0x349416 = -this['rad'] * 0.1;
    _0x1d2dab['drawImage'](_0xa6aa1, -_0x2f9de5 * _0x13c354, -_0x2f9de5 + _0x349416 * _0x13c354, 0x2 * _0x2f9de5 * _0x13c354, 0x2 * _0x2f9de5 * _0x13c354), _0x1d2dab['restore']();
}
_0x1d2dab['restore']();
}, _0x31775d['prototype']['skinScale'] = 0x1f4 / 0x154, _0x31775d['prototype']['flyingAnimation'] = function () {
var _0x4e5759 = this['skinScale'];
if (this['flag_flying'] && !this['flag_isGrabbed']) {
    _0x1d2dab['save']();
    var _0x4669bb = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x1b2985 = !(_0x31f3fc == 0x2 || _0x44408d) ? _0x21d673(_0x4669bb, 0.5, 0.3, 0x2) : this['birdNoAnimationFlyWingAngle'],
        _0x16ea11 = this['getSkinImageObj'](this['objSkinPath'][this['getSkinIndex']()]['wing1']);
    if (_0x16ea11) {
        _0x1d2dab['save']();
        var _0x16eab5 = -(-0.2 + _0x1b2985) * _0xa0b20a,
            _0x5254ef = this['rad'] * 0.8;
        _0x1d2dab['rotate'](_0x2bcbaa(0x2d) + _0x16eab5);
        var _0x436b68 = 0x0,
            _0x37d994 = this['rad'],
            _0x217f0e = _0x5254ef * 0x2 * 0.62,
            _0xa26b1b = _0x5254ef * 2.5,
            _0x213e36 = 0.2,
            _0x13eff2 = 1.7;
        _0x1d2dab['drawImage'](_0x16ea11, _0x436b68 + _0x217f0e * -_0x213e36, _0x37d994 + _0xa26b1b * -_0x13eff2, _0x217f0e, _0xa26b1b), _0x1d2dab['restore']();
    }
    var _0x16ea11 = this['getSkinImageObj'](this['objSkinPath'][this['getSkinIndex']()]['wing2']);
    if (_0x16ea11) {
        _0x1d2dab['save']();
        var _0x16eab5 = -(-0.2 + _0x1b2985) * _0x2bcbaa(-0x5a),
            _0x5254ef = this['rad'] * 0.8;
        _0x1d2dab['rotate'](_0x2bcbaa(-0x2d) + _0x16eab5);
        var _0x436b68 = 0x0,
            _0x37d994 = this['rad'],
            _0x217f0e = _0x5254ef * 0x2 * 0.62,
            _0xa26b1b = _0x5254ef * 2.5,
            _0x213e36 = 0.8,
            _0x13eff2 = 1.7;
        _0x1d2dab['drawImage'](_0x16ea11, _0x436b68 + _0x217f0e * -_0x213e36, _0x37d994 + _0xa26b1b * -_0x13eff2, _0x217f0e, _0xa26b1b), _0x1d2dab['restore']();
    }
    _0x1d2dab['restore']();
}
if (this['specType'] != 0x0 && this['specType'] != undefined) {
    var _0x5e9e37 = this['getSkinImageObj'](this['objSkinPath'][this['getSkinIndex']()]['head']);
    if (_0x5e9e37) {
        _0x1d2dab['save']();
        var _0x5254ef = this['rad'];
        _0x1d2dab['drawImage'](_0x5e9e37, -_0x5254ef * _0x4e5759, (-_0x5254ef + _0x5254ef * 0.1) * _0x4e5759, 0x2 * _0x5254ef * _0x4e5759, 0x2 * _0x5254ef * _0x4e5759), _0x1d2dab['restore']();
    }
}
}, _0x31775d['prototype']['readCustomData_onNewlyVisible'] = function (_0x41df5b) {
_0x31775d['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x41df5b), this['isAttacking'] = _0x41df5b['readUInt8']();
}, _0x31775d['prototype']['readCustomData_onUpdate'] = function (_0x572bf1) {
_0x31775d['superClass']['prototype']['readCustomData_onUpdate']['call'](this, _0x572bf1), this['isAttacking'] = _0x572bf1['readUInt8']();
};

function _0x31775d() {
_0x1e3c43['call'](this, _0x4ad968);
}
window['Duck'] = _0x31775d, _0x13dc56['setCustomClassForGameObjType'](_0x31775d, _0x4ad968, _0x17f2ab);
var _0x1e3c43 = _0x3d6c08;
_0x422ff9['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x422ff9['prototype']['constructor'] = _0x422ff9, _0x422ff9['superClass'] = _0x1e3c43, _0x422ff9['prototype']['setSkinPath'] = function () {
this['objSkinPath'] = 'duck/duckling';
}, _0x422ff9['prototype']['getSkinName'] = function () {
return this['objSkinPath'];
};

function _0x422ff9() {
_0x422ff9['superClass']['call'](this, _0x4ad968);
}
window['Duckling'] = _0x422ff9, _0x13dc56['setCustomClassForGameObjType'](_0x422ff9, _0x4ad968, _0x59ed2f);
var _0x1e3c43 = _0x3d6c08;
_0x19b7f9['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x19b7f9['prototype']['constructor'] = _0x19b7f9, _0x19b7f9['superClass'] = _0x1e3c43, _0x19b7f9['prototype']['updateZ'] = function () {
this['z'] = 0x2710 + this['rad'];
}, _0x19b7f9['prototype']['canUseTailslap'] = ![], _0x19b7f9['prototype']['tailState'] = 0x0, _0x19b7f9['prototype']['getSkinName'] = function () {
return 'volcano/blackdragon/' + this['animalSpecies'] + '/blackdragon';
}, _0x19b7f9['prototype']['leftWingAnim'] = null, _0x19b7f9['prototype']['drawSkinCustomization'] = function () {
if (this['flag_underWater']) return;
var _0x71c783 = 0x1f4 / 0x154,
    _0x41c46d = this['lava'],
    _0xfaa88f = 0x32;
if (_0x41c46d < _0xfaa88f) {
    var _0x447576 = _0x41c46d / _0xfaa88f,
        _0xf5dc4f = this['getSkinImageObj']('skins/volcano/blackdragon/' + this['animalSpecies'] + '/wings.png');
    if (_0xf5dc4f) {
        _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1 - _0x447576;
        var _0x3c6c05 = this['rad'] - this['outlineW'];
        _0x1d2dab['drawImage'](_0xf5dc4f, -_0x3c6c05 * _0x71c783, -_0x3c6c05 * _0x71c783, 0x2 * _0x3c6c05 * _0x71c783, 0x2 * _0x3c6c05 * _0x71c783), _0x1d2dab['restore']();
    }
}
}, _0x19b7f9['prototype']['animalInfo'] = function () {
var _0xd6f5dc = {};
switch (this['animalSpecies']) {
case 0x0:
    _0xd6f5dc['aniName'] = 'Black Dragon';
    break;
case 0x1:
    _0xd6f5dc['aniName'] = 'Golden Black Dragon';
    break;
case 0x2:
    _0xd6f5dc['aniName'] = 'Azure Bringer';
    break;
case 0xcc:
    _0xd6f5dc['aniName'] = 'Violet Dusk Black Dragon';
    break;
default:
    break;
}
return _0xd6f5dc['aniCol'] = '#FF9000', _0xd6f5dc['skinName'] = this['getSkinName'](), _0xd6f5dc['upgradeText'] = 'UPGRADED to ' + _0xd6f5dc['aniName'], _0xd6f5dc['upgradeText'] += '!\x0a Black dragons drink lava instead of water! Black dragons only heal on healing stones/lava!', _0xd6f5dc['aniCol'] = 'black', _0xd6f5dc;
}, _0x19b7f9['prototype']['getAbilityInfo'] = function (_0x19929e) {
var _0x4c531f = {};
_0x4c531f['abilName'] = 'Multi Fireballs';
var _0xefa4ad = 0x0;
switch (this['animalSpecies']) {
case 0x0:
    _0xefa4ad = 0x1;
    break;
case 0x1:
    _0xefa4ad = 0x2;
    break;
case 0x2:
    _0xefa4ad = 0x7;
    break;
}
return _0x4c531f['speciesType'] = _0xefa4ad, _0x4c531f['abilImg'] = 'abilities/Fireball.svg', _0x4c531f['skinThemeID'] = this['skinThemeID'], _0x4c531f['mopeSeasonID'] = this['mopeSeasonID'], _0x4c531f;
};

function _0x19b7f9() {
this['lava'] = 0x64, _0x19b7f9['superClass']['call'](this, _0x4ad968);
}
window['BlackDragon'] = _0x19b7f9, _0x13dc56['setCustomClassForGameObjType'](_0x19b7f9, _0x4ad968, _0x5b6f26);
var _0x326c5b = _0x326c5b,
_0x1e3c43 = _0x3d6c08;
_0x326c5b['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x326c5b['prototype']['constructor'] = _0x326c5b, _0x326c5b['superClass'] = _0x1e3c43, _0x326c5b['prototype']['getSkinName'] = function () {
return '/honeybee/0/' + this['animalSubSpecies'] + '/honeybee' + (this['specType'] == 0x0 || this['specType'] == undefined ? '' : this['specType']);
}, _0x326c5b['prototype']['drawSkinCustomization'] = function () {
_0x1d2dab['save']();
var _0x3daf77 = (_0x740c5b - this['spawnTime']) / 0x3e8,
    _0x2da9bb = !(_0x31f3fc == 0x2 || _0x44408d || _0x47849) ? _0x21d673(_0x3daf77, 0.2, 0.3, 0x2) : 0x0,
    _0xb40cad = !(_0x31f3fc == 0x2 || _0x44408d || _0x47849) ? _0x21d673(_0x3daf77, 0.2, 0.3, 0x2) : 0x0,
    _0x95d1e1 = this['rad'] * 0.6,
    _0x1515ca = 0x1e,
    _0x25588b = 0x2,
    _0x598df9 = 0x14,
    _0x4b0faf = this['getSkinImageObj']('skins/honeybee/0/' + this['animalSubSpecies'] + '/honeybee_wing2.png');
if (_0x4b0faf) {
    _0x1d2dab['save']();
    var _0x50fbb9 = -(-_0x25588b + _0xb40cad) * _0x2bcbaa(-(_0x1515ca - 0x5));
    _0x1d2dab['globalAlpha'] = 0.6, _0x1d2dab['rotate'](_0x2bcbaa(-_0x598df9 + 0xa) + _0x50fbb9);
    var _0x517329 = 0x0,
        _0x106d43 = this['rad'],
        _0x4c2f3c = _0x95d1e1 * 0x2 * 0.7,
        _0x16f4a0 = _0x95d1e1 * 2.3,
        _0x327e9b = 0.5,
        _0x34f392 = 1.6;
    _0x1d2dab['drawImage'](_0x4b0faf, _0x517329 + _0x4c2f3c * -_0x327e9b, _0x106d43 + _0x16f4a0 * -_0x34f392, _0x4c2f3c, _0x16f4a0), _0x1d2dab['restore']();
}
var _0x4b0faf = this['getSkinImageObj']('skins/honeybee/0/' + this['animalSubSpecies'] + '/honeybee_wing1.png');
if (_0x4b0faf) {
    _0x1d2dab['save']();
    var _0x50fbb9 = -(-_0x25588b + _0xb40cad) * _0x2bcbaa(_0x1515ca - 0x5);
    _0x1d2dab['globalAlpha'] = 0.6, _0x1d2dab['rotate'](_0x2bcbaa(_0x598df9 - 0xa) + _0x50fbb9);
    var _0x517329 = 0x0,
        _0x106d43 = this['rad'],
        _0x4c2f3c = _0x95d1e1 * 2.3 * 0.7,
        _0x16f4a0 = _0x95d1e1 * 2.3,
        _0x327e9b = 0.5,
        _0x34f392 = 1.6;
    _0x1d2dab['drawImage'](_0x4b0faf, _0x517329 + _0x4c2f3c * -_0x327e9b, _0x106d43 + _0x16f4a0 * -_0x34f392, _0x4c2f3c, _0x16f4a0), _0x1d2dab['restore']();
}
var _0x4b0faf = this['getSkinImageObj']('skins/honeybee/0/' + this['animalSubSpecies'] + '/honeybee_wing1.png');
if (_0x4b0faf) {
    _0x1d2dab['save']();
    var _0x50fbb9 = -(-_0x25588b + _0x2da9bb) * _0x2bcbaa(_0x1515ca);
    _0x1d2dab['globalAlpha'] = 0.5, _0x1d2dab['rotate'](_0x2bcbaa(_0x598df9) + _0x50fbb9);
    var _0x517329 = 0x0,
        _0x106d43 = this['rad'],
        _0x4c2f3c = _0x95d1e1 * 0x2 * 0.7,
        _0x16f4a0 = _0x95d1e1 * 2.3,
        _0x327e9b = 0.5,
        _0x34f392 = 1.7;
    _0x1d2dab['drawImage'](_0x4b0faf, _0x517329 + _0x4c2f3c * -_0x327e9b, _0x106d43 + _0x16f4a0 * -_0x34f392, _0x4c2f3c, _0x16f4a0), _0x1d2dab['restore']();
}
var _0x4b0faf = this['getSkinImageObj']('skins/honeybee/0/' + this['animalSubSpecies'] + '/honeybee_wing2.png');
if (_0x4b0faf) {
    _0x1d2dab['save']();
    var _0x50fbb9 = -(-_0x25588b + _0x2da9bb) * _0x2bcbaa(-_0x1515ca);
    _0x1d2dab['globalAlpha'] = 0.5, _0x1d2dab['rotate'](_0x2bcbaa(-_0x598df9) + _0x50fbb9);
    var _0x517329 = 0x0,
        _0x106d43 = this['rad'],
        _0x4c2f3c = _0x95d1e1 * 0x2 * 0.7,
        _0x16f4a0 = _0x95d1e1 * 2.3,
        _0x327e9b = 0.5,
        _0x34f392 = 1.7;
    _0x1d2dab['drawImage'](_0x4b0faf, _0x517329 + _0x4c2f3c * -_0x327e9b, _0x106d43 + _0x16f4a0 * -_0x34f392, _0x4c2f3c, _0x16f4a0), _0x1d2dab['restore']();
}
_0x1d2dab['restore']();
};

function _0x326c5b() {
_0x326c5b['superClass']['call'](this, _0x4ad968);
}
window['Honeybee'] = _0x326c5b, _0x13dc56['setCustomClassForGameObjType'](_0x326c5b, _0x4ad968, _0x43193);
var _0x37d380 = _0x37d380,
_0x1e3c43 = _0x3d6c08;
_0x37d380['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x37d380['prototype']['constructor'] = _0x37d380, _0x37d380['superClass'] = _0x1e3c43, _0x37d380['prototype']['animalInfo'] = function () {
var _0x2737ba = {},
    _0x477126 = this['animalSpecies'];
switch (this['animalSpecies']) {
case 0x0:
    _0x2737ba['aniName'] = 'The Phoenix';
    break;
case 0x1:
    _0x2737ba['aniName'] = 'Golden Phoenix';
    break;
case 0x2:
    _0x2737ba['aniName'] = 'Alpha Phoenix';
    break;
case 0xc8:
    _0x477126 = '/' + this['animalSubSpecies'];
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x2737ba['aniName'] = 'Aqua Phoenix';
        break;
    case 0x1:
        _0x2737ba['aniName'] = 'Ice Phoenix';
        break;
    case 0x2:
        _0x2737ba['aniName'] = 'Ash Phoenix';
        break;
    case 0x3:
        _0x2737ba['aniName'] = 'Red Giant Phoenix';
        break;
    }
    break;
}
return _0x2737ba['aniCol'] = '#FF9000', _0x2737ba['skinName'] = '/volcano/phoenix/' + _0x477126 + '/phoenix', _0x2737ba['upgradeText'] = 'UPGRADED to ' + _0x2737ba['aniName'] + '!\x0aPhoenix shoot Firetornados to burn their prey alive!', _0x2737ba;
}, _0x37d380['prototype']['getSkinImageObj'] = function (_0x55717f) {
var _0x293e90 = this['animalSpecies'] === 0x1 || this['animalSpecies'] === 0x2 || this['animalSpecies'] === 0xc8 ? 0x1 : this['mopeSeasonID'];
return this['getSkinImageObjForSeason'](_0x55717f, _0x293e90);
}, _0x37d380['prototype']['getAbilityInfo'] = function (_0x9be4ef) {
var _0x5f4dec = {},
    _0x1aa791 = this['animalSpecies'];
return this['animalSpecies'] == 0xc8 && (_0x1aa791 += '/' + this['animalSubSpecies']), _0x5f4dec['abilName'] = 'Fire Tornado!', _0x5f4dec['abilImg'] = 'abilities/Firestorm.svg', _0x5f4dec['skinThemeID'] = this['skinThemeID'], _0x5f4dec['mopeSeasonID'] = this['mopeSeasonID'], _0x5f4dec;
}, _0x37d380['prototype']['getSkinName'] = function () {
var _0x22b6cd = this['animalSpecies'];
return this['animalSpecies'] == 0xc8 && (_0x22b6cd += '/' + this['animalSubSpecies']), '/volcano/phoenix/' + _0x22b6cd + '/phoenix' + (this['specType'] == 0x0 || this['specType'] == undefined ? '' : this['specType']);
}, _0x37d380['prototype']['getSkinPart'] = function (_0xae3c83) {
var _0x21cade = this['animalSpecies'];
return this['animalSpecies'] == 0xc8 && (_0x21cade += '/' + this['animalSubSpecies']), this['getSkinImageObj']('skins/volcano/phoenix/' + _0x21cade + '/' + _0xae3c83 + '.png');
}, _0x37d380['prototype']['drawSkinImg'] = function () {
if (!(_0x31f3fc == 0x2 || _0x44408d || _0x59c105)) {
    var _0x4fc95a = 0x1f4 / 0x154,
        _0x1ed5a0 = this['rad'] - this['outlineW'],
        _0x219ba8 = this['getSkinPart']('phoenix_body'),
        _0x142853 = this['getSkinPart']('phoenix_head'),
        _0x446e5e = Math['trunc'](_0x740c5b / 0xa6) % 0x6,
        _0x279feb = this['getSkinPart']('/tail_mid/tail_mid_' + _0x446e5e);
    if (_0x279feb) _0x1d2dab['drawImage'](_0x279feb, -_0x1ed5a0 * _0x4fc95a, -_0x1ed5a0 * _0x4fc95a, 0x2 * _0x1ed5a0 * _0x4fc95a, 0x2 * _0x1ed5a0 * _0x4fc95a);
    var _0x446e5e = Math['trunc'](_0x740c5b / 0xa6) % 0x6,
        _0x46d138 = Math['trunc'](_0x740c5b / 0xfa) % 0x6,
        _0x383d56 = this['getSkinPart']('/tail/tail_' + _0x446e5e),
        _0x1052c2 = this['getSkinPart']('tail_flipped/tail_' + _0x46d138);
    if (_0x383d56) _0x1d2dab['drawImage'](_0x383d56, -_0x1ed5a0 * _0x4fc95a, -_0x1ed5a0 * _0x4fc95a, 0x2 * _0x1ed5a0 * _0x4fc95a, 0x2 * _0x1ed5a0 * _0x4fc95a);
    if (_0x1052c2) _0x1d2dab['drawImage'](_0x1052c2, -_0x1ed5a0 * _0x4fc95a, -_0x1ed5a0 * _0x4fc95a, 0x2 * _0x1ed5a0 * _0x4fc95a, 0x2 * _0x1ed5a0 * _0x4fc95a);
    if (_0x219ba8) _0x1d2dab['drawImage'](_0x219ba8, -_0x1ed5a0 * _0x4fc95a, -_0x1ed5a0 * _0x4fc95a, 0x2 * _0x1ed5a0 * _0x4fc95a, 0x2 * _0x1ed5a0 * _0x4fc95a);
    var _0x4d2aef = Math['trunc'](_0x740c5b / 0x7d) % 0x8,
        _0x2ee93e = Math['trunc'](_0x740c5b / 0x96) % 0x8,
        _0x153435 = this['getSkinPart']('wing_flame_orange/wing_flame_orange_' + _0x4d2aef),
        _0x7b2341 = this['getSkinPart']('wing_flame_yellow/wing_flame_yellow_' + _0x2ee93e);
    if (_0x153435) _0x1d2dab['drawImage'](_0x153435, -_0x1ed5a0 * _0x4fc95a, -_0x1ed5a0 * _0x4fc95a, 0x2 * _0x1ed5a0 * _0x4fc95a, 0x2 * _0x1ed5a0 * _0x4fc95a);
    if (_0x7b2341) _0x1d2dab['drawImage'](_0x7b2341, -_0x1ed5a0 * _0x4fc95a, -_0x1ed5a0 * _0x4fc95a, 0x2 * _0x1ed5a0 * _0x4fc95a, 0x2 * _0x1ed5a0 * _0x4fc95a);
    var _0x340535 = this['getSkinPart']('wing_flame_orange_flipped/wing_flame_orange_' + _0x4d2aef),
        _0x5d877a = this['getSkinPart']('wing_flame_yellow_flipped/wing_flame_yellow_' + _0x2ee93e);
    if (_0x340535) _0x1d2dab['drawImage'](_0x340535, -_0x1ed5a0 * _0x4fc95a, -_0x1ed5a0 * _0x4fc95a, 0x2 * _0x1ed5a0 * _0x4fc95a, 0x2 * _0x1ed5a0 * _0x4fc95a);
    if (_0x5d877a) _0x1d2dab['drawImage'](_0x5d877a, -_0x1ed5a0 * _0x4fc95a, -_0x1ed5a0 * _0x4fc95a, 0x2 * _0x1ed5a0 * _0x4fc95a, 0x2 * _0x1ed5a0 * _0x4fc95a);
    if (_0x142853) _0x1d2dab['drawImage'](_0x142853, -_0x1ed5a0 * _0x4fc95a, -_0x1ed5a0 * _0x4fc95a, 0x2 * _0x1ed5a0 * _0x4fc95a, 0x2 * _0x1ed5a0 * _0x4fc95a);
} else _0x37d380['superClass']['prototype']['drawSkinImg']['call'](this);
};

function _0x37d380() {
_0x37d380['superClass']['call'](this, _0x4ad968);
}
window['Phoenix'] = _0x37d380, _0x13dc56['setCustomClassForGameObjType'](_0x37d380, _0x4ad968, _0x19e418);
var _0x8d6bda = _0x8d6bda,
_0x1e3c43 = _0x3d6c08;
_0x8d6bda['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x8d6bda['prototype']['constructor'] = _0x8d6bda, _0x8d6bda['superClass'] = _0x1e3c43, _0x8d6bda['prototype']['animalInfo'] = function () {
var _0x2baf90 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x2baf90['aniName'] = 'Pigeon';
    break;
case 0x1:
    _0x2baf90['aniName'] = 'Rare White Dove', _0x2baf90['upgradeText'] += '\x0a(Doves fly faster!)';
    break;
case 0xca:
    _0x2baf90['aniName'] = 'Thug Pigeon';
    break;
}
return _0x2baf90['aniCol'] = '#FF9000', _0x2baf90['skinName'] = this['getSkinName'](), _0x2baf90['upgradeText'] = 'UPGRADED to ' + _0x2baf90['aniName'] + '!\x0aHold W to fly around. ', _0x2baf90;
}, _0x8d6bda['prototype']['getSkinName'] = function () {
let _0xb2f6b6 = this['getSpeciesPath']() + '/pigeon';
return _0xb2f6b6 += this['specType'] == 0x0 ? '' : this['specType'], _0xb2f6b6;
}, _0x8d6bda['prototype']['getSpeciesPath'] = function () {
return 'land/pigeon/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x8d6bda['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x8d6bda['prototype']['getWing'] = function (_0x4a1e40) {
var _0x3c0778 = 'skins/' + this['getSpeciesPath']();
return _0x3c0778 += '/pigeon_wing' + _0x4a1e40 + '.png', _0x3c0778;
}, _0x8d6bda['prototype']['getHead'] = function () {
var _0x152844 = 'skins/' + this['getSpeciesPath']();
return _0x152844 += '/pigeon_head.png', _0x152844;
}, _0x8d6bda['prototype']['theFrame'] = 0x0, _0x8d6bda['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) return;
var _0x59f3b9 = 'skins'; {
    var _0x5c0b86 = 0x1f4 / 0x154;
    if (this['flag_flying'] && !this['flag_isGrabbed']) {
        _0x1d2dab['save']();
        var _0x5de234 = _0x1170c4('bird', this['spawnTime']);
        _0x5de234 !== undefined && _0x5de234 != null && (this['theFrame'] = _0x5de234);
        var _0x116036 = !(_0x31f3fc == 0x2 || _0x44408d) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'],
            _0x19dea4 = this['getSkinImageObj'](this['getWing'](0x1));
        if (_0x19dea4) {
            _0x1d2dab['save']();
            var _0x5877d8 = -(-0.2 + _0x116036) * _0xa0b20a,
                _0x5ea18f = this['rad'] * 0.8;
            _0x1d2dab['rotate'](_0x42e6da + _0x5877d8);
            var _0x781d51 = 0x0,
                _0x2a19a2 = this['rad'],
                _0x3c3bdd = _0x5ea18f * 0x2 * 0.62,
                _0x322421 = _0x5ea18f * 2.5,
                _0x1e752a = 0.2,
                _0x377c61 = 1.7;
            _0x1d2dab['drawImage'](_0x19dea4, _0x781d51 + _0x3c3bdd * -_0x1e752a, _0x2a19a2 + _0x322421 * -_0x377c61, _0x3c3bdd, _0x322421), _0x1d2dab['restore']();
        }
        var _0x19dea4 = this['getSkinImageObj'](this['getWing'](0x2));
        if (_0x19dea4) {
            _0x1d2dab['save']();
            var _0x5877d8 = -(-0.2 + _0x116036) * _0x2bcbaa(-0x5a),
                _0x5ea18f = this['rad'] * 0.8;
            _0x1d2dab['rotate'](_0x2bcbaa(-0x2d) + _0x5877d8);
            var _0x781d51 = 0x0,
                _0x2a19a2 = this['rad'],
                _0x3c3bdd = _0x5ea18f * 0x2 * 0.62,
                _0x322421 = _0x5ea18f * 2.5,
                _0x1e752a = 0.8,
                _0x377c61 = 1.7;
            _0x1d2dab['drawImage'](_0x19dea4, _0x781d51 + _0x3c3bdd * -_0x1e752a, _0x2a19a2 + _0x322421 * -_0x377c61, _0x3c3bdd, _0x322421), _0x1d2dab['restore']();
        }
        _0x1d2dab['restore']();
    }
    if (this['specType'] != 0x0 && this['specType'] != undefined) {
        var _0x2a0d7e = this['getSkinImageObj'](this['getHead']());
        if (_0x2a0d7e) {
            _0x1d2dab['save']();
            var _0x5ea18f = this['rad'];
            _0x1d2dab['drawImage'](_0x2a0d7e, -_0x5ea18f * _0x5c0b86, (-_0x5ea18f + _0x5ea18f * 0.1) * _0x5c0b86, 0x2 * _0x5ea18f * _0x5c0b86, 0x2 * _0x5ea18f * _0x5c0b86), _0x1d2dab['restore']();
        }
    }
}
};

function _0x8d6bda() {
_0x8d6bda['superClass']['call'](this, _0x4ad968);
}
window['Pigeon'] = _0x8d6bda, _0x13dc56['setCustomClassForGameObjType'](_0x8d6bda, _0x4ad968, _0x3182a5);
var _0x25359a = _0x25359a,
_0x1e3c43 = _0x3d6c08;
_0x25359a['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x25359a['prototype']['constructor'] = _0x25359a, _0x25359a['superClass'] = _0x1e3c43, _0x25359a['prototype']['getSpeciesPath'] = function (_0x3cadd6) {
var _0x206a84 = '/land/' + _0x3cadd6 + '/' + this['animalSpecies'] + (this['animalSpecies'] == 0x4 ? '/' + this['animalSubSpecies'] : '');
return _0x206a84;
}, _0x25359a['prototype']['getWing'] = function (_0x5ddb53, _0x54c4f5, _0x4e13b3) {
var _0x5b9eea = 'skins/';
switch (this['animalSpecies']) {
case 0x5:
case 0x6:
case 0xc8:
case 0xdc:
    _0x5b9eea += this['getSpeciesPath'](_0x5ddb53);
    break;
default:
    _0x5b9eea += 'land/' + _0x5ddb53;
}
switch (_0x54c4f5) {
case 0x1:
    _0x5b9eea += '/' + _0x5ddb53 + '_wing1.png';
    break;
case 0x2:
    _0x5b9eea += '/' + _0x5ddb53 + '_wing2.png';
    break;
}
return _0x5b9eea;
}, _0x25359a['prototype']['animalInfo'] = function () {
var _0x25e0ef = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x25e0ef['aniName'] = 'Toco Toucan';
    break;
case 0x1:
    _0x25e0ef['aniName'] = 'Choco Toucan';
    break;
case 0x2:
    _0x25e0ef['aniName'] = 'Keel-Billed Toucan';
    break;
case 0x3:
    _0x25e0ef['aniName'] = 'Fiery Toucan';
    break;
case 0x4:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x25e0ef['aniName'] = 'Lava Toucan';
        break;
    case 0x1:
        _0x25e0ef['aniName'] = 'Ice Toucan';
        break;
    case 0x2:
        _0x25e0ef['aniName'] = 'Aqua Toucan';
        break;
    }
    break;
case 0x5:
    _0x25e0ef['aniName'] = 'Pakistan Toucan';
    break;
case 0x6:
    _0x25e0ef['aniName'] = 'Prisma Toucan';
    break;
case 0x64:
    _0x25e0ef['aniName'] = 'The Dapper';
    break;
case 0xc8:
    _0x25e0ef['aniName'] = 'Ice Toucan';
    break;
case 0xca:
    _0x25e0ef['aniName'] = 'Corpse Flower Toucan';
    break;
case 0xdc:
    _0x25e0ef['aniName'] = 'Molten Toucan';
    break;
}
return _0x25e0ef['upgradeText'] = 'UPGRADED to ' + _0x25e0ef['aniName'] + '!\x0aHold right click (or W) to fly!\x0a(HINT: Start flying from a fruit tree or bush to throw fruit upon landing!)', _0x25e0ef['aniCol'] = '#FF9000', _0x25e0ef['skinName'] = this['getSpeciesPath']('toucan') + '/toucan', _0x25e0ef;
}, _0x25359a['prototype']['getSkinName'] = function () {
var _0x8743f2 = this['getSpeciesPath']('toucan') + '/toucan' + (this['specType'] == 0x0 ? '' : this['specType']);
return _0x8743f2;
}, _0x25359a['prototype']['drawSkinCustomization'] = function () {
var _0x292319 = 0x1f4 / 0x154;
if (!this['flag_usingAbility']) {
    this['drawBeak']();
    return;
} {
    if (this['flag_flying'] && !this['flag_isGrabbed']) {
        _0x1d2dab['save']();
        var _0x4689b4 = _0x1170c4('bird', this['spawnTime']);
        _0x4689b4 !== undefined && _0x4689b4 != null && (this['theFrame'] = _0x4689b4);
        var _0x36e19f = !(_0x31f3fc == 0x2 || _0x44408d) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'],
            _0x11f055 = this['getSkinImageObj'](this['getWing']('toucan', 0x1, !![]));
        if (_0x11f055) {
            _0x1d2dab['save']();
            var _0x355834 = -(-0.2 + _0x36e19f) * _0xa0b20a,
                _0x5881ce = this['rad'] * 0.8;
            _0x1d2dab['rotate'](_0x2bcbaa(0x2d) + _0x355834);
            var _0x3249ef = 0x0,
                _0x99791e = this['rad'],
                _0x54bff8 = _0x5881ce * 0x2 * 0.62,
                _0x19a31b = _0x5881ce * 2.5,
                _0x3aa35e = 0.2,
                _0x414809 = 1.7;
            _0x1d2dab['drawImage'](_0x11f055, _0x3249ef + _0x54bff8 * -_0x3aa35e, _0x99791e + _0x19a31b * -_0x414809, _0x54bff8, _0x19a31b), _0x1d2dab['restore']();
        }
        var _0x11f055 = this['getSkinImageObj'](this['getWing']('toucan', 0x2, !![]));
        if (_0x11f055) {
            _0x1d2dab['save']();
            var _0x355834 = -(-0.2 + _0x36e19f) * _0x2bcbaa(-0x5a),
                _0x5881ce = this['rad'] * 0.8;
            _0x1d2dab['rotate'](_0x2bcbaa(-0x2d) + _0x355834);
            var _0x3249ef = 0x0,
                _0x99791e = this['rad'],
                _0x54bff8 = _0x5881ce * 0x2 * 0.62,
                _0x19a31b = _0x5881ce * 2.5,
                _0x3aa35e = 0.8,
                _0x414809 = 1.7;
            _0x1d2dab['drawImage'](_0x11f055, _0x3249ef + _0x54bff8 * -_0x3aa35e, _0x99791e + _0x19a31b * -_0x414809, _0x54bff8, _0x19a31b), _0x1d2dab['restore']();
        }
        _0x1d2dab['restore']();
    }
    if (this['specType'] != 0x0 && this['specType'] != undefined) {
        var _0x4b0e6b = this['getSkinImageObj'](this['getHead']('toucan', !![]));
        if (_0x4b0e6b) {
            _0x1d2dab['save']();
            var _0x5881ce = this['rad'];
            _0x1d2dab['drawImage'](_0x4b0e6b, -_0x5881ce * _0x292319, (-_0x5881ce + _0x5881ce * 0.1) * _0x292319, 0x2 * _0x5881ce * _0x292319, 0x2 * _0x5881ce * _0x292319), _0x1d2dab['restore']();
        }
        this['drawBeak']();
    }
}
}, _0x25359a['prototype']['drawBeak'] = function () {
var _0x327461 = 0x1f4 / 0x154,
    _0x2ef518 = this['flag_flying'] && !this['flag_isGrabbed'] ? 0.25 : 0.1,
    _0x4577b5 = 'skins/' + this['getSpeciesPath']('toucan') + '/toucan_beak.png',
    _0x322e3c = this['getSkinImageObj'](_0x4577b5);
if (_0x322e3c) {
    _0x1d2dab['save']();
    var _0x580911 = this['rad'];
    _0x1d2dab['drawImage'](_0x322e3c, -_0x580911 * _0x327461, (-_0x580911 + _0x580911 * _0x2ef518) * _0x327461, 0x2 * _0x580911 * _0x327461, 0x2 * _0x580911 * _0x327461), _0x1d2dab['restore']();
}
};

function _0x25359a() {
_0x25359a['superClass']['call'](this, _0x4ad968), this['doesDrawEffectScale'] = ![];
}
window['Toucan'] = _0x25359a, _0x13dc56['setCustomClassForGameObjType'](_0x25359a, _0x4ad968, _0x3e06be);
var _0x99cbb1 = _0x99cbb1,
_0x1e3c43 = _0x3d6c08;
_0x99cbb1['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x99cbb1['prototype']['constructor'] = _0x99cbb1, _0x99cbb1['superClass'] = _0x1e3c43, _0x99cbb1['prototype']['animalInfo'] = function () {
var _0x3b3cc3 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x3b3cc3['aniName'] = 'Tiger';
    break;
case 0x1:
    _0x3b3cc3['aniName'] = 'rare White Tiger';
    break;
case 0xcc:
    _0x3b3cc3['aniName'] = 'Chimera Tiger';
    break;
}
return _0x3b3cc3['aniDesc'] = '', _0x3b3cc3['upgradeText'] = 'UPGRADED to ' + _0x3b3cc3['aniName'] + '!\x0a Tigers can launch an ambush attack (HOLD W to grow a bush)!', _0x3b3cc3['aniCol'] = '#FF9000', _0x3b3cc3['skinName'] = this['getSkinName'](), _0x3b3cc3;
}, _0x99cbb1['prototype']['getSkinName'] = function () {
let _0x515a08 = this['getSpeciesPath']() + '/tiger';
return _0x515a08 += this['specType'] == 0x0 ? '' : this['specType'], _0x515a08;
}, _0x99cbb1['prototype']['getSpeciesPath'] = function () {
return 'land/tiger/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x99cbb1['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x99cbb1['prototype']['getSkinImageObj'] = function (_0x147734) {
var _0x106aa6 = this['animalSpecies'] === 0xcc ? 0x1 : this['mopeSeasonID'];
return this['getSkinImageObjForSeason'](_0x147734, _0x106aa6);
};

function _0x99cbb1() {
_0x99cbb1['superClass']['call'](this, _0x4ad968);
}
window['Tiger'] = _0x99cbb1, _0x13dc56['setCustomClassForGameObjType'](_0x99cbb1, _0x4ad968, _0x43c01e);
var _0x1e3c43 = _0x3d6c08;
_0x1adb98['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x1adb98['prototype']['constructor'] = _0x1adb98, _0x1adb98['superClass'] = _0x1e3c43, _0x1adb98['prototype']['animalInfo'] = function () {
var _0xd91717 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0xd91717['aniName'] = 'Cobra';
    break;
case 0x64:
    _0xd91717['aniName'] = 'Wyrmous';
    break;
case 0xc8:
    _0xd91717['aniName'] = 'Celestial Cobra';
    break;
}
return _0xd91717['skinName'] = this['getSkinName'](), _0xd91717['aniDesc'] = '', _0xd91717['upgradeText'] = 'UPGRADED to ' + _0xd91717['aniName'] + '!\x0a Hold W to Spit venom, and poison animals with your bite!', _0xd91717['aniCol'] = 'black', _0xd91717;
}, _0x1adb98['prototype']['getAbilityInfo'] = function (_0x18573e) {
var _0xadbba2 = {};
return _0xadbba2['abilName'] = 'Venom Spit', _0xadbba2['abilImg'] = 'abilities/Spit.svg', _0xadbba2['skinThemeID'] = this['skinThemeID'], _0xadbba2['mopeSeasonID'] = this['mopeSeasonID'], _0xadbba2;
}, _0x1adb98['prototype']['getSkinName'] = function () {
let _0x30b6ae = this['getSpeciesPath']() + '/cobra';
return _0x30b6ae += this['flag_usingAbility'] ? '2' : '', _0x30b6ae;
}, _0x1adb98['prototype']['getSpeciesPath'] = function () {
return 'land/cobra/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x1adb98['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x1adb98['prototype']['drawUnderSkinImg'] = function () {
if (this['flag_usingAbility']) return;
var _0x5ae592 = this['rad'] - this['outlineW'],
    _0x3b2ac7 = 0x1f4 / 0x154,
    _0x2ee2ff = 'skins/' + this['getSpeciesPath']() + '/tongue.png',
    _0xbac919 = this['getSkinImageObj'](_0x2ee2ff),
    _0x9ce380 = (_0x740c5b - this['spawnTime']) / 0x3e8,
    _0x38c42b = _0x31f3fc == 0x2 ? 0x0 : _0x21d673(_0x9ce380, 0.5, 0x5, 0.5),
    _0x4b3039 = _0x31f3fc == 0x2 ? 0x0 : 0x5;
_0xbac919 && _0x1d2dab['drawImage'](_0xbac919, -_0x5ae592 * _0x3b2ac7, -(_0x5ae592 + _0x4b3039 + _0x38c42b) * _0x3b2ac7, 0x2 * _0x5ae592 * _0x3b2ac7, 0x2 * _0x5ae592 * _0x3b2ac7);
};

function _0x1adb98() {
_0x1adb98['superClass']['call'](this, _0x4ad968);
}
window['Cobra'] = _0x1adb98, _0x13dc56['setCustomClassForGameObjType'](_0x1adb98, _0x4ad968, _0x14a18f);
var _0xd3f11a = _0xd3f11a,
_0x1e3c43 = _0x131218;
_0xd3f11a['prototype'] = Object['create'](_0x1e3c43['prototype']), _0xd3f11a['prototype']['constructor'] = _0xd3f11a, _0xd3f11a['superClass'] = _0x1e3c43, _0xd3f11a['prototype']['skinPath'] = {}, _0xd3f11a['prototype']['updateZ'] = function () {
this['z'] = 0x3ed;
}, _0xd3f11a['prototype']['customDraw'] = function (_0x3aff78) {
if (!(_0x31f3fc == 0x2) && !_0x44408d) {
    var _0x546630 = Math['trunc'](_0x740c5b / 0x78) % 0x5,
        _0x2b9761 = this['getSkinImageObj'](this['skinPath'][_0x546630]);
    if (_0x2b9761) {
        var _0x411e8f = 0x0,
            _0x143200 = this['rad'] * 0.4,
            _0x2c34bb = this['rad'] * 0x2 * (0x2 + 0x2) / 0x3,
            _0x4128c0 = this['rad'] * 0x2,
            _0x255db8 = 0.5,
            _0x414735 = 0.95;
        _0x1d2dab['save'](), _0x1d2dab['rotate'](_0x2bcbaa(0x0)), _0x1d2dab['drawImage'](_0x2b9761, _0x411e8f + _0x2c34bb * -_0x255db8, _0x143200 + _0x4128c0 * -_0x414735, _0x2c34bb, _0x4128c0), _0x1d2dab['restore']();
    }
} else {
    var _0x2b9761 = this['getSkinImageObj'](this['skinPath'][0x0]);
    if (_0x2b9761) {
        var _0x411e8f = 0x0,
            _0x143200 = this['rad'] * 0.4,
            _0x2c34bb = this['rad'] * 0x2 * (0x2 + 0x2) / 0x3,
            _0x4128c0 = this['rad'] * 0x2,
            _0x255db8 = 0.5,
            _0x414735 = 0.95;
        _0x1d2dab['save'](), _0x1d2dab['rotate'](_0x2bcbaa(0x0)), _0x1d2dab['drawImage'](_0x2b9761, _0x411e8f + _0x2c34bb * -_0x255db8, _0x143200 + _0x4128c0 * -_0x414735, _0x2c34bb, _0x4128c0), _0x1d2dab['restore']();
    }
}
}, _0xd3f11a['prototype']['readCustomData_onNewlyVisible'] = function (_0x1a8570) {
_0xd3f11a['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x1a8570), this['speciesType'] = _0x1a8570['readUInt16'](), this['speciesSubType'] = _0x1a8570['readUInt16']();
for (var _0x52615a = 0x0; _0x52615a <= 0x5; _0x52615a++) this['skinPath'][_0x52615a] = 'gameobj/' + this['oType'] + '/' + this['speciesType'] + '/' + _0x52615a + '.png';
};

function _0xd3f11a() {
_0xd3f11a['superClass']['call'](this, _0x971df8), this['webTransparency'] = 0x0, this['doesDrawEffectScale'] = !![], this['drawEffectScale_Slow'] = !![];
}
window['Fire'] = _0xd3f11a, _0x13dc56['setCustomClassForGameObjType'](_0xd3f11a, _0x971df8);
var _0x1e3c43 = _0x131218;
_0x249f74['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x249f74['prototype']['constructor'] = _0x249f74, _0x249f74['superClass'] = _0x1e3c43, _0x249f74['prototype']['updateZ'] = function () {
this['z'] = 0x3ed;
}, _0x249f74['prototype']['skinPath'] = {}, _0x249f74['prototype']['ANIMATION_NAME'] = 'fireball', _0x249f74['prototype']['customDraw'] = function (_0x4fa4c9) {
if (!(_0x31f3fc == 0x2) && !_0x44408d) {
    let _0x232459 = _0x1170c4(this['ANIMATION_NAME'], this['spawnTime']);
    if (_0x232459 == null || _0x232459 == NaN) _0x232459 = 0x0;
    var _0x117c99 = Math['trunc'](_0x740c5b / 0x78) % 0x5,
        _0x3deba2 = this['getSkinImageObj'](this['skinPath'][_0x117c99]);
    if (_0x3deba2) {
        var _0x3264fc = 0x0,
            _0x32b451 = this['rad'] * 0.4,
            _0x3f44c9 = this['rad'] * 0x2 * (0x2 + _0x232459 * 0x2) / 0x3,
            _0x4d6530 = this['rad'] * 3.5 * _0x232459,
            _0x4649df = 0.5,
            _0xaaa542 = 0.95;
        _0x1d2dab['save'](); {
            _0x1d2dab['globalAlpha'] *= this['onFireEffA'] * _0x232459, _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x3deba2, _0x3264fc + _0x3f44c9 * -_0x4649df, _0x32b451 + _0x4d6530 * -_0xaaa542, _0x3f44c9, _0x4d6530);
        }
        _0x1d2dab['restore']();
    }
} else {
    var _0x3deba2 = this['getSkinImageObj'](this['skinPath'][0x0]);
    if (_0x3deba2) {
        var _0x3264fc = 0x0,
            _0x32b451 = this['rad'] * 0.4,
            _0x3f44c9 = this['rad'] * 0x2 * (0x2 + 0x2) / 0x3,
            _0x4d6530 = this['rad'] * 3.5,
            _0x4649df = 0.5,
            _0xaaa542 = 0.95;
        _0x1d2dab['save'](); {
            _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x3deba2, _0x3264fc + _0x3f44c9 * -_0x4649df, _0x32b451 + _0x4d6530 * -_0xaaa542, _0x3f44c9, _0x4d6530);
        }
        _0x1d2dab['restore']();
    }
}
}, _0x249f74['prototype']['readCustomData_onNewlyVisible'] = function (_0xb980e5) {
_0x249f74['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0xb980e5), this['speciesType'] = _0xb980e5['readUInt16'](), this['speciesSubType'] = _0xb980e5['readUInt16']();
for (var _0x305e69 = 0x0; _0x305e69 <= 0x5; _0x305e69++) this['skinPath'][_0x305e69] = 'gameobj/' + this['oType'] + '/' + this['speciesType'] + '/' + _0x305e69 + '.png';
};

function _0x249f74() {
_0x249f74['superClass']['call'](this, _0x13c2ff);
}
window['FireBall'] = _0x249f74, _0x13dc56['setCustomClassForGameObjType'](_0x249f74, _0x13c2ff);
var _0x1e3c43 = _0x131218;
_0x5094f7['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x5094f7['prototype']['constructor'] = _0x5094f7, _0x5094f7['superClass'] = _0x1e3c43, _0x5094f7['prototype']['nickName'] = 'mope.io', _0x5094f7['prototype']['fadeAway'] = ![], _0x5094f7['prototype']['webTransparency'] = 0x64, _0x5094f7['prototype']['carcassType'] = 0x0, _0x5094f7['prototype']['updateZ'] = function () {
if (this['flag_flying']) this['z'] = 0x186a0 + this['rad'] / 0xa;
else this['z'] = -0x64;
}, _0x5094f7['prototype']['getNameSize'] = function () {
return 0x6;
}, _0x5094f7['prototype']['setNick'] = function (_0x1f94ca) {
this['nickName'] = _0x1f94ca, null == this['nickTXT'] ? (this['nickTXT'] = new _0x407dea(this['getNameSize'](), '#FFFFFF'), this['nickTXT']['strokeW'] = 1.5, this['nickTXT']['renderScale'] = 0x5, this['nickTXT']['setText'](this['nickName'])) : (this['nickTXT']['setFontSize'](this['getNameSize']()), this['nickTXT']['setText'](this['nickName']));
}, _0x5094f7['prototype']['customDraw'] = function (_0xca40cb) {
_0x1d2dab['save']();
var _0x14f45a = 0.3;
if (this['fadeAway']) {
    var _0x1c71c3 = this['webTransparency'] / 0x64;
    _0x1d2dab['globalAlpha'] = _0x1c71c3, _0x14f45a = Math['min'](_0x14f45a, _0x1c71c3);
} else _0x1d2dab['globalAlpha'] = 0.8;
var _0x4aaa1c = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + this['oType'] + '.png');
if (_0x4aaa1c) {
    var _0x2fb058 = this['rad'];
    _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x4aaa1c, -_0x2fb058, -_0x2fb058, 0x2 * _0x2fb058, 0x2 * _0x2fb058);
}
_0x1d2dab['restore'](), this['drawNickName'](_0x14f45a);
}, _0x5094f7['prototype']['drawNickName'] = function (_0x5104f1) {
if (!this['spawnedFromDeadAni']) return;
this['nickName'] && this['nickTXT'] && !_0x49a9c3 && (_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = _0x5104f1, this['nickTXT']['x'] = 0x0, this['nickTXT']['y'] = this['rad'], this['nickTXT']['draw'](), _0x1d2dab['restore']());
}, _0x5094f7['prototype']['spawnedFromDeadAni'] = ![], _0x5094f7['prototype']['readCustomData_onNewlyVisible'] = function (_0x35fb7a) {
this['spawnedFromDeadAni'] = _0x35fb7a['readUInt8']() == 0x1, this['animalType'] = _0x35fb7a['readUInt16'](), this['animalHomeBiome'] = _0x35fb7a['readUInt8']();
var _0x13af90 = _0x35fb7a['readString']();
this['fadeAway'] = _0x35fb7a['readUInt8']() == 0x1;
if (this['fadeAway']) this['webTransparency'] = _0x35fb7a['readUInt16']();
if (this['spawnedFromDeadAni']) this['setNick'](_0x13af90 ? _0x13af90 : 'mope.io');
}, _0x5094f7['prototype']['readUpdatedProperty'] = function (_0x41a06c, _0x5a578a) {
if (_0x41a06c == _0xdea6c3) this['flag_flying'] = _0x5a578a['readUInt8']() == 0x1;
else _0x41a06c == _0x1a2878 && (this['webTransparency'] = _0x5a578a['readUInt16']());
};

function _0x5094f7() {
_0x5094f7['superClass']['call'](this, _0x5f2239), this['shrinkedRad'] = 0x0;
}
window['AnimalCarcass'] = _0x5094f7, _0x13dc56['setCustomClassForGameObjType'](_0x5094f7, _0x5f2239);
var _0x1e3c43 = _0x131218;
_0x80b285['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x80b285['prototype']['constructor'] = _0x80b285, _0x80b285['superClass'] = _0x1e3c43, _0x80b285['prototype']['chilliType'] = 0x0, _0x80b285['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x80b285['prototype']['setSkinPath'] = function () {
var _0x147404 = this['isEdibleOutlined']() ? 'e' : this['oType'];
_0x147404 += '_' + this['chilliType'], this['objSkinPath'] = 'gameobj/' + this['oType'] + '/' + _0x147404 + '.png';
}, _0x80b285['prototype']['customDraw'] = function (_0x3ab5a5) {
_0x1d2dab['save']();
var _0xefce6f = this['getSkinImageObj'](this['objSkinPath']);
if (_0xefce6f) {
    var _0x55aba3 = this['rad'];
    if (this['specType2'] == 0x1) {
        if (this['angle'] == 0x0) this['angle'] = this['rPer'] * Math['PI'] * 0x2;
        this['angle'] += 0.4, _0x1d2dab['rotate'](this['angle']);
    } else {
        if (this['specType2'] == 0x2) _0x1d2dab['rotate'](this['angle']);
        else _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2);
    }
    _0x1d2dab['drawImage'](_0xefce6f, -_0x55aba3, -_0x55aba3, 0x2 * _0x55aba3, 0x2 * _0x55aba3);
}
_0x1d2dab['restore']();
}, _0x80b285['prototype']['readCustomData_onNewlyVisible'] = function (_0x247f85) {
this['chilliType'] = _0x247f85['readUInt8']();
};

function _0x80b285() {
_0x80b285['superClass']['call'](this, _0x1b43b1), this['doesDrawEffectScale'] = ![];
}
window['Chilli'] = _0x80b285, _0x13dc56['setCustomClassForGameObjType'](_0x80b285, _0x1b43b1);
var _0x5046f2 = _0x5046f2,
_0x1e3c43 = _0x3d6c08;
_0x5046f2['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x5046f2['prototype']['constructor'] = _0x5046f2, _0x5046f2['superClass'] = _0x1e3c43, _0x5046f2['prototype']['objSkinSpotsCanvas'] = null, _0x5046f2['prototype']['animalInfo'] = function () {
var _0x1c8da9 = {};
this['animalName'] = '';
switch (this['animalSpecies']) {
case 0x0:
    _0x1c8da9['aniName'] = 'Cheetah', _0x1c8da9['upgradeText'] = 'UPGRADED to Cheetah!\x0a Press W to get a speed boost!', this['animalName'] = 'cheetah';
    break;
case 0x1:
    _0x1c8da9['aniName'] = 'Jaguar', _0x1c8da9['upgradeText'] = 'UPGRADED to JAGUAR!\x0a Press W to get a speed boost!\x0a(Jaguars can climb hills!)', this['animalName'] = 'jaguar';
    break;
case 0x2:
    _0x1c8da9['aniName'] = 'Leopard', _0x1c8da9['upgradeText'] = 'UPGRADED to LEOPARD!\x0a Press W to get a speed boost!\x0a(Leopards can dive longer)', this['animalName'] = 'leopard';
    break;
case 0x3:
    _0x1c8da9['aniName'] = 'Black Panther', _0x1c8da9['upgradeText'] = 'UPGRADED to Black Panther!\x0a Press W to get a speed boost!\x0a(Black Panthers are fast on mud)', this['animalName'] = 'blackpanther';
    break;
case 0x64:
    _0x1c8da9['aniName'] = 'Big Cookie', _0x1c8da9['upgradeText'] = 'UPGRADED to Big Cookie!\x0a Press W to get a speed boost!\x0a(Big Cookies are fast on mud)', this['animalName'] = '100/bigcat';
    break;
case 0xca:
    _0x1c8da9['aniName'] = 'C.M.Y.K NeoN Cheetak', _0x1c8da9['upgradeText'] = 'UPGRADED to C.M.Y.K NeoN Cheetak!\x0a Press W to get a speed boost!\x0a(Genie Cheetah are fast on mud)', this['animalName'] = 'cheetah';
    break;
case 0xcc:
    _0x1c8da9['aniName'] = 'Genie Cheetah', _0x1c8da9['upgradeText'] = 'UPGRADED to Genie Cheetah!\x0a Press W to get a speed boost!\x0a(Genie Cheetah are fast on mud)', this['animalName'] = 'genie_cheetah';
    break;
}
return _0x1c8da9['aniCol'] = '#CAC05B', _0x1c8da9['skinName'] = this['getSkinName'](), _0x1c8da9;
}, _0x5046f2['prototype']['getSkinName'] = function () {
return this['getSpeciesPath']() + '/' + this['animalName'];
}, _0x5046f2['prototype']['getSpeciesPath'] = function () {
return 'land/bigcat/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x5046f2['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x5046f2() {
_0x5046f2['superClass']['call'](this, _0x4ad968);
}
window['BigCat'] = _0x5046f2, _0x13dc56['setCustomClassForGameObjType'](_0x5046f2, _0x4ad968, _0x29db26);

function _0x45d95f(_0x2e1838, _0x4e1ef2, _0xd0548, _0x47c7f7, _0x10267a, _0x59b7a2, _0x47a7b0) {
var _0x3bc268 = _0x32b8d4;
this['x'] = _0x2e1838, this['y'] = _0x4e1ef2, this['w'] = _0xd0548, this['h'] = _0x47c7f7, this['label'] = _0x10267a, this['font'] = Number(_0x59b7a2) ? Number(_0x59b7a2) : 0x1e, this['isVisible'] = !![], this['hoverColor'] = '#16932A', this['defaultColor'] = '#0aa633', this['alpha'] = 0x1, this['txtAlpha'] = 0x1, this['ctx'] = _0x47a7b0 === undefined || _0x47a7b0 == null ? _0x1d2dab : _0x47a7b0, this['labelColor'] = 'white', this['buttonTXT'] = new _0x407dea(0xc, this['labelColor']), this['buttonTXT']['renderScale'] = 1.5, this['drawButtonRect'] = !![], this['isHighLighted'] = ![], this['showLabeleOnHover'] = ![], this['textShadow'] = ![], this['buttonScaleF'] = 0x1, this['strokeWidth'] = 0x4 * _0x3bc268, this['setLabelColor'] = function (_0x190e08) {
    this['buttonTXT'] = new _0x407dea(0xc, _0x190e08), this['buttonTXT']['renderScale'] = 1.5;
}, this['testPosHitsButton'] = function (_0xb4f88f, _0x3a63ab) {
    var _0x1eeaa1 = this['x'],
        _0x25627b = this['x'] + this['w'],
        _0x39cce0 = this['y'],
        _0x31c787 = this['y'] + this['h'];
    if (_0xb4f88f < _0x1eeaa1 || _0xb4f88f > _0x25627b) return ![];
    if (_0x3a63ab < _0x39cce0 || _0x3a63ab > _0x31c787) return ![];
    else return !![];
}, this['setPosAndSize'] = function (_0x470c2a, _0x450dfe, _0x59acd1, _0x41949d, _0x456f03, _0x5e9d2d) {
    this['w'] = _0x59acd1, this['h'] = _0x41949d, this['x'] = _0x470c2a + _0x59acd1 * (0.5 - _0x456f03), this['y'] = _0x450dfe + _0x41949d * (0.5 - _0x5e9d2d);
}, this['draw'] = function () {
    if (!this['isVisible']) return;
    this['update'](), this['ctx']['save'](), this['ctx']['translate'](this['x'], this['y']), this['ctx']['scale'](this['buttonScaleF'], this['buttonScaleF']);
    var _0x511c54 = this['alpha'];
    this['drawButtonRect'] && (this['ctx']['fillStyle'] = this['defaultColor'], this['ctx']['strokeStyle'] = '#116c17', this['ctx']['lineWidth'] = this['strokeWidth'], this['roundRect'](0x0, 0x0, this['w'], this['h'], 0x5, !![], !![]), this['isHighLighted'] && (this['ctx']['fillStyle'] = this['hoverColor'], this['roundRect'](0x0, 0x0, this['w'], this['h'], 0x5, !![], ![])));
    if (!this['showLabeleOnHover']) this['ctx']['globalAlpha'] = this['txtAlpha'], this['drawText'](this['w'] / 0x2, this['h'] / 0x2);
    else this['isHighLighted'] && this['showLabeleOnHover'] && this['drawTextOnHowever']();
    this['ctx']['restore'](), this['onAfterDraw']();
}, this['drawTextOnHowever'] = function () {
    this['drawText'](this['w'] / 0x2, this['h'] / 0x2);
}, this['beforeDrawText'] = function () {}, this['drawText'] = function (_0x4796bb, _0x5a9e38) {
    this['buttonTXT']['setText'](this['label']), this['buttonTXT']['strokeW'] = this['isHighLighted'] && !this['textShadow'] ? 0x0 : 0x1, this['buttonTXT']['setFontSize'](this['font']), this['buttonTXT']['setColor'](this['labelColor']), this['buttonTXT']['x'] = _0x4796bb, this['buttonTXT']['y'] = _0x5a9e38, this['beforeDrawText'](), this['buttonTXT']['draw']();
}, this['roundRect'] = function (_0x14e5c4, _0x5d8bcc, _0x9c307f, _0x2206f7, _0x4c22f9, _0x334f1a, _0x3347c7) {
    typeof _0x3347c7 == 'undefined' && (_0x3347c7 = !![]);
    typeof _0x4c22f9 === 'undefined' && (_0x4c22f9 = 0x5);
    if (typeof _0x4c22f9 === 'number') _0x4c22f9 = {
        'tl': _0x4c22f9,
        'tr': _0x4c22f9,
        'br': _0x4c22f9,
        'bl': _0x4c22f9
    };
    else {
        var _0x3a5915 = {
            'tl': 0x0,
            'tr': 0x0,
            'br': 0x0,
            'bl': 0x0
        };
        for (var _0x8b0098 in _0x3a5915) {
            _0x4c22f9[_0x8b0098] = _0x4c22f9[_0x8b0098] || _0x3a5915[_0x8b0098];
        }
    }
    this['ctx']['globalAlpha'] = this['alpha'], this['ctx']['lineWidth'] = 0x2, this['ctx']['beginPath'](), this['ctx']['moveTo'](_0x14e5c4 + _0x4c22f9['tl'], _0x5d8bcc), this['ctx']['lineTo'](_0x14e5c4 + _0x9c307f - _0x4c22f9['tr'], _0x5d8bcc), this['ctx']['quadraticCurveTo'](_0x14e5c4 + _0x9c307f, _0x5d8bcc, _0x14e5c4 + _0x9c307f, _0x5d8bcc + _0x4c22f9['tr']), this['ctx']['lineTo'](_0x14e5c4 + _0x9c307f, _0x5d8bcc + _0x2206f7 - _0x4c22f9['br']), this['ctx']['quadraticCurveTo'](_0x14e5c4 + _0x9c307f, _0x5d8bcc + _0x2206f7, _0x14e5c4 + _0x9c307f - _0x4c22f9['br'], _0x5d8bcc + _0x2206f7), this['ctx']['lineTo'](_0x14e5c4 + _0x4c22f9['bl'], _0x5d8bcc + _0x2206f7), this['ctx']['quadraticCurveTo'](_0x14e5c4, _0x5d8bcc + _0x2206f7, _0x14e5c4, _0x5d8bcc + _0x2206f7 - _0x4c22f9['bl']), this['ctx']['lineTo'](_0x14e5c4, _0x5d8bcc + _0x4c22f9['tl']), this['ctx']['quadraticCurveTo'](_0x14e5c4, _0x5d8bcc, _0x14e5c4 + _0x4c22f9['tl'], _0x5d8bcc), this['ctx']['closePath']();
    if (_0x334f1a) this['ctx']['fill']();
    if (_0x3347c7) this['ctx']['stroke']();
}, this['onClick'] = function () {}, this['onMouseMove'] = function () {}, this['onMouseIn'] = function () {}, this['onMouseOut'] = function () {}, this['isMouseIn'] = ![], this['setMouseRawPos'] = function (_0x44743c, _0x44a98a) {
    this['rawX'] = _0x44743c, this['rawY'] = _0x44a98a, this['testPosHitsButton'](this['rawX'], this['rawY']) ? !this['isMouseIn'] && (this['isMouseIn'] = !![], this['onMouseIn']()) : this['isMouseIn'] && (this['isMouseIn'] = ![], this['onMouseOut']());
}, this['update'] = function () {}, this['onInterfaceReset'] = function () {
    _0x4144ba(this['label'] + '.onInterfaceReset');
}, this['onAfterDraw'] = function () {};
}
window['InterfaceButton'] = _0x45d95f, _0xca692b['prototype'] = {
'mode': 0x0,
'state': 0x0,
'myPlayer': null
}, _0xca692b['prototype']['chatAllowed'] = !![], _0xca692b['prototype']['isHalloween'] = ![], _0xca692b['prototype']['stamp'] = 0x0, _0xca692b['prototype']['interface'] = function () {}, _0xca692b['prototype']['drawMap'] = function () {}, _0xca692b['prototype']['interfaceReset'] = function () {}, _0xca692b['prototype']['main'] = function (_0x290ee8) {}, _0xca692b['prototype']['onInit'] = function (_0x4bd162) {}, _0xca692b['prototype']['drawCustomObjs'] = function (_0xb9923e) {}, _0xca692b['prototype']['worldUpdate'] = function (_0x1abad4) {}, _0xca692b['prototype']['setPlayer'] = function () {
this['myPlayer'] = _0x3c55ea[_0x2fc9ba];
};

function _0xca692b() {}
window['GameMode'] = _0xca692b;
var _0x1e3c43 = _0xca692b;
_0x4ca308['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x4ca308['prototype']['constructor'] = _0x4ca308, _0x4ca308['superClass'] = _0x1e3c43, _0x4ca308['prototype']['safeArea'] = null;

function _0x4ca308(_0x1f79d1) {
this['mode'] = _0x1f79d1, this['stamp'] = +new Date(), this['chatAllowed'] = !![], this['createInterfaceButtons']();
}
_0x4ca308['prototype']['wastedPopups'] = [], _0x4ca308['prototype']['playerDisplayNum'] = 0x0, _0x4ca308['prototype']['setServerPlayerCount'] = function () {
_0x4ea12d['setText'](_0x5f03df(_0x6ff4bc) + ' online'), this['playerDisplayNum'] = this['playerDisplayNum'] == 0x0 ? 0x1 : 0x0;
}, _0x4ca308['prototype']['interface'] = function () {
if (this['state'] == -0x1 || this['mode'] != _0x5dd9a5) return;
if (_0x3c6c95)
    for (var _0x4bee8a = this['wastedPopups']['length'] - 0x1; _0x4bee8a >= 0x0; _0x4bee8a--) {
        var _0x167d9b = this['wastedPopups'][_0x4bee8a];
        _0x167d9b['draw']();
        if (_0x167d9b['timedOut']) this['wastedPopups']['splice'](_0x4bee8a, 0x1);
    }
if (this['endScreenCanvas'] != null) {
    this['endScreenCanvas']['width'] && _0x1d2dab['drawImage'](this['endScreenCanvas'], _0x1bcf68 / 0x2 - this['endScreenCanvas']['width'] / 0x2, 0xf * _0x4ffcf2, this['endScreenCanvas']['width'], this['endScreenCanvas']['height']);
    if (!_0x3c6c95 || isGhost) _0x36e784(!![]);
}
this['drawInterfaceButtons']();
}, _0x4ca308['prototype']['interfaceReset'] = function () {
this['endScreenCanvas'] = null, this['dangerCircleMiniMapCanvas'] = null, this['wastedPopups'] = [], this['lastWastedPopupT'] = 0x0, this['playercount'] = 0x0, this['safeArea'] = null;
if (this['interfaceButtons'])
    for (var _0xb98d09 = 0x0; _0xb98d09 < this['interfaceButtons']['length']; _0xb98d09++) {
        var _0x4e2d51 = this['interfaceButtons'][_0xb98d09];
        _0x4e2d51['onInterfaceReset']();
    }
this['interfaceButtons'] = [];
}, _0x4ca308['prototype']['onInit'] = function () {}, _0x4ca308['prototype']['playercount'] = 0x0, _0x4ca308['prototype']['setPlayerCount'] = function (_0x5af67f) {
this['playercount'] = _0x5af67f;
}, _0x4ca308['prototype']['showPlayerCount'] = function () {
_0x1d2dab['save']();
var _0x3b5e22 = _0x1bcf68 / 0x2,
    _0x159d9d = 0x32 * _0x32b8d4,
    _0x4af648 = 0x12c * _0x32b8d4;
_0x1d2dab['globalAlpha'] = 0.35, _0x1d2dab['fillStyle'] = 'black';
var _0x366a49 = 0x1e * _0x32b8d4;
_0x1d2dab['fillRect'](_0x3b5e22 - _0x4af648 / 0x2, _0x366a49, _0x4af648, _0x159d9d), _0x1d2dab['globalAlpha'] = 0x1, _0x1d2dab['fillStyle'] = 'white', _0x1d2dab['font'] = 0x1e * _0x32b8d4 + 'px Arial', _0x1d2dab['lineWidth'] = 0x1, _0x1d2dab['textAlign'] = 'center', _0x1d2dab['textBaseline'] = 'middle', _0x1d2dab['shadowOffsetX'] = 0x1, _0x1d2dab['shadowOffsetY'] = 0x1, _0x1d2dab['shadowColor'] = 'black', _0x366a49 += 0x19 * _0x32b8d4;
var _0x33b84f = ' player';
if (this['playercount'] > 0x1) _0x33b84f += 's';
if (this['state'] == battleRoyal_inProgress) _0x33b84f += ' alive!';
else {
    if (this['state'] == _0x546525 || this['state'] == battleRoyal_ready) _0x33b84f += ' joined';
}
_0x1d2dab['fillText'](this['playercount'] + _0x33b84f, _0x3b5e22, _0x366a49), _0x1d2dab['restore']();
}, _0x4ca308['prototype']['lbCanvas'] = null, _0x4ca308['prototype']['leaderboard'] = function (_0x25bd24) {
if (this['lbCanvas'] == null) this['lbCanvas'] = document['createElement']('canvas');
if (_0x25bd24) {
    var _0x3cf3ce = this['lbCanvas']['getContext']('2d'),
        _0x23595 = 0x37,
        _0x550b00 = 0x16;
    _0x23595 = _0x23595 + _0x550b00 * _0x25bd24['length'], this['lbCanvas']['width'] = 0x10e, this['lbCanvas']['height'] = _0x23595, _0x3cf3ce['globalAlpha'] = 0.2, _0x3cf3ce['fillStyle'] = '#000000', _0x3cf3ce['fillRect'](0x0, 0x0, this['lbCanvas']['width'], this['lbCanvas']['height']), _0x3cf3ce['globalAlpha'] = 0x1, _0x3cf3ce['fillStyle'] = '#FFFFFF';
    var _0x2f449c = _0xcc7143['name'];
    _0x3cf3ce['font'] = '24px Arial';
    !(_0x31f3fc == 0x2) && (_0x3cf3ce['shadowOffsetX'] = 0x1, _0x3cf3ce['shadowOffsetY'] = 0x1);
    _0x3cf3ce['shadowColor'] = 'black', _0x3cf3ce['fillText'](_0x2f449c, this['lbCanvas']['width'] / 0x2 - _0x3cf3ce['measureText'](_0x2f449c)['width'] / 0x2, 0x28);
    var _0x5b0dd6;
    _0x3cf3ce['textAlign'] = 'left';
    for (_0x3cf3ce['font'] = '17px Arial', _0x5b0dd6 = 0x0; _0x5b0dd6 < _0x25bd24['length']; ++_0x5b0dd6) {
        _0x2f449c = _0x49a9c3 ? '' : _0x25bd24[_0x5b0dd6]['name'] || 'mope.io', _0x2f449c += ' (' + _0x33bfab(_0x25bd24[_0x5b0dd6]['xp']) + ')', _0x3cf3ce['fillStyle'] = '#FFFFFF', _0x3cf3ce['fillText'](_0x2f449c, 0xf, 0x41 + _0x550b00 * _0x5b0dd6);
    }
}
}, _0x4ca308['prototype']['drawLeaderboard'] = function () {
if (_0x3c6c95) {
    if (!_0x2790d1) _0x49b3ea && (_0x49b3ea['width'] && _0x1d2dab['drawImage'](_0x49b3ea, 0xa * _0x4ffcf2, 0xa * _0x4ffcf2, _0x49b3ea['width'] * _0x32b8d4, _0x49b3ea['height'] * _0x32b8d4));
}
}, _0x4ca308['prototype']['btnPlayAgain'] = null, _0x4ca308['prototype']['showStats'] = !![], _0x4ca308['prototype']['interfaceButtons'] = [], _0x4ca308['prototype']['createInterfaceButtons'] = function () {
this['interfaceButtons'] = [];
}, _0x4ca308['prototype']['drawInterfaceButtons'] = function () {
if (this['interfaceButtons'])
    for (var _0x272cc3 = 0x0; _0x272cc3 < this['interfaceButtons']['length']; _0x272cc3++) {
        var _0x550311 = this['interfaceButtons'][_0x272cc3];
        _0x550311['isVisible'] && _0x550311['draw']();
    }
}, _0x4ca308['prototype']['onResize'] = function () {
this['drawInterfaceButtons']();
}, _0x4ca308['prototype']['readPlayerStats'] = function (_0x269d19) {
var _0xbb3a2f = [];
return _0xbb3a2f['rank'] = _0x269d19['readUInt16'](), _0xbb3a2f['timeAlive'] = _0x269d19['readUInt16'](), _0xbb3a2f['totalKills'] = _0x269d19['readUInt16'](), _0xbb3a2f['topRank'] = _0x269d19['readUInt16'](), _0xbb3a2f['maxXP'] = _0x269d19['readUInt32'](), _0xbb3a2f['killedBy'] = _0x269d19['readString'](), _0xbb3a2f;
}, _0x4ca308['prototype']['playerInfo'] = function (_0x4271da) {
if (isGhost && !_0x5102a2) {
    var _0xeabbfe = this['readPlayerStats'](_0x4271da);
    this['buildEndScreenHTML'](_0xeabbfe);
} else !isGhost && (this['endScreenCanvas'] = null);
}, _0x4ca308['prototype']['playerWorldUpdate'] = function (_0x186261) {}, _0x4ca308['prototype']['worldUpdate'] = function (_0x1b072d) {}, _0x4ca308['prototype']['drawMap'] = function () {
if (_0x3c6c95) {
    if (_0x44408d) return;
    if (_0x476412) _0x476412['drawMap']();
    this['drawLeaderboard']();
}
}, _0x4ca308['prototype']['pieChartCanvas'] = null, _0x4ca308['prototype']['teamColors'] = {
0x0: 'white',
0x1: '#B6CF40'
}, _0x4ca308['prototype']['endScreenDisplayed'] = ![], _0x4ca308['prototype']['buildEndScreenHTML'] = function (_0x346654) {
if (this['endScreenDisplayed']) return;
this['endScreenDisplayed'] = !![];
var _0x31a71e = '';
_0x31a71e += '<div class=\'msg\'>YOU WERE #' + _0x346654['rank'] + '</div>', _0x31a71e += '<div class=\'row\'>', _0x31a71e += '<div class=\'label\'>Killed by:</div>', _0x31a71e += '<div class=\'value2\'>' + _0x346654['killedBy'] + '</div>', _0x31a71e += '</div>', _0x31a71e += '<div class=\'row\'>', _0x31a71e += '<div class=\'col1\'>', _0x31a71e += '<div class=\'label\'>Time alive:</div>', _0x31a71e += '<div class=\'value\'>' + _0x1a2910(_0x346654['timeAlive']) + '</div>', _0x31a71e += '</div>', _0x31a71e += '<div class=\'col2\'>', _0x31a71e += '<div class=\'label\'>Total kills:</div>', _0x31a71e += '<div class=\'value\'>' + _0x346654['totalKills'] + '</div>', _0x31a71e += '</div>', _0x31a71e += '</div>', _0x31a71e += '<div class=\'row\'>', _0x31a71e += '<div class=\'col1\'>', _0x31a71e += '<div class=\'label\'>Top rank:</div>', _0x31a71e += '<div class=\'value\'>' + _0x346654['topRank'] + '</div>', _0x31a71e += '</div>', _0x31a71e += '<div class=\'col2\'>', _0x31a71e += '<div class=\'label\'>Max xp:</div>', _0x31a71e += '<div class=\'value\'>' + _0x33bfab(_0x346654['maxXP']) + '</div>', _0x31a71e += '</div>', _0x31a71e += '</div>', _0x31a71e += '<div style=\'clear:both;\'></div>', _0x31a71e += '<div class=\'btnDiv\'>', _0x31a71e += '<button id=\'btnMopeOptions\' class=\'btn\'>      CONTINUE      </button>', _0x31a71e += '</div>', _0x31a71e += '<div style=\'clear:both;\'></div>';
var _0x58d61a = document['getElementById']('endScreen');
_0x58d61a && (_0x58d61a['innerHTML'] = _0x31a71e, _0x58d61a['style']['display'] = 'block'), (!_0x3c6c95 || isGhost) && _0x51ff85();
}, _0x4ca308['prototype']['endScreenCanvas'] = null, _0x4ca308['prototype']['buildEndScreen'] = function (_0x307d1e, _0x1b5b17) {
if (this['endScreenCanvas'] == null) this['endScreenCanvas'] = document['createElement']('canvas');
if (this['endScreenCanvas'] == null) return;
var _0x1ee2d4 = this['endScreenCanvas']['getContext']('2d'),
    _0x5ca927 = 0x37,
    _0x1beda3 = 0x28,
    _0x4d89fa = 0x5,
    _0x5e07ed = 0xf0,
    _0x41f5be = 0x1a4;
_0x5ca927 = _0x5e07ed + _0x4d89fa * 0x2, this['endScreenCanvas']['width'] = _0x41f5be + _0x4d89fa * 0x2, this['endScreenCanvas']['height'] = _0x5ca927, _0x1ee2d4['globalAlpha'] = 0.2, _0x1ee2d4['fillStyle'] = '#000000', _0x1ee2d4['fillRect'](0x0, 0x0, this['endScreenCanvas']['width'], this['endScreenCanvas']['height']), _0x1ee2d4['fillStyle'] = '#000000', _0x1ee2d4['fillRect'](_0x4d89fa, _0x4d89fa, this['endScreenCanvas']['width'] - _0x4d89fa * 0x2, this['endScreenCanvas']['height'] - _0x4d89fa * 0x2);
var _0xcbb99 = _0x4d89fa;
_0x1ee2d4['globalAlpha'] = 0x1, _0x1ee2d4['fillStyle'] = '#FFFFFF', _0x1ee2d4['font'] = '30px Arial', _0xcbb99 += 0x37;
var _0x4d0fd6 = 'Final Stats';
_0x1ee2d4['font'] = '30px Arial', _0x1ee2d4['fillText'](_0x4d0fd6, this['endScreenCanvas']['width'] / 0x2 - _0x1ee2d4['measureText'](_0x4d0fd6)['width'] / 0x2, _0xcbb99), _0x1ee2d4['font'] = '20px Arial', _0xcbb99 += 0x2d, _0x4d0fd6 = 'You were #' + _0x1b5b17['rank'], _0x1ee2d4['fillText'](_0x4d0fd6, this['endScreenCanvas']['width'] / 0x2 - _0x1ee2d4['measureText'](_0x4d0fd6)['width'] / 0x2, _0xcbb99), _0xcbb99 += 0x28;
var _0x2a710b = _0x1a2910(_0x1b5b17['timeAlive']),
    _0x1223ab = _0x4d89fa + 0xf;
_0x50cdc3(_0x1ee2d4, 'Killed by', _0x1b5b17['killedBy'], _0x1223ab, _0xcbb99), _0xcbb99 += 0x28, _0x50cdc3(_0x1ee2d4, 'Time Alive', _0x1a2910(_0x1b5b17['timeAlive']), _0x1223ab, _0xcbb99), _0x1223ab += 0xd2, _0x50cdc3(_0x1ee2d4, 'Total Kills', _0x1b5b17['totalKills'], _0x1223ab, _0xcbb99), _0xcbb99 += 0x28, _0x1223ab = _0x4d89fa + 0xf, _0x50cdc3(_0x1ee2d4, 'Top rank', _0x1b5b17['topRank'], _0x1223ab, _0xcbb99), _0x1223ab += 0xd2, _0x50cdc3(_0x1ee2d4, 'Max XP', _0x33bfab(_0x1b5b17['maxXP']), _0x1223ab, _0xcbb99), _0xcbb99 += 0x32;
}, _0x4ca308['prototype']['lastWastedPopupT'] = 0x0, _0x4ca308['prototype']['onPlayerWasted'] = function (_0xce138f) {
if ((_0x740c5b - this['lastWastedPopupT']) / 0x3e8 > 0.7) {
    this['lastWastedPopupT'] = _0x740c5b;
    var _0x2e115e = new _0x1bfd98(_0xce138f + ' wasted!', 0x28, 'red', 0x5dc);
    this['wastedPopups']['push'](_0x2e115e);
}
}, _0x4ca308['prototype']['lastWastedPopupT'] = 0x0, _0x4ca308['prototype']['msgDisplayPlayersOnMiniMap'] = function (_0x38c3f3) {
_0x278a8b = [];
var _0x3463d9 = _0x38c3f3['readUInt16']();
for (var _0x4fad45 = 0x0; _0x4fad45 < _0x3463d9; _0x4fad45++) {
    _0x278a8b['push']({
        'id': _0x38c3f3['readUInt32'](),
        'x': _0x38c3f3['readUInt32']() / 0x64,
        'y': _0x38c3f3['readUInt32']() / 0x64,
        'rad': 0x3
    });
}
}, window['FreeForAll'] = _0x4ca308;
var _0x1e3c43 = _0xca692b;
_0x343a4a['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x343a4a['prototype']['constructor'] = _0x343a4a, _0x343a4a['superClass'] = _0x1e3c43, _0x343a4a['prototype']['safeArea'] = null;
var _0x223895 = ![];

function _0x343a4a(_0x167b04) {
this['mode'] = _0x216779, this['chatAllowed'] = !![], this['createInterfaceButtons'](), console['log']('@@@@@@@@@@@@@@@@@@@@@@@@@@ zombe mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'), console['log']('@@@@@@@@@@@@@@@@@@@@@@@@@@ zombe mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'), console['log']('@@@@@@@@@@@@@@@@@@@@@@@@@@ zombe mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'), console['log']('@@@@@@@@@@@@@@@@@@@@@@@@@@ zombe mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'), console['log']('@@@@@@@@@@@@@@@@@@@@@@@@@@ zombe mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@');
}
_0x343a4a['prototype']['wastedPopups'] = [], _0x343a4a['prototype']['playerDisplayNum'] = 0x0, _0x343a4a['prototype']['setServerPlayerCount'] = function () {
if (this['playerDisplayNum'] == 0x0) _0x4ea12d['setText'](_0x5f03df(_0x6ff4bc) + ' mopers');
else _0x4ea12d['setText'](_0x5f03df(_0x3adb24) + ' on server');
this['playerDisplayNum'] = this['playerDisplayNum'] == 0x0 ? 0x1 : 0x0;
}, _0x343a4a['prototype']['interface'] = function () {
if (this['state'] == -0x1 || this['mode'] != _0x5dd9a5) return;
if (_0x3c6c95)
    for (var _0x23181d = this['wastedPopups']['length'] - 0x1; _0x23181d >= 0x0; _0x23181d--) {
        var _0x1e73ff = this['wastedPopups'][_0x23181d];
        _0x1e73ff['draw']();
        if (_0x1e73ff['timedOut']) this['wastedPopups']['splice'](_0x23181d, 0x1);
    }
if (this['endScreenCanvas'] != null) {
    this['endScreenCanvas']['width'] && _0x1d2dab['drawImage'](this['endScreenCanvas'], _0x1bcf68 / 0x2 - this['endScreenCanvas']['width'] / 0x2, 0xf * _0x4ffcf2, this['endScreenCanvas']['width'], this['endScreenCanvas']['height']);
    if (!_0x3c6c95 || isGhost) _0x36e784(!![]);
}
this['drawInterfaceButtons']();
}, _0x343a4a['prototype']['interfaceReset'] = function () {
this['endScreenCanvas'] = null, this['dangerCircleMiniMapCanvas'] = null, this['wastedPopups'] = [], this['lastWastedPopupT'] = 0x0, this['playercount'] = 0x0, this['safeArea'] = null, _0x2a6223 = null, _0x27df64 = null;
if (this['interfaceButtons'])
    for (var _0x120a0a = 0x0; _0x120a0a < this['interfaceButtons']['length']; _0x120a0a++) {
        var _0x4c23b3 = this['interfaceButtons'][_0x120a0a];
        _0x4c23b3['onInterfaceReset']();
    }
this['interfaceButtons'] = [];
}, _0x343a4a['prototype']['onInit'] = function () {}, _0x343a4a['prototype']['playercount'] = 0x0, _0x343a4a['prototype']['setPlayerCount'] = function (_0x23626a) {
this['playercount'] = _0x23626a;
}, _0x343a4a['prototype']['showPlayerCount'] = function () {
_0x1d2dab['save']();
var _0x1190a1 = _0x1bcf68 / 0x2,
    _0xc0c798 = 0x32 * _0x32b8d4,
    _0x5d2260 = 0x12c * _0x32b8d4;
_0x1d2dab['globalAlpha'] = 0.35, _0x1d2dab['fillStyle'] = 'black';
var _0x43ffa3 = 0x1e * _0x32b8d4;
_0x1d2dab['fillRect'](_0x1190a1 - _0x5d2260 / 0x2, _0x43ffa3, _0x5d2260, _0xc0c798), _0x1d2dab['globalAlpha'] = 0x1, _0x1d2dab['fillStyle'] = 'white', _0x1d2dab['font'] = 0x1e * _0x32b8d4 + 'px Arial', _0x1d2dab['lineWidth'] = 0x1, _0x1d2dab['textAlign'] = 'center', _0x1d2dab['textBaseline'] = 'middle', _0x1d2dab['shadowOffsetX'] = 0x1, _0x1d2dab['shadowOffsetY'] = 0x1, _0x1d2dab['shadowColor'] = 'black', _0x43ffa3 += 0x19 * _0x32b8d4;
var _0x4388fa = ' player';
if (this['playercount'] > 0x1) _0x4388fa += 's';
if (this['state'] == battleRoyal_inProgress) _0x4388fa += ' alive!';
else {
    if (this['state'] == _0x546525 || this['state'] == battleRoyal_ready) _0x4388fa += ' joined';
}
_0x1d2dab['fillText'](this['playercount'] + _0x4388fa, _0x1190a1, _0x43ffa3), _0x1d2dab['restore']();
}, _0x343a4a['prototype']['lbCanvas'] = null, _0x343a4a['prototype']['leaderboard'] = function (_0x2aaded) {
if (this['lbCanvas'] == null) this['lbCanvas'] = document['createElement']('canvas');
if (_0x2aaded) {
    var _0x54e342 = this['lbCanvas']['getContext']('2d'),
        _0x2ab51c = 0x37,
        _0x1b3f7e = 0x16;
    _0x2ab51c = _0x2ab51c + _0x1b3f7e * _0x2aaded['length'], this['lbCanvas']['width'] = 0x10e, this['lbCanvas']['height'] = _0x2ab51c, _0x54e342['globalAlpha'] = 0.2, _0x54e342['fillStyle'] = '#000000', _0x54e342['fillRect'](0x0, 0x0, this['lbCanvas']['width'], this['lbCanvas']['height']), _0x54e342['globalAlpha'] = 0x1, _0x54e342['fillStyle'] = '#FFFFFF';
    var _0x1d8680 = _0xcc7143['name'];
    _0x54e342['font'] = '24px Arial';
    !options_lowGraphics && (_0x54e342['shadowOffsetX'] = 0x1, _0x54e342['shadowOffsetY'] = 0x1);
    _0x54e342['shadowColor'] = 'black', _0x54e342['fillText'](_0x1d8680, this['lbCanvas']['width'] / 0x2 - _0x54e342['measureText'](_0x1d8680)['width'] / 0x2, 0x28);
    var _0x55274d;
    _0x54e342['textAlign'] = 'left';
    for (_0x54e342['font'] = '17px Arial', _0x55274d = 0x0; _0x55274d < _0x2aaded['length']; ++_0x55274d) {
        _0x1d8680 = _0x49a9c3 ? '' : _0x2aaded[_0x55274d]['name'] || 'mope.io', _0x1d8680 += ' (' + _0x33bfab(_0x2aaded[_0x55274d]['xp']) + ')', _0x54e342['fillStyle'] = '#FFFFFF', _0x54e342['fillText'](_0x1d8680, 0xf, 0x41 + _0x1b3f7e * _0x55274d);
    }
}
}, _0x343a4a['prototype']['drawLeaderboard'] = function () {
_0x3c6c95 && (this['pieChartCanvas'] != null && (this['pieChartCanvas']['width'] && _0x1d2dab['drawImage'](this['pieChartCanvas'], 0x14 * _0x4ffcf2, 0x14 * _0x4ffcf2, this['pieChartCanvas']['width'], this['pieChartCanvas']['height']))), _0x432b7f();
}, _0x343a4a['prototype']['btnPlayAgain'] = null, _0x343a4a['prototype']['showStats'] = !![], _0x343a4a['prototype']['interfaceButtons'] = [], _0x343a4a['prototype']['createInterfaceButtons'] = function () {
this['interfaceButtons'] = [];
}, _0x343a4a['prototype']['drawInterfaceButtons'] = function () {
if (this['interfaceButtons'])
    for (var _0x552877 = 0x0; _0x552877 < this['interfaceButtons']['length']; _0x552877++) {
        var _0x35a086 = this['interfaceButtons'][_0x552877];
        _0x35a086['isVisible'] && _0x35a086['draw']();
    }
}, _0x343a4a['prototype']['onResize'] = function () {
this['drawInterfaceButtons']();
}, _0x343a4a['prototype']['readPlayerStats'] = function (_0x1a06e2) {
var _0x41739c = [];
return _0x41739c['rank'] = _0x1a06e2['readUInt16'](), _0x41739c['timeAlive'] = _0x1a06e2['readUInt16'](), _0x41739c['totalKills'] = _0x1a06e2['readUInt16'](), _0x41739c['topRank'] = _0x1a06e2['readUInt16'](), _0x41739c['maxXP'] = _0x1a06e2['readUInt32'](), _0x41739c['killedBy'] = _0x1a06e2['readString'](), _0x41739c;
}, _0x343a4a['prototype']['playerInfo'] = function (_0x12c092) {
if (isGhost && !_0x5102a2) {
    var _0x29519d = this['readPlayerStats'](_0x12c092);
    this['buildEndScreenHTML'](_0x29519d);
} else !isGhost && (this['endScreenCanvas'] = null);
}, _0x343a4a['prototype']['worldUpdate'] = function (_0x187d3b) {
var _0x468ebc = minimapW / 0xc8,
    _0x22eb2a = minimapH / 0xc8,
    _0x4f2500 = _0x187d3b['readUInt32']() * _0x468ebc,
    _0x577a6c = _0x187d3b['readUInt32']() * _0x22eb2a,
    _0x1ab868 = _0x187d3b['readUInt32']() * 0x5;
_0x2a6223 = {
    'x': _0x4f2500,
    'y': _0x577a6c,
    'rad': _0x1ab868 * (minimapW / _0x1f4cd2)
}, this['nonZombiePlayersCount'] = _0x187d3b['readUInt16'](), this['zombieCount'] = _0x187d3b['readUInt16']();
if (!_0x223895) {
    this['zombiePlayers'] = [];
    for (i = 0x0; i < this['zombieCount']; i++) {
        var _0x4f2500 = _0x187d3b['readUInt16']() / 0x4,
            _0x577a6c = _0x187d3b['readUInt16']() / 0x4,
            _0x207531 = _0x187d3b['readUInt16']() / 0xa;
        this['zombiePlayers']['push']({
            'x': _0x4f2500,
            'y': _0x577a6c,
            'rad': _0x207531
        });
    }
}
};
var _0x27df64 = null;

function _0x432b7f() {
if (!_0x27df64) _0x27df64 = document['createElement']('canvas');
_0x27df64['width'] = minimapW, _0x27df64['height'] = minimapH;
var _0xf5b6b5 = _0x27df64['getContext']('2d');
_0xf5b6b5['clearRect'](0x0, 0x0, _0x27df64['width'], _0x27df64['height']), _0xf5b6b5['save']();
var _0x2efb3c = Math['max'](0x3, _0x2a6223['rad']),
    _0x20b781 = _0x2a6223['x'],
    _0x4bd726 = _0x2a6223['y'];
_0xf5b6b5['translate'](_0x20b781, _0x4bd726), _0xf5b6b5['save'](), _0xf5b6b5['globalAlpha'] = 0x1, _0x252f27(_0xf5b6b5, 0x0, 0x0, _0x2a6223['rad'], 0x5, 'white'), _0xf5b6b5['restore']();
var _0x141304 = _0x32b8d4 * minimapW * 1.5,
    _0x539e12 = _0x32b8d4 * minimapH * 1.5,
    _0x3ba307 = 0x1,
    _0x36ddf6 = 'red';
_0x458f43(_0xf5b6b5, _0x2a6223['rad'], Math['PI'] * 0x0, _0x36ddf6, _0x3ba307, _0x141304, _0x539e12), _0x458f43(_0xf5b6b5, _0x2a6223['rad'], Math['PI'] * 0.5, _0x36ddf6, _0x3ba307, _0x141304, _0x539e12), _0x458f43(_0xf5b6b5, _0x2a6223['rad'], Math['PI'] * 0x1, _0x36ddf6, _0x3ba307, _0x141304, _0x539e12), _0x458f43(_0xf5b6b5, _0x2a6223['rad'], Math['PI'] * 1.5, _0x36ddf6, _0x3ba307, _0x141304, _0x539e12), _0xf5b6b5['restore'](), _0x27df64 && _0x1d2dab['drawImage'](_0x27df64, _0x1bcf68 - (0xa * _0x4ffcf2 + _0x2e5deb['width'] * _0x32b8d4), 0xa * _0x4ffcf2, minimapW * _0x32b8d4, minimapH * _0x32b8d4);
}
_0x343a4a['prototype']['drawZombiePlayers'] = function () {
if (this['zombiePlayers'])
    for (t = 0x0; t < this['zombiePlayers']['length']; t++) {
        _0x388242(this['zombiePlayers'][t], '#adff32', 0x1);
    }
}, _0x343a4a['prototype']['drawMap'] = function () {
this['buildPieChart']();
if (!_0x223895) this['drawZombiePlayers']();
}, _0x343a4a['prototype']['pieChartCanvas'] = null, _0x343a4a['prototype']['teamColors'] = {
0x0: 'white',
0x1: '#B6CF40'
}, _0x343a4a['prototype']['buildPieChart'] = function () {
if (this['pieChartCanvas'] == null) this['pieChartCanvas'] = document['createElement']('canvas');
if (this['pieChartCanvas'] == null) return;
var _0x63f125 = this['pieChartCanvas']['getContext']('2d'),
    _0x52a8da = {
        0x0: this['nonZombiePlayersCount'],
        0x1: this['zombieCount']
    };
_0xd3db61 = _0x223895 ? 0x1 : 0x0;
var _0x3dec35 = new _0x1a47ea({
        'pad': 0x1e,
        'canvas': this['pieChartCanvas'],
        'data': _0x52a8da,
        'colors': this['teamColors']
    }),
    _0x4d4044 = 0x37,
    _0x176940 = 0x28,
    _0x52bf66 = 0x5,
    _0x36d72e = 0xc8,
    _0x2ea6cc = 0xc8;
_0x4d4044 = _0x36d72e + _0x52bf66 * 0x2, this['pieChartCanvas']['width'] = _0x2ea6cc + _0x52bf66 * 0x2, this['pieChartCanvas']['height'] = _0x4d4044, _0x3dec35['draw'](), _0x63f125['globalAlpha'] = 0.2;
var _0x75e231 = _0x52bf66;
_0x63f125['globalAlpha'] = 0.5, _0x63f125['fillStyle'] = 'white', _0x63f125['font'] = '20px Arial';
var _0x75e231 = 0xc8;
str = _0xcc7143['name'], _0x63f125['fillText'](str, this['pieChartCanvas']['width'] / 0x2 - _0x63f125['measureText'](str)['width'] / 0x2 - 0xf, _0x75e231);
}, _0x343a4a['prototype']['endScreenDisplayed'] = ![], _0x343a4a['prototype']['buildEndScreenHTML'] = function (_0x5c4a02) {
if (this['endScreenDisplayed']) return;
this['endScreenDisplayed'] = !![];
var _0x38a0dc = '';
_0x38a0dc += '<div class=\'msg\'>YOU WERE #' + _0x5c4a02['rank'] + '</div>', _0x38a0dc += '<div class=\'row\'>', _0x38a0dc += '<div class=\'label\'>Killed by:</div>', _0x38a0dc += '<div class=\'value2\'>' + _0x5c4a02['killedBy'] + '</div>', _0x38a0dc += '</div>', _0x38a0dc += '<div class=\'row\'>', _0x38a0dc += '<div class=\'col1\'>', _0x38a0dc += '<div class=\'label\'>Time alive:</div>', _0x38a0dc += '<div class=\'value\'>' + _0x1a2910(_0x5c4a02['timeAlive']) + '</div>', _0x38a0dc += '</div>', _0x38a0dc += '<div class=\'col2\'>', _0x38a0dc += '<div class=\'label\'>Total kills:</div>', _0x38a0dc += '<div class=\'value\'>' + _0x5c4a02['totalKills'] + '</div>', _0x38a0dc += '</div>', _0x38a0dc += '</div>', _0x38a0dc += '<div class=\'row\'>', _0x38a0dc += '<div class=\'col1\'>', _0x38a0dc += '<div class=\'label\'>Top rank:</div>', _0x38a0dc += '<div class=\'value\'>' + _0x5c4a02['topRank'] + '</div>', _0x38a0dc += '</div>', _0x38a0dc += '<div class=\'col2\'>', _0x38a0dc += '<div class=\'label\'>Max xp:</div>', _0x38a0dc += '<div class=\'value\'>' + _0x33bfab(_0x5c4a02['maxXP']) + '</div>', _0x38a0dc += '</div>', _0x38a0dc += '</div>', _0x38a0dc += '<div style=\'clear:both;\'></div>', _0x38a0dc += '<div class=\'btnDiv\'>', _0x38a0dc += '<button id=\'btnMopeOptions\' class=\'btn\'>      CONTINUE      </button>', _0x38a0dc += '</div>', _0x38a0dc += '<div style=\'clear:both;\'></div>';
var _0x3738e4 = document['getElementById']('endScreen');
_0x3738e4 && (_0x3738e4['innerHTML'] = _0x38a0dc, _0x3738e4['style']['display'] = 'block'), (!_0x3c6c95 || isGhost) && _0x51ff85();
}, _0x343a4a['prototype']['endScreenCanvas'] = null, _0x343a4a['prototype']['buildEndScreen'] = function (_0x3d5933, _0x4e5f93) {
if (this['endScreenCanvas'] == null) this['endScreenCanvas'] = document['createElement']('canvas');
if (this['endScreenCanvas'] == null) return;
var _0x415cd6 = this['endScreenCanvas']['getContext']('2d'),
    _0x55e6eb = 0x37,
    _0x266959 = 0x28,
    _0x99f1a8 = 0x5,
    _0x518b9e = 0xf0,
    _0x3bc6c1 = 0x1a4;
_0x55e6eb = _0x518b9e + _0x99f1a8 * 0x2, this['endScreenCanvas']['width'] = _0x3bc6c1 + _0x99f1a8 * 0x2, this['endScreenCanvas']['height'] = _0x55e6eb, _0x415cd6['globalAlpha'] = 0.2, _0x415cd6['fillStyle'] = '#000000', _0x415cd6['fillRect'](0x0, 0x0, this['endScreenCanvas']['width'], this['endScreenCanvas']['height']), _0x415cd6['fillStyle'] = '#000000', _0x415cd6['fillRect'](_0x99f1a8, _0x99f1a8, this['endScreenCanvas']['width'] - _0x99f1a8 * 0x2, this['endScreenCanvas']['height'] - _0x99f1a8 * 0x2);
var _0x14ee2f = _0x99f1a8;
_0x415cd6['globalAlpha'] = 0x1, _0x415cd6['fillStyle'] = '#FFFFFF', _0x415cd6['font'] = '30px Arial', _0x14ee2f += 0x37;
var _0x3d152c = 'Final Stats';
_0x415cd6['font'] = '30px Arial', _0x415cd6['fillText'](_0x3d152c, this['endScreenCanvas']['width'] / 0x2 - _0x415cd6['measureText'](_0x3d152c)['width'] / 0x2, _0x14ee2f), _0x415cd6['font'] = '20px Arial', _0x14ee2f += 0x2d, _0x3d152c = 'You were #' + _0x4e5f93['rank'], _0x415cd6['fillText'](_0x3d152c, this['endScreenCanvas']['width'] / 0x2 - _0x415cd6['measureText'](_0x3d152c)['width'] / 0x2, _0x14ee2f), _0x14ee2f += 0x28;
var _0x200699 = _0x1a2910(_0x4e5f93['timeAlive']),
    _0x2b17d8 = _0x99f1a8 + 0xf;
_0x50cdc3(_0x415cd6, 'Killed by', _0x4e5f93['killedBy'], _0x2b17d8, _0x14ee2f), _0x14ee2f += 0x28, _0x50cdc3(_0x415cd6, 'Time Alive', _0x1a2910(_0x4e5f93['timeAlive']), _0x2b17d8, _0x14ee2f), _0x2b17d8 += 0xd2, _0x50cdc3(_0x415cd6, 'Total Kills', _0x4e5f93['totalKills'], _0x2b17d8, _0x14ee2f), _0x14ee2f += 0x28, _0x2b17d8 = _0x99f1a8 + 0xf, _0x50cdc3(_0x415cd6, 'Top rank', _0x4e5f93['topRank'], _0x2b17d8, _0x14ee2f), _0x2b17d8 += 0xd2, _0x50cdc3(_0x415cd6, 'Max XP', _0x33bfab(_0x4e5f93['maxXP']), _0x2b17d8, _0x14ee2f), _0x14ee2f += 0x32;
};
var _0x458f43 = function (_0xe1cd53, _0x4edfcd, _0x41edae, _0x1387ec, _0x4e0da2, _0x89a25d, _0x2f1e9a) {
_0xe1cd53['save'](), _0xe1cd53['globalAlpha'] = _0x4e0da2, _0xe1cd53['fillStyle'] = _0x1387ec, _0xe1cd53['rotate'](_0x41edae), _0xe1cd53['save'](), _0xe1cd53['strokeStyle'] = 'white', _0xe1cd53['beginPath'](), _0xe1cd53['arc'](0x0, 0x0, _0x4edfcd, 0x0, Math['PI'] * 0.5, ![]), _0xe1cd53['stroke'](), _0xe1cd53['restore'](), _0xe1cd53['save'](), _0xe1cd53['beginPath'](), _0xe1cd53['arc'](0x0, 0x0, _0x4edfcd, 0x0, Math['PI'] * 0.5, ![]), _0xe1cd53['lineTo'](0x0, _0x89a25d), _0xe1cd53['lineTo'](_0x2f1e9a, _0x89a25d), _0xe1cd53['lineTo'](_0x2f1e9a, 0x0), _0xe1cd53['closePath'](), _0xe1cd53['fill'](), _0xe1cd53['restore'](), _0xe1cd53['restore']();
};
_0x343a4a['prototype']['lastWastedPopupT'] = 0x0, _0x343a4a['prototype']['onPlayerWasted'] = function (_0x3c672b) {
if ((_0x740c5b - this['lastWastedPopupT']) / 0x3e8 > 0.7) {
    this['lastWastedPopupT'] = _0x740c5b;
    var _0x4489fb = new _0x1bfd98(_0x3c672b + ' wasted!', 0x28, 'red', 0x5dc);
    this['wastedPopups']['push'](_0x4489fb);
}
}, window['ZombieMode'] = _0x343a4a;
var _0x1e3c43 = _0xca692b;
_0x30eedb['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x30eedb['prototype']['constructor'] = _0x30eedb, _0x30eedb['superClass'] = _0x1e3c43, _0x30eedb['prototype']['safeArea'] = null;
var _0x223895 = ![];
_0x30eedb['prototype']['wastedPopups'] = [], _0x30eedb['prototype']['playerDisplayNum'] = 0x0, _0x30eedb['prototype']['setServerPlayerCount'] = function () {
if (this['playerDisplayNum'] == 0x0) _0x4ea12d['setText'](_0x5f03df(_0x6ff4bc) + ' mopers');
else _0x4ea12d['setText'](_0x5f03df(_0x3adb24) + ' on server');
this['playerDisplayNum'] = this['playerDisplayNum'] == 0x0 ? 0x1 : 0x0;
}, _0x30eedb['prototype']['interface'] = function () {
if (this['state'] == -0x1 || this['mode'] != _0x5dd9a5) return;
if (_0x3c6c95)
    for (var _0x5ab08c = this['wastedPopups']['length'] - 0x1; _0x5ab08c >= 0x0; _0x5ab08c--) {
        var _0x18bb87 = this['wastedPopups'][_0x5ab08c];
        _0x18bb87['draw']();
        if (_0x18bb87['timedOut']) this['wastedPopups']['splice'](_0x5ab08c, 0x1);
    }
if (this['endScreenCanvas'] != null) {
    this['endScreenCanvas']['width'] && _0x1d2dab['drawImage'](this['endScreenCanvas'], _0x1bcf68 / 0x2 - this['endScreenCanvas']['width'] / 0x2, 0xf * _0x4ffcf2, this['endScreenCanvas']['width'], this['endScreenCanvas']['height']);
    if (!_0x3c6c95 || isGhost) _0x36e784(!![]);
}
this['drawInterfaceButtons'](), this['gameMode_screenMsg']();
}, _0x30eedb['prototype']['interfaceReset'] = function () {
this['endScreenCanvas'] = null, this['dangerCircleMiniMapCanvas'] = null, this['wastedPopups'] = [], this['lastWastedPopupT'] = 0x0, this['playercount'] = 0x0, this['safeArea'] = null, _0x2a6223 = null, _0x27df64 = null;
if (this['interfaceButtons'])
    for (var _0x33df52 = 0x0; _0x33df52 < this['interfaceButtons']['length']; _0x33df52++) {
        var _0x412f70 = this['interfaceButtons'][_0x33df52];
        _0x412f70['onInterfaceReset']();
    }
this['interfaceButtons'] = [];
}, _0x30eedb['prototype']['onInit'] = function () {}, _0x30eedb['prototype']['playercount'] = 0x0, _0x30eedb['prototype']['setPlayerCount'] = function (_0x15f0ec) {
this['playercount'] = _0x15f0ec;
}, _0x30eedb['prototype']['showPlayerCount'] = function () {
_0x1d2dab['save']();
var _0x12e839 = _0x1bcf68 / 0x2,
    _0x9172af = 0x32 * _0x32b8d4,
    _0x4e2818 = 0x12c * _0x32b8d4;
_0x1d2dab['globalAlpha'] = 0.35, _0x1d2dab['fillStyle'] = 'black';
var _0x18f784 = 0x1e * _0x32b8d4;
_0x1d2dab['fillRect'](_0x12e839 - _0x4e2818 / 0x2, _0x18f784, _0x4e2818, _0x9172af), _0x1d2dab['globalAlpha'] = 0x1, _0x1d2dab['fillStyle'] = 'white', _0x1d2dab['font'] = 0x1e * _0x32b8d4 + 'px Arial', _0x1d2dab['lineWidth'] = 0x1, _0x1d2dab['textAlign'] = 'center', _0x1d2dab['textBaseline'] = 'middle', _0x1d2dab['shadowOffsetX'] = 0x1, _0x1d2dab['shadowOffsetY'] = 0x1, _0x1d2dab['shadowColor'] = 'black', _0x18f784 += 0x19 * _0x32b8d4;
var _0x2d8d72 = ' player';
if (this['playercount'] > 0x1) _0x2d8d72 += 's';
if (this['state'] == battleRoyal_inProgress) _0x2d8d72 += ' alive!';
else {
    if (this['state'] == _0x546525 || this['state'] == battleRoyal_ready) _0x2d8d72 += ' joined';
}
_0x1d2dab['fillText'](this['playercount'] + _0x2d8d72, _0x12e839, _0x18f784), _0x1d2dab['restore']();
}, _0x30eedb['prototype']['lbCanvas'] = null, _0x30eedb['prototype']['leaderboard'] = function (_0x5b6b89) {
if (this['lbCanvas'] == null) this['lbCanvas'] = document['createElement']('canvas');
if (_0x5b6b89) {
    var _0x2ac07e = this['lbCanvas']['getContext']('2d'),
        _0x3196f8 = 0x37,
        _0x464f7f = 0x16;
    _0x3196f8 = _0x3196f8 + _0x464f7f * _0x5b6b89['length'], this['lbCanvas']['width'] = 0x10e, this['lbCanvas']['height'] = _0x3196f8, _0x2ac07e['globalAlpha'] = 0.2, _0x2ac07e['fillStyle'] = '#000000', _0x2ac07e['fillRect'](0x0, 0x0, this['lbCanvas']['width'], this['lbCanvas']['height']), _0x2ac07e['globalAlpha'] = 0x1, _0x2ac07e['fillStyle'] = '#FFFFFF';
    var _0x20c85c = _0xcc7143['name'];
    _0x2ac07e['font'] = '24px Arial';
    !options_lowGraphics && (_0x2ac07e['shadowOffsetX'] = 0x1, _0x2ac07e['shadowOffsetY'] = 0x1);
    _0x2ac07e['shadowColor'] = 'black', _0x2ac07e['fillText'](_0x20c85c, this['lbCanvas']['width'] / 0x2 - _0x2ac07e['measureText'](_0x20c85c)['width'] / 0x2, 0x28);
    var _0x346906;
    _0x2ac07e['textAlign'] = 'left';
    for (_0x2ac07e['font'] = '17px Arial', _0x346906 = 0x0; _0x346906 < _0x5b6b89['length']; ++_0x346906) {
        _0x20c85c = _0x49a9c3 ? '' : _0x5b6b89[_0x346906]['name'] || 'mope.io', _0x20c85c += ' (' + _0x33bfab(_0x5b6b89[_0x346906]['xp']) + ')', _0x2ac07e['fillStyle'] = '#FFFFFF', _0x2ac07e['fillText'](_0x20c85c, 0xf, 0x41 + _0x464f7f * _0x346906);
    }
}
}, _0x30eedb['prototype']['drawLeaderboard'] = function () {
_0x3c6c95 && (this['pieChartCanvas'] != null && (this['pieChartCanvas']['width'] && _0x1d2dab['drawImage'](this['pieChartCanvas'], 0x14 * _0x4ffcf2, 0x14 * _0x4ffcf2, this['pieChartCanvas']['width'], this['pieChartCanvas']['height'])));
if (_0x2a6223) _0x432b7f();
}, _0x30eedb['prototype']['btnPlayAgain'] = null, _0x30eedb['prototype']['showStats'] = !![], _0x30eedb['prototype']['interfaceButtons'] = [], _0x30eedb['prototype']['createInterfaceButtons'] = function () {
this['interfaceButtons'] = [];
}, _0x30eedb['prototype']['drawInterfaceButtons'] = function () {
if (this['interfaceButtons'])
    for (var _0x3c8334 = 0x0; _0x3c8334 < this['interfaceButtons']['length']; _0x3c8334++) {
        var _0x1ba023 = this['interfaceButtons'][_0x3c8334];
        _0x1ba023['isVisible'] && _0x1ba023['draw']();
    }
}, _0x30eedb['prototype']['onResize'] = function () {
this['drawInterfaceButtons']();
}, _0x30eedb['prototype']['readPlayerStats'] = function (_0x3568c3) {
var _0x5c443d = [];
return _0x5c443d['rank'] = _0x3568c3['readUInt16'](), _0x5c443d['timeAlive'] = _0x3568c3['readUInt16'](), _0x5c443d['totalKills'] = _0x3568c3['readUInt16'](), _0x5c443d['topRank'] = _0x3568c3['readUInt16'](), _0x5c443d['maxXP'] = _0x3568c3['readUInt32'](), _0x5c443d['killedBy'] = _0x3568c3['readString'](), _0x5c443d;
}, _0x30eedb['prototype']['playerInfo'] = function (_0x3eda27) {
if (isGhost && !_0x5102a2) {
    var _0x268945 = this['readPlayerStats'](_0x3eda27);
    this['buildEndScreenHTML'](_0x268945);
} else !isGhost && (this['endScreenCanvas'] = null);
};
var _0x546525 = 0x0,
_0x5d02bf = 0x1,
_0x5d02bf = 0x1,
_0x394cfd = 0x2,
_0x54226b = 0x4,
_0x299704 = 0x4;
_0x30eedb['prototype']['worldUpdate'] = function (_0xec853a) {
_0x3f40a3 = _0xec853a['readUInt8']();
if (_0x3f40a3 == _0x394cfd) {
    var _0x16e877 = minimapW / 0xc8,
        _0x2018e2 = minimapH / 0xc8,
        _0x582471 = _0xec853a['readUInt32']() * _0x16e877,
        _0x3a90c0 = _0xec853a['readUInt32']() * _0x2018e2,
        _0x187b89 = _0xec853a['readUInt32']() * 0x5;
    _0x2a6223 = {
        'x': _0x582471,
        'y': _0x3a90c0,
        'rad': _0x187b89 * (minimapW / _0x1f4cd2)
    };
} else _0x2a6223 = null;
}, _0x30eedb['prototype']['handleMessage'] = function (_0x1db25c) {
var _0x54159e = _0x1db25c['readUInt8']();
switch (_0x54159e) {
case _0x8f0cbc: {
    var _0x27e21b = _0x1db25c['readString']();
    this['setStatusBarMessage'](_0x27e21b, 0xf);
    break;
}
case _0x491d51: {
    this['alivePlayers'] = _0x1db25c['readUInt16'](), this['playerCountMsg'] = _0x1db25c['readString'](), this['setPlayerCountMsg']();
    break;
}
case _0x420e56: {
    this['timeRemain'] = _0x1db25c['readUInt16']();
    break;
}
case 0x21: {
    var _0x58fc1e = _0x1db25c['readUInt16']();
    isGhost = !![], this['showStats'] = !![], _0x2790d1 = ![], _0x4a8d9c();
}
break;
case 0x22: {
    _0x1b3d11 = 'You WON!', respawnXp = 0x0, _0x47970c = 0x50, _0x30c966 = 'limegreen', _0x17a598 = +new Date() + 0x1388, _0x2790d1 = ![], _0x4a8d9c();
}
break;
case 0x23: {}
break;
case 0x24: {
    var _0x2dd8ce = _0x1db25c['readUInt8'](),
        _0x37d45d = [];
    for (_0x275b2f = 0x0; _0x275b2f < _0x2dd8ce; ++_0x275b2f) {
        _0x37d45d['push']({
            'name': _0x1db25c['readString'](),
            'xp': _0x1db25c['readUInt32']()
        });
    }
    this['leaderboard'](_0x37d45d);
}
break;
case 0x25: {
    var _0x14a719 = _0x1db25c['readUInt16'](),
        _0x5d50d3 = _0x1a2910(_0x14a719);
    if (this['state'] == 0x4) {
        var _0x27e21b = 'Game restarts in ' + _0x5d50d3;
        if (_0x14a719 < 0x3) _0x27e21b = 'Starting new game';
        this['setMessage'](_0x27e21b, 0x1f4);
    } else {
        var _0x27e21b = 'Battle begins in ' + _0x5d50d3;
        if (_0x14a719 < 0x3) {
            if (_0x5d50d3 == '') _0x27e21b = 'Starting new battle!';
            else _0x27e21b = 'Starting new battle! (' + _0x5d50d3 + ')';
        }
        this['setMessage'](_0x27e21b, 0x1f4), _0x14a719 == 0x0 && _0xbd0373('SURVIVE!', 0x9c4);
    }
}
break;
case 0x26: {
    this['playersJoined'] = _0x1db25c['readUInt16']();
    if (this['playersJoined'] > 0x0) this['setPlayerCount'](this['playersJoined']);
}
break;
case 0x27: {
    var _0x14a719 = _0x1db25c['readUInt16'](),
        _0x5d50d3 = _0x1a2910(_0x14a719);
    if (!isGhost) {
        var _0x27e21b = 'Heatwave expanding in ' + _0x5d50d3;
        if (_0x14a719 < 0x4) _0x27e21b = 'Heatwave expands now!';
        this['setMessage'](_0x27e21b, 0x1f4), _0x14a719 == 0x0 && _0xbd0373('STAY SAFE!', 0x9c4);
    }
}
break;
case 0x28: {
    if (isGhost) this['setMessage']('You have been eliminated!', 0x1f4);
    else this['setMessage']('Stay in safe area!', 0x1f4);
}
break;
case 0x29: {
    _0x3f40a3 = this['state'] = _0x1db25c['readUInt8'](), this['playersJoined'] = _0x1db25c['readUInt16']();
    if (this['playersJoined'] > 0x0) this['setPlayerCount'](this['playersJoined']);
    if (this['state'] == _0x546525) this['setMessage']('Waiting for players', 0x3e8);
    else this['state'] == battleRoyal_gameReset && _0x399ba2();
}
break;
case 0x2a: {
    var _0x5da220 = _0x1db25c['readUInt8']() == 0x1;
    if (_0x5da220) this['setMessage']('You WON!', 0x3a98);
    else this['setMessage']('You LOST!', 0x3a98);
}
break;
case 0x2b: {
    _0x44cfe6 = !![], _0x26f437() && _0x48de51['close']();
}
break;
case 0x2c: {
    var _0x452880 = _0x1db25c['readString']();
    if (_0x452880 && _0x452880['length'] > 0x0) this['onPlayerWasted'](_0x452880);
}
break;
case 0x2d: {
    console['log']('Msg_battleroyal_endScreen');
    var _0x585dcc = null,
        _0x47df26 = 0x0;
    !_0xfd0710 ? (_0x585dcc = this['readPlayerStats'](_0x1db25c), _0x47df26 = _0x585dcc['totalPlayers']) : _0x47df26 = _0x1db25c['readUInt16']();
    var _0x528bf1 = [];
    if (_0x47df26 > 0x0) {
        if (_0x47df26 > 0x5) _0x47df26 = 0x5;
        for (var _0x275b2f = 0x0; _0x275b2f < _0x47df26; ++_0x275b2f) {
            _0x528bf1['push']({
                'playerName': _0x1db25c['readString'](),
                'wins': _0x1db25c['readUInt8']()
            });
        }
    }(_0x528bf1 != null || _0x585dcc != null) && (this['endScreenDisplayed'] = ![], this['buildEndScreenHTML'](_0x528bf1, _0x585dcc));
}
break;
case 0x2e: {
    var _0x14a719 = _0x1db25c['readUInt16']();
    if (_0x14a719 == 0x0) this['setMessage']('Battle Ended', 0x1f4);
    else {
        var _0x5d50d3 = _0x1a2910(_0x14a719);
        if (!isGhost) this['setMessage']('Battle Ending in ' + _0x5d50d3, 0x1f4);
    }
}
case 0x30: {
    var _0x585dcc = this['readPlayerStats'](_0x1db25c);
    this['buildEndScreen'](null, _0x585dcc);
}
}
};
var _0x27df64 = null;

function _0x432b7f() {
if (!_0x27df64) _0x27df64 = document['createElement']('canvas');
_0x27df64['width'] = minimapW, _0x27df64['height'] = minimapH;
var _0x44e3bd = _0x27df64['getContext']('2d');
_0x44e3bd['clearRect'](0x0, 0x0, _0x27df64['width'], _0x27df64['height']), _0x44e3bd['save']();
var _0x35410a = Math['max'](0x3, _0x2a6223['rad']),
    _0x3c0854 = _0x2a6223['x'],
    _0x463d66 = _0x2a6223['y'];
_0x44e3bd['translate'](_0x3c0854, _0x463d66), _0x44e3bd['save'](), _0x44e3bd['globalAlpha'] = 0x1, _0x252f27(_0x44e3bd, 0x0, 0x0, _0x2a6223['rad'], 0x5, 'white'), _0x44e3bd['restore']();
var _0x56d5a1 = _0x32b8d4 * minimapW * 1.5,
    _0x179912 = _0x32b8d4 * minimapH * 1.5,
    _0x458822 = 0x1,
    _0x15d993 = 'red';
_0x458f43(_0x44e3bd, _0x2a6223['rad'], Math['PI'] * 0x0, _0x15d993, _0x458822, _0x56d5a1, _0x179912), _0x458f43(_0x44e3bd, _0x2a6223['rad'], Math['PI'] * 0.5, _0x15d993, _0x458822, _0x56d5a1, _0x179912), _0x458f43(_0x44e3bd, _0x2a6223['rad'], Math['PI'] * 0x1, _0x15d993, _0x458822, _0x56d5a1, _0x179912), _0x458f43(_0x44e3bd, _0x2a6223['rad'], Math['PI'] * 1.5, _0x15d993, _0x458822, _0x56d5a1, _0x179912), _0x44e3bd['restore'](), _0x27df64 && _0x1d2dab['drawImage'](_0x27df64, _0x1bcf68 - (0xa * _0x4ffcf2 + _0x2e5deb['width'] * _0x32b8d4), 0xa * _0x4ffcf2, minimapW * _0x32b8d4, minimapH * _0x32b8d4);
}
_0x30eedb['prototype']['drawZombiePlayers'] = function () {
if (this['zombiePlayers'])
    for (t = 0x0; t < this['zombiePlayers']['length']; t++) {
        _0x388242(this['zombiePlayers'][t], '#adff32', 0x1);
    }
}, _0x30eedb['prototype']['drawMap'] = function () {
this['buildPieChart']();
if (!_0x223895) this['drawZombiePlayers']();
}, _0x30eedb['prototype']['pieChartCanvas'] = null, _0x30eedb['prototype']['teamColors'] = {
0x0: 'white',
0x1: '#B6CF40'
}, _0x30eedb['prototype']['buildPieChart'] = function () {
if (this['pieChartCanvas'] == null) this['pieChartCanvas'] = document['createElement']('canvas');
if (this['pieChartCanvas'] == null) return;
var _0x3b7046 = this['pieChartCanvas']['getContext']('2d'),
    _0x45bd6a = {
        0x0: this['nonZombiePlayersCount'],
        0x1: this['zombieCount']
    };
_0xd3db61 = _0x223895 ? 0x1 : 0x0;
var _0xa857f8 = new _0x1a47ea({
        'pad': 0x1e,
        'canvas': this['pieChartCanvas'],
        'data': _0x45bd6a,
        'colors': this['teamColors']
    }),
    _0x212230 = 0x37,
    _0x6e9ab0 = 0x28,
    _0x2f4b7a = 0x5,
    _0x14112b = 0xc8,
    _0xd468c2 = 0xc8;
_0x212230 = _0x14112b + _0x2f4b7a * 0x2, this['pieChartCanvas']['width'] = _0xd468c2 + _0x2f4b7a * 0x2, this['pieChartCanvas']['height'] = _0x212230, _0xa857f8['draw'](), _0x3b7046['globalAlpha'] = 0.2;
var _0x4f9158 = _0x2f4b7a;
_0x3b7046['globalAlpha'] = 0.5, _0x3b7046['fillStyle'] = 'white', _0x3b7046['font'] = '20px Arial';
var _0x4f9158 = 0xc8;
str = _0xcc7143['name'], _0x3b7046['fillText'](str, this['pieChartCanvas']['width'] / 0x2 - _0x3b7046['measureText'](str)['width'] / 0x2 - 0xf, _0x4f9158);
}, _0x30eedb['prototype']['endScreenDisplayed'] = ![], _0x30eedb['prototype']['buildEndScreenHTML'] = function (_0x42a345) {
if (this['endScreenDisplayed']) return;
this['endScreenDisplayed'] = !![];
var _0x55f48f = '';
_0x55f48f += '<div class=\'msg\'>YOU WERE #' + _0x42a345['rank'] + '</div>', _0x55f48f += '<div class=\'row\'>', _0x55f48f += '<div class=\'label\'>Killed by:</div>', _0x55f48f += '<div class=\'value2\'>' + _0x42a345['killedBy'] + '</div>', _0x55f48f += '</div>', _0x55f48f += '<div class=\'row\'>', _0x55f48f += '<div class=\'col1\'>', _0x55f48f += '<div class=\'label\'>Time alive:</div>', _0x55f48f += '<div class=\'value\'>' + _0x1a2910(_0x42a345['timeAlive']) + '</div>', _0x55f48f += '</div>', _0x55f48f += '<div class=\'col2\'>', _0x55f48f += '<div class=\'label\'>Total kills:</div>', _0x55f48f += '<div class=\'value\'>' + _0x42a345['totalKills'] + '</div>', _0x55f48f += '</div>', _0x55f48f += '</div>', _0x55f48f += '<div class=\'row\'>', _0x55f48f += '<div class=\'col1\'>', _0x55f48f += '<div class=\'label\'>Top rank:</div>', _0x55f48f += '<div class=\'value\'>' + _0x42a345['topRank'] + '</div>', _0x55f48f += '</div>', _0x55f48f += '<div class=\'col2\'>', _0x55f48f += '<div class=\'label\'>Max xp:</div>', _0x55f48f += '<div class=\'value\'>' + _0x33bfab(_0x42a345['maxXP']) + '</div>', _0x55f48f += '</div>', _0x55f48f += '</div>', _0x55f48f += '<div style=\'clear:both;\'></div>', _0x55f48f += '<div class=\'btnDiv\'>', _0x55f48f += '<button id=\'btnMopeOptions\' class=\'btn\'>      CONTINUE      </button>', _0x55f48f += '</div>', _0x55f48f += '<div style=\'clear:both;\'></div>';
var _0x13b14b = document['getElementById']('endScreen');
_0x13b14b && (_0x13b14b['innerHTML'] = _0x55f48f, _0x13b14b['style']['display'] = 'block'), (!_0x3c6c95 || isGhost) && _0x36e784(!![]);
}, _0x30eedb['prototype']['endScreenCanvas'] = null, _0x30eedb['prototype']['buildEndScreen'] = function (_0x13d863, _0x4b0978) {
if (this['endScreenCanvas'] == null) this['endScreenCanvas'] = document['createElement']('canvas');
if (this['endScreenCanvas'] == null) return;
var _0x2c1419 = this['endScreenCanvas']['getContext']('2d'),
    _0x502992 = 0x37,
    _0x1efd82 = 0x28,
    _0x412305 = 0x5,
    _0x52a682 = 0xf0,
    _0x39852c = 0x1a4;
_0x502992 = _0x52a682 + _0x412305 * 0x2, this['endScreenCanvas']['width'] = _0x39852c + _0x412305 * 0x2, this['endScreenCanvas']['height'] = _0x502992, _0x2c1419['globalAlpha'] = 0.2, _0x2c1419['fillStyle'] = '#000000', _0x2c1419['fillRect'](0x0, 0x0, this['endScreenCanvas']['width'], this['endScreenCanvas']['height']), _0x2c1419['fillStyle'] = '#000000', _0x2c1419['fillRect'](_0x412305, _0x412305, this['endScreenCanvas']['width'] - _0x412305 * 0x2, this['endScreenCanvas']['height'] - _0x412305 * 0x2);
var _0x47f403 = _0x412305;
_0x2c1419['globalAlpha'] = 0x1, _0x2c1419['fillStyle'] = '#FFFFFF', _0x2c1419['font'] = '30px Arial', _0x47f403 += 0x37;
var _0x5c1bca = 'Final Stats';
_0x2c1419['font'] = '30px Arial', _0x2c1419['fillText'](_0x5c1bca, this['endScreenCanvas']['width'] / 0x2 - _0x2c1419['measureText'](_0x5c1bca)['width'] / 0x2, _0x47f403), _0x2c1419['font'] = '20px Arial', _0x47f403 += 0x2d, _0x5c1bca = 'You were #' + _0x4b0978['rank'], _0x2c1419['fillText'](_0x5c1bca, this['endScreenCanvas']['width'] / 0x2 - _0x2c1419['measureText'](_0x5c1bca)['width'] / 0x2, _0x47f403), _0x47f403 += 0x28;
var _0x553c09 = _0x1a2910(_0x4b0978['timeAlive']),
    _0x3f5538 = _0x412305 + 0xf;
_0x50cdc3(_0x2c1419, 'Killed by', _0x4b0978['killedBy'], _0x3f5538, _0x47f403), _0x47f403 += 0x28, _0x50cdc3(_0x2c1419, 'Time Alive', _0x1a2910(_0x4b0978['timeAlive']), _0x3f5538, _0x47f403), _0x3f5538 += 0xd2, _0x50cdc3(_0x2c1419, 'Total Kills', _0x4b0978['totalKills'], _0x3f5538, _0x47f403), _0x47f403 += 0x28, _0x3f5538 = _0x412305 + 0xf, _0x50cdc3(_0x2c1419, 'Top rank', _0x4b0978['topRank'], _0x3f5538, _0x47f403), _0x3f5538 += 0xd2, _0x50cdc3(_0x2c1419, 'Max XP', _0x33bfab(_0x4b0978['maxXP']), _0x3f5538, _0x47f403), _0x47f403 += 0x32;
};
var _0x458f43 = function (_0x13664b, _0x53987f, _0x4d901b, _0x56248, _0x4a1a85, _0x2394b7, _0x1b7e51) {
_0x13664b['save'](), _0x13664b['globalAlpha'] = _0x4a1a85, _0x13664b['fillStyle'] = _0x56248, _0x13664b['rotate'](_0x4d901b), _0x13664b['save'](), _0x13664b['strokeStyle'] = 'white', _0x13664b['beginPath'](), _0x13664b['arc'](0x0, 0x0, _0x53987f, 0x0, Math['PI'] * 0.5, ![]), _0x13664b['stroke'](), _0x13664b['restore'](), _0x13664b['save'](), _0x13664b['beginPath'](), _0x13664b['arc'](0x0, 0x0, _0x53987f, 0x0, Math['PI'] * 0.5, ![]), _0x13664b['lineTo'](0x0, _0x2394b7), _0x13664b['lineTo'](_0x1b7e51, _0x2394b7), _0x13664b['lineTo'](_0x1b7e51, 0x0), _0x13664b['closePath'](), _0x13664b['fill'](), _0x13664b['restore'](), _0x13664b['restore']();
};
_0x30eedb['prototype']['lastWastedPopupT'] = 0x0, _0x30eedb['prototype']['onPlayerWasted'] = function (_0x53812a) {
if ((_0x740c5b - this['lastWastedPopupT']) / 0x3e8 > 0.7) {
    this['lastWastedPopupT'] = _0x740c5b;
    var _0x327f5c = new _0x1bfd98(_0x53812a + ' wasted!', 0x28, 'red', 0x5dc);
    this['wastedPopups']['push'](_0x327f5c);
}
}, _0x30eedb['prototype']['screenTextEndT'] = 0x0, _0x30eedb['prototype']['screenTextMsg'] = '', _0x30eedb['prototype']['setMessage'] = function (_0x163d99, _0x1c7834) {
this['screenTextMsg'] = _0x163d99;
if (_0x1c7834 == 0x0) this['screenTextEndT'] = +new Date() + _0x1c7834;
else this['screenTextEndT'] = +new Date() + _0x1c7834;
}, _0x30eedb['prototype']['screenMessage'] = function () {
var _0x4574fe = 0x1,
    _0x184eae = (this['screenTextEndT'] - _0x740c5b) / 0x3e8 / _0x4574fe;
_0x184eae = 0x0 > _0x184eae ? 0x0 : 0x1 < _0x184eae ? 0x1 : _0x184eae;
if (_0x184eae > 0x0) {
    _0x1d2dab['save']();
    var _0x27e70c = _0x1bcf68 / 0x2,
        _0x14f18a = 0x3c * _0x32b8d4,
        _0x358294 = (_0x1bcf68 / 0x2 - 0x64) * _0x32b8d4;
    _0x1d2dab['globalAlpha'] = 0.35, _0x1d2dab['fillStyle'] = 'black';
    var _0x54d293 = _0x157802 - _0x157802 * 0.2;
    _0x1d2dab['fillRect'](_0x27e70c - _0x358294 / 0x2, _0x54d293 - _0x14f18a / 0x2, _0x358294, _0x14f18a), _0x1d2dab['globalAlpha'] = 0x1, _0x1d2dab['globalAlpha'] = _0x184eae, _0x1d2dab['globalAlpha'] = 0x1, _0x1d2dab['fillStyle'] = 'white', _0x1d2dab['font'] = 0x28 * _0x32b8d4 + 'px Arial', _0x1d2dab['lineWidth'] = 0x1, _0x1d2dab['textAlign'] = 'center', _0x1d2dab['textBaseline'] = 'middle', _0x1d2dab['shadowOffsetX'] = 0x1, _0x1d2dab['shadowOffsetY'] = 0x1, _0x1d2dab['shadowColor'] = 'black', _0x1d2dab['fillText'](this['screenTextMsg'], _0x1bcf68 / 0x2, _0x54d293), _0x1d2dab['restore']();
}
};
var _0x58000e = new Array();
_0x30eedb['prototype']['setStatusBarMessage'] = function (_0x140bdd, _0x12f4d4) {
var _0x2f7ddf = 0x28,
    _0x12c140 = 0x1,
    _0x158146 = 'white',
    _0x28e186 = _0x1bcf68 / 0x2,
    _0x950fa8 = _0x157802 - _0x157802 * 0.15,
    _0x1ecbce = _0x1bcf68 / 0x2 - 0x64,
    _0x4425f4 = 0x3c,
    _0x36d1ae = 'black',
    _0x534945 = 0.1,
    _0x394410 = +new Date() + _0x12f4d4 * 0x3e8;
this['msg_statusbar'] = {
    'txt': _0x140bdd,
    'txt_size': _0x2f7ddf,
    'txt_alpha': _0x12c140,
    'txt_color': _0x158146,
    'x': _0x28e186,
    'y': _0x950fa8,
    'bg_w': _0x1ecbce,
    'bg_h': _0x4425f4,
    'bg_color': _0x36d1ae,
    'bg_alpha': _0x534945,
    'dur': _0x394410
};
}, _0x30eedb['prototype']['msg_statusbar'] = null, _0x30eedb['prototype']['msg_playerCount'] = null;
var _0x5fef47 = 0.1;
_0x30eedb['prototype']['setPlayerCountMsg'] = function () {
var _0x335180 = 0x14,
    _0x39eb90 = 0x1,
    _0x2520b3 = 'white',
    _0x866fe3 = _0x1bcf68 / 0x2,
    _0x3198ff = 0x1e,
    _0x5cf348 = 0x64,
    _0x1b88df = 0x28,
    _0x50af96 = 'black',
    _0x3de399 = 0.1,
    _0x1e5c7a = '';
this['playerCountMsg'] != 'alive' ? (_0x1b88df = 0x46, _0x1e5c7a = this['playerCountMsg'] + '\x0a' + this['alivePlayers'] + ' joined') : _0x1e5c7a = this['alivePlayers'] + ' alive';
var _0x4e011a = +new Date() + 0x3c * 0x3e8;
this['msg_playerCount'] = {
    'txt': _0x1e5c7a,
    'txt_size': _0x335180,
    'txt_alpha': _0x39eb90,
    'txt_color': _0x2520b3,
    'x': _0x866fe3,
    'y': _0x3198ff,
    'bg_w': _0x5cf348,
    'bg_h': _0x1b88df,
    'bg_color': _0x50af96,
    'bg_alpha': _0x3de399,
    'dur': _0x4e011a
};
}, _0x30eedb['prototype']['gameMode_screenMsg'] = function () {
if (this['msg_statusbar']) {
    this['drawMessage'](this['msg_statusbar']);
    if (this['msg_statusbar']['dur'] - _0x740c5b < 0x0) this['msg_statusbar'] = null;
}
this['msg_playerCount'] && this['drawMessage'](this['msg_playerCount']);
}, _0x30eedb['prototype']['drawMessage'] = function (_0x1db0c4) {
if (_0x1db0c4 && _0x1db0c4['txt']) this['drawMessageBar'](_0x1db0c4['txt'], _0x1db0c4['txt_size'], _0x1db0c4['txt_alpha'], _0x1db0c4['txt_color'], _0x1db0c4['x'], _0x1db0c4['y'], _0x1db0c4['bg_w'], _0x1db0c4['bg_h'], _0x1db0c4['bg_color'], _0x1db0c4['bg_alpha'], _0x1db0c4['dur']);
}, _0x30eedb['prototype']['drawMessageBar'] = function (_0x4e84c9, _0x21cc62, _0x38f149, _0x51cfbf, _0x494a1a, _0x3d2e0e, _0x195054, _0x5ed190, _0x265768, _0x2f0e52, _0x2f8976) {
var _0x52f099 = 0x1; {
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = _0x2f0e52, _0x1d2dab['fillStyle'] = _0x265768, _0x21cc62 = _0x21cc62 * _0x32b8d4, _0x1d2dab['font'] = _0x21cc62 + 'px Arial';
    var _0x4bd293 = _0x494a1a,
        _0x1e15c2 = _0x3d2e0e,
        _0x5340e7 = _0x4e84c9['split']('\x0a'),
        _0x154e09 = _0x21cc62 * _0x5340e7['length'] * 1.5 * _0x32b8d4,
        _0x47e011 = 0x0;
    for (var _0x48b4c9 = 0x0; _0x48b4c9 < _0x5340e7['length']; ++_0x48b4c9) {
        _0x47e011 = Math['max'](_0x47e011, _0x1d2dab['measureText'](_0x5340e7[_0x48b4c9])['width']);
    }
    _0x47e011 = _0x47e011 * 1.5 * _0x32b8d4, _0x1d2dab['fillRect'](_0x4bd293 - _0x47e011 / 0x2, _0x1e15c2 - _0x154e09 / 0x2, _0x47e011, _0x154e09), _0x1d2dab['globalAlpha'] = _0x38f149, _0x1d2dab['fillStyle'] = _0x51cfbf, _0x1d2dab['lineWidth'] = 0x1, _0x1d2dab['textAlign'] = 'center', _0x1d2dab['textBaseline'] = 'middle', _0x1d2dab['shadowOffsetX'] = 0x1, _0x1d2dab['shadowOffsetY'] = 0x1, _0x1d2dab['shadowColor'] = 'black';
    if (_0x5340e7['length'] > 0x1) _0x1e15c2 -= 0xa * _0x32b8d4;
    else _0x1e15c2 += 0x5 * _0x32b8d4;
    for (var _0x48b4c9 = 0x0; _0x48b4c9 < _0x5340e7['length']; _0x48b4c9++) {
        _0x1d2dab['fillText'](_0x5340e7[_0x48b4c9], _0x4bd293, _0x1e15c2), _0x1e15c2 += _0x21cc62 * (_0x48b4c9 + 0x1);
    }
    _0x1d2dab['restore']();
}
};

function _0x30eedb(_0x200644) {
this['mode'] = _0x31cada, this['chatAllowed'] = !![], this['createInterfaceButtons']();
}
window['BattleRoyale'] = _0x30eedb;
var _0x1a47ea = function (_0x254f3d) {
    this['options'] = _0x254f3d, this['radius'] = _0x254f3d['radius'], this['pad'] = _0x254f3d['pad'], this['canvas'] = _0x254f3d['canvas'], this['_ctx'] = this['canvas']['getContext']('2d'), this['colors'] = _0x254f3d['colors'], this['radius'] = Math['min'](this['canvas']['width'] / 0x2, this['canvas']['height'] / 0x2), this['draw'] = function () {
        var _0x27c391 = 0x0,
            _0x57c937 = 0x0;
        this['_ctx']['save'](), this['_ctx']['globalAlpha'] = 0.3, this['drawCircle'](this['canvas']['width'] / 0x2 - this['pad'] / 0x2, this['canvas']['height'] / 0x2 - this['pad'] / 0x2, this['radius'] - this['pad'], 'white'), this['_ctx']['restore']();
        for (var _0x462f6f in this['options']['data']) {
            var _0x390c60 = this['options']['data'][_0x462f6f];
            _0x27c391 += _0x390c60;
        }
        var _0x1f8694 = 0x0;
        for (_0x462f6f in this['options']['data']) {
            this['_ctx']['save'](), this['_ctx']['lineWidth'] = 0x4, this['_ctx']['strokeStyle'] = 'white', this['_ctx']['globalAlpha'] = 0.3;
            var _0x630c96 = 0x0;
            _0xd3db61 == _0x462f6f && (this['_ctx']['globalAlpha'] = 0.6, _0x630c96 = 0x8);
            _0x390c60 = this['options']['data'][_0x462f6f];
            var _0x13a863 = 0x2 * Math['PI'] * _0x390c60 / _0x27c391;
            this['drawPieSlice'](this['canvas']['width'] / 0x2 - this['pad'] / 0x2, this['canvas']['height'] / 0x2 - this['pad'] / 0x2, this['radius'] - this['pad'], _0x1f8694, _0x1f8694 + _0x13a863, this['colors'][_0x462f6f], _0x630c96), this['_ctx']['restore'](), _0x1f8694 += _0x13a863, _0x57c937++;
        }
    }, this['drawPieSlice'] = function (_0xfc71, _0x5b3ed2, _0x244f38, _0xcd3fee, _0x3d6e4d, _0x420479, _0x5be000) {
        this['_ctx']['fillStyle'] = _0x420479, this['_ctx']['beginPath'](), this['_ctx']['moveTo'](_0xfc71, _0x5b3ed2), this['_ctx']['arc'](_0xfc71, _0x5b3ed2, _0x244f38 + _0x5be000, _0xcd3fee, _0x3d6e4d), this['_ctx']['closePath'](), this['_ctx']['fill']();
        if (_0x5be000 > 0x0) this['_ctx']['stroke']();
    }, this['drawCircle'] = function (_0x2db764, _0x3c3934, _0x5e2816, _0x5b87e1) {
        this['_ctx']['fillStyle'] = _0x5b87e1, this['_ctx']['beginPath'](), this['_ctx']['moveTo'](_0x2db764, _0x3c3934), this['_ctx']['arc'](_0x2db764, _0x3c3934, _0x5e2816, 0x0, Math['PI'] * 0x2), this['_ctx']['closePath'](), this['_ctx']['fill']();
    };
},
_0x1e3c43 = _0xca692b;
_0x29d61e['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x29d61e['prototype']['constructor'] = _0x29d61e, _0x29d61e['superClass'] = _0x1e3c43, _0x29d61e['prototype']['safeArea'] = null, _0x29d61e['prototype']['teamColors'] = {
0x0: '#cccccc',
0x1: '#ffff00',
0x2: '#01effc',
0x3: '#bb00ff'
};

function _0x29d61e() {
this['mode'] = _0x1292d4, this['createInterfaceButtons']();
}
_0x29d61e['prototype']['wastedPopups'] = [], _0x29d61e['prototype']['playerDisplayNum'] = 0x0, _0x29d61e['prototype']['eventText'] = null, _0x29d61e['prototype']['setServerPlayerCount'] = function () {
switch (this['playerDisplayNum']) {
case 0x1:
case 0x2:
    _0x4ea12d['setText']('On Server: ' + _0x5f03df(_0x433266) + ' playing ' + nPlayersUnique + ' unqiue'), this['playerDisplayNum']++;
    break;
case 0x3:
case 0x4:
    _0x4ea12d['setText']('Modes Total: ' + gamemodes_alive + ' playing, ' + gamemodes_unique + ' unique'), this['playerDisplayNum']++;
    break;
case 0x5:
    var _0xabfdcc = gamemodes_unique / _0x6ff4bc * 0x64;
    _0x4ea12d['setText']('Milestone 2: ' + _0x5f03df(_0xabfdcc['toFixed'](0x2)) + '% (' + gamemodes_unique + ' of ' + _0x6ff4bc + ')'), this['playerDisplayNum']++;
    break;
case 0x6:
    this['playerDisplayNum'] = 0x0;
    break;
default:
    _0x4ea12d['setText'](_0x5f03df(_0x6ff4bc) + ' across Mope!'), this['playerDisplayNum']++;
    break;
}
};
const _0x445ae7 = 0x1,
_0x3da52f = 0x2,
_0x5273a1 = 0x3,
_0x28e32d = 0x4,
_0x51ca10 = 0x5,
_0x1fdae0 = 0x6,
_0x2fd544 = 0x7;
_0x29d61e['prototype']['socketMessages'] = function (_0x24c1e7) {
var _0xeca4eb = _0x24c1e7['readUInt8']();
switch (_0xeca4eb) {
case _0x445ae7: {
    let _0x15d70c = _0x24c1e7['readUInt8'](),
        _0xecf476 = _0x24c1e7['readString']();
    _0xecf476 = 'Nice, your team has unlocked \'' + _0xecf476 + '\' buff.', this['showBuffMessage']('success', _0xecf476, _0x15d70c, 0x6);
    break;
}
case _0x3da52f: {
    let _0x4b20df = _0x24c1e7['readUInt8'](),
        _0x453d0d = _0x24c1e7['readString']();
    _0x453d0d = 'Oh no, \'' + _0x453d0d + '\' buff has been compromised!', this['showBuffMessage']('error', _0x453d0d, _0x4b20df, 0x6);
    if (this['isApocalypseInprogress']) {}
    break;
}
case _0x5273a1: {
    console['log']('APOCALYPSE_STARTED'), this['apocalypseType'] = _0x24c1e7['readString'](), this['triggeredByTeamID'] = _0x24c1e7['readUInt8'](), this['apocalypseStatus'] = _0x24c1e7['readString'](), this['timeLeft'] = _0x24c1e7['readUInt16']() / 0x64;
    break;
}
case _0x28e32d: {
    console['log']('APOCALYPSE_ENDED'), this['apocalypseType'] = null, this['triggeredByTeamID'] = 0x0, this['apocalypseStatus'] = null, this['timeLeft'] = 0x0, _0x13b3b1('Apocalypse is over. Now, you can go anywhere freely!', 'success', 0x6), $bus['emit']($bus['EVENTS']['SET_APOCALYPSE_ONGOING'], {
        'isOngoing': ![],
        'timeLeft': 0x0
    });
    break;
}
case _0x51ca10: {
    this['isApocalypseInprogress'] = _0x24c1e7['readUInt8']() == 0x1;
    this['isApocalypseInprogress'] && (this['apocalypseType'] = _0x24c1e7['readString'](), this['triggeredByTeamID'] = _0x24c1e7['readUInt8'](), this['apocalypseStatus'] = _0x24c1e7['readString'](), this['timeLeft'] = _0x24c1e7['readUInt16']() / 0x64, $bus['emit']($bus['EVENTS']['SET_APOCALYPSE_ONGOING'], {
        'isOngoing': this['isApocalypseInprogress'],
        'timeLeft': this['timeLeft']
    }));
    break;
}
case _0x1fdae0: {
    this['team1'] = _0x24c1e7['readUInt16'](), this['team2'] = _0x24c1e7['readUInt16'](), this['team3'] = _0x24c1e7['readUInt16'](), this['updatePieChart']({
        0x1: this['team1'],
        0x2: this['team2'],
        0x3: this['team3']
    }), this['drawPieLeaderboard']();
    break;
}
case _0x2fd544: {
    let _0x514c51 = _0x24c1e7['readUInt8']();
    this['capturedStones'] = [];
    for (var _0x179f10 = 0x0; _0x179f10 < _0x514c51; _0x179f10++) {
        this['capturedStones']['push']({
            'stoneBuffID': _0x24c1e7['readUInt8'](),
            'hp': _0x24c1e7['readUInt8']() / 0x64
        });
    }
    $bus['emit']($bus['EVENTS']['SET_STONE_BUFFS'], this['capturedStones']);
    break;
}
}
}, _0x29d61e['prototype']['getStoneBuffIcon'] = function (_0x530dfc) {
switch (_0x530dfc) {
case 0x1:
    return '/assets/s/2/gameobj/78/incentive/1.png';
case 0x2:
    return '/assets/s/2/gameobj/78/incentive/2.png';
case 0x3:
    return '/assets/s/2/gameobj/78/incentive/3.png';
case 0x4:
    return '/assets/s/2/gameobj/78/incentive/4.png';
case 0x5:
    return '/assets/s/2/gameobj/78/incentive/5.png';
case 0x6:
    return '/assets/s/2/gameobj/78/incentive/6.png';
case 0x7:
    return '/assets/s/2/gameobj/78/incentive/7.png';
case 0x8:
    return '/assets/s/2/gameobj/78/incentive/8.png';
case 0x9:
    return '/assets/s/2/gameobj/78/incentive/9.png';
case 0xa:
    return '/assets/s/2/gameobj/78/incentive/10.png';
case 0xb:
    return '/assets/s/2/gameobj/78/incentive/11.png';
case 0xc:
    return '/assets/s/2/gameobj/78/incentive/12.png';
case 0xd:
    return '/assets/s/2/gameobj/78/incentive/13.png';
}
}, _0x29d61e['prototype']['showBuffMessage'] = function (_0x26b961, _0x14e01d, _0x20ebf1, _0x5d40bf) {
_0x2ab1cd();
var _0xddb7d7 = document['getElementsByTagName']('body')[0x0];
if (_0xddb7d7) {
    let _0x4d8bf9 = document['getElementById']('gameAreaWrapper'),
        _0x417190 = _0x16050c('mopeshop-popup'),
        _0x5df23c = this['getStoneBuffIcon'](_0x20ebf1),
        _0x273ea3 = _0x16050c('mopeshop-popup-icon', '');
    _0x273ea3['innerHTML'] = '<img src=\'' + _0x5df23c + '\'/>';
    let _0x4d90c3 = _0x16050c('msg', _0x26b961),
        _0x3a1066 = _0x16050c('text');
    _0x3a1066['innerHTML'] = _0x14e01d;
    let _0x3fbd93 = _0x16050c('closeMsg', '');
    _0x3fbd93['onclick'] = function () {
        _0x2ab1cd();
    }, _0x4d90c3['appendChild'](_0x273ea3), _0x4d90c3['appendChild'](_0x3fbd93), _0x4d90c3['appendChild'](_0x3a1066), _0x417190['appendChild'](_0x4d90c3), _0xddb7d7['insertBefore'](_0x417190, _0x4d8bf9), _0x5d40bf !== undefined && _0x5d40bf > 0x0 && setTimeout(_0x2ab1cd, _0x5d40bf * 0x3e8);
}
}, _0x29d61e['prototype']['interface'] = function () {
if (this['state'] == -0x1 || this['mode'] != _0x5dd9a5) return;
_0x3c6c95 && (this['pieChartCanvas'] != null && (this['pieChartCanvas']['width'] && _0x1d2dab['drawImage'](this['pieChartCanvas'], 0x0, 0x0, this['pieChartCanvas']['width'], this['pieChartCanvas']['height']))), this['drawInterfaceButtons']();
}, _0x29d61e['prototype']['drawMap'] = function () {
if (_0x3c6c95) {
    if (_0x44408d) return;
    this['drawPieLeaderboard'](), this['drawTeamPlayers'](), _0x476412 && _0x476412['drawMap'](), this['onApocalypseUpdated']();
}
}, _0x29d61e['prototype']['interfaceReset'] = function () {
this['endScreenCanvas'] = null, this['dangerCircleMiniMapCanvas'] = null, this['wastedPopups'] = [], this['lastWastedPopupT'] = 0x0, this['playercount'] = 0x0, this['safeArea'] = null;
if (this['interfaceButtons'])
    for (var _0x2b3ff0 = 0x0; _0x2b3ff0 < this['interfaceButtons']['length']; _0x2b3ff0++) {
        var _0x34c2a1 = this['interfaceButtons'][_0x2b3ff0];
        _0x34c2a1['onInterfaceReset']();
    }
this['interfaceButtons'] = [];
}, _0x29d61e['prototype']['onInit'] = function () {}, _0x29d61e['prototype']['playercount'] = 0x0, _0x29d61e['prototype']['setPlayerCount'] = function (_0x2e51f4) {
this['playercount'] = _0x2e51f4;
}, _0x29d61e['prototype']['showPlayerCount'] = function () {
_0x1d2dab['save']();
var _0x2d57fe = _0x1bcf68 / 0x2,
    _0x32138b = 0x32 * _0x32b8d4,
    _0x5e9b7a = 0x12c * _0x32b8d4;
_0x1d2dab['globalAlpha'] = 0.35, _0x1d2dab['fillStyle'] = 'black';
var _0x2e04cb = 0x1e * _0x32b8d4;
_0x1d2dab['fillRect'](_0x2d57fe - _0x5e9b7a / 0x2, _0x2e04cb, _0x5e9b7a, _0x32138b), _0x1d2dab['globalAlpha'] = 0x1, _0x1d2dab['fillStyle'] = 'white', _0x1d2dab['font'] = 0x1e * _0x32b8d4 + 'px Arial', _0x1d2dab['lineWidth'] = 0x1, _0x1d2dab['textAlign'] = 'center', _0x1d2dab['textBaseline'] = 'middle', _0x1d2dab['shadowOffsetX'] = 0x1, _0x1d2dab['shadowOffsetY'] = 0x1, _0x1d2dab['shadowColor'] = 'black', _0x2e04cb += 0x19 * _0x32b8d4;
var _0x5ae0e6 = ' player';
if (this['playercount'] > 0x1) _0x5ae0e6 += 's';
if (this['state'] == battleRoyal_inProgress) _0x5ae0e6 += ' alive!';
else {
    if (this['state'] == _0x546525 || this['state'] == battleRoyal_ready) _0x5ae0e6 += ' joined';
}
_0x1d2dab['fillText'](this['playercount'] + _0x5ae0e6, _0x2d57fe, _0x2e04cb), _0x1d2dab['restore']();
}, _0x29d61e['prototype']['lbCanvas'] = null, _0x29d61e['prototype']['leaderboard'] = function (_0x2e913d) {}, _0x29d61e['prototype']['btnPlayAgain'] = null, _0x29d61e['prototype']['showStats'] = !![], _0x29d61e['prototype']['interfaceButtons'] = [], _0x29d61e['prototype']['createInterfaceButtons'] = function () {
this['interfaceButtons'] = [];
}, _0x29d61e['prototype']['drawInterfaceButtons'] = function () {
if (this['interfaceButtons'])
    for (var _0x256d87 = 0x0; _0x256d87 < this['interfaceButtons']['length']; _0x256d87++) {
        var _0x3642a4 = this['interfaceButtons'][_0x256d87];
        _0x3642a4['isVisible'] && _0x3642a4['draw']();
    }
}, _0x29d61e['prototype']['onResize'] = function () {
this['drawInterfaceButtons']();
}, _0x29d61e['prototype']['playerInfo'] = function (_0x3f58df) {}, _0x29d61e['prototype']['playerWorldUpdate'] = function (_0x332226) {
return;
this['team1'] = _0x332226['readUInt16'](), this['team2'] = _0x332226['readUInt16'](), this['team3'] = _0x332226['readUInt16'](), this['isApocalypseInprogress'] = _0x332226['readUInt8']() == 0x1;
this['isApocalypseInprogress'] ? (this['apocalypseType'] = _0x332226['readString'](), this['triggeredByTeamID'] = _0x332226['readUInt8'](), this['apocalypseStatus'] = _0x332226['readString'](), this['timeLeft'] = _0x332226['readUInt16']() / 0x64, $bus['emit']($bus['EVENTS']['SET_APOCALYPSE_ONGOING'], {
    'isOngoing': this['isApocalypseInprogress'],
    'timeLeft': this['timeLeft']
})) : $bus['emit']($bus['EVENTS']['SET_APOCALYPSE_ONGOING'], {
    'isOngoing': ![],
    'timeLeft': 0x0
});
let _0x19db8e = _0x332226['readUInt8']();
this['capturedStones'] = [];
for (var _0x361906 = 0x0; _0x361906 < _0x19db8e; _0x361906++) {
    this['capturedStones']['push']({
        'stoneBuffID': _0x332226['readUInt8'](),
        'hp': _0x332226['readUInt8']() / 0x64
    });
}
$bus['emit']($bus['EVENTS']['SET_STONE_BUFFS'], this['capturedStones']);
}, _0x29d61e['prototype']['onApocalypseUpdated'] = function () {
this['isApocalypseInprogress'] && (this['eventText'] == null && (this['eventText'] = new _0x407dea(0x14, 'white'), this['eventText']['setFontSize'](0x1c * _0x32b8d4)), this['eventText'] && (this['eventText']['x'] = _0x1bcf68 / 0x2, this['eventText']['y'] = _0x157802 * 0.2, this['eventText']['draw']()));
}, _0x29d61e['prototype']['bonusRoundTimer'] = null, _0x29d61e['prototype']['pieChartCanvas'] = null, _0x29d61e['prototype']['setBonusRoundTimer'] = function (_0x244abb) {
var _0x373d13 = '' + _0x244abb;
null == this['bonusRoundTimer'] ? (this['bonusRoundTimer'] = new _0x407dea(0x28, '#FFFFFF'), this['bonusRoundTimer']['strokeW'] = 0x2, this['bonusRoundTimer']['multiLine'] = !![], this['bonusRoundTimer']['renderScale'] = 0x5, this['bonusRoundTimer']['setText'](_0x373d13)) : (this['bonusRoundTimer']['setFontSize'](0x28), this['bonusRoundTimer']['setText'](_0x373d13));
}, _0x29d61e['prototype']['drawMiniMapObjects'] = function (_0x337e14) {
if (this['teamStones'])
    for (let _0x2b1cfb = 0x0; _0x2b1cfb < this['teamStones']['length']; _0x2b1cfb++) {
        let _0xcfb70d = this['teamStones'][_0x2b1cfb];
        _0xcfb70d && (_0xcfb70d['c'] = 'black', _0x337e14['drawCircle'](_0xcfb70d));
    }
}, _0x29d61e['prototype']['teamStones'] = [], _0x29d61e['prototype']['teamModePieChart'] = null, _0x29d61e['prototype']['updatePieChart'] = function (_0x387d20) {
this['pieChartCanvas'] == null && (this['pieChartCanvas'] = document['createElement']('canvas'), this['teamModePieChart'] = new _0x1a47ea({
    'pad': 0x1e,
    'canvas': this['pieChartCanvas'],
    'colors': this['teamColors']
}));
if (this['teamModePieChart']) this['teamModePieChart']['setData'](_0x387d20);
}, _0x29d61e['prototype']['drawPieLeaderboard'] = function () {
if (this['pieChartCanvas'] == null) return;
var _0x4873d6 = this['pieChartCanvas']['getContext']('2d'),
    _0x6f5cb6 = 0x5,
    _0x38b1c1 = 0xc8,
    _0x5cb101 = 0xc8;
this['pieChartCanvas']['width'] = _0x38b1c1, this['pieChartCanvas']['height'] = _0x5cb101 + 0x14, this['teamModePieChart']['draw'](), _0x4873d6['globalAlpha'] = 0.2;
var _0x506f8c = _0x6f5cb6;
_0x4873d6['globalAlpha'] = 0.5, _0x4873d6['fillStyle'] = 'white', _0x4873d6['font'] = '20px Arial';
var _0x506f8c = 0xd2;
str = _0xcc7143['name'], _0x4873d6['fillText'](str, this['pieChartCanvas']['width'] / 0x2 - _0x4873d6['measureText'](str)['width'] / 0x2, _0x506f8c);
}, _0x29d61e['prototype']['inviteScreenCanvas'] = null, _0x29d61e['prototype']['endScreenCanvas'] = null, _0x29d61e['prototype']['endScreenDisplayed'] = ![];
var _0x1a47ea = function (_0x41c5ca) {
this['options'] = _0x41c5ca, this['radius'] = _0x41c5ca['radius'], this['pad'] = _0x41c5ca['pad'], this['canvas'] = _0x41c5ca['canvas'], this['_ctx'] = this['canvas']['getContext']('2d'), this['colors'] = _0x41c5ca['colors'], this['radius'] = Math['min'](this['canvas']['width'] / 0x2, this['canvas']['height'] / 0x2), this['showBg'] = ![], this['setData'] = function (_0x181996) {
    this['options']['data'] = _0x181996;
}, this['draw'] = function () {
    var _0x2c7c5a = 0x0,
        _0x3d2c9 = 0x0;
    this['showBg'] && (this['_ctx']['save'](), this['_ctx']['beginPath'](), this['_ctx']['globalAlpha'] = 0.1, this['_ctx']['fillStyle'] = 'black', this['_ctx']['rect'](0x0, 0x0, this['canvas']['width'], this['canvas']['height']), this['_ctx']['fill'](), this['_ctx']['restore']());
    var _0x56cce7 = this['canvas']['width'] / 0x2,
        _0x89ce77 = this['canvas']['height'] / 0x2;
    this['_ctx']['save'](), this['_ctx']['globalAlpha'] = 0.3, this['drawCircle'](_0x56cce7, _0x89ce77, this['radius'], 'white'), this['_ctx']['restore']();
    for (var _0x107d7c in this['options']['data']) {
        var _0x5c1065 = this['options']['data'][_0x107d7c];
        _0x2c7c5a += _0x5c1065;
    }
    var _0x3a9143 = 0x0;
    for (_0x107d7c in this['options']['data']) {
        this['_ctx']['save'](), this['_ctx']['lineWidth'] = 0x4, this['_ctx']['strokeStyle'] = 'white', this['_ctx']['globalAlpha'] = 0.3;
        var _0x1e1f92 = 0x0;
        _0xd3db61 == _0x107d7c && (this['_ctx']['globalAlpha'] = 0.6, _0x1e1f92 = 0x8);
        _0x5c1065 = this['options']['data'][_0x107d7c];
        var _0x303ad0 = 0x2 * Math['PI'] * _0x5c1065 / _0x2c7c5a;
        this['drawPieSlice'](_0x56cce7, _0x89ce77, this['radius'], _0x3a9143, _0x3a9143 + _0x303ad0, this['colors'][_0x107d7c], _0x1e1f92), this['_ctx']['restore'](), _0x3a9143 += _0x303ad0, _0x3d2c9++;
    }
}, this['drawPieSlice'] = function (_0xd69955, _0x5a614b, _0x10369d, _0xb318d0, _0x3d4c4b, _0x1cf4c2, _0x209f62) {
    this['_ctx']['fillStyle'] = _0x1cf4c2, this['_ctx']['beginPath'](), this['_ctx']['moveTo'](_0xd69955, _0x5a614b), this['_ctx']['arc'](_0xd69955, _0x5a614b, _0x10369d + _0x209f62, _0xb318d0, _0x3d4c4b), this['_ctx']['closePath'](), this['_ctx']['fill']();
    if (_0x209f62 > 0x0) this['_ctx']['stroke']();
}, this['drawCircle'] = function (_0xc67866, _0x85595f, _0x2ea5b4, _0xa7471f) {
    this['_ctx']['fillStyle'] = _0xa7471f, this['_ctx']['beginPath'](), this['_ctx']['moveTo'](_0xc67866, _0x85595f), this['_ctx']['arc'](_0xc67866, _0x85595f, _0x2ea5b4, 0x0, Math['PI'] * 0x2), this['_ctx']['closePath'](), this['_ctx']['fill']();
};
};
_0x29d61e['prototype']['stonesCanvas'] = null, _0x29d61e['prototype']['getSkinImageObj'] = function (_0x5e0c2c) {
var _0x222eb8 = './assets/s/2/' + _0x5e0c2c;
return _0x5ace1d(_0x222eb8, function (_0x5e5ca7) {});
}, _0x29d61e['prototype']['playerUI'] = [], _0x29d61e['prototype']['drawPlayerUI'] = function (_0x43670f) {}, _0x29d61e['prototype']['drawStoneCount'] = function (_0xaf791c, _0x806346, _0xead658, _0xb5e469) {
_0xaf791c['save'](), _0xaf791c['globalAlpha'] = 0.5;
let _0x299ab5 = './assets/s/2/gameobj/78/stone' + _0x806346 + '.png',
    _0x2d9e9b = _0x5ace1d(_0x299ab5);
_0x2d9e9b && (_0xaf791c['drawImage'](_0x2d9e9b, 0xa, _0xb5e469, 0x28, 0x28), _0xb5e469 += 0x32, _0xaf791c['fillStyle'] = 'black', _0xaf791c['fillText'](_0xead658 + '', 0x3c, _0xb5e469 - 0x12)), _0xaf791c['restore']();
}, _0x29d61e['prototype']['drawTeamPlayers'] = function () {
if (this['teamPlayers']) {
    var _0x1f89a7 = this['teamColors'][_0xd3db61];
    for (t = 0x0; t < this['teamPlayers']['length']; t++) {
        _0x388242(this['teamPlayers'][t], _0x1f89a7, 0x1);
    }
}
}, _0x29d61e['prototype']['getTeamColor'] = function (_0x268504) {
switch (_0x268504) {
case 0x1:
    return 'yellow';
case 0x2:
    return 'cyan';
case 0x3:
    return 'purple';
}
return 'gray';
}, _0x29d61e['prototype']['msgDisplayPlayersOnMiniMap'] = function (_0x4c514c) {
_0x278a8b = [];
var _0x420c2b = _0x4c514c['readUInt16']();
for (var _0x59463e = 0x0; _0x59463e < _0x420c2b; _0x59463e++) {
    _0x278a8b['push']({
        'teamID': _0x4c514c['readUInt16'](),
        'x': _0x4c514c['readUInt32']() / 0x64,
        'y': _0x4c514c['readUInt32']() / 0x64,
        'rad': 0x3
    });
}
}, _0x29d61e['prototype']['readGameRoomPropertyUpdate'] = function (_0x1cfa14) {
var _0x282812 = _0x1cfa14['readUInt8']();
for (var _0xd67509 = 0x0; _0xd67509 < _0x282812; _0xd67509++) {
    var _0x476638 = _0x1cfa14['readUInt8']();
    this['readUpdatedPropertyItem'](_0x476638, _0x1cfa14);
}
}, _0x29d61e['prototype']['readUpdatedPropertyItem'] = function (_0x1afe8c, _0x4fa72e) {
if (_0x1afe8c == _0x30a863) console['log']('TEAMMODE_APOCALYPSE_STARTED'), this['isApocalypseInprogress'] = _0x4fa72e['readUInt8']() == 0x1;
else {
    if (_0x1afe8c == _0x2c7a7a) console['log']('TEAMMODE_APOCALYPSE_ENDED'), this['isApocalypseInprogress'] = _0x4fa72e['readUInt8']() == 0x1, $bus['emit']($bus['EVENTS']['SET_APOCALYPSE_ONGOING'], {
        'isOngoing': ![],
        'timeLeft': 0x0
    });
    else {
        if (_0x1afe8c == _0x4bf42e) {
            console['log']('TEAMMODE_APOCALYPSE_TIME_LEFT');
            let _0x5d0422 = _0x4fa72e['readUInt16']();
            $bus['emit']($bus['EVENTS']['SET_APOCALYPSE_ONGOING'], {
                'isOngoing': this['isApocalypseInprogress'],
                'timeLeft': _0x5d0422
            });
        }
    }
}
}, window['TeamMode'] = _0x29d61e;
var _0x1e3c43 = _0xca692b;
_0x469fc2['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x469fc2['prototype']['constructor'] = _0x469fc2, _0x469fc2['superClass'] = _0x1e3c43, _0x469fc2['prototype']['safeArea'] = null;

function _0x469fc2(_0x2dafc9) {
this['mode'] = _0x2dafc9, this['stamp'] = +new Date(), this['chatAllowed'] = !![], this['createInterfaceButtons']();
}
_0x469fc2['prototype']['wastedPopups'] = [], _0x469fc2['prototype']['playerDisplayNum'] = 0x0, _0x469fc2['prototype']['setServerPlayerCount'] = function () {
_0x4ea12d['setText'](_0x5f03df(_0x6ff4bc) + ' online'), this['playerDisplayNum'] = this['playerDisplayNum'] == 0x0 ? 0x1 : 0x0;
}, _0x469fc2['prototype']['interface'] = function () {
if (this['state'] == -0x1 || this['mode'] != _0x5dd9a5) return;
if (_0x3c6c95)
    for (var _0x5d80c1 = this['wastedPopups']['length'] - 0x1; _0x5d80c1 >= 0x0; _0x5d80c1--) {
        var _0x275f30 = this['wastedPopups'][_0x5d80c1];
        _0x275f30['draw']();
        if (_0x275f30['timedOut']) this['wastedPopups']['splice'](_0x5d80c1, 0x1);
    }
if (this['endScreenCanvas'] != null) {
    this['endScreenCanvas']['width'] && _0x1d2dab['drawImage'](this['endScreenCanvas'], _0x1bcf68 / 0x2 - this['endScreenCanvas']['width'] / 0x2, 0xf * _0x4ffcf2, this['endScreenCanvas']['width'], this['endScreenCanvas']['height']);
    if (!_0x3c6c95 || isGhost) _0x36e784(!![]);
}
this['drawInterfaceButtons']();
}, _0x469fc2['prototype']['interfaceReset'] = function () {
this['endScreenCanvas'] = null, this['dangerCircleMiniMapCanvas'] = null, this['wastedPopups'] = [], this['lastWastedPopupT'] = 0x0, this['playercount'] = 0x0, this['safeArea'] = null;
if (this['interfaceButtons'])
    for (var _0x5182e7 = 0x0; _0x5182e7 < this['interfaceButtons']['length']; _0x5182e7++) {
        var _0x11c83f = this['interfaceButtons'][_0x5182e7];
        _0x11c83f['onInterfaceReset']();
    }
this['interfaceButtons'] = [];
}, _0x469fc2['prototype']['onInit'] = function () {}, _0x469fc2['prototype']['playercount'] = 0x0, _0x469fc2['prototype']['setPlayerCount'] = function (_0xe09949) {
this['playercount'] = _0xe09949;
}, _0x469fc2['prototype']['showPlayerCount'] = function () {
_0x1d2dab['save']();
var _0x1649d0 = _0x1bcf68 / 0x2,
    _0x522c32 = 0x32 * _0x32b8d4,
    _0x45e9ac = 0x12c * _0x32b8d4;
_0x1d2dab['globalAlpha'] = 0.35, _0x1d2dab['fillStyle'] = 'black';
var _0x5a240e = 0x1e * _0x32b8d4;
_0x1d2dab['fillRect'](_0x1649d0 - _0x45e9ac / 0x2, _0x5a240e, _0x45e9ac, _0x522c32), _0x1d2dab['globalAlpha'] = 0x1, _0x1d2dab['fillStyle'] = 'white', _0x1d2dab['font'] = 0x1e * _0x32b8d4 + 'px Arial', _0x1d2dab['lineWidth'] = 0x1, _0x1d2dab['textAlign'] = 'center', _0x1d2dab['textBaseline'] = 'middle', _0x1d2dab['shadowOffsetX'] = 0x1, _0x1d2dab['shadowOffsetY'] = 0x1, _0x1d2dab['shadowColor'] = 'black', _0x5a240e += 0x19 * _0x32b8d4;
var _0x546137 = ' player';
if (this['playercount'] > 0x1) _0x546137 += 's';
if (this['state'] == battleRoyal_inProgress) _0x546137 += ' alive!';
else {
    if (this['state'] == _0x546525 || this['state'] == battleRoyal_ready) _0x546137 += ' joined';
}
_0x1d2dab['fillText'](this['playercount'] + _0x546137, _0x1649d0, _0x5a240e), _0x1d2dab['restore']();
}, _0x469fc2['prototype']['lbCanvas'] = null, _0x469fc2['prototype']['leaderboard'] = function (_0x490a6b) {
if (this['lbCanvas'] == null) this['lbCanvas'] = document['createElement']('canvas');
if (_0x490a6b) {
    var _0x45cde6 = this['lbCanvas']['getContext']('2d'),
        _0x69af1e = 0x37,
        _0x355b64 = 0x16;
    _0x69af1e = _0x69af1e + _0x355b64 * _0x490a6b['length'], this['lbCanvas']['width'] = 0x10e, this['lbCanvas']['height'] = _0x69af1e, _0x45cde6['globalAlpha'] = 0.2, _0x45cde6['fillStyle'] = '#000000', _0x45cde6['fillRect'](0x0, 0x0, this['lbCanvas']['width'], this['lbCanvas']['height']), _0x45cde6['globalAlpha'] = 0x1, _0x45cde6['fillStyle'] = '#FFFFFF';
    var _0x5b5e0b = _0xcc7143['name'];
    _0x45cde6['font'] = '24px Arial';
    !(_0x31f3fc == 0x2) && (_0x45cde6['shadowOffsetX'] = 0x1, _0x45cde6['shadowOffsetY'] = 0x1);
    _0x45cde6['shadowColor'] = 'black', _0x45cde6['fillText'](_0x5b5e0b, this['lbCanvas']['width'] / 0x2 - _0x45cde6['measureText'](_0x5b5e0b)['width'] / 0x2, 0x28);
    var _0x25da27;
    _0x45cde6['textAlign'] = 'left';
    for (_0x45cde6['font'] = '17px Arial', _0x25da27 = 0x0; _0x25da27 < _0x490a6b['length']; ++_0x25da27) {
        _0x5b5e0b = _0x49a9c3 ? '' : _0x490a6b[_0x25da27]['name'] || 'mope.io', _0x5b5e0b += ' (' + _0x33bfab(_0x490a6b[_0x25da27]['xp']) + ')', _0x45cde6['fillStyle'] = '#FFFFFF', _0x45cde6['fillText'](_0x5b5e0b, 0xf, 0x41 + _0x355b64 * _0x25da27);
    }
}
}, _0x469fc2['prototype']['drawLeaderboard'] = function () {
if (_0x3c6c95) {
    if (!_0x2790d1) _0x49b3ea && (_0x49b3ea['width'] && _0x1d2dab['drawImage'](_0x49b3ea, 0xa * _0x4ffcf2, 0xa * _0x4ffcf2, _0x49b3ea['width'] * _0x32b8d4, _0x49b3ea['height'] * _0x32b8d4));
}
}, _0x469fc2['prototype']['btnPlayAgain'] = null, _0x469fc2['prototype']['showStats'] = !![], _0x469fc2['prototype']['interfaceButtons'] = [], _0x469fc2['prototype']['createInterfaceButtons'] = function () {
this['interfaceButtons'] = [];
}, _0x469fc2['prototype']['drawInterfaceButtons'] = function () {
if (this['interfaceButtons'])
    for (var _0x58a2c1 = 0x0; _0x58a2c1 < this['interfaceButtons']['length']; _0x58a2c1++) {
        var _0x2b94d1 = this['interfaceButtons'][_0x58a2c1];
        _0x2b94d1['isVisible'] && _0x2b94d1['draw']();
    }
}, _0x469fc2['prototype']['onResize'] = function () {
this['drawInterfaceButtons']();
}, _0x469fc2['prototype']['readPlayerStats'] = function (_0x264d5a) {
var _0x12794e = [];
return _0x12794e['rank'] = _0x264d5a['readUInt16'](), _0x12794e['timeAlive'] = _0x264d5a['readUInt16'](), _0x12794e['totalKills'] = _0x264d5a['readUInt16'](), _0x12794e['topRank'] = _0x264d5a['readUInt16'](), _0x12794e['maxXP'] = _0x264d5a['readUInt32'](), _0x12794e['killedBy'] = _0x264d5a['readString'](), _0x12794e;
}, _0x469fc2['prototype']['playerInfo'] = function (_0x28f7f9) {
if (isGhost && !_0x5102a2) {
    var _0x35582a = this['readPlayerStats'](_0x28f7f9);
    this['buildEndScreenHTML'](_0x35582a);
} else !isGhost && (this['endScreenCanvas'] = null);
}, _0x469fc2['prototype']['playerWorldUpdate'] = function (_0x3a5b3f) {}, _0x469fc2['prototype']['worldUpdate'] = function (_0x221722) {}, _0x469fc2['prototype']['drawMap'] = function () {
if (_0x3c6c95) {
    if (_0x44408d) return;
    if (_0x476412) _0x476412['drawMap']();
    this['drawLeaderboard']();
}
}, _0x469fc2['prototype']['pieChartCanvas'] = null, _0x469fc2['prototype']['teamColors'] = {
0x0: 'white',
0x1: '#B6CF40'
}, _0x469fc2['prototype']['endScreenDisplayed'] = ![], _0x469fc2['prototype']['buildEndScreenHTML'] = function (_0x4a5a62) {
if (this['endScreenDisplayed']) return;
this['endScreenDisplayed'] = !![];
var _0x2e4ea0 = '';
_0x2e4ea0 += '<div class=\'msg\'>YOU WERE #' + _0x4a5a62['rank'] + '</div>', _0x2e4ea0 += '<div class=\'row\'>', _0x2e4ea0 += '<div class=\'label\'>Killed by:</div>', _0x2e4ea0 += '<div class=\'value2\'>' + _0x4a5a62['killedBy'] + '</div>', _0x2e4ea0 += '</div>', _0x2e4ea0 += '<div class=\'row\'>', _0x2e4ea0 += '<div class=\'col1\'>', _0x2e4ea0 += '<div class=\'label\'>Time alive:</div>', _0x2e4ea0 += '<div class=\'value\'>' + _0x1a2910(_0x4a5a62['timeAlive']) + '</div>', _0x2e4ea0 += '</div>', _0x2e4ea0 += '<div class=\'col2\'>', _0x2e4ea0 += '<div class=\'label\'>Total kills:</div>', _0x2e4ea0 += '<div class=\'value\'>' + _0x4a5a62['totalKills'] + '</div>', _0x2e4ea0 += '</div>', _0x2e4ea0 += '</div>', _0x2e4ea0 += '<div class=\'row\'>', _0x2e4ea0 += '<div class=\'col1\'>', _0x2e4ea0 += '<div class=\'label\'>Top rank:</div>', _0x2e4ea0 += '<div class=\'value\'>' + _0x4a5a62['topRank'] + '</div>', _0x2e4ea0 += '</div>', _0x2e4ea0 += '<div class=\'col2\'>', _0x2e4ea0 += '<div class=\'label\'>Max xp:</div>', _0x2e4ea0 += '<div class=\'value\'>' + _0x33bfab(_0x4a5a62['maxXP']) + '</div>', _0x2e4ea0 += '</div>', _0x2e4ea0 += '</div>', _0x2e4ea0 += '<div style=\'clear:both;\'></div>', _0x2e4ea0 += '<div class=\'btnDiv\'>', _0x2e4ea0 += '<button id=\'btnMopeOptions\' class=\'btn\'>      CONTINUE      </button>', _0x2e4ea0 += '</div>', _0x2e4ea0 += '<div style=\'clear:both;\'></div>';
var _0x1e5a50 = document['getElementById']('endScreen');
_0x1e5a50 && (_0x1e5a50['innerHTML'] = _0x2e4ea0, _0x1e5a50['style']['display'] = 'block'), (!_0x3c6c95 || isGhost) && _0x51ff85();
}, _0x469fc2['prototype']['endScreenCanvas'] = null, _0x469fc2['prototype']['buildEndScreen'] = function (_0x32735e, _0x135960) {
if (this['endScreenCanvas'] == null) this['endScreenCanvas'] = document['createElement']('canvas');
if (this['endScreenCanvas'] == null) return;
var _0x9e6cfc = this['endScreenCanvas']['getContext']('2d'),
    _0x2e7641 = 0x37,
    _0x38973c = 0x28,
    _0x30fcf6 = 0x5,
    _0x5578b2 = 0xf0,
    _0x566084 = 0x1a4;
_0x2e7641 = _0x5578b2 + _0x30fcf6 * 0x2, this['endScreenCanvas']['width'] = _0x566084 + _0x30fcf6 * 0x2, this['endScreenCanvas']['height'] = _0x2e7641, _0x9e6cfc['globalAlpha'] = 0.2, _0x9e6cfc['fillStyle'] = '#000000', _0x9e6cfc['fillRect'](0x0, 0x0, this['endScreenCanvas']['width'], this['endScreenCanvas']['height']), _0x9e6cfc['fillStyle'] = '#000000', _0x9e6cfc['fillRect'](_0x30fcf6, _0x30fcf6, this['endScreenCanvas']['width'] - _0x30fcf6 * 0x2, this['endScreenCanvas']['height'] - _0x30fcf6 * 0x2);
var _0x13ddfa = _0x30fcf6;
_0x9e6cfc['globalAlpha'] = 0x1, _0x9e6cfc['fillStyle'] = '#FFFFFF', _0x9e6cfc['font'] = '30px Arial', _0x13ddfa += 0x37;
var _0x1fbdaf = 'Final Stats';
_0x9e6cfc['font'] = '30px Arial', _0x9e6cfc['fillText'](_0x1fbdaf, this['endScreenCanvas']['width'] / 0x2 - _0x9e6cfc['measureText'](_0x1fbdaf)['width'] / 0x2, _0x13ddfa), _0x9e6cfc['font'] = '20px Arial', _0x13ddfa += 0x2d, _0x1fbdaf = 'You were #' + _0x135960['rank'], _0x9e6cfc['fillText'](_0x1fbdaf, this['endScreenCanvas']['width'] / 0x2 - _0x9e6cfc['measureText'](_0x1fbdaf)['width'] / 0x2, _0x13ddfa), _0x13ddfa += 0x28;
var _0x5f4258 = _0x1a2910(_0x135960['timeAlive']),
    _0x820f2f = _0x30fcf6 + 0xf;
_0x50cdc3(_0x9e6cfc, 'Killed by', _0x135960['killedBy'], _0x820f2f, _0x13ddfa), _0x13ddfa += 0x28, _0x50cdc3(_0x9e6cfc, 'Time Alive', _0x1a2910(_0x135960['timeAlive']), _0x820f2f, _0x13ddfa), _0x820f2f += 0xd2, _0x50cdc3(_0x9e6cfc, 'Total Kills', _0x135960['totalKills'], _0x820f2f, _0x13ddfa), _0x13ddfa += 0x28, _0x820f2f = _0x30fcf6 + 0xf, _0x50cdc3(_0x9e6cfc, 'Top rank', _0x135960['topRank'], _0x820f2f, _0x13ddfa), _0x820f2f += 0xd2, _0x50cdc3(_0x9e6cfc, 'Max XP', _0x33bfab(_0x135960['maxXP']), _0x820f2f, _0x13ddfa), _0x13ddfa += 0x32;
}, _0x469fc2['prototype']['lastWastedPopupT'] = 0x0, _0x469fc2['prototype']['onPlayerWasted'] = function (_0x274ecf) {
if ((_0x740c5b - this['lastWastedPopupT']) / 0x3e8 > 0.7) {
    this['lastWastedPopupT'] = _0x740c5b;
    var _0x5c5544 = new _0x1bfd98(_0x274ecf + ' wasted!', 0x28, 'red', 0x5dc);
    this['wastedPopups']['push'](_0x5c5544);
}
}, _0x469fc2['prototype']['lastWastedPopupT'] = 0x0, _0x469fc2['prototype']['msgDisplayPlayersOnMiniMap'] = function (_0x1f1fe0) {
_0x278a8b = [];
var _0xa1c01c = _0x1f1fe0['readUInt16']();
for (var _0x4007a2 = 0x0; _0x4007a2 < _0xa1c01c; _0x4007a2++) {
    _0x278a8b['push']({
        'id': _0x1f1fe0['readUInt32'](),
        'x': _0x1f1fe0['readUInt32']() / 0x64,
        'y': _0x1f1fe0['readUInt32']() / 0x64,
        'rad': 0x3
    });
}
}, window['WildMope'] = _0x469fc2;

function _0x13b3b1(_0x12b12c, _0x1c9ec4, _0x41b370) {
_0x2ab1cd();
var _0x4641a4 = document['getElementsByTagName']('body')[0x0];
if (_0x4641a4) {
    var _0x3aa930 = document['getElementById']('gameAreaWrapper'),
        _0x259736 = _0x16050c('mopeshop-popup'),
        _0x4485df = _0x16050c('msg', _0x1c9ec4),
        _0x4c99d1 = _0x16050c('text');
    _0x4c99d1['innerHTML'] = _0x12b12c;
    var _0x1a3bec = _0x16050c('closeMsg', '');
    _0x1a3bec['onclick'] = function () {
        _0x2ab1cd();
    }, _0x4485df['appendChild'](_0x1a3bec), _0x4485df['appendChild'](_0x4c99d1), _0x259736['appendChild'](_0x4485df), _0x4641a4['insertBefore'](_0x259736, _0x3aa930), _0x41b370 !== undefined && _0x41b370 > 0x0 && (console['log']('timeout:' + _0x41b370), setTimeout(_0x2ab1cd, _0x41b370 * 0x3e8));
}
}

function _0x2ab1cd() {
var _0x5a6f4f = document['getElementById']('mopeshop-popup');
if (_0x5a6f4f) _0x5a6f4f['parentNode']['removeChild'](_0x5a6f4f);
}

function _0x16050c(_0x4cf745, _0x1d3c37) {
var _0x57a01c = _0x3ae893('div', _0x4cf745, _0x1d3c37);
return _0x57a01c;
}

function _0x384e45(_0x36021c, _0x59025b, _0x75970a) {
var _0x58019a = _0x3ae893('div', _0x36021c, _0x59025b);
return _0x58019a['innerHTML'] = _0x75970a, _0x58019a;
}
const _0x574f53 = [];

function _0x3ae893(_0x30c384, _0x3af975, _0xc0dbcc) {
if (_0x30c384 == undefined) return null;
var _0x2cb371 = document['createElement'](_0x30c384);
if (_0x3af975 !== undefined) _0x2cb371['id'] = _0x3af975;
if (_0xc0dbcc !== undefined) _0x2cb371['className'] = _0xc0dbcc;
return _0x2cb371;
}

function _0x1a13ff() {
var _0x140a40 = _0x462db4['coins'];
if (_0x140a40 > -0x1) {
    if (('' + _0x140a40)['length'] > 0xa) return ('' + _0x140a40)['substring'](0x0, 0x4) + ' PI.COINS';
    return _0x140a40;
} else return 'LOGIN';
}

function _0x1c4c79() {
return _0x462db4['coins'] > -0x1;
}

function _0x4b39f(_0x1a2bda) {
_0x1a2bda && _0x1f4449 ? _0x1f4449['loadData'](_0x1a2bda) : (_0x1f4449 = new _0x5e4984(), _0x1f4449['loadData']());
}
var _0x557db7 = {
'customClassesForOType': {},
'setCustomClassForShopItem': function (_0x2bb6b3, _0xb0a715, _0x4d9b5e) {
    !this['customClassesForOType'][_0xb0a715] && (this['customClassesForOType'][_0xb0a715] = {
        'oTypeMainClass': null,
        'secondaryTypeClasses': {}
    });
    var _0x1702fa = this['customClassesForOType'][_0xb0a715];
    if (_0x4d9b5e == null) {
        if (_0x1702fa['oTypeMainClass'] != null) console['log']('ERROR \'GameObjType.setCustomClassForGameObjType\': a class (' + this['customClassesForOType'][_0xb0a715] + ') is already set for oType ' + _0xb0a715 + '! Check for duplicate calls!');
        _0x1702fa['oTypeMainClass'] = _0x2bb6b3;
    } else {
        if (_0x4d9b5e in _0x1702fa['secondaryTypeClasses']) console['log']('ERROR \'GameObjType.setCustomClassForGameObjType\': a class is already set for oType ' + _0xb0a715 + ' AND secondaryType (eg. animalType) ' + _0x4d9b5e + '! Check for duplicate calls!');
        _0x1702fa['secondaryTypeClasses'][_0x4d9b5e] = _0x2bb6b3;
    }
    this['onClassSet'](_0x2bb6b3, _0xb0a715, _0x4d9b5e);
},
'getClassForGameObjType': function (_0x427657, _0x103584) {
    if (_0x427657 in this['customClassesForOType']) {
        var _0x351555 = this['customClassesForOType'][_0x427657];
        if (_0x103584 == null || _0x103584 == 0x0) return _0x351555['oTypeMainClass'];
        else {
            if (_0x103584 in _0x351555['secondaryTypeClasses']) return _0x351555['secondaryTypeClasses'][_0x103584];
            else return _0x351555['oTypeMainClass'];
        }
    } else return _0xb2a2fa;
},
'newlyVis_createGameObjFromMsg': function (_0x25c0df, _0x3b2d0f) {
    var _0x2656ad = _0x3b2d0f['oType'],
        _0xf27328 = null;
    _0x2656ad == _0x4ad968 && (_0xf27328 = _0x3b2d0f['animalType']);
    var _0x26566d = _0x557db7['createGameObjOfOType'](_0x2656ad, _0xf27328);
    return _0x26566d['itemType'] = _0x25c0df, _0x26566d['worldUpd_readMsgNewlyVisible'](_0x3b2d0f, _0x2656ad, _0xf27328), _0x26566d;
},
'createGameObjOfOType': function (_0x40d141, _0x5ac343) {
    var _0x4585ae = this['getClassForGameObjType'](_0x40d141, _0x5ac343),
        _0x46bbee = new _0x4585ae(_0x40d141, _0x5ac343);
    return _0x46bbee;
},
'onClassSet': function (_0x5d76f8) {}
};
_0xb2a2fa['prototype'] = {
'id': 0x0,
'oType': 0x0,
'itemType': null
};

function _0xb2a2fa(_0x8f0977) {
this['oType'] = _0x8f0977;
}
_0xb2a2fa['prototype']['setObjTypes'] = function (_0x3c5dac, _0x51b8a4) {
this['oType'] = _0x3c5dac;
}, _0xb2a2fa['prototype']['loadShopData'] = function (_0x2cf37b) {
this['data'] = _0x2cf37b, this['id'] = _0x2cf37b['id'], this['itemType'] = _0x2cf37b['itemType'], this['coinsPrice'] = _0x2cf37b['coinsPrice'];
}, _0xb2a2fa['prototype']['worldUpd_readMsgNewlyVisible'] = function (_0x2193c7, _0x4d469c, _0x5c4203) {
this['setObjTypes'](_0x4d469c, _0x5c4203), this['loadShopData'](_0x2193c7);
}, _0xb2a2fa['prototype']['getImage'] = function () {
return null;
}, _0xb2a2fa['prototype']['generateHtml'] = function () {}, window['ShopItem'] = _0xb2a2fa;
var _0x570743 = _0x44e6c7,
_0x1e3c43 = _0xb2a2fa;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43;

function _0x44e6c7() {
_0x44e6c7['superClass']['call'](this, 0x3e8), this['oType'] = 0x3e8, this['itemType'] = 0x1;
}
_0x44e6c7['prototype']['prefix'] = null, _0x44e6c7['prototype']['bonus'] = 0x0, _0x44e6c7['prototype']['loadShopData'] = function (_0x566574) {
_0x44e6c7['superClass']['prototype']['loadShopData']['call'](this, _0x566574), this['prefix'] = _0x566574['prefix'], this['bonus'] = _0x566574['bonus'], this['value'] = _0x566574['value'];
}, _0x44e6c7['prototype']['worldUpd_readMsgNewlyVisible'] = function (_0x47d8d1, _0x326751, _0x44bd11) {
this['loadShopData'](_0x47d8d1);
}, _0x557db7['setCustomClassForShopItem'](_0x44e6c7, 0x3e8), window['MopeCoin'] = _0x44e6c7;
var _0x570743 = _0x45e0ed,
_0x1e3c43 = _0xb2a2fa;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43;

function _0x45e0ed(_0x2312fc, _0x50699f) {
_0x45e0ed['superClass']['call'](this, _0x4ad968), this['animalType'] = _0x50699f, this['setBiome'](this['animalType']);
}
_0x45e0ed['prototype']['setBiome'] = function (_0x5074ca) {
switch (_0x5074ca) {
case _0x31a0ba:
case _0x20f46e:
case _0x47ccac:
case _0x4ab048:
case _0x588f38:
case _0x39357f:
case _0x254b52:
case _0x17eda1:
case _0xf59392:
    this['biome'] = _0x1c453c, this['biomeName'] = 'Land';
    break;
case _0x380133:
case _0x2350ea:
case _0x526523:
case _0x13ad70:
case _0x697285:
    this['biome'] = _0x506414, this['biomeName'] = 'Ocean';
    break;
case _0x40da91:
case _0x55a926:
case _0x40ac2b:
case _0x39e9c9:
    this['biome'] = _0x1c3cf7, this['biomeName'] = 'Arctic';
    break;
case _0x1ed4e2:
case _0x5b6f26:
case _0x9ca027:
case _0x19e418:
    this['biome'] = _0x545d4b, this['biomeName'] = 'Volcano';
    break;
case _0x16390e:
case _0x36b345:
case _0x4ca51a:
case _0x5af7f2:
    this['biome'] = _0x49e519, this['biomeName'] = 'Desert';
    break;
default:
    break;
}
}, _0x45e0ed['prototype']['loadShopData'] = function (_0x315738) {
_0x45e0ed['superClass']['prototype']['loadShopData']['call'](this, _0x315738), this['animalSpecies'] = _0x315738['animalSpecies'], this['shopImg'] = 'shop/' + _0x315738['shopImg'], this['skinImage'] = _0x315738['skinImage'], this['skinName'] = _0x315738['skinName'], this['saleType'] = _0x315738['saleType'], this['salePrice'] = _0x315738['salePrice'];
}, _0x45e0ed['prototype']['setObjTypes'] = function (_0x1d0ff5, _0x452ec3) {
this['animalType'] = _0x452ec3;
}, _0x45e0ed['prototype']['getAnimalName'] = function () {
switch (this['animalType']) {
case _0x48065b:
    return 'rabbit';
case _0x4cff3a:
    return 'pig';
case _0x84499b:
    return 'fox';
case _0x3136da:
    return 'deer';
case _0x12b5f6:
    return 'mole';
case _0x39a5c5:
    return 'zebra';
case _0xd7a1f1:
    return 'lion';
case _0x29db26:
    return 'bigcat';
case _0x189024:
    return 'bear';
case _0x1d3e9a:
    return 'croc';
case _0xd3040d:
    return 'rhino';
case _0x254b52:
    return 'hippo';
case _0x20f46e:
    return 'dragon';
case _0x4c5efa:
    return 'shrimp';
case _0xf5643:
    return 'trout';
case _0x1a993f:
    return 'crab';
case _0xab40e7:
    return 'squid';
case _0x2fd73b:
    return 'shark';
case _0x46166b:
    return 'stingray';
case _0x1597d0:
    return 'turtle';
case _0x5b8b30:
    return 'seahorse';
case _0xfbbc5:
    return 'jellyfish';
case _0x526523:
    return 'kraken';
case _0x52507b:
    return 'pufferfish';
case _0x697285:
    return 'killerwhale';
case _0x3e9276:
    return 'swordfish';
case _0x199c9a:
    return 'gorilla';
case _0x1bdc24:
    return 'octopus';
case _0x45e678:
    return 'wolf';
case _0x323cb6:
    return 'arctichare';
case _0x55a926:
    return 'yeti';
case _0xaa5ad2:
    return 'chipmunk';
case _0x4f4705:
    return 'muskox';
case _0x236cec:
    return 'penguin';
case _0x3e89f8:
    return 'polarbear';
case _0x1fc0ae:
    return 'seal';
case _0x575d5b:
    return 'snowleopard';
case _0x52ea48:
    return 'walrus';
case _0x3dd041:
    return 'reindeer';
case _0x2cb3a6:
    return 'arcticfox';
case _0x136680:
    return 'wolverine';
case _0x40ac2b:
    return 'mammoth';
case _0xdb1a28:
    return 'donkey';
case _0x3d71a1:
    return 'snail';
case _0x5b6f26:
    return 'blackdragon';
case _0x39e9c9:
    return 'sabertoothtiger';
case _0x39357f:
    return 'elephant';
case _0x13ad70:
    return 'bluewhale';
case _0x14a18f:
    return 'cobra';
case _0x17eda1:
    return 'boaconstrictor';
case _0x4ab048:
    return 'giantspider';
case _0x47ccac:
    return 'trex';
case _0x43c01e:
    return 'tiger';
case _0x4f8d37:
    return 'giraffe';
case _0x5041f9:
    return 'eagle';
case _0x164f9e:
    return 'hedgehog';
case _0x17f2ab:
    return 'duck';
case _0x59ed2f:
    return 'duckling';
case _0x49617f:
    return 'lemming';
case _0x2350ea:
    return 'kingcrab';
case _0x86f82a:
    return 'frog';
case _0xf59392:
    return 'ostrich';
case _0x1b8ac0:
    return 'pelican';
case _0x4e8eac:
    return 'falcon';
case _0x81deb4:
    return 'snowyowl';
case _0x43193:
    return 'honeybee';
case _0x19e418:
    return 'phoenix';
case _0x4618bb:
    return 'ostrichbaby';
case _0x380133:
    return 'seamonster';
case _0x9ca027:
    return 'landmonster';
case _0x40da91:
    return 'icemonster';
case _0x31a0ba:
    return 'dinomonster';
case _0x3182a5:
    return 'pigeon';
case _0x3e06be:
    return 'toucan';
case _0x229b87:
    return 'macaw';
case _0x220080:
    return 'flamingo';
case _0x588f38:
    return 'cassowary';
case _0x19475c:
    return 'chicken';
case _0x51f75a:
    return 'woodpecker';
case _0x114a7b:
    return 'peacock';
case _0x353af1:
    return 'kangaroorat';
case _0x5b4c32:
    return 'desertchipmunk';
case _0x441e79:
    return 'meerkat';
case _0x4336e9:
    return 'gazelle';
case _0x4fcb93:
    return 'armadillo';
case _0x490d3d:
    return 'fennecfox';
case _0x1be7db:
    return 'camel';
case _0x5ef983:
    return 'warthog';
case _0x67df53:
    return 'hyena';
case _0x2e0aa9:
    return 'rattlesnake';
case _0x53017e:
    return 'vulture';
case _0x1f6369:
    return 'bison';
case _0x5af7f2:
    return 'komododragon';
case _0x16390e:
    return 'giantscorpion';
case _0x36b345:
    return 'pterodactyl';
case _0x35326e:
    return 'gobibear';
case _0x4ca51a:
    return 'blackwidow';
case _0x24c58c:
    return 'bulletant';
case _0x4a8972:
    return 'markhor';
}
}, _0x45e0ed['prototype']['getSkinPath'] = function (_0xbaffc) {
var _0x281f19 = this['animalSpecies'] > 0x0 ? this['animalSpecies'] : '',
    _0x4592fa = _0x1f4449['ifMultiAssetSkin'](this['animalType'], this['skinImage']),
    _0x52e07c = this['skinImage'] == undefined ? this['shopImg'] : 'skins/' + _0x4592fa;
if (_0xbaffc) _0x52e07c += _0xbaffc;
return _0x52e07c + '.png';
}, _0x45e0ed['prototype']['getShopImageSrc'] = function () {
return 'assets/s/' + this['data']['season'] + '/' + this['getSkinPath']();
}, _0x45e0ed['prototype']['getImage'] = function () {
var _0xdb6b16 = new Image();
return _0xdb6b16['className'] = 'animalSkin_' + this['animalType'], _0xdb6b16['src'] = 'assets/s/' + this['data']['season'] + '/' + this['getSkinPath'](), _0xdb6b16;
}, _0x45e0ed['prototype']['getImagePromo'] = function (_0x155e6c) {
var _0x4933b0 = new Image();
return _0x4933b0['className'] = 'animalSkin_' + this['animalType'], _0x4933b0['src'] = 'assets/s/' + this['data']['season'] + '/' + this['getSkinPath'](_0x155e6c), console['log']('promo: ' + _0x4933b0['src']), _0x4933b0;
}, _0x45e0ed['prototype']['getSkinName'] = function () {
var _0x2ec9e4 = this['skinName'];
return _0x2ec9e4['replace']('\x0a', '<br>');
}, window['AnimalSkin'] = _0x45e0ed, _0x557db7['setCustomClassForShopItem'](_0x45e0ed, _0x4ad968);

function _0x5e4984() {}
_0x5e4984['prototype']['items'] = [], _0x5e4984['prototype']['datatab'] = [], _0x5e4984['prototype']['showSeason'] = !![], _0x5e4984['prototype']['getPackageInfo'] = function (_0x46c97d) {}, _0x5e4984['prototype']['getFeatureInfo'] = function (_0x2edb06) {
switch (_0x2edb06) {
case 'feature_1v1redemption_5credits':
    return {
        'title': '5 Redemption Credits'
    };
case 'feature_1v1redemption_10credits':
    return {
        'title': '10 Redemption Credits'
    };
case 'feature_1v1redemption_20credits':
    return {
        'title': '20 Redemption Credits'
    };
}
}, _0x5e4984['prototype']['getAnimalInfo'] = function (_0x25860d) {
switch (_0x25860d) {
case 'halloween_wyrmous':
    return [_0x14a18f, 0x64, 'Wyrmous', 'land/cobra/100/cobra'];
case 'halloween_equusthulhu':
    return [_0xdb1a28, 0x64, 'Equusthulhu', 'land/donkey/100/donkey'];
case 'halloween_frostaline':
    return [_0x575d5b, 0x64, 'Frostaline', 'arctic/snowleopard/100/snowleopard'];
case 'halloween_pufferMace':
    return [_0x52507b, 0x64, 'Puffermace', 'ocean/pufferfish/100/pufferfish'];
case 'halloween_carnageodactyl':
    return [_0x36b345, 0x64, 'Carnageodactyl', 'desert/pterodactyl/100/pterodactyl_ability'];
case 'halloween_mrDollar':
    return [_0x47ccac, 0x64, 'Mr. Dollar', 'land/trex/100/trex'];
case 'halloween_wendigoDeer':
    return [_0x3136da, 0x64, 'The Wendigo', 'land/deer/100/deer'];
case 'halloween_cactiRat':
    return [_0x353af1, 0x64, 'Cacti Rat', 'desert/kangaroorat/100/kangaroorat'];
case 'halloween_hiPower':
    return [_0x254b52, 0x64, 'Swampster', 'land/hippo/100/hippo'];
case 'halloween_puumpkat':
    return [_0x441e79, 0x64, 'Puumpkat', 'desert/meerkat/100/meerkat'];
case 'halloween_doomedarius':
    return [_0x1be7db, 0x64, 'The Doomedarius', 'desert/camel/100/camel'];
case 'halloween_roboMouse':
    return [_0xb392ab, 0x64, 'Robo Mouse', 'land/mouse/100/mouse'];
case 'halloween_uncleSam':
    return [_0x1d3e9a, 0x64, 'Uncle Sam', 'land/croc/100/croc'];
case 'halloween_zombieMole':
    return [_0x12b5f6, 0x64, 'Zombie Mole', 'land/mole/100/mole'];
case 'halloween_flammyHart':
    return [_0x4336e9, 0x64, 'Flammy Hart', 'desert/gazelle/100/gazelle'];
case 'halloween_gummyViper':
    return [_0x2e0aa9, 0x64, 'Gummy Viper', 'desert/rattlesnake/100/rattlesnake'];
case 'halloween_grimRipper':
    return [_0x199c9a, 0x64, 'Grim Reaper', 'land/gorilla/100/gorilla'];
case 'halloween_bigCookie':
    return [_0x29db26, 0x64, 'Big Cookie', 'land/bigcat/100/bigcat'];
case 'halloween_gargolgon':
    return [_0x20f46e, 0x64, 'The Gargon', 'land/dragon/100/dragon'];
case 'halloween_candyRus':
    return [_0x52ea48, 0x64, 'Candy Rus', 'arctic/walrus/100/walrus'];
case 'halloween_mantilian':
    return [_0xd7a1f1, 0x64, 'The Mantilian', 'land/lion/100/lion'];
case 'halloween_phantomRay':
    return [_0x46166b, 0x64, 'Phantom Ray', 'ocean/stingray/100/stingray'];
case 'halloween_suitedToucan':
    return [_0x3e06be, 0x64, 'The Dapper', 'land/toucan/100/toucan'];
case 'halloween_vulgeist':
    return [_0x53017e, 0x64, 'The Vulgeist', 'desert/vulture/100/vulture'];
case 'halloween_burlone':
    return [_0x5ef983, 0x64, 'The Burlone', 'desert/warthog/100/warthog'];
case 'halloween_unicornze':
    return [_0x39a5c5, 0x64, 'Unicornze', 'land/zebra/100/zebra'];
case 'gold_blackDragon':
    return [_0x5b6f26, 0x1, 'Golden\x0aBlack Dragon', 'volcano/blackdragon/1/blackdragon'];
case 'gold_kingDragon':
    return [_0x1ed4e2, 0x1, 'Golden\x0aKing Dragon', 'volcano/kingdragon/1/kingdragon'];
case 'gold_Dragon':
    return [_0x20f46e, 0x1, 'Golden\x0aDragon', 'land/dragon/1/dragon'];
case 'gold_kraken':
    return [_0x526523, 0x1, 'Golden\x0aKraken', 'ocean/kraken/1/kraken'];
case 'gold_yeti':
    return [_0x55a926, 0x1, 'Golden\x0aYeti', 'arctic/yeti/1/yeti'];
case 'gold_trex':
    return [_0x47ccac, 0x1, 'Golden\x0aT.Rex', 'land/trex/1/trex'];
case 'gold_kingCrab':
    return [_0x2350ea, 0x1, 'GoldenCrab', 'ocean/kingcrab/1/kingcrab'];
case 'gold_phoenix':
    return [_0x19e418, 0x1, 'Golden\x0aPhoenix', 'volcano/phoenix/1/phoenix'];
case 'gold_pterodactyl':
    return [_0x36b345, 0x1, 'Golden\x0aPterodactyl', 'desert/pterodactyl/1/pterodactyl_ability'];
case 'gold_iceMonster':
    return [_0x40da91, 0x1, 'Golden\x0aIce Monster', 'arctic/icemonster/1/icemonster'];
case 'gold_dinoMonster':
    return [_0x31a0ba, 0x1, 'Golden\x0aDino Monster', 'land/dinomonster/1/dinomonster'];
case 'gold_seaMonster':
    return [_0x380133, 0x1, 'Golden\x0aSea Monster', 'ocean/seamonster/1/seamonster'];
case 'gold_landMonster':
    return [_0x9ca027, 0x1, 'Golden\x0aLand Monster', 'volcano/landmonster/1/landmonster'];
case 'gold_giantScorion':
    return [_0x16390e, 0x1, 'Golden\x0aGiant Scorpion', 'desert/scorpion/1/giantscorpion'];
case 'gold_bluewhale':
    return [_0x13ad70, 0x1, 'Golden\x0aBlue Whale', 'ocean/bluewhale/1/bluewhale'];
case 'gold_elephant':
    return [_0x39357f, 0x1, 'Golden\x0aElephant', 'land/elephant/1/elephant'];
case 'gold_cassowary':
    return [_0x588f38, 0x1, 'Golden\x0aCassowary', 'land/cassowary/1/cassowary'];
case 'gold_giantspider':
    return [_0x4ab048, 0x1, 'Golden\x0aGiant Spider', 'land/giantspider/1/giantspider'];
case 'gold_blackwidow':
    return [_0x4ca51a, 0x1, 'Golden\x0aBlackwidow', 'desert/blackwidow/1/blackwidow'];
case 'gold_mammoth':
    return [_0x40ac2b, 0x1, 'Golden\x0aMammoth', 'arctic/mammoth/1/mammoth'];
case 'gold_hippo':
    return [_0x254b52, 0x1, 'Golden\x0aHippo', 'land/hippo/1/hippo'];
case 'gold_ostrich':
    return [_0xf59392, 0x1, 'Golden\x0aOstrich', 'land/ostrich/1/ostrich'];
case 'gold_boa':
    return [_0x17eda1, 0x1, 'Golden\x0aBoa', 'land/boaconstrictor/1/boaconstrictor'];
case 'gold_komodo':
    return [_0x5af7f2, 0x1, 'Golden\x0aKomodo', 'desert/komododragon/1/komodo'];
case 'gold_killerwhale':
    return [_0x697285, 0x1, 'Golden\x0aKiller Whale', 'ocean/killerwhale/1/killerwhale'];
case 'gold_sabertooth':
    return [_0x39e9c9, 0x1, 'Golden\x0aSabertooth', 'arctic/sabertooth/1/sabertooth'];
case 'skin_blueDragon':
    return [_0x5b6f26, 0x2, 'The\x0aAzure Bringer', 'volcano/blackdragon/2/blackdragon'];
case 'skin_kingRipper':
    return [_0x1ed4e2, 0x2, 'King\x0aRipper', 'volcano/kingdragon/2/kingdragon'];
case 'skin_kingStan':
    return [_0x1ed4e2, 0x3, 'King\x0aStan', 'volcano/kingdragon/3/kingdragon'];
case 'skin_kingShah':
    return [_0x1ed4e2, 0x4, 'King\x0aShah', 'volcano/kingdragon/4/kingdragon'];
case 'skin_dragon_gray':
    return [_0x20f46e, 0x2, 'Knight\x0aDragon', 'land/dragon/2/dragon'];
case 'skin_kraken_cyan':
    return [_0x526523, 0x2, 'Chromatic\x0aKraken', 'ocean/kraken/2/kraken'];
case 'skin_yeti_emerald':
    return [_0x55a926, 0x2, 'Emerald\x0aYeti', 'arctic/yeti/2/yeti'];
case 'skin_snowman':
    return [_0x24c923, 0x1, 'The\x0aSnowman', 'arctic/snowman/1/snowman'];
case 'skin_snowgirl':
    return [_0x24c923, 0x2, 'The\x0aSnowgirl', 'arctic/snowman/2/snowgirl'];
case 'skin_trex_gray':
    return [_0x47ccac, 0x2, 'Ember\x0aT.Rex', 'land/trex/2/trex'];
case 'skin_kingCrab':
    return [_0x2350ea, 0x2, 'Amethyst\x0aCrab', 'ocean/kingcrab/2/kingcrab'];
case 'skin_phoenix_blue':
    return [_0x19e418, 0x2, 'Alpha\x0aPhoenix', 'volcano/phoenix/2/phoenix'];
case 'skin_pterodactyl_green':
    return [_0x36b345, 0x2, 'Emerald\x0aPterodactyl', 'desert/pterodactyl/2/pterodactyl_ability'];
case 'skin_iceMonster':
    return [_0x40da91, 0x2, 'Amethyst\x0aMonster', 'arctic/icemonster/2/icemonster'];
case 'skin_dinoMonster':
    return [_0x31a0ba, 0x2, 'Citrine\x0aMonster', 'land/dinomonster/2/dinomonster'];
case 'skin_seaMonster':
    return [_0x380133, 0x2, 'Sapphire\x0aMonster', 'ocean/seamonster/2/seamonster'];
case 'skin_landMonster':
    return [_0x9ca027, 0x2, 'Titanite\x0aMonster', 'volcano/landmonster/2/landmonster'];
case 'skin_orangeScorpion':
    return [_0x16390e, 0x2, 'Carnelian\x0aScorpion', 'desert/scorpion/2/giantscorpion'];
case 'skin_bluewhale':
    return [_0x13ad70, 0x2, 'Albino\x0aBlue Whale', 'ocean/bluewhale/2/bluewhale'];
case 'skin_elephant':
    return [_0x39357f, 0x2, 'White\x0aElephant', 'land/elephant/2/elephant'];
case 'skin_cassowary':
    return [_0x588f38, 0x2, 'Cotton\x0aCassowary', 'land/cassowary/2/cassowary'];
case 'skin_giantspider':
    return [_0x4ab048, 0x2, 'Goliath\x0aSpider', 'land/giantspider/2/giantspider'];
case 'skin_blackwidow':
    return [_0x4ca51a, 0x2, 'Queen\x0aBlackwidow', 'desert/blackwidow/2/blackwidow'];
case 'skin_mammoth':
    return [_0x40ac2b, 0x2, 'Black\x0aMammoth', 'arctic/mammoth/2/mammoth'];
case 'skin_hippo':
    return [_0x254b52, 0x2, 'Pygmy\x0aHippo', 'land/hippo/2/hippo'];
case 'skin_ostrich':
    return [_0xf59392, 0x2, 'Ruffled\x0aOstrich', 'land/ostrich/2/ostrich'];
case 'skin_boa':
    return [_0x17eda1, 0x2, 'Tree\x0aBoa', 'land/boaconstrictor/2/boaconstrictor'];
case 'skin_komodo':
    return [_0x5af7f2, 0x2, 'Night\x0aKomodo', 'desert/komododragon/2/komodo'];
case 'skin_killerwhale':
    return [_0x697285, 0x2, 'Albino\x0aOrca', 'ocean/killerwhale/2/killerwhale'];
case 'skin_sabertooth':
    return [_0x39e9c9, 0x2, 'Margala\x0aSabertooth', 'arctic/sabertooth/2/sabertooth'];
case 'skin_tigerShark':
    return [_0x2fd73b, 0x2, 'Tiger\x0aShark', 'ocean/shark/1/shark', !![]];
case 'skin_hamerHeadShark':
    return [_0x2fd73b, 0x3, 'Hammerhead\x0aShark', 'ocean/shark/2/shark', !![]];
case 'skin_panda':
    return [_0x189024, 0x2, 'Panda', 'land/panda/panda', !![]];
case 'skin_zonkey':
    return [_0xdb1a28, 0x3, 'Zonkey', 'land/donkey/2/zonkey', !![]];
case 'skin_okapi':
    return [_0x39a5c5, 0x2, 'Okapi', 'land/okapi/okapi', !![]];
case 'skin_giantCroc':
    return [_0x1d3e9a, 0x2, 'Giant\x0aCrocodile', 'land/croc/1/croc', !![]];
case 'skin_purpleMouse':
    return [_0xb392ab, 0x2, 'Purple\x0aMouse', 'land/mouse/2/mouse', !![]];
case 'skin_prismaToucan':
    return [_0x3e06be, 0x6, 'Prisma\x0aToucan', 'land/toucan/6/toucan', !![]];
case 'gold_mouse':
    return [_0xb392ab, 0x2, 'Golden\x0aMouse', 'land/mouse/1/mouse', !![]];
case 'skin_queenScarlet':
    return [_0x1ed4e2, 0x5, 'Queen\x0aScarlet', 'volcano/kingdragon/5/kingdragon', !![]];
case 'skin_queenCeleste':
    return [_0x1ed4e2, 0x6, 'Queen\x0aCeleste', 'volcano/kingdragon/6/kingdragon', !![]];
case 'skin_bigFoot':
    return [_0x363563, 0x1, 'The\x0aBigfoot', 'land/bigfoot/thebigfoot', !![]];
case 'skin_woollyRhino':
    return [_0xd3040d, 0x3, 'Woolly\x0aRhino', 'land/rhino/3/rhino', !![]];
}
return null;
}, _0x5e4984['prototype']['loadData'] = function () {
_0x572ec5(function (_0x5a4a14, _0x343639) {
    var _0x52c5ae = {
        'shopItems': [],
        'settings': []
    };
    if (!_0x5a4a14) {
        _0x13b3b1('Could not connect to AccountServer!', 'itemDoesntExist', 0x5);
        return;
    }
    console['log'](_0x343639);
    if (_0x343639) {
        for (var _0x11dfc2 = 0x0; _0x11dfc2 < _0x343639['shopItems']['length']; _0x11dfc2++) {
            var _0x16c61a = _0x343639['shopItems'][_0x11dfc2];
            _0x16c61a['purchasedByPlayer'] && (_0x16c61a['coinsPrice'] = -0x1), _0x52c5ae['shopItems']['push'](_0x16c61a);
        }
        if (_0x343639['settings'])
            for (var _0x11dfc2 = 0x0; _0x11dfc2 < _0x343639['settings']['length']; _0x11dfc2++) {
                _0x52c5ae['settings']['push'](_0x343639['settings'][_0x11dfc2]);
            }
    }
    var _0x2ab47d = {
            'tab': 'Skins',
            'shopItems': []
        },
        _0x5ed6a9 = {
            'tab': 'Golden',
            'shopItems': []
        },
        _0x4b324b = {
            'tab': 'Locked',
            'shopItems': []
        },
        _0x37ec17 = {
            'tab': 'Halloween',
            'shopItems': []
        },
        _0x3e2d99 = {
            'tab': 'Deals',
            'shopItems': []
        },
        _0x5e7899 = {
            'tab': 'Features',
            'shopItems': []
        },
        _0x3db018 = [],
        _0xfc2270 = [_0x2ab47d, _0x5e7899, _0x3e2d99];
    for (_0x11dfc2 = 0x0; _0x11dfc2 < _0x52c5ae['shopItems']['length']; _0x11dfc2++) {
        var _0x5424e6 = _0x52c5ae['shopItems'][_0x11dfc2];
        switch (_0x5424e6['shopCategory']) {
        case 'halloween':
        case 'locked':
        case 'gold': {
            var _0x5791cd = _0x5e4984['prototype']['getAnimalInfo'](_0x5424e6['itemName'], _0x5424e6);
            _0x5791cd && (_0x5424e6['id'] = _0x5424e6['itemName'], _0x5424e6['oType'] = _0x4ad968, _0x5424e6['animalType'] = _0x5791cd[0x0], _0x5424e6['animalSpecies'] = _0x5791cd[0x1], _0x5424e6['skinName'] = _0x5791cd[0x2], _0x5424e6['skinImage'] = _0x5791cd[0x3], _0x2ab47d['shopItems']['push'](_0x5424e6));
        }
        break;
        case 'feature': {
            if (_0x5424e6['itemType'] == 'animal') {
                var _0x5791cd = _0x5e4984['prototype']['getAnimalInfo'](_0x5424e6['itemName']);
                _0x5791cd ? (_0x5424e6['id'] = _0x5424e6['itemName'], _0x5424e6['oType'] = _0x4ad968, _0x5424e6['animalType'] = _0x5791cd[0x0], _0x5424e6['animalSpecies'] = _0x5791cd[0x1], _0x5424e6['skinName'] = _0x5791cd[0x2], _0x5424e6['skinImage'] = _0x5791cd[0x3], _0x5e7899['shopItems']['push'](_0x5424e6)) : console['log']('No animal type data for shop item ' + _0x5424e6['itemName']);
            } else {
                if (_0x5424e6['itemType'] == 'feature') {
                    var _0x3cb255 = _0x5e4984['prototype']['getFeatureInfo'](_0x5424e6['itemName']) || {
                        'title': 'Feature'
                    };
                    _0x5424e6['id'] = _0x5424e6['itemName'], _0x5424e6['oType'] = _0xc120c7, _0x5424e6['title'] = _0x3cb255['title'], _0x5e7899['shopItems']['push'](_0x5424e6);
                }
            }
        }
        break;
        case 'deal': {
            _0x5424e6['id'] = _0x5424e6['itemName'], _0x5424e6['oType'] = _0x107e5a, _0x3e2d99['shopItems']['push'](_0x5424e6);
        }
        break;
        default:
        }
    }
    var _0xc34781 = {
        'skins': _0xfc2270
    };
    _0x5e4984['prototype']['shop'] = {
        'ownedSkins': [],
        'ownedAnimals': [],
        'ownedDeals': [],
        'ownedProps': [],
        'settings': _0x52c5ae['settings'],
        'skins': [],
        'props': [],
        'banners': _0x52c5ae['banners']
    };
    var _0x496e65 = [],
        _0x148438 = [];
    for (t = 0x0; t < _0xc34781['skins']['length']; t++) {
        var _0x10857d = _0xc34781['skins'][t];
        for (_0x11dfc2 = 0x0; _0x11dfc2 < _0x10857d['shopItems']['length']; _0x11dfc2++) {
            var _0x35650d = _0x10857d['shopItems'][_0x11dfc2],
                _0x269857 = _0x557db7['newlyVis_createGameObjFromMsg'](_0x35650d['itemType'], _0x35650d);
            if (_0x35650d['isTemporary']) _0x269857['isTemporary'] = !![];
            if (_0x269857['coinsPrice'] == -0x1 && _0x269857['data']['itemType'] == 'skin') !_0x5e4984['prototype']['shop']['ownedSkins'][_0x35650d['itemName']] && (_0x5e4984['prototype']['shop']['ownedSkins'][_0x35650d['itemName']] = _0x269857, _0x5e4984['prototype']['shop']['ownedSkins']['push'](_0x269857));
            else {
                if (_0x269857['coinsPrice'] == -0x1 && _0x269857['data']['itemType'] == 'animal') !_0x5e4984['prototype']['shop']['ownedAnimals'][_0x35650d['itemName']] && (_0x5e4984['prototype']['shop']['ownedAnimals'][_0x35650d['itemName']] = _0x269857, _0x5e4984['prototype']['shop']['ownedAnimals']['push'](_0x269857));
                else _0x269857['coinsPrice'] == -0x1 && _0x269857['data']['itemType'] == 'deal' && _0x5e4984['prototype']['shop']['ownedDeals']['push'](_0x269857);
            }
            if (_0x35650d['saleType'] > -0x1 && _0x35650d['canBuy'] == !![]) _0x496e65['push'](_0x269857);
            else _0x148438['push'](_0x269857);
        }
    }
    _0x5e4984['prototype']['shop']['allItems'] = _0x496e65;
    for (d = 0x0; d < _0x5e4984['prototype']['shop']['ownedDeals']['length']; d++) {
        var _0x111734 = _0x5e4984['prototype']['shop']['ownedDeals'][d];
        for (s = 0x0; s < _0x496e65['length']; s++) {
            var _0x35650d = _0x496e65[s];
            _0x35650d['data']['promotions'] !== undefined && _0x35650d['data']['promotions']['length'] > 0x0 && (_0x35650d['data']['promotions']['indexOf'](_0x111734['itemName']) > -0x1 && (console['log'](_0x496e65[s]), _0x35650d['coinsPrice'] = -0x1, !_0x5e4984['prototype']['shop']['ownedSkins'][_0x35650d['data']['itemName']] && _0x5e4984['prototype']['shop']['ownedSkins']['push'](_0x35650d)));
        }
        for (s = 0x0; s < _0x148438['length']; s++) {
            var _0x35650d = _0x148438[s];
            _0x35650d['data']['promotions'] !== undefined && _0x35650d['data']['promotions']['length'] > 0x0 && (_0x35650d['data']['promotions']['indexOf'](_0x111734['itemName']) > -0x1 && (_0x35650d['coinsPrice'] = -0x1, !_0x5e4984['prototype']['shop']['ownedSkins'][_0x35650d['data']['itemName']] && _0x5e4984['prototype']['shop']['ownedSkins']['push'](_0x35650d)));
        }
    }
    for (_0x11dfc2 = 0x0; _0x11dfc2 < _0x5e4984['prototype']['shop']['allItems']['length']; _0x11dfc2++) {
        _0x5e4984['prototype']['shop']['allItems'][_0x5e4984['prototype']['shop']['allItems'][_0x11dfc2]['data']['itemName']] = _0x5e4984['prototype']['shop']['allItems'][_0x11dfc2];
    }
    for (t = 0x0; t < _0xc34781['skins']['length']; t++) {
        var _0x10857d = _0xc34781['skins'][t],
            _0x1eac0f = _0x10857d['tab'],
            _0x47fa71 = {
                'name': _0x1eac0f,
                'items': []
            };
        _0x5e4984['prototype']['shop']['skins']['push'](_0x47fa71), _0x5e4984['prototype']['shop']['skins'][_0x1eac0f] = _0x47fa71;
        for (_0x11dfc2 = 0x0; _0x11dfc2 < _0x10857d['shopItems']['length']; _0x11dfc2++) {
            var _0x35650d = _0x10857d['shopItems'][_0x11dfc2];
            for (a = 0x0; a < _0x496e65['length']; a++) {
                var _0x56b7fe = _0x496e65[a];
                _0x35650d['id'] == _0x56b7fe['id'] && _0x56b7fe['coinsPrice'] > -0x1 && _0x47fa71['items']['push'](_0x56b7fe);
            }
        }
    }
    $bus['emit']($bus['EVENTS']['LOADED_SHOP_DATA'], {
        'shopData': {
            ..._0x5e4984['prototype']['shop']
        },
        'responseObject': _0x343639
    });
});
}, _0x5e4984['prototype']['ownedItems'] = new Array(), _0x5e4984['prototype']['shop'] = null, _0x5e4984['prototype']['shopDiv'] = null, _0x5e4984['prototype']['callback'] = null;
var _0x25ad7b = 0x0,
_0xf5c7f6 = 0x1,
_0x13489b = 0x2;
_0x5e4984['prototype']['upgradeMenu_callback'] = null, $bus['on']($bus['EVENTS']['UI_PURCHASE_SHOP_ITEM'], _0x491c30 => {
_0x2bc641(_0x491c30, function (_0x2ab8f8, _0x4d0030) {
    if (_0x2ab8f8) $bus['emit']($bus['EVENTS']['PURCHASE_ITEM_RESPONSE'], {
        'success': !![],
        'itemName': _0x491c30
    }), _0xb6ad3e(), _0x4b39f();
    else switch (_0x4d0030) {
    case 'alreadyowned':
        $bus['emit']($bus['EVENTS']['PURCHASE_ITEM_RESPONSE'], {
            'success': ![],
            'itemName': _0x491c30,
            'error': 'AccountServer: item already purchased!'
        });
        break;
    case 'cantafford':
        $bus['emit']($bus['EVENTS']['PURCHASE_ITEM_RESPONSE'], {
            'success': ![],
            'itemName': _0x491c30,
            'error': 'AccountServer: not enough coins to buy this!'
        });
        break;
    case 'itemDoesntExist':
        $bus['emit']($bus['EVENTS']['PURCHASE_ITEM_RESPONSE'], {
            'success': ![],
            'itemName': _0x491c30,
            'error': 'AccountServer: Item doesn\'t exist!'
        });
        break;
    default:
        $bus['emit']($bus['EVENTS']['PURCHASE_ITEM_RESPONSE'], {
            'success': ![],
            'itemName': _0x491c30,
            'error': 'Failed to purchase item'
        });
        break;
    }
});
}), _0x5e4984['prototype']['getSkinPath'] = function (_0x23d24c, _0xfeb0d9) {
console['log']('getskin path');
var _0x37c351 = _0x13dc56['createGameObjOfOType'](_0x4ad968, _0x23d24c);
_0x37c351['animalType'] = _0x23d24c, _0x37c351['animalSpecies'] = 0x0, _0x37c351['animalSubSpecies'] = 0x0, _0x37c351['animalPremiumSkin'] = 0x0, _0x37c351['curBiome'] = 0x0, _0x37c351['lava'] = 0x64, _0x37c351['mopeSeasonID'] = 0x0, _0x37c351['skinThemeID'] = _0xfeb0d9;
var _0x4f036f = _0x37c351['animalInfo'](),
    _0x3d6143 = _0x37c351['getSkinImagePathForShop'](_0x4f036f['skinName']);
return _0x3d6143 = this['ifMultiAssetSkin'](_0x23d24c, _0x3d6143), _0x3d6143 + '.png';
}, _0x5e4984['prototype']['ifMultiAssetSkin'] = function (_0x3678cc, _0x32630b) {
switch (_0x3678cc) {
case 0x13:
case 0x1d:
case 0x1b:
case 0x14:
case 0x12:
case 0x17:
case _0x52507b:
    _0x32630b = _0x32630b;
    break;
}
return _0x32630b;
}, _0x5e4984['prototype']['getPostFixForItem'] = function (_0x4a7a0f) {
switch (_0x4a7a0f) {
case 'halloween_pufferMace':
    return '1';
}
return null;
}, _0x5e4984['prototype']['createField'] = function (_0x10209b, _0x3b79ac, _0x2b8a79, _0x5e8cb1, _0x1f28a5) {
var _0x57fa38 = _0x16050c('', _0x2b8a79),
    _0x10209b = _0x16050c('', _0x5e8cb1),
    _0x3b79ac = _0x16050c('', _0x1f28a5);
return _0x57fa38['appendChild'](_0x10209b), _0x57fa38['appendChild'](_0x3b79ac), _0x57fa38;
}, _0x5e4984['prototype']['addCloseButton'] = function (_0x205dae) {
var _0x16cd40 = _0x3ae893('div', 'close-shop');
_0x16cd40['onclick'] = function () {
    closeShop();
}, _0x16cd40['innerHTML'] = 'X', _0x205dae['appendChild'](_0x16cd40);
}, _0x5e4984['prototype']['updateCoinsBalance'] = function () {
console['log']('coins balance updated');
var _0x42a5c2 = _0x462db4;
_0x42a5c2['level'] = Math['round'](_0x5e22a2(0x1, 0xa)), _0x42a5c2['xp'] = 0x32, _0x42a5c2['xpNextLvl'] = _0x42a5c2['xp'] + 0x12c;
var _0x2e4ea3 = Math['round'](_0x42a5c2['xp']),
    _0x12afe5 = document['getElementById']('coins');
if (_0x12afe5) {
    _0x12afe5['innerHTML'] = this['coinsFormat'](_0x1a13ff());
    var _0x30e6c2 = document['getElementById']('userxp-barbar'),
        _0x55c6f9 = document['getElementById']('userxp-val'),
        _0x531ffe = document['getElementById']('userxp-star');
    _0x55c6f9['innerHTML'] = _0x2e4ea3 + ' / ' + _0x42a5c2['xpNextLvl'], _0x2e4ea3 = _0x2e4ea3 / _0x42a5c2['xpNextLvl'] * 0x64, _0x30e6c2['style']['width'] = _0x2e4ea3 + 'px', _0x531ffe['innerHTML'] = _0x42a5c2['level'];
}
var _0x589f89 = document['getElementById']('coins2');
if (_0x589f89) {
    _0x589f89['innerHTML'] = _0x1a13ff();
    var _0x30e6c2 = document['getElementById']('userxp-barbar2'),
        _0x55c6f9 = document['getElementById']('userxp-val2'),
        _0x531ffe = document['getElementById']('userxp-star2');
    _0x55c6f9['innerHTML'] = _0x2e4ea3 + ' / ' + _0x42a5c2['xpNextLvl'], _0x2e4ea3 = _0x2e4ea3 / _0x42a5c2['xpNextLvl'] * 0x64, _0x30e6c2['style']['width'] = _0x2e4ea3 + 'px', _0x531ffe['innerHTML'] = _0x42a5c2['level'];
}
}, _0x5e4984['prototype']['coinsFormat'] = function (_0x405393) {
console['log']('coinsFormat');
var _0x565589 = '' + _0x405393;
return _0x565589 = _0x565589['toString']()['replace'](/\B(?=(\d{3})+(?!\d))/g, ','), _0x565589;
}, _0x5e4984['prototype']['enableClothingShop'] = ![], _0x5e4984['prototype']['getItemByName'] = function (_0x1258b2) {
if (this['shop']['allItems'])
    for (i = 0x0; i < this['shop']['allItems']['length']; i++) {
        if (this['shop']['allItems'][i]['itemName'] == _0x1258b2) return this['shop']['allItems'][i];
    }
return null;
}, _0x5e4984['prototype']['deleteTab'] = function () {
var _0x537ca8 = document['getElementById']('shop_div');
_0x537ca8 && _0x537ca8['parentNode']['removeChild'](_0x537ca8);
}, _0x5e4984['prototype']['getShopFilters'] = function () {}, $bus['on']($bus['EVENTS']['PLAY_CLICK_SOUND'], () => {
_0x28fd9e();
}), _0x5e4984['prototype']['props'] = {
'hatsColor': '',
'beardsColor': '',
'glassesColor': '',
'scarfsColor': ''
}, _0x5e4984['prototype']['propBought'] = {
'hats': {
    'white': 0x1,
    'red': 0x0,
    'green': 0x0,
    'blue': 0x1,
    'pink': 0x0,
    'gold': 0x0
},
'beards': {
    'white': 0x0,
    'red': 0x1,
    'green': 0x0,
    'blue': 0x0,
    'pink': 0x0,
    'gold': 0x1
},
'glasses': {
    'white': 0x0,
    'red': 0x1,
    'green': 0x1,
    'blue': 0x0,
    'pink': 0x0,
    'gold': 0x0
},
'scarfs': {
    'white': 0x0,
    'red': 0x1,
    'green': 0x0,
    'blue': 0x1,
    'pink': 0x0,
    'gold': 0x1
}
}, _0x5e4984['prototype']['hasBoughtProp'] = function (_0x54d085, _0xc03a7e) {
var _0x2fad7f = this['propBought'][_0x54d085][_0xc03a7e];
if (_0x2fad7f === 0x1) return !![];
return ![];
}, _0x5e4984['prototype']['isPropSelected'] = function (_0x2979f1, _0x1c8109) {
var _0x4d04dd = this['getPropColorNum'](_0x1c8109),
    _0x4af43c = this['props'][_0x2979f1 + 'Color'];
return _0x4af43c === _0x4d04dd;
}, _0x5e4984['prototype']['showProp'] = function (_0x573e9e) {
var _0x18d2d2 = document['getElementById']('propDisplay');
_0x18d2d2['style']['display'] = 'block';
var _0x22bec1 = document['getElementById']('btn-' + _0x573e9e);
if (_0x22bec1) {
    var _0x195e01 = document['getElementById']('btn-hats'),
        _0x40bda5 = document['getElementById']('btn-glasses'),
        _0x2578bb = document['getElementById']('btn-beards'),
        _0x36d65f = document['getElementById']('btn-scarfs');
    _0x195e01['className'] = 'clothingbtn', _0x40bda5['className'] = 'clothingbtn', _0x2578bb['className'] = 'clothingbtn', _0x36d65f['className'] = 'clothingbtn', _0x22bec1['className'] = 'clothingbtn selected';
    var _0x3104e4 = document['getElementById']('propColors');
    _0x3104e4['innerHTML'] = '';
    var _0x1170c7 = _0x3ae893('div', 'propColor-white', 'propColor propColor-white' + (this['isPropSelected'](_0x573e9e, 'white') ? ' selected' : '') + (this['hasBoughtProp'](_0x573e9e, 'white') ? ' bought' : '')),
        _0x42af39 = _0x3ae893('div', 'propColor-red', 'propColor propColor-red' + (this['isPropSelected'](_0x573e9e, 'red') ? ' selected' : '') + (this['hasBoughtProp'](_0x573e9e, 'red') ? ' bought' : '')),
        _0x334b91 = _0x3ae893('div', 'propColor-green', 'propColor propColor-green' + (this['isPropSelected'](_0x573e9e, 'green') ? ' selected' : '') + (this['hasBoughtProp'](_0x573e9e, 'green') ? ' bought' : '')),
        _0x2519a7 = _0x3ae893('div', 'propColor-blue', 'propColor propColor-blue' + (this['isPropSelected'](_0x573e9e, 'blue') ? ' selected' : '') + (this['hasBoughtProp'](_0x573e9e, 'blue') ? ' bought' : '')),
        _0x48b5a7 = _0x3ae893('div', 'propColor-pink', 'propColor propColor-pink' + (this['isPropSelected'](_0x573e9e, 'pink') ? ' selected' : '') + (this['hasBoughtProp'](_0x573e9e, 'pink') ? ' bought' : '')),
        _0x5bd080 = _0x3ae893('div', 'propColor-gold', 'propColor propColor-gold' + (this['isPropSelected'](_0x573e9e, 'gold') ? ' selected' : '') + (this['hasBoughtProp'](_0x573e9e, 'gold') ? ' bought' : ''));
    _0x1170c7['appendChild'](_0x3ae893('div', '', 'color')), _0x42af39['appendChild'](_0x3ae893('div', '', 'color')), _0x334b91['appendChild'](_0x3ae893('div', '', 'color')), _0x2519a7['appendChild'](_0x3ae893('div', '', 'color')), _0x48b5a7['appendChild'](_0x3ae893('div', '', 'color')), _0x5bd080['appendChild'](_0x3ae893('div', '', 'color')), _0x1170c7['onclick'] = function () {
        _0x1f4449['setPropColor'](_0x573e9e, 'white');
    }, _0x42af39['onclick'] = function () {
        _0x1f4449['setPropColor'](_0x573e9e, 'red');
    }, _0x334b91['onclick'] = function () {
        _0x1f4449['setPropColor'](_0x573e9e, 'green');
    }, _0x2519a7['onclick'] = function () {
        _0x1f4449['setPropColor'](_0x573e9e, 'blue');
    }, _0x48b5a7['onclick'] = function () {
        _0x1f4449['setPropColor'](_0x573e9e, 'pink');
    }, _0x5bd080['onclick'] = function () {
        _0x1f4449['setPropColor'](_0x573e9e, 'gold');
    }, _0x3104e4['appendChild'](_0x1170c7), _0x3104e4['appendChild'](_0x42af39), _0x3104e4['appendChild'](_0x334b91), _0x3104e4['appendChild'](_0x2519a7), _0x3104e4['appendChild'](_0x48b5a7), _0x3104e4['appendChild'](_0x5bd080);
    var _0x4a38ac = document['getElementById']('propBuyDiv');
    _0x4a38ac['innerHTML'] = '';
}
}, _0x5e4984['prototype']['propAnimal'] = null, _0x5e4984['prototype']['updatePropsForAnimal'] = function () {
console['log'](this['props']);
var _0x5b1989 = _0xb392ab,
    _0x15a24a = _0x13dc56['createGameObjOfOType'](_0x4ad968, _0x5b1989);
_0x15a24a['animalType'] = _0x5b1989, _0x15a24a['animalSpecies'] = 0x0, _0x15a24a['animalSubSpecies'] = 0x0, _0x15a24a['animalPremiumSkin'] = 0x0;
var _0x5113ec = _0x16050c('', 'propimg'),
    _0x393bd0 = _0x16050c('', 'propimg'),
    _0xf2303 = _0x16050c('', 'propimg'),
    _0x4a8227 = _0x16050c('', 'propimg'),
    _0xec7323 = _0x16050c('', 'propimg'),
    _0x485f6d = document['getElementById']('propAnimal');
_0x485f6d['innerHTML'] = '';
var _0x5a1614 = 'skins/' + _0x15a24a['animalInfo']()['skinName'] + '.png',
    _0x1771b1 = '/props/' + _0x5b1989 + '/beards/' + this['props']['beardsColor'] + '.png',
    _0x1ad5af = '/props/' + _0x5b1989 + '/hats/' + this['props']['hatsColor'] + '.png',
    _0x57d489 = '/props/' + _0x5b1989 + '/scarfs/' + this['props']['scarfsColor'] + '.png',
    _0x235204 = '/props/' + _0x5b1989 + '/glasses/' + this['props']['glassesColor'] + '.png';
console['log'](_0x1771b1), _0x393bd0['style']['backgroundImage'] = 'url(' + _0x1771b1 + ')', _0x5113ec['style']['backgroundImage'] = 'url(' + _0x5a1614 + ')', _0xf2303['style']['backgroundImage'] = 'url(' + _0x1ad5af + ')', _0x4a8227['style']['backgroundImage'] = 'url(' + _0x57d489 + ')', _0xec7323['style']['backgroundImage'] = 'url(' + _0x235204 + ')', _0x485f6d['appendChild'](_0x393bd0), _0x485f6d['appendChild'](_0x5113ec), _0x485f6d['appendChild'](_0x4a8227), _0x485f6d['appendChild'](_0xec7323), _0x485f6d['appendChild'](_0xf2303);
}, _0x5e4984['prototype']['getPropColorNum'] = function (_0x4513e8) {
switch (_0x4513e8) {
case 'white':
    return 0x0;
case 'red':
    return 0x1;
case 'green':
    return 0x2;
case 'blue':
    return 0x3;
case 'pink':
    return 0x4;
case 'gold':
    return 0x5;
}
}, _0x5e4984['prototype']['setPropColor'] = function (_0x3577b, _0x5a7c8e) {
var _0x3b6e91 = _0x3577b + 'Color',
    _0x374beb = document['getElementById']('propColor-' + _0x5a7c8e),
    _0x1ebfbb = document['getElementById']('propColor-red'),
    _0x39d27c = document['getElementById']('propColor-green'),
    _0x3da671 = document['getElementById']('propColor-blue'),
    _0x224d3b = document['getElementById']('propColor-pink'),
    _0x3c78e3 = document['getElementById']('propColor-white'),
    _0xee9296 = document['getElementById']('propColor-gold');
_0x1ebfbb['className'] = 'propColor propColor-red' + (this['hasBoughtProp'](_0x3577b, 'red') ? ' bought' : ''), _0x39d27c['className'] = 'propColor propColor-green' + (this['hasBoughtProp'](_0x3577b, 'green') ? ' bought' : ''), _0x3da671['className'] = 'propColor propColor-blue' + (this['hasBoughtProp'](_0x3577b, 'blue') ? ' bought' : ''), _0x224d3b['className'] = 'propColor propColor-pink' + (this['hasBoughtProp'](_0x3577b, 'pink') ? ' bought' : ''), _0x3c78e3['className'] = 'propColor propColor-white' + (this['hasBoughtProp'](_0x3577b, 'white') ? ' bought' : ''), _0xee9296['className'] = 'propColor propColor-gold' + (this['hasBoughtProp'](_0x3577b, 'gold') ? ' bought' : '');
var _0x3177c7 = document['getElementById']('propBuyDiv');
_0x3177c7['innerHTML'] = '';
var _0x108a5c = _0x3ae893('div', 'propBuyBtn', 'buybutton');
_0x108a5c['onclick'] = function () {
    alert('buy prop: ' + _0x3577b + ' color: ' + _0x5a7c8e);
};
if (this['isPropSelected'](_0x3577b, _0x5a7c8e)) this['props'][_0x3b6e91] = '', _0x374beb['className'] = 'propColor propColor-' + _0x5a7c8e;
else {
    this['props'][_0x3b6e91] = this['getPropColorNum'](_0x5a7c8e), _0x374beb['className'] = 'propColor propColor-' + _0x5a7c8e + ' selected';
    if (!this['hasBoughtProp'](_0x3577b, _0x5a7c8e)) {
        var _0x254019 = new Image();
        _0x254019['className'] = 'buycoin-img', _0x254019['src'] = 'shop/mopecoin.png';
        var _0x5ec4cb = _0x3ae893('span', '', 'buycoin-price');
        _0x5ec4cb['innerHTML'] = 0x64 + this['getPropColorNum'](_0x5a7c8e) * 0x64, _0x108a5c['appendChild'](_0x254019), _0x108a5c['appendChild'](_0x5ec4cb), _0x3177c7['appendChild'](_0x108a5c);
    }
}
this['updatePropsForAnimal']();
}, _0x5e4984['prototype']['curTabPage'] = 0x0, _0x5e4984['prototype']['version'] = 0.2, _0x5e4984['prototype']['playerSettings_update'] = function (_0x25c0a5) {
console['log']('update: ' + _0x25c0a5), _0x5e8551(_0x25c0a5, function (_0xbda4d1, _0x4abcf5) {
    if (_0xbda4d1) _0x13b3b1('Settings updated successfully!', 'success', 0x5), $bus['emit']($bus['EVENTS']['SHOP_SETTING_CHANGED'], _0x25c0a5), _0xb6ad3e(), _0x4b39f(!![]);
    else switch (_0x4abcf5) {
    case 'alreadyowned':
        _0x13b3b1('AccountServer: item already purchased!', _0x4abcf5, 0xf);
        break;
    case 'cantafford':
        _0x13b3b1('AccountServer: not enough coins to buy this!', _0x4abcf5, 0xf);
        break;
    case 'urlnotfound':
        _0x13b3b1('AccountServer: Can\'t reach server at this moment!', 'itemDoesntExist', 0xf);
        break;
    }
});
}, window['MopeShop'] = _0x5e4984;
var _0x1f4449 = new _0x5e4984();
$bus['on']($bus['EVENTS']['UI_SHOP_SETTING_ACTION'], _0x44e23a => {
_0x1f4449['playerSettings_update'](_0x44e23a);
});

function _0x2f3d73(_0x396742) {
var _0x68ecb9 = _0x3ae893('input', 'txtCopy');
_0x68ecb9['setAttribute']('type', 'text'), _0x68ecb9['setAttribute']('value', _0x396742), console['log'](_0x68ecb9), _0x68ecb9['select'](), _0x68ecb9['setSelectionRange'](0x0, 0x1869f), document['execCommand']('copy'), alert('Copied the text: ' + _0x68ecb9['value']);
}
_0x1f4449['loadData'](), _0x5e4984['prototype']['getAnimalInfo'] = function (_0x48e16d, _0x7181cd) {
switch (_0x48e16d) {
case 'sampleTestSkin':
    return [_0xb392ab, 0xfa, 'Sample Mouse', 'land/mouse/250/mouse'];
case 'summer21_seamonster':
    return [_0x380133, 0xc9, 'Ancient Tortoise', 'ocean/seamonster/201/seamonster'];
case 'summer21_puffer':
    return [_0x52507b, 0xc9, 'Omniball Puffer', 'ocean/pufferfish/201/pufferfish'];
case 'summer21_turtle':
    return [_0x1597d0, 0xc9, 'Kiwi Turtle', 'ocean/turtle/201/turtle'];
case 'summer21_octopus':
    return [_0x1bdc24, 0xc9, 'Fuchsia Tiger', 'ocean/octopus/201/octopus.ui'];
case 'summer21_orca':
    return [_0x697285, 0xc9, 'Lifeguard Orca', 'ocean/killerwhale/201/killerwhale'];
case 'summer21_iceMonster':
    return [_0x40da91, 0xc9, 'Cryo Coach Monster', 'arctic/icemonster/201/icemonster'];
case 'summer21_mammoth':
    return [_0x40ac2b, 0xc9, 'Lost Tourist', 'arctic/mammoth/201/mammoth'];
case 'summer21_crab':
    return [_0x1a993f, 0xc9, 'Coconut Crab', 'ocean/crab/201/crab'];
case 'summer21_hare':
    return [_0x323cb6, 0xc9, 'Snow Cone Hare', 'arctic/arctichare/201/arctichare'];
case 'summer21_shrimp':
    return [_0x4c5efa, 0xc9, 'Chef Shrimp', 'ocean/shrimp/201/shrimp'];
case 'summer21_walrus':
    return [_0x52ea48, 0xc9, 'Walrusmelon', 'arctic/walrus/201/walrus'];
case 'summer21_squid':
    return [_0xab40e7, 0xc9, 'Seacoast Squid', 'ocean/squid/201/squid.ui'];
case 'summer21_fox':
    return [_0x84499b, 0xc9, 'Forest Sprit Fox', 'arctic/arcticfox/201/arcticfox'];
case 'summer21_seal':
    return [_0x1fc0ae, 0xc9, 'Hawaiian Monk', 'arctic/seal/201/seal'];
case 'summer21_wolf':
    return [_0x45e678, 0xc9, 'Pineapple Wolf', 'arctic/wolf/201/wolf'];
case 'summer21_markhor':
    return [_0x4a8972, 0xc9, 'Fruity Ice Markhor', 'arctic/markhor/201/1/markhor'];
case 'summer21_warthog':
    return [_0x5ef983, 0xc9, 'Flame Tiki', 'desert/warthog/201/warthog'];
case 'summer21_chicken':
    return [_0x19475c, 0xc9, 'Countryside Chick', 'land/chicken/201/chicken'];
case 'summer21_owl':
    return [_0x81deb4, 0xc9, 'Snowy Owrigami', 'arctic/snowyowl/201/snowyowl'];
case 'summer21_zebra':
    return [_0x39a5c5, 0xc9, 'Playground Zebra', 'land/zebra/201/zebra'];
case 'summer21_croc':
    return [_0x1d3e9a, 0xc9, 'Big Hoss', 'land/croc/201/croc'];
case 'summer21_meerkat':
    return [_0x441e79, 0xc9, 'Scubakat', 'desert/meerkat/201/meerkat'];
case 'summer21_rhino':
    return [_0xd3040d, 0xc9, 'Shrub Rhino', 'land/rhino/201/rhino'];
case 'summer21_elephant':
    return [_0x39357f, 0xc9, 'Leiphant', 'land/elephant/201/elephant'];
case 'summer21_pig':
    return [_0x4cff3a, 0xc9, 'Floaty Pig', 'land/pig/201/pig'];
case 'summer21_camel':
    return [_0x1be7db, 0xc9, 'Balloon Warrior', 'desert/camel/201/camel'];
case 'summer21_hyena':
    return [_0x67df53, 0xc9, 'DJ Hyena', 'desert/hyena/201/hyena'];
case 'summer21_gorilla':
    return [_0x199c9a, 0xc9, 'Explorer Ape', 'land/gorilla/201/gorilla'];
case 'summer21_squishyYeti':
    return [_0x55a926, 0xc9, 'Squishy Yeti', 'arctic/yeti/201/yeti'];
case 'summer21_squishyKraken':
    return [_0x526523, 0xc9, 'Squishy Kraken', 'ocean/kraken/201/kraken'];
case 'summer21_squishyDragon':
    return [_0x20f46e, 0xc9, 'Squishy Dragon', 'land/dragon/201/dragon'];
case 'summer21_mermaidWhale':
    return [_0x13ad70, 0xc9, 'Mermaid Whale', 'ocean/bluewhale/201/bluewhale'];
case 'summer21_seafoamJellyfish':
    return [_0xfbbc5, 0xc9, 'Seafoam Jellyfish', 'ocean/jellyfish/201/jellyfish'];
case 'summer21_bubblyMouse':
    return [_0xb392ab, 0xc9, 'Bubbly Mouse', 'land/mouse/201/mouse'];
case 'summer21_surfboardChomper':
    return [_0x2fd73b, 0xc9, 'Surfboard Chomper', 'ocean/shark/201/shark'];
case 'summer21_surferPenguin':
    return [_0x236cec, 0xc9, 'Surfer Penguin', 'arctic/penguin/201/penguin'];
case 'summer21_waterGunHorse':
    return [_0x5b8b30, 0xc9, 'Water Gun Horse', 'ocean/seahorse/201/seahorse'];
case 'summer21_sunburnReindeer':
    return [_0x3dd041, 0xc9, 'Sunburn Reindeer', 'arctic/reindeer/201/reindeer'];
case 'summer21_surfboardSwordfish':
    return [_0x3e9276, 0xc9, 'Surfboardfish', 'ocean/swordfish/201/swordfish'];
case 'summer21_popsicleTrout':
    return [_0xf5643, 0xc9, 'Popsicle Trout', 'ocean/trout/201/trout'];
case 'summer21_playfulChipmunk':
    return [_0xaa5ad2, 0xc9, 'Playful Munk', 'arctic/chipmunk/201/chipmunk'];
case 'summer21_fireworkOx':
    return [_0x4f4705, 0xc9, 'Fireworks Ox', 'arctic/muskox/201/muskox'];
case 'summer21_chocolateStingray':
    return [_0x46166b, 0xc9, 'Chocolate Ray', 'ocean/stingray/201/stingray.ui'];
case 'summer21_connoisseurBear':
    return [_0x3e89f8, 0xc9, 'Cola Connoisseur', 'arctic/bear/201/bear'];
case 'summer21_coralQueen':
    return [_0x575d5b, 0xc9, 'Coral Queen', 'arctic/snowleopard/201/snowleopard'];
case 'summer21_strawbertoothTiger':
    return [_0x39e9c9, 0xc9, 'Strawbertooth', 'arctic/sabertooth/201/sabertooth'];
case 'skin_leatherBackTurtle':
    return [_0x1597d0, 0xc8, 'Leather Back\x0aTurtle', 'ocean/turtle/200/turtle'];
case 'skin_celestialCobra':
    return [_0x14a18f, 0xc8, 'Celestial Cobra', 'land/cobra/200/cobra'];
case 'skin_brazenBull':
    return [_0x4f4705, 0xc8, 'Brazen Bull', 'arctic/muskox/200/muskox'];
case 'skin_luckyCharmMonster':
    return [_0x380133, 0xc8, 'Luckycharm Monster', 'ocean/seamonster/200/seamonster'];
case 'skin_iceToucan':
    return [_0x3e06be, 0xc8, 'Ice Toucan', 'land/toucan/200/toucan'];
case 'skin_clowoudLion':
    return [_0xd7a1f1, 0xc8, 'Clowoud Lion', 'land/lion/200/0/lion'];
case 'skin_sunsetClowoudLion':
    return [_0xd7a1f1, 0xc8, 'Sunset\x0aClowoud Lion', 'land/lion/200/1/lion'];
case 'skin_stormClowoudLion':
    return [_0xd7a1f1, 0xc8, 'Storm\x0aClowoud Lion', 'land/lion/200/2/lion'];
case 'skin_kaijuRex':
    return [_0x47ccac, 0xc8, 'Kaiju Rex', 'land/trex/200/trex'];
case 'skin_warTHog':
    return [_0x5ef983, 0xc8, 'WarT. Hog', 'desert/warthog/200/warthog'];
case 'skin_velvetChimp':
    return [_0x5b4c32, 0xc8, 'Velvet\x0aChipmunk', 'desert/chipmunk/200/chipmunk'];
case 'skin_aquaPhoenix':
    return [_0x19e418, 0xc8, 'Aqua Phoenix', 'volcano/phoenix/200/0/phoenix'];
case 'skin_icePhoenix':
    return [_0x19e418, 0xc8, 'Ice Phoenix', 'volcano/phoenix/200/1/phoenix'];
case 'skin_ashPhoenix':
    return [_0x19e418, 0xc8, 'Ash Phoenix', 'volcano/phoenix/200/2/phoenix'];
case 'skin_redGiantPhoenix':
    return [_0x19e418, 0xc8, 'Red Giant\x0aPhoenix', 'volcano/phoenix/200/3/phoenix'];
case 'skin_goofyDragon':
    return [_0x20f46e, 0xc8, 'Goofy Dragon', 'land/dragon/200/0/dragon'];
case 'skin_desertDragon':
    return [_0x20f46e, 0xc8, 'Desert Dragon', 'land/dragon/200/1/dragon'];
case 'skin_forgeDragon':
    return [_0x20f46e, 0xc8, 'Forge Dragon', 'land/dragon/200/2/dragon'];
case 'skin_mythicalSerpent':
    return [_0x20f46e, 0xc8, 'Mythical Serpent', 'land/dragon/200/3/dragon'];
case 'skin_fireyDragon':
    return [_0x20f46e, 0xc8, 'Firey Dragon', 'land/dragon/200/4/dragon'];
case 'skin_technoSaber':
    return [_0x39e9c9, 0xc8, 'Techno\x0aSabertooth', 'arctic/sabertooth/200/sabertooth'];
case 'skin_iceFox':
    return [_0x2cb3a6, 0xc8, 'Ice Fox', 'arctic/arcticfox/200/arcticfox'];
case 'skin_clownfish':
    return [_0xf5643, 0xc8, 'Clownfish', 'ocean/trout/200/trout'];
case 'skin_tullyMonster':
    return [_0x5b8b30, 0xc8, 'Tully\x0aMonster', 'ocean/seahorse/200/seahorse'];
case 'skin_vampireSquid':
    return [_0x1bdc24, 0xc8, 'Vampire\x0aSquid', 'ocean/octopus/200/octopus'];
case 'skin_cuttlefish':
    return [_0xab40e7, 0xc8, 'Cuttle Fish', 'ocean/squid/200/squid'];
case 'skin_deluxeShrimp':
    return [_0x4c5efa, 0xc8, 'Deluxe\x0aShrimp', 'ocean/shrimp/200/shrimp'];
case 'skin_monochromeRabbit':
    return [_0x48065b, 0xc8, 'Monochrome\x0aRabbit', 'land/rabbit/200/rabbit'];
case 'skin_nightFox':
    return [_0x84499b, 0xc8, 'Thief of\x0aThe Night', 'land/fox/200/fox'];
case 'skin_plagueRaptor':
    return [_0x114a7b, 0xc8, 'Plague\x0aRaptor', 'land/peacock/200/peacock.ui'];
case 'skin_titanBison':
    return [_0x1f6369, 0xc8, 'Titan Bison', 'desert/bison/200/bison'];
case 'skin_dowagerVarande':
    return [_0x5af7f2, 0xc8, 'Dowager Varande', 'desert/komododragon/200/0/komodo'];
case 'skin_emeprorVarande':
    return [_0x5af7f2, 0xc8, 'Emepror Varande', 'desert/komododragon/200/1/komodo'];
case 'skin_rubyDevil':
    return [_0x31a0ba, 0xc8, 'Ruby Devil', 'land/dinomonster/200/dinomonster'];
case 'skin_metalicCrab':
    return [_0x1a993f, 0xc8, 'Metallic Crab', 'ocean/crab/200/crab'];
case 'skin_queenFlame':
    return [_0x1ed4e2, 0xc8, 'Queen Flame', 'volcano/kingdragon/200/kingdragon'];
case 'halloween_wyrmous':
    return [_0x14a18f, 0x64, 'Wyrmous', 'land/cobra/100/cobra'];
case 'halloween_equusthulhu':
    return [_0xdb1a28, 0x64, 'Equusthulhu', 'land/donkey/100/donkey'];
case 'halloween_frostaline':
    return [_0x575d5b, 0x64, 'Frostaline', 'arctic/snowleopard/100/snowleopard'];
case 'halloween_pufferMace':
    return [_0x52507b, 0x64, 'Puffermace', 'ocean/pufferfish/100/pufferfish'];
case 'halloween_carnageodactyl':
    return [_0x36b345, 0x64, 'Carnageodactyl', 'desert/pterodactyl/100/pterodactyl_ability'];
case 'halloween_mrDollar':
    return [_0x47ccac, 0x64, 'Mr. Dollar', 'land/trex/100/trex'];
case 'halloween_wendigoDeer':
    return [_0x3136da, 0x64, 'The Wendigo', 'land/deer/100/deer'];
case 'halloween_cactiRat':
    return [_0x353af1, 0x64, 'Cacti Rat', 'desert/kangaroorat/100/kangaroorat'];
case 'halloween_hiPower':
    return [_0x254b52, 0x64, 'Swampster', 'land/hippo/100/hippo'];
case 'halloween_puumpkat':
    return [_0x441e79, 0x64, 'Puumpkat', 'desert/meerkat/100/meerkat'];
case 'halloween_doomedarius':
    return [_0x1be7db, 0x64, 'The Doomedarius', 'desert/camel/100/camel'];
case 'halloween_roboMouse':
    return [_0xb392ab, 0x64, 'Robo Mouse', 'land/mouse/100/mouse'];
case 'halloween_uncleSam':
    return [_0x1d3e9a, 0x64, 'Uncle Sam', 'land/croc/100/croc'];
case 'halloween_zombieMole':
    return [_0x12b5f6, 0x64, 'Zombie Mole', 'land/mole/100/mole'];
case 'halloween_flammyHart':
    return [_0x4336e9, 0x64, 'Flammy Hart', 'desert/gazelle/100/gazelle'];
case 'halloween_gummyViper':
    return [_0x2e0aa9, 0x64, 'Gummy Viper', 'desert/rattlesnake/100/rattlesnake'];
case 'halloween_grimRipper':
    return [_0x199c9a, 0x64, 'Grim Reaper', 'land/gorilla/100/gorilla'];
case 'halloween_bigCookie':
    return [_0x29db26, 0x64, 'Big Cookie', 'land/bigcat/100/bigcat'];
case 'halloween_gargolgon':
    return [_0x20f46e, 0x64, 'The Gargon', 'land/dragon/100/dragon'];
case 'halloween_candyRus':
    return [_0x52ea48, 0x64, 'Candy Rus', 'arctic/walrus/100/walrus'];
case 'halloween_mantilian':
    return [_0xd7a1f1, 0x64, 'The Mantilian', 'land/lion/100/lion'];
case 'halloween_phantomRay':
    return [_0x46166b, 0x64, 'Phantom Ray', 'ocean/stingray/100/stingray'];
case 'halloween_suitedToucan':
    return [_0x3e06be, 0x64, 'The Dapper', 'land/toucan/100/toucan'];
case 'halloween_vulgeist':
    return [_0x53017e, 0x64, 'The Vulgeist', 'desert/vulture/100/vulture'];
case 'halloween_burlone':
    return [_0x5ef983, 0x64, 'The Burlone', 'desert/warthog/100/warthog'];
case 'halloween_unicornze':
    return [_0x39a5c5, 0x64, 'Unicornze', 'land/zebra/100/zebra'];
case 'gold_blackDragon':
    return [_0x5b6f26, 0x1, 'Golden\x0aBlack Dragon', 'volcano/blackdragon/1/blackdragon'];
case 'gold_kingDragon':
    return [_0x1ed4e2, 0x1, 'Golden\x0aKing Dragon', 'volcano/kingdragon/1/kingdragon'];
case 'gold_Dragon':
    return [_0x20f46e, 0x1, 'Golden\x0aDragon', 'land/dragon/1/dragon'];
case 'gold_kraken':
    return [_0x526523, 0x1, 'Golden\x0aKraken', 'ocean/kraken/1/kraken'];
case 'gold_yeti':
    return [_0x55a926, 0x1, 'Golden\x0aYeti', 'arctic/yeti/1/yeti'];
case 'gold_trex':
    return [_0x47ccac, 0x1, 'Golden\x0aT.Rex', 'land/trex/1/trex'];
case 'gold_kingCrab':
    return [_0x2350ea, 0x1, 'Golden\x0aCrab', 'ocean/kingcrab/1/kingcrab'];
case 'gold_phoenix':
    return [_0x19e418, 0x1, 'Golden\x0aPhoenix', 'volcano/phoenix/1/phoenix'];
case 'gold_pterodactyl':
    return [_0x36b345, 0x1, 'Golden\x0aPterodactyl', 'desert/pterodactyl/1/pterodactyl_ability'];
case 'gold_iceMonster':
    return [_0x40da91, 0x1, 'Golden\x0aIce Monster', 'arctic/icemonster/1/icemonster'];
case 'gold_dinoMonster':
    return [_0x31a0ba, 0x1, 'Golden\x0aDino Monster', 'land/dinomonster/1/dinomonster'];
case 'gold_seaMonster':
    return [_0x380133, 0x1, 'Golden\x0aSea Monster', 'ocean/seamonster/1/seamonster'];
case 'gold_landMonster':
    return [_0x9ca027, 0x1, 'Golden\x0aLand Monster', 'volcano/landmonster/1/landmonster'];
case 'gold_giantScorion':
    return [_0x16390e, 0x1, 'Golden\x0aGiant Scorpion', 'desert/scorpion/1/giantscorpion'];
case 'gold_bluewhale':
    return [_0x13ad70, 0x1, 'Golden\x0aBlue Whale', 'ocean/bluewhale/1/bluewhale'];
case 'gold_elephant':
    return [_0x39357f, 0x1, 'Golden\x0aElephant', 'land/elephant/1/elephant'];
case 'gold_cassowary':
    return [_0x588f38, 0x1, 'Golden\x0aCassowary', 'land/cassowary/1/cassowary'];
case 'gold_giantspider':
    return [_0x4ab048, 0x1, 'Golden\x0aGiant Spider', 'land/giantspider/1/giantspider'];
case 'gold_blackwidow':
    return [_0x4ca51a, 0x1, 'Golden\x0aBlackwidow', 'desert/blackwidow/1/blackwidow'];
case 'gold_mammoth':
    return [_0x40ac2b, 0x1, 'Golden\x0aMammoth', 'arctic/mammoth/1/mammoth'];
case 'gold_hippo':
    return [_0x254b52, 0x1, 'Golden\x0aHippo', 'land/hippo/1/hippo'];
case 'gold_ostrich':
    return [_0xf59392, 0x1, 'Golden\x0aOstrich', 'land/ostrich/1/ostrich'];
case 'gold_boa':
    return [_0x17eda1, 0x1, 'Golden\x0aBoa', 'land/boaconstrictor/1/boaconstrictor'];
case 'gold_komodo':
    return [_0x5af7f2, 0x1, 'Golden\x0aKomodo', 'desert/komododragon/1/komodo'];
case 'gold_killerwhale':
    return [_0x697285, 0x1, 'Golden\x0aKiller Whale', 'ocean/killerwhale/1/killerwhale'];
case 'gold_sabertooth':
    return [_0x39e9c9, 0x1, 'Golden\x0aSabertooth', 'arctic/sabertooth/1/sabertooth'];
case 'skin_blueDragon':
    return [_0x5b6f26, 0x2, 'The\x0aAzure Bringer', 'volcano/blackdragon/2/blackdragon'];
case 'skin_kingRipper':
    return [_0x1ed4e2, 0x2, 'King\x0aRipper', 'volcano/kingdragon/2/kingdragon'];
case 'skin_kingStan':
    return [_0x1ed4e2, 0x3, 'King\x0aStan', 'volcano/kingdragon/3/kingdragon'];
case 'skin_kingShah':
    return [_0x1ed4e2, 0x4, 'King\x0aShah', 'volcano/kingdragon/4/kingdragon'];
case 'skin_dragon_gray':
    return [_0x20f46e, 0x2, 'Knight\x0aDragon', 'land/dragon/2/dragon'];
case 'skin_kraken_cyan':
    return [_0x526523, 0x2, 'Chromatic\x0aKraken', 'ocean/kraken/2/kraken'];
case 'skin_yeti_emerald':
    return [_0x55a926, 0x2, 'Emerald\x0aYeti', 'arctic/yeti/2/yeti'];
case 'skin_snowman':
    return [_0x24c923, 0x1, 'The\x0aSnowman', 'arctic/snowman/1/snowman'];
case 'skin_snowgirl':
    return [_0x24c923, 0x2, 'The\x0aSnowgirl', 'arctic/snowman/2/snowgirl'];
case 'skin_trex_gray':
    return [_0x47ccac, 0x2, 'Ember\x0aT.Rex', 'land/trex/2/trex'];
case 'skin_kingCrab':
    return [_0x2350ea, 0x2, 'Amethyst\x0aCrab', 'ocean/kingcrab/2/kingcrab'];
case 'skin_phoenix_blue':
    return [_0x19e418, 0x2, 'Alpha\x0aPhoenix', 'volcano/phoenix/2/phoenix'];
case 'skin_pterodactyl_green':
    return [_0x36b345, 0x2, 'Emerald\x0aPterodactyl', 'desert/pterodactyl/2/pterodactyl_ability'];
case 'skin_iceMonster':
    return [_0x40da91, 0x2, 'Amethyst\x0aMonster', 'arctic/icemonster/2/icemonster'];
case 'skin_dinoMonster':
    return [_0x31a0ba, 0x2, 'Citrine\x0aMonster', 'land/dinomonster/2/dinomonster'];
case 'skin_seaMonster':
    return [_0x380133, 0x2, 'Sapphire\x0aMonster', 'ocean/seamonster/2/seamonster'];
case 'skin_landMonster':
    return [_0x9ca027, 0x2, 'Titanite\x0aMonster', 'volcano/landmonster/2/landmonster'];
case 'skin_orangeScorpion':
    return [_0x16390e, 0x2, 'Carnelian\x0aScorpion', 'desert/scorpion/2/giantscorpion'];
case 'skin_bluewhale':
    return [_0x13ad70, 0x2, 'Albino\x0aBlue Whale', 'ocean/bluewhale/2/bluewhale'];
case 'skin_elephant':
    return [_0x39357f, 0x2, 'White\x0aElephant', 'land/elephant/2/elephant'];
case 'skin_cassowary':
    return [_0x588f38, 0x2, 'Cotton\x0aCassowary', 'land/cassowary/2/cassowary'];
case 'skin_giantspider':
    return [_0x4ab048, 0x2, 'Goliath\x0aSpider', 'land/giantspider/2/giantspider'];
case 'skin_blackwidow':
    return [_0x4ca51a, 0x2, 'Queen\x0aBlackwidow', 'desert/blackwidow/2/blackwidow'];
case 'skin_mammoth':
    return [_0x40ac2b, 0x2, 'Black\x0aMammoth', 'arctic/mammoth/2/mammoth'];
case 'skin_hippo':
    return [_0x254b52, 0x2, 'Pygmy\x0aHippo', 'land/hippo/2/hippo'];
case 'skin_ostrich':
    return [_0xf59392, 0x2, 'Ruffled\x0aOstrich', 'land/ostrich/2/ostrich'];
case 'skin_boa':
    return [_0x17eda1, 0x2, 'Tree\x0aBoa', 'land/boaconstrictor/2/boaconstrictor'];
case 'skin_komodo':
    return [_0x5af7f2, 0x2, 'Night\x0aKomodo', 'desert/komododragon/2/komodo'];
case 'skin_killerwhale':
    return [_0x697285, 0x2, 'Albino\x0aOrca', 'ocean/killerwhale/2/killerwhale'];
case 'skin_sabertooth':
    return [_0x39e9c9, 0x2, 'Margala\x0aSabertooth', 'arctic/sabertooth/2/sabertooth'];
case 'skin_tigerShark':
    return [_0x2fd73b, 0x2, 'Tiger\x0aShark', 'ocean/shark/1/shark'];
case 'skin_hamerHeadShark':
    return [_0x2fd73b, 0x3, 'Hammerhead\x0aShark', 'ocean/shark/2/shark'];
case 'skin_panda':
    return [_0x189024, 0x2, 'Panda', 'land/panda/panda'];
case 'skin_zonkey':
    return [_0xdb1a28, 0x3, 'Zonkey', 'land/donkey/2/zonkey'];
case 'skin_okapi':
    return [_0x39a5c5, 0x2, 'Okapi', 'land/okapi/okapi'];
case 'skin_giantCroc':
    return [_0x1d3e9a, 0x1, 'Giant\x0aCrocodile', 'land/croc/1/croc'];
case 'skin_purpleMouse':
    return [_0xb392ab, 0x2, 'Purple\x0aMouse', 'land/mouse/2/mouse'];
case 'skin_prismaToucan':
    return [_0x3e06be, 0x6, 'Prisma\x0aToucan', 'land/toucan/6/toucan'];
case 'gold_mouse':
    return [_0xb392ab, 0x2, 'Golden\x0aMouse', 'land/mouse/1/mouse'];
case 'skin_queenScarlet':
    return [_0x1ed4e2, 0x5, 'Queen\x0aScarlet', 'volcano/kingdragon/5/kingdragon'];
case 'skin_queenCeleste':
    return [_0x1ed4e2, 0x6, 'Queen\x0aCeleste', 'volcano/kingdragon/6/kingdragon'];
case 'skin_bigFoot':
    return [_0x363563, 0x1, 'The\x0aBigfoot', 'land/bigfoot/1/thebigfoot'];
case 'skin_woollyRhino':
    return [_0xd3040d, 0x3, 'Woolly\x0aRhino', 'land/rhino/3/rhino'];
case 'darkPlagueRat':
    return [_0xb392ab, 0xcc, 'Dark Plague\x0aRat', 'land/mouse/204/0/mouse'];
case 'lightPlagueRat':
    return [_0xb392ab, 0xcc, 'Light Plague\x0aRat', 'land/mouse/204/1/mouse'];
case 'carrotRabbit':
    return [_0x48065b, 0xcc, 'Carrot\x0aRabbit', 'land/rabbit/204/rabbit'];
case 'darkMatterCrab':
    return [_0x1a993f, 0xcc, 'Dark Matter\x0aCrab', 'ocean/crab/204/crab'];
case 'necromancerMeerkat':
    return [_0x441e79, 0xcc, 'Necromancer\x0aMeerkat', 'desert/meerkat/204/meerkat'];
case 'butcherPig':
    return [_0x4cff3a, 0xcc, 'Butcher\x0aPig', 'land/pig/204/0/pig'];
case 'hotdogPig':
    return [_0x4cff3a, 0xcc, 'Hot Dog\x0aPig', 'land/pig/204/1/pig'];
case 'voidScuttlingSquid':
    return [_0xab40e7, 0xcc, 'Void Scuttling\x0aSquid', 'ocean/squid/204/squid'];
case 'spideer':
    return [_0x3dd041, 0xcc, 'Spideer', 'arctic/reindeer/204/reindeer'];
case 'blackAsuraFox':
    return [_0x84499b, 0xcc, 'Black Asura\x0aFox', 'land/fox/204/fox'];
case 'candyCornWarthog':
    return [_0x5ef983, 0xcc, 'Candy Corn\x0aWarthog', 'desert/warthog/204/warthog'];
case 'phantomGorilla':
    return [_0x199c9a, 0xcc, 'Phantom\x0aGorilla', 'land/gorilla/204/gorilla.ui'];
case 'martianLeopard':
    return [_0x575d5b, 0xcc, 'Martian\x0aLeopard', 'arctic/snowleopard/204/snowleopard'];
case 'genieCheetah':
    return [_0x29db26, 0xcc, 'Genie\x0aCheetah', 'land/bigcat/204/cheetah'];
case 'chimeraTiger':
    return [_0x43c01e, 0xcc, 'Chimera\x0aTiger', 'land/tiger/204/tiger'];
case 'acidHusk':
    return [_0x53017e, 0xcc, 'Acid\x0aHusk', 'desert/vulture/204/vulture'];
case 'acutiRhino':
    return [_0xd3040d, 0xcc, 'Acuti\x0aRhino', 'land/rhino/204/rhino'];
case 'goldenDevilGoat':
    return [_0x4a8972, 0xcc, 'Golden Devil\x0aGoat', 'arctic/markhor/204/2/markhor'];
case 'sunHippo':
    return [_0x254b52, 0xcc, 'Sun\x0aHippo', 'land/hippo/204/hippo'];
case 'smileSpider':
    return [_0x4ab048, 0xcc, 'Smile\x0aSpider', 'land/giantspider/204/giantspider'];
case 'bloodwidowSpider':
    return [_0x4ca51a, 0xcc, 'Bloodwidow\x0aSpider', 'desert/blackwidow/204/blackwidow'];
case 'basiliskCassowary':
    return [_0x588f38, 0xcc, 'Basilisk\x0aCassowary', 'land/cassowary/204/cassowary'];
case 'magmaDragon':
    return [_0x20f46e, 0xcc, 'Magma\x0aDragon', 'land/dragon/204/dragon'];
case 'plasmacoreKingCrab':
    return [_0x2350ea, 0xcc, 'Plasma-core King\x0aCrab', 'ocean/kingcrab/204/kingcrab'];
case 'frostWolf':
    return [_0x55a926, 0xcc, 'Frost\x0aWolf', 'arctic/yeti/204/yeti'];
case 'tartarusRex':
    return [_0x47ccac, 0xcc, 'Tartarus\x0aRex', 'land/trex/204/trex'];
case 'cthulhuKraken':
    return [_0x526523, 0xcc, 'Cthulhu\x0aKraken', 'ocean/kraken/204/kraken'];
case 'necromus':
    return [_0x9ca027, 0xcc, 'Necromus', 'volcano/landmonster/204/0/landmonster'];
case 'planetEaterMonster':
    return [_0x9ca027, 0xcc, 'Planet Eater\x0aMonster', 'volcano/landmonster/204/1/landmonster'];
case 'bloodCrystalMonster':
    return [_0x40da91, 0xcc, 'Blood Crystal\x0aMonster', 'arctic/icemonster/204/icemonster'];
case 'superMouse':
    return [_0xb392ab, 0xca, 'Super Mouse', 'land/mouse/202/mouse'];
case 'sushiShrimp':
    return [_0x4c5efa, 0xca, 'Sushi Shrimp', 'ocean/shrimp/202/shrimp'];
case 'plasmaRat':
    return [_0x353af1, 0xca, 'Plasma Rat', 'desert/kangaroorat/202/kangaroorat'];
case 'chipmonk':
    return [_0xaa5ad2, 0xca, 'Chipmonk', 'desert/chipmunk/202/chipmunk'];
case 'jackapole':
    return [_0x48065b, 0xca, 'Jackapole', 'land/rabbit/202/0/rabbit'];
case 'thugPigeon':
    return [_0x3182a5, 0xca, 'Thug Pigeon', 'land/pigeon/202/pigeon'];
case 'royalGuppy':
    return [_0xf5643, 0xca, 'Royal Guppy', 'ocean/trout/202/trout'];
case 'hollowRabbit':
    return [_0x48065b, 0xca, 'Hollow Rabbit', 'land/rabbit/202/1/rabbit'];
case 'ratMunk':
    return [_0x5b4c32, 0xca, 'Ratmunk', 'desert/chipmunk/202/chipmunk'];
case 'toxicMole':
    return [_0x12b5f6, 0xca, 'Toxic Mole', 'land/mole/202/0/mole'];
case 'lightningLord':
    return [_0x19475c, 0xca, 'Lightning Lord', 'land/chicken/202/chicken'];
case 'ufoPigeon':
    return [_0x236cec, 0xca, 'UFO Pigeon', 'arctic/penguin/202/penguin'];
case 'cytokineticMole':
    return [_0x12b5f6, 0xca, 'Cytokinetic Mole', 'land/mole/202/1/mole'];
case 'piggyBank':
    return [_0x4cff3a, 0xca, 'Piggy Bank', 'land/pig/202/pig'];
case 'jackhammer':
    return [_0x51f75a, 0xca, 'Jackhammer', 'land/woodpecker/202/woodpecker'];
case 'leafySeadragon':
    return [_0x5b8b30, 0xca, 'Leafy Seadragon', 'ocean/seahorse/202/seahorse'];
case 'soapySeal':
    return [_0x1fc0ae, 0xca, 'Soapy Seal', 'arctic/seal/202/seal'];
case 'windupKakapo':
    return [_0x232d17, 0xca, 'Wind-up Kakapo', 'forest/kakapo/202/kakapo'];
case 'mevazor':
    return [_0x3136da, 0xca, 'Mevazor', 'land/deer/202/0/deer'];
case 'flyMango':
    return [_0x220080, 0xca, 'Fly Mango', 'ocean/flamingo/202/flamingo'];
case 'psychedelicSquid':
    return [_0xab40e7, 0xca, 'Psychedelic Squid', 'ocean/squid/202/squid'];
case 'piebaldCosmos':
    return [_0x3dd041, 0xca, 'Piebald Cosmos', 'arctic/reindeer/202/reindeer'];
case 'retroNeonGazelle':
    return [_0x4336e9, 0xca, 'Retro Neon Gazelle', 'desert/gazelle/202/gazelle'];
case 'divineDeer':
    return [_0x3136da, 0xca, 'Divine Deer', 'land/deer/202/1/deer'];
case 'grassHedgehog':
    return [_0x164f9e, 0xca, 'Grass Hedgehog', 'land/hedgehog/202/hedgehog'];
case 'spectrumPeacock':
    return [_0x114a7b, 0xca, 'Spectrum Peacock', 'land/peacock/202/peacock'];
case 'discoJellyfish':
    return [_0xfbbc5, 0xca, 'Disco Jellyfish', 'ocean/jellyfish/202/0/jellyfish'];
case 'iceFox':
    return [_0x2cb3a6, 0xca, 'Ice Fox', 'arctic/arcticfox/202/arcticfox'];
case 'fireFox':
    return [_0x490d3d, 0xca, 'Fire Fox', 'desert/fennecfox/202/1/fennecfox'];
case 'muscipulaRaven':
    return [_0x286bc1, 0xca, 'Muscipula Raven', 'forest/raven/202/raven'];
case 'sneakyFox':
    return [_0x84499b, 0xca, 'Sneaky Fox', 'land/fox/202/fox'];
case 'twistedHorror':
    return [_0xfbbc5, 0xca, 'Twisted Horror', 'ocean/jellyfish/202/1/jellyfish'];
case 'purpleFireFox':
    return [_0x490d3d, 0xca, 'Purple Fire Fox', 'desert/fennecfox/202/1/fennecfox'];
case 'synthZebra':
    return [_0x39a5c5, 0xca, 'Synth Zebra', 'land/zebra/202/zebra'];
case 'moltenGlassTurtle':
    return [_0x1597d0, 0xca, 'Molten Glass Turtle', 'ocean/turtle/202/turtle'];
case 'monitorMuskox':
    return [_0x4f4705, 0xca, 'Monitor Muskox', 'arctic/muskox/202/muskox'];
case 'headlessMule':
    return [_0xdb1a28, 0xca, 'Headless Mule', 'land/donkey/202/donkey'];
case 'quilinGiraffe':
    return [_0x4f8d37, 0xca, 'Quilin Giraffe', 'land/giraffe/202/0/giraffe'];
case 'etherStingray':
    return [_0x46166b, 0xca, 'Ether Stingray', 'ocean/stingray/202/0/stingray'];
case 'potatoWalrus':
    return [_0x52ea48, 0xca, 'Potato Walrus', 'arctic/walrus/202/walrus'];
case 'fungalCamel':
    return [_0x1be7db, 0xca, 'Fungal Camel', 'desert/camel/202/camel'];
case 'draquorum':
    return [_0x4f8d37, 0xca, 'Draquorum', 'land/giraffe/202/1/giraffe'];
case 'pancakeStingray':
    return [_0x46166b, 0xca, 'Pancake Stingray', 'ocean/stingray/202/1/stingray'];
case 'kongrilla':
    return [_0x199c9a, 0xca, 'Kongrilla', 'land/gorilla/202/gorilla'];
case 'corpseFlowerToucan':
    return [_0x3e06be, 0xca, 'Corpse Flower Toucan', 'land/toucan/202/toucan'];
case 'ballonPufferfish':
    return [_0x52507b, 0xca, 'Balloon Pufferfish', 'ocean/pufferfish/202/pufferfish'];
case 'astralLeopard':
    return [_0x575d5b, 0xca, 'Astral Leopard', 'arctic/snowleopard/202/snowleopard'];
case 'cmykNeonCheetah':
    return [_0x29db26, 0xca, 'C.M.Y.K NeoN Cheetak', 'land/bigcat/202/cheetah'];
case 'beekeeperBear':
    return [_0x189024, 0xca, 'Beekeeper Bear', 'land/bear/202/bear'];
case 'dalmatianPelican':
    return [_0x1b8ac0, 0xca, 'Dalmatian Pelican', 'ocean/pelican/202/pelican'];
case 'rocketSwordfish':
    return [_0x3e9276, 0xca, 'Rocket Swordfish', 'ocean/swordfish/202/swordfish'];
case 'okamiWolf':
    return [_0x45e678, 0xca, 'Okami Wolf', 'arctic/wolf/202/wolf'];
case 'anubisHyena':
    return [_0x67df53, 0xca, 'Anubis Hyena', 'desert/hyena/202/hyena'];
case 'gobeeBear':
    return [_0x35326e, 0xca, 'Gobee Bear', 'desert/gobibear/202/gobibear'];
case 'chimeraLion':
    return [_0xd7a1f1, 0xca, 'Chimera Lion', 'land/lion/202/lion'];
case 'meteorFalcon':
    return [_0x4e8eac, 0xca, 'Meteor Falcon', 'land/falcon/202/falcon'];
case 'naKika':
    return [_0x1bdc24, 0xca, 'Na Kika', 'ocean/octopus/202/octopus'];
case 'waterBear':
    return [_0x3e89f8, 0xca, 'Water Bear', 'arctic/bear/202/bear'];
case 'croczilla':
    return [_0x1d3e9a, 0xca, 'Croczilla', 'land/croc/202/0/croc'];
case 'ammit':
    return [_0x1d3e9a, 0xca, 'Ammit', 'land/croc/202/1/croc'];
case 'cottonCandyRhino':
    return [_0xd3040d, 0xca, 'Cotton Candy Rhino', 'land/rhino/202/rhino'];
case 'floralWolverine':
    return [_0x136680, 0xca, 'Floral Wolverine', 'arctic/wolverine/202/wolverine'];
case 'minotaur':
    return [_0x1f6369, 0xca, 'Minotaur', 'desert/bison/202/bison'];
case 'planetHippo':
    return [_0x254b52, 0xca, 'Planet Hippo', 'land/hippo/202/hippo'];
case 'seaAngelOrca':
    return [_0x697285, 0xca, 'Sea Angel Orca', 'ocean/killerwhale/202/killerwhale'];
case 'icefangSabertooth':
    return [_0x39e9c9, 0xca, 'Ice-Fang Sabertooth', 'arctic/sabertooth/202/sabertooth'];
case 'galaxyKomodoDragon':
    return [_0x5af7f2, 0xca, 'Galaxy Komodo Dragon', 'desert/komododragon/202/komododragon'];
case 'sapphireCaveSpider':
    return [_0x4ab048, 0xca, 'Sapphire Cave Spider', 'land/giantspider/202/giantspider'];
case 'pastelCassowary':
    return [_0x588f38, 0xca, 'Pastel Cassowary', 'land/cassowary/202/cassowary'];
case 'whaleboat':
    return [_0x13ad70, 0xca, 'Whale Boat', 'ocean/bluewhale/202/1/bluewhale'];
case 'acidMammoth':
    return [_0x40ac2b, 0xca, 'Acid Mammoth', 'arctic/mammoth/202/0/mammoth'];
case 'iceWizardElephant':
    return [_0x39357f, 0xca, 'Ice Wizard Elephant', 'land/elephant/202/elephant'];
case 'ancientIslandMonster':
    return [_0x13ad70, 0xca, 'Ancient Island Monster', 'ocean/bluewhale/202/0/bluewhale'];
case 'crystalGolem':
    return [_0x40ac2b, 0xca, 'Crystal Golem', 'arctic/mammoth/202/1/mammoth'];
case 'aberrantDragon':
    return [_0x20f46e, 0xca, 'Aberrant Dragon', 'land/dragon/202/0/dragon'];
case 'agDragon':
    return [_0x20f46e, 0xce, 'AG Dragon', 'land/dragon/206/dragon'];
case 'hyporevenantRex':
    return [_0x47ccac, 0xca, 'Hyporevenant Rex', 'land/trex/202/0/trex'];
case 'giantSquid':
    return [_0x526523, 0xca, 'Giant Squid', 'ocean/kraken/202/0/kraken'];
case 'lovelyYeti':
    return [_0x55a926, 0xca, 'Lovely Yeti', 'arctic/yeti/202/0/yeti'];
case 'abyssalKingCrab':
    return [_0x2350ea, 0xca, 'Abyssal King Crab', 'ocean/kingcrab/202/kingcrab'];
case 'hydrothothKraken':
    return [_0x526523, 0xca, 'Hydrothoth Kraken', 'ocean/kraken/202/1/kraken'];
case 'frostEyeDemon':
    return [_0x55a926, 0xca, 'Frosty Eye Demon', 'arctic/yeti/202/1/yeti'];
case 'ghoulDragon':
    return [_0x20f46e, 0xca, 'Ghoul Dragon', 'land/dragon/202/1/dragon'];
case 'tankMonster':
    return [_0x31a0ba, 0xca, 'Tank Monster', 'land/dinomonster/202/dinomonster'];
case 'fighterJet':
    return [_0x9ca027, 0xca, 'Fighter Jet', 'volcano/landmonster/202/landmonster'];
case 'submarineMonster':
    return [_0x380133, 0xca, 'Submarine Monster', 'ocean/seamonster/202/seamonster'];
case 'kingGraveyard1':
    return [_0x1ed4e2, 0xca, 'King Graveyard', 'volcano/kingdragon/202/kingdragon'];
case 'fairyRabbit':
    return [_0x48065b, 0xdc, 'Fairy Rabbit', 'land/rabbit/220/rabbit'];
case 'darkMatterWarthog':
    return [_0x5ef983, 0xca, 'Dark Matter Warthog', 'desert/warthog/220/warthog'];
case 'fumigatorPig':
    return [_0x4cff3a, 0xdc, 'Fumigator Pig', 'land/pig/220/pig'];
case 'moltenToucan':
    return [_0x3e06be, 0xdc, 'Molten Toucan', 'land/toucan/220/toucan.ui'];
case 'summonerWolverine':
    return [_0x136680, 0xdc, 'Summoner Wolverine', 'arctic/wolverine/220/wolverine'];
case 'golemMammoth':
    return [_0x40ac2b, 0xdc, 'Golem Mammoth', 'arctic/mammoth/220/mammoth'];
case 'glacialDemon':
    return [_0x55a926, 0xdc, 'Glacial Demon', 'arctic/yeti/220/yeti'];
case 'cordyceraDino':
    return [_0x31a0ba, 0xdc, 'Cordycera Dino', 'land/dinomonster/220/dinomonster'];
case 'blazingIceMonster':
    return [_0x40da91, 0xdc, 'BlazingIce Monster', 'arctic/icemonster/220/icemonster'];
case 'bioMutantTRex':
    return [_0x47ccac, 0xdc, 'Bio Mutant T-rex', 'land/trex/220/trex'];
case 'sunsetOstrich':
    return [_0xf59392, 0xdc, 'Sunset Ostrich', 'land/ostrich/220/ostrich'];
case 'lightwaveElephant':
    return [_0x39357f, 0xdc, 'Lightwave Elephant', 'land/elephant/220/elephant'];
case 'inkRhino':
    return [_0xd3040d, 0xdc, 'Ink Rhino', 'land/rhino/220/rhino'];
case 'dimensionalMonster':
    return [_0x380133, 0xdc, 'Dimensional Monster', 'ocean/seamonster/220/seamonster'];
case 'nebuladonScorpion':
    return [_0x16390e, 0xdc, 'Nebuladon Scorpion', 'desert/scorpion/220/giantscorpion'];
case 'ghastlyJadeLion':
    return [_0xd7a1f1, 0xdc, 'Ghastly Jade Lion', 'land/lion/220/lion'];
case 'belphegor':
    return [_0x9ca027, 0xdc, 'Belphegor', 'volcano/landmonster/220/landmonster'];
case 'muscipulaRaven':
    return [_0x286bc1, 0xdc, 'Muscipula Raven', 'forest/raven/220/raven'];
case 'behemothHiveDragon':
    return [_0x20f46e, 0xdc, 'Behemoth Hive Dragon', 'land/dragon/220/dragon'];
case 'okamiWolf':
    return [_0x45e678, 0xdc, 'Okami Wolf', 'arctic/wolf/220/wolf'];
case 'starCrusherCrab':
    return [_0x2350ea, 0xdc, 'Star Crusher Crab', 'ocean/kingcrab/220/kingcrab'];
case 'drBrainiopod':
    return [_0x526523, 0xdc, 'Dr. Brainiopod', 'ocean/kraken/220/kraken'];
case 'xmas22_iceHuskTrout':
    return [_0xf5643, 0xde, 'Ice Husk Trout', 'ocean/trout/222/trout'];
case 'xmas22_jollyRabbit':
    return [_0x48065b, 0xde, 'Jolly Rabbit', 'land/rabbit/222/rabbit'];
case 'xmas22_peppermintLandMonster':
    return [_0x9ca027, 0xde, 'Peppermint Land Monster', 'volcano/landmonster/222/landmonster'];
case 'xmas22_gingerbreadKraken':
    return [_0x526523, 0xde, 'Gingerbread Kraken', 'ocean/kraken/222/kraken'];
case 'val23_wolverine':
    return [_0x136680, 0x0, 'Valentine Wolverine', 'arctic/wolverine/0/223/wolverine'];
case 'val23_orca':
    return [_0x697285, 0x0, 'Valentine Orca', 'ocean/killerwhale/0/223/killerwhale'];
case 'val23_mamoth':
    return [_0x40ac2b, 0x0, 'Valentine Mammoth', 'arctic/mammoth/0/223/mammoth'];
case 'val23_whale':
    return [_0x13ad70, 0x0, 'Valentine Whale', 'ocean/bluewhale/0/223/bluewhale'];
case 'val23_walrus':
    return [_0x52ea48, 0x0, 'Valentine Walrus', 'arctic/walrus/0/223/walrus'];
case 'val23_stingray':
    return [_0x46166b, 0x0, 'Valentine Stingray', 'ocean/stingray/0/223/stingray'];
case 'val23_snowleopard':
    return [_0x575d5b, 0x0, 'Valentine Snow Leopard', 'arctic/snowleopard/0/223/snowleopard'];
case 'val23_gorilla':
    return [_0x199c9a, 0x0, 'Valentine Gorilla', 'land/gorilla/0/223/gorilla'];
}
return null;
};
var _0x570743 = _0x3695e4,
_0x1e3c43 = _0xb2a2fa;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43;

function _0x3695e4() {
_0x3695e4['superClass']['call'](this, _0x107e5a);
}
_0x3695e4['prototype']['loadShopData'] = function (_0x5ece78) {
_0x3695e4['superClass']['prototype']['loadShopData']['call'](this, _0x5ece78), this['itemName'] = _0x5ece78['itemName'], this['title'] = _0x5ece78['title'], this['saleType'] = _0x5ece78['saleType'], this['salePrice'] = _0x5ece78['salePrice'];
}, _0x3695e4['prototype']['getShopImageSrc'] = function () {
return 'shop/deals/' + this['itemName']['toLowerCase']() + '.png';
}, _0x3695e4['prototype']['getImage'] = function () {
var _0x58611a = new Image();
return _0x58611a['className'] = 'shopdeal', _0x58611a['src'] = 'shop/deals/' + this['itemName']['toLowerCase']() + '.png', _0x58611a;
}, _0x3695e4['prototype']['getTitle'] = function () {
var _0x170869 = '' + this['title'];
return _0x170869['replace']('\x0a', '<br>')['toUpperCase']();
}, _0x3695e4['prototype']['generateHtml'] = function (_0xf683fd) {
var _0x211dbf = 'item deal' + (this['coinsPrice'] == -0x1 ? ' itemOwned buyItem' : ' buyItem') + ' ' + this['itemName'];
if (_0xf683fd == _0xf5c7f6) _0x211dbf = _0x211dbf + ' confirm_deal';
var _0x352aba = _0x16050c('', _0x211dbf),
    _0xcb64c4 = _0x16050c('', 'image ' + 'biome_' + this['biome']),
    _0x406314 = _0x16050c('', 'price'),
    _0x5c484d = _0x16050c('', 'orig-value');
_0x352aba['setAttribute']('title', this['getTitle']()['replace']('<BR>', ' ')), _0x406314['innerHTML'] = this['getTitle']();
var _0x2b6f12 = this['getImage']();
_0xcb64c4['appendChild'](_0x2b6f12);
if (this['coinsPrice'] > 0x0) {
    var _0x3ff94a = '';
    if (this['saleType'] == 0x1) _0x3ff94a = 'NEW BUNDLE';
    else {
        if (this['saleType'] == 0x2) _0x3ff94a = 'SALE BUNDLE';
    }
    if (_0x3ff94a != '') {
        var _0x5264f2 = _0x16050c('newItem_' + this['animalType'], 'newItem');
        _0x5264f2['innerHTML'] = _0x3ff94a, _0x352aba['appendChild'](_0x5264f2);
    }
}
_0x352aba['appendChild'](_0xcb64c4), _0x352aba['appendChild'](_0x406314);
if (this['saleType'] == 0x2) {
    var _0x14fd85 = new Image();
    _0x14fd85['className'] = 'buycoin-img', _0x14fd85['src'] = 'shop/mopecoin.png';
    var _0x3b5e54 = _0x3ae893('span', '', 'buycoin-price');
    _0x3b5e54['innerHTML'] = this['coinsPrice'], _0x5c484d['appendChild'](_0x14fd85), _0x5c484d['appendChild'](_0x3b5e54);
}
if (this['coinsPrice'] > 0x0) _0x352aba['appendChild'](_0x5c484d), _0x352aba['appendChild'](this['btn']['generateHtml'](_0xf683fd));
else {}
return _0x352aba;
}, _0x3695e4['prototype']['fillItemDetails'] = function (_0x36a11a) {
var _0x227a7e = _0x16050c('bundleSkins', 'bundleSkins_' + this['itemName']);
_0x36a11a['appendChild'](_0x227a7e);
if (this['data']['aniTypes'] == undefined)
    for (i = 0x0; i < _0x1f4449['shop']['allItems']['length']; i++) {
        var _0x1635d8 = _0x1f4449['shop']['allItems'][i];
        console['log'](_0x1635d8['data']);
        if (_0x1635d8['data']['shopCategory'] == 'halloween') console['log'](_0x1635d8['data']['promotions'] + ' = ' + this['itemName']['toLowerCase']());
        if (_0x1635d8 && _0x1635d8['data']['promotions'] && _0x1635d8['data']['promotions']['toLowerCase']()['indexOf'](this['itemName']['toLowerCase']()) > -0x1) {
            var _0x306395 = _0x1f4449['getPostFixForItem'](_0x1635d8['data']['itemName']),
                _0x21d296 = _0x1635d8['getImagePromo'](_0x306395);
            _0x21d296['className'] = 'bundleSkinImg' + (_0x1635d8['coinsPrice'] == -0x1 ? ' bought' : ''), _0x21d296['width'] = '40px', _0x227a7e['appendChild'](_0x21d296);
        }
    } else {
        if (this['data']['aniTypes'] != undefined)
            for (i = 0x0; i < this['data']['aniTypes']['length']; i++) {
                if (this['data']['aniTypes'][i] == 0x3e8) continue;
                var _0x5925ed = _0x1f4449['getSkinPath'](this['data']['aniTypes'][i], this['data']['theme']);
                console['log'](_0x5925ed);
                var _0x21d296 = new Image();
                _0x21d296['src'] = _0x5925ed, _0x21d296['className'] = 'bundleSkinImg aniTypes', _0x21d296['width'] = '40px', _0x227a7e['appendChild'](_0x21d296);
            }
    }
}, window['ShopDeal'] = _0x3695e4;
var _0x107e5a = 0x3;
_0x557db7['setCustomClassForShopItem'](_0x3695e4, _0x107e5a);
var _0x570743 = _0x335e2a,
_0x1e3c43 = _0xb2a2fa;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43;

function _0x335e2a() {
_0x335e2a['superClass']['call'](this, _0x107e5a);
}
_0x335e2a['prototype']['loadShopData'] = function (_0x5e6104) {
_0x335e2a['superClass']['prototype']['loadShopData']['call'](this, _0x5e6104), this['itemName'] = _0x5e6104['itemName'], this['title'] = _0x5e6104['title'], this['credits'] = _0x5e6104['credits'], this['saleType'] = _0x5e6104['saleType'], this['salePrice'] = _0x5e6104['salePrice'];
}, _0x335e2a['prototype']['getShopImageSrc'] = function () {
return 'shop/feature/' + this['itemName']['toLowerCase']() + '.png';
}, _0x335e2a['prototype']['getImage'] = function () {
var _0x139b37 = new Image();
return _0x139b37['className'] = 'shopFeature', _0x139b37['src'] = 'shop/feature/' + this['itemName']['toLowerCase']() + '.png', _0x139b37;
}, _0x335e2a['prototype']['getTitle'] = function () {
var _0x2c7246 = '' + this['title'];
return _0x2c7246['replace']('\x0a', '<br>')['toUpperCase']();
}, _0x335e2a['prototype']['generateHtml'] = function (_0x4f7858) {
var _0x36286b = 'item feature ' + (this['coinsPrice'] == -0x1 ? ' itemOwned' : ' buyItem') + ' ' + this['itemName'];
if (_0x4f7858 == _0xf5c7f6) _0x36286b = _0x36286b + ' confirm_item';
var _0xcd4b85 = _0x16050c('', _0x36286b),
    _0xf9a9f = _0x16050c('', 'image ' + 'biome_' + this['biome']),
    _0x5cdad2 = _0x16050c('', 'price');
_0x5cdad2['innerHTML'] = this['title'];
var _0x339d5c = this['getImage']();
_0xf9a9f['appendChild'](_0x339d5c);
if (this['coinsPrice'] > 0x0) {
    var _0xe7f922 = '';
    if (this['saleType'] == 0x1) _0xe7f922 = 'NEW';
    else {
        if (this['saleType'] == 0x2) _0xe7f922 = 'SALE';
    }
    if (_0xe7f922 != '') {
        var _0xb50394 = _0x16050c('newItem_' + this['animalType'], 'newItem');
        _0xb50394['innerHTML'] = _0xe7f922, _0xcd4b85['appendChild'](_0xb50394);
    }
}
_0xcd4b85['appendChild'](_0xf9a9f), _0xcd4b85['appendChild'](_0x5cdad2);
if (this['coinsPrice'] > 0x0) _0xcd4b85['appendChild'](this['btn']['generateHtml'](_0x4f7858));
else {
    if (_0x4f7858 != _0x13489b) var _0x2033f1 = this;
}
return _0xcd4b85;
}, _0x335e2a['prototype']['fillItemDetails'] = function (_0x152413) {
var _0x3ec471 = _0x16050c('bundleSkins', 'bundleSkins_' + this['itemName']);
_0x152413['appendChild'](_0x3ec471);
if (this['data']['aniTypes'] == undefined)
    for (i = 0x0; i < _0x1f4449['shop']['allItems']['length']; i++) {
        var _0x3c5347 = _0x1f4449['shop']['allItems'][i];
        if (_0x3c5347 && _0x3c5347['data']['promotions'] && _0x3c5347['data']['promotions']['toLowerCase']()['indexOf'](this['itemName']['toLowerCase']()) > -0x1) {
            var _0x3e1d2f = _0x1f4449['getPostFixForItem'](_0x3c5347['data']['itemName']),
                _0x4e8aff = _0x3c5347['getImagePromo'](_0x3e1d2f);
            _0x4e8aff['className'] = 'bundleSkinImg' + (_0x3c5347['coinsPrice'] == -0x1 ? ' bought' : ''), _0x4e8aff['width'] = '40px', _0x3ec471['appendChild'](_0x4e8aff);
        }
    } else
        for (i = 0x0; i < this['data']['aniTypes']['length']; i++) {
            if (this['data']['aniTypes'][i] == 0x3e8) continue;
            var _0x537221 = _0x1f4449['getSkinPath'](this['data']['aniTypes'][i], this['data']['theme']);
            console['log'](_0x537221);
            var _0x4e8aff = new Image();
            _0x4e8aff['src'] = _0x537221, _0x4e8aff['className'] = 'bundleSkinImg aniTypes', _0x4e8aff['width'] = '40px', _0x3ec471['appendChild'](_0x4e8aff);
        }
}, window['ShopFeature'] = _0x335e2a;
var _0xc120c7 = 0x4;
_0x557db7['setCustomClassForShopItem'](_0x335e2a, _0xc120c7);
var _0x570743 = _0x3d2d07,
_0x1e3c43 = _0xb2a2fa;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43;
var _0x54c7ed = 0x3e9;

function _0x3d2d07(_0x418447, _0x2cf543) {
_0x3d2d07['superClass']['call'](this, _0x54c7ed);
}
_0x3d2d07['prototype']['data'] = null, _0x3d2d07['prototype']['loadShopData'] = function (_0x3c4123) {
_0x3d2d07['superClass']['prototype']['loadShopData']['call'](this, _0x3c4123), this['data'] = _0x3c4123, this['getPropType']();
}, _0x3d2d07['prototype']['itemType'] = null, _0x3d2d07['prototype']['propType'] = null, _0x3d2d07['prototype']['propColor'] = null, _0x3d2d07['prototype']['getPropType'] = function () {
if (this['data'] == null) return;
var _0x529758 = this['data']['id']['split']('_');
_0x529758['length'] == 0x3 && (this['itemType'] = _0x529758[0x0], this['propType'] = _0x529758[0x1], this['propColor'] = _0x529758[0x2]);
}, window['PropItem'] = _0x3d2d07, _0x557db7['setCustomClassForShopItem'](_0x3d2d07, _0x54c7ed);

function _0x28ae74(_0x2320a7) {
this['tabs'] = {
    'titles': new Array()
}, this['data'] = _0x2320a7, this['load'] = function () {
    for (i = 0x0; i < this['data']['length']; i++) {
        var _0x3b77ec = this['data'][i]['itemType'];
        this['tabs'][_0x3b77ec] === undefined && (this['tabs']['titles']['push'](_0x3b77ec), this['tabs'][_0x3b77ec] = new Array()), this['tabs'][_0x3b77ec]['push'](this['data'][i]);
    }
};
}
var _0x570743 = _0x1b5171,
_0x1e3c43 = _0x4763ce;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43, _0x570743['prototype']['arenaState'] = 0x0, _0x570743['prototype']['fightNumber'] = 0x0, _0x570743['prototype']['climaxType'] = 0x1, _0x570743['prototype']['timer'] = 0x0, _0x570743['prototype']['timerTxt'] = null, _0x570743['prototype']['p1Name'] = null, _0x570743['prototype']['p2Name'] = null, _0x570743['prototype']['p1Bites'] = 0x0, _0x570743['prototype']['p2Bites'] = 0x0, _0x570743['prototype']['arenaRad'] = 0xa, _0x570743['prototype']['nArenaRad'] = 0xa, _0x570743['prototype']['oArenaRad'] = 0xa, _0x570743['prototype']['isCountdownTimer'] = !![], _0x570743['prototype']['p1PushRemain'] = 0x0, _0x570743['prototype']['p1DashRemain'] = 0x0, _0x570743['prototype']['p2PushRemain'] = 0x0, _0x570743['prototype']['p2DashRemain'] = 0x0, _0x1b5171['prototype']['setTimer'] = function (_0xe4ec1f) {
var _0x2d029d = '',
    _0x4127eb = 0x19;
if (this['isCountdownTimer']) _0x2d029d = '' + _0xe4ec1f;
else {
    _0x4127eb = 0xf;
    if (this['isCpuVsPlayer']) _0x2d029d = '1v1 REDEMPTION';
    else {
        if (this['arenaModeType'] == 0x2) _0x2d029d = 'MATCH #' + this['fightNumber'];
        else _0x2d029d = 'FIGHT\x0a#' + this['fightNumber'];
    }
    _0x2d029d = _0xcc7143['name'] + '\x0a' + _0x2d029d;
}
if (this['isCountdownTimer']) _0x4127eb = Number(_0xe4ec1f) ? 0x1e : _0x4127eb;
null == this['timerTxt'] ? (this['timerTxt'] = new _0x407dea(_0x4127eb, '#FFFFFF'), this['timerTxt']['strokeW'] = 0x2, this['timerTxt']['multiLine'] = !![], this['timerTxt']['renderScale'] = 0x5, this['timerTxt']['setText'](_0x2d029d)) : (this['timerTxt']['setFontSize'](_0x4127eb), this['timerTxt']['setText'](_0x2d029d));
var _0x4d2293 = 'MOPE';
if (this['arenaModeType'] == 0x1) _0x4d2293 = 'NOOB';
else {
    if (this['arenaModeType'] == 0x2) _0x4d2293 = 'PRO';
}
var _0x3e2fe9 = this['climaxType'] == 0x1 ? 'LAST ' + _0x4d2293 + ' STANDING' : this['maxBitesToWin'] + ' BITES WINS';
null == this['climaxTxt'] ? (this['climaxTxt'] = new _0x407dea(_0x4127eb, '#FFFFFF'), this['climaxTxt']['strokeW'] = 0x2, this['climaxTxt']['multiLine'] = !![], this['climaxTxt']['renderScale'] = 0x5, this['climaxTxt']['setText'](_0x3e2fe9)) : (this['climaxTxt']['setFontSize'](0xf), this['climaxTxt']['setText'](_0x3e2fe9));
}, _0x1b5171['prototype']['playerFontSize'] = 0xa, _0x1b5171['prototype']['setP1'] = function (_0x496b40) {
var _0x43cf0c = '' + _0x496b40;
null == this['p1Name'] ? (this['p1Name'] = new _0x407dea(this['playerFontSize'], 'cyan'), this['p1Name']['strokeW'] = 0x2, this['p1Name']['multiLine'] = !![], this['p1Name']['renderScale'] = 0x2, this['p1Name']['setText'](_0x43cf0c)) : (this['p1Name']['setFontSize'](this['playerFontSize']), this['p1Name']['setText'](_0x43cf0c));
}, _0x1b5171['prototype']['setP2'] = function (_0x5b2153) {
var _0xd9fb7e = '' + _0x5b2153;
null == this['p2Name'] ? (this['p2Name'] = new _0x407dea(this['playerFontSize'], 'yellow'), this['p2Name']['strokeW'] = 0x2, this['p2Name']['multiLine'] = !![], this['p2Name']['renderScale'] = 0x2, this['p2Name']['setText'](_0xd9fb7e)) : (this['p2Name']['setFontSize'](this['playerFontSize']), this['p2Name']['setText'](_0xd9fb7e));
}, _0x1b5171['prototype']['updateZ'] = function () {
this['z'] = 0x186a2;
}, _0x1b5171['prototype']['dotX'] = 0.33, _0x1b5171['prototype']['dotY'] = 0.77;
var _0xcb568f = 0x23,
_0x1739c8 = 0.72,
_0x591e65 = 0.2,
_0x259f85 = 0.65,
_0x2c1239 = 0xa;
_0x1b5171['prototype']['glowEffect'] = 0x0, _0x1b5171['prototype']['ver'] = 0x2, _0x1b5171['prototype']['customDraw'] = function (_0x391a61) {
if (_0x44408d && _0x154886 && _0x3dbb56 == this['id']) this['drawCanvas']();
(this['arenaState'] == 0x2 || this['arenaState'] == 0x3) && this['displayEndScreen']();
_0x1d2dab['save'](), _0x1d2dab['rotate'](-0.5 * Math['PI']), _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.065, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, this['rad'], 0x0, 0x2 * Math['PI'], ![]), _0x1d2dab['arc'](0x0, 0x0, this['arenaRad'], 0x0, 0x2 * Math['PI'], !![]), _0x1d2dab['fillStyle'] = 'red', _0x1d2dab['closePath'](), _0x1d2dab['fill'](), _0x1d2dab['restore']();
if (_0x3dbb56 == this['id']) {
    if (_0x3dbb56 == this['id'] && this['arenaState'] == 0x1) {
        _0x1d2dab['save'](), _0x1d2dab['lineWidth'] = 0x4, _0x1d2dab['globalAlpha'] = 0.5;
        var _0x3fc42c = -0x2 * this['timeoutAngle'];
        if (this['closingAngleSet']) {
            var _0x3ef7f3 = -0x2 * this['arenaClosingAngle'];
            _0x1d2dab['save'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, this['rad'] - 0x2, _0x3ef7f3 * Math['PI'], _0x3fc42c * Math['PI']), _0x1d2dab['strokeStyle'] = 'red', _0x1d2dab['stroke'](), _0x1d2dab['restore'](), _0x1d2dab['save'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, this['rad'] - 0x2, 0x0, _0x3ef7f3 * Math['PI']), _0x1d2dab['strokeStyle'] = '#32ff00', _0x1d2dab['stroke'](), _0x1d2dab['restore']();
        } else _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, this['rad'] - 0x2, 0x0, _0x3fc42c * Math['PI']), _0x1d2dab['strokeStyle'] = '#32ff00', _0x1d2dab['stroke']();
        _0x1d2dab['restore']();
    }
    if (this['showTimerAngle']) {
        _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.5;
        var _0x3b0c63 = -0x2 * this['timerAngle'];
        _0x1d2dab['beginPath'](), _0x1d2dab['lineWidth'] = 0x2, _0x1d2dab['arc'](0x0, 0x0, this['arenaRad'] + 0x2, 0x0, _0x3b0c63 * Math['PI']), _0x1d2dab['strokeStyle'] = 'red', _0x1d2dab['stroke'](), _0x1d2dab['restore']();
    }
}
_0x1d2dab['restore']();
if (this['timerTxt'] != null) {
    if (this['arenaState'] == 0x0) this['timerTxt']['x'] = 0x0, this['timerTxt']['y'] = 0x0, this['timerTxt']['draw']();
    else {
        if (this['arenaState'] == 0x1) this['timerTxt']['x'] = 0x0, this['timerTxt']['y'] = -this['rad'] * 0.9, this['timerTxt']['draw'](), this['climaxTxt'] != null && (this['climaxTxt']['x'] = 0x0, this['climaxTxt']['y'] = this['rad'] * 0.85, this['climaxTxt']['draw']());
        else(this['arenaState'] == 0x2 || this['arenaState'] == 0x3) && (this['timerTxt']['x'] = 0x0, this['timerTxt']['y'] = 0x0, this['timerTxt']['draw'](), this['climaxTxt'] != null && (this['climaxTxt']['x'] = 0x0, this['climaxTxt']['y'] = this['rad'] * 0.85, this['climaxTxt']['draw']()));
    }
}
var _0x37a5b9 = 0xf,
    _0xa4d0ba = this['rad'] / 0x2 + this['rad'] * 0.05;
if (this['p1Name'] != null) {
    this['p1Name']['x'] = -this['rad'] / 0x2, this['p1Name']['y'] = -this['rad'] * 0.65, this['p1Name']['draw']();
    if (!this['isCpuVsPlayer']) {
        var _0x187ca8 = 0x0,
            _0x17ce2b = -this['rad'] * _0x1739c8;
        _0x187ca8 -= _0xcb568f, _0x17ce2b -= _0x37a5b9 * 0x2;
        var _0x5982b7 = this['getSkinImageObj']('img/fire/0/0.png');
        for (i = 0x0; i < this['getLives'](); i++) {
            _0x187ca8 -= _0x37a5b9 * 2.2;
            if (_0x5982b7) {
                _0x1d2dab['save']();
                if (this['roundsWon_p1'] > 0x0 && i + 0x1 <= this['roundsWon_p1']) _0x1d2dab['globalAlpha'] = 0.8;
                else _0x1d2dab['globalAlpha'] = 0.2;
                _0x1d2dab['drawImage'](_0x5982b7, _0x187ca8 - _0x37a5b9, _0x17ce2b - _0x37a5b9, _0x37a5b9 * 0x2, _0x37a5b9 * 0x2), _0x1d2dab['restore']();
            }
        }
    }
}
if (this['p2Name'] != null) {
    this['p2Name']['x'] = this['rad'] / 0x2, this['p2Name']['y'] = -this['rad'] * 0.65, this['p2Name']['draw']();
    if (!this['isCpuVsPlayer']) {
        var _0x187ca8 = 0x0,
            _0x17ce2b = -this['rad'] * _0x1739c8;
        _0x187ca8 = _0xcb568f, _0x17ce2b -= _0x37a5b9 * 0x2;
        var _0x5982b7 = this['getSkinImageObj']('img/fire/0/0.png');
        for (i = 0x0; i < this['getLives'](); i++) {
            _0x187ca8 += _0x37a5b9 * 2.2;
            if (_0x5982b7) {
                _0x1d2dab['save']();
                if (this['roundsWon_p2'] > 0x0 && i + 0x1 <= this['roundsWon_p2']) _0x1d2dab['globalAlpha'] = 0.8;
                else _0x1d2dab['globalAlpha'] = 0.2;
                _0x1d2dab['drawImage'](_0x5982b7, _0x187ca8 - _0x37a5b9, _0x17ce2b - _0x37a5b9, _0x37a5b9 * 0x2, _0x37a5b9 * 0x2), _0x1d2dab['restore']();
            }
        }
    }
}
if (_0x2fc9ba != 0x0 && this['id'] == _0x3dbb56 && this['arenaState'] == 0x0) {}
};
var _0x5ee0e2 = 0x1,
_0x194388 = 0x3,
_0x463de7 = 0x5,
_0x292086 = 0x9;
_0x1b5171['prototype']['getLives'] = function () {
switch (this['fightType']) {
case _0x5ee0e2:
    return 0x1;
case _0x194388:
    return 0x2;
case _0x463de7:
    return 0x3;
case _0x292086:
    return 0x5;
}
return 0x1;
}, _0x1b5171['prototype']['hasAdLoaded'] = ![], _0x1b5171['prototype']['isCpuVsPlayer'] = ![], _0x1b5171['prototype']['arenaModeType'] = 0x0, _0x1b5171['prototype']['canPush'] = ![], _0x1b5171['prototype']['canDash'] = ![], _0x1b5171['prototype']['isDarkTheme'] = ![], _0x1b5171['prototype']['custom_canvas'] = null, _0x1b5171['prototype']['drawCanvas'] = function () {
if (this['custom_canvas'] == null) {
    this['custom_canvas'] = document['createElement']('canvas');
    var _0x513c7e = this['rad'] * 0xa,
        _0x3098f2 = this['rad'] * 0xa;
    this['custom_canvas']['width'] = _0x513c7e, this['custom_canvas']['height'] = _0x3098f2;
    var _0x2abc97 = this['custom_canvas']['getContext']('2d');
    _0x2abc97['save'](), _0x2abc97['globalAlpha'] = 0x1, _0x2abc97['fillStyle'] = 'black', _0x2abc97['fillRect'](0x0, 0x0, this['custom_canvas']['width'], this['custom_canvas']['height']), _0x2abc97['globalCompositeOperation'] = 'xor', _0x2abc97['beginPath'](), _0x2abc97['arc'](_0x513c7e / 0x2, _0x513c7e / 0x2, this['rad'], 0x0, 0x2 * Math['PI']), _0x2abc97['fillStyle'] = 'blue', _0x2abc97['fill'](), _0x2abc97['restore']();
}
this['custom_canvas'] != null && (_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.5, _0x1d2dab['drawImage'](this['custom_canvas'], -this['custom_canvas']['width'] / 0x2, -this['custom_canvas']['height'] / 0x2, this['custom_canvas']['width'], this['custom_canvas']['height']), _0x1d2dab['restore']());
}, _0x1b5171['prototype']['timerAngle'] = 0x0, _0x1b5171['prototype']['nTimerAngle'] = 0x0, _0x1b5171['prototype']['showTimerAngle'] = !![], _0x1b5171['prototype']['nTimeoutAngle'] = 0x0, _0x1b5171['prototype']['timeoutAngle'] = 0x0, _0x1b5171['prototype']['arenaTimeoutLeft'] = 0x0, _0x1b5171['prototype']['isArenaClosing'] = ![], _0x1b5171['prototype']['closingAngleSet'] = ![], _0x1b5171['prototype']['arenaClosingAngle'] = 0x0, _0x1b5171['prototype']['onLerpUpdate'] = function (_0xa27f37) {
_0x1b5171['superClass']['prototype']['onLerpUpdate']['call'](this, _0xa27f37), this['arenaRad'] += (this['nArenaRad'] - this['arenaRad']) * 0.1, this['timerAngle'] += (this['nTimerAngle'] - this['timerAngle']) * 0.1, this['timeoutAngle'] += (this['nTimeoutAngle'] - this['timeoutAngle']) * 0.1;
}, _0x1b5171['prototype']['timeLeft'] = 0x0, _0x1b5171['prototype']['fightType'] = 0x0, _0x1b5171['prototype']['rounds'] = 0x0, _0x1b5171['prototype']['roundsWon_p1'] = 0x0, _0x1b5171['prototype']['roundsWon_p2'] = 0x0, _0x1b5171['prototype']['resetArena'] = ![], _0x1b5171['prototype']['player1DarkTheme'] = ![], _0x1b5171['prototype']['player2DarkTheme'] = ![], _0x1b5171['prototype']['readCustomData_onNewlyVisible'] = function (_0x4e6254) {
_0x1b5171['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x4e6254), this['fightType'] = _0x4e6254['readUInt8'](), this['arenaState'] = _0x4e6254['readUInt8'](), this['rounds'] = _0x4e6254['readUInt8'](), this['p1'] = _0x4e6254['readString'](), this['p2'] = _0x4e6254['readString'](), this['arenaModeType'] = _0x4e6254['readUInt8'](), this['isCpuVsPlayer'] = this['arenaModeType'] == 0x1 || this['arenaModeType'] == 0x2, this['p1Wins'] = _0x4e6254['readUInt8'](), this['p2Wins'] = _0x4e6254['readUInt8'](), this['fightNumber'] = _0x4e6254['readUInt16']();
var _0x27499d = _0x4e6254['readUInt16']() / 0x64;
this['oArenaRad'] = this['arenaRad'], this['nArenaRad'] = _0x27499d, this['setNames'](), this['climaxType'] = _0x4e6254['readUInt8']();
if (this['climaxType'] == 0x2) this['maxBitesToWin'] = _0x4e6254['readUInt8']();
this['canPush'] = _0x4e6254['readUInt8']() == 0x1, this['canDash'] = _0x4e6254['readUInt8']() == 0x1;
}, _0x1b5171['prototype']['readUpdatedProperty'] = function (_0x86e63b, _0x586583) {
if (_0x86e63b == _0x48610c) this['arenaState'] = _0x586583['readUInt8']();
else {
    if (_0x86e63b == _0x14c825) this['rounds'] = _0x586583['readUInt8']();
    else {
        if (_0x86e63b == _0x24455c) {
            var _0xa41a2b = _0x586583['readUInt16']() / 0x64;
            this['oArenaRad'] = this['arenaRad'], this['nArenaRad'] = _0xa41a2b;
        } else {
            if (_0x86e63b == _0x5389ea) {
                this['closingAngleSet'] = this['isArenaClosing'] = ![], this['timer'] = _0x586583['readUInt16']() / 0x64, this['isCountdownTimer'] = !![];
                if (this['timer'] < 0x17) this['updateTimer']();
            } else {
                if (_0x86e63b == _0x141e49) this['timer'] = _0x586583['readUInt16']() / 0x64, this['isCountdownTimer'] = ![], this['updateTimer'](), this['displayAds'] = ![], this['adShown'] = ![];
                else {
                    if (_0x86e63b == _0x1c5fdc) this['timeLeft'] = _0x586583['readUInt16'](), this['nTimerAngle'] = this['timeLeft'] / 0x3e8;
                    else {
                        if (_0x86e63b == _0x135b8f) this['showTimerAngle'] = _0x586583['readUInt8']() == 0x1;
                        else {
                            if (_0x86e63b == _0x4b18d2) this['isArenaClosing'] = _0x586583['readUInt8']() == 0x1, this['isArenaClosing'] && !this['closingAngleSet'] && (this['closingAngleSet'] = !![], this['arenaClosingAngle'] = this['timeoutAngle']);
                            else {
                                if (_0x86e63b == _0x3f5b98) this['arenaTimeoutLeft'] = _0x586583['readUInt16'](), this['nTimeoutAngle'] = this['arenaTimeoutLeft'] / 0x3e8;
                                else {
                                    if (_0x86e63b == _0x416a3c) {
                                        this['winner'] = _0x586583['readUInt8']();
                                        var _0x391de4 = '' + this['p1'];
                                        if (_0x391de4['length'] == 0x0) _0x391de4 = 'mope.io';
                                        var _0x225677 = '' + this['p2'];
                                        if (_0x225677['length'] == 0x0) _0x225677 = 'mope.io';
                                        if (this['winner'] == 0x1) this['winnerName'] = _0x391de4;
                                        else this['winnerName'] = _0x225677;
                                    } else {
                                        if (_0x86e63b == _0x54a932) this['winnerMsg'] = _0x586583['readString']();
                                        else {
                                            if (_0x86e63b == _0x14580b) this['p1Bites'] = _0x586583['readUInt8'](), this['setNames']();
                                            else {
                                                if (_0x86e63b == _0x4c938c) this['p2Bites'] = _0x586583['readUInt8'](), this['setNames']();
                                                else {
                                                    if (_0x86e63b == _0x254826) this['winBonus'] = _0x586583['readUInt32']();
                                                    else {
                                                        if (_0x86e63b == _0x3722b4) this['roundsWon_p1'] = _0x586583['readUInt8']();
                                                        else {
                                                            if (_0x86e63b == _0x43e34b) this['roundsWon_p2'] = _0x586583['readUInt8']();
                                                            else {
                                                                if (_0x86e63b == _0x2b1d67) this['p1Wins'] = _0x586583['readUInt8']();
                                                                else {
                                                                    if (_0x86e63b == _0x3ff99e) this['p2Wins'] = _0x586583['readUInt8']();
                                                                    else {
                                                                        if (_0x86e63b == _0x69729d) this['p1'] = _0x586583['readString'](), this['setNames']();
                                                                        else {
                                                                            if (_0x86e63b == _0x11782c) this['p2'] = _0x586583['readString'](), this['setNames']();
                                                                            else {
                                                                                if (_0x86e63b == _0x3b0632) {
                                                                                    var _0x39bfaa = _0x586583['readUInt8']() == 0x1;
                                                                                    this['resetArena'] != _0x39bfaa && (this['endScreenState'] = 0x0, this['resetArena'] = _0x39bfaa);
                                                                                } else {
                                                                                    if (_0x86e63b == _0x33ad43) this['fightNumber'] = _0x586583['readUInt16']();
                                                                                    else {
                                                                                        if (_0x86e63b == _0xcd7fc6) this['player1DarkTheme'] = _0x586583['readUInt8']() == 0x1;
                                                                                        else _0x86e63b == _0x576026 && (this['player2DarkTheme'] = _0x586583['readUInt8']() == 0x1);
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
}, _0x1b5171['prototype']['endScreenState'] = -0x1, _0x1b5171['prototype']['endScreenChangeT'] = 0x0, _0x1b5171['prototype']['resetEndScreenState'] = !![], _0x1b5171['prototype']['displayEndScreen'] = function () {
_0x740c5b >= this['endScreenChangeT'] && (this['endScreenState']++, this['endScreenChangeT'] = _0x740c5b + 0xbb8);
if (this['timerTxt'] != null) {
    if (this['endScreenState'] == 0x0) this['timerTxt']['setFontSize'](0x28), this['timerTxt']['setText']('\x0aKO!');
    else {
        if (this['endScreenState'] == 0x1) this['timerTxt']['setFontSize'](0x14), this['timerTxt']['setText'](this['winnerName'] + '\x0aWON!');
        else this['endScreenState'] >= 0x3 && (this['timerTxt']['setFontSize'](0x14), this['winBonus'] !== undefined && this['winnerMsg'] != null && this['winBonus'] > 0x0 && this['timerTxt']['setText'](this['winnerMsg'] + '\x0aWIN BONUS: ' + _0x33bfab(this['winBonus'])));
    }
}
}, _0x1b5171['prototype']['challenger'] = null, _0x1b5171['prototype']['opponent'] = null, _0x1b5171['prototype']['setNames'] = function () {
var _0x5294c3 = '' + this['p1'];
if (_0x5294c3['length'] == 0x0) _0x5294c3 = 'mope.io';
var _0x3165cf = '' + this['p2'];
if (_0x3165cf['length'] == 0x0) _0x3165cf = 'mope.io';
var _0x128901 = this['isCpuVsPlayer'] ? 'level' : 'wins',
    _0x496593 = '\x0a(' + _0x128901 + ': ' + this['p1Wins'] + ')',
    _0x13fff3 = '\x0a(' + _0x128901 + ': ' + this['p2Wins'] + ')',
    _0x174eac = '\x0abites: ' + this['p1Bites'],
    _0x3571a7 = '\x0abites: ' + this['p2Bites'];
if (this['arenaState'] < 0x3) this['challenger'] = _0x5294c3 + _0x496593, this['opponent'] = _0x3165cf + _0x13fff3, this['setP1'](_0x5294c3 + _0x496593 + _0x174eac), this['setP2'](_0x3165cf + _0x13fff3 + _0x3571a7);
else {
    if (this['arenaState'] == 0x3) {
        if (this['winner'] == 0x1) this['winnerName'] = _0x5294c3, this['setP1'](_0x5294c3 + _0x496593 + _0x174eac), this['p2Name'] = null;
        else this['winner'] == 0x2 && (this['winnerName'] = _0x3165cf, this['setP2'](_0x3165cf + _0x13fff3 + _0x3571a7), this['p1Name'] = null);
    }
}
}, _0x1b5171['prototype']['updateTimer'] = function () {
this['timer'] = Math['round'](this['timer']);
var _0x44039d = this['timer'];
if (this['isCountdownTimer']) {
    switch (this['timer']) {
    case 0x17:
        _0x44039d = '';
        break;
    case 0x16:
    case 0x15:
        if (this['arenaModeType'] == 0x3) _0x44039d = '1V1 TOURNAMENT';
        else _0x44039d = 'WELCOME TO 1V1 ARENA';
        break;
    case 0x14:
    case 0x13:
        if (this['arenaModeType'] == 0x3) _0x44039d = 'MATCH #' + this['fightNumber'];
        else {
            var _0x1c50d1 = 'MAN';
            if (this['arenaModeType'] == 0x1) _0x1c50d1 = 'NOOB';
            else {
                if (this['arenaModeType'] == 0x2) _0x1c50d1 = 'PRO';
            }
            _0x44039d = 'FIGHT #' + this['fightNumber'] + '\x0a' + (this['climaxType'] == 0x1 ? 'LAST ' + _0x1c50d1 + ' STANDING' : this['maxBitesToWin'] + ' BITES TO WIN'), _0x44039d = _0xcc7143['name'] + '\x0a' + _0x44039d;
        }
        break;
    case 0x12:
    case 0x11:
        if (!this['isCpuVsPlayer']) {
            _0x44039d = 'CHALLENGER';
            break;
        }
        case 0x10:
        case 0xf:
            if (this['isCpuVsPlayer']) _0x44039d = 'REDEMPTION\x0aLEVEL ' + this['p1Wins'];
            else _0x44039d = this['challenger'];
            break;
        case 0xe:
        case 0xd:
            _0x44039d = 'OPPONENT';
            break;
        case 0xc:
        case 0xb:
            _0x44039d = this['opponent'];
            break;
        case 0x2:
            _0x44039d = 'ROUND ' + this['rounds'];
            break;
        case 0x1:
            _0x44039d = 'GET SET';
            break;
        case 0x0:
            _0x44039d = 'FIGHT';
            break;
    }
    if (this['timer'] < 0x14 && !this['displayAds'] && !this['adShown']) this['displayAds'] = !![];
}
this['setTimer'](_0x44039d);
}, _0x1b5171['prototype']['adShown'] = ![], _0x1b5171['prototype']['displayAds'] = ![], _0x1b5171['prototype']['displayedAdsOnEnd'] = ![], _0x1b5171['prototype']['showAds'] = function (_0x30aa93) {
if (!_0xb29884) !this['adShown'] && (this['displayAds'] && (_0x40152c > 0xd && (this['adShown'] = !![], _0x45a8b5($bus['CONSTANTS']['AD_SCREEN_LAYOUTS']['ARENA']), setTimeout(() => {
    _0xbbcdd9();
}, _0x30aa93))));
}, _0x1b5171['prototype']['removeAds'] = function () {
_0x3dbb56 == this['id'] && _0xbbcdd9();
}, _0x1b5171['prototype']['onRemovedFromGame'] = function () {
console['log']('Arena removed from game!');
};

function _0x1b5171() {
_0x1b5171['superClass']['call'](this), this['hasAdLoaded'] = ![];
}
window['AbilityObj1v1Arena'] = _0x1b5171, _0x13dc56['setCustomClassForGameObjType'](_0x1b5171, _0x2c5edd, _0x1921e6);
var _0x2a91a7 = _0x2a91a7,
_0x1e3c43 = _0x3d6c08;
_0x2a91a7['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x2a91a7['prototype']['constructor'] = _0x2a91a7, _0x2a91a7['superClass'] = _0x1e3c43, _0x2a91a7['prototype']['getSkinName'] = function () {
if (this['animalSpecies'] == 0xdc && this['animalSubSpecies'] == 0x0) return 'ocean/seamonster/' + this['animalSpecies'] + '/seamonster1';
else return 'ocean/seamonster/' + this['animalSpecies'] + '/seamonster';
}, _0x2a91a7['prototype']['calcAnimalZIndex'] = function () {
if (this['flag_underWater']) this['z'] = -0x64;
else {
    if (this['flag_isInArena']) this['z'] += 0x3e8;
    else {
        if (this['flag_eff_tossedInAir']) this['z'] = 0x4b0 + this['rad'];
        else this['z'] = 0x3e8 + this['rad'];
    }
}
}, _0x2a91a7['prototype']['animalInfo'] = function () {
var _0x2b5bc4 = {},
    _0x160b5c = '';
switch (this['animalSpecies']) {
case 0x0:
    _0x2b5bc4['aniName'] = 'Sea Monster';
    break;
case 0x1:
    _0x2b5bc4['aniName'] = 'Golden Sea Monster';
    break;
case 0x2:
    _0x2b5bc4['aniName'] = 'Sapphire Monster';
    break;
case 0xc8:
    _0x2b5bc4['aniName'] = 'Luckycharm Monster';
    break;
case 0xc9:
    _0x2b5bc4['aniName'] = 'Ancient Tortoise';
    break;
case 0xca:
    _0x2b5bc4['aniName'] = 'Submarine Monster';
    break;
case 0xdc:
    _0x2b5bc4['aniName'] = 'Dimensional Monster';
    break;
}
return _0x2b5bc4['aniCol'] = 'blue', _0x2b5bc4['upgradeText'] = 'UPGRADED to ' + _0x2b5bc4['aniName'] + '!\x0aCreate whirlpool to trap prey!' + _0x160b5c, _0x2b5bc4['skinName'] = 'ocean/seamonster/' + this['animalSpecies'] + '/seamonster', _0x2b5bc4;
}, _0x2a91a7['prototype']['getAbilityInfo'] = function (_0x240133) {
var _0x66c349 = {};
return _0x66c349['abilName'] = 'Giant Whirlpool', _0x66c349['abilImg'] = 'abilities/Whirlpool.svg', _0x66c349['skinThemeID'] = this['skinThemeID'], _0x66c349['mopeSeasonID'] = this['mopeSeasonID'], _0x66c349;
}, _0x2a91a7['prototype']['drawSkinCustomization'] = function () {
this['setSkinScale']();
if (this['animalSpecies'] == 0xdc && this['animalSubSpecies'] == 0x0) {
    var _0x22d157 = 'skins/ocean/seamonster/220/',
        _0x2701c6 = this['skinScale'] * 1.07,
        _0x357bb1 = this['skinRad'],
        _0x23f626 = 0x1 + Math['trunc'](_0x740c5b / 0x78) % 0x8,
        _0x101317 = 0x0,
        _0x2d3378 = this['getSkinImageObj'](_0x22d157 + '/anim/' + _0x23f626 + '.png');
    _0x2d3378 && (_0x1d2dab['save'](), _0x1d2dab['drawImage'](_0x2d3378, -_0x357bb1 * _0x2701c6, (-_0x357bb1 + _0x357bb1 * 0.05) * _0x2701c6 - _0x101317, 0x2 * _0x357bb1 * _0x2701c6, 0x2 * _0x357bb1 * _0x2701c6), _0x1d2dab['restore']());
}
}, _0x2a91a7['prototype']['basicDrawSkinImg'] = function () {
if (this['animalSpecies'] == 0xdc && this['animalSubSpecies'] == 0x0) {
    this['setSkinScale']();
    var _0x3ebc97 = this['skinScale'],
        _0x23b3d3 = this['skinRad'];
    this['loadedSkinImg'] && (overSizeOffset = this['skinRad'] / 0x2, _0x1d2dab['drawImage'](this['loadedSkinImg'], -_0x23b3d3 * _0x4c7ee2, -_0x23b3d3 * _0x4c7ee2, 0x2 * _0x23b3d3 * _0x4c7ee2, 0x2 * _0x23b3d3 * _0x4c7ee2));
} else _0x2a91a7['superClass']['prototype']['basicDrawSkinImg']['call'](this);
};

function _0x2a91a7() {
_0x2a91a7['superClass']['call'](this, _0x4ad968);
}
window['SeaMonster'] = _0x2a91a7, _0x13dc56['setCustomClassForGameObjType'](_0x2a91a7, _0x4ad968, _0x380133);
var _0xb4a114 = _0xb4a114,
_0x1e3c43 = _0x3d6c08;
_0xb4a114['prototype'] = Object['create'](_0x1e3c43['prototype']), _0xb4a114['prototype']['constructor'] = _0xb4a114, _0xb4a114['superClass'] = _0x1e3c43, _0xb4a114['prototype']['calcAnimalZIndex'] = function () {
if (this['flag_underWater']) this['z'] = -0x64;
else {
    if (this['flag_isInArena']) this['z'] += 0x3e8;
    else {
        if (this['flag_eff_tossedInAir']) this['z'] = 0x4b0 + this['rad'];
        else this['z'] = 0x4b0 + this['rad'];
    }
}
}, _0xb4a114['prototype']['animalInfo'] = function () {
var _0x26cda4 = {},
    _0x226916 = '';
switch (this['animalSpecies']) {
case 0x0:
    _0x26cda4['aniName'] = 'Land Monster';
    break;
case 0x1:
    _0x26cda4['aniName'] = 'Golden Land Monster';
    break;
case 0x2:
    _0x26cda4['aniName'] = 'Titanite Monster';
    break;
case 0xca:
    _0x26cda4['aniName'] = 'Fighter Jet';
    break;
case 0xcc:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x26cda4['aniName'] = 'Necromus';
        break;
    case 0x1:
        _0x26cda4['aniName'] = 'Planet Eater Monster';
    }
    break;
case 0xdc:
    _0x26cda4['aniName'] = 'Belphegor';
    break;
case 0xde:
    _0x26cda4['aniName'] = 'Peppermint Monster';
    break;
}
return _0x26cda4['aniCol'] = 'orange', _0x26cda4['upgradeText'] = 'UPGRADED to ' + _0x26cda4['aniName'] + '!\x0aCreate Sink holes to trap prey!' + _0x226916, _0x26cda4['skinName'] = this['getSkinName'](), _0x26cda4;
}, _0xb4a114['prototype']['getSkinName'] = function () {
if (this['animalSpecies'] == 0xcc && this['animalSubSpecies'] == 0x0) return 'volcano/landmonster/' + this['animalSpecies'] + this['getSubSpecies']() + '/landmonster1';
else return 'volcano/landmonster/' + this['animalSpecies'] + this['getSubSpecies']() + '/landmonster';
}, _0xb4a114['prototype']['getSubSpecies'] = function () {
return this['animalSpecies'] === 0xcc ? '/' + this['animalSubSpecies'] : '';
}, _0xb4a114['prototype']['getAbilityInfo'] = function (_0x1c2718) {
var _0x3ab740 = {};
return _0x3ab740['abilName'] = 'Giant\x0aSinkhole!', _0x3ab740['abilImg'] = 'abilities/Sinkhole.svg', _0x3ab740['skinThemeID'] = this['skinThemeID'], _0x3ab740['mopeSeasonID'] = this['mopeSeasonID'], _0x3ab740;
}, _0xb4a114['prototype']['drawSkinCustomization'] = function () {
this['setSkinScale']();
if (this['animalSpecies'] == 0xcc && this['animalSubSpecies'] == 0x0) {
    var _0x46d9a5 = 'skins/volcano/landmonster/204/0/',
        _0x5503e3 = this['skinScale'] * 1.07,
        _0x15f09b = this['skinRad'],
        _0x17ccbd = 0x1 + Math['trunc'](_0x740c5b / 0x78) % 0x7,
        _0x9d05e6 = this['getSkinImageObj'](_0x46d9a5 + '/landmonster_head.png'),
        _0x5ba292 = 0x0;
    if (_0x9d05e6) {
        _0x1d2dab['save']();
        var _0x15f09b = this['rad'];
        _0x1d2dab['drawImage'](_0x9d05e6, -_0x15f09b * _0x5503e3, (-_0x15f09b + _0x15f09b * 0.05) * _0x5503e3 - _0x5ba292, 0x2 * _0x15f09b * _0x5503e3, 0x2 * _0x15f09b * _0x5503e3), _0x1d2dab['restore']();
        var _0x4a51f5 = this['getSkinImageObj'](_0x46d9a5 + '/fire' + _0x17ccbd + '.png');
        _0x4a51f5 && (_0x1d2dab['save'](), _0x1d2dab['drawImage'](_0x4a51f5, -_0x15f09b * _0x5503e3, (-_0x15f09b + _0x15f09b * 0.05) * _0x5503e3 - _0x5ba292, 0x2 * _0x15f09b * _0x5503e3, 0x2 * _0x15f09b * _0x5503e3), _0x1d2dab['restore']());
        var _0x4a51f5 = this['getSkinImageObj'](_0x46d9a5 + '/landmonster_head1.png');
        _0x4a51f5 && (_0x1d2dab['save'](), _0x1d2dab['drawImage'](_0x4a51f5, -_0x15f09b * _0x5503e3, (-_0x15f09b + _0x15f09b * 0.05) * _0x5503e3 - _0x5ba292, 0x2 * _0x15f09b * _0x5503e3, 0x2 * _0x15f09b * _0x5503e3), _0x1d2dab['restore']());
    }
}
};
var _0x4c7ee2 = 1.8;
_0xb4a114['prototype']['basicDrawSkinImg'] = function () {
if (this['animalSpecies'] == 0xcc && this['animalSubSpecies'] == 0x0) {
    this['setSkinScale']();
    var _0xd1b613 = this['skinScale'],
        _0x29cfc8 = this['skinRad'];
    this['loadedSkinImg'] && (overSizeOffset = this['skinRad'] / 0x2, _0x1d2dab['drawImage'](this['loadedSkinImg'], -_0x29cfc8 * _0x4c7ee2, -_0x29cfc8 * _0x4c7ee2, 0x2 * _0x29cfc8 * _0x4c7ee2, 0x2 * _0x29cfc8 * _0x4c7ee2));
} else _0xb4a114['superClass']['prototype']['basicDrawSkinImg']['call'](this);
};

function _0xb4a114() {
_0xb4a114['superClass']['call'](this, _0x4ad968);
}
window['LandMonster'] = _0xb4a114, _0x13dc56['setCustomClassForGameObjType'](_0xb4a114, _0x4ad968, _0x9ca027);
var _0x40a0ab = _0x40a0ab,
_0x1e3c43 = _0x3d6c08;
_0x40a0ab['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x40a0ab['prototype']['constructor'] = _0x40a0ab, _0x40a0ab['superClass'] = _0x1e3c43, _0x40a0ab['prototype']['calcAnimalZIndex'] = function () {
if (this['flag_underWater']) this['z'] = -0x64;
else {
    if (this['flag_isInArena']) this['z'] += 0x3e8;
    else {
        if (this['flag_eff_tossedInAir']) this['z'] = 0x4b0 + this['rad'];
        else this['z'] = 0x3e8 + this['rad'];
    }
}
}, _0x40a0ab['prototype']['animalInfo'] = function () {
var _0x116c47 = {},
    _0x23498e = '';
switch (this['animalSpecies']) {
case 0x0:
    _0x116c47['aniName'] = 'Ice Monster';
    break;
case 0x1:
    _0x116c47['aniName'] = 'Golden Ice Monster';
    break;
case 0x2:
    _0x116c47['aniName'] = 'Amethyst Monster';
    break;
case 0xc9:
    _0x116c47['aniName'] = 'Cryo Coach Monster';
    break;
case 0xcc:
    _0x116c47['aniName'] = 'Blood Crystal Monster';
    break;
case 0xdc:
    _0x116c47['aniName'] = 'Blazing Ice Monster';
    break;
}
return _0x116c47['aniCol'] = '#ffffff', _0x116c47['upgradeText'] = 'UPGRADED to ' + _0x116c47['aniName'] + '!\x0aShoot Ice crystals to freeze prey!' + _0x23498e, _0x116c47['skinName'] = 'arctic/icemonster/' + this['animalSpecies'] + '/icemonster', _0x116c47;
}, _0x40a0ab['prototype']['getSkinName'] = function () {
var _0x4d43e2 = this['id'] == 0x0 ? 'ability' : 'icemonster';
return 'arctic/icemonster/' + this['animalSpecies'] + '/' + _0x4d43e2;
}, _0x40a0ab['prototype']['getAbilityInfo'] = function (_0x5ccbb9) {
var _0x3a7942 = {};
return _0x3a7942['abilName'] = 'Freeze Prey!', _0x3a7942['abilImg'] = 'abilities/Ice-Freeze.svg', _0x3a7942['skinThemeID'] = this['skinThemeID'], _0x3a7942['mopeSeasonID'] = this['mopeSeasonID'], _0x3a7942;
}, _0x40a0ab['prototype']['readCustomData_onNewlyVisible'] = function (_0x446058) {
_0x40a0ab['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x446058), this['readCrystalsInfo'](_0x446058);
}, _0x40a0ab['prototype']['readCrystal'] = function (_0x2a0076, _0x110566) {
var _0x362d55 = _0x2a0076['readInt16']() / 0x64;
this['crystals'][_0x110566]['nRad'] = _0x362d55;
if (_0x362d55 < 0x1) this['crystals'][_0x110566]['rad'] = 0x0;
this['crystals'][_0x110566]['isReady'] = _0x2a0076['readUInt8']() == 0x1;
}, _0x40a0ab['prototype']['customUpdatedProperty'] = function (_0x3f2830, _0x3b51af) {
if (_0x3f2830 == _0x5dadfd) this['readCrystal'](_0x3b51af, 0x0);
else {
    if (_0x3f2830 == _0x40da42) this['readCrystal'](_0x3b51af, 0x1);
    else {
        if (_0x3f2830 == _0x35d028) this['readCrystal'](_0x3b51af, 0x2);
        else {
            if (_0x3f2830 == _0x53a592) this['readCrystal'](_0x3b51af, 0x3);
            else {
                if (_0x3f2830 == _0x1cc405) this['readCrystal'](_0x3b51af, 0x4);
                else {
                    if (_0x3f2830 == _0x2980b1) this['readCrystal'](_0x3b51af, 0x5);
                    else _0x3f2830 == _0x4508ba && this['readCrystal'](_0x3b51af, 0x6);
                }
            }
        }
    }
}
}, _0x40a0ab['prototype']['crystals'] = [], _0x40a0ab['prototype']['readCrystalsInfo'] = function (_0x29a929) {
var _0x2a629b = _0x29a929['readUInt8']();
this['crystals'] = [];
for (i = 0x0; i < _0x2a629b; i++) {
    var _0x53f60d = _0x29a929['readInt16']() / 0x64,
        _0x56727a = _0x29a929['readInt16']() / 0x64,
        _0x15d0e6 = _0x29a929['readInt16']() / 0x64,
        _0x5abad4 = _0x29a929['readUInt8']() * 0x4,
        _0x3f0422 = _0x29a929['readUInt8']() == 0x1;
    this['crystals']['push']({
        'isReady': _0x3f0422,
        'x': _0x53f60d,
        'y': _0x56727a,
        'nRad': _0x15d0e6,
        'oRad': _0x15d0e6,
        'rad': _0x15d0e6,
        'angle': _0x5abad4
    });
}
};
var _0x5d5fe1 = 1.5;
_0x40a0ab['prototype']['drawSkinCustomization'] = function () {
if (this['animalSpecies'] == 0xc9) {
    _0x1d2dab['save']();
    var _0x401ba6 = 0x0;
    for (i = 0x0; i < this['crystals']['length']; i++) {
        var _0x3c92e7 = this['crystals'][i];
        if (_0x3c92e7['isReady']) _0x401ba6++;
    }
    _0x401ba6 = Math['min'](0x5, _0x401ba6);
    var _0x457758 = 'skins/arctic/icemonster/201/icemonster' + _0x401ba6 + '.png',
        _0x1c1fba = this['getSkinImageObj'](_0x457758);
    if (_0x1c1fba) {
        var _0x38bd97 = this['rad'] * _0x5d5fe1;
        _0x1d2dab['drawImage'](_0x1c1fba, -_0x38bd97, -_0x38bd97, 0x2 * _0x38bd97, 0x2 * _0x38bd97);
    }
    _0x1d2dab['restore']();
} else {
    var _0x38bd97 = this['rad'] - this['outlineW'];
    for (i = 0x0; i < this['crystals']['length']; i++) {
        var _0x3c92e7 = this['crystals'][i];
        if (_0x3c92e7['nRad'] == 0x0) continue;
        _0x3c92e7['rad'] += (_0x3c92e7['nRad'] - _0x3c92e7['rad']) * 0.01;
        var _0x582ea7 = _0x3c92e7['x'] * _0x38bd97,
            _0x2e9ced = _0x3c92e7['y'] * _0x38bd97,
            _0x4408fc = _0x3c92e7['angle'],
            _0x25675c = _0x3c92e7['rad'];
        _0x1d2dab['save'](), _0x1d2dab['translate'](_0x582ea7, _0x2e9ced), _0x1d2dab['globalAlpha'] = 0x1, _0x1d2dab['rotate'](_0x2bcbaa(_0x4408fc));
        var _0x1c1fba = this['getSkinImageObj']('skins/arctic/icemonster/' + this['animalSpecies'] + '/crystal.png');
        _0x1c1fba && _0x1d2dab['drawImage'](_0x1c1fba, -_0x25675c, -_0x25675c * 0x2, _0x25675c * 0x2, _0x25675c * 0x2), _0x1d2dab['restore']();
    }
}
};

function _0x40a0ab() {
_0x40a0ab['superClass']['call'](this, _0x4ad968);
}
window['IceMonster'] = _0x40a0ab, _0x13dc56['setCustomClassForGameObjType'](_0x40a0ab, _0x4ad968, _0x40da91);
var _0x3963d6 = _0x3963d6,
_0x1e3c43 = _0x3d6c08;
_0x3963d6['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x3963d6['prototype']['constructor'] = _0x3963d6, _0x3963d6['superClass'] = _0x1e3c43, _0x3963d6['prototype']['calcAnimalZIndex'] = function () {
if (this['flag_underWater']) this['z'] = -0x64;
else {
    if (this['flag_isInArena']) this['z'] += 0x3e8;
    else {
        if (this['flag_eff_tossedInAir']) this['z'] = 0x4b0 + this['rad'];
        else this['z'] = 0x3e8 + this['rad'];
    }
}
}, _0x3963d6['prototype']['drawWhenUnderwater'] = function () {
this['drawUnderwaterCustomization'](0x1, 1.1);
}, _0x3963d6['prototype']['animalInfo'] = function () {
var _0x1fdf7b = {},
    _0x284ea0 = '';
switch (this['animalSpecies']) {
case 0x0:
    _0x1fdf7b['aniName'] = 'Dino Monster';
    break;
case 0x1:
    _0x1fdf7b['aniName'] = 'Golden Dino Monster';
    break;
case 0x2:
    _0x1fdf7b['aniName'] = 'Citrine Monster';
    break;
case 0xc8:
    _0x1fdf7b['aniName'] = 'Ruby Devil';
    break;
case 0xca:
    _0x1fdf7b['aniName'] = 'Tank Monster';
    break;
case 0xdc:
    _0x1fdf7b['aniName'] = 'Cordycera Dino Monster';
    break;
}
return _0x1fdf7b['aniCol'] = 'orange', _0x1fdf7b['upgradeText'] = 'UPGRADED to ' + _0x1fdf7b['aniName'] + '!\x0aKnock prey in Air to inflict deadly damage!' + _0x284ea0, _0x1fdf7b['skinName'] = 'land/dinomonster/' + this['animalSpecies'] + '/dinomonster', _0x1fdf7b;
}, _0x3963d6['prototype']['getSkinName'] = function () {
return 'land/dinomonster/' + this['animalSpecies'] + '/dinomonster1';
}, _0x3963d6['prototype']['getAbilityInfo'] = function (_0x59d0a6) {
var _0x47e5bf = {};
return _0x47e5bf['abilName'] = 'Knock in Air', _0x47e5bf['abilImg'] = 'abilities/Throw.svg', _0x47e5bf['skinThemeID'] = this['skinThemeID'], _0x47e5bf['mopeSeasonID'] = this['mopeSeasonID'], _0x47e5bf;
}, _0x3963d6['prototype']['drawSkinCustomization'] = function () {
var _0x4c43af = 'skins/land/dinomonster/' + this['animalSpecies'] + '/dinomonster';
if (this['flag_usingAbility']) _0x4c43af += '3';
else _0x4c43af += '2';
var _0x12b60d = this['getSkinImageObj'](_0x4c43af + '.png');
if (_0x12b60d) {
    _0x1d2dab['save']();
    var _0x4ebbd1 = (this['rad'] - this['outlineW']) * 1.1;
    _0x1d2dab['drawImage'](_0x12b60d, -_0x4ebbd1 * this['skinScale'] * 0.91, -_0x4ebbd1 * this['skinScale'] * 1.1, 0x2 * _0x4ebbd1 * this['skinScale'] * 0.91, 0x2 * _0x4ebbd1 * this['skinScale'] * 1.1), _0x1d2dab['restore']();
}
};

function _0x3963d6() {
_0x3963d6['superClass']['call'](this, _0x4ad968);
}
window['DinoMonster'] = _0x3963d6, _0x13dc56['setCustomClassForGameObjType'](_0x3963d6, _0x4ad968, _0x31a0ba);
var _0x1e3c43 = _0x131218;
_0x4ff013['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x4ff013['prototype']['constructor'] = _0x4ff013, _0x4ff013['superClass'] = _0x1e3c43, _0x4ff013['prototype']['updateZ'] = function () {
this['z'] = 0x3ed;
}, _0x4ff013['prototype']['customDraw'] = function (_0x1947a2) {
var _0x3fc21d = this['getSkinImageObj']('skins/arctic/icemonster/' + this['speciesType'] + '/crystalfire.png');
if (_0x3fc21d) {
    _0x1d2dab['save']();
    var _0x3f1fd6 = this['rad'] * 1.5;
    _0x1d2dab['rotate'](this['angle'] + _0x2bcbaa(0xb4)), _0x1d2dab['drawImage'](_0x3fc21d, -_0x3f1fd6, -_0x3f1fd6, _0x3f1fd6 * 0x2, _0x3f1fd6 * 2.5), _0x1d2dab['restore']();
}
}, _0x4ff013['prototype']['getSkinImageObj'] = function (_0x549304) {
var _0x2c0805 = this['speciesType'] === 0x1 || this['speciesType'] === 0x2 || this['speciesType'] === 0xc9 || this['speciesType'] === 0xcc ? 0x1 : this['mopeSeasonID'],
    _0xe7539a = './assets/s/' + _0x2c0805 + '/' + _0x549304;
return this['skinThemeID'] > 0x0 && (_0xe7539a = './assets/t/' + this['skinThemeID'] + '/' + _0x549304), _0x5ace1d(_0xe7539a, function (_0x39d314) {
    console['log'](_0x39d314['src']);
});
}, _0x4ff013['prototype']['readCustomData_onNewlyVisible'] = function (_0x19cdbc) {
_0x4ff013['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x19cdbc), this['speciesType'] = _0x19cdbc['readUInt8']();
};

function _0x4ff013() {
_0x4ff013['superClass']['call'](this, _0x3c62e2);
}
window['IceCrystal'] = _0x4ff013, _0x13dc56['setCustomClassForGameObjType'](_0x4ff013, _0x3c62e2);
var _0x1e3c43 = _0x131218;
_0x266d52['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x266d52['prototype']['constructor'] = _0x266d52, _0x266d52['superClass'] = _0x1e3c43, _0x266d52['prototype']['updateZ'] = function () {
this['z'] = -0x65;
}, _0x266d52['prototype']['customDraw'] = function (_0x30fa97) {
_0x1d2dab['save'](), this['specType'] == 0x0 ? (this['drawOutlinedCircle']('', '#9F8641'), _0x1d2dab['globalAlpha'] = 0.6, _0x444e67(0x0 + this['rPer'], 0x1, Math['max'](0x0, this['rad'] * 0.9), '#5C4E28'), _0x1d2dab['globalAlpha'] = 0.7, _0x444e67(0x0 - this['rPer'], 0x1, Math['max'](0x0, this['rad'] * 0.8), '#40371D'), _0x1d2dab['globalAlpha'] = 0.9, _0x444e67(0x0 - this['rPer'], 0x1, Math['max'](0x0, this['rad'] * 0.8), '#40371D'), _0x1d2dab['globalAlpha'] = 0.5, _0x444e67(0x0 - this['rPer'] * 0x3, 0x1, Math['max'](0x0, this['rad'] * 0.5), 'black'), _0x1d2dab['globalAlpha'] = 0x1, _0x444e67(0x0 - this['rPer'] * 0x3, 0x1, Math['max'](0x0, this['rad'] * 0.3), _0x3ada2a)) : (this['drawOutlinedCircle']('', '#9F8641'), _0x444e67(0x0 - this['rPer'], 0x0 - this['rPer'], Math['max'](0x0, this['rad'] - 0x7), '#7E6A35'), _0x444e67(0x0 + this['rPer'], 0x1, Math['max'](0x0, this['rad'] - 0xe), '#5C4E28'), _0x444e67(0x0 - this['rPer'] * 0x2 - 0x3, 0x1, Math['max'](0x0, this['rad'] - 18.5), '#40371D')), _0x1d2dab['restore']();
};

function _0x266d52() {
_0x266d52['superClass']['call'](this, _0x2f5713), this['webTransparency'] = 0x0, this['doesDrawEffectScale'] = !![], this['drawEffectScale_Slow'] = !![];
}
window['SinkHole'] = _0x266d52, _0x13dc56['setCustomClassForGameObjType'](_0x266d52, _0x2e7652);
var _0x1e3c43 = _0x131218;
_0x21cb3c['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x21cb3c['prototype']['constructor'] = _0x21cb3c, _0x21cb3c['superClass'] = _0x1e3c43, _0x21cb3c['prototype']['mommyID'] = 0x0, _0x21cb3c['prototype']['updateZ'] = function () {
this['z'] = -0x99;
}, _0x21cb3c['prototype']['isEdibleOutlined'] = function () {
if (this['mommyID'] == _0x2fc9ba) return ![];
var _0x48154b = _0x233b7c['superClass']['prototype']['isEdibleOutlined']['call'](this);
return _0x48154b;
}, _0x21cb3c['prototype']['customDraw'] = function (_0x371a02) {
_0x1d2dab['save']();
var _0x529dbf = this['getSkinImageObj']('skins/land/ostrich/' + this['speciesType'] + '/ostrichEgg' + (this['isEdibleOutlined']() ? 'edible' : '') + '.png');
if (_0x529dbf) {
    var _0x332ed3 = this['rad'];
    _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x529dbf, -_0x332ed3, -_0x332ed3, 0x2 * _0x332ed3, 0x2 * _0x332ed3);
}
_0x1d2dab['restore']();
}, _0x21cb3c['prototype']['getSkinImageObj'] = function (_0xfeebcc) {
var _0x284602 = this['speciesType'] === 0x1 || this['speciesType'] === 0x2 || this['speciesType'] === 0xcc ? 0x1 : this['mopeSeasonID'];
return this['getSkinImageObjForSeason'](_0xfeebcc, _0x284602);
}, _0x21cb3c['prototype']['readCustomData_onNewlyVisible'] = function (_0x4a9863) {
_0x21cb3c['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x4a9863), this['mommyID'] = _0x4a9863['readUInt32'](), this['speciesType'] = _0x4a9863['readUInt8']();
};

function _0x21cb3c() {
_0x21cb3c['superClass']['call'](this, _0x135bec), this['doesDrawEffectScale'] = !![];
}
window['OstrichEgg'] = _0x21cb3c, _0x13dc56['setCustomClassForGameObjType'](_0x21cb3c, _0x135bec);
var _0x2d5c07 = _0x2d5c07,
_0x1e3c43 = _0x3d6c08;
_0x2d5c07['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x2d5c07['prototype']['constructor'] = _0x2d5c07, _0x2d5c07['superClass'] = _0x1e3c43, _0x2d5c07['prototype']['drawNickName'] = function (_0x14c272) {
(this['flag_usingAbility'] && this['flag_flying'] || !this['flag_usingAbility'] || _0xefeaf8['mode'] == _0x347b40) && _0x2d5c07['superClass']['prototype']['drawNickName']['call'](this, _0x14c272);
}, _0x2d5c07['prototype']['animalInfo'] = function () {
var _0x33192c = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x33192c['aniName'] = 'Macaw';
    break;
case 0x1:
    _0x33192c['aniName'] = 'Blue Macaw';
    break;
case 0x2:
    _0x33192c['aniName'] = 'Pakistan Macaw';
    break;
}
return _0x33192c['aniCol'] = '#FF9000', _0x33192c['skinName'] = this['getSpeciesPath']('macaw') + '/macaw', _0x33192c['upgradeText'] = 'UPGRADED to ' + (this['animalSpecies'] == 0x2 ? 'Rare ' : '') + _0x33192c['aniName'] + '!\x0aHold W to fly around.\x0a(Hint: Use ability on hills to mimic animals) ', _0x33192c;
}, _0x2d5c07['prototype']['getSkinName'] = function () {
var _0x10f944 = this['getSpeciesPath']('macaw') + '/macaw';
return _0x10f944 += this['specType'] == 0x0 ? '' : this['specType'], _0x10f944;
}, _0x2d5c07['prototype']['getSpeciesPath'] = function (_0x30a5b6) {
return 'land/' + _0x30a5b6 + '/' + this['animalSpecies'];
}, _0x2d5c07['prototype']['getWing'] = function (_0x88c12d, _0x4e1628, _0x53cd26) {
var _0x1008a3 = 'skins/' + (_0x53cd26 ? this['getSpeciesPath'](_0x88c12d) + '/' : _0x88c12d + '/');
return _0x1008a3 += _0x88c12d + '_wing' + _0x4e1628 + '.png', _0x1008a3;
}, _0x2d5c07['prototype']['getHead'] = function (_0x5b0c59, _0xc1fa9a) {
var _0x52cc5d = 'skins/' + (_0xc1fa9a ? this['getSpeciesPath'](_0x5b0c59) + '/' : _0x5b0c59 + '/');
return _0x52cc5d += _0x5b0c59 + '_head.png', _0x52cc5d;
}, _0x2d5c07['prototype']['getAniRadius'] = function (_0x1fe90b) {
if (this['flag_usingDiveAbility']) return _0x1fe90b * 0.7;
return this['flag_flying'] ? _0x1fe90b * 0.9 : _0x1fe90b;
}, _0x2d5c07['prototype']['basicDrawSkinImg'] = function () {
if (this['flag_usingAbility']) {
    if (!this['flag_flying'] && this['octoDrawObj'] != null) return;
}
_0x2d5c07['superClass']['prototype']['basicDrawSkinImg']['call'](this);
if (this['skinThemeID'] != 0x0) return;
var _0x138aa8 = 0.05,
    _0x34be72 = -0.08,
    _0x54dcf8 = 1.1;
this['setSkinScale']();
var _0x19ad46 = this['getAniRadius'](this['skinRad'] - this['outlineW']),
    _0x1d0d24 = 0x1f4 / 0x154;
if (this['loadedSkinImg']) {
    _0x1d2dab['drawImage'](this['loadedSkinImg'], -_0x19ad46 * _0x1d0d24, -_0x19ad46 * _0x1d0d24, 0x2 * _0x19ad46 * _0x1d0d24, 0x2 * _0x19ad46 * _0x1d0d24);
    if (this['flag_flying'] || !this['flag_usingAbility']) {
        var _0x4f9258 = 'skins/' + this['getSpeciesPath']('macaw') + '/tail.png',
            _0x5cf18a = this['getSkinImageObj'](_0x4f9258),
            _0x297315 = this['skinScale'];
        if (_0x5cf18a) {
            _0x1d2dab['save']();
            var _0x19ad46 = this['rad'] - this['outlineW'];
            _0x1d2dab['drawImage'](_0x5cf18a, -_0x19ad46 * _0x54dcf8 * _0x297315, (-_0x19ad46 + _0x19ad46 * _0x34be72) * _0x54dcf8 * _0x297315, 0x2 * _0x19ad46 * _0x54dcf8 * _0x297315, 0x2 * _0x19ad46 * _0x54dcf8 * _0x297315), _0x1d2dab['restore']();
        }
    }
    if (!this['flag_usingAbility']) {
        var _0x139c6c = this['getSkinImageObj']('skins/' + this['getSpeciesPath']('macaw') + '/top.png');
        _0x139c6c && _0x1d2dab['drawImage'](_0x139c6c, -_0x19ad46 * _0x1d0d24, (-_0x19ad46 + _0x19ad46 * _0x138aa8) * _0x1d0d24, 0x2 * _0x19ad46 * _0x1d0d24, 0x2 * _0x19ad46 * _0x1d0d24);
    }
}
};
var _0x1bf849 = 1.7,
_0x203639 = 2.2;
_0x2d5c07['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) return;
var _0x3236d6 = this['getAniRadius'](this['skinRad'] - this['outlineW']),
    _0x4ca07c = _0x3236d6 * 0.8;
if (this['flag_flying']) {
    var _0x32f2a9 = 0x1f4 / 0x154;
    if (this['flag_flying'] && !this['flag_isGrabbed']) {
        _0x1d2dab['save']();
        let _0x5a2a2e = _0x1170c4('bird', this['spawnTime']);
        _0x5a2a2e !== undefined && _0x5a2a2e != null && (this['theFrame'] = _0x5a2a2e);
        let _0xa16bf1 = !(_0x31f3fc == 0x2 || _0x44408d) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'];
        var _0x35cb10 = this['getSkinImageObj'](this['getWing']('macaw', 0x1, !![]));
        if (_0x35cb10) {
            _0x1d2dab['save']();
            var _0x15a6ec = -(-0.2 + _0xa16bf1) * _0xa0b20a;
            _0x1d2dab['rotate'](_0x42e6da + _0x15a6ec);
            var _0x30cf28 = 0x0,
                _0x5c4661 = _0x4ca07c,
                _0x483226 = _0x4ca07c * 0x2 * 0.62,
                _0x2bb458 = _0x4ca07c * _0x203639,
                _0x258cf2 = 0.2,
                _0xc562e2 = _0x1bf849;
            _0x1d2dab['drawImage'](_0x35cb10, _0x30cf28 + _0x483226 * -_0x258cf2, _0x5c4661 + _0x2bb458 * -_0xc562e2, _0x483226, _0x2bb458), _0x1d2dab['restore']();
        }
        var _0x35cb10 = this['getSkinImageObj'](this['getWing']('macaw', 0x2, !![]));
        if (_0x35cb10) {
            _0x1d2dab['save']();
            var _0x15a6ec = -(-0.2 + _0xa16bf1) * -_0xa0b20a;
            _0x1d2dab['rotate'](-_0x42e6da + _0x15a6ec);
            var _0x30cf28 = 0x0,
                _0x5c4661 = _0x4ca07c,
                _0x483226 = _0x4ca07c * 0x2 * 0.62,
                _0x2bb458 = _0x4ca07c * _0x203639,
                _0x258cf2 = 0.8,
                _0xc562e2 = _0x1bf849;
            _0x1d2dab['drawImage'](_0x35cb10, _0x30cf28 + _0x483226 * -_0x258cf2, _0x5c4661 + _0x2bb458 * -_0xc562e2, _0x483226, _0x2bb458), _0x1d2dab['restore']();
        }
        _0x1d2dab['restore']();
    }
    if (this['specType'] != 0x0 && this['specType'] != undefined) {
        var _0x5492c0 = this['getSkinImageObj'](this['getHead']('macaw', !![]));
        if (_0x5492c0) {
            _0x1d2dab['save']();
            var _0x3236d6 = this['rad'];
            _0x1d2dab['drawImage'](_0x5492c0, -_0x3236d6 * _0x32f2a9, (-_0x3236d6 + _0x3236d6 * 0.2) * _0x32f2a9, 0x2 * _0x3236d6 * _0x32f2a9, 0x2 * _0x3236d6 * _0x32f2a9), _0x1d2dab['restore']();
        }
    }
}
}, _0x2d5c07['prototype']['readCustomData_onNewlyVisible'] = function (_0xd426a4) {
_0x2d5c07['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0xd426a4), this['customUpdatedProperty'](_0x4df3a0, _0xd426a4);
}, _0x2d5c07['prototype']['customUpdatedProperty'] = function (_0x28d0be, _0xbc4925) {
if (_0x28d0be == _0x4df3a0) {
    var _0x51e681 = _0xbc4925['readUInt8']() == 0x1;
    if (_0x51e681) {
        var _0x1b5d2c = _0xbc4925['readUInt16'](),
            _0x32d236 = _0xbc4925['readUInt16']();
        this['createDisguiseAniObj'](_0x1b5d2c, _0x32d236);
    } else this['octoDrawObj'] = null;
}
}, _0x2d5c07['prototype']['createDisguiseAniObj'] = function (_0x5bd1d5, _0x295c32) {
if (this['octoDrawObj'] == null) {
    var _0x51187d = _0x13dc56['createGameObjOfOType'](_0x4ad968, _0x5bd1d5);
    _0x51187d['animalType'] = _0x5bd1d5, _0x51187d['animalSpecies'] = _0x295c32, _0x51187d['rad'] = _0x51187d['oRad'] = _0x51187d['nRad'] = this['rad'], _0x51187d['curBiome'] = this['curBiome'], _0x51187d['hp'] = 0x5 + Math['random']() * 0x32, this['octoDrawObj'] = _0x51187d;
}
}, _0x2d5c07['prototype']['drawHealthBar'] = function () {
this['flag_usingAbility'] && !this['flag_flying'] && this['octoDrawObj'] != null && (this['octoDrawObj']['curBiome'] = this['curBiome'], this['hpPer_n'] = 0x1, this['hpPer'] = this['octoDrawObj']['hp'], this['hpBarA'] = 0x1);
_0x1d2dab['save']();
var _0xa39cda = _0x740c5b < this['hpBarTimeoutT'] ? 0x1 : 0x0;
this['hpBarA'] += (_0xa39cda - this['hpBarA']) * 0.04;
if (this['hpBarA'] > 0.001) {
    this['hpPer'] += (this['hpPer_n'] - this['hpPer']) * 0.1;
    var _0x457584 = Math['max'](0x1, this['rad'] / 0x19),
        _0x26e71b = 0x14 * _0x457584,
        _0x37d5dd = 0x5 * _0x457584,
        _0x1a84cd = 0x0,
        _0x55f47a = -this['rad'] - 0xa * _0x457584;
    _0x1d2dab['globalAlpha'] *= this['hpBarA'], _0x1d2dab['fillStyle'] = 'rgba(0,0,0,0.35)', _0x1d2dab['fillRect'](_0x1a84cd - _0x26e71b / 0x2, _0x55f47a - _0x37d5dd / 0x2, _0x26e71b, _0x37d5dd), _0x1d2dab['fillStyle'] = '#16D729';
    var _0x433469 = _0x26e71b * (this['hpPer'] / 0x64);
    if (this['flag_usingAbility'] && this['octoIsAnimal']) _0x433469 = _0x26e71b * (0x19 / 0x64);
    _0x1d2dab['fillRect'](_0x1a84cd - _0x26e71b / 0x2, _0x55f47a - _0x37d5dd / 0x2, _0x433469, _0x37d5dd);
}
_0x1d2dab['restore']();
}, _0x2d5c07['prototype']['drawOnTopOfSkinImg'] = function () {
_0x2d5c07['superClass']['prototype']['drawOnTopOfSkinImg']['call'](this), this['flag_usingAbility'] && !this['flag_flying'] && (this['octoDrawObj'] != null && (_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1, this['octoDrawObj']['mopeSeasonID'] = this['mopeSeasonID'], this['octoDrawObj']['rad'] = this['rad'], this['octoDrawObj']['draw'](), _0x1d2dab['restore']()));
};

function _0x2d5c07() {
_0x2d5c07['superClass']['call'](this, _0x4ad968);
}
window['Macaw'] = _0x2d5c07, _0x13dc56['setCustomClassForGameObjType'](_0x2d5c07, _0x4ad968, _0x229b87);
var _0x4c8b0b = _0x4c8b0b,
_0x1e3c43 = _0x3d6c08;
_0x4c8b0b['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x4c8b0b['prototype']['constructor'] = _0x4c8b0b, _0x4c8b0b['superClass'] = _0x1e3c43, _0x4c8b0b['prototype']['getSkinName'] = function () {
var _0x3cae73 = this['getSpeciesPath']('flamingo') + '/flamingo';
return _0x3cae73 += this['specType'] == 0x0 ? '' : this['specType'], _0x3cae73;
}, _0x4c8b0b['prototype']['animalInfo'] = function () {
var _0x35f1c1 = {};
_0x35f1c1['aniName'] = 'Flamingo';
switch (this['animalSpecies']) {
case 0xca:
    _0x35f1c1['aniName'] = 'Fly Mango';
    break;
}
return _0x35f1c1['aniCol'] = '#FF9000', _0x35f1c1['skinName'] = this['getSpeciesPath']('flamingo') + '/flamingo', _0x35f1c1['upgradeText'] = 'UPGRADED to ' + _0x35f1c1['aniName'] + '!\x0aHold W in water to search for food underwater.\x0a(Tip: Any nearby underwater animals will get surfaced by the flamingo!)', _0x35f1c1;
}, _0x4c8b0b['prototype']['getSpeciesPath'] = function (_0xa0680c) {
return 'ocean/' + _0xa0680c + '/' + this['animalSpecies'];
}, _0x4c8b0b['prototype']['getWing'] = function (_0x40dedb, _0x38b97d, _0x389b18) {
var _0x1c90cb = 'skins/' + this['getSpeciesPath'](_0x40dedb) + (_0x389b18 ? '/pink' : '') + '/';
return _0x1c90cb += _0x40dedb + '_wing' + _0x38b97d + '.png', _0x1c90cb;
}, _0x4c8b0b['prototype']['getHead'] = function (_0x57a28d, _0x70ee56) {
var _0x1a1a3b = 'skins/' + this['getSpeciesPath'](_0x57a28d) + (_0x70ee56 ? '/pink' : '') + '/';
return _0x1a1a3b += _0x57a28d + '_head.png', _0x1a1a3b;
}, _0x4c8b0b['prototype']['getAbilityInfo'] = function (_0x4da7d1) {
var _0x5df102 = {};
return _0x5df102['abilName'] = 'HOLD in water\x0a(find food)', _0x5df102['abilImg'] = this['flag_isClimbingHill'] || this['flag_flying'] ? 'abilities/Fly.svg' : 'abilities/Dive.svg', _0x5df102['skinThemeID'] = this['skinThemeID'], _0x5df102['mopeSeasonID'] = this['mopeSeasonID'], _0x5df102;
}, _0x4c8b0b['prototype']['basicDrawSkinImg'] = function () {
_0x4c8b0b['superClass']['prototype']['basicDrawSkinImg']['call'](this);
if (!this['flag_underWater'] && this['id'] > 0x0) {
    var _0x10032a = this['skinScale'],
        _0x971650 = this['skinRad'],
        _0x3a1021 = 'skins/' + this['getSpeciesPath']('flamingo') + '/pink/flamingo';
    _0x3a1021 += this['specType'] == 0x0 ? '' : this['specType'];
    var _0x166060 = this['getSkinImageObj'](_0x3a1021 + '.png');
    _0x166060 && (_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = this['colorPerc'], _0x1d2dab['drawImage'](_0x166060, -_0x971650 * _0x10032a, -_0x971650 * _0x10032a, 0x2 * _0x971650 * _0x10032a, 0x2 * _0x971650 * _0x10032a), _0x1d2dab['restore']());
}
}, _0x4c8b0b['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) return;
var _0x17687f = 0x1f4 / 0x154;
_0x1d2dab['save']();
var _0x4eec74 = this['flag_flying'] ? 0x2d : 0x2f,
    _0x58f17a = this['flag_flying'] ? 0x5a : 0x2d,
    _0x496e0a = this['flag_flying'] ? 0.2 : 0.01,
    _0x3d4af5 = this['flag_flying'] ? 2.5 : 0x2,
    _0xbb88f1 = this['flag_flying'] ? 0x2 : 2.5,
    _0xd92951 = this['flag_flying'] ? 0.5 : 1.2,
    _0x5c9fea = (_0x740c5b - this['spawnTime']) / 0x3e8;
if (this['flag_flying']) {
    var _0x52be68 = _0x1170c4('bird', this['spawnTime']);
    _0x52be68 !== undefined && _0x52be68 != null && (this['theFrame'] = _0x52be68);
} else this['theFrame'] = !(_0x31f3fc == 0x2 || _0x44408d) ? _0x21d673(_0x5c9fea, _0xd92951, 0.3, 0x2) : this['birdNoAnimationFlyWingAngle'];
var _0x552db4 = this['theFrame'],
    _0x5db52e = this['getSkinImageObj'](this['getWing']('flamingo', 0x1, ![]));
if (_0x5db52e) {
    _0x1d2dab['save']();
    var _0x43dd01 = -(-_0x496e0a + _0x552db4) * _0x2bcbaa(_0x58f17a),
        _0x3a37fa = this['rad'] * 0.8;
    _0x1d2dab['rotate'](_0x2bcbaa(_0x4eec74) + _0x43dd01);
    var _0x406a7e = 0x0,
        _0x5355c1 = this['rad'],
        _0x50fe70 = _0x3a37fa * _0xbb88f1 * 0.62,
        _0x1d16ee = _0x3a37fa * _0x3d4af5,
        _0x47d2c4 = 0.2,
        _0x17dcb0 = 1.7;
    _0x1d2dab['drawImage'](_0x5db52e, _0x406a7e + _0x50fe70 * -_0x47d2c4, _0x5355c1 + _0x1d16ee * -_0x17dcb0, _0x50fe70, _0x1d16ee), _0x1d2dab['restore']();
}
var _0x5db52e = this['getSkinImageObj'](this['getWing']('flamingo', 0x2, ![]));
if (_0x5db52e) {
    _0x1d2dab['save']();
    var _0x43dd01 = -(-_0x496e0a + _0x552db4) * _0x2bcbaa(-_0x58f17a),
        _0x3a37fa = this['rad'] * 0.8;
    _0x1d2dab['rotate'](_0x2bcbaa(-_0x4eec74) + _0x43dd01);
    var _0x406a7e = 0x0,
        _0x5355c1 = this['rad'],
        _0x50fe70 = _0x3a37fa * _0xbb88f1 * 0.62,
        _0x1d16ee = _0x3a37fa * _0x3d4af5,
        _0x47d2c4 = 0.8,
        _0x17dcb0 = 1.7;
    _0x1d2dab['drawImage'](_0x5db52e, _0x406a7e + _0x50fe70 * -_0x47d2c4, _0x5355c1 + _0x1d16ee * -_0x17dcb0, _0x50fe70, _0x1d16ee), _0x1d2dab['restore']();
}
_0x1d2dab['restore']();
if (this['specType'] == 0x1) {
    var _0x174256 = this['getSkinImageObj'](this['getHead']('flamingo', ![]));
    if (_0x174256) {
        _0x1d2dab['save']();
        var _0x3a37fa = this['rad'];
        _0x1d2dab['drawImage'](_0x174256, -_0x3a37fa * _0x17687f, (-_0x3a37fa + _0x3a37fa * 0.1) * _0x17687f, 0x2 * _0x3a37fa * _0x17687f, 0x2 * _0x3a37fa * _0x17687f), _0x1d2dab['restore']();
    }
}
}, _0x4c8b0b['prototype']['drawUnderSkinImgOutline'] = function () {
_0x4c8b0b['superClass']['prototype']['drawUnderSkinImgOutline']['call'](this);
if (this['flag_usingAbility'] && !this['flag_flying']) {
    var _0x46f90b = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x2005d3 = 1.5,
        _0x46aefe = 0.5,
        _0x54c950 = _0x46aefe * Math['sin'](0x2 * Math['PI'] / _0x2005d3 * _0x46f90b);
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] *= 0.8, _0x444e67(0x0, this['rad'] * (0.9 + 0.12 * _0x54c950), this['rad'] * 0.3, '#2c84ff'), _0x444e67(0x0, -this['rad'] * 0.3, this['rad'] * (1.05 + 0.09 * _0x54c950), '#4668ff'), _0x1d2dab['restore'](), _0x1d2dab['save']();
    var _0x41622d = '#4E71C3';
    _0x1d2dab['globalAlpha'] = 0x1, _0x1d2dab['fillStyle'] = _0x41622d;
    var _0x1d0542 = this['rad'] * 0.1;
    _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * -0.3, this['rad'] * 1.2, Math['max'](0x0, _0x1d0542 + _0x54c950), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.2, this['rad'] * 1.5, Math['max'](0x0, _0x1d0542 - _0x54c950), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.3, this['rad'] * 1.2, Math['max'](0x0, _0x1d0542 + _0x54c950), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * -0.2, this['rad'] * 1.5, Math['max'](0x0, _0x1d0542 - _0x54c950), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['restore']();
}
}, _0x4c8b0b['prototype']['readCustomData_onNewlyVisible'] = function (_0x4acb9a) {
_0x4c8b0b['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x4acb9a);
var _0x2d2a71 = _0x4acb9a['readUInt8']();
this['colorPerc'] = _0x2d2a71 / 0x64;
}, _0x4c8b0b['prototype']['customUpdatedProperty'] = function (_0x36a208, _0x342c5d) {
if (_0x36a208 == _0xe02608) {
    var _0x16980c = _0x342c5d['readUInt8']();
    this['colorPerc'] = _0x16980c / 0x64;
}
};

function _0x4c8b0b() {
_0x4c8b0b['superClass']['call'](this, _0x4ad968);
}
window['Flamingo'] = _0x4c8b0b, _0x13dc56['setCustomClassForGameObjType'](_0x4c8b0b, _0x4ad968, _0x220080);
var _0x1e3c43 = _0x3d6c08;
_0xa8986b['prototype'] = Object['create'](_0x1e3c43['prototype']), _0xa8986b['prototype']['constructor'] = _0xa8986b, _0xa8986b['superClass'] = _0x1e3c43, _0xa8986b['prototype']['getSkinName'] = function () {
let _0x26f202 = this['getSpeciesPath']() + '/cassowary';
return _0x26f202 += this['specType'] == 0x0 ? '' : this['specType'], _0x26f202;
}, _0xa8986b['prototype']['getSpeciesPath'] = function () {
return 'land/cassowary/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0xa8986b['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0xa8986b['prototype']['getAbilityInfo'] = function (_0x68f3e8) {
var _0x28b57f = {};
return _0x28b57f['abilName'] = 'Front Kick\x0a(Hold to Charge)', _0x28b57f['abilImg'] = 'abilities/Kick.svg', _0x28b57f['skinThemeID'] = this['skinThemeID'], _0x28b57f['mopeSeasonID'] = this['mopeSeasonID'], _0x28b57f;
}, _0xa8986b['prototype']['animalInfo'] = function () {
var _0x542764 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x542764['aniName'] = 'Cassowary!';
    break;
case 0x1:
    _0x542764['aniName'] = 'Golden Cassowary!';
    break;
case 0x2:
    _0x542764['aniName'] = 'Cotton Cassowary!';
    break;
case 0xca:
    _0x542764['aniName'] = 'Pastel Cassowary';
    break;
case 0xcc:
    _0x542764['aniName'] = 'Basilisk Cassowary!';
    break;
}
return _0x542764['aniCol'] = '#FF9000', _0x542764['skinName'] = this['getSkinName'](), _0x542764['upgradeText'] = 'UPGRADED to ' + _0x542764['aniName'] + '!\x0aHold W to charge up a kick, the longer you hold, the more powerful it is!', _0x542764;
};

function _0xa8986b() {
_0xa8986b['superClass']['call'](this, _0x4ad968);
}
window['Cassowary'] = _0xa8986b, _0x13dc56['setCustomClassForGameObjType'](_0xa8986b, _0x4ad968, _0x588f38);
var _0x1e3c43 = _0x3d6c08;
_0x47b586['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x47b586['prototype']['constructor'] = _0x47b586, _0x47b586['superClass'] = _0x1e3c43, _0x47b586['prototype']['getSkinName'] = function () {
var _0x47fd7e = 'land/chicken/' + this['animalSpecies'] + '/chicken';
return _0x47fd7e += this['specType'] == 0x0 ? '' : this['specType'], _0x47fd7e;
}, _0x47b586['prototype']['animalInfo'] = function () {
var _0x20e1d8 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x20e1d8['aniName'] = 'Chicken';
    break;
case 0xc9:
    _0x20e1d8['aniName'] = 'Countryside Chick';
    break;
case 0xca:
    _0x20e1d8['aniName'] = 'Lightning Lord';
    break;
}
return _0x20e1d8['aniCol'] = '#FF9000', _0x20e1d8['skinName'] = 'land/chicken/' + this['animalSpecies'] + '/chicken', _0x20e1d8['upgradeText'] = 'UPGRADED to ' + _0x20e1d8['aniName'] + '!', _0x20e1d8;
}, _0x47b586['prototype']['getWing'] = function (_0x225fa5, _0x254251, _0x4e7289) {
var _0x4eb1cf = 'skins/land/' + (_0x4e7289 ? this['getSpeciesPath'](_0x225fa5) + '/' : _0x225fa5 + '/');
return _0x4eb1cf += _0x225fa5 + '_wing' + _0x254251 + '.png', _0x4eb1cf;
}, _0x47b586['prototype']['getHead'] = function (_0x54eb61, _0x43b73d) {
var _0x41dfb5 = 'skins/land/' + (_0x43b73d ? this['getSpeciesPath'](_0x54eb61) + '/' : _0x54eb61 + '/');
return _0x41dfb5 += _0x54eb61 + '_head.png', _0x41dfb5;
}, _0x47b586['prototype']['getAbilityInfo'] = function (_0x50087b) {
var _0xff9248 = {};
return _0xff9248['abilName'] = 'Run!', _0xff9248['abilImg'] = 'abilities/Dash-Boost.svg', _0xff9248['skinThemeID'] = this['skinThemeID'], _0xff9248['mopeSeasonID'] = this['mopeSeasonID'], _0xff9248;
}, _0x47b586['prototype']['drawSkinCustomization'] = function () {
var _0x56046e = 0x1f4 / 0x154;
if (this['flag_usingAbility']) {
    _0x1d2dab['save']();
    var _0x3fdbcb = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x5ecebb = _0x21d673(_0x3fdbcb, 0.3, 0x1, 0x2),
        _0x52b871 = this['getSkinImageObj'](this['getWing']('chicken', 0x1, !![]));
    if (_0x52b871) {
        _0x1d2dab['save']();
        var _0x43db22 = -(-0.2 + _0x5ecebb) * _0x2bcbaa(0xf),
            _0x4674e9 = this['rad'] * 0.8;
        _0x1d2dab['rotate'](_0x2bcbaa(0xf) + _0x43db22);
        var _0x298e9a = 0x0,
            _0x47ecfa = this['rad'],
            _0x5719d4 = _0x4674e9 * 0x2 * 0.7,
            _0x2d9b29 = _0x4674e9 * 2.2,
            _0x56f9ac = 0x0,
            _0x55f472 = 1.5;
        _0x1d2dab['drawImage'](_0x52b871, _0x298e9a + _0x5719d4 * -_0x56f9ac, _0x47ecfa + _0x2d9b29 * -_0x55f472, _0x5719d4, _0x2d9b29), _0x1d2dab['restore']();
    }
    var _0x52b871 = this['getSkinImageObj'](this['getWing']('chicken', 0x2, !![]));
    if (_0x52b871) {
        _0x1d2dab['save']();
        var _0x43db22 = -(-0.2 + _0x5ecebb) * _0x2bcbaa(-0xf),
            _0x4674e9 = this['rad'] * 0.8;
        _0x1d2dab['rotate'](_0x2bcbaa(-0xf) + _0x43db22);
        var _0x298e9a = 0x0,
            _0x47ecfa = this['rad'],
            _0x5719d4 = _0x4674e9 * 0x2 * 0.7,
            _0x2d9b29 = _0x4674e9 * 2.2,
            _0x56f9ac = 0x1,
            _0x55f472 = 1.5;
        _0x1d2dab['drawImage'](_0x52b871, _0x298e9a + _0x5719d4 * -_0x56f9ac, _0x47ecfa + _0x2d9b29 * -_0x55f472, _0x5719d4, _0x2d9b29), _0x1d2dab['restore']();
    }
    var _0x52f1dd = this['getSkinImageObj'](this['getHead']('chicken', !![]));
    if (_0x52f1dd) {
        _0x1d2dab['save']();
        var _0x4674e9 = this['rad'] * 0x1,
            _0x3c095c = -this['rad'] * 0.1;
        _0x1d2dab['drawImage'](_0x52f1dd, -_0x4674e9 * _0x56046e, -_0x4674e9 + _0x3c095c * _0x56046e, 0x2 * _0x4674e9 * _0x56046e, 0x2 * _0x4674e9 * _0x56046e), _0x1d2dab['restore']();
    }
    _0x1d2dab['restore']();
}
};

function _0x47b586() {
_0x47b586['superClass']['call'](this, _0x4ad968);
}
window['Chicken'] = _0x47b586, _0x13dc56['setCustomClassForGameObjType'](_0x47b586, _0x4ad968, _0x19475c);
var _0x344054 = _0x344054,
_0x1e3c43 = _0x3d6c08;
_0x344054['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x344054['prototype']['constructor'] = _0x344054, _0x344054['superClass'] = _0x1e3c43, _0x344054['prototype']['animalInfo'] = function () {
var _0x2f7d5c = {};
_0x2f7d5c['aniName'] = 'Woodpecker';
switch (this['animalSpecies']) {
case 0xca:
    _0x2f7d5c['aniName'] = 'Jackhammer';
    break;
}
return _0x2f7d5c['aniCol'] = '#FF9000', _0x2f7d5c['skinName'] = this['getSpeciesPath']('woodpecker') + '/woodpecker', _0x2f7d5c['upgradeText'] = 'UPGRADED to ' + _0x2f7d5c['aniName'] + '!\x0aHold W to Peck other animals,\x0a or (Hint: Use ability on hills to fly)', _0x2f7d5c;
}, _0x344054['prototype']['getSpeciesPath'] = function (_0x3fae39) {
return 'land/' + _0x3fae39 + '/' + this['animalSpecies'];
}, _0x344054['prototype']['getSkinName'] = function () {
var _0x542037 = this['getSpeciesPath']('woodpecker') + '/woodpecker';
return _0x542037 += this['specType'] == 0x0 ? '' : this['specType'], _0x542037;
}, _0x344054['prototype']['getHead'] = function (_0x45d7c0, _0x184bc5) {
var _0x55e689 = 'skins/' + (_0x184bc5 ? this['getSpeciesPath'](_0x45d7c0) + '/' : _0x45d7c0 + '/');
return _0x55e689 += _0x45d7c0 + '_head' + (!this['flag_flying'] && this['flag_usingAbility'] ? '1' : '') + '.png', _0x55e689;
}, _0x344054['prototype']['getAbilityInfo'] = function (_0x13bde6) {
var _0x192a08 = {};
return _0x192a08['abilName'] = 'HOLD to Peck\x0a/ Fly', _0x192a08['abilImg'] = 'abilities/Peck.svg', _0x192a08['skinThemeID'] = this['skinThemeID'], _0x192a08['mopeSeasonID'] = this['mopeSeasonID'], _0x192a08;
}, _0x344054['prototype']['getAniRadius'] = function (_0x50aea4) {
if (this['flag_usingAbility'] && this['flag_flying']) return _0x50aea4 * 0.8;
return _0x50aea4;
}, _0x344054['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) return;
var _0xe2a60a = 'skins'; {
    var _0x544fcb = 0x1f4 / 0x154;
    _0x1d2dab['save']();
    var _0x3c8a4f = this['flag_flying'] ? 0x2d : 0x2f,
        _0x6629c = this['flag_flying'] ? 0x5a : 0x2d,
        _0x513c1d = this['flag_flying'] ? 0.2 : 0.01,
        _0x210114 = this['flag_flying'] ? 2.5 : 0x2,
        _0x2bb1de = this['flag_flying'] ? 2.2 : 2.5,
        _0x40939d = this['flag_flying'] ? 0.5 : 0.3,
        _0x21bdae = 0.3,
        _0x36ecb1 = (_0x740c5b - this['spawnTime']) / 0x3e8;
    if (this['flag_flying']) {
        var _0x3dd4b0 = _0x1170c4('bird', this['spawnTime']);
        _0x3dd4b0 !== undefined && _0x3dd4b0 != null && (this['theFrame'] = _0x3dd4b0);
    } else this['theFrame'] = !(_0x31f3fc == 0x2 || _0x44408d) ? _0x21d673(_0x36ecb1, _0x40939d, _0x21bdae, 0x2) : this['birdNoAnimationFlyWingAngle'];
    var _0x344def = this['theFrame'],
        _0x253010 = this['getSkinImageObj'](this['getWing']('woodpecker', 0x1, !![]));
    if (_0x253010) {
        _0x1d2dab['save']();
        var _0xf4c33e = -(-_0x513c1d + _0x344def) * _0x2bcbaa(_0x6629c),
            _0x3be3a4 = this['rad'] * 0.8;
        _0x1d2dab['rotate'](_0x2bcbaa(_0x3c8a4f) + _0xf4c33e);
        var _0x336652 = 0x0,
            _0x17c393 = this['rad'],
            _0x181262 = _0x3be3a4 * _0x2bb1de * 0.62,
            _0x319d34 = _0x3be3a4 * _0x210114,
            _0x3b63b4 = 0.2,
            _0x2c64b7 = 1.7;
        _0x1d2dab['drawImage'](_0x253010, _0x336652 + _0x181262 * -_0x3b63b4, _0x17c393 + _0x319d34 * -_0x2c64b7, _0x181262, _0x319d34), _0x1d2dab['restore']();
    }
    var _0x253010 = this['getSkinImageObj'](this['getWing']('woodpecker', 0x2, !![]));
    if (_0x253010) {
        _0x1d2dab['save']();
        var _0xf4c33e = -(-_0x513c1d + _0x344def) * _0x2bcbaa(-_0x6629c),
            _0x3be3a4 = this['rad'] * 0.8;
        _0x1d2dab['rotate'](_0x2bcbaa(-_0x3c8a4f) + _0xf4c33e);
        var _0x336652 = 0x0,
            _0x17c393 = this['rad'],
            _0x181262 = _0x3be3a4 * _0x2bb1de * 0.62,
            _0x319d34 = _0x3be3a4 * _0x210114,
            _0x3b63b4 = 0.8,
            _0x2c64b7 = 1.7;
        _0x1d2dab['drawImage'](_0x253010, _0x336652 + _0x181262 * -_0x3b63b4, _0x17c393 + _0x319d34 * -_0x2c64b7, _0x181262, _0x319d34), _0x1d2dab['restore']();
    }
    _0x1d2dab['restore']();
    if (this['specType'] != 0x0 && this['specType'] != undefined) {
        var _0x10688b = this['getSkinImageObj'](this['getHead']('woodpecker', !![]));
        if (_0x10688b) {
            _0x344def = 0x0;
            !this['flag_flying'] && (_0x21bdae = 0x3, _0x40939d = 0.18, _0x344def = !(_0x31f3fc == 0x2) ? _0x21d673(_0x36ecb1, _0x40939d, _0x21bdae, 0x2) : this['birdNoAnimationFlyWingAngle']);
            _0x1d2dab['save']();
            var _0x3be3a4 = this['rad'],
                _0x50d557 = !this['flag_flying'] ? (-_0x3be3a4 + _0x3be3a4 * 0.1) * _0x544fcb + _0x344def : -_0x3be3a4;
            _0x1d2dab['drawImage'](_0x10688b, -_0x3be3a4 * _0x544fcb, _0x50d557, 0x2 * _0x3be3a4 * _0x544fcb, 0x2 * _0x3be3a4 * _0x544fcb), _0x1d2dab['restore']();
        }
    }
}
};

function _0x344054() {
_0x344054['superClass']['call'](this, _0x4ad968);
}
window['Woodpecker'] = _0x344054, _0x13dc56['setCustomClassForGameObjType'](_0x344054, _0x4ad968, _0x51f75a);
var _0x4ccf64 = _0x4ccf64,
_0x1e3c43 = _0x3d6c08;
_0x4ccf64['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x4ccf64['prototype']['constructor'] = _0x4ccf64, _0x4ccf64['superClass'] = _0x1e3c43, _0x4ccf64['prototype']['updateZ'] = function () {
if (this['flag_usingAbility']) {
    if (this['flag_flying']) {
        this['z'] = 0x186a0 + this['rad'];
        return;
    }
}
this['z'] = 0x3e8 + this['rad'];
}, _0x4ccf64['prototype']['animalInfo'] = function () {
var _0x2aed00 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x2aed00['aniName'] = 'Peacock';
    break;
case 0xc8:
    _0x2aed00['aniName'] = 'Plague Raptor';
    break;
case 0xca:
    _0x2aed00['aniName'] = 'Spectrum Peacock';
    break;
}
return _0x2aed00['aniCol'] = '#FF9000', _0x2aed00['skinName'] = this['getSpeciesPath']('peacock') + '/peacock', _0x2aed00['upgradeText'] = 'UPGRADED to ' + _0x2aed00['aniName'] + '!\x0aHold W to hypnotize prey: prey gets pulled in, predtors pushed!. \x0aHint:Start the ability on a hill to fly!. ', _0x2aed00;
}, _0x4ccf64['prototype']['getSkinName'] = function () {
var _0x2577fa = this['getSpeciesPath']('peacock') + '/peacock';
return _0x2577fa += this['specType'] == 0x0 ? '' : this['specType'], _0x2577fa;
}, _0x4ccf64['prototype']['getSpeciesPath'] = function (_0x8c4ccb) {
return 'land/' + _0x8c4ccb + '/' + this['animalSpecies'];
}, _0x4ccf64['prototype']['getWing'] = function (_0x495776, _0x35fabf, _0x56d4b8) {
var _0x394daa = 'skins/' + (_0x56d4b8 ? this['getSpeciesPath'](_0x495776) + '/' : _0x495776 + '/');
return _0x394daa += _0x495776 + '_wing' + _0x35fabf + '.png', _0x394daa;
}, _0x4ccf64['prototype']['getHead'] = function (_0x5503bd, _0x301373) {
var _0x1f4140 = 'skins/' + (_0x301373 ? this['getSpeciesPath'](_0x5503bd) + '/' : _0x5503bd + '/');
return _0x1f4140 += _0x5503bd + '_head.png', _0x1f4140;
}, _0x4ccf64['prototype']['getAniRadius'] = function (_0x604a7a) {
if (this['flag_usingAbility'] && this['flag_flying']) return _0x604a7a * 0.9;
return _0x604a7a;
}, _0x4ccf64['prototype']['getSkinImageObj'] = function (_0x23c8ce) {
var _0x50f59b = this['animalSpecies'] === 0xc8 ? 0x1 : this['mopeSeasonID'];
return this['getSkinImageObjForSeason'](_0x23c8ce, _0x50f59b);
}, _0x4ccf64['prototype']['basicDrawSkinImg'] = function () {
this['setSkinScale']();
var _0x413480 = 0.05,
    _0x3614b0 = -0.8,
    _0x5a8035 = this['getAniRadius'](this['skinRad'] - this['outlineW']),
    _0x39e86f = 0x1f4 / 0x154;
if (!this['flag_flying'] && this['flag_usingAbility']) {
    var _0x326460 = -0.55,
        _0x4a797e = 'peacock_ability',
        _0x79fd52 = this['getSkinImageObj']('skins/land/peacock/' + this['animalSpecies'] + '/' + _0x4a797e + '.png'),
        _0x2a750f = this['skinScale'] + (this['flag_usingAbility'] && !this['flag_flying'] ? 0x1 : 0x0);
    _0x79fd52 && (_0x1d2dab['save'](), _0x1d2dab['drawImage'](_0x79fd52, -_0x5a8035 * _0x2a750f, (-_0x5a8035 + _0x5a8035 * _0x326460) * _0x2a750f, 0x2 * _0x5a8035 * _0x2a750f, 0x2 * _0x5a8035 * _0x2a750f), _0x1d2dab['restore']());
}
if (this['loadedSkinImg']) {
    var _0x45dc39 = this['flag_usingAbility'] && !this['flag_flying'] ? this['skinScale'] * 1.1 : _0x39e86f;
    _0x1d2dab['drawImage'](this['loadedSkinImg'], -_0x5a8035 * _0x45dc39, (-_0x5a8035 + _0x5a8035 * _0x413480) * _0x45dc39, 0x2 * _0x5a8035 * _0x45dc39, 0x2 * _0x5a8035 * _0x45dc39);
    if (this['flag_flying'] || !this['flag_usingAbility']) {
        var _0x4a797e = 'tail',
            _0x79fd52 = this['getSkinImageObj']('skins/land/peacock/' + this['animalSpecies'] + '/' + _0x4a797e + '.png'),
            _0x2a750f = this['skinScale'];
        if (_0x79fd52) {
            _0x1d2dab['save']();
            var _0x5a8035 = this['rad'] - this['outlineW'];
            _0x1d2dab['drawImage'](_0x79fd52, -_0x5a8035 * _0x2a750f, (-_0x5a8035 + _0x5a8035 * _0x3614b0) * _0x2a750f, 0x2 * _0x5a8035 * _0x2a750f, 0x2 * _0x5a8035 * _0x2a750f), _0x1d2dab['restore']();
        }
    }
    if (!this['flag_usingAbility']) {
        var _0x48f428 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']('peacock') + '/peacock_top.png');
        _0x48f428 && _0x1d2dab['drawImage'](_0x48f428, -_0x5a8035 * _0x39e86f, (-_0x5a8035 + _0x5a8035 * _0x413480) * _0x39e86f, 0x2 * _0x5a8035 * _0x39e86f, 0x2 * _0x5a8035 * _0x39e86f);
    }
}
}, _0x4ccf64['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) return;
var _0x295f95 = 0x1f4 / 0x154;
if (this['flag_flying'] && !this['flag_isGrabbed']) {
    _0x1d2dab['save']();
    var _0x54b587 = _0x1170c4('bird', this['spawnTime']);
    _0x54b587 !== undefined && _0x54b587 != null && (this['theFrame'] = _0x54b587);
    var _0xa10100 = !(_0x31f3fc == 0x2 || _0x44408d) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'],
        _0x17fe4b = this['getSkinImageObj'](this['getWing']('peacock', 0x1, !![]));
    if (_0x17fe4b) {
        _0x1d2dab['save']();
        var _0x368c01 = -(-0.2 + _0xa10100) * _0xa0b20a,
            _0x28d86a = this['rad'] * 0.8;
        _0x1d2dab['rotate'](_0x2bcbaa(0x2d) + _0x368c01);
        var _0x1adac8 = 0x0,
            _0x551bae = this['rad'],
            _0x417896 = _0x28d86a * 0x2 * 0.62,
            _0x4854da = _0x28d86a * 2.5,
            _0x1d7920 = 0.2,
            _0x5e159e = 1.7;
        _0x1d2dab['drawImage'](_0x17fe4b, _0x1adac8 + _0x417896 * -_0x1d7920, _0x551bae + _0x4854da * -_0x5e159e, _0x417896, _0x4854da), _0x1d2dab['restore']();
    }
    var _0x17fe4b = this['getSkinImageObj'](this['getWing']('peacock', 0x2, !![]));
    if (_0x17fe4b) {
        _0x1d2dab['save']();
        var _0x368c01 = -(-0.2 + _0xa10100) * _0x2bcbaa(-0x5a),
            _0x28d86a = this['rad'] * 0.8;
        _0x1d2dab['rotate'](_0x2bcbaa(-0x2d) + _0x368c01);
        var _0x1adac8 = 0x0,
            _0x551bae = this['rad'],
            _0x417896 = _0x28d86a * 0x2 * 0.62,
            _0x4854da = _0x28d86a * 2.5,
            _0x1d7920 = 0.8,
            _0x5e159e = 1.7;
        _0x1d2dab['drawImage'](_0x17fe4b, _0x1adac8 + _0x417896 * -_0x1d7920, _0x551bae + _0x4854da * -_0x5e159e, _0x417896, _0x4854da), _0x1d2dab['restore']();
    }
    _0x1d2dab['restore']();
} else {
    if (this['flag_usingAbility'] && !this['flag_flying']) {
        _0x1d2dab['save']();
        var _0x1851d7 = this['flag_flying'] ? 0x2d : 0x14,
            _0x32383c = this['flag_flying'] ? 0x5a : 0x2d,
            _0x5df920 = this['flag_flying'] ? 0.2 : 0.01,
            _0x4dc354 = this['flag_flying'] ? 2.5 : 0x2,
            _0x5b555e = this['flag_flying'] ? 2.5 : 0x2,
            _0x8bc499 = this['flag_flying'] ? 0x0 : -0.4,
            _0xab8224 = this['flag_flying'] ? 0x0 : -0.2,
            _0x9bbbe8 = this['flag_flying'] ? 0.5 : 1.2,
            _0x2fd1f1 = this['flag_flying'] ? 0.3 : 0.1,
            _0x2e4ab2 = (_0x740c5b - this['spawnTime']) / 0x3e8,
            _0xa10100 = !(_0x31f3fc == 0x2 || _0x44408d) ? _0x21d673(_0x2e4ab2, _0x9bbbe8, _0x2fd1f1, 0x2) : this['birdNoAnimationFlyWingAngle'],
            _0x17fe4b = this['getSkinImageObj'](this['getWing']('peacock', 0x1, !![]));
        if (_0x17fe4b) {
            _0x1d2dab['save']();
            var _0x368c01 = -(-_0x5df920 + _0xa10100) * _0x2bcbaa(_0x32383c),
                _0x28d86a = this['rad'] * 0.8;
            _0x1d2dab['rotate'](_0x2bcbaa(_0x1851d7) + _0x368c01);
            var _0x1adac8 = 0x0,
                _0x551bae = this['rad'],
                _0x417896 = _0x28d86a * _0x5b555e * 0.62,
                _0x4854da = _0x28d86a * _0x4dc354,
                _0x1d7920 = 0.2 + _0x8bc499,
                _0x5e159e = 1.7 + _0xab8224;
            _0x1d2dab['drawImage'](_0x17fe4b, _0x1adac8 + _0x417896 * -_0x1d7920, _0x551bae + _0x4854da * -_0x5e159e, _0x417896, _0x4854da), _0x1d2dab['restore']();
        }
        var _0x17fe4b = this['getSkinImageObj'](this['getWing']('peacock', 0x2, !![]));
        if (_0x17fe4b) {
            _0x1d2dab['save']();
            var _0x368c01 = -(-_0x5df920 + _0xa10100) * _0x2bcbaa(-_0x32383c),
                _0x28d86a = this['rad'] * 0.8;
            _0x1d2dab['rotate'](_0x2bcbaa(-_0x1851d7) + _0x368c01);
            var _0x1adac8 = 0x0,
                _0x551bae = this['rad'],
                _0x417896 = _0x28d86a * _0x5b555e * 0.62,
                _0x4854da = _0x28d86a * _0x4dc354,
                _0x1d7920 = 0.8 - _0x8bc499,
                _0x5e159e = 1.7 + _0xab8224;
            _0x1d2dab['drawImage'](_0x17fe4b, _0x1adac8 + _0x417896 * -_0x1d7920, _0x551bae + _0x4854da * -_0x5e159e, _0x417896, _0x4854da), _0x1d2dab['restore']();
        }
        _0x1d2dab['restore']();
    }
}
if (this['specType'] != 0x0 && this['specType'] != undefined) {
    var _0x30f1e1 = 0.4,
        _0x4fa452 = this['getSkinImageObj'](this['getHead']('peacock', !![]));
    if (_0x4fa452) {
        _0x1d2dab['save']();
        var _0x28d86a = this['rad'];
        _0x1d2dab['drawImage'](_0x4fa452, -_0x28d86a * _0x295f95, (-_0x28d86a + _0x28d86a * _0x30f1e1) * _0x295f95, 0x2 * _0x28d86a * _0x295f95, 0x2 * _0x28d86a * _0x295f95), _0x1d2dab['restore']();
    }
}
};

function _0x4ccf64() {
_0x4ccf64['superClass']['call'](this, _0x4ad968);
}
window['Peacock'] = _0x4ccf64, _0x13dc56['setCustomClassForGameObjType'](_0x4ccf64, _0x4ad968, _0x114a7b);
var _0x1e3c43 = _0x3d6c08;
_0x28af23['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x28af23['prototype']['constructor'] = _0x28af23, _0x28af23['superClass'] = _0x1e3c43, _0x28af23['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
if (this['flag_canClimbHill'] || this['flag_flying']) this['z'] += 0x186a0;
}, _0x28af23['prototype']['animalInfo'] = function () {
var _0x4c0026 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x4c0026['aniName'] = 'Gazelle';
    break;
case 0x64:
    _0x4c0026['aniName'] = 'Falmmy Hart';
    break;
case 0xca:
    _0x4c0026['aniName'] = 'Retro Neon Gazelle';
    break;
}
return _0x4c0026['skinName'] = this['getSkinName'](), _0x4c0026['aniCol'] = '#FF9000', _0x4c0026['upgradeText'] = 'UPGRADED to ' + _0x4c0026['aniName'] + '!\x0aHold \'W\' to Jump High through everything.', _0x4c0026;
}, _0x28af23['prototype']['moveF'] = 0.08, _0x28af23['prototype']['jumpAnim'] = null, _0x28af23['prototype']['frame'] = 0x0, _0x28af23['prototype']['drawUnderSkinImg'] = function () {
if (this['flag_usingAbility']) {
    var _0x27dbf2 = 0x1;
    this['jumpAnim'] == null && (this['jumpAnim'] = new _0xf2d657(this, 0.5, _0xf2d657['halfWave']), this['jumpAnim']['keepLastFrame'] = !![], this['jumpAnim']['loop'] = !![], this['jumpAnim']['onFrameEntered'] = function (_0x3d9ea3) {
        this['forObj']['frame'] = _0x3d9ea3;
    }, this['jumpAnim']['onStop'] = function () {});
    if (this['jumpAnim'] != null) this['jumpAnim']['run']();
    var _0x22fd34 = this['rad'] - this['outlineW'],
        _0x284e39 = 0x1f4 / 0x154;
    this['setSkinScale']();
    var _0x1fc7f6 = 'skins/' + this['getSkinPath']() + '/legs0.png',
        _0x45e583 = 'skins/' + this['getSkinPath']() + '/legs1.png',
        _0x390c65 = this['getSkinImageObj'](_0x1fc7f6),
        _0x2711f2 = this['getSkinImageObj'](_0x45e583);
    if (_0x390c65 && _0x2711f2) {
        var _0x284e39 = this['skinScale'] + this['skinScale'] * 0.15 * this['frame'],
            _0x22fd34 = this['skinRad'];
        this['specType'] == 0x0 ? (_0x1d2dab['drawImage'](_0x390c65, -_0x22fd34 * _0x284e39, -_0x22fd34 * _0x284e39, 0x2 * _0x22fd34 * _0x284e39, 0x2 * _0x22fd34 * _0x284e39), _0x1d2dab['drawImage'](_0x2711f2, -_0x22fd34 * _0x284e39, (-_0x22fd34 - _0x22fd34 * this['moveF'] * this['frame']) * _0x284e39, 0x2 * _0x22fd34 * _0x284e39, 0x2 * _0x22fd34 * _0x284e39)) : (_0x1d2dab['drawImage'](_0x2711f2, -_0x22fd34 * _0x284e39, -_0x22fd34 * _0x284e39, 0x2 * _0x22fd34 * _0x284e39, 0x2 * _0x22fd34 * _0x284e39), _0x1d2dab['drawImage'](_0x390c65, -_0x22fd34 * _0x284e39, (-_0x22fd34 + _0x22fd34 * this['moveF'] * this['frame']) * _0x284e39, 0x2 * _0x22fd34 * _0x284e39, 0x2 * _0x22fd34 * _0x284e39));
    }
} else this['jumpAnim'] = null;
}, _0x28af23['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x28af23['prototype']['getSkinPath'] = function (_0x23028a) {
return 'desert/gazelle/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x28af23['prototype']['getSkinName'] = function () {
var _0x2d73d8 = this['getSkinPath']() + '/gazelle';
return _0x2d73d8 += this['specType'] == 0x0 ? '' : this['specType'], _0x2d73d8;
}, _0x28af23['prototype']['getAbilityInfo'] = function (_0x5a0b03) {
var _0x19545c = {};
return _0x19545c['abilImg'] = 'abilities/Jump.svg', _0x19545c['abilName'] = 'HOLD to Jump High\x0a', _0x19545c['skinThemeID'] = this['skinThemeID'], _0x19545c['mopeSeasonID'] = this['mopeSeasonID'], _0x19545c;
};

function _0x28af23() {
_0x28af23['superClass']['call'](this, _0x4ad968);
}
window['Gazelle'] = _0x28af23, _0x13dc56['setCustomClassForGameObjType'](_0x28af23, _0x4ad968, _0x4336e9);
var _0x1e3c43 = _0x3d6c08;
_0x586d03['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x586d03['prototype']['constructor'] = _0x586d03, _0x586d03['superClass'] = _0x1e3c43, _0x586d03['prototype']['animalInfo'] = function () {
var _0xf444c0 = {};
_0xf444c0['aniCol'] = '#FF9000';
switch (this['animalSpecies']) {
case 0x0:
    _0xf444c0['aniName'] = 'Armadillo';
    break;
}
return _0xf444c0['skinName'] = this['getSkinName'](), _0xf444c0['upgradeText'] = 'UPGRADED to ' + _0xf444c0['aniName'] + '!\x0aHold \'W\' to roll through everything. \x0aCarefully, try eating mangoes around venus flytraps!', _0xf444c0;
}, _0x586d03['prototype']['drawUnderSkinTail'] = function (_0x2f74d4) {
!this['flag_usingAbility'] && _0x586d03['superClass']['prototype']['drawUnderSkinTail']['call'](this, _0x2f74d4);
}, _0x586d03['prototype']['drawAnimalUnderSkinCircle'] = function (_0x404264) {
!this['flag_usingAbility'] && _0x586d03['superClass']['prototype']['drawAnimalUnderSkinCircle']['call'](this, _0x404264);
}, _0x586d03['prototype']['basicDrawSkinImg'] = function () {
if (!this['flag_usingAbility']) {
    _0x586d03['superClass']['prototype']['basicDrawSkinImg']['call'](this);
    return;
} else {
    this['setSkinScale'](), this['frameNumber'] = Math['trunc'](_0x740c5b / 0x78) % 0x6;
    var _0x418b15 = 'skins/' + this['getSkin']() + this['frameNumber'] + '.png',
        _0x224cc3 = this['getSkinImageObj'](_0x418b15);
    if (_0x224cc3) {
        var _0x539402 = this['skinScale'],
            _0x3c62f6 = this['skinRad'];
        _0x1d2dab['drawImage'](_0x224cc3, -_0x3c62f6 * _0x539402, -_0x3c62f6 * _0x539402, 0x2 * _0x3c62f6 * _0x539402, 0x2 * _0x3c62f6 * _0x539402);
    }
}
}, _0x586d03['prototype']['getSkin'] = function () {
return 'desert/armadillo/' + this['animalSpecies'] + this['getSubSpecies']() + '/armadillo';
}, _0x586d03['prototype']['getSkinName'] = function () {
return 'desert/armadillo/' + this['animalSpecies'] + this['getSubSpecies']() + '/armadillo' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x586d03['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x586d03() {
_0x586d03['superClass']['call'](this, _0x4ad968);
}
window['Armadillo'] = _0x586d03, _0x13dc56['setCustomClassForGameObjType'](_0x586d03, _0x4ad968, _0x4fcb93);
var _0x1e3c43 = _0x3d6c08;
_0x319ca3['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x319ca3['prototype']['constructor'] = _0x319ca3, _0x319ca3['superClass'] = _0x1e3c43, _0x319ca3['prototype']['animalInfo'] = function () {
var _0x1a65db = {};
_0x1a65db['aniCol'] = '#FF9000';
switch (this['animalSpecies']) {
case 0x64:
    _0x1a65db['aniName'] = 'Cacti Rat';
    break;
case 0x0:
    _0x1a65db['aniName'] = 'Desert Rat';
    break;
case 0xca:
    _0x1a65db['aniName'] = 'Plasma Rat';
    break;
}
return _0x1a65db['skinName'] = this['getSkinName'](), _0x1a65db['upgradeText'] = '', _0x1a65db;
}, _0x319ca3['prototype']['getSkinName'] = function () {
return this['getSkinPath']() + '/kangaroorat' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x319ca3['prototype']['getSkinPath'] = function () {
return 'desert/kangaroorat/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x319ca3['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x319ca3['prototype']['flapStart'] = 0x0, _0x319ca3['prototype']['drawSkinCustomization'] = function () {
if (this['flag_usingAbility']) {
    var _0x1fde73 = 'skins/' + this['getSkinPath']() + '/tail.png',
        _0x538b8e = this['getSkinImageObj'](_0x1fde73);
    if (_0x538b8e) {
        var _0x1e21e2 = this['skinScale'] * 1.5,
            _0x3581fd = this['skinRad'];
        _0x1d2dab['drawImage'](_0x538b8e, -_0x3581fd * _0x1e21e2, (-_0x3581fd + _0x3581fd * -0.08) * _0x1e21e2, 0x2 * _0x3581fd * _0x1e21e2, 0x2 * _0x3581fd * _0x1e21e2);
    }
}
};

function _0x319ca3() {
_0x319ca3['superClass']['call'](this, _0x4ad968);
}
window['KangarooRat'] = _0x319ca3, _0x13dc56['setCustomClassForGameObjType'](_0x319ca3, _0x4ad968, _0x353af1);
var _0x1e3c43 = _0x3d6c08;
_0x260ce5['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x260ce5['prototype']['constructor'] = _0x260ce5, _0x260ce5['superClass'] = _0x1e3c43, _0x260ce5['prototype']['animalInfo'] = function () {
var _0x36bdfb = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x36bdfb['aniName'] = 'Desert Chipmunk';
    break;
case 0xc8:
    _0x36bdfb['aniName'] = 'Velvet Chipmunk';
    break;
case 0xca:
    _0x36bdfb['aniName'] = 'Chipmonk';
    break;
}
return _0x36bdfb['skinName'] = this['getSkinName'](), _0x36bdfb['aniCol'] = '#FF9000', _0x36bdfb['upgradeText'] = 'UPGRADED to ' + _0x36bdfb['aniName'] + '!\x0a Press W to Spit food to boost yourself!', _0x36bdfb;
}, _0x260ce5['prototype']['getSkinName'] = function () {
return this['getSkinPath']() + '/chipmunk' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x260ce5['prototype']['getSkinPath'] = function () {
return 'desert/chipmunk/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x260ce5['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x260ce5['prototype']['getAbilityInfo'] = function (_0x17ca6b) {
var _0x5ae6f5 = {};
return _0x5ae6f5['abilName'] = 'Spits Food!', _0x5ae6f5['abilImg'] = 'abilities/Spit.svg', _0x5ae6f5['skinThemeID'] = this['skinThemeID'], _0x5ae6f5['mopeSeasonID'] = this['mopeSeasonID'], _0x5ae6f5;
};

function _0x260ce5() {
_0x260ce5['superClass']['call'](this, _0x4ad968);
}
window['DesertChipmunk'] = _0x260ce5, _0x13dc56['setCustomClassForGameObjType'](_0x260ce5, _0x4ad968, _0x5b4c32);
var _0x1e3c43 = _0x3d6c08;
_0x1fdb1c['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x1fdb1c['prototype']['constructor'] = _0x1fdb1c, _0x1fdb1c['superClass'] = _0x1e3c43, _0x1fdb1c['prototype']['updateZ'] = function () {
if (this['flag_eff_grabbedByFlytrap']) this['z'] = 0x44c + this['rad'];
else {
    if (this['flag_usingAbility']) this['z'] = -0x9d;
    else {
        if (this['flag_flying'] || this['flag_eff_tossedInAir']) this['z'] = 0x834 + this['rad'];
        else this['z'] = this['rad'];
    }
}
}, _0x1fdb1c['prototype']['animalInfo'] = function () {
var _0xff534a = {};
_0xff534a['aniCol'] = '#FF9000';
switch (this['animalSpecies']) {
case 0x0:
    _0xff534a['aniName'] = 'Meerkat';
    break;
case 0x64:
    _0xff534a['aniName'] = 'Puumpkat';
    break;
case 0xc9:
    _0xff534a['aniName'] = 'Scubakat';
    break;
case 0xcc:
    _0xff534a['aniName'] = 'Necromancer Meerkat';
    break;
}
return _0xff534a['skinName'] = this['getSkinName'](), _0xff534a['upgradeText'] = 'UPGRADED to ' + _0xff534a['aniName'] + '!\x0a HOLD to Dig Underground. \x0aYou can now eat pink cactus fruits!', _0xff534a;
}, _0x1fdb1c['prototype']['getSkinName'] = function () {
return this['getSkinPath']() + '/meerkat' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x1fdb1c['prototype']['getSkinPath'] = function () {
return 'desert/meerkat/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x1fdb1c['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x1fdb1c['prototype']['drawAnimalUnderSkinCircle'] = function (_0x439cf4) {
!this['flag_usingAbility'] && _0x1fdb1c['superClass']['prototype']['drawAnimalUnderSkinCircle']['call'](this, _0x439cf4);
}, _0x1fdb1c['prototype']['drawUnderSkinTail'] = function (_0x41c079) {
!this['flag_usingAbility'] && _0x1fdb1c['superClass']['prototype']['drawUnderSkinTail']['call'](this, _0x41c079);
}, _0x1fdb1c['prototype']['basicDrawSkinImg'] = function () {
if (!this['flag_usingAbility']) {
    _0x1fdb1c['superClass']['prototype']['basicDrawSkinImg']['call'](this);
    return;
} else {
    this['setSkinScale'](), _0x1d2dab['save']();
    var _0xbc293b = _0xbc293b = 'skins/' + this['getSkinPath']() + '/meerkat1.png',
        _0x50e912 = this['getSkinImageObj'](_0xbc293b);
    if (_0x50e912) {
        var _0x32901c = this['skinScale'],
            _0x19256d = this['skinRad'];
        _0x1d2dab['drawImage'](_0x50e912, -_0x19256d * _0x32901c, -_0x19256d * _0x32901c, 0x2 * _0x19256d * _0x32901c, 0x2 * _0x19256d * _0x32901c);
    }
    _0x1d2dab['restore']();
}
};

function _0x1fdb1c() {
_0x1fdb1c['superClass']['call'](this, _0x4ad968);
}
window['Meerkat'] = _0x1fdb1c, _0x13dc56['setCustomClassForGameObjType'](_0x1fdb1c, _0x4ad968, _0x441e79);
var _0x1e3c43 = _0x3d6c08;
_0x409bd5['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x409bd5['prototype']['constructor'] = _0x409bd5, _0x409bd5['superClass'] = _0x1e3c43, _0x409bd5['prototype']['animalInfo'] = function () {
var _0x513b4d = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x513b4d['aniName'] = 'Fennec Fox';
    break;
case 0xca:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x513b4d['aniName'] = 'Fire Fox';
        break;
    case 0x1:
        _0x513b4d['aniName'] = 'Purple Fire Fox';
    }
    break;
}
return _0x513b4d['aniCol'] = '#FF9000', _0x513b4d['skinName'] = this['getSkinName'](), _0x513b4d['upgradeText'] = 'UPGRADED to ' + _0x513b4d['aniName'] + '!\x0aFennec Fox has very sharp ears (can see animals in hiding holes).\x0a Press W to Whine!', _0x513b4d;
}, _0x409bd5['prototype']['getSkinPath'] = function (_0x341f6e) {
return 'desert/fennecfox/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x409bd5['prototype']['getSkinName'] = function () {
var _0x4a7c8c = this['getSkinPath']() + '/fennecfox';
return _0x4a7c8c += this['specType'] == 0x0 ? '' : this['specType'], _0x4a7c8c;
}, _0x409bd5['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
}, _0x409bd5['prototype']['flapStart'] = 0x0, _0x409bd5['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) {
    this['flapStart'] = 0x0;
    return;
} else this['flapStart'] == 0x0 && (this['flapStart'] = _0x740c5b);
this['setSkinScale']();
var _0xabd00d = 0.5,
    _0x58bdf5 = !(_0x31f3fc == 0x2) ? _0x1170c4('fennecfox', this['spawnTime']) : 0x2;
_0x58bdf5 = Math['abs'](Math['round'](_0x58bdf5));
var _0x1d571e = 'skins/' + this['getSkinPath']() + '/ears' + _0x58bdf5 + '.png',
    _0x1db038 = this['getSkinImageObj'](_0x1d571e);
if (_0x1db038) {
    var _0xde208c = this['skinScale'],
        _0x2a71bc = this['skinRad'];
    _0x1d2dab['drawImage'](_0x1db038, -_0x2a71bc * _0xde208c, -_0x2a71bc * _0xde208c, 0x2 * _0x2a71bc * _0xde208c, 0x2 * _0x2a71bc * _0xde208c);
}
};

function _0x409bd5() {
_0x409bd5['superClass']['call'](this, _0x4ad968);
}
window['FennecFox'] = _0x409bd5, _0x13dc56['setCustomClassForGameObjType'](_0x409bd5, _0x4ad968, _0x490d3d);
var _0x1e3c43 = _0x3d6c08;
_0x1b4df4['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x1b4df4['prototype']['constructor'] = _0x1b4df4, _0x1b4df4['superClass'] = _0x1e3c43, _0x1b4df4['prototype']['animalInfo'] = function () {
var _0x3baafa = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x3baafa['aniName'] = 'Gobi Bear';
    break;
case 0xca:
    _0x3baafa['aniName'] = 'Gobee Bear';
    break;
}
return _0x3baafa['aniCol'] = '#FF9000', _0x3baafa['skinName'] = this['getSkinName'](), _0x3baafa['upgradeText'] = 'UPGRADED to ' + _0x3baafa['aniName'] + '!\x0a', _0x3baafa;
}, _0x1b4df4['prototype']['getSkinName'] = function () {
return this['getSkinPath']() + '/gobibear' + (this['flag_usingAbility'] ? '1' : '');
}, _0x1b4df4['prototype']['getSkinPath'] = function () {
return 'desert/gobibear/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x1b4df4['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x1b4df4['prototype']['biteStart'] = 0x0, _0x1b4df4['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) {
    this['biteStart'] = 0x0;
    return;
} else {
    this['biteStart'] == 0x0 && (this['biteStart'] = _0x740c5b);
    if (_0x740c5b - this['biteStart'] < 0x190) {
        if (this['specType'] != 0x0 && this['specType'] != undefined) {
            var _0x2a80fe = this['getSkinImageObj']('skins/' + this['getSkinPath']() + '/gobibear_head1.png'),
                _0x1bebad = (_0x740c5b - this['biteStart']) / 0x3e8,
                _0x3b5250 = this['skinScale'] * 1.1,
                _0x1247a7 = this['skinRad'];
            if (_0x2a80fe) {
                frame = 0x0;
                !this['flag_flying'] && (flapAmount = 0x3, flapDur = 0.5, frame = !(_0x31f3fc == 0x2) ? _0x21d673(_0x1bebad, flapDur, flapAmount, 0x2) : this['birdNoAnimationFlyWingAngle']);
                _0x1d2dab['save']();
                var _0x1247a7 = this['rad'];
                _0x1d2dab['drawImage'](_0x2a80fe, -_0x1247a7 * _0x3b5250, (-_0x1247a7 + _0x1247a7 * 0.1) * _0x3b5250 + frame, 0x2 * _0x1247a7 * _0x3b5250, 0x2 * _0x1247a7 * _0x3b5250), _0x1d2dab['restore']();
            }
        }
    }
}
};

function _0x1b4df4() {
_0x1b4df4['superClass']['call'](this, _0x4ad968);
}
window['GobiBear'] = _0x1b4df4, _0x13dc56['setCustomClassForGameObjType'](_0x1b4df4, _0x4ad968, _0x35326e);
var _0x1e3c43 = _0x3d6c08;
_0x471934['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x471934['prototype']['constructor'] = _0x471934, _0x471934['superClass'] = _0x1e3c43, _0x471934['prototype']['animalInfo'] = function () {
var _0x5c4602 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x5c4602['aniName'] = 'Camel';
    break;
case 0x64:
    _0x5c4602['aniName'] = 'Doomedarius';
    break;
case 0xc9:
    _0x5c4602['aniName'] = 'Balloon Warrior';
    break;
case 0xca:
    _0x5c4602['aniName'] = 'Fungal Camel';
    break;
}
return _0x5c4602['skinName'] = this['getSkinName'](), _0x5c4602['aniCol'] = '#FF9000', _0x5c4602['upgradeText'] = 'UPGRADED to ' + _0x5c4602['aniName'] + '!\x0a Press W to Spit. Try eating oranges from trees!', _0x5c4602;
}, _0x471934['prototype']['getSkinName'] = function () {
let _0x55857c = this['getSkinPath']() + '/camel';
return _0x55857c += this['specType'] == 0x0 ? '' : this['specType'], _0x55857c;
}, _0x471934['prototype']['getSkinPath'] = function () {
return 'desert/camel/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x471934['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x471934['prototype']['getAbilityInfo'] = function (_0x4240b0) {
var _0x5353b6 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x5353b6['abilName'] = 'Spit!';
    break;
case 0x64:
    _0x5353b6['abilName'] = 'Cannon Shots!';
    break;
case 0xc9:
    _0x5353b6['abilName'] = 'Water Balloons!';
    break;
}
return _0x5353b6['abilImg'] = 'abilities/Spit.svg', _0x5353b6['skinThemeID'] = this['skinThemeID'], _0x5353b6['mopeSeasonID'] = this['mopeSeasonID'], _0x5353b6;
}, _0x471934['prototype']['biteStart'] = 0x0, _0x471934['prototype']['flapAmount'] = 0x3, _0x471934['prototype']['flapDur'] = 0x1, _0x471934['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) {
    this['biteStart'] = 0x0;
    return;
} else {
    this['biteStart'] == 0x0 && (this['biteStart'] = _0x740c5b);
    if (this['specType'] != 0x0 && this['specType'] != undefined) {
        var _0x4eecf1 = 'skins/' + this['getSkinPath']() + '/camel_head1.png',
            _0x476fac = this['getSkinImageObj'](_0x4eecf1),
            _0x3c106a = (_0x740c5b - this['biteStart']) / 0x3e8,
            _0x1434b5 = this['skinScale'] * 1.1,
            _0x1082c8 = this['skinRad'];
        if (_0x476fac) {
            var _0x271106 = 0x0;
            !this['flag_flying'] && (_0x271106 = !(_0x31f3fc == 0x2) ? _0x21d673(_0x3c106a, this['flapDur'], this['flapAmount'], 0x2) : this['flapAmount']);
            _0x1d2dab['save']();
            var _0x1082c8 = this['rad'];
            _0x1d2dab['drawImage'](_0x476fac, -_0x1082c8 * _0x1434b5, (-_0x1082c8 + _0x1082c8 * 0.1) * _0x1434b5 - _0x271106, 0x2 * _0x1082c8 * _0x1434b5, 0x2 * _0x1082c8 * _0x1434b5), _0x1d2dab['restore']();
        }
    }
}
};

function _0x471934() {
_0x471934['superClass']['call'](this, _0x4ad968);
}
window['Camel'] = _0x471934, _0x13dc56['setCustomClassForGameObjType'](_0x471934, _0x4ad968, _0x1be7db);
var _0x1e3c43 = _0x131218;
_0x303049['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x303049['prototype']['constructor'] = _0x303049, _0x303049['superClass'] = _0x1e3c43, _0x303049['prototype']['updateZ'] = function () {
this['z'] = 0x3ed;
}, _0x303049['prototype']['customDraw'] = function (_0x46371e) {
var _0x1362b8 = '';
if (this['speciesType'] == 0xc9) _0x1362b8 = 'skins/desert/camel/' + this['speciesType'] + '/spit' + this['specType'] + '.png';
else _0x1362b8 = 'skins/desert/camel/' + this['speciesType'] + '/spit.png';
var _0x1c6fd0 = this['getSkinImageObj'](_0x1362b8);
if (_0x1c6fd0) {
    _0x1d2dab['save']();
    var _0x553823 = this['rad'] * 0x2;
    _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x1c6fd0, -_0x553823, -_0x553823, _0x553823 * 0x2, _0x553823 * 0x2), _0x1d2dab['restore']();
}
}, _0x303049['prototype']['getSkinImageObj'] = function (_0xeaf155) {
var _0x434103 = this['speciesType'] === 0x64 || this['speciesType'] === 0xc9 ? 0x1 : 0x2,
    _0x3bf806 = './assets/s/' + _0x434103 + '/' + _0xeaf155;
return this['skinThemeID'] > 0x0 && (_0x3bf806 = './assets/t/' + this['skinThemeID'] + '/' + _0xeaf155), _0x5ace1d(_0x3bf806, function (_0x36e94c) {
    console['log'](_0x36e94c['src']);
});
};

function _0x303049() {
_0x303049['superClass']['call'](this, _0x28d365);
}
window['CamelSpit'] = _0x303049, _0x13dc56['setCustomClassForGameObjType'](_0x303049, _0x28d365);
var _0x1e3c43 = _0x3d6c08;
_0xcdb678['prototype'] = Object['create'](_0x1e3c43['prototype']), _0xcdb678['prototype']['constructor'] = _0xcdb678, _0xcdb678['superClass'] = _0x1e3c43, _0xcdb678['prototype']['animalInfo'] = function () {
var _0x30265e = {};
_0x30265e['aniCol'] = '#FF9000';
switch (this['animalSpecies']) {
case 0x0:
    _0x30265e['aniName'] = 'Warthog';
    break;
case 0x64:
    _0x30265e['aniName'] = 'The Burlone';
    break;
case 0xc8:
    _0x30265e['aniName'] = 'WarT. Hog';
    break;
case 0xc9:
    _0x30265e['aniName'] = 'Flame Tiki';
    break;
case 0xca:
    _0x30265e['aniName'] = 'Dark Matter Warthog';
    break;
case 0xcc:
    _0x30265e['aniName'] = 'Candy Corn Warthog';
    break;
case 0xdc:
    _0x30265e['aniName'] = 'Dark Matter Warthog';
    break;
}
return _0x30265e['skinName'] = this['getSkinName'](), _0x30265e['upgradeText'] = 'UPGRADED to ' + _0x30265e['aniName'] + '!\x0aPress W to Dig and Charge.', _0x30265e;
}, _0xcdb678['prototype']['getSkinName'] = function () {
let _0xa561b5 = this['getSkinPath']() + '/warthog';
return _0xa561b5 += this['specType'] == 0x0 ? '' : this['specType'], _0xa561b5;
}, _0xcdb678['prototype']['getSkinPath'] = function () {
return 'desert/warthog/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0xcdb678['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0xcdb678['prototype']['flapStart'] = 0x0, _0xcdb678['prototype']['drawUnderSkinImgOutline'] = function () {
console['log'](this['teamID']), _0xcdb678['superClass']['prototype']['drawUnderSkinImgOutline']['call'](this);
if (this['flag_usingAbility'] && !this['isCharging']) {
    var _0x2dabe1 = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x48d6a6 = 1.5,
        _0x4151b5 = 0x1,
        _0x3c8538 = _0x4151b5 * Math['sin'](0x2 * Math['PI'] / _0x48d6a6 * _0x2dabe1);
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] *= 0.8 - 0.2 * _0x3c8538, _0x444e67(0x0, this['rad'] * 0.3, this['rad'] * (0.9 + 0.12 * _0x3c8538), '#b69327'), _0x444e67(0x0, -this['rad'] * 0.2, this['rad'] * (0.9 + 0.09 * _0x3c8538), '#b69327'), _0x1d2dab['restore']();
}
}, _0xcdb678['prototype']['drawUnderSkinImg'] = function () {
if (!this['flag_usingAbility']) {
    this['flapStart'] = 0x0;
    return;
} else this['flapStart'] == 0x0 && (this['flapStart'] = _0x740c5b);
if (this['flag_usingAbility'] && !this['isCharging']) {
    var _0x2742ba = this['rad'] - this['outlineW'],
        _0x223334 = 0x1f4 / 0x154;
    this['setSkinScale']();
    var _0x71eab2 = 0.8,
        _0x1cf223 = (_0x740c5b - this['flapStart']) / 0x3e8,
        _0x450223 = !(_0x31f3fc == 0x2) ? _0x21d673(_0x1cf223, _0x71eab2, 0x1, 0x1) : 0x0;
    _0x450223 = Math['round'](_0x450223);
    if (_0x450223 < 0x0) _0x450223 = 0x0;
    var _0x36adba = 'skins/' + this['getSkinPath']() + '/leg' + _0x450223 + '.png',
        _0x3dbdaf = this['getSkinImageObj'](_0x36adba);
    if (_0x3dbdaf) {
        var _0x223334 = this['skinScale'],
            _0x2742ba = this['skinRad'];
        _0x1d2dab['drawImage'](_0x3dbdaf, -_0x2742ba * _0x223334, -_0x2742ba * _0x223334, 0x2 * _0x2742ba * _0x223334, 0x2 * _0x2742ba * _0x223334);
    }
}
}, _0xcdb678['prototype']['getAbilityInfo'] = function (_0xb1f300) {
var _0x3c4537 = {};
return _0x3c4537['abilName'] = 'Dig Food\x0aSudden Charge', _0x3c4537['abilImg'] = 'abilities/Dig.svg', _0x3c4537['skinThemeID'] = this['skinThemeID'], _0x3c4537['mopeSeasonID'] = this['mopeSeasonID'], _0x3c4537;
}, _0xcdb678['prototype']['isCharging'] = ![], _0xcdb678['prototype']['readCustomData_onNewlyVisible'] = function (_0x1d8269) {
_0xcdb678['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x1d8269), this['customUpdatedProperty'](_0xd9d924, _0x1d8269);
}, _0xcdb678['prototype']['customUpdatedProperty'] = function (_0x12616b, _0x513c92) {
_0x12616b == _0xd9d924 && (this['isCharging'] = _0x513c92['readUInt8']() == 0x1);
};

function _0xcdb678() {
_0xcdb678['superClass']['call'](this, _0x4ad968);
}
window['Warthog'] = _0xcdb678, _0x13dc56['setCustomClassForGameObjType'](_0xcdb678, _0x4ad968, _0x5ef983);
var _0x1e3c43 = _0x3d6c08;
_0x12222e['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x12222e['prototype']['constructor'] = _0x12222e, _0x12222e['superClass'] = _0x1e3c43, _0x12222e['prototype']['animalInfo'] = function () {
var _0x5ad635 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x5ad635['aniName'] = 'Hyena';
    break;
case 0xc9:
    _0x5ad635['aniName'] = 'DJ Hyena';
    break;
case 0xca:
    _0x5ad635['aniName'] = 'Anubis Hyena';
    break;
}
return _0x5ad635['aniCol'] = '#FF9000', _0x5ad635['skinName'] = this['getSkinName'](), _0x5ad635['upgradeText'] = 'UPGRADED to ' + _0x5ad635['aniName'] + '!\x0aHyenas have a very loud and scary laugh!\x0aPress W to Laugh.', _0x5ad635;
}, _0x12222e['prototype']['getSkinName'] = function () {
return this['getSkinPath']() + '/hyena' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x12222e['prototype']['getSkinPath'] = function () {
return 'desert/hyena/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x12222e['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x12222e['prototype']['biteStart'] = 0x0, _0x12222e['prototype']['flapAmount'] = 0x3, _0x12222e['prototype']['flapDur'] = 0x1, _0x12222e['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) {
    this['biteStart'] = 0x0;
    return;
} else {
    this['biteStart'] == 0x0 && (this['biteStart'] = _0x740c5b);
    if (this['specType'] != 0x0 && this['specType'] != undefined) {
        var _0x5ae5ec = this['getSkinImageObj']('skins/' + this['getSkinPath']() + '/hyena_head.png'),
            _0x41b81 = (_0x740c5b - this['biteStart']) / 0x3e8,
            _0x4e7406 = this['skinScale'] * 1.1,
            _0x4d0260 = this['skinRad'];
        if (_0x5ae5ec) {
            frame = 0x0;
            !this['flag_flying'] && (frame = !(_0x31f3fc == 0x2) ? _0x21d673(_0x41b81, this['flapDur'], this['flapAmount'], 0x2) : this['flapAmount']);
            _0x1d2dab['save']();
            var _0x4d0260 = this['rad'];
            _0x1d2dab['drawImage'](_0x5ae5ec, -_0x4d0260 * _0x4e7406, (-_0x4d0260 + _0x4d0260 * 0.1) * _0x4e7406 + frame, 0x2 * _0x4d0260 * _0x4e7406, 0x2 * _0x4d0260 * _0x4e7406), _0x1d2dab['restore']();
        }
    }
}
}, _0x12222e['prototype']['getAbilityInfo'] = function (_0x18a679) {
var _0x3945b1 = {};
return _0x3945b1['abilName'] = 'Laughs!', _0x3945b1['abilImg'] = 'abilities/Laugh.svg', _0x3945b1['skinThemeID'] = this['skinThemeID'], _0x3945b1['mopeSeasonID'] = this['mopeSeasonID'], _0x3945b1;
}, _0x12222e['prototype']['getSkinImageObj'] = function (_0x2d2499) {
var _0x108c0b = this['animalSpecies'] === 0xc9 ? 0x1 : this['mopeSeasonID'];
return this['getSkinImageObjForSeason'](_0x2d2499, _0x108c0b);
};

function _0x12222e() {
_0x12222e['superClass']['call'](this, _0x4ad968);
}
window['Hyena'] = _0x12222e, _0x13dc56['setCustomClassForGameObjType'](_0x12222e, _0x4ad968, _0x67df53);
var _0x570743 = _0x8267fb,
_0x1e3c43 = _0x4763ce;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43, _0x8267fb['prototype']['updateZ'] = function () {
this['z'] = 0x186a2;
}, _0x8267fb['prototype']['customDraw'] = function (_0xb0cef7) {
_0x1d2dab['save']();
var _0x2429fb = this['getSkinImageObj']('skins/desert/hyena/' + this['speciesType'] + '/laugh.png');
if (_0x2429fb) {
    var _0x56ade0 = _0x740c5b - this['spawnTime'],
        _0x2b8afa = _0x56ade0 / 0x3e8,
        _0x53a023 = 0x2,
        _0x87ec18 = 1.5;
    rShift = _0x87ec18 * Math['sin'](0x2 * Math['PI'] / _0x53a023 * _0x2b8afa);
    var _0x471ea7 = _0x21d673(_0x2b8afa, 5.1, 0x1, 0x1);
    _0x471ea7 = _0x29d4e1(_0x471ea7, 0x0, 0x1), _0x1d2dab['globalAlpha'] = _0x471ea7;
    var _0x159f14 = 0x1,
        _0x3f5017 = this['rad'];
    _0x1d2dab['rotate'](this['angle'] + _0x2bcbaa(-0x5a)), _0x1d2dab['drawImage'](_0x2429fb, -_0x3f5017 * _0x159f14, -_0x3f5017 * _0x159f14, 0x2 * _0x3f5017 * _0x159f14, 0x2 * _0x3f5017 * _0x159f14);
}
_0x1d2dab['restore'](), this['drawChat']();
}, _0x8267fb['prototype']['drawChat'] = function () {
if (this['aLine'] == null) return;
_0x1d2dab['save'](), _0x1d2dab['font'] = '10px Arial', _0x1d2dab['lineWidth'] = 0x1, _0x1d2dab['textAlign'] = 'center', _0x1d2dab['textBaseline'] = 'middle';
var _0xc15bbf = this['aLine'],
    _0x2135dd = _0x740c5b > _0xc15bbf['chatFadeT'] ? 0x0 : 0x1;
_0xc15bbf['chatA'] += (_0x2135dd - _0xc15bbf['chatA']) * 0.1, _0x1d2dab['shadowOffsetX'] = 0x0, _0x1d2dab['shadowOffsetY'] = 0x0;
_0xc15bbf['chatA'] < 0.02 && (this['aLine'] = null);
var _0x3187aa = _0x1d2dab['measureText'](_0xc15bbf['chatTxt'])['width'],
    _0x88c1fd = 0xa,
    _0x4fc8c2 = 0x1,
    _0x44a519 = 0x1;
_0x1d2dab['globalAlpha'] = 0.8 * _0xc15bbf['chatA'], _0x1d2dab['fillStyle'] = _0x3b949e(this['curBiome']), _0x1d2dab['fillRect'](this['x'] - _0x4fc8c2 - _0x3187aa / 0x2, this['y'] - this['rad'] - _0x88c1fd / 0x2 - _0x44a519, _0x3187aa + _0x4fc8c2 * 0x2, _0x88c1fd + _0x44a519 * 0x2), _0x1d2dab['fillStyle'] = '#F1C34C', !(_0x31f3fc == 0x2) && (_0x1d2dab['shadowOffsetX'] = 0x1, _0x1d2dab['shadowOffsetY'] = 0x1, _0x1d2dab['shadowColor'] = 'black'), _0x1d2dab['globalAlpha'] = _0xc15bbf['chatA'], _0x1d2dab['fillText'](_0xc15bbf['chatTxt'], this['x'], this['y'] - this['rad']), _0x1d2dab['restore']();
};

function _0x8267fb() {
_0x8267fb['superClass']['call'](this);
}
_0x8267fb['prototype']['aLine'] = null, _0x8267fb['prototype']['readCustomData_onNewlyVisible'] = function (_0x40cb9b) {
_0x8267fb['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x40cb9b), this['aLine'] = {
    'chatTxt': this['speciesType'] == 0xc9 ? 'Oh yeah!' : 'Hehehe',
    'chatFadeT': _0x740c5b + 0xfa0,
    'chatA': 0x0
};
}, _0x8267fb['prototype']['getSkinImageObj'] = function (_0x1473aa) {
var _0x1d9eb2 = this['speciesType'] === 0xc9 ? 0x1 : this['mopeSeasonID'];
return this['getSkinImageObjForSeason'](_0x1473aa, _0x1d9eb2);
}, window['HyenaLaugh'] = _0x8267fb, _0x13dc56['setCustomClassForGameObjType'](_0x8267fb, _0x2c5edd, _0x57405f);
var _0x1e3c43 = _0x3d6c08;
_0x524adf['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x524adf['prototype']['constructor'] = _0x524adf, _0x524adf['superClass'] = _0x1e3c43, _0x524adf['prototype']['animalInfo'] = function () {
var _0xa0b6af = {};
_0xa0b6af['aniCol'] = '#FF9000';
switch (this['animalSpecies']) {
case 0x0:
    _0xa0b6af['aniName'] = 'Rattle Snake';
    break;
case 0x64:
    _0xa0b6af['aniName'] = 'Gummy Viper';
    break;
}
return _0xa0b6af['upgradeText'] = 'UPGRADED to ' + _0xa0b6af['aniName'] + '!\x0aThe ' + _0xa0b6af['aniName'] + ' is a very dangerous animal. \x0aHOLD W to Rattle.', _0xa0b6af['skinName'] = this['getSkinName'](), _0xa0b6af;
}, _0x524adf['prototype']['getSkinName'] = function () {
return this['getSkinPath']() + '/rattlesnake' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x524adf['prototype']['getSkinPath'] = function () {
return 'desert/rattlesnake/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x524adf['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x524adf['prototype']['biteStart'] = 0x0, _0x524adf['prototype']['drawUnderSkinImg'] = function () {
if (!this['flag_usingAbility']) {
    var _0x5d2eed = this['rad'] - this['outlineW'],
        _0x23fce8 = 0x1f4 / 0x154,
        _0x356350 = this['getSkinImageObj']('skins/' + this['getSkinPath']() + '/tongue.png'),
        _0x1e466c = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x41b406 = _0x31f3fc == 0x2 ? 0x0 : _0x21d673(_0x1e466c, 0.7, 0x6, 0.5),
        _0x28353b = _0x31f3fc == 0x2 ? 0x0 : 0x5;
    _0x356350 && _0x1d2dab['drawImage'](_0x356350, -_0x5d2eed * _0x23fce8, -(_0x5d2eed + _0x28353b + _0x41b406) * _0x23fce8, 0x2 * _0x5d2eed * _0x23fce8, 0x2 * _0x5d2eed * _0x23fce8);
}
}, _0x524adf['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) {
    this['biteStart'] = 0x0;
    return;
} else {
    this['biteStart'] == 0x0 && (this['biteStart'] = _0x740c5b);
    if (this['specType'] != 0x0 && this['specType'] != undefined) {
        var _0x1f65ef = this['getSkinImageObj']('skins/' + this['getSkinPath']() + '/rattlesnake_head.png'),
            _0x3f24e8 = this['skinScale'] * 0x1,
            _0x2fdcae = this['skinRad'];
        if (_0x1f65ef) {
            _0x1d2dab['save']();
            var _0x2fdcae = this['rad'];
            _0x1d2dab['drawImage'](_0x1f65ef, -_0x2fdcae * _0x3f24e8, -_0x2fdcae * 1.2 * _0x3f24e8, 0x2 * _0x2fdcae * _0x3f24e8, 0x2 * _0x2fdcae * _0x3f24e8), _0x1d2dab['restore']();
        }
    }
    var _0x1a7dbc = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x5b1c98 = !(_0x31f3fc == 0x2) ? _0x21d673(_0x1a7dbc, 0.1, 0.2, 0x2) : 0x0,
        _0x2fdcae = this['rad'] * 1.3,
        _0x112dea = 0x0,
        _0x4e1a8c = 0x0,
        _0x97d862 = 0x0,
        _0x3889c5 = this['getSkinImageObj']('skins/' + this['getSkinPath']() + '/rattle.png');
    if (_0x3889c5) {
        _0x1d2dab['save']();
        var _0xf8251e = -(-_0x4e1a8c + _0x5b1c98) * _0x2bcbaa(-(_0x112dea - 0x5)),
            _0x3f24e8 = this['skinScale'] * 1.2;
        _0x1d2dab['rotate'](_0x2bcbaa(-_0x97d862) + _0xf8251e), _0x1d2dab['drawImage'](_0x3889c5, -_0x2fdcae * _0x3f24e8, -_0x2fdcae * 0.7 * _0x3f24e8, 0x2 * _0x2fdcae * _0x3f24e8, 0x2 * _0x2fdcae * _0x3f24e8), _0x1d2dab['restore']();
    }
}
}, _0x524adf['prototype']['getAbilityInfo'] = function (_0x2ff611) {
var _0x3f9fa = {};
return _0x3f9fa['abilName'] = 'Rattle!', _0x3f9fa['abilImg'] = 'abilities/Rattle.svg', _0x3f9fa['skinThemeID'] = this['skinThemeID'], _0x3f9fa['mopeSeasonID'] = this['mopeSeasonID'], _0x3f9fa;
};

function _0x524adf() {
_0x524adf['superClass']['call'](this, _0x4ad968);
}
window['RattleSnake'] = _0x524adf, _0x13dc56['setCustomClassForGameObjType'](_0x524adf, _0x4ad968, _0x2e0aa9);
var _0x570743 = _0x462ba0,
_0x1e3c43 = _0x4763ce;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43, _0x462ba0['prototype']['updateZ'] = function () {
this['z'] = 0x186a2;
}, _0x462ba0['prototype']['customDraw'] = function (_0x4db0f6) {
_0x1d2dab['save']();
var _0x10af0e = this['getSkinImageObj']('skins/desert/rattlesnake/' + this['speciesType'] + '/circle.png');
if (_0x10af0e) {
    var _0x497717 = _0x740c5b - this['spawnTime'],
        _0x3814c5 = _0x497717 / 0x3e8,
        _0xb8582d = 0x2,
        _0xdfc4c7 = 1.5;
    rShift = _0xdfc4c7 * Math['sin'](0x2 * Math['PI'] / _0xb8582d * _0x3814c5);
    var _0x153ee7 = _0x21d673(_0x3814c5, 5.1, 0x1, 0x1);
    _0x153ee7 = _0x29d4e1(_0x153ee7, 0x0, 0x1), _0x1d2dab['globalAlpha'] = _0x153ee7;
    var _0x4238f9 = 0x1,
        _0x4b801c = this['rad'] * 0.8;
    _0x1d2dab['drawImage'](_0x10af0e, -_0x4b801c * _0x4238f9, -_0x4b801c * _0x4238f9, 0x2 * _0x4b801c * _0x4238f9, 0x2 * _0x4b801c * _0x4238f9);
}
_0x1d2dab['restore']();
}, _0x462ba0['prototype']['getSkinImageObj'] = function (_0x3f7998) {
var _0x106516 = this['speciesType'] === 0x64 ? 0x1 : this['mopeSeasonID'],
    _0x329539 = './assets/s/' + _0x106516 + '/' + _0x3f7998;
return this['skinThemeID'] > 0x0 && (_0x329539 = './assets/t/' + this['skinThemeID'] + '/' + _0x3f7998), _0x5ace1d(_0x329539, function (_0x52ec6e) {
    console['log'](_0x52ec6e['src']);
});
};

function _0x462ba0() {
_0x462ba0['superClass']['call'](this);
}
window['SnakeRattle'] = _0x462ba0, _0x13dc56['setCustomClassForGameObjType'](_0x462ba0, _0x2c5edd, _0x57e124);
var _0x31afac = _0x31afac,
_0x1e3c43 = _0x3d6c08;
_0x31afac['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x31afac['prototype']['constructor'] = _0x31afac, _0x31afac['superClass'] = _0x1e3c43, _0x31afac['prototype']['getSkinName2'] = function () {
var _0x3f5cc5 = this['getSkinPath']() + '/vulture';
return _0x3f5cc5;
}, _0x31afac['prototype']['getSkinName'] = function () {
let _0x3921ad = this['getSkinPath']() + '/vulture';
if (this['flag_flying'] && this['flag_usingAbility']) _0x3921ad += 0x2;
else _0x3921ad += this['specType'] == 0x0 ? '' : this['specType'];
return _0x3921ad;
}, _0x31afac['prototype']['getSkinPath'] = function () {
return 'desert/vulture/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x31afac['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x31afac['prototype']['getAbilityInfo'] = function (_0x4a2b6c) {
var _0x1bb4ec = {};
return _0x1bb4ec['abilName'] = 'Fly/ Pickup Bones', _0x1bb4ec['abilImg'] = 'abilities/Fly.svg', _0x1bb4ec['skinThemeID'] = this['skinThemeID'], _0x1bb4ec['mopeSeasonID'] = this['mopeSeasonID'], _0x1bb4ec;
}, _0x31afac['prototype']['animalInfo'] = function () {
var _0x3ad03c = {};
_0x3ad03c['aniName'] = 'Vulture';
switch (this['animalSpecies']) {
case 0x1:
    _0x3ad03c['aniName'] = 'Pakistan Vulture';
    break;
case 0x64:
    _0x3ad03c['aniName'] = 'Vulgeist';
    break;
case 0xcc:
    _0x3ad03c['aniName'] = 'Acid Husk';
    break;
}
return _0x3ad03c['aniCol'] = '#FF9000', _0x3ad03c['skinName'] = this['getSkinName'](), _0x3ad03c['upgradeText'] = 'UPGRADED to ' + (this['animalSpecies'] == 0x1 ? 'Rare ' : '') + _0x3ad03c['aniName'] + '!\x0aPress W to Grab/Drop bones' + (this['animalSpecies'] == 0x1 ? ' and animals' : '') + ' on other animals,\x0a (Hint: Use ability on hills to fly) \x0aTry Eating bones too!', _0x3ad03c;
}, _0x31afac['prototype']['getHead'] = function (_0x340cf8, _0x52ed50) {
var _0x5bbd74 = this['flag_flying'] ? '1' : '1',
    _0x5bbe8a = 'skins/' + this['getSkinName2']() + '_head' + _0x5bbd74 + '.png';
return _0x5bbe8a;
}, _0x31afac['prototype']['getWing'] = function (_0x425c59, _0x1af52e, _0x20a30c) {
var _0x4754b6 = 'skins/' + this['getSkinName2']() + '_wing' + _0x1af52e + '.png';
return _0x4754b6;
}, _0x31afac['prototype']['flaps'] = 0x0, _0x31afac['prototype']['flapsMod'] = 0x3, _0x31afac['prototype']['countFlap'] = !![], _0x31afac['prototype']['canFlap'] = !(_0x31f3fc == 0x2), _0x31afac['prototype']['resumeFlapT'] = 0x0, _0x31afac['prototype']['lastFlapFrame'] = 0x0, _0x31afac['prototype']['sF'] = -0x1, _0x31afac['prototype']['wF'] = 0x1, _0x31afac['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) return;
var _0x342455 = 'skins';
if (!_0x44408d && !(_0x31f3fc == 0x2)) {
    if (!this['canFlap'] && this['flag_flying'] && _0x740c5b > this['resumeFlapT']) this['canFlap'] = !![];
} else this['canFlap'] = ![]; {
    var _0x3ad6b4 = 0x1f4 / 0x154;
    _0x1d2dab['save']();
    var _0x3e63d0 = this['flag_flying'] ? 0x2d : 0x2f,
        _0x33b8c3 = this['flag_flying'] ? 0x5a : 0x2d,
        _0x299a56 = this['flag_flying'] ? 0.2 : 0.001,
        _0x385b6e = this['flag_flying'] ? 2.5 : 2.3,
        _0x52fb58 = this['flag_flying'] ? 2.2 : 2.7,
        _0x533bb9 = this['flag_flying'] ? 1.2 : 0x1,
        _0x31c714 = this['flag_flying'] ? 0.35 : 0.2,
        _0x3024e9 = this['flag_flying'] ? '' : '2',
        _0x359ecb = (_0x740c5b - this['resumeFlapT']) / 0x3e8,
        _0x31ca0f = this['canFlap'] ? _0x21d673(_0x359ecb, _0x533bb9, _0x31c714, 0x2) : this['birdNoAnimationFlyWingAngle'];
    if (this['flag_flying'] && _0x31ca0f < 0x0 && this['countFlap']) this['countFlap'] = ![], this['flaps']++, this['flaps'] % this['flapsMod'] == 0x0 && (this['lastFlapFrame'] = _0x31ca0f, this['canFlap'] = ![], this['resumeFlapT'] = +new Date() + 0x5dc);
    else _0x31ca0f > 0x0 && !this['countFlap'] && (this['countFlap'] = !![]);
    if (!this['canFlap']) _0x31ca0f = this['lastFlapFrame'];
    _0x385b6e += this['sF'] * _0x31ca0f, _0x52fb58 += this['wF'] * _0x31ca0f;
    var _0x3284cc = this['getSkinImageObj'](this['getWing']('vulture', _0x3024e9 + 0x1, ![]));
    if (_0x3284cc) {
        _0x1d2dab['save']();
        var _0x29be50 = 0x1;
        _0x29be50 = -(-_0x299a56 + _0x31ca0f);
        var _0x280493 = _0x29be50 * _0x2bcbaa(_0x33b8c3),
            _0x8adda7 = this['rad'] * 0.8;
        _0x1d2dab['rotate'](_0x2bcbaa(_0x3e63d0) + _0x280493);
        var _0x137208 = 0x0,
            _0x576a7e = this['rad'],
            _0x9258ee = _0x8adda7 * _0x52fb58 * 0.62,
            _0x29b05b = _0x8adda7 * _0x385b6e,
            _0x196c0f = 0.2,
            _0x332bfa = 1.7;
        _0x1d2dab['drawImage'](_0x3284cc, _0x137208 + _0x9258ee * -_0x196c0f, _0x576a7e + _0x29b05b * -_0x332bfa, _0x9258ee, _0x29b05b), _0x1d2dab['restore']();
    }
    var _0x3284cc = this['getSkinImageObj'](this['getWing']('vulture', _0x3024e9 + 0x2, ![]));
    if (_0x3284cc) {
        _0x1d2dab['save']();
        var _0x29be50 = 0x1;
        _0x29be50 = -(-_0x299a56 + _0x31ca0f);
        var _0x280493 = _0x29be50 * _0x2bcbaa(-_0x33b8c3),
            _0x8adda7 = this['rad'] * 0.8;
        _0x1d2dab['rotate'](_0x2bcbaa(-_0x3e63d0) + _0x280493);
        var _0x137208 = 0x0,
            _0x576a7e = this['rad'],
            _0x9258ee = _0x8adda7 * _0x52fb58 * 0.62,
            _0x29b05b = _0x8adda7 * _0x385b6e,
            _0x196c0f = 0.8,
            _0x332bfa = 1.7;
        _0x1d2dab['drawImage'](_0x3284cc, _0x137208 + _0x9258ee * -_0x196c0f, _0x576a7e + _0x29b05b * -_0x332bfa, _0x9258ee, _0x29b05b), _0x1d2dab['restore']();
    }
    _0x1d2dab['restore']();
    if (this['specType'] != 0x0 && this['specType'] != undefined) {
        var _0x1bf06e = this['getSkinImageObj'](this['getHead']('vulture', ![]));
        if (_0x1bf06e) {
            var _0x8adda7 = this['rad'],
                _0x4ff0f6 = 0x0;
            if (this['flag_flying']) _0x4ff0f6 = (-_0x8adda7 + _0x8adda7 * 0.4) * _0x3ad6b4;
            else _0x4ff0f6 = (-_0x8adda7 + _0x8adda7 * 0.1) * _0x3ad6b4;
            _0x1d2dab['save'](), _0x1d2dab['drawImage'](_0x1bf06e, -_0x8adda7 * _0x3ad6b4, _0x4ff0f6, 0x2 * _0x8adda7 * _0x3ad6b4, 0x2 * _0x8adda7 * _0x3ad6b4), _0x1d2dab['restore']();
        }
    }
}
};

function _0x31afac() {
_0x31afac['superClass']['call'](this, _0x4ad968);
if (this['resumeFlapT'] == 0x0) this['resumeFlapT'] = +new Date();
}
window['Vulture'] = _0x31afac, _0x13dc56['setCustomClassForGameObjType'](_0x31afac, _0x4ad968, _0x53017e);
var _0x1e3c43 = _0x131218;
_0xedf6d2['prototype'] = Object['create'](_0x1e3c43['prototype']), _0xedf6d2['prototype']['constructor'] = _0xedf6d2, _0xedf6d2['superClass'] = _0x1e3c43, _0xedf6d2['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0xedf6d2['prototype']['customDraw'] = function (_0x477bd7) {
var _0x3e66cf = 'gameobj/' + this['oType'] + '/' + this['oType'] + '.png',
    _0x47d757 = this['getSkinImageObj'](_0x3e66cf);
if (_0x47d757) {
    _0x1d2dab['save']();
    var _0x4d91f4 = this['rad'] * 0x1;
    _0x1d2dab['rotate'](this['rPer'] * 0x2 * Math['PI']), _0x1d2dab['drawImage'](_0x47d757, -_0x4d91f4, -_0x4d91f4, _0x4d91f4 * 0x2, _0x4d91f4 * 0x2), _0x1d2dab['restore']();
}
};

function _0xedf6d2() {
_0xedf6d2['superClass']['call'](this, _0x1ed2ef);
}
window['Bone'] = _0xedf6d2, _0x13dc56['setCustomClassForGameObjType'](_0xedf6d2, _0x1ed2ef);
var _0x1e3c43 = _0x3d6c08;
_0x40ecbb['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x40ecbb['prototype']['constructor'] = _0x40ecbb, _0x40ecbb['superClass'] = _0x1e3c43, _0x40ecbb['prototype']['animalInfo'] = function () {
var _0x3df916 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x3df916['aniName'] = 'Bison';
    break;
case 0xc8:
    _0x3df916['aniName'] = 'Titan Bison';
    break;
case 0xca:
    _0x3df916['aniName'] = 'Minotaur';
    break;
}
return _0x3df916['aniCol'] = '#FF9000', _0x3df916['skinName'] = this['getSkinName'](), _0x3df916['upgradeText'] = 'UPGRADED to ' + _0x3df916['aniName'] + '!\x0aHold W to charge and toss opponent in air.', _0x3df916;
}, _0x40ecbb['prototype']['getSpeciesPath'] = function (_0x497130) {
return 'desert/' + _0x497130 + '/' + this['animalSpecies'];
}, _0x40ecbb['prototype']['getAbilityInfo'] = function (_0x3611a5) {
var _0x2c963e = {};
return _0x2c963e['abilName'] = 'Gores!', _0x2c963e['abilImg'] = 'abilities/Gore.svg', _0x2c963e['skinThemeID'] = this['skinThemeID'], _0x2c963e['mopeSeasonID'] = this['mopeSeasonID'], _0x2c963e;
}, _0x40ecbb['prototype']['getSkinName'] = function () {
return this['getSkin']() + '/bison' + (this['specType'] == 0x0 ? '' : 0x1);
}, _0x40ecbb['prototype']['getSkin'] = function () {
return 'desert/bison/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x40ecbb['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x40ecbb['prototype']['drawUnderSkinImgOutline'] = function () {
_0x40ecbb['superClass']['prototype']['drawUnderSkinImgOutline']['call'](this), this['flag_usingAbility'] && this['isHitingAnimal'] && this['showBackLeg']();
}, _0x40ecbb['prototype']['isHitingAnimal'] = ![], _0x40ecbb['prototype']['drawSkinCustomization'] = function () {
if (this['flag_usingAbility']) {
    if (this['specType'] != 0x0 && this['specType'] != undefined) {
        if (!this['isHitingAnimal'] && this['specType'] == 0x2) this['isHitingAnimal'] = !![]; {
            var _0x36fc14 = this['getSkinImageObj']('skins/' + this['getSkin']() + '/body_front.png'),
                _0x3bef52 = this['skinScale'] * 0x1,
                _0x304e5f = this['skinRad'];
            if (_0x36fc14) {
                frame = 0x0, _0x1d2dab['save']();
                var _0x304e5f = this['rad'];
                _0x1d2dab['drawImage'](_0x36fc14, -_0x304e5f * _0x3bef52, -_0x304e5f * _0x3bef52, 0x2 * _0x304e5f * _0x3bef52, 0x2 * _0x304e5f * _0x3bef52), _0x1d2dab['restore']();
            }
        }
        var _0x36fc14 = this['getSkinImageObj']('skins/' + this['getSkin']() + '/bison_head' + this['specType'] + '.png'),
            _0x3bef52 = this['skinScale'] * 1.01,
            _0x304e5f = this['skinRad'];
        if (_0x36fc14) {
            frame = 0x0, _0x1d2dab['save']();
            var _0x304e5f = this['rad'];
            _0x1d2dab['drawImage'](_0x36fc14, -_0x304e5f * _0x3bef52, (-_0x304e5f + _0x304e5f * 0.2) * _0x3bef52 + frame, 0x2 * _0x304e5f * _0x3bef52, 0x2 * _0x304e5f * _0x3bef52), _0x1d2dab['restore']();
        }
    }
} else this['legYAnchorF'] = 0x0, this['legHeightF'] = 0x0, this['isHitingAnimal'] = ![];
}, _0x40ecbb['prototype']['legYAnchorF'] = 2.3, _0x40ecbb['prototype']['legStretchW'] = 1.3, _0x40ecbb['prototype']['legStretchH'] = 0x1, _0x40ecbb['prototype']['legHeightF'] = 0x14, _0x40ecbb['prototype']['showBackLeg'] = function () {
var _0x3edd4a = (_0x740c5b - this['spawnTime']) / 0x3e8,
    _0x23a245 = _0x21d673(_0x3edd4a, 0.3, 0x1, 0.5),
    _0x97fb6d = 'front';
if (_0x23a245 <= 0.5 && _0x23a245 > 0.1) _0x97fb6d = 'front', this['legYAnchorF'] = 0x1, this['legHeightF'] = 0x14;
else _0x23a245 > 0.5 && (_0x97fb6d = 'back', this['legYAnchorF'] = 2.3, this['legHeightF'] = -0x5);
_0x1d2dab['save']();
var _0x373624 = _0x1d2dab['globalAlpha'];
_0x1d2dab['globalAlpha'] = 0.1 * _0x373624, _0x444e67(0x0, 0x0, this['rad'], '#755A2A'), _0x1d2dab['globalAlpha'] = 0x1 * _0x373624;
var _0x4868dd = this['getSkinImageObj']('skins/' + this['getSkin']() + '/' + _0x97fb6d + '_legs.png');
if (_0x4868dd) {
    var _0x11613c = _0x23a245,
        _0x51c2f3 = this['rad'] * 0.6,
        _0x1b2927 = 0x0,
        _0x463833 = this['rad'],
        _0x51d58b = _0x51c2f3 * 0x2 * this['legStretchW'],
        _0x2031dd = _0x51c2f3 * 0x2 * _0x11613c,
        _0x5e82c0 = 0.5,
        _0x4030b0 = 0.95;
    _0x1d2dab['drawImage'](_0x4868dd, _0x1b2927 + _0x51d58b * -_0x5e82c0, _0x463833 + (_0x2031dd + this['legHeightF']) * (-_0x4030b0 * this['legYAnchorF']), _0x51d58b, _0x2031dd * this['legStretchH']);
}
_0x1d2dab['restore']();
};

function _0x40ecbb() {
_0x40ecbb['superClass']['call'](this, _0x4ad968);
}
window['Bison'] = _0x40ecbb, _0x13dc56['setCustomClassForGameObjType'](_0x40ecbb, _0x4ad968, _0x1f6369);
var _0x1e3c43 = _0x3d6c08;
_0x31dd92['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x31dd92['prototype']['constructor'] = _0x31dd92, _0x31dd92['superClass'] = _0x1e3c43, _0x31dd92['prototype']['animalInfo'] = function () {
var _0x3b42c0 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x3b42c0['aniName'] = 'Komodo Dragon';
    break;
case 0x1:
    _0x3b42c0['aniName'] = 'Golden Komodo';
    break;
case 0x2:
    _0x3b42c0['aniName'] = 'Night Komodo';
    break;
case 0xc8:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x3b42c0['aniName'] = 'Dowager Varande';
        break;
    case 0x1:
        _0x3b42c0['aniName'] = 'Emepror Varande';
        break;
    }
    break;
case 0xca:
    _0x3b42c0['aniName'] = 'Galaxy Komodo Dragon';
    break;
}
return _0x3b42c0['aniCol'] = '#FF9000', _0x3b42c0['skinName'] = this['getSkinName'](), _0x3b42c0['upgradeText'] = 'UPGRADED to ' + _0x3b42c0['aniName'] + '!\x0a' + _0x3b42c0['aniName'] + ' have very poisonous bite. Press W to bite! Also eat bones.', _0x3b42c0;
}, _0x31dd92['prototype']['getAbilityInfo'] = function (_0x3be696) {
var _0x4b7c26 = {};
return _0x4b7c26['abilName'] = 'Poison Bite\x0a(Sweat Prey)', _0x4b7c26['abilImg'] = 'abilities/Bite.svg', _0x4b7c26['skinThemeID'] = this['skinThemeID'], _0x4b7c26['mopeSeasonID'] = this['mopeSeasonID'], _0x4b7c26;
}, _0x31dd92['prototype']['getSkinName'] = function () {
return this['getSkinPath']() + '/komododragon';
}, _0x31dd92['prototype']['getSkinPath'] = function () {
return 'desert/komododragon/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x31dd92['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return this['animalSpecies'] == 0xc8 ? '/' + this['animalSubSpecies'] : '';
}, _0x31dd92['prototype']['updateZ'] = function () {
if (this['flag_eff_grabbedByFlytrap']) this['z'] = 0x44c + this['rad'];
else {
    if (this['flag_usingAbility'] && !this['flag_underWater']) this['z'] = 0x4b0 + this['rad'];
    else {
        if (this['flag_flying'] || this['flag_eff_tossedInAir']) {
            this['z'] = 0x2710;
            if (this['flag_isGrabbed']) this['z'] -= this['rad'];
            else this['z'] += this['rad'];
        } else this['z'] = this['rad'];
    }
}
}, _0x31dd92['prototype']['straightTongueOffsetY'] = -0.45, _0x31dd92['prototype']['straightTongueScaleF'] = 1.8, _0x31dd92['prototype']['drawUnderSkinImg'] = function () {
if (this['specType'] != 0x0) return;
this['setSkinScale']();
if (+new Date() < this['spawnTime'] + 0x1388) return;
if (!this['flag_usingAbility'] && !this['wasLicking'] && +new Date() > this['nextShowT']) {
    var _0x397332 = this['skinScale'] * this['straightTongueScaleF'],
        _0x573a0e = this['skinRad'],
        _0x7cce4b = this['getSkinImageObj']('skins/' + this['getSkinPath']() + '/tongue.png'),
        _0x275660 = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x23cf01 = _0x21d673(_0x275660, 0.7, 0xc, 0.5);
    _0x7cce4b && _0x1d2dab['drawImage'](_0x7cce4b, -_0x573a0e * _0x397332, (-_0x573a0e + _0x573a0e * this['straightTongueOffsetY']) * _0x397332 + _0x23cf01, 0x2 * _0x573a0e * _0x397332, 0x2 * _0x573a0e * _0x397332);
}
}, _0x31dd92['prototype']['tongueAnimationDur'] = 0x1, _0x31dd92['prototype']['tongueScaleF'] = 1.5, _0x31dd92['prototype']['tongueAncherY'] = -0.21, _0x31dd92['prototype']['showTongue'] = !![], _0x31dd92['prototype']['nextShowT'] = 0x0, _0x31dd92['prototype']['lastLickSide'] = 0x0, _0x31dd92['prototype']['wasLicking'] = ![], _0x31dd92['prototype']['isLicking'] = ![], _0x31dd92['prototype']['lickFaceOffsetY'] = -0.3, _0x31dd92['prototype']['biteStart'] = 0x0;
var _0x2e0803 = 0x0,
_0x485205 = 1.2;
_0x31dd92['prototype']['drawSkinCustomization'] = function () {
this['setSkinScale']();
var _0x58df76 = -0.15;
console['log']('specTpye: ' + this['specType']);
if (this['flag_usingAbility']) {
    this['biteStart'] == 0x0 && (this['biteStart'] = _0x740c5b);
    if (this['specType'] == 0x1) {
        {
            var _0x4b69aa = this['getSkinImageObj']('skins/' + this['getSkinPath']() + '/komododragon_neck.png');
            if (_0x4b69aa) {
                var _0x4f831d = (_0x740c5b - this['biteStart']) / 0x3e8,
                    _0x3355ae = 0x5,
                    _0x158eef = 0x1,
                    _0xc0f118 = _0x21d673(_0x4f831d, _0x158eef, _0x3355ae, 0x1);
                _0x1d2dab['save']();
                var _0x179ea5 = this['rad'],
                    _0x34026d = this['skinScale'] * 0x1;
                _0x1d2dab['drawImage'](_0x4b69aa, -_0x179ea5 * _0x34026d, (-_0x179ea5 + _0x179ea5 * -0.05) * _0x34026d + _0xc0f118, 0x2 * _0x179ea5 * _0x34026d, 0x2 * _0x179ea5 * _0x34026d), _0x1d2dab['restore']();
            }
        } {
            if (!this['flag_underWater']) {
                var _0x3f5225 = 'skins/' + this['getSkinPath']() + '/komododragon_tail.png',
                    _0xa18f2c = this['getSkinImageObj'](_0x3f5225);
                if (_0xa18f2c) {
                    var _0x34026d = this['skinScale'] * _0x485205,
                        _0x179ea5 = this['skinRad'];
                    _0x1d2dab['drawImage'](_0xa18f2c, -_0x179ea5 * _0x34026d, (-_0x179ea5 + _0x179ea5 * _0x2e0803) * _0x34026d, 0x2 * _0x179ea5 * _0x34026d, 0x2 * _0x179ea5 * _0x34026d);
                }
            }
        } {
            var _0x2fdae8 = this['getSkinImageObj']('skins/' + this['getSkinPath']() + '/komododragon_attack.png'),
                _0x34026d = this['skinScale'] * 0x1,
                _0x179ea5 = this['skinRad'],
                _0x3355ae = 0xc,
                _0x158eef = 0.9,
                _0xc0f118 = _0x21d673(_0x4f831d, _0x158eef, _0x3355ae, 0x1);
            _0x2fdae8 && (_0x1d2dab['save'](), _0x1d2dab['drawImage'](_0x2fdae8, -_0x179ea5 * _0x34026d, -_0x179ea5 * _0x34026d + _0xc0f118, 0x2 * _0x179ea5 * _0x34026d, 0x2 * _0x179ea5 * _0x34026d), _0x1d2dab['restore']());
        }
    }
}
if (this['specType'] == 0x0) {
    if (!this['flag_underWater']) {
        var _0x3f5225 = 'skins/' + this['getSkinPath']() + '/komododragon_tail.png',
            _0xa18f2c = this['getSkinImageObj'](_0x3f5225);
        if (_0xa18f2c) {
            var _0x34026d = this['skinScale'] * _0x485205,
                _0x179ea5 = this['skinRad'];
            _0x1d2dab['drawImage'](_0xa18f2c, -_0x179ea5 * _0x34026d, (-_0x179ea5 + _0x179ea5 * _0x2e0803) * _0x34026d, 0x2 * _0x179ea5 * _0x34026d, 0x2 * _0x179ea5 * _0x34026d);
        }
        var _0x2fdae8 = this['getSkinImageObj']('skins/' + this['getSkinPath']() + '/komododragon_attack.png'),
            _0x34026d = this['skinScale'] * 0x1,
            _0x179ea5 = this['skinRad'],
            _0x3355ae = 0xc,
            _0x158eef = 0.9,
            _0xc0f118 = _0x21d673(_0x4f831d, _0x158eef, _0x3355ae, 0x1);
        _0x2fdae8 && (_0x1d2dab['save'](), _0x1d2dab['drawImage'](_0x2fdae8, -_0x179ea5 * _0x34026d, -_0x179ea5 * _0x34026d + _0xc0f118, 0x2 * _0x179ea5 * _0x34026d, 0x2 * _0x179ea5 * _0x34026d), _0x1d2dab['restore']());
        _0x1d2dab['save']();
        var _0x3f5225 = 'skins/' + this['getSkinPath']() + '/licked_face.png',
            _0xa18f2c = this['getSkinImageObj'](_0x3f5225);
        if (_0xa18f2c) {
            var _0x9e72e1 = this['lickedAmt'] / 0x64;
            _0x1d2dab['globalAlpha'] = _0x9e72e1, _0x1d2dab['drawImage'](_0xa18f2c, -_0x179ea5 * _0x34026d, (-_0x179ea5 + _0x179ea5 * _0x58df76) * _0x34026d + _0xc0f118, 0x2 * _0x179ea5 * _0x34026d, 0x2 * _0x179ea5 * _0x34026d);
        }
        _0x1d2dab['restore'](), _0x1d2dab['save']();
        var _0x3f5225 = 'skins/' + this['getSkinPath']() + '/komododragon_head.png',
            _0xa18f2c = this['getSkinImageObj'](_0x3f5225);
        if (_0xa18f2c) {
            var _0x34026d = this['skinScale'],
                _0x179ea5 = this['skinRad'];
            _0x1d2dab['drawImage'](_0xa18f2c, -_0x179ea5 * _0x34026d, -_0x179ea5 * _0x34026d, 0x2 * _0x179ea5 * _0x34026d, 0x2 * _0x179ea5 * _0x34026d);
        }
        _0x1d2dab['restore']();
    }
}
}, _0x31dd92['prototype']['lickSide'] = 0x0, _0x31dd92['prototype']['lickedAmt'] = 0x0, _0x31dd92['prototype']['readCustomData_onNewlyVisible'] = function (_0x4243d4) {
_0x31dd92['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x4243d4);
var _0x102fc5 = _0x4243d4['readUInt8']() == 0x1;
this['nextShowT'] = +new Date() + 0xbb8, this['isLicking'] = _0x102fc5, this['lickSide'] = _0x4243d4['readUInt8'](), this['lickedAmt'] = _0x4243d4['readUInt8']();
}, _0x31dd92['prototype']['customUpdatedProperty'] = function (_0x259bc8, _0x2e15d6) {
if (_0x259bc8 == _0x1c7a29) {
    var _0x56a56f = _0x2e15d6['readUInt8']() == 0x1;
    this['nextShowT'] = +new Date() + 0xbb8, this['isLicking'] = _0x56a56f;
    if (!this['wasLicking'] && this['isLicking']) this['wasLicking'] = !![];
} else {
    if (_0x259bc8 == _0x1d8e34) this['lickedAmt'] = _0x2e15d6['readUInt8']();
    else _0x259bc8 == _0x4a3129 && (this['lickSide'] = _0x2e15d6['readUInt8']());
}
};

function _0x31dd92() {
_0x31dd92['superClass']['call'](this, _0x4ad968);
}
window['KomodoDragon'] = _0x31dd92, _0x13dc56['setCustomClassForGameObjType'](_0x31dd92, _0x4ad968, _0x5af7f2);
var _0x1e3c43 = _0x131218;
_0x3541ca['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x3541ca['prototype']['constructor'] = _0x3541ca, _0x3541ca['superClass'] = _0x1e3c43, _0x3541ca['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x3541ca['prototype']['customDraw'] = function (_0x1e6b7f) {
_0x1d2dab['save'](), this['drawOutlinedCircle']('', _0x22bf24), _0x1d2dab['restore']();
};

function _0x3541ca() {
_0x3541ca['superClass']['call'](this, _0x29e44b);
}
window['SweatPoison'] = _0x3541ca, _0x13dc56['setCustomClassForGameObjType'](_0x3541ca, _0x29e44b);
var _0x1e3c43 = _0x131218;
_0x4c606['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x4c606['prototype']['constructor'] = _0x4c606, _0x4c606['superClass'] = _0x1e3c43, _0x4c606['prototype']['updateZ'] = function () {
this['z'] = -0x9a;
}, _0x4c606['prototype']['customDraw'] = function (_0x285a56) {
_0x1d2dab['save'](), this['rPer'] = 0x0;
var _0xf7cb3d = _0x22bf24;
this['drawOutlinedCircle']('', _0xf7cb3d);
var _0x2b7dc5 = 0x1;
if (!(_0x31f3fc == 0x2)) _0x1d2dab['rotate'](this['rPer'] * 0x2 * Math['PI']);
var _0x53a330 = 0x0,
    _0x3643d5 = (_0x740c5b - this['spawnTime']) / 0x3e8,
    _0xb710e6 = 0x7,
    _0xb26618 = 0x4;
_0x53a330 = _0xb26618 * Math['sin'](0x2 * Math['PI'] / _0xb710e6 * _0x3643d5), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x2b7dc5 + _0x53a330), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), !(_0x31f3fc == 0x2) && (_0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x2b7dc5 + _0x53a330), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x53a330), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x53a330), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x53a330), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x53a330), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), this['rad'] > 0x32 && (_0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0xa, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill']())), _0x1d2dab['restore']();
};

function _0x4c606() {
_0x4c606['superClass']['call'](this, _0x41a642);
}
window['PoisonPool'] = _0x4c606, _0x13dc56['setCustomClassForGameObjType'](_0x4c606, _0x41a642);
var _0x1e3c43 = _0x3d6c08;
_0x3da427['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x3da427['prototype']['constructor'] = _0x3da427, _0x3da427['superClass'] = _0x1e3c43, _0x3da427['prototype']['updateZ'] = function () {
if (this['flag_underWater']) this['z'] = -0x64;
else {
    if (this['flag_isInArena']) this['z'] = 0x2710 + this['rad'];
    else {
        if (this['flag_eff_tossedInAir']) this['z'] = 0x4b0 + this['rad'];
        else this['z'] = 0x4b0 + this['rad'];
    }
}
}, _0x3da427['prototype']['animalInfo'] = function () {
var _0x4dbb57 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x4dbb57['aniName'] = 'Giant Scorpion';
    break;
case 0x1:
    _0x4dbb57['aniName'] = 'Golden Scorpion';
    break;
case 0x2:
    _0x4dbb57['aniName'] = 'Carnelian Scorpion';
    break;
case 0xcc:
    _0x4dbb57['aniName'] = 'Selamorph Scorpion';
    break;
case 0xdc:
    _0x4dbb57['aniName'] = 'Nebuladon Scorpion';
    break;
}
return _0x4dbb57['aniCol'] = '#FF9000', _0x4dbb57['skinName'] = 'scorpion', _0x4dbb57['upgradeText'] = 'UPGRADED to ' + _0x4dbb57['aniName'] + '!\x0aSting and Shiver your prey to death.\x0a(Press W to Sting)', _0x4dbb57;
}, _0x3da427['prototype']['getAbilityInfo'] = function (_0x2c9927) {
var _0x49be1c = {};
return _0x49be1c['abilName'] = 'Sting!\x0a(Shivers Prey)', _0x49be1c['abilImg'] = 'abilities/Sting.svg', _0x49be1c['skinThemeID'] = this['skinThemeID'], _0x49be1c['mopeSeasonID'] = this['mopeSeasonID'], _0x49be1c;
}, _0x3da427['prototype']['getSkinName'] = function () {
var _0x19b473 = 'desert/scorpion/' + this['animalSpecies'] + '/scorpion';
return _0x19b473 += this['specType'] == 0x0 ? '' : this['specType'], _0x19b473;
}, _0x3da427['prototype']['stingerScaleF'] = 0.7, _0x3da427['prototype']['stingerOffsetY'] = -0.6, _0x3da427['prototype']['poison'] = 0x32, _0x3da427['prototype']['clawAnimation'] = null, _0x3da427['prototype']['stingAnimation'] = null, _0x3da427['prototype']['stingerTailNormal'] = null, _0x3da427['prototype']['stingerTail'] = null, _0x3da427['prototype']['stingerAttack'] = null, _0x3da427['prototype']['stingerAttackFull'] = null, _0x3da427['prototype']['stingerNormal'] = null, _0x3da427['prototype']['stingerNormalFull'] = null, _0x3da427['prototype']['isUsingAbility'] = ![], _0x3da427['prototype']['drawSkinCustomization'] = function () {
!this['flag_usingAbility'] && (this['clawAnimation'] = null, this['stingAnimation'] = null, this['isUsingAbility'] = ![]);
!this['isUsingAbility'] && this['flag_eff_aniInClaws'] && (this['isUsingAbility'] = !![], this['stingAnimation'] = null);
this['isUsingAbility'] && !this['flag_usingDiveAbility'] && (this['stingAnimation'] == null && (this['stingAnimation'] = new _0xf2d657(this, 0x1, _0xf2d657['bow'], {
    'v1': 0x5
}), this['stingAnimation']['onFrameEntered'] = function (_0x2f9a3a) {
    _0x1d2dab['save']();
    var _0x49003e = this['forObj']['skinScale'] * this['forObj']['stingerScaleF'],
        _0x593cfd = this['forObj']['rad'];
    if (this['forObj']['stingerTailAttack']) _0x1d2dab['drawImage'](this['forObj']['stingerTailAttack'], -_0x593cfd * _0x49003e, (-_0x593cfd + _0x593cfd * this['forObj']['stingerOffsetY']) * _0x49003e, 0x2 * _0x593cfd * _0x49003e, 0x2 * (_0x593cfd + _0x593cfd * _0x2f9a3a) * _0x49003e);
    if (this['forObj']['stingerTail']) _0x1d2dab['drawImage'](this['forObj']['stingerTail'], -_0x593cfd * _0x49003e, (-_0x593cfd + _0x593cfd * _0x2f9a3a) * _0x49003e, 0x2 * _0x593cfd * _0x49003e, 0x2 * _0x593cfd * _0x49003e);
    if (this['forObj']['stingerAttack']) _0x1d2dab['drawImage'](this['forObj']['stingerAttack'], -_0x593cfd * _0x49003e, (-_0x593cfd + _0x593cfd * _0x2f9a3a) * _0x49003e, 0x2 * _0x593cfd * _0x49003e, 0x2 * _0x593cfd * _0x49003e);
    var _0x479a21 = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x2a1608 = _0x21d673(_0x479a21, 0x5, 0x1, 0x1),
        _0x26b0b4 = Math['max'](0x0, _0x2a1608);
    _0x1d2dab['globalAlpha'] = _0x26b0b4 * Math['max'](0x0, this['poison'] / 0x64);
    if (this['forObj']['stingerAttackFull']) _0x1d2dab['drawImage'](this['forObj']['stingerAttackFull'], -_0x593cfd * _0x49003e, (-_0x593cfd + _0x593cfd * _0x2f9a3a) * _0x49003e, 0x2 * _0x593cfd * _0x49003e, 0x2 * _0x593cfd * _0x49003e);
    _0x1d2dab['restore']();
}), this['stingAnimation'] && this['stingAnimation']['run']());
if (this['stingAnimation'] == null || this['stingAnimation']['hasStopped']) {
    if (!this['flag_underWater'] && !this['flag_usingDiveAbility']) {
        if (this['stingerTailNormal'] != null && this['stingerNormalFull'] != null) {
            var _0x4ed9b6 = this['skinScale'] * this['stingerScaleF'],
                _0x428e67 = this['skinRad'],
                _0x1b1b8a = (_0x740c5b - this['spawnTime']) / 0x3e8,
                _0x113508 = 0x3,
                _0x24504b = 1.5,
                _0x55210e = 0x0,
                _0x3875ee = 0x0;
            !_0x44408d && !(_0x31f3fc == 0x2) && (_0x55210e = _0x21d673(_0x1b1b8a, _0x24504b, _0x113508, 0x2), _0x3875ee = _0x21d673(_0x1b1b8a, _0x24504b, 0x1, 0x2));
            _0x1d2dab['save']();
            var _0x428e67 = this['rad'] - _0x55210e * 0.5;
            _0x1d2dab['drawImage'](this['stingerTailNormal'], -_0x428e67 * _0x4ed9b6, (-_0x428e67 + _0x428e67 * this['stingerOffsetY']) * _0x4ed9b6 + _0x55210e * -_0x3875ee, 0x2 * _0x428e67 * _0x4ed9b6, 0x2 * _0x428e67 * _0x4ed9b6);
            var _0x1b1b8a = (_0x740c5b - this['spawnTime']) / 0x3e8,
                _0x272568 = _0x21d673(_0x1b1b8a, 0x5, 0x1, 0x1),
                _0x5e27aa = Math['max'](0x0, _0x272568);
            _0x1d2dab['globalAlpha'] = _0x5e27aa * Math['max'](0x0, this['poison'] / 0x64), _0x1d2dab['drawImage'](this['stingerNormalFull'], -_0x428e67 * _0x4ed9b6, (-_0x428e67 + _0x428e67 * this['stingerOffsetY']) * _0x4ed9b6 + _0x55210e * -_0x3875ee, 0x2 * _0x428e67 * _0x4ed9b6, 0x2 * _0x428e67 * _0x4ed9b6), _0x1d2dab['restore']();
        }
    }
}
}, _0x3da427['prototype']['drawWhenUnderwater'] = function () {
this['drawUnderwaterCustomization'](0x1, 1.1);
}, _0x3da427['prototype']['tailOffsetY'] = -0.25, _0x3da427['prototype']['tailScaleF'] = 1.2;
var _0x2bd980 = 0x4,
_0x302a75 = 0.1;
_0x3da427['prototype']['drawUnderSkinImg'] = function () {
var _0x27517a = 'skins/desert/scorpion/' + this['animalSpecies'] + '/tail_back.png',
    _0xce5ca7 = this['getSkinImageObj'](_0x27517a);
if (_0xce5ca7) {
    var _0x54e201 = 0x0;
    if (this['stingAnimation']) {
        if (this['stingAnimation']['frame'] < 0.5) _0x54e201 = -this['stingAnimation']['frame'] * 0.3;
    }
    var _0x483df0 = this['skinScale'] * this['tailScaleF'],
        _0x11af90 = this['skinRad'];
    _0x1d2dab['drawImage'](_0xce5ca7, -_0x11af90 * _0x483df0, (-_0x11af90 + _0x11af90 * this['tailOffsetY']) * _0x483df0, 0x2 * _0x11af90 * _0x483df0, 0x2 * (_0x11af90 + _0x11af90 * _0x54e201) * _0x483df0);
}
if (this['flag_usingAbility'] && !this['flag_underWater']) {
    this['clawAnimation'] == null && (this['clawAnimation'] = new _0xf2d657(this, 0.9, _0xf2d657['bow'], {
        'v1': _0x2bd980
    }), this['clawAnimation']['keepLastFrame'] = !![], this['clawAnimation']['onFrameEntered'] = function (_0x4fbd99) {
        var _0x464334 = 0x0;
        if (_0x4fbd99 < 0.5) _0x464334 = -_0x4fbd99;
        var _0xe10673 = 'skins/desert/scorpion/' + this['forObj']['animalSpecies'] + '/arms.png';
        this['forObj']['flag_eff_aniInClaws'] && (_0xe10673 = 'skins/desert/scorpion/' + this['forObj']['animalSpecies'] + '/arms-grabbed.png');
        var _0x2121ca = this['forObj']['getSkinImageObj'](_0xe10673);
        if (_0x2121ca) {
            var _0x1c64ee = this['forObj']['skinScale'] * this['forObj']['tailScaleF'],
                _0x2265d7 = this['forObj']['skinRad'];
            !this['hasStopped'] && this['timePassed'] < 0.75 ? (_0x302a75 = _0x464334, _0x1d2dab['drawImage'](_0x2121ca, -_0x2265d7 * _0x1c64ee, (-_0x2265d7 + _0x2265d7 * _0x464334) * _0x1c64ee, 0x2 * _0x2265d7 * _0x1c64ee, 0x2 * _0x2265d7 * _0x1c64ee)) : _0x1d2dab['drawImage'](_0x2121ca, -_0x2265d7 * _0x1c64ee, (-_0x2265d7 + _0x2265d7 * _0x302a75) * _0x1c64ee, 0x2 * _0x2265d7 * _0x1c64ee, 0x2 * _0x2265d7 * _0x1c64ee);
        }
    });
    if (this['clawAnimation'] != null) this['clawAnimation']['run']();
}
}, _0x3da427['prototype']['readCustomData_onNewlyVisible'] = function (_0x186cd0) {
_0x3da427['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x186cd0), this['poison'] = _0x186cd0['readUInt8']();
}, _0x3da427['prototype']['customUpdatedProperty'] = function (_0x302a5a, _0xbe4f58) {
_0x302a5a == _0x1d8e34 && (this['poison'] = _0xbe4f58['readUInt8']());
};

function _0x3da427() {
_0x3da427['superClass']['call'](this, _0x4ad968);
}
_0x3da427['prototype']['preLoad'] = function () {
this['getSkinImageObj']('skins/desert/scorpion/' + this['animalSpecies'] + '/scorpion1.png'), this['stingerTailNormal'] = this['getSkinImageObj']('skins/desert/scorpion/' + this['animalSpecies'] + '/stinger_normal.png'), this['stingerTail'] = this['getSkinImageObj']('skins/desert/scorpion/' + this['animalSpecies'] + '/stinger_tail.png'), this['stingerTailAttack'] = this['getSkinImageObj']('skins/desert/scorpion/' + this['animalSpecies'] + '/attack_tail.png'), this['stingerAttack'] = this['getSkinImageObj']('skins/desert/scorpion/' + this['animalSpecies'] + '/attack_stinger_dull.png'), this['stingerAttackFull'] = this['getSkinImageObj']('skins/desert/scorpion/' + this['animalSpecies'] + '/attack_stinger_full.png'), this['stingerNormal'] = this['getSkinImageObj']('skins/desert/scorpion/' + this['animalSpecies'] + '/normal_stinger_dull.png'), this['stingerNormalFull'] = this['getSkinImageObj']('skins/desert/scorpion/' + this['animalSpecies'] + '/normal_stinger_full.png');
}, window['GiantScorpion'] = _0x3da427, _0x13dc56['setCustomClassForGameObjType'](_0x3da427, _0x4ad968, _0x16390e);
var _0x1e3c43 = _0x3d6c08;
_0x3cddb9['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x3cddb9['prototype']['constructor'] = _0x3cddb9, _0x3cddb9['superClass'] = _0x1e3c43, _0x3cddb9['prototype']['updateZ'] = function () {
if (this['flag_usingAbility'] && this['webState'] > 0x2) this['z'] = 0x3e8;
else {
    if (this['flag_eff_isOnSpiderWeb']) this['z'] = 0x3e8 + this['rad'];
    else this['z'] = 0x3e8 + this['rad'];
}
}, _0x3cddb9['prototype']['animalInfo'] = function () {
var _0x4f8a40 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x4f8a40['aniName'] = 'Blackwidow Spider';
    break;
case 0x1:
    _0x4f8a40['aniName'] = 'Goldenwidow Spider';
    break;
case 0x2:
    _0x4f8a40['aniName'] = 'Queen Blackwidow';
    break;
case 0xcc:
    _0x4f8a40['aniName'] = 'Blood Widow Spider!';
    break;
default:
    break;
}
return _0x4f8a40['aniCol'] = '#FF9000', _0x4f8a40['skinName'] = this['getSkinName'](), _0x4f8a40['upgradeText'] = 'UPGRADED to ' + _0x4f8a40['aniName'] + '!\x0aBlackwidow is a sneaky predator. It traps prey in the web and injects sweat poison.\x0aPress W to spin and throw web.', _0x4f8a40;
}, _0x3cddb9['prototype']['getAbilityInfo'] = function (_0xf028cd) {
var _0x44ba09 = {};
return _0x44ba09['abilName'] = 'Spin Web & Bite\x0a(Sweat Prey)', _0x44ba09['abilImg'] = 'abilities/Web.svg', _0x44ba09['skinThemeID'] = this['skinThemeID'], _0x44ba09['mopeSeasonID'] = this['mopeSeasonID'], _0x44ba09;
}, _0x3cddb9['prototype']['readCustomData_onNewlyVisible'] = function (_0x3b120e) {
_0x3cddb9['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x3b120e), this['customUpdatedProperty'](_0x53fd4a, _0x3b120e);
}, _0x3cddb9['prototype']['webX'] = 0x0, _0x3cddb9['prototype']['webY'] = 0x0, _0x3cddb9['prototype']['spiderX'] = 0x0, _0x3cddb9['prototype']['spiderY'] = 0x0, _0x3cddb9['prototype']['webState'] = 0x0, _0x3cddb9['prototype']['customUpdatedProperty'] = function (_0x22a465, _0x2a4070) {
_0x22a465 == _0x53fd4a && (this['webState'] = _0x2a4070['readUInt8']());
}, _0x3cddb9['prototype']['readUpdatedPropertyItem'] = function (_0x509d1f, _0x5402a0) {
_0x3cddb9['superClass']['prototype']['readUpdatedPropertyItem']['call'](this, _0x509d1f, _0x5402a0);
if (_0x509d1f == _0x28b268) {
    console['log']('spider position updated:');
    this['webState'] == 0x0 && (this['web_nx'] = this['web_ox'] = this['webX'] = this['x'], this['web_ny'] = this['web_oy'] = this['webY'] = this['y'], this['spider_ox'] = this['spiderX'] = this['spider_nx'] = this['x'], this['spider_oy'] = this['spiderY'] = this['spider_ny'] = this['y']);
    var _0x5810d1 = _0x5402a0['readUInt8']() == 0x1;
    if (_0x5810d1) {
        var _0x4df63d = _0x5402a0['readUInt16']() / 0x4,
            _0x1395e2 = _0x5402a0['readUInt16']() / 0x4;
        this['web_ox'] = this['webX'], this['web_oy'] = this['webY'], this['web_nx'] = _0x4df63d, this['web_ny'] = _0x1395e2;
        var _0x5a76a2 = _0x5402a0['readUInt16']() / 0x4,
            _0x41bcce = _0x5402a0['readUInt16']() / 0x4;
        this['spider_ox'] = this['spiderX'], this['spider_oy'] = this['spiderY'], this['spider_nx'] = _0x5a76a2, this['spider_ny'] = _0x41bcce;
    }
}
}, _0x3cddb9['prototype']['onLerpUpdate'] = function (_0x52d851) {
this['webState'] > 0x0 && (this['webX'] = _0x52d851 * (this['web_nx'] - this['web_ox']) + this['web_ox'], this['webY'] = _0x52d851 * (this['web_ny'] - this['web_oy']) + this['web_oy'], this['spiderX'] = _0x52d851 * (this['spider_nx'] - this['spider_ox']) + this['spider_ox'], this['spiderY'] = _0x52d851 * (this['spider_ny'] - this['spider_oy']) + this['spider_oy']);
}, _0x3cddb9['prototype']['afterCustomDraw'] = function (_0x22c0d0) {
this['webState'] > 0x0 && _0x2fc9ba == this['id'] && this['flag_usingAbility'] && (_0x1d2dab['save'](), _0x1d2dab['strokeStyle'] = this['animalSpecies'] == 0x1 ? 'gold' : 'white', _0x1d2dab['globalAlpha'] = 0.3, _0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](this['webX'], this['webY']), _0x1d2dab['lineTo'](this['spiderX'], this['spiderY']), _0x1d2dab['stroke'](), _0x1d2dab['restore']());
}, _0x3cddb9['prototype']['getSkinName'] = function () {
return 'desert/blackwidow/' + this['animalSpecies'] + this['getSubSpecies']() + '/blackwidow' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x3cddb9['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x3cddb9['prototype']['drawSkinCustomization'] = function () {
if (this['webState'] == 0x0 && this['flag_usingAbility']) {
    var _0x54b12a = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x31e3c5 = 0.75,
        _0x34bc26 = 0x1,
        _0x596fba = _0x34bc26 * Math['sin'](0x2 * Math['PI'] / _0x31e3c5 * _0x54b12a);
    _0x1d2dab['globalAlpha'] = 0.3;
    var _0x26bbbf = this['animalSpecies'] == 0x1 ? 'gold' : '#f2f2f2';
    _0x444e67(0x0, -this['rad'] * 1.07, this['rad'] * 0.07, _0x26bbbf), _0x1d2dab['globalAlpha'] = 0.8 - 0.2 * _0x596fba, _0x444e67(0x0, -this['rad'] * 1.07, this['rad'] * 0.07 + (0.05 + _0x596fba), _0x26bbbf);
}
};

function _0x3cddb9() {
_0x3cddb9['superClass']['call'](this, _0x4ad968);
}
window['BlackWidowSpider'] = _0x3cddb9, _0x13dc56['setCustomClassForGameObjType'](_0x3cddb9, _0x4ad968, _0x4ca51a);
var _0x570743 = _0x892beb,
_0x1e3c43 = _0x4763ce;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43, _0x892beb['prototype']['updateZ'] = function () {
if (this['state'] == 0x0) this['z'] = 0x2710;
else this['z'] = 0x3e8;
}, _0x892beb['prototype']['webAlpha'] = 0.5, _0x892beb['prototype']['customDraw'] = function (_0x18fa4b) {
_0x1d2dab['save']();
if (this['state'] > 0x0) {
    var _0x49603c = this['getSkinImageObj']('img/web/' + this['webType'] + '/spiderWeb.png'),
        _0x2290a1 = this['rad'];
    _0x49603c && (_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = this['webAlpha'], _0x1d2dab['drawImage'](_0x49603c, -_0x2290a1, -_0x2290a1, 0x2 * _0x2290a1, 0x2 * _0x2290a1), _0x1d2dab['restore']());
}
_0x1d2dab['restore']();
}, _0x892beb['prototype']['state'] = 0x0, _0x892beb['prototype']['spiderX'] = 0x0, _0x892beb['prototype']['spiderY'] = 0x0, _0x892beb['prototype']['readUpdatedProperty'] = function (_0x2dbfa3, _0x29a854) {
if (_0x2dbfa3 == _0x53fd4a) this['state'] = _0x29a854['readUInt8']();
else {
    if (_0x2dbfa3 == _0x28218f) {
        var _0x655884 = _0x29a854['readUInt8']() / 0x64;
        if (_0x655884 < this['webAlpha']) this['webAlpha'] = _0x655884;
    }
}
}, _0x892beb['prototype']['readCustomData_onNewlyVisible'] = function (_0x1f4993) {
_0x892beb['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x1f4993), this['state'] = _0x1f4993['readUInt8']();
var _0x169947 = _0x1f4993['readUInt8']() / 0x64;
if (_0x169947 < this['webAlpha']) this['webAlpha'] = _0x169947;
this['webType'] = _0x1f4993['readUInt8']();
};

function _0x892beb() {
_0x892beb['superClass']['call'](this);
}
window['BlackwidowWeb'] = _0x892beb, _0x13dc56['setCustomClassForGameObjType'](_0x892beb, _0x2c5edd, _0x1d392c);
var _0x1e3c43 = _0x3d6c08;
_0x37145f['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x37145f['prototype']['constructor'] = _0x37145f, _0x37145f['superClass'] = _0x1e3c43, _0x37145f['prototype']['skinFolder'] = function () {
return 'desert/';
}, _0x37145f['prototype']['animalInfo'] = function () {
var _0x15021a = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x15021a['aniName'] = 'Pterodactyl';
    break;
case 0x1:
    _0x15021a['aniName'] = 'Golden Pterodactyl';
    break;
case 0x2:
    _0x15021a['aniName'] = 'Emerald Pterodactyl';
    break;
case 0x64:
    _0x15021a['aniName'] = 'Carnageodactyl';
    break;
}
return _0x15021a['aniCol'] = '#FF9000', _0x15021a['skinName'] = this['skinFolder']() + '/pterodactyl/' + this['animalSpecies'] + '/pterodactyl', _0x15021a['upgradeText'] = 'UPGRADED to ' + _0x15021a['aniName'] + '!\x0aFly and dive onto prey to pick it up.', _0x15021a;
}, _0x37145f['prototype']['getHead'] = function (_0xf272d9, _0x25ef37) {
var _0x368a49 = '',
    _0x4a76a9 = 'skins/' + this['skinFolder']() + '/' + _0xf272d9 + '/' + this['animalSpecies'] + '/' + _0xf272d9 + '_head' + _0x368a49 + '.png';
return _0x4a76a9;
}, _0x37145f['prototype']['getSkinName'] = function () {
var _0x3075f7 = this['skinFolder']() + '/pterodactyl/' + this['animalSpecies'] + '/pterodactyl';
if (this['specType'] == 0x4) _0x3075f7 += '4';
else _0x3075f7 += this['specType'] == 0x0 ? '' : 0x1;
return _0x3075f7;
}, _0x37145f['prototype']['getWing'] = function (_0x32b1b3, _0x117094) {
if (!this['flag_flying']) _0x117094 = _0x117094 + '' + _0x117094;
var _0x572940 = 'skins/' + this['skinFolder']() + '/' + _0x32b1b3 + '/' + this['animalSpecies'] + '/' + _0x32b1b3 + '_wing' + _0x117094 + '_nohand.png';
return _0x572940;
}, _0x37145f['prototype']['getWingBone'] = function (_0x411bcc, _0xcfcf7) {
if (!this['flag_flying']) _0xcfcf7 = _0xcfcf7 + '' + _0xcfcf7;
var _0x6800cd = 'skins/' + this['skinFolder']() + '/' + _0x411bcc + '/' + this['animalSpecies'] + '/' + _0x411bcc + '_wing' + _0xcfcf7 + '_bones.png';
return _0x6800cd;
}, _0x37145f['prototype']['getHand'] = function (_0x37b956, _0x17f7fb) {
if (!this['flag_flying']) _0x17f7fb = _0x17f7fb + '' + _0x17f7fb;
if (this['isGliding']) _0x17f7fb = _0x17f7fb + '3';
var _0x5efa2f = 'skins/' + this['skinFolder']() + '/' + _0x37b956 + '/' + this['animalSpecies'] + '/' + _0x37b956 + '_hand' + _0x17f7fb + '.png';
return _0x5efa2f;
}, _0x37145f['prototype']['biteStart'] = 0x0, _0x37145f['prototype']['flaps'] = 0x0, _0x37145f['prototype']['flapsMod'] = 0x5, _0x37145f['prototype']['countFlap'] = !![], _0x37145f['prototype']['canFlap'] = !(_0x31f3fc == 0x2), _0x37145f['prototype']['resumeFlapT'] = 0x0, _0x37145f['prototype']['lastFlapFrame'] = 0x0, _0x37145f['prototype']['flapSpeed'] = 0x1, _0x37145f['prototype']['flapAmount'] = 0.2, _0x37145f['prototype']['r'] = 22.5, _0x37145f['prototype']['ax'] = 0x0, _0x37145f['prototype']['ay'] = 0x1, _0x37145f['prototype']['ww'] = 0x4, _0x37145f['prototype']['wh'] = 2.5, _0x37145f['prototype']['ax2'] = 0x1, _0x37145f['prototype']['rf'] = -0x2, _0x37145f['prototype']['erf'] = 11.5, _0x37145f['prototype']['erf_gliding'] = 0x1e, _0x37145f['prototype']['lx'] = -0.05, _0x37145f['prototype']['famt'] = 0.5, _0x37145f['prototype']['yf'] = 0.15, _0x37145f['prototype']['xf'] = -0.2, _0x37145f['prototype']['legScale'] = 1.15, _0x37145f['prototype']['handPerc'] = 0.9, _0x37145f['prototype']['handWF'] = 0x0, _0x37145f['prototype']['set'] = ![], _0x37145f['prototype']['wOffset'] = 0.1, _0x37145f['prototype']['headF'] = 0.5, _0x37145f['prototype']['headFDisp'] = -0.6, _0x37145f['prototype']['headScale'] = 0.8, _0x37145f['prototype']['headX'] = 0.225, _0x37145f['prototype']['drawLegs'] = function () {
var _0x2889c4 = 0x1f4 / 0x154,
    _0x26e6fe = this['flag_eff_aniInClaws'] ? 'legs2' : 'legs',
    _0x41d835 = this['getSkinImageObj']('skins/' + this['skinFolder']() + '/pterodactyl/' + this['animalSpecies'] + '/' + _0x26e6fe + '.png');
if (_0x41d835) {
    _0x1d2dab['save']();
    var _0x56b87a = this['rad'];
    _0x2889c4 *= this['legScale'], _0x1d2dab['drawImage'](_0x41d835, -_0x56b87a * _0x2889c4, (-_0x56b87a + _0x56b87a * this['lx']) * _0x2889c4, 0x2 * _0x56b87a * _0x2889c4, 0x2 * _0x56b87a * _0x2889c4), _0x1d2dab['restore']();
}
}, _0x37145f['prototype']['drawUnderSkinImg'] = function () {
this['flag_usingAbility'] && (this['drawWing'](this['frame'], 0x1), this['drawWing'](this['frame'], 0x2));
if (this['specType'] == 0x2) this['drawLegs']();
}, _0x37145f['prototype']['drawSkinCustomization'] = function () {
if (this['flag_usingAbility']) {
    this['drawBone'](this['frame'], 0x1), this['drawBone'](this['frame'], 0x2), this['drawHand'](this['frame'], 0x1), this['drawHand'](this['frame'], 0x2);
    var _0x5db46e = 0x1f4 / 0x154,
        _0x2a05ec = this['getHead']('pterodactyl', ![]),
        _0x808d23 = this['getSkinImageObj'](_0x2a05ec);
    if (_0x808d23) {
        _0x1d2dab['save'](), _0x5db46e += -(0.1 * this['headF']) * this['frame'];
        var _0x56e5fc = this['rad'];
        _0x1d2dab['drawImage'](_0x808d23, -_0x56e5fc * _0x5db46e, (-_0x56e5fc + _0x56e5fc * (0.3 + this['headFDisp'] * (this['frame'] / 0xa)) + this['headF'] * this['frame']) * _0x5db46e, 0x2 * _0x56e5fc * _0x5db46e, 0x2 * _0x56e5fc * _0x5db46e), _0x1d2dab['restore']();
    }
} else {
    if (this['animalSpecies'] == 0x64) {
        var _0x468402 = _0x740c5b - this['nextJawAnimT'],
            _0x42beda = Math['trunc'](_0x468402 / _0x127325) % 0x10;
        if (_0x740c5b < this['nextJawAnimT']) _0x42beda = 0x0;
        _0x42beda >= 0xf && (this['nextJawAnimT'] = _0x740c5b + 0x1388);
        var _0x139088 = this['getSkinImageObj']('skins/desert/pterodactyl/100/mouth/pterodactyl_head' + _0x42beda + '.png');
        if (_0x139088) {
            var _0x5db46e = 0x1f4 / 0x154 * this['headScale'];
            _0x1d2dab['save']();
            var _0x56e5fc = this['rad'];
            _0x1d2dab['drawImage'](_0x139088, -_0x56e5fc * _0x5db46e, (-_0x56e5fc + _0x56e5fc * this['headX']) * _0x5db46e, 0x2 * _0x56e5fc * _0x5db46e, 0x2 * _0x56e5fc * _0x5db46e), _0x1d2dab['restore']();
        }
    } else {
        var _0x2a05ec = this['getHead']('pterodactyl', ![]),
            _0x808d23 = this['getSkinImageObj'](_0x2a05ec);
        if (_0x808d23) {
            var _0x5db46e = 0x1f4 / 0x154 * this['headScale'];
            _0x1d2dab['save']();
            var _0x56e5fc = this['rad'];
            _0x1d2dab['drawImage'](_0x808d23, -_0x56e5fc * _0x5db46e, (-_0x56e5fc + _0x56e5fc * this['headX']) * _0x5db46e, 0x2 * _0x56e5fc * _0x5db46e, 0x2 * _0x56e5fc * _0x5db46e), _0x1d2dab['restore']();
        }
    }
}
}, _0x37145f['prototype']['nextJawAnimT'] = 0x0;
var _0x127325 = 0x46;
_0x37145f['prototype']['drawWing'] = function (_0x5609fc, _0x126ad1) {
var _0x290092 = _0x126ad1 == 0x1 ? 0x1 : -0x1,
    _0x113c41 = this['getSkinImageObj'](this['getWing']('pterodactyl', _0x126ad1));
if (_0x113c41) {
    var _0x2bedda = -(-0.2 + _0x5609fc) * _0x2bcbaa(_0x290092 * this['r']),
        _0x13af35 = this['rad'] * 0.8,
        _0x488c2d = 0x0,
        _0x154d63 = this['rad'],
        _0x2174a6 = _0x13af35 * this['ww'],
        _0x5f16e7 = _0x13af35 * this['wh'],
        _0x427cec = _0x126ad1 == 0x1 ? this['ax'] : this['ax2'],
        _0x21513a = this['ay'] + this['yf'] * _0x5609fc;
    _0x1d2dab['save'](), _0x2bedda *= this['rf'];
    var _0x27bae6 = this['isGliding'] ? this['erf_gliding'] : this['erf'];
    _0x1d2dab['rotate'](_0x2bcbaa(_0x290092 * _0x27bae6) + _0x2bedda);
    var _0x265ecc = _0x5609fc * _0x2174a6 * _0x290092 * this['wOffset'];
    _0x1d2dab['drawImage'](_0x113c41, _0x488c2d + _0x2174a6 * -_0x427cec + _0x265ecc, _0x154d63 + _0x5f16e7 * -_0x21513a, _0x2174a6, _0x5f16e7), _0x1d2dab['restore']();
}
}, _0x37145f['prototype']['drawBone'] = function (_0x5848e2, _0x39a8ca) {
var _0x51ad32 = this['getSkinImageObj'](this['getWingBone']('pterodactyl', _0x39a8ca)),
    _0x412521 = _0x39a8ca == 0x1 ? 0x1 : -0x1;
if (_0x51ad32) {
    var _0x3ddb99 = -(-0.2 + _0x5848e2) * _0x2bcbaa(_0x412521 * this['r']),
        _0x19f436 = this['rad'] * 0.8,
        _0x4d6a3b = 0x0,
        _0x21f373 = this['rad'],
        _0x3eb99c = _0x19f436 * this['ww'],
        _0x2e03fe = _0x19f436 * this['wh'],
        _0x4c81d4 = _0x39a8ca == 0x1 ? this['ax'] : this['ax2'],
        _0x3bb9a2 = this['ay'] + this['yf'] * _0x5848e2;
    _0x1d2dab['save'](), _0x3ddb99 *= this['rf'];
    var _0x13c8af = this['isGliding'] ? this['erf_gliding'] : this['erf'];
    _0x1d2dab['rotate'](_0x2bcbaa(_0x412521 * _0x13c8af) + _0x3ddb99);
    var _0x4669c5 = _0x5848e2 * _0x3eb99c * _0x412521 * this['wOffset'];
    _0x1d2dab['drawImage'](_0x51ad32, _0x4d6a3b + _0x3eb99c * -_0x4c81d4 + _0x4669c5, _0x21f373 + _0x2e03fe * -_0x3bb9a2, _0x3eb99c, _0x2e03fe), _0x1d2dab['restore']();
}
};
var _0x398aa0 = 0x0;
_0x37145f['prototype']['drawHand'] = function (_0x1f97f4, _0x4ce24d) {
var _0x2c5087 = _0x4ce24d == 0x1 ? 0x1 : -0x1,
    _0x7cdeb0 = this['getSkinImageObj'](this['getHand']('pterodactyl', _0x4ce24d));
if (_0x7cdeb0) {
    var _0x2b5e29 = -(-0.2 + _0x1f97f4) * _0x2bcbaa(_0x2c5087 * this['r']),
        _0x395c39 = this['rad'] * 0.8,
        _0x1078fd = 0x0,
        _0x4655e7 = this['rad'],
        _0x1e8084 = _0x395c39 * this['ww'],
        _0x2ee014 = _0x395c39 * this['wh'] + (!this['flag_flying'] ? this['wh'] * _0x398aa0 : 0x0),
        _0x64d7ad = _0x2c5087 == 0x1 ? this['ax'] : this['ax2'],
        _0x3ba83e = _0x64d7ad + _0x2c5087 * this['xf'] * _0x1f97f4,
        _0x420928 = this['ay'] + this['yf'] * _0x1f97f4;
    _0x2b5e29 *= this['rf'];
    var _0xa857ca = this['isGliding'] ? this['erf_gliding'] : this['erf'];
    _0x1d2dab['save'](), this['drawImage'](_0x7cdeb0, _0x1078fd + _0x1e8084 * -_0x3ba83e, _0x4655e7 + _0x2ee014 * -_0x420928, _0x1e8084 + _0x1e8084 * _0x2c5087 * this['handWF'], _0x2ee014, _0x2bcbaa(_0x2c5087 * _0xa857ca) + _0x2b5e29), _0x1d2dab['restore']();
}
}, _0x37145f['prototype']['frame'] = 0x0, _0x37145f['prototype']['lastFlapFrame'] = 0x0, _0x37145f['prototype']['getFrame'] = function () {
if (!this['canFlap'] && this['flag_flying'] && _0x740c5b > this['resumeFlapT']) this['canFlap'] = !![];
var _0x2fe5a5 = (_0x740c5b - this['spawnTime']) / 0x3e8,
    _0x53505d = !(_0x31f3fc == 0x2) && this['canFlap'] ? _0x21d673(_0x2fe5a5, this['flapSpeed'], this['flapAmount'] * this['handPerc'], 0x2) : this['birdNoAnimationFlyWingAngle'];
if (this['flag_flying'] && _0x53505d < 0x0 && this['countFlap']) this['countFlap'] = ![], this['flaps']++, this['flaps'] % this['flapsMod'] == 0x0 && (this['lastFlapFrame'] = _0x53505d, this['canFlap'] = ![], this['resumeFlapT'] = +new Date() + 0x5dc);
else _0x53505d > 0x0 && !this['countFlap'] && (this['countFlap'] = !![]);
if (!this['canFlap']) _0x53505d = this['lastFlapFrame'];
else this['lastFlapFrame'] = _0x53505d;
return _0x53505d;
}, _0x37145f['prototype']['beforeCustomDraw'] = function () {
if (!this['flag_usingAbility']) return;
!this['flag_flying'] && !this['set'] ? (this['set'] = !![], this['r'] = 11.25, this['erf'] = 5.75, this['ww'] = 3.5) : this['flag_flying'] && this['set'] && (this['set'] = ![], this['r'] = 22.5, this['erf'] = 11.5, this['ww'] = 4.5), this['isGliding'] ? this['flapAmount'] = 0x0 : this['flapAmount'] = this['famt'], this['frame'] = this['getFrame']();
}, _0x37145f['prototype']['updateZ'] = function () {
if (this['flag_eff_grabbedByFlytrap']) this['z'] = 0x44c + this['rad'];
else {
    if (!this['flag_flying'] && this['flag_usingAbility'] && !this['flag_underWater']) this['z'] = 0x4b0 + this['rad'];
    else {
        if (this['flag_flying'] || this['flag_eff_tossedInAir']) {
            this['z'] = 0x1adb0;
            if (this['flag_isGrabbed']) this['z'] -= this['rad'];
            else this['z'] += this['rad'];
            if (this['flag_eff_aniInClaws']) this['z'] += 0x64;
        } else this['z'] = 0x3e8 + this['rad'];
    }
}
}, _0x37145f['prototype']['getAbilityInfo'] = function (_0x36cc91) {
var _0x591a24 = {};
return _0x591a24['abilName'] = 'Dive Attack\x0a(Fly with Prey)', _0x591a24['abilImg'] = 'abilities/SkyDive.svg', _0x591a24['skinThemeID'] = this['skinThemeID'], _0x591a24['mopeSeasonID'] = this['mopeSeasonID'], _0x591a24;
}, _0x37145f['prototype']['readCustomData_onNewlyVisible'] = function (_0x48fa56) {
_0x37145f['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x48fa56), this['isGliding'] = _0x48fa56['readUInt8']() == 0x1;
}, _0x37145f['prototype']['customUpdatedProperty'] = function (_0x266636, _0x5c63aa) {
this['isGliding'] = _0x5c63aa['readUInt8']() == 0x1;
};

function _0x37145f() {
_0x37145f['superClass']['call'](this, _0x4ad968);
}
window['Pterodactyl'] = _0x37145f, _0x13dc56['setCustomClassForGameObjType'](_0x37145f, _0x4ad968, _0x36b345);
var _0x1e3c43 = _0x3d6c08;
_0x33d269['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x33d269['prototype']['constructor'] = _0x33d269, _0x33d269['superClass'] = _0x1e3c43, _0x33d269['prototype']['animalInfo'] = function () {
var _0x5a1e24 = {};
return _0x5a1e24['aniName'] = 'Bullet Ant', _0x5a1e24['aniCol'] = '#FF9000', _0x5a1e24['skinName'] = 'desert/bulletant/bulletant', _0x5a1e24['upgradeText'] = 'UPGRADED to ' + _0x5a1e24['aniName'] + '!\x0aHold \'W\' to pick anything and take to your Anthill.', _0x5a1e24;
};
var _0x470fbd = 0x1;
_0x33d269['prototype']['drawSkinCustomization'] = function () {
var _0x3f8a80 = 'skins/desert/bulletant/head.png',
    _0x538c45 = this['getSkinImageObj'](_0x3f8a80);
if (_0x538c45) {
    var _0x1d932d = this['skinScale'] * 1.2,
        _0x5dace3 = this['skinRad'];
    _0x1d2dab['drawImage'](_0x538c45, -_0x5dace3 * _0x1d932d, (-_0x5dace3 + _0x5dace3 * 0.3) * _0x1d932d, 0x2 * _0x5dace3 * _0x1d932d, 0x2 * _0x5dace3 * _0x1d932d);
}
};
var _0x29ff12 = -0.7;
_0x33d269['prototype']['drawUnderSkinImg'] = function () {
var _0x20980e = 'skins/desert/bulletant/abdomen.png',
    _0xe3000b = this['getSkinImageObj'](_0x20980e);
if (_0xe3000b) {
    var _0x2217cf = this['skinScale'] * 0.9,
        _0x150120 = this['skinRad'];
    _0x1d2dab['drawImage'](_0xe3000b, -_0x150120 * _0x2217cf, (-_0x150120 + _0x150120 * _0x29ff12) * _0x2217cf, 0x2 * _0x150120 * _0x2217cf, 0x2 * _0x150120 * _0x2217cf);
}
}, _0x33d269['prototype']['getSkinName'] = function () {
var _0x1a03df = 'desert/bulletant/body';
return _0x1a03df;
};

function _0x33d269() {
_0x33d269['superClass']['call'](this, _0x4ad968);
}
window['BulletAnt'] = _0x33d269, _0x13dc56['setCustomClassForGameObjType'](_0x33d269, _0x4ad968, _0x24c58c);
var _0x1e3c43 = _0x131218;
_0x1f41bb['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x1f41bb['prototype']['constructor'] = _0x1f41bb, _0x1f41bb['superClass'] = _0x1e3c43, _0x1f41bb['prototype']['FlytrapType'] = 0x0, _0x1f41bb['prototype']['updateZ'] = function () {
this['z'] = 0x64;
}, _0x1f41bb['prototype']['getSkinFolder'] = function (_0xa8c5d1) {
return 'desert/flytrap';
}, _0x1f41bb['prototype']['customDraw'] = function (_0x1ddcb0) {
_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1;
var _0x2743e7 = this['getSkinImageObj']('img/' + this['getSkinFolder']() + '/base.png');
if (_0x2743e7) {
    var _0x51c793 = this['rad'] * 1.25;
    _0x1d2dab['drawImage'](_0x2743e7, -_0x51c793, -_0x51c793, 0x2 * _0x51c793, 0x2 * _0x51c793);
}
_0x1d2dab['restore']();
};

function _0x1f41bb() {
_0x1f41bb['superClass']['call'](this, _0x47d527), this['drawEffectScale_Slow'] = !![];
}
window['Flytrap'] = _0x1f41bb, _0x13dc56['setCustomClassForGameObjType'](_0x1f41bb, _0x47d527);
var _0x1e3c43 = _0x131218;
_0x47129d['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x47129d['prototype']['constructor'] = _0x47129d, _0x47129d['superClass'] = _0x1e3c43, _0x47129d['prototype']['FlytrapMouthType'] = 0x0, _0x47129d['prototype']['updateZ'] = function () {
this['z'] = 0x44c + this['rad'];
};
var _0x14273f = 0x8c,
_0x5530cb = 1.25,
_0xb688ee = 2.5,
_0xcd6c7f = 1.25,
_0x5d315e = 1.5,
_0x155adc = 0xb4,
_0x4cef96 = 1.5,
_0x5e2693 = 0x1,
_0x4ac3e8 = 0x1,
_0x562c54 = 0x0,
_0x4c8d55 = 0x0,
_0x4dca39 = -0xa0,
_0x5d2267 = 0x1,
_0x5125c0 = 0x0;
_0x47129d['prototype']['topA'] = 0xb4, _0x47129d['prototype']['botA'] = 0xb4, _0x47129d['prototype']['distBeforeAttack'] = 0x0, _0x47129d['prototype']['maxDist'] = 0x0, _0x47129d['prototype']['distCovered'] = 0x0, _0x47129d['prototype']['isAttacking'] = ![], _0x47129d['prototype']['isMouthClosed'] = ![], _0x47129d['prototype']['grabbedAni'] = ![], _0x47129d['prototype']['getSkinFolder'] = function (_0x3abf01) {
return 'desert/flytrap';
}, _0x47129d['prototype']['beforeCustomDraw'] = function (_0x57e19d) {
if (!this['dead']) {
    var _0x40d2a4 = this['getSkinImageObj']('img/' + this['getSkinFolder']() + '/mouth/stem.png');
    if (_0x40d2a4) {
        var _0x176801 = this['rad'];
        _0x1d2dab['save'](), _0x1d2dab['translate'](this['anchor_x'], this['anchor_y']), _0x1d2dab['rotate'](this['angle'] - _0x2bcbaa(_0x155adc));
        var _0x3d4def = _0x3a8af2({
            'x': this['x'],
            'y': this['y']
        }, {
            'x': this['anchor_x'],
            'y': this['anchor_y']
        });
        _0x1d2dab['drawImage'](_0x40d2a4, -_0x176801 * _0x5530cb, -_0x176801, 0x2 * _0x176801 * _0xcd6c7f, 0x2 * _0x176801 + _0x3d4def), _0x1d2dab['restore']();
    }
}
}, _0x47129d['prototype']['customDraw'] = function (_0xd9fcb0) {
_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1;
var _0x1d553a = 'bottom' + (this['isKillable'] ? '_e' : ''),
    _0x54f622 = this['getSkinImageObj']('img/' + this['getSkinFolder']() + '/mouth/' + _0x1d553a + '.png');
if (_0x54f622) {
    var _0x4eedfc = this['rad'];
    _0x1d2dab['save'](), _0x1d2dab['rotate'](this['angle'] - _0x2bcbaa(this['botA'])), _0x1d2dab['drawImage'](_0x54f622, -_0x4eedfc * _0x4ac3e8, -_0x4eedfc * _0x4ac3e8, 0x2 * _0x4eedfc, 0x2 * _0x4eedfc), _0x1d2dab['restore']();
}
if (!this['grabbedAni']) {
    var _0x576af8 = this['isMouthClosed'] ? 'closed' : 'top',
        _0x54f622 = this['getSkinImageObj']('img/' + this['getSkinFolder']() + '/mouth/' + _0x576af8 + '.png');
    if (_0x54f622) {
        var _0x4eedfc = this['rad']; {
            _0x1d2dab['save'](), _0x1d2dab['rotate'](this['angle'] - _0x2bcbaa(this['topA'])), _0x1d2dab['drawImage'](_0x54f622, -_0x4eedfc * _0x5e2693, -_0x4eedfc * _0x5e2693, 0x2 * _0x4eedfc, 0x2 * _0x4eedfc), _0x1d2dab['restore']();
        }
    }
}
_0x1d2dab['restore']();
}, _0x47129d['prototype']['isAttacking'] = ![], _0x47129d['prototype']['isMouthClosed'] = ![], _0x47129d['prototype']['grabbedAni'] = ![], _0x47129d['prototype']['readCustomData_onNewlyVisible'] = function (_0x239aee) {
_0x47129d['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x239aee);
var _0x3825dd = _0x239aee['readBitGroup']();
this['isAttacking'] = _0x3825dd['getBool'](), this['isMouthClosed'] = _0x3825dd['getBool'](), this['grabbedAni'] = _0x3825dd['getBool'](), this['anchor_x'] = _0x239aee['readUInt16']() / 0x4, this['anchor_y'] = _0x239aee['readUInt16']() / 0x4;
}, _0x47129d['prototype']['readUpdatedProperty'] = function (_0xa8c2a1, _0x41c97c) {
_0xa8c2a1 == _0x5ab7b5 && (this['isAttacking'] = _0x41c97c['readUInt8']() == 0x1), _0xa8c2a1 == _0x166d42 && (this['isMouthClosed'] = _0x41c97c['readUInt8']() == 0x1), _0xa8c2a1 == _0x4142e3 && (this['grabbedAni'] = _0x41c97c['readUInt8']() == 0x1);
};

function _0x47129d() {
_0x47129d['superClass']['call'](this, _0x1ba13c), this['doesDrawEffectScale'] = this['drawEffectScale_Slow'] = !![];
}
window['FlytrapMouth'] = _0x47129d, _0x13dc56['setCustomClassForGameObjType'](_0x47129d, _0x1ba13c);
var _0x1e3c43 = _0x131218;
_0x50b389['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x50b389['prototype']['constructor'] = _0x50b389, _0x50b389['superClass'] = _0x1e3c43, _0x50b389['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x50b389['prototype']['customDraw'] = function (_0x915d4) {
var _0x1ba675 = this['isEdibleOutlined']() ? 'e' : this['oType'],
    _0x4ce843 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + _0x1ba675 + '.png');
if (_0x4ce843) {
    _0x1d2dab['save']();
    var _0x32db1a = this['rad'] * 1.2;
    _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0x4ce843, -_0x32db1a, -_0x32db1a, _0x32db1a * 0x2, _0x32db1a * 0x2), _0x1d2dab['restore']();
}
};

function _0x50b389() {
_0x50b389['superClass']['call'](this, _0x15de97), this['doesDrawEffectScale'] = ![];
}
window['AloeveraLeaf'] = _0x50b389, _0x13dc56['setCustomClassForGameObjType'](_0x50b389, _0x15de97);
var _0x1e3c43 = _0x131218;
_0x584242['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x584242['prototype']['constructor'] = _0x584242, _0x584242['superClass'] = _0x1e3c43, _0x584242['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x584242['prototype']['customDraw'] = function (_0x1a7ab7) {
var _0x58b289 = this['isEdibleOutlined']() ? 'e' : this['oType'],
    _0x84dfa2 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + _0x58b289 + '.png');
if (_0x84dfa2) {
    _0x1d2dab['save']();
    var _0x2c5f8c = this['rad'] * 1.15;
    _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0x84dfa2, -_0x2c5f8c, -_0x2c5f8c, _0x2c5f8c * 0x2, _0x2c5f8c * 0x2), _0x1d2dab['restore']();
}
};

function _0x584242() {
_0x584242['superClass']['call'](this, _0x3ace79), this['doesDrawEffectScale'] = this['drawEffectScale_Slow'] = ![];
}
window['AloeveraPlant'] = _0x584242, _0x13dc56['setCustomClassForGameObjType'](_0x584242, _0x3ace79);
var _0x1e3c43 = _0x131218;
_0x3e2efc['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x3e2efc['prototype']['constructor'] = _0x3e2efc, _0x3e2efc['superClass'] = _0x1e3c43, _0x3e2efc['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x3e2efc['prototype']['customDraw'] = function (_0x463977) {
var _0xbde003 = this['isEdibleOutlined']() ? 'e' : this['oType'],
    _0x2af586 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + _0xbde003 + '.png');
if (_0x2af586) {
    _0x1d2dab['save']();
    var _0x36e5a0 = this['rad'] * 1.15;
    _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0x2af586, -_0x36e5a0, -_0x36e5a0, _0x36e5a0 * 0x2, _0x36e5a0 * 0x2), _0x1d2dab['restore']();
}
};

function _0x3e2efc() {
_0x3e2efc['superClass']['call'](this, _0x3860eb), this['doesDrawEffectScale'] = this['drawEffectScale_Slow'] = ![];
}
window['Cactus'] = _0x3e2efc, _0x13dc56['setCustomClassForGameObjType'](_0x3e2efc, _0x3860eb);
var _0x1e3c43 = _0x131218;
_0x10bbd3['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x10bbd3['prototype']['constructor'] = _0x10bbd3, _0x10bbd3['superClass'] = _0x1e3c43, _0x10bbd3['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x10bbd3['prototype']['customDraw'] = function (_0x351375) {
var _0x46de0b = this['isEdibleOutlined']() ? 'e' : this['curBiome'];
_0x46de0b = 'gameobj/' + this['oType'] + '/' + _0x46de0b + '.png';
var _0x136b1d = this['getSkinImageObj'](_0x46de0b);
if (_0x136b1d) {
    _0x1d2dab['save']();
    var _0x5151d1 = this['rad'];
    _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0x136b1d, -_0x5151d1, -_0x5151d1, _0x5151d1 * 0x2, _0x5151d1 * 0x2), _0x1d2dab['restore']();
}
};

function _0x10bbd3() {
_0x10bbd3['superClass']['call'](this, _0x2035ae), this['doesDrawEffectScale'] = ![];
}
window['CactusPear'] = _0x10bbd3, _0x13dc56['setCustomClassForGameObjType'](_0x10bbd3, _0x2035ae);
var _0x1e3c43 = _0x131218;
_0x3c4b67['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x3c4b67['prototype']['constructor'] = _0x3c4b67, _0x3c4b67['superClass'] = _0x1e3c43, _0x3c4b67['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x3c4b67['prototype']['customDraw'] = function (_0x2108cb) {
var _0x1f0dad = this['isEdibleOutlined']() ? 'e' : this['oType'],
    _0x10819a = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + _0x1f0dad + '.png');
if (_0x10819a) {
    _0x1d2dab['save']();
    var _0x4725b7 = this['rad'];
    _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0x10819a, -_0x4725b7, -_0x4725b7, _0x4725b7 * 0x2, _0x4725b7 * 0x2), _0x1d2dab['restore']();
}
};

function _0x3c4b67() {
_0x3c4b67['superClass']['call'](this, _0x4e9094), this['doesDrawEffectScale'] = ![];
}
window['DateFruit'] = _0x3c4b67, _0x13dc56['setCustomClassForGameObjType'](_0x3c4b67, _0x4e9094);
var _0x1e3c43 = _0x131218;
_0x2a66ea['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x2a66ea['prototype']['constructor'] = _0x2a66ea, _0x2a66ea['superClass'] = _0x1e3c43, _0x2a66ea['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x2a66ea['prototype']['customDraw'] = function (_0x10ba80) {
var _0x32a89a = this['isEdibleOutlined']() ? 'e' : this['oType'],
    _0x1a23b7 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + _0x32a89a + '.png');
if (_0x1a23b7) {
    _0x1d2dab['save']();
    var _0x3b7198 = this['rad'];
    _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0x1a23b7, -_0x3b7198, -_0x3b7198, _0x3b7198 * 0x2, _0x3b7198 * 0x2), _0x1d2dab['restore']();
}
};

function _0x2a66ea() {
_0x2a66ea['superClass']['call'](this, _0x260ddc), this['doesDrawEffectScale'] = ![];
}
window['Mango'] = _0x2a66ea, _0x13dc56['setCustomClassForGameObjType'](_0x2a66ea, _0x260ddc);
var _0x1e3c43 = _0x131218;
_0x570194['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570194['prototype']['constructor'] = _0x570194, _0x570194['superClass'] = _0x1e3c43, _0x570194['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x570194['prototype']['customDraw'] = function (_0x252eda) {
var _0x2049c9 = this['isEdibleOutlined']() ? 'e' : this['oType'],
    _0x40f460 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + _0x2049c9 + '.png');
if (_0x40f460) {
    _0x1d2dab['save']();
    var _0x44a217 = this['rad'];
    _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0x40f460, -_0x44a217, -_0x44a217, _0x44a217 * 0x2, _0x44a217 * 0x2), _0x1d2dab['restore']();
}
};

function _0x570194() {
_0x570194['superClass']['call'](this, _0x4793dd), this['doesDrawEffectScale'] = ![];
}
window['Melon'] = _0x570194, _0x13dc56['setCustomClassForGameObjType'](_0x570194, _0x4793dd);
var _0x1e3c43 = _0x131218;
_0x532e1e['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x532e1e['prototype']['constructor'] = _0x532e1e, _0x532e1e['superClass'] = _0x1e3c43, _0x532e1e['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x532e1e['prototype']['customDraw'] = function (_0x5ceb6c) {
var _0x410c56 = this['isEdibleOutlined']() ? 'e' : this['oType'],
    _0x56e703 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + _0x410c56 + '.png');
if (_0x56e703) {
    _0x1d2dab['save']();
    var _0x34493d = this['rad'];
    _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0x56e703, -_0x34493d, -_0x34493d, _0x34493d * 0x2, _0x34493d * 0x2), _0x1d2dab['restore']();
}
};

function _0x532e1e() {
_0x532e1e['superClass']['call'](this, _0x583a83), this['doesDrawEffectScale'] = ![];
}
window['MelonSlice'] = _0x532e1e, _0x13dc56['setCustomClassForGameObjType'](_0x532e1e, _0x583a83);
var _0x1e3c43 = _0x131218;
_0x4f3652['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x4f3652['prototype']['constructor'] = _0x4f3652, _0x4f3652['superClass'] = _0x1e3c43, _0x4f3652['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x4f3652['prototype']['customDraw'] = function (_0x466145) {
var _0x3e8554 = this['isEdibleOutlined']() ? 'e' : this['oType'],
    _0x4e6ec3 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + _0x3e8554 + '.png');
if (_0x4e6ec3) {
    _0x1d2dab['save']();
    var _0x21ce0f = this['rad'];
    _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0x4e6ec3, -_0x21ce0f, -_0x21ce0f, _0x21ce0f * 0x2, _0x21ce0f * 0x2), _0x1d2dab['restore']();
}
}, _0x4f3652['prototype']['updateZ'] = function () {
this['z'] = 0x3e8 + this['rad'];
};

function _0x4f3652() {
_0x4f3652['superClass']['call'](this, _0x9f73bc), this['doesDrawEffectScale'] = ![];
}
window['Orange'] = _0x4f3652, _0x13dc56['setCustomClassForGameObjType'](_0x4f3652, _0x9f73bc);
var _0x1e3c43 = _0x131218;
_0xf95527['prototype'] = Object['create'](_0x1e3c43['prototype']), _0xf95527['prototype']['constructor'] = _0xf95527, _0xf95527['superClass'] = _0x1e3c43, _0xf95527['prototype']['updateZ'] = function () {
this['z'] = -0x9e;
}, _0xf95527['prototype']['customDraw'] = function (_0x2b8b07) {
_0x1d2dab['save']();
if (!(_0x31f3fc == 0x2)) _0x1d2dab['rotate'](this['rPer'] * 0x2 * Math['PI']);
var _0x5d7599 = 0x0,
    _0x6d4f63 = (_0x740c5b - this['spawnTime']) / 0x3e8,
    _0x11792d = 0x6,
    _0x322757 = 1.5;
_0x5d7599 = _0x322757 * Math['sin'](0x2 * Math['PI'] / _0x11792d * _0x6d4f63);
var _0x3462fa = 0x4;
_0x2b8b07 ? (_0x1d2dab['fillStyle'] = '#b0a13b', _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x1d2dab['fill']()) : (_0x1d2dab['fillStyle'] = '#bdae47', _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x3462fa + _0x5d7599), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), !(_0x31f3fc == 0x2) && (_0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x5d7599), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x5d7599), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x5d7599), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x5d7599), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), this['rad'] > 0x32 && (_0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0xa, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill']()))), _0x1d2dab['restore']();
};

function _0xf95527() {
_0xf95527['superClass']['call'](this, _0x570684), this['animateRadOnSpawn'] = ![];
}
window['Quicksand'] = _0xf95527, _0x13dc56['setCustomClassForGameObjType'](_0xf95527, _0x570684);
var _0x1e3c43 = _0x131218;
_0x119261['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x119261['prototype']['constructor'] = _0x119261, _0x119261['superClass'] = _0x1e3c43, _0x119261['prototype']['updateZ'] = function () {
this['z'] = -0x9e;
}, _0x119261['prototype']['customDraw'] = function (_0x588dc7) {
var _0xb621d7 = 0x4;
_0x1d2dab['save']();
if (!(_0x31f3fc == 0x2)) _0x1d2dab['rotate'](this['rPer'] * 0x2 * Math['PI']);
var _0x3f5f9e = 0x0,
    _0x27c8f8 = (_0x740c5b - this['spawnTime']) / 0x3e8,
    _0x2c2267 = 0x6,
    _0x3b45f4 = 1.5;
_0x3f5f9e = _0x3b45f4 * Math['sin'](0x2 * Math['PI'] / _0x2c2267 * _0x27c8f8);
if (this['isOasisWater'] && _0x588dc7) _0x1d2dab['fillStyle'] = '#AE9F43', _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x1d2dab['fill']();
else {
    var _0x4cc3ec = '#3881C4',
        _0xb621d7 = 0x4;
    _0x1d2dab['fillStyle'] = this['isOasisWater'] ? _0x4cc3ec : '#AE9F43', _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), !(_0x31f3fc == 0x2) && (_0x1d2dab['fillStyle'] = this['isOasisWater'] ? _0x4cc3ec : '#bdae47', _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0xb621d7 + _0x3f5f9e), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x3f5f9e), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x3f5f9e), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x3f5f9e), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x3f5f9e), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), this['rad'] > 0x32 && (_0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0xa, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill']()));
}
_0x1d2dab['restore']();
}, _0x119261['prototype']['afterCustomDraw'] = function () {};

function _0x119261() {
_0x119261['superClass']['call'](this, _0x59d668), this['animateRadOnSpawn'] = ![];
}
_0x119261['prototype']['readCustomData_onNewlyVisible'] = function (_0x5e62c0) {
_0x119261['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x5e62c0), this['isOasisWater'] = _0x5e62c0['readUInt8']() == 0x1;
}, _0x119261['prototype']['readUpdatedProperty'] = function (_0x3a6a8c, _0x16584f) {
if (_0x3a6a8c == _0x22f887) {
    var _0x4e44ac = _0x16584f['readUInt16']() / 0xa;
    this['setNewRad'](_0x4e44ac);
}
}, _0x119261['prototype']['circles'] = new Array(), _0x119261['prototype']['isOasisWater'] = ![], window['Oasis'] = _0x119261, _0x13dc56['setCustomClassForGameObjType'](_0x119261, _0x59d668);
var _0x368737 = _0x368737,
_0x1e3c43 = _0x3d6c08;
_0x368737['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x368737['prototype']['constructor'] = _0x368737, _0x368737['superClass'] = _0x1e3c43, _0x368737['prototype']['getSkinName'] = function () {
let _0x57726d = this['getSpeciesPath']() + '/lion';
return _0x57726d += this['specType'] == 0x0 ? '' : this['specType'], _0x57726d;
}, _0x368737['prototype']['getSpeciesPath'] = function () {
return 'land/lion/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x368737['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
var _0x300875 = '';
if (this['animalSpecies'] == 0x1 || this['animalSpecies'] == 0x2 || this['animalSpecies'] == 0xc8) _0x300875 = '/' + this['animalSubSpecies'];
return _0x300875;
}, _0x368737['prototype']['getAbilityInfo'] = function (_0x1e5ff4) {
var _0xf4cc5e = {};
_0xf4cc5e['abilName'] = 'Loud ' + (this['animalSpecies'] == 0x2 ? 'Meow' : 'Noise');
if (this['animalSpecies'] == 0x1) _0xf4cc5e['abilName'] += '\x0a& Camouflage';
var _0x16818d = this['getSubSpecies']();
return _0xf4cc5e['abilImg'] = 'abilities/Growl-Roar.svg', _0xf4cc5e['skinThemeID'] = this['skinThemeID'], _0xf4cc5e['mopeSeasonID'] = this['mopeSeasonID'], _0xf4cc5e;
}, _0x368737['prototype']['animalInfo'] = function () {
var _0x28af01 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x28af01['aniName'] = 'Lion';
    break;
case 0x1:
    _0x28af01['aniName'] = 'Lioness';
    break;
case 0x2:
    _0x28af01['aniName'] = 'Lion Cub';
    break;
case 0x3:
    _0x28af01['aniName'] = 'Black-Maned\x0aLion';
    break;
case 0x4:
    _0x28af01['aniName'] = 'White Lion';
    break;
case 0x5:
    _0x28af01['aniName'] = 'Black Lion';
    break;
case 0x64:
    _0x28af01['aniName'] = 'The Mantalian';
    break;
case 0xc8:
    if (this['animalSubSpecies'] == 0x0) _0x28af01['aniName'] = 'Clowoud Lion';
    else {
        if (this['animalSubSpecies'] == 0x1) _0x28af01['aniName'] = 'Sunset Clowoud Lion';
        else {
            if (this['animalSubSpecies'] == 0x2) _0x28af01['aniName'] = 'Storm Clowoud Lion';
        }
    }
    break;
case 0xca:
    _0x28af01['aniName'] = 'Chimera Lion';
    break;
case 0xdc:
    _0x28af01['aniName'] = 'Ghastly Jade Lion';
    break;
}
_0x28af01['aniDesc'] = '';
if (this['animalSpecies'] == 0x1) _0x28af01['upgradeText'] = 'UPGRADED to ' + _0x28af01['aniName'] + '!\x0a Lioness are fast and can launch an ambush attack. (Stop moving to camouflage)!';
else {
    if (this['animalSpecies'] == 0x2) _0x28af01['upgradeText'] = 'UPGRADED to ' + _0x28af01['aniName'] + '!\x0a Press W to release a mighty MEOW!';
    else _0x28af01['upgradeText'] = 'UPGRADED to ' + _0x28af01['aniName'] + '!\x0a Press W to release a mighty ROAR (Rawr!)!';
}
return _0x28af01['aniCol'] = '#FF9000', _0x28af01['skinName'] = this['getSkinName'](), _0x28af01;
}, _0x368737['prototype']['setStealth'] = function () {
_0x368737['superClass']['prototype']['setStealth']['call'](this);
if (this['flag_stealth']) {
    if (this['animalSpecies'] == 0x1) this['idealOp'] = _0x2fc9ba == this['id'] ? 0.1 : 0x0;
}
}, _0x368737['prototype']['biteStart'] = 0x0, _0x368737['prototype']['flapAmount'] = 0x3, _0x368737['prototype']['flapDur'] = 1.5, _0x368737['prototype']['roarStartT'] = -0x1f4;
var _0x1d7733 = 0x1,
_0xf00c = 0x1;
_0x368737['prototype']['drawSkinCustomization'] = function () {
this['setSkinScale']();
if (!this['flag_usingAbility']) {
    this['biteStart'] = 0x0;
    return;
} else {
    this['biteStart'] == 0x0 && (this['biteStart'] = _0x740c5b + this['roarStartT']);
    if (this['specType'] != 0x0 && this['specType'] != undefined) {
        var _0x262784 = 'skins/' + this['getSpeciesPath']() + '/lion_head1.png',
            _0x424083 = this['getSkinImageObj'](_0x262784),
            _0x438c67 = (_0x740c5b - this['biteStart']) / 0x3e8,
            _0x480d50 = this['skinScale'] * 1.07,
            _0x217efd = this['skinRad'];
        if (_0x424083) {
            var _0x1111fa = 0x0,
                _0xeaa559 = this['flapAmount'] - (this['animalSpecies'] == 0x2 ? 0.5 : 0x0);
            _0x1111fa = !(_0x31f3fc == 0x2) ? _0x21d673(_0x438c67, this['flapDur'], _0xeaa559, 0x2) : this['flapAmount'], _0x1d2dab['save']();
            var _0x217efd = this['rad'];
            _0x1d2dab['drawImage'](_0x424083, -_0x217efd * _0x480d50, (-_0x217efd + _0x217efd * 0.1) * _0x480d50 - _0x1111fa, 0x2 * _0x217efd * _0x480d50, 0x2 * _0x217efd * _0x480d50), _0x1d2dab['restore']();
        }
    }
}
};

function _0x368737() {
_0x368737['superClass']['call'](this, _0x4ad968);
}
window['Lion'] = _0x368737, _0x13dc56['setCustomClassForGameObjType'](_0x368737, _0x4ad968, _0xd7a1f1);
var _0x1e3c43 = _0x3d6c08;
_0x3650cc['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x3650cc['prototype']['constructor'] = _0x3650cc, _0x3650cc['superClass'] = _0x1e3c43, _0x3650cc['prototype']['animalInfo'] = function () {
var _0x961eba = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x961eba['aniName'] = 'Rhino';
    break;
case 0x1:
    _0x961eba['aniName'] = 'White Rhino';
    break;
case 0x2:
    _0x961eba['aniName'] = 'Black Rhino';
    break;
case 0x3:
    _0x961eba['aniName'] = 'Woolly Rhino';
    break;
case 0xc9:
    _0x961eba['aniName'] = 'Shrub Rhino';
    break;
case 0xca:
    _0x961eba['aniName'] = 'Cotton Candy Rhino';
    break;
case 0xcc:
    _0x961eba['aniName'] = 'Acuti Rhino';
    break;
case 0xdc:
    _0x961eba['aniName'] = 'Ink Rhino';
    break;
}
return _0x961eba['skinName'] = this['getSkinName'](), _0x961eba['aniDesc'] = '', _0x961eba['upgradeText'] = 'UPGRADED to ' + _0x961eba['aniName'] + '!\x0a Press W to CHARGE with your mighty horn!', _0x961eba['aniCol'] = '#94a3a9', _0x961eba;
}, _0x3650cc['prototype']['getAbilityInfo'] = function (_0x2d7a61) {
var _0x11860a = {};
return _0x11860a['abilName'] = 'Charge!', _0x11860a['abilImg'] = 'abilities/Charge.svg', _0x11860a['skinThemeID'] = this['skinThemeID'], _0x11860a['mopeSeasonID'] = this['mopeSeasonID'], _0x11860a;
}, _0x3650cc['prototype']['getSkinName'] = function () {
let _0x134cad = this['getSpeciesPath']() + '/rhino';
return _0x134cad += this['specType'] == 0x0 ? '' : 0x1, _0x134cad;
}, _0x3650cc['prototype']['getSpeciesPath'] = function () {
return 'land/rhino/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x3650cc['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};
var _0x470fbd = 0.1;
_0x3650cc['prototype']['drawOnTopOfSkinImg'] = function () {
if (_0x57dfdc) _0x3650cc['superClass']['prototype']['drawOnTopOfSkinImg']['call'](this);
}, _0x3650cc['prototype']['drawSkinCustomization'] = function () {
if (_0x57dfdc) _0x3650cc['superClass']['prototype']['drawSkinCustomization']['call'](this);
else {
    if (this['flag_usingAbility']) {
        var _0x1a4f56 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/rhino_head1.png'),
            _0x57e0e7 = this['skinScale'] * 0.98,
            _0x3bb983 = this['skinRad'];
        if (_0x1a4f56) {
            frame = 0x0, _0x1d2dab['save']();
            var _0x3bb983 = this['rad'];
            _0x1d2dab['drawImage'](_0x1a4f56, -_0x3bb983 * _0x57e0e7, (-_0x3bb983 + _0x3bb983 * _0x470fbd) * _0x57e0e7 + frame, 0x2 * _0x3bb983 * _0x57e0e7, 0x2 * _0x3bb983 * _0x57e0e7), _0x1d2dab['restore']();
        }
    }
}
};

function _0x3650cc() {
_0x3650cc['superClass']['call'](this, _0x4ad968);
}
window['Rhino'] = _0x3650cc, _0x13dc56['setCustomClassForGameObjType'](_0x3650cc, _0x4ad968, _0xd3040d);
var _0x1e3c43 = _0x3d6c08;
_0x42f70c['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x42f70c['prototype']['constructor'] = _0x42f70c, _0x42f70c['superClass'] = _0x1e3c43, _0x42f70c['prototype']['animalInfo'] = function () {
var _0x1359cf = {};
_0x1359cf['skinName'] = 'land/pig/' + this['animalSpecies'] + this['getSubSpecies']() + '/pig', _0x1359cf['aniName'] = 'Pig';
switch (this['animalSpecies']) {
case 0x0:
    _0x1359cf['aniName'] = 'Pig', _0x1359cf['upgradeText'] = 'UPGRADED to ' + _0x1359cf['aniName'] + '!\x0a  Pigs move FAST through MUD! (Can use \'stink\' on mud/ hiding holes!)';
    break;
case 0x1:
    _0x1359cf['aniName'] = 'Pinky Pig', _0x1359cf['upgradeText'] = 'UPGRADED to ' + _0x1359cf['aniName'] + '!\x0a  Pigs move FAST through MUD! (Can use \'stink\' on mud/ hiding holes!)';
    break;
case 0xc9:
    _0x1359cf['aniName'] = 'Floaty Pig', _0x1359cf['upgradeText'] = 'UPGRADED to ' + _0x1359cf['aniName'] + '!\x0a  Pigs move FAST through MUD! (Can use \'stink\' on mud/ hiding holes!)';
    break;
case 0xcc:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x1359cf['aniName'] = 'Butcher Pig';
        break;
    case 0x1:
        _0x1359cf['aniName'] = 'Hot Dog Pig';
    }
    _0x1359cf['upgradeText'] = 'UPGRADED to ' + _0x1359cf['aniName'] + '!\x0a  Pigs move FAST through MUD! (Can use \'stink\' on mud/ hiding holes!)';
    break;
case 0x2: {
    _0x1359cf['aniName'] = 'Stinky Pig', _0x1359cf['upgradeText'] = 'UPGRADED to ' + _0x1359cf['aniName'] + '!\x0a ' + _0x1359cf['aniName'] + ' dives through MUD (can use stink everywhere!)';
}
break;
case 0xca:
    _0x1359cf['aniName'] = 'Piggy Bank', _0x1359cf['upgradeText'] = 'UPGRADED to ' + _0x1359cf['aniName'] + '!\x0a  Pigs move FAST through MUD! (Can use \'stink\' on mud/ hiding holes!)';
    break;
case 0xdc:
    _0x1359cf['aniName'] = 'Fumigator Pig', _0x1359cf['upgradeText'] = 'UPGRADED to ' + _0x1359cf['aniName'] + '!\x0a  Pigs move FAST through MUD! (Can use \'stink\' on mud/ hiding holes!)';
    break;
}
return _0x1359cf['aniCol'] = '#DD6BD4', _0x1359cf;
}, _0x42f70c['prototype']['getAbilityInfo'] = function (_0x475a47) {
var _0x225c52 = {};
return _0x225c52['abilName'] = 'Stink cloud', _0x225c52['abilImg'] = 'abilities/StinkCloud.svg', _0x225c52['skinThemeID'] = this['skinThemeID'], _0x225c52['mopeSeasonID'] = this['mopeSeasonID'], _0x225c52;
}, _0x42f70c['prototype']['getSkinName'] = function () {
let _0x5182a0 = this['getSpeciesPath']() + '/pig';
return _0x5182a0;
}, _0x42f70c['prototype']['getSpeciesPath'] = function () {
return 'land/pig/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x42f70c['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return this['animalSpecies'] === 0xcc ? '/' + this['animalSubSpecies'] : '';
}, _0x42f70c['prototype']['animalDiveColor'] = function () {
if (this['flag_underWater']) {
    if (this['flag_eff_isInMud']) return '#7E6A35';
    else return '#4E71C3';
}
return '';
}, _0x42f70c['prototype']['animalDivesInMud'] = function () {
return !![];
};

function _0x42f70c() {
_0x42f70c['superClass']['call'](this, _0x4ad968);
}
window['Pig'] = _0x42f70c, _0x13dc56['setCustomClassForGameObjType'](_0x42f70c, _0x4ad968, _0x4cff3a);
var _0x1e3c43 = _0x3d6c08;
_0x5cdece['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x5cdece['prototype']['constructor'] = _0x5cdece, _0x5cdece['superClass'] = _0x1e3c43, _0x5cdece['prototype']['animalInfo'] = function () {
var _0x3fda1f = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x3fda1f['aniName'] = 'Deer';
    break;
case 0x1:
    _0x3fda1f['aniName'] = 'Doe';
    break;
case 0x2:
    _0x3fda1f['aniName'] = 'Marsh Deer';
    break;
case 0x64:
    _0x3fda1f['aniName'] = 'The Wendigo';
    break;
case 0xca:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x3fda1f['aniName'] = 'Mezavor';
        break;
    case 0x1:
        _0x3fda1f['aniName'] = 'Divine Deer';
    }
    break;
}
return _0x3fda1f['aniDesc'] = '', _0x3fda1f['upgradeText'] = 'UPGRADED to ' + _0x3fda1f['aniName'] + '! \x0aPress W to dig up food! \x0aDig in mud for better food!\x0a Hint:Check water areas for new food sources!', _0x3fda1f['aniCol'] = '#C4773E', _0x3fda1f['skinName'] = this['getSkinName'](), _0x3fda1f;
}, _0x5cdece['prototype']['getSkinName'] = function () {
let _0x493b4a = this['getSpeciesPath']() + '/deer';
return _0x493b4a;
}, _0x5cdece['prototype']['getSpeciesPath'] = function () {
return 'land/deer/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x5cdece['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
}, _0x5cdece['prototype']['getAbilityInfo'] = function (_0x4550a1) {
var _0x29d625 = {};
return _0x29d625['abilName'] = 'Dig Food!', _0x29d625['abilImg'] = 'abilities/Dig.svg', _0x29d625['skinThemeID'] = this['skinThemeID'], _0x29d625['mopeSeasonID'] = this['mopeSeasonID'], _0x29d625;
}, _0x5cdece['prototype']['moveF'] = 0.08, _0x5cdece['prototype']['jumpAnim'] = null, _0x5cdece['prototype']['frame'] = 0x0, _0x5cdece['prototype']['drawUnderSkinImg'] = function () {
if (this['flag_usingAbility']) {
    if (this['animalType'] == _0x3136da || this['animalType'] == _0x3dd041) {
        var _0x48e94d = (_0x740c5b - this['spawnTime']) / 0x3e8,
            _0x5d3b54 = 1.5,
            _0x5e0c8d = 0x1,
            _0x1f5fd3 = _0x5e0c8d * Math['sin'](0x2 * Math['PI'] / _0x5d3b54 * _0x48e94d),
            _0xdf323 = _0x1d2dab['globalAlpha'];
        _0x1d2dab['globalAlpha'] *= 0.8, _0x444e67(0x0, this['rad'] * 0.3, this['rad'] * (0.9 + 0.12 * _0x1f5fd3), '#7F582B'), _0x444e67(0x0, -this['rad'] * 0.3, this['rad'] * (1.05 + 0.09 * _0x1f5fd3), '#7F582B'), _0x1d2dab['globalAlpha'] = _0xdf323;
    }
}
};

function _0x5cdece() {
_0x5cdece['superClass']['call'](this, _0x4ad968);
}
window['Deer'] = _0x5cdece, _0x13dc56['setCustomClassForGameObjType'](_0x5cdece, _0x4ad968, _0x3136da);
var _0x1e3c43 = _0x3d6c08;
_0x434c13['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x434c13['prototype']['constructor'] = _0x434c13, _0x434c13['superClass'] = _0x1e3c43, _0x434c13['prototype']['animalInfo'] = function () {
var _0x34ab2f = {};
_0x34ab2f['aniCol'] = '#755A2A';
switch (this['animalSpecies']) {
case 0x0:
    _0x34ab2f['aniName'] = 'Donkey', _0x34ab2f['upgradeText'] = 'UPGRADED to ' + _0x34ab2f['aniName'] + '!\x0aPress \'W\' to give RARE kick and stun your opponents';
    break;
case 0x1:
    _0x34ab2f['aniName'] = 'Jackass', _0x34ab2f['aniCol'] = '#000', _0x34ab2f['upgradeText'] = 'UPGRADED to ' + _0x34ab2f['aniName'] + '!\x0aPress \'W\' to give RARE kick and stun your opponents.\x0a(Keep mouse close to your animal along with boosting to become a mad donkey!)';
    break;
case 0x2:
    _0x34ab2f['aniName'] = 'Zonkey', _0x34ab2f['aniCol'] = '#755A2A', _0x34ab2f['upgradeText'] = 'UPGRADED to ' + _0x34ab2f['aniName'] + '!\x0aPress \'W\' to give RARE kick and stun your opponents';
    break;
case 0x64:
    _0x34ab2f['aniName'] = 'Equusthulhu', _0x34ab2f['aniCol'] = '#755A2A', _0x34ab2f['upgradeText'] = 'UPGRADED to ' + _0x34ab2f['aniName'] + '!\x0aPress \'W\' to give RARE kick and stun your opponents';
    break;
case 0xca:
    _0x34ab2f['aniName'] = 'Headless Mule', _0x34ab2f['upgradeText'] = 'UPGRADED to ' + _0x34ab2f['aniName'] + '!\x0aPress \'W\' to give RARE kick and stun your opponents';
    break;
}
return _0x34ab2f['skinName'] = this['getSkinName'](), _0x34ab2f['aniDesc'] = '', _0x34ab2f;
}, _0x434c13['prototype']['getAbilityInfo'] = function (_0x129123) {
var _0x37da3b = {};
return _0x37da3b['abilName'] = 'Back Kick!', _0x37da3b['abilImg'] = 'abilities/Kick.svg', _0x37da3b['skinThemeID'] = this['skinThemeID'], _0x37da3b['mopeSeasonID'] = this['mopeSeasonID'], _0x37da3b;
}, _0x434c13['prototype']['getSkinName'] = function () {
let _0xc61180 = this['getSpeciesPath']() + '/donkey';
if (this['specType'] != 0x0) {
    if (this['specType'] > 0x2) _0xc61180 += 0x3;
    else _0xc61180 += this['specType'];
}
return _0xc61180;
}, _0x434c13['prototype']['getSpeciesPath'] = function () {
return 'land/donkey/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x434c13['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x434c13['prototype']['drawUnderSkinImg'] = function () {
if (this['flag_usingAbility'] && this['biteStart'] > 0x0) {
    _0x1d2dab['save']();
    var _0x3496f7 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0x1 * _0x3496f7;
    var _0x563ee3 = 'skins/' + this['getSpeciesPath']() + '/legs.png',
        _0xc14e71 = this['getSkinImageObj'](_0x563ee3);
    if (_0xc14e71) {
        var _0x1b1a3a = Math['min'](0x1, (_0x740c5b - this['biteStart']) / 0x546),
            _0x38cdba = this['rad'],
            _0x28622b = 0x0,
            _0x100653 = this['rad'] * 0x1,
            _0x4bedd4 = _0x38cdba * 0x2,
            _0x36cd79 = _0x38cdba * 0x2 * _0x1b1a3a,
            _0x3d2cb0 = 0.5,
            _0x1c6770 = 2.5;
        _0x1d2dab['drawImage'](_0xc14e71, _0x28622b + _0x4bedd4 * -_0x3d2cb0, _0x100653 + _0x36cd79 * -_0x1c6770, _0x4bedd4, _0x36cd79);
    }
    _0x1d2dab['restore']();
}
}, _0x434c13['prototype']['biteStart'] = 0x0, _0x434c13['prototype']['flapAmount'] = 0.3, _0x434c13['prototype']['flapDur'] = 0x1, _0x434c13['prototype']['roarStartT'] = -0x1f4, _0x434c13['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) {
    this['biteStart'] = 0x0;
    if (this['specType'] == 0x0) return;
    var _0x46c40e = this['specType'] - 0x2,
        _0x23b065 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/donkey_head' + _0x46c40e + '.png'),
        _0x11af89 = this['skinRad'];
    if (_0x23b065) {
        _0x1d2dab['save']();
        var _0x11af89 = this['rad'] * 1.3,
            _0x28079f = 0x0,
            _0x12cd5b = this['rad'],
            _0x181e80 = 0x1,
            _0x3ca8c4 = _0x11af89 * 0x2 * _0x181e80,
            _0x132ce1 = _0x11af89 * 0x2 * _0x181e80,
            _0x27610e = 0.5,
            _0x5da89f = 0.7;
        _0x1d2dab['drawImage'](_0x23b065, _0x28079f + _0x3ca8c4 * -_0x27610e, _0x12cd5b + _0x132ce1 * -_0x5da89f, _0x3ca8c4, _0x132ce1), _0x1d2dab['restore']();
    }
} else {
    if (this['biteStart'] == 0x0) this['biteStart'] = _0x740c5b + this['roarStartT'];
    var _0x5f27df = (_0x740c5b - this['biteStart']) / 0x3e8,
        _0x810f6c = 0x0;
    _0x810f6c = _0x21d673(_0x5f27df, this['flapDur'], this['flapAmount'], 0x2);
    var _0x23b065 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/donkey_head' + this['specType'] + '.png'),
        _0x11af89 = this['skinRad'];
    if (_0x23b065) {
        _0x1d2dab['save']();
        var _0x181e80 = 0x0,
            _0x53fe87 = 0x1,
            _0x1f083b = 0.85,
            _0x3dfc2d = 1.2;
        if (this['specType'] == 0x1) _0x181e80 = -0x19, _0x53fe87 = 1.2 - _0x810f6c * 0.3, _0x1f083b = 0.8 + _0x810f6c * 0.3, _0x3dfc2d = 1.4 - _0x810f6c * 0.3;
        else this['specType'] == 0x2 && (_0x181e80 = 0x19, _0x53fe87 = 0.8 - _0x810f6c * 0.3, _0x1f083b = 0.8 + _0x810f6c * 0.3, _0x3dfc2d = 1.4 - _0x810f6c * 0.3, _0x810f6c *= -0x1);
        var _0x11af89 = this['rad'] * 0x1,
            _0x28079f = 0x0,
            _0x12cd5b = this['rad'],
            _0x3ca8c4 = _0x11af89 * 0x2 * _0x3dfc2d,
            _0x132ce1 = _0x11af89 * 0x2 * _0x3dfc2d,
            _0x27610e = 0.5 * _0x53fe87,
            _0x5da89f = 0x1 * _0x1f083b;
        _0x1d2dab['rotate'](_0x2bcbaa(_0x181e80) + _0x810f6c), _0x1d2dab['drawImage'](_0x23b065, _0x28079f + _0x3ca8c4 * -_0x27610e, _0x12cd5b + _0x132ce1 * -_0x5da89f, _0x3ca8c4, _0x132ce1), _0x1d2dab['restore']();
    }
}
};

function _0x434c13() {
_0x434c13['superClass']['call'](this, _0x4ad968);
}
window['Donkey'] = _0x434c13, _0x13dc56['setCustomClassForGameObjType'](_0x434c13, _0x4ad968, _0xdb1a28);
var _0x1e3c43 = _0x3d6c08;
_0x32062f['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x32062f['prototype']['constructor'] = _0x32062f, _0x32062f['superClass'] = _0x1e3c43, _0x32062f['prototype']['animalInfo'] = function () {
var _0x269d1d = {};
_0x269d1d['aniCol'] = '#755A2A';
switch (this['animalSpecies']) {
case 0x0:
    _0x269d1d['aniName'] = 'Zebra';
    break;
case 0x1:
    _0x269d1d['aniName'] = 'Okapi';
    break;
case 0x2:
    _0x269d1d['aniName'] = 'Okapi';
    break;
case 0x64:
    _0x269d1d['aniName'] = 'Unicornze';
    break;
case 0xc9:
    _0x269d1d['aniName'] = 'Playground Zebra';
    break;
case 0xca:
    _0x269d1d['aniName'] = 'Synth Zebra';
    break;
}
return _0x269d1d['aniCol'] = '#000', _0x269d1d['skinName'] = this['getSkinName'](), _0x269d1d['upgradeText'] = 'UPGRADED to ' + _0x269d1d['aniName'] + '!\x0a Press \'W\' to give RARE kick and stun your opponents', _0x269d1d['aniDesc'] = '', _0x269d1d;
}, _0x32062f['prototype']['getSkinImageObj'] = function (_0x3127a9) {
var _0x2f25b8 = this['animalSpecies'] === 0xc9 || this['animalSpecies'] === 0x2 || this['animalSpecies'] === 0x1 || this['animalSpecies'] === 0x64 ? 0x1 : this['mopeSeasonID'];
return this['getSkinImageObjForSeason'](_0x3127a9, _0x2f25b8);
}, _0x32062f['prototype']['getAbilityInfo'] = function (_0x47264c) {
var _0x1c670b = {};
return _0x1c670b['abilName'] = 'Side Kick!', _0x1c670b['abilImg'] = 'abilities/Kick.svg', _0x1c670b['skinThemeID'] = this['skinThemeID'], _0x1c670b['mopeSeasonID'] = this['mopeSeasonID'], _0x1c670b;
}, _0x32062f['prototype']['getSkinName'] = function () {
let _0x4df93a = this['getSpeciesPath']() + '/zebra';
return _0x4df93a;
}, _0x32062f['prototype']['getSpeciesPath'] = function () {
return 'land/zebra/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x32062f['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x32062f() {
_0x32062f['superClass']['call'](this, _0x4ad968);
}
window['Zebra'] = _0x32062f, _0x13dc56['setCustomClassForGameObjType'](_0x32062f, _0x4ad968, _0x39a5c5);
var _0x18fabf = _0x18fabf,
_0x1e3c43 = _0x3d6c08;
_0x18fabf['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x18fabf['prototype']['constructor'] = _0x18fabf, _0x18fabf['superClass'] = _0x1e3c43, _0x18fabf['prototype']['objSkinSpotsCanvas'] = null, _0x18fabf['prototype']['animalInfo'] = function () {
var _0x159a62 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x159a62['aniName'] = 'Mouse';
    break;
case 0x1:
    _0x159a62['aniName'] = 'Golden Mouse';
    break;
case 0x2:
    _0x159a62['aniName'] = 'Purple Mouse';
    break;
case 0x64:
    _0x159a62['aniName'] = 'Robo Mouse';
    break;
case 0xc9:
    _0x159a62['aniName'] = 'Bubbly Mouse';
    break;
case 0xca:
    _0x159a62['aniName'] = 'Super Mouse';
    break;
case 0xcc:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x159a62['aniName'] = 'Dark Plague Rat';
        break;
    case 0x1:
        _0x159a62['aniName'] = 'Light Plague Rat';
    }
    break;
case 0xfa:
    _0x159a62['aniName'] = 'Sample Mouse';
    break;
}
return _0x159a62['upgradeText'] = 'You\'re a tiny ' + _0x159a62['aniName'] + '- Eat food to grow!', _0x159a62['aniCol'] = 'gray', _0x159a62['skinName'] = 'land/mouse/' + this['animalSpecies'] + this['getSubSpecies']() + '/mouse', _0x159a62;
}, _0x18fabf['prototype']['getSkinName'] = function () {
return 'land/mouse/' + this['animalSpecies'] + this['getSubSpecies']() + '/mouse';
}, _0x18fabf['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return this['animalSpecies'] === 0xcc ? '/' + this['animalSubSpecies'] : '';
};

function _0x18fabf() {
_0x18fabf['superClass']['call'](this, _0x4ad968);
}
window['Mouse'] = _0x18fabf, _0x13dc56['setCustomClassForGameObjType'](_0x18fabf, _0x4ad968, _0xb392ab);
var _0x38f043 = _0x38f043,
_0x1e3c43 = _0x3d6c08;
_0x38f043['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x38f043['prototype']['constructor'] = _0x38f043, _0x38f043['superClass'] = _0x1e3c43, _0x38f043['prototype']['objSkinSpotsCanvas'] = null, _0x38f043['prototype']['getSkinName'] = function () {
let _0x5a2689 = this['getSpeciesPath']() + '/bear';
return _0x5a2689;
}, _0x38f043['prototype']['getSpeciesPath'] = function () {
return 'land/bear/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x38f043['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x38f043['prototype']['animalInfo'] = function () {
var _0x18d965 = {},
    _0xced421 = '';
switch (this['animalSpecies']) {
case 0x0:
    _0x18d965['aniName'] = 'Bear', _0x18d965['upgradeText'] = 'UPGRADED to BEAR!\x0a Bears climb through green hills! (Press W to use your claw!)', _0x18d965['aniCol'] = '#99591C', _0xced421 = 'bear';
    break;
case 0x1:
    _0x18d965['aniName'] = 'Panda', _0x18d965['upgradeText'] = 'UPGRADED to ' + _0x18d965['aniName'] + '!\x0a ' + _0x18d965['aniName'] + ' climb through green hills! (Press W to use your claw!)', _0x18d965['aniCol'] = '#99591C', _0xced421 = 'bear';
    break;
case 0xca:
    _0x18d965['aniName'] = 'Beekeeper Bear', _0x18d965['upgradeText'] = 'UPGRADED to ' + _0x18d965['aniName'] + '!\x0a ' + _0x18d965['aniName'] + ' climb through green hills! (Press W to use your claw!)';
    break;
case 0xcc:
    _0x18d965['aniName'] = 'Mr. Teddy', _0x18d965['upgradeText'] = 'UPGRADED to ' + _0x18d965['aniName'] + '!\x0a ' + _0x18d965['aniName'] + ' climb through green hills! (Press W to use your claw!)', _0x18d965['aniCol'] = '#99591C', _0xced421 = 'mr_teddy';
    break;
}
return _0x18d965['aniCol'] = '#CAC05B', _0x18d965['skinName'] = this['getSkinName'](), _0x18d965;
}, _0x38f043['prototype']['getAbilityInfo'] = function (_0x22f161) {
var _0x5eb46a = {};
return _0x5eb46a['abilName'] = 'Claw Slash!', _0x5eb46a['abilImg'] = 'abilities/Slash-Claw.svg', _0x5eb46a['skinThemeID'] = this['skinThemeID'], _0x5eb46a['mopeSeasonID'] = this['mopeSeasonID'], _0x5eb46a;
};

function _0x38f043() {
_0x38f043['superClass']['call'](this, _0x4ad968);
}
window['Bear'] = _0x38f043, _0x13dc56['setCustomClassForGameObjType'](_0x38f043, _0x4ad968, _0x189024);
var _0x4cba36 = _0x4cba36,
_0x1e3c43 = _0x3d6c08;
_0x4cba36['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x4cba36['prototype']['constructor'] = _0x4cba36, _0x4cba36['superClass'] = _0x1e3c43, _0x4cba36['prototype']['objSkinSpotsCanvas'] = null, _0x4cba36['prototype']['animalInfo'] = function () {
var _0xded8fd = {};
switch (this['animalSpecies']) {
case 0x0:
    _0xded8fd['aniName'] = 'Crocodile', _0xded8fd['upgradeText'] = 'UPGRADED to BEAR!\x0a Crocs climb through green hills! (Press W to use your claw!)', _0xded8fd['aniCol'] = '#30F51C';
    break;
case 0x1:
    _0xded8fd['aniName'] = 'Giant Crocodile', _0xded8fd['aniCol'] = '#757e71';
    break;
case 0x64:
    _0xded8fd['aniName'] = 'Uncle Sam', _0xded8fd['aniCol'] = '#757e71';
    break;
case 0xc9:
    _0xded8fd['aniName'] = 'Big Hoss', _0xded8fd['aniCol'] = '#757e71';
    break;
case 0xca:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0xded8fd['aniName'] = 'Croczilla';
        break;
    case 0x1:
        _0xded8fd['aniName'] = 'Ammit';
    }
    break;
}
return _0xded8fd['upgradeText'] = 'UPGRADED to ' + _0xded8fd['aniName'] + '!\x0a Press W to bite and drag around animals! \x0a+ (Now hide in water spots)+ Swim well in Mud, Lakes & Oceans!', _0xded8fd['skinName'] = this['getSkinName'](), _0xded8fd;
}, _0x4cba36['prototype']['getSkinImageObj'] = function (_0x32b0a5) {
var _0x3da8a8 = this['animalSpecies'] === 0x1 || this['animalSpecies'] === 0x64 || this['animalSpecies'] === 0xc9 ? 0x1 : this['mopeSeasonID'],
    _0x13f31f = './assets/s/' + _0x3da8a8 + '/' + _0x32b0a5;
return this['skinThemeID'] > 0x0 && (_0x13f31f = './assets/t/' + this['skinThemeID'] + '/' + _0x32b0a5), _0x5ace1d(_0x13f31f, function (_0x31cdc1) {
    console['log'](_0x31cdc1['src']);
});
}, _0x4cba36['prototype']['getSkinName'] = function () {
let _0x51cc78 = this['getSpeciesPath']() + '/croc';
return _0x51cc78;
}, _0x4cba36['prototype']['getSpeciesPath'] = function () {
return 'land/croc/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x4cba36['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
}, _0x4cba36['prototype']['setStealth'] = function () {
_0x4cba36['superClass']['prototype']['setStealth']['call'](this), this['isCamouflage'] && (this['idealOp'] = _0x2fc9ba == this['id'] ? 0.1 : 0x0);
}, _0x4cba36['prototype']['isCamouflage'] = ![], _0x4cba36['prototype']['drawUnderSkinTail'] = function (_0x1b2ce0) {
if (!this['isCamouflage']) _0x4cba36['superClass']['prototype']['drawUnderSkinTail']['call'](this, _0x1b2ce0);
}, _0x4cba36['prototype']['drawHealthBar'] = function () {
if (!this['isCamouflage']) _0x4cba36['superClass']['prototype']['drawHealthBar']['call'](this);
}, _0x4cba36['prototype']['customUpdatedProperty'] = function (_0x20201e, _0x1a7b27) {
_0x20201e == _0x47b3b4 && (this['isCamouflage'] = _0x1a7b27['readUInt8']() == 0x1, this['setStealth']());
}, _0x4cba36['prototype']['readCustomData_onNewlyVisible'] = function (_0x4c1437) {
_0x4cba36['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x4c1437), this['isCamouflage'] = _0x4c1437['readUInt8']() == 0x1, this['setStealth']();
}, _0x4cba36['prototype']['getAbilityInfo'] = function (_0x1a6223) {
var _0x57ff37 = {};
return _0x57ff37['abilName'] = 'Bite Grab!', _0x57ff37['abilImg'] = 'abilities/Bite.svg', _0x57ff37['skinThemeID'] = this['skinThemeID'], _0x57ff37['mopeSeasonID'] = this['mopeSeasonID'], _0x57ff37;
};

function _0x4cba36() {
_0x4cba36['superClass']['call'](this, _0x4ad968);
}
window['Croc'] = _0x4cba36, _0x13dc56['setCustomClassForGameObjType'](_0x4cba36, _0x4ad968, _0x1d3e9a);
var _0x1e3c43 = _0x3d6c08;
_0x23ce20['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x23ce20['prototype']['constructor'] = _0x23ce20, _0x23ce20['superClass'] = _0x1e3c43, _0x23ce20['prototype']['updateZ'] = function () {
this['z'] = 0x186a0;
}, _0x23ce20['prototype']['canUseTailslap'] = ![], _0x23ce20['prototype']['tailState'] = 0x0, _0x23ce20['prototype']['lava'] = 0x64, _0x23ce20['prototype']['getSkinName'] = function () {
var _0x14b647 = _0x44408d || _0x31f3fc == 0x2 ? 'kingdragon' : 'kingdragon_body';
return 'volcano/kingdragon/' + this['animalSpecies'] + '/' + _0x14b647;
}, _0x23ce20['prototype']['customUpdatedProperty'] = function (_0xc9da6f, _0x35185a) {
if (_0xc9da6f == _0x42e9eb) this['canUseTailslap'] = _0x35185a['readUInt8']() == 0x1;
else _0xc9da6f == _0x466b39 && (this['tailState'] = _0x35185a['readUInt16']() / 0x64);
}, _0x23ce20['prototype']['leftWingAnim'] = null, _0x23ce20['prototype']['flapAngleDiff'] = 0x3, _0x23ce20['prototype']['flapAngle'] = 0x3, _0x23ce20['prototype']['flapF'] = 0.1, _0x23ce20['prototype']['flapDur'] = 0x2, _0x23ce20['prototype']['sF'] = 0.02, _0x23ce20['prototype']['drawWings'] = function () {
if (_0x31f3fc == 0x2 || _0x44408d) return;
this['leftWingAnim'] == null && (this['leftWingAnim'] = new _0xf2d657(this, this['flapDur'], _0xf2d657['wave']), this['leftWingAnim']['keepLastFrame'] = !![], this['leftWingAnim']['loop'] = !![], this['leftWingAnim']['onFrameEntered'] = function (_0x59b770) {
    this['forObj']['frame1'] = _0x59b770;
});
this['leftWingAnim'] != null && this['leftWingAnim']['run']();
var _0x1cfc6a = this['rad'] - this['outlineW'],
    _0x38ae9e = this['frame1'] * this['sF'] * _0x1cfc6a,
    _0x1e5b9d = -(-this['flapF'] + this['frame1']),
    _0x39ff59 = _0x1e5b9d * _0x2bcbaa(this['flapAngle']),
    _0x3b79da = 0x1f4 / 0x154,
    _0x8058c7 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/left_wing.png'),
    _0x2a8540 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/right_wing.png');
if (_0x8058c7 && _0x2a8540) {
    _0x1d2dab['save'](), _0x1d2dab['rotate'](_0x2bcbaa(this['flapAngleDiff']) + _0x39ff59), _0x1d2dab['drawImage'](_0x8058c7, -_0x1cfc6a * _0x3b79da, -_0x1cfc6a * _0x3b79da + _0x38ae9e, 0x2 * _0x1cfc6a * _0x3b79da, 0x2 * _0x1cfc6a * _0x3b79da + _0x38ae9e * 1.5), _0x1d2dab['restore'](), _0x1d2dab['save'](), _0x1d2dab['rotate'](-(_0x2bcbaa(this['flapAngleDiff']) + _0x39ff59)), _0x1d2dab['drawImage'](_0x2a8540, -_0x1cfc6a * _0x3b79da, -_0x1cfc6a * _0x3b79da + _0x38ae9e, 0x2 * _0x1cfc6a * _0x3b79da, 0x2 * _0x1cfc6a * _0x3b79da + _0x38ae9e * 1.5), _0x1d2dab['restore']();
    if (this['animalSpecies'] == 0x4) {
        let _0x42bdd3 = _0x1170c4('kd', this['spawnTime']);
        _0x42bdd3 !== undefined && _0x42bdd3 != null && (this['theFrame'] = _0x42bdd3);
        let _0x4d25e9 = !(_0x31f3fc == 0x2 || _0x44408d) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'];
        _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = Math['max'](0x0, _0x4d25e9);
        var _0x190ccb = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/left_wing_tips.png'),
            _0x3c0c54 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/right_wing_tips.png');
        _0x190ccb && _0x3c0c54 && (_0x1d2dab['save'](), _0x1d2dab['rotate'](_0x2bcbaa(this['flapAngleDiff']) + _0x39ff59), _0x1d2dab['drawImage'](_0x190ccb, -_0x1cfc6a * _0x3b79da, -_0x1cfc6a * _0x3b79da + _0x38ae9e, 0x2 * _0x1cfc6a * _0x3b79da, 0x2 * _0x1cfc6a * _0x3b79da + _0x38ae9e * 1.5), _0x1d2dab['restore'](), _0x1d2dab['save'](), _0x1d2dab['rotate'](-(_0x2bcbaa(this['flapAngleDiff']) + _0x39ff59)), _0x1d2dab['drawImage'](_0x3c0c54, -_0x1cfc6a * _0x3b79da, -_0x1cfc6a * _0x3b79da + _0x38ae9e, 0x2 * _0x1cfc6a * _0x3b79da, 0x2 * _0x1cfc6a * _0x3b79da + _0x38ae9e * 1.5), _0x1d2dab['restore']()), _0x1d2dab['restore']();
    }
}
var _0x3a9210 = this['lava'],
    _0x2b0eee = 0x32;
if (_0x3a9210 < _0x2b0eee) {
    var _0x2261f5 = _0x3a9210 / _0x2b0eee,
        _0x2be213 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/left_wing1.png'),
        _0x50b02b = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/right_wing2.png');
    _0x2be213 && _0x50b02b && (_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1 - _0x2261f5, _0x1d2dab['save'](), _0x1d2dab['rotate'](_0x2bcbaa(this['flapAngleDiff']) + _0x39ff59), _0x1d2dab['drawImage'](_0x2be213, -_0x1cfc6a * _0x3b79da, -_0x1cfc6a * _0x3b79da + _0x38ae9e, 0x2 * _0x1cfc6a * _0x3b79da, 0x2 * _0x1cfc6a * _0x3b79da + _0x38ae9e * 1.5), _0x1d2dab['restore'](), _0x1d2dab['save'](), _0x1d2dab['rotate'](-(_0x2bcbaa(this['flapAngleDiff']) + _0x39ff59)), _0x1d2dab['drawImage'](_0x50b02b, -_0x1cfc6a * _0x3b79da, -_0x1cfc6a * _0x3b79da + _0x38ae9e, 0x2 * _0x1cfc6a * _0x3b79da, 0x2 * _0x1cfc6a * _0x3b79da + _0x38ae9e * 1.5), _0x1d2dab['restore'](), _0x1d2dab['restore']());
}
}, _0x23ce20['prototype']['drawSkinCustomization'] = function () {
if (this['flag_underWater']) return;
if (_0x31f3fc == 0x2 || _0x44408d) return;
var _0x3a25fb = 0x1f4 / 0x154;
let _0xb4abf1 = _0x1170c4('kd', this['spawnTime']);
_0xb4abf1 !== undefined && _0xb4abf1 != null && (this['theFrame'] = _0xb4abf1);
let _0x54bffe = !(_0x31f3fc == 0x2 || _0x44408d) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'];
var _0x1c3cb2 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/nostrils.png');
if (_0x1c3cb2) {
    _0x1d2dab['save']();
    var _0x4f6133 = this['lava'],
        _0x1821ed = 0x64,
        _0x2f4817 = _0x4f6133 / _0x1821ed;
    _0x1d2dab['globalAlpha'] = Math['max'](0x0, _0x54bffe) * _0x2f4817;
    var _0x1d4962 = this['rad'] - this['outlineW'];
    _0x1d2dab['drawImage'](_0x1c3cb2, -_0x1d4962 * _0x3a25fb, -_0x1d4962 * _0x3a25fb, 0x2 * _0x1d4962 * _0x3a25fb, 0x2 * _0x1d4962 * _0x3a25fb), _0x1d2dab['restore']();
}
if (!this['canUseTailslap']) {
    var _0x8d2691 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/bone1.png');
    if (_0x8d2691) {
        _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1;
        var _0x1d4962 = this['rad'] - this['outlineW'];
        _0x1d2dab['drawImage'](_0x8d2691, -_0x1d4962 * _0x3a25fb, -_0x1d4962 * _0x3a25fb, 0x2 * _0x1d4962 * _0x3a25fb, 0x2 * _0x1d4962 * _0x3a25fb), _0x1d2dab['restore']();
    }
    var _0x33156a = 0x0;
    if (this['tailState'] < 0xb && this['tailState'] > 0x5) {
        var _0xfed817 = this['tailState'] - 0x5;
        _0x33156a = _0xfed817 / 0x6;
    } else this['tailState'] <= 0x3 && (_0x33156a = this['tailState'] / 0x3);
    var _0x1399aa = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/bone3.png');
    if (this['tailState'] < 0xb) {
        if (_0x1399aa) {
            _0x1d2dab['save']();
            if (this['tailState'] > 0x5) _0x1d2dab['globalAlpha'] = 0x1 - _0x33156a;
            else _0x1d2dab['globalAlpha'] = 0x1;
            var _0x1d4962 = this['rad'] - this['outlineW'];
            _0x1d2dab['drawImage'](_0x1399aa, -_0x1d4962 * _0x3a25fb, -_0x1d4962 * _0x3a25fb, 0x2 * _0x1d4962 * _0x3a25fb, 0x2 * _0x1d4962 * _0x3a25fb), _0x1d2dab['restore']();
        }
    }
    var _0x2a6753 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/bone2.png');
    if (this['tailState'] < 0x3) {
        if (_0x2a6753) {
            _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1 - _0x33156a;
            var _0x1d4962 = this['rad'] - this['outlineW'];
            _0x1d2dab['drawImage'](_0x2a6753, -_0x1d4962 * _0x3a25fb, -_0x1d4962 * _0x3a25fb, 0x2 * _0x1d4962 * _0x3a25fb, 0x2 * _0x1d4962 * _0x3a25fb), _0x1d2dab['restore']();
        }
    }
} else {
    var _0x2a6753 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/bone2.png');
    if (_0x2a6753) {
        _0x1d2dab['save']();
        var _0xd52d9 = Math['max'](0.3, _0x54bffe);
        _0x1d2dab['globalAlpha'] = _0xd52d9;
        var _0x1d4962 = this['rad'] - this['outlineW'];
        _0x1d2dab['drawImage'](_0x2a6753, -_0x1d4962 * _0x3a25fb, -_0x1d4962 * _0x3a25fb, 0x2 * _0x1d4962 * _0x3a25fb, 0x2 * _0x1d4962 * _0x3a25fb), _0x1d2dab['restore']();
    }
}
this['drawWings']();
}, _0x23ce20['prototype']['drawLowWaterDrop'] = function () {
if (this['flag_underWater']) return;
if (this['flag_lowWat']) {
    var _0x368ad6 = 1.2,
        _0x295367 = 0.2,
        _0x22fcce = 0.8,
        _0x5ac68a = 0.5 * (_0x22fcce - _0x295367),
        _0x5703f3 = _0x295367 + _0x5ac68a + _0x5ac68a * Math['sin'](0x2 * Math['PI'] / _0x368ad6 * (_0x740c5b / 0x3e8));
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = _0x5703f3, _0x1d2dab['fillStyle'] = _0x3ada2a, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, this['rad'] + 0x5, 0x5, 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['restore']();
}
}, _0x23ce20['prototype']['animalInfo'] = function () {
var _0x4e7e01 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x4e7e01['aniName'] = 'King Dragon';
    break;
case 0x1:
    _0x4e7e01['aniName'] = 'Golden King Dragon';
    break;
case 0x2:
    _0x4e7e01['aniName'] = 'King Ripper';
    break;
case 0x3:
    _0x4e7e01['aniName'] = 'King Stan';
    break;
case 0x4:
    _0x4e7e01['aniName'] = 'King Shah';
    break;
case 0x5:
    _0x4e7e01['aniName'] = 'Queen Scarlet';
    break;
case 0x6:
    _0x4e7e01['aniName'] = 'Queen Celeste';
    break;
case 0xc8:
    _0x4e7e01['aniName'] = 'Queen Flame';
    break;
case 0xca:
    _0x4e7e01['aniName'] = 'King Graveyard';
    break;
}
return _0x4e7e01['aniCol'] = '#FF9000', _0x4e7e01['skinName'] = this['getSkinName'](), _0x4e7e01['upgradeText'] = 'UPGRADED to ' + _0x4e7e01['aniName'], _0x4e7e01['upgradeText'] += '!\x0aYou got firestream that burns your victim alive! Watch your tail and slap them hard.', _0x4e7e01['aniCol'] = 'black', _0x4e7e01;
}, _0x23ce20['prototype']['getAbilityInfo'] = function (_0xea28b2) {
var _0x368d81 = {};
_0x368d81['abilName'] = 'Firestream\x0a& Tail slap';
var _0x4b68f5 = 0x0;
switch (this['animalSpecies']) {
case 0x0:
    _0x4b68f5 = 0x1;
    break;
case 0x1:
    _0x4b68f5 = 0x2;
    break;
case 0x2:
    _0x4b68f5 = 0x4;
    break;
case 0x3:
    _0x4b68f5 = 0x5;
    break;
case 0x4:
    _0x4b68f5 = 0x6;
    break;
case 0x5:
    _0x4b68f5 = 0x9;
    break;
case 0x6:
    _0x4b68f5 = 0x8;
    break;
}
return _0x368d81['speciesType'] = _0x4b68f5, _0x368d81['abilImg'] = 'abilities/Fireball.svg', _0x368d81['skinThemeID'] = this['skinThemeID'], _0x368d81['mopeSeasonID'] = this['mopeSeasonID'], _0x368d81;
};

function _0x23ce20() {
this['lava'] = 0x64, _0x23ce20['superClass']['call'](this, _0x4ad968);
}
window['KingDragon'] = _0x23ce20, _0x13dc56['setCustomClassForGameObjType'](_0x23ce20, _0x4ad968, _0x1ed4e2);
var _0x1e3c43 = _0x3d6c08;
_0x3c0733['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x3c0733['prototype']['constructor'] = _0x3c0733, _0x3c0733['superClass'] = _0x1e3c43, _0x3c0733['prototype']['animalInfo'] = function () {
var _0x502952 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x502952['aniName'] = 'The Yeti!';
    break;
case 0x1:
    _0x502952['aniName'] = 'Golden Yeti!';
    break;
case 0x2:
    _0x502952['aniName'] = 'Emerald Yeti!';
    break;
case 0x3:
    _0x502952['aniName'] = 'Aqua Yeti';
    break;
case 0xc9:
    _0x502952['aniName'] = 'Squishy Yeti';
    break;
case 0xca:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x502952['aniName'] = 'Lovely Yeti';
        break;
    case 0x1:
        _0x502952['aniName'] = 'Frosty Eye Demon';
    }
    break;
case 0xcc:
    _0x502952['aniName'] = 'Frost Wolf';
    break;
case 0xdc:
    _0x502952['aniName'] = 'Glacial Demon';
    break;
}
return _0x502952['skinName'] = this['getSkinName'](), _0x502952['aniDesc'] = '', _0x502952['upgradeText'] = 'UPGRADED to ' + _0x502952['aniName'] + '!\x0a So it really exists... \x0a Hold W to turn into snow, release W to freeeeeze!', _0x502952['aniCol'] = '#839eb5', _0x502952;
}, _0x3c0733['prototype']['getAbilityInfo'] = function (_0x4f197e) {
var _0x48cafa = {};
return _0x48cafa['abilName'] = 'Yeti Roar' + (this['animalSpecies'] == 0x3 ? ' &\x0a Ice Statue' : '') + '', _0x48cafa['abilImg'] = 'abilities/Growl-Roar.svg', _0x48cafa['skinThemeID'] = this['skinThemeID'], _0x48cafa['mopeSeasonID'] = this['mopeSeasonID'], _0x48cafa;
}, _0x3c0733['prototype']['getSkinName'] = function () {
var _0x1e1a87 = this['specType'] == 0x0 ? '' : 0x1;
return this['getSpeciesPath']('yeti') + '/yeti' + _0x1e1a87;
}, _0x3c0733['prototype']['getSubSpecies'] = function () {
return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
}, _0x3c0733['prototype']['getSpeciesPath'] = function (_0x51151c) {
return 'arctic/' + _0x51151c + '/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x3c0733['prototype']['drawOnTopOfSkinImg'] = function () {}, _0x3c0733['prototype']['isTransforming'] = ![], _0x3c0733['prototype']['readCustomData_onNewlyVisible'] = function (_0x3c3fa0) {
_0x3c0733['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x3c3fa0), this['isTransforming'] = _0x3c3fa0['readUInt8']() == 0x1;
}, _0x3c0733['prototype']['customUpdatedProperty'] = function (_0x27e0c9, _0x2b9d70) {
_0x27e0c9 == _0x41314c && (this['isTransforming'] = _0x2b9d70['readUInt8']() == 0x1);
}, _0x3c0733['prototype']['getIdealOpacity'] = function () {
var _0x5bf8fc = this['flag_underWater'] || this['flag_usingAbility'] && this['isTransforming'] || this['isCamouflage'] ? 0x0 : 0x1;
return _0x5bf8fc;
}, _0x3c0733['prototype']['biteStart'] = 0x0, _0x3c0733['prototype']['flapAmount'] = 0x3, _0x3c0733['prototype']['flapDur'] = 1.5, _0x3c0733['prototype']['roarStartT'] = -0x1f4, _0x3c0733['prototype']['drawSkinCustomization'] = function () {
if (this['flag_usingAbility'] && this['isTransforming']) {
    if (this['isTransforming']) {
        _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1;
        var _0x4d7af1 = this['getSkinImageObj']('img/snowball.png');
        if (_0x4d7af1) {
            var _0x200d1d = this['rad'];
            _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0x4d7af1, -_0x200d1d, -_0x200d1d, 0x2 * _0x200d1d, 0x2 * _0x200d1d);
        } else this['drawOutlinedCircle']('', 'white');
        _0x1d2dab['restore']();
    }
} else {
    if (this['animalSpecies'] == 0x4) return;
    this['setSkinScale']();
    if (!this['flag_usingAbility']) {
        this['biteStart'] = 0x0;
        return;
    } else {
        this['biteStart'] == 0x0 && (this['biteStart'] = _0x740c5b + this['roarStartT']);
        if (this['specType'] != 0x0 && this['specType'] != undefined) {
            var _0xdff501 = 'skins/arctic/yeti/' + this['animalSpecies'] + '/yeti_head1.png',
                _0x34bc31 = this['getSkinImageObj'](_0xdff501),
                _0x33a323 = (_0x740c5b - this['biteStart']) / 0x3e8,
                _0x565c15 = this['skinScale'] * 1.07,
                _0x200d1d = this['skinRad'];
            if (_0x34bc31) {
                var _0x5d75dc = 0x0,
                    _0x33e444 = this['flapAmount'] - (this['animalSpecies'] == 0x1 ? 0.5 : 0x0);
                _0x5d75dc = !(_0x31f3fc == 0x2) ? _0x21d673(_0x33a323, this['flapDur'], _0x33e444, 0x2) : this['flapAmount'], _0x1d2dab['save']();
                var _0x200d1d = this['rad'];
                _0x1d2dab['drawImage'](_0x34bc31, -_0x200d1d * _0x565c15, (-_0x200d1d + _0x200d1d * 0.1) * _0x565c15 - _0x5d75dc, 0x2 * _0x200d1d * _0x565c15, 0x2 * _0x200d1d * _0x565c15), _0x1d2dab['restore']();
            }
        }
    }
}
};

function _0x3c0733() {
_0x3c0733['superClass']['call'](this, _0x4ad968);
}
window['Yeti'] = _0x3c0733, _0x13dc56['setCustomClassForGameObjType'](_0x3c0733, _0x4ad968, _0x55a926);
var _0x1e3c43 = _0x3d6c08;
_0x133f14['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x133f14['prototype']['constructor'] = _0x133f14, _0x133f14['superClass'] = _0x1e3c43, _0x133f14['prototype']['animalInfo'] = function () {
var _0x5cd6ee = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x5cd6ee['aniName'] = 'Mammoth!';
    break;
case 0x1:
    _0x5cd6ee['aniName'] = 'Golden Mammoth!';
    break;
case 0x2:
    _0x5cd6ee['aniName'] = 'Black Mammoth!';
    break;
case 0xc9:
    _0x5cd6ee['aniName'] = 'Lost Tourist!';
    break;
case 0xca:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x5cd6ee['aniName'] = 'Acid Mammoth';
        break;
    case 0x1:
        _0x5cd6ee['aniName'] = 'Crystal Golem';
    }
    break;
case 0xdc:
    _0x5cd6ee['aniName'] = ' Golem Mammoth';
    break;
}
return _0x5cd6ee['skinName'] = this['getSkinName'](), _0x5cd6ee['aniDesc'] = '', _0x5cd6ee['upgradeText'] = 'UPGRADED to ' + _0x5cd6ee['aniName'] + '\x0a Press W to roll snowballs with your trunk!\x0a The bigger the snowball gets, the longer the freeze!', _0x5cd6ee['aniCol'] = '#9d4717', _0x5cd6ee;
}, _0x133f14['prototype']['getAbilityInfo'] = function (_0x5aab12) {
var _0x148253 = {};
return _0x148253['abilName'] = 'Roll snow', _0x148253['abilImg'] = 'abilities/Roll-RollSnowball.svg', _0x148253['skinThemeID'] = this['skinThemeID'], _0x148253['mopeSeasonID'] = this['mopeSeasonID'], _0x148253;
}, _0x133f14['prototype']['getSkinName'] = function () {
var _0x5a7ce1 = this['specType'] == 0x0 ? '' : 0x1;
return 'arctic/mammoth/' + this['animalSpecies'] + this['getSubSpecies']() + '/mammoth' + _0x5a7ce1;
}, _0x133f14['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
};

function _0x133f14() {
_0x133f14['superClass']['call'](this, _0x4ad968);
}
window['Mammoth'] = _0x133f14, _0x13dc56['setCustomClassForGameObjType'](_0x133f14, _0x4ad968, _0x40ac2b);
var _0x1e3c43 = _0x3d6c08;
_0x141b0b['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x141b0b['prototype']['constructor'] = _0x141b0b, _0x141b0b['superClass'] = _0x1e3c43, _0x141b0b['prototype']['animalInfo'] = function () {
var _0x30fc31 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x30fc31['aniName'] = 'Sabertooth Tiger!';
    break;
case 0x1:
    _0x30fc31['aniName'] = 'Golden Tiger!';
    break;
case 0x2:
    _0x30fc31['aniName'] = 'Margala Sabertooth!';
    break;
case 0xc8:
    _0x30fc31['aniName'] = 'Techno Saber!';
    break;
case 0xc9:
    _0x30fc31['aniName'] = 'Strawbertooth!';
    break;
case 0xca:
    _0x30fc31['aniName'] = 'Ice-Fang Sabertooth';
    break;
case 0xcc:
    _0x30fc31['aniName'] = 'Shadow Sabeertooth!';
    break;
}
return _0x30fc31['skinName'] = this['getSkinName'](), _0x30fc31['aniDesc'] = '', _0x30fc31['upgradeText'] = 'UPGRADED to ' + _0x30fc31['aniName'] + '\x0aSabertooth Tigers are great swimmers, dominate the Lakes/Oceans/Mud!', _0x30fc31['aniCol'] = '#945A99', _0x30fc31;
}, _0x141b0b['prototype']['getAbilityInfo'] = function (_0x4478d6) {
var _0x40368e = {};
return _0x40368e['abilName'] = 'Claw Slash!', _0x40368e['abilImg'] = 'abilities/Slash-Claw.svg', _0x40368e['skinThemeID'] = this['skinThemeID'], _0x40368e['mopeSeasonID'] = this['mopeSeasonID'], _0x40368e;
}, _0x141b0b['prototype']['getSkinName'] = function () {
return 'arctic/sabertooth/' + this['animalSpecies'] + this['getSubSpecies']() + '/sabertooth' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x141b0b['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x141b0b() {
_0x141b0b['superClass']['call'](this, _0x4ad968);
}
window['Sabertooth'] = _0x141b0b, _0x13dc56['setCustomClassForGameObjType'](_0x141b0b, _0x4ad968, _0x39e9c9);
var _0x1e3c43 = _0x3d6c08;
_0x46f99f['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x46f99f['prototype']['constructor'] = _0x46f99f, _0x46f99f['superClass'] = _0x1e3c43, _0x46f99f['prototype']['animalInfo'] = function () {
var _0x5f4f7b = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x5f4f7b['aniName'] = 'Penguin';
    break;
case 0xc9:
    _0x5f4f7b['aniName'] = 'Surfer Penguin';
    break;
case 0xca:
    _0x5f4f7b['aniName'] = 'UFO Pigeon';
    break;
}
return _0x5f4f7b['skinName'] = this['getSkinName'](), _0x5f4f7b['aniDesc'] = '', _0x5f4f7b['upgradeText'] = 'UPGRADED to ' + _0x5f4f7b['aniName'] + '!\x0a Left-click to run!\x0a (HOLD W to slide FAST on ice)!', _0x5f4f7b['aniCol'] = '#FFFFFF', _0x5f4f7b;
}, _0x46f99f['prototype']['getAbilityInfo'] = function (_0x3aa62e) {
var _0x2ae1e1 = {};
return _0x2ae1e1['abilName'] = 'Slide on ice', _0x2ae1e1['abilImg'] = 'abilities/Slide.svg', _0x2ae1e1['skinThemeID'] = this['skinThemeID'], _0x2ae1e1['mopeSeasonID'] = this['mopeSeasonID'], _0x2ae1e1;
}, _0x46f99f['prototype']['getSkinName'] = function () {
return 'arctic/penguin/' + this['animalSpecies'] + this['getSubSpecies']() + '/penguin' + (this['specType'] == 0x0 ? '' : 0x1);
}, _0x46f99f['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x46f99f() {
_0x46f99f['superClass']['call'](this, _0x4ad968);
}
window['Penguin'] = _0x46f99f, _0x13dc56['setCustomClassForGameObjType'](_0x46f99f, _0x4ad968, _0x236cec);
var _0x1e3c43 = _0x3d6c08;
_0x137276['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x137276['prototype']['constructor'] = _0x137276, _0x137276['superClass'] = _0x1e3c43, _0x137276['prototype']['animalInfo'] = function () {
var _0x26fa70 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x26fa70['aniName'] = 'Seal';
    break;
case 0xc9:
    _0x26fa70['aniName'] = 'Hawaiian Monk';
    break;
case 0xca:
    _0x26fa70['aniName'] = 'Soapy Seal';
    break;
}
return _0x26fa70['skinName'] = this['getSkinName'](), _0x26fa70['aniDesc'] = '', _0x26fa70['upgradeText'] = 'UPGRADED to ' + _0x26fa70['aniName'] + '!\x0a You can slide on ice (Hold W) + can climb hills (rocks too!)', _0x26fa70['aniCol'] = '#633838', _0x26fa70;
}, _0x137276['prototype']['getAbilityInfo'] = function (_0x3d279c) {
var _0x477568 = {};
return _0x477568['abilName'] = 'Slide on ice', _0x477568['abilImg'] = 'abilities/Slide.svg', _0x477568['skinThemeID'] = this['skinThemeID'], _0x477568['mopeSeasonID'] = this['mopeSeasonID'], _0x477568;
}, _0x137276['prototype']['getSkinName'] = function () {
return 'arctic/seal/' + this['animalSpecies'] + this['getSubSpecies']() + '/seal' + (this['specType'] == 0x0 ? '' : 0x1);
}, _0x137276['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x137276() {
_0x137276['superClass']['call'](this, _0x4ad968);
}
window['Seal'] = _0x137276, _0x13dc56['setCustomClassForGameObjType'](_0x137276, _0x4ad968, _0x1fc0ae);
var _0x1e3c43 = _0x3d6c08;
_0x4f2688['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x4f2688['prototype']['constructor'] = _0x4f2688, _0x4f2688['superClass'] = _0x1e3c43, _0x4f2688['prototype']['animalInfo'] = function () {
var _0x3ba2e4 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x3ba2e4['aniName'] = 'Walrus!';
    break;
case 0x64:
    _0x3ba2e4['aniName'] = 'Candy Rus!';
    break;
case 0xc9:
    _0x3ba2e4['aniName'] = 'Walrusmelon!';
    break;
case 0xca:
    _0x3ba2e4['aniName'] = 'Potato Walrus';
    break;
}
return _0x3ba2e4['skinName'] = this['getSkinName'](), _0x3ba2e4['aniDesc'] = '', _0x3ba2e4['upgradeText'] = 'UPGRADED to ' + _0x3ba2e4['aniName'] + '\x0a You can slide on ice (Hold W) + can climb hills (rocks too!)', _0x3ba2e4['aniCol'] = '#633838', _0x3ba2e4;
}, _0x4f2688['prototype']['getAbilityInfo'] = function (_0x58e24a) {
var _0x16d5f2 = {};
return _0x16d5f2['abilName'] = 'Slide on ice', _0x16d5f2['abilImg'] = 'abilities/Slide.svg', _0x16d5f2['skinThemeID'] = this['skinThemeID'], _0x16d5f2['mopeSeasonID'] = this['mopeSeasonID'], _0x16d5f2;
}, _0x4f2688['prototype']['getSkinName'] = function () {
return 'arctic/walrus/' + this['animalSpecies'] + this['getSubSpecies']() + '/walrus' + (this['specType'] == 0x0 ? '' : 0x1);
}, _0x4f2688['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x4f2688() {
_0x4f2688['superClass']['call'](this, _0x4ad968);
}
window['Walrus'] = _0x4f2688, _0x13dc56['setCustomClassForGameObjType'](_0x4f2688, _0x4ad968, _0x52ea48);
var _0x1e3c43 = _0x3d6c08;
_0x1cef1a['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x1cef1a['prototype']['constructor'] = _0x1cef1a, _0x1cef1a['superClass'] = _0x1e3c43, _0x1cef1a['prototype']['animalInfo'] = function () {
var _0x52e537 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x52e537['aniName'] = 'Wolf!';
    break;
case 0xc9:
    _0x52e537['aniName'] = 'Pineapple Wolf!';
    break;
case 0xdc:
    _0x52e537['aniName'] = 'Okami Wolf';
    break;
}
return _0x52e537['skinName'] = this['getSkinName'](), _0x52e537['upgradeText'] = 'UPGRADED to ' + _0x52e537['aniName'] + '\x0a Wolf paws turn very well on ice!\x0a Press W to howl!', _0x52e537['aniCol'] = '#6B6B6B', _0x52e537;
}, _0x1cef1a['prototype']['getAbilityInfo'] = function (_0x4760bb) {
var _0x25e283 = {};
return _0x25e283['abilName'] = 'Howl!', _0x25e283['abilImg'] = 'abilities/Howl.svg', _0x25e283['skinThemeID'] = this['skinThemeID'], _0x25e283['mopeSeasonID'] = this['mopeSeasonID'], _0x25e283;
}, _0x1cef1a['prototype']['getSkinName'] = function () {
var _0x4e2f5e = this['specType'] == 0x0 ? '' : 0x1;
return 'arctic/wolf/' + this['animalSpecies'] + this['getSubSpecies']() + '/wolf' + _0x4e2f5e;
}, _0x1cef1a['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x1cef1a() {
_0x1cef1a['superClass']['call'](this, _0x4ad968);
}
window['Wolf'] = _0x1cef1a, _0x13dc56['setCustomClassForGameObjType'](_0x1cef1a, _0x4ad968, _0x45e678);
var _0x1e3c43 = _0x3d6c08;
_0x2f921c['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x2f921c['prototype']['constructor'] = _0x2f921c, _0x2f921c['superClass'] = _0x1e3c43, _0x2f921c['prototype']['animalInfo'] = function () {
var _0x630ccc = {};
_0x630ccc['aniName'] = 'Wolverine!';
switch (this['animalSpecies']) {
case 0xca:
    _0x630ccc['aniName'] = 'Floral Wolverine';
    break;
case 0xdc:
    _0x630ccc['aniName'] = 'Summoner Wolverine';
    break;
}
return _0x630ccc['skinName'] = this['getSkinName'](), _0x630ccc['upgradeText'] = 'UPGRADED to ' + _0x630ccc['aniName'] + '!\x0a Press W to Let out a Powerful GROWL! (Knocks back prey!)', _0x630ccc['aniCol'] = '#843A0F', _0x630ccc;
}, _0x2f921c['prototype']['getAbilityInfo'] = function (_0x45f348) {
var _0x2afa75 = {};
return _0x2afa75['abilName'] = 'Roar!', _0x2afa75['abilImg'] = 'abilities/Howl-1.svg', _0x2afa75['skinThemeID'] = this['skinThemeID'], _0x2afa75['mopeSeasonID'] = this['mopeSeasonID'], _0x2afa75;
}, _0x2f921c['prototype']['getSkinName'] = function () {
return 'arctic/wolverine/' + this['animalSpecies'] + this['getSubSpecies']() + '/wolverine' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x2f921c['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x2f921c() {
_0x2f921c['superClass']['call'](this, _0x4ad968);
}
window['Wolverine'] = _0x2f921c, _0x13dc56['setCustomClassForGameObjType'](_0x2f921c, _0x4ad968, _0x136680);
var _0x1e3c43 = _0x3d6c08;
_0x5b35c3['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x5b35c3['prototype']['constructor'] = _0x5b35c3, _0x5b35c3['superClass'] = _0x1e3c43, _0x5b35c3['prototype']['animalInfo'] = function () {
var _0x5a1e97 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x5a1e97['aniName'] = 'Muskox!';
    break;
case 0xc8:
    _0x5a1e97['aniName'] = 'Brazen Bull!';
    break;
case 0xc9:
    _0x5a1e97['aniName'] = 'Fireworks Ox!';
    break;
case 0xca:
    _0x5a1e97['aniName'] = 'Monitor Muskox';
    break;
}
return _0x5a1e97['skinName'] = this['getSkinName'](), _0x5a1e97['aniDesc'] = '', _0x5a1e97['upgradeText'] = 'UPGRADED to ' + _0x5a1e97['aniName'] + '\x0a Press W to charge with your horns! \x0aPlus move decently on ice!', _0x5a1e97['aniCol'] = '#231f18', _0x5a1e97;
}, _0x5b35c3['prototype']['getAbilityInfo'] = function (_0x2313db) {
var _0x45ad47 = {};
return _0x45ad47['abilName'] = 'Charge!', _0x45ad47['abilImg'] = 'abilities/Charge.svg', _0x45ad47['skinThemeID'] = this['skinThemeID'], _0x45ad47['mopeSeasonID'] = this['mopeSeasonID'], _0x45ad47;
}, _0x5b35c3['prototype']['getSkinName'] = function () {
return 'arctic/muskox/' + this['animalSpecies'] + this['getSubSpecies']() + '/muskox' + (this['flag_usingAbility'] ? '2' : '');
}, _0x5b35c3['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x5b35c3() {
_0x5b35c3['superClass']['call'](this, _0x4ad968);
}
window['Muskox'] = _0x5b35c3, _0x13dc56['setCustomClassForGameObjType'](_0x5b35c3, _0x4ad968, _0x4f4705);
var _0x1e3c43 = _0x3d6c08;
_0x15cd0['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x15cd0['prototype']['constructor'] = _0x15cd0, _0x15cd0['superClass'] = _0x1e3c43, _0x15cd0['prototype']['animalInfo'] = function () {
var _0x1d31a6 = {};
if (this['animalSpecies'] == 0x1) _0x1d31a6['aniName'] = 'The Snowman', _0x1d31a6['skinName'] = 'arctic/snowman/' + this['animalSpecies'] + '/snowman';
else this['animalSpecies'] == 0x2 && (_0x1d31a6['aniName'] = 'The Snowgirl', _0x1d31a6['skinName'] = 'arctic/snowman/' + this['animalSpecies'] + '/snowgirl');
return _0x1d31a6['aniDesc'] = '', _0x1d31a6['upgradeText'] = 'UPGRADED to ' + _0x1d31a6['aniName'] + '!\x0a So it really exists... \x0a Hold W to turn into snow, release W to freeeeeze!', _0x1d31a6['aniCol'] = '#839eb5', _0x1d31a6;
}, _0x15cd0['prototype']['getAbilityInfo'] = function (_0x38ca6d) {
var _0x21313c = {};
return _0x21313c['abilName'] = 'Freeze Prey!', _0x21313c['abilImg'] = 'abilities/Ice-Freeze.svg', _0x21313c['skinThemeID'] = this['skinThemeID'], _0x21313c['mopeSeasonID'] = this['mopeSeasonID'], _0x21313c;
}, _0x15cd0['prototype']['getSkinName'] = function () {
var _0x10a8be = '';
if (this['animalSpecies'] == 0x2) _0x10a8be = 'arctic/snowman/' + this['animalSpecies'] + '/snowgirl';
else _0x10a8be = 'arctic/snowman/' + this['animalSpecies'] + '/snowman';
return _0x10a8be += this['specType'] == 0x0 ? '' : 0x1, _0x10a8be;
}, _0x15cd0['prototype']['drawUnderSkinTail'] = function (_0x19f16e) {
if (!this['isCamouflage']) _0x15cd0['superClass']['prototype']['drawUnderSkinTail']['call'](this, _0x19f16e);
}, _0x15cd0['prototype']['drawHealthBar'] = function () {
if (!this['isCamouflage']) _0x15cd0['superClass']['prototype']['drawHealthBar']['call'](this);
}, _0x15cd0['prototype']['isTransforming'] = ![], _0x15cd0['prototype']['isCamouflage'] = ![], _0x15cd0['prototype']['carrotAlpha'] = 0x0, _0x15cd0['prototype']['getIdealOpacity'] = function () {
var _0x287316 = this['flag_underWater'] || this['flag_usingAbility'] && this['isTransforming'] || this['isCamouflage'] ? 0x0 : 0x1;
return _0x287316;
}, _0x15cd0['prototype']['biteStart'] = 0x0, _0x15cd0['prototype']['flapAmount'] = 0x3, _0x15cd0['prototype']['flapDur'] = 1.5, _0x15cd0['prototype']['roarStartT'] = -0x1f4, _0x15cd0['prototype']['drawSkinCustomization'] = function () {
if (this['flag_usingAbility'] && this['isTransforming']) {
    if (this['isTransforming']) {
        _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1;
        var _0x4d8f05 = this['getSkinImageObj']('img/snowball.png');
        if (_0x4d8f05) {
            var _0x229ceb = this['rad'];
            _0x1d2dab['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0x4d8f05, -_0x229ceb, -_0x229ceb, 0x2 * _0x229ceb, 0x2 * _0x229ceb);
        } else this['drawOutlinedCircle']('', 'white');
        _0x1d2dab['restore']();
    }
} else {
    this['setSkinScale']();
    if (!this['flag_usingAbility'] && !this['isCamouflage']) {
        if (this['carrotAlpha'] > 0x0) {
            var _0x1fb118 = this['getSkinImageObj']('skins/arctic/snowman/' + this['animalSpecies'] + '/carrot_nose.png'),
                _0x174d0f = this['skinScale'],
                _0x229ceb = this['skinRad'];
            if (_0x1fb118) {
                _0x1d2dab['save']();
                var _0x229ceb = this['rad'];
                _0x1d2dab['globalAlpha'] = this['carrotAlpha'], _0x1d2dab['drawImage'](_0x1fb118, -_0x229ceb * _0x174d0f, -_0x229ceb * _0x174d0f, 0x2 * _0x229ceb * _0x174d0f, 0x2 * _0x229ceb * _0x174d0f), _0x1d2dab['restore']();
            }
        }
        this['biteStart'] = 0x0;
        return;
    } else {
        this['biteStart'] == 0x0 && (this['biteStart'] = _0x740c5b + this['roarStartT']);
        if (this['specType'] != 0x0 && this['specType'] != undefined) {
            var _0x3a615a = this['animalSpecies'] == 0x2 ? 'snowgirl' : 'snowman',
                _0x1d5cf3 = 'skins/arctic/snowman/' + this['animalSpecies'] + '/' + _0x3a615a + '_head1.png',
                _0x1fb118 = this['getSkinImageObj'](_0x1d5cf3),
                _0x12f49e = (_0x740c5b - this['biteStart']) / 0x3e8,
                _0x174d0f = this['skinScale'] * 1.07,
                _0x229ceb = this['skinRad'];
            if (_0x1fb118) {
                var _0x3a23a3 = 0x0,
                    _0x1f17e2 = this['flapAmount'] - (this['animalSpecies'] == 0x1 ? 0.5 : 0x0);
                _0x3a23a3 = !(_0x31f3fc == 0x2) ? _0x21d673(_0x12f49e, this['flapDur'], _0x1f17e2, 0x2) : this['flapAmount'], _0x1d2dab['save']();
                var _0x229ceb = this['rad'];
                _0x1d2dab['drawImage'](_0x1fb118, -_0x229ceb * _0x174d0f, (-_0x229ceb + _0x229ceb * 0.1) * _0x174d0f - _0x3a23a3, 0x2 * _0x229ceb * _0x174d0f, 0x2 * _0x229ceb * _0x174d0f), _0x1d2dab['restore']();
            }
        }
    }
}
}, _0x15cd0['prototype']['customUpdatedProperty'] = function (_0x2384ad, _0x10f6ba) {
if (_0x2384ad == _0x41314c) this['isTransforming'] = _0x10f6ba['readUInt8']() == 0x1;
else {
    if (_0x2384ad == _0x47b3b4) this['isCamouflage'] = _0x10f6ba['readUInt8']() == 0x1;
    else {
        if (_0x2384ad == _0x2ebece) this['carrotAlpha'] = _0x10f6ba['readUInt16']() / 0x3e8;
        else _0x2384ad == _0x439fcd && (this['lights'] = _0x10f6ba['readUInt8']());
    }
}
}, _0x15cd0['prototype']['readCustomData_onNewlyVisible'] = function (_0x317539) {
_0x15cd0['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x317539), this['isTransforming'] = _0x317539['readUInt8']() == 0x1, this['isCamouflage'] = _0x317539['readUInt8']() == 0x1, this['carrotAlpha'] = _0x317539['readUInt16']() / 0x3e8, this['lights'] = _0x317539['readUInt8']();
};

function _0x15cd0() {
_0x15cd0['superClass']['call'](this, _0x4ad968);
}
window['Snowman'] = _0x15cd0, _0x13dc56['setCustomClassForGameObjType'](_0x15cd0, _0x4ad968, _0x24c923);
var _0x1e3c43 = _0x3d6c08;
_0x308e3d['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x308e3d['prototype']['constructor'] = _0x308e3d, _0x308e3d['superClass'] = _0x1e3c43, _0x308e3d['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
if (this['flag_underWater']) this['z'] = -0x64;
else {
    if (this['flag_eff_tossedInAir']) this['z'] = 0x4b0 + this['rad'];
    else {
        if (this['flag_flying']) {
            this['z'] = 0x186a0;
            if (this['flag_isGrabbed']) this['z'] -= this['rad'];
        } else {
            if (this['flag_canClimbHill']) this['z'] = 0x3eb;
            else this['z'] = this['rad'];
        }
    }
}
}, _0x308e3d['prototype']['animalInfo'] = function () {
var _0xcc9297 = {};
switch (this['animalSpecies']) {
case 0xcc:
    switch (this['animalSubSpecies']) {
    case 0x2:
        _0xcc9297['aniName'] = 'Golden Devil Goat';
        break;
    }
    break;
case 0xc9:
    switch (this['animalSubSpecies']) {
    case 0x1:
        _0xcc9297['aniName'] = 'Fruity Ice Markhor';
        break;
    }
    break;
case 0x1:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0xcc9297['aniName'] = 'Markhor';
        break;
    }
    break;
case 0x2:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0xcc9297['aniName'] = 'Big Goat';
    }
    break;
}
return _0xcc9297['aniCol'] = '#FF9000', _0xcc9297['skinName'] = this['getSkinName'](), _0xcc9297['upgradeText'] = 'UPGRADED to ' + _0xcc9297['aniName'] + '!\x0aPress \'W\' to Jump High from hills. Ram in the preys on land.', _0xcc9297;
}, _0x308e3d['prototype']['moveF'] = 0.08, _0x308e3d['prototype']['jumpAnim'] = null, _0x308e3d['prototype']['frame'] = 0x0, _0x308e3d['prototype']['getSkinImageObj'] = function (_0x1b1220) {
var _0xabe3ea = this['animalSpecies'] === 0xcc || this['animalSpecies'] === 0xc9 ? 0x1 : 0x2;
return this['getSkinImageObjForSeason'](_0x1b1220, _0xabe3ea);
}, _0x308e3d['prototype']['getAbilityInfo'] = function (_0x49e164) {
var _0x2cdd35 = {};
return _0x2cdd35['abilImg'] = 'abilities/Headbutt.svg', _0x2cdd35['abilName'] = 'Head Butt', _0x2cdd35['skinThemeID'] = this['skinThemeID'], _0x2cdd35['mopeSeasonID'] = this['mopeSeasonID'], _0x2cdd35;
}, _0x308e3d['prototype']['getSpeciesPath'] = function (_0x51827d) {
var _0x1d228e = '/' + this['animalSubSpecies'];
return 'arctic/' + _0x51827d + '/' + this['animalSpecies'] + _0x1d228e + '/';
}, _0x308e3d['prototype']['moveF'] = 0.08, _0x308e3d['prototype']['jumpAnim'] = null, _0x308e3d['prototype']['frame'] = 0x0, _0x308e3d['prototype']['drawUnderSkinImg'] = function () {
if (this['flag_usingAbility'] && this['specType'] > 0x2) {
    var _0x215056 = 0x1;
    this['jumpAnim'] == null && (this['jumpAnim'] = new _0xf2d657(this, 0.5, _0xf2d657['halfWave']), this['jumpAnim']['keepLastFrame'] = !![], this['jumpAnim']['loop'] = !![], this['jumpAnim']['onFrameEntered'] = function (_0x507d1d) {
        this['forObj']['frame'] = _0x507d1d;
    }, this['jumpAnim']['onStop'] = function () {});
    this['jumpAnim'] != null && this['jumpAnim']['run']();
    var _0x2478de = this['rad'] - this['outlineW'],
        _0x36b966 = 0x1f4 / 0x154;
    this['setSkinScale']();
    var _0x171be4 = 'skins/' + this['getSpeciesPath']('markhor') + '/front_legs.png',
        _0xe2d96f = 'skins/' + this['getSpeciesPath']('markhor') + '/back_legs.png',
        _0x19beef = this['getSkinImageObj'](_0x171be4),
        _0xa9ec92 = this['getSkinImageObj'](_0xe2d96f);
    if (_0x19beef && _0xa9ec92) {
        var _0x36b966 = this['skinScale'] + this['skinScale'] * 0.15 * this['frame'],
            _0x2478de = this['skinRad'];
        this['specType'] == 0x3 ? (_0x1d2dab['drawImage'](_0x19beef, -_0x2478de * _0x36b966, -_0x2478de * _0x36b966, 0x2 * _0x2478de * _0x36b966, 0x2 * _0x2478de * _0x36b966), _0x1d2dab['drawImage'](_0xa9ec92, -_0x2478de * _0x36b966, (-_0x2478de - _0x2478de * this['moveF'] * this['frame']) * _0x36b966, 0x2 * _0x2478de * _0x36b966, 0x2 * _0x2478de * _0x36b966)) : (_0x1d2dab['drawImage'](_0xa9ec92, -_0x2478de * _0x36b966, -_0x2478de * _0x36b966, 0x2 * _0x2478de * _0x36b966, 0x2 * _0x2478de * _0x36b966), _0x1d2dab['drawImage'](_0x19beef, -_0x2478de * _0x36b966, (-_0x2478de + _0x2478de * this['moveF'] * this['frame']) * _0x36b966, 0x2 * _0x2478de * _0x36b966, 0x2 * _0x2478de * _0x36b966));
    }
} else this['jumpAnim'] = null;
}, _0x308e3d['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) return;
var _0x320a54 = 0x1f4 / 0x154,
    _0x54bf7b = 0.1;
if (this['specType'] > 0x2) _0x54bf7b = 0.2 * this['frame']; {
    var _0x47d0f0 = this['getSkinImageObj'](this['getHead']('markhor', !![]));
    if (_0x47d0f0) {
        _0x1d2dab['save']();
        var _0x61929c = this['rad'];
        _0x1d2dab['drawImage'](_0x47d0f0, -_0x61929c * _0x320a54, (-_0x61929c + _0x61929c * _0x54bf7b) * _0x320a54, 0x2 * _0x61929c * _0x320a54, 0x2 * _0x61929c * _0x320a54), _0x1d2dab['restore']();
    }
}
}, _0x308e3d['prototype']['getHead'] = function (_0xfd81bd, _0x63f1b) {
var _0x24d900 = 'skins/' + (_0x63f1b ? this['getSpeciesPath'](_0xfd81bd) + '/' : _0xfd81bd + '/');
return _0x24d900 += _0xfd81bd + '_head', this['specType'] == 0x2 && (_0x24d900 += '_charging'), _0x24d900 += '.png', _0x24d900;
}, _0x308e3d['prototype']['getSkinName'] = function () {
var _0xa7a7f = this['getSpeciesPath']('markhor') + '/markhor';
return _0xa7a7f += this['specType'] == 0x0 ? '' : 0x1, _0xa7a7f;
};

function _0x308e3d() {
_0x308e3d['superClass']['call'](this, _0x4ad968);
}
window['Markhor'] = _0x308e3d, _0x13dc56['setCustomClassForGameObjType'](_0x308e3d, _0x4ad968, _0x4a8972);
var _0x1e3c43 = _0x3d6c08;
_0x3536c4['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x3536c4['prototype']['constructor'] = _0x3536c4, _0x3536c4['superClass'] = _0x1e3c43, _0x3536c4['prototype']['animalInfo'] = function () {
var _0x498d3e = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x498d3e['aniName'] = 'Reindeer';
    break;
case 0x1:
    _0x498d3e['aniName'] = 'Musk Deer';
    break;
case 0xc9:
    _0x498d3e['aniName'] = 'Sunburn Reindeer';
    break;
case 0xca:
    _0x498d3e['aniName'] = 'Piebald Cosmos';
    break;
case 0xcc:
    _0x498d3e['aniName'] = 'Spideer';
    break;
}
return _0x498d3e['aniDesc'] = '', _0x498d3e['upgradeText'] = 'UPGRADED to ' + _0x498d3e['aniName'] + '!\x0a Press W to dig up food! \x0a Your sharp hooves let you turn very well on ice!', _0x498d3e['aniCol'] = '#a68976', _0x498d3e['skinName'] = this['getSkinName'](), _0x498d3e;
}, _0x3536c4['prototype']['getAbilityInfo'] = function (_0x496f53) {
var _0x83049a = {};
return _0x83049a['abilName'] = 'Dig Food!', _0x83049a['abilImg'] = 'abilities/Dig.svg', _0x83049a['skinThemeID'] = this['skinThemeID'], _0x83049a['mopeSeasonID'] = this['mopeSeasonID'], _0x83049a;
}, _0x3536c4['prototype']['getSkinName'] = function () {
return 'arctic/reindeer/' + this['animalSpecies'] + this['getSubSpecies']() + '/reindeer';
}, _0x3536c4['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x3536c4() {
_0x3536c4['superClass']['call'](this, _0x4ad968);
}
window['Reindeer'] = _0x3536c4, _0x13dc56['setCustomClassForGameObjType'](_0x3536c4, _0x4ad968, _0x3dd041);
var _0x1e3c43 = _0x3d6c08;
_0x435327['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x435327['prototype']['constructor'] = _0x435327, _0x435327['superClass'] = _0x1e3c43, _0x435327['prototype']['getSkinName'] = function () {
return this['getSpeciesPath']('trex') + '/trex';
}, _0x435327['prototype']['animalInfo'] = function () {
var _0x520c6b = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x520c6b['aniName'] = 'The T.Rex';
    break;
case 0x1:
    _0x520c6b['aniName'] = 'Golden T.Rex';
    break;
case 0x2:
    _0x520c6b['aniName'] = 'Ember T.Rex';
    break;
case 0x64:
    _0x520c6b['aniName'] = 'Mr. Dollar';
    break;
case 0xc8:
    _0x520c6b['aniName'] = 'Kaiju Rex';
    break;
case 0xca:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x520c6b['aniName'] = 'Hyporevenant Rex';
        break;
    }
    break;
case 0xcc:
    _0x520c6b['aniName'] = 'Tartarus Rex';
    break;
case 0xdc:
    _0x520c6b['aniName'] = 'Bio Mutant T-rex';
    break;
}
return _0x520c6b['skinName'] = this['getSkinName'](), _0x520c6b['upgradeText'] = 'UPGRADED to ' + _0x520c6b['aniName'] + ' The Dinosaur!\x0a This ancient dinosaur has powerful jaws that can drag prey around!!', _0x520c6b['aniCol'] = '#862A2A', _0x520c6b;
}, _0x435327['prototype']['getSubSpecies'] = function () {
return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
}, _0x435327['prototype']['getSpeciesPath'] = function (_0x545330) {
return 'land/' + _0x545330 + '/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x435327['prototype']['getAbilityInfo'] = function (_0x230135) {
var _0x530ee5 = {};
return _0x530ee5['abilName'] = 'Jaws Bite', _0x530ee5['abilImg'] = 'abilities/Bite.svg', _0x530ee5['skinThemeID'] = this['skinThemeID'], _0x530ee5['mopeSeasonID'] = this['mopeSeasonID'], _0x530ee5;
}, _0x435327['prototype']['getAniRadius'] = function (_0x34bbf5) {
if (this['flag_usingDiveAbility']) return _0x34bbf5 * 0.7;
return _0x34bbf5;
}, _0x435327['prototype']['basicDrawSkinImg'] = function () {
this['setSkinScale']();
var _0xe793b8 = 1.5,
    _0x1dc9b9 = this['skinScale'],
    _0x140248 = this['getAniRadius'](this['skinRad']);
if (this['loadedSkinImg']) {
    var _0x35f6ba = _0x140248 / 0x2;
    _0x1d2dab['drawImage'](this['loadedSkinImg'], -_0x140248 - _0x35f6ba + _0xe793b8, -_0x140248 - _0x35f6ba + _0xe793b8, 0x2 * _0x140248 * _0x1dc9b9, 0x2 * _0x140248 * (_0x1dc9b9 * 1.2));
}
};

function _0x435327() {
_0x435327['superClass']['call'](this, _0x4ad968);
}
window['Trex'] = _0x435327, _0x13dc56['setCustomClassForGameObjType'](_0x435327, _0x4ad968, _0x47ccac);
var _0x1e3c43 = _0x3d6c08;
_0xd73ab9['prototype'] = Object['create'](_0x1e3c43['prototype']), _0xd73ab9['prototype']['constructor'] = _0xd73ab9, _0xd73ab9['superClass'] = _0x1e3c43, _0xd73ab9['prototype']['getSkinName'] = function () {
var _0x3c11d8 = this['getSubSpecies']();
switch (this['animalSpecies']) {
case 0x3:
    switch (this['animalSubSpecies']) {
    case 0x1:
    case 0x2:
    case 0x8:
    case 0x9:
        _0x3c11d8 = this['animalSpecies'] + _0x3c11d8;
        break;
    default:
        _0x3c11d8 = this['animalSpecies'] + '/1';
        break;
    }
    break;
case 0xc8:
    switch (this['animalSubSpecies']) {
    case 0x0:
    case 0x1:
    case 0x2:
    case 0x3:
    case 0x4:
        _0x3c11d8 = this['animalSpecies'] + _0x3c11d8;
        break;
    }
    break;
case 0xca:
    _0x3c11d8 = this['animalSpecies'] + _0x3c11d8;
    break;
}
var _0x35cf7e = 'land/dragon/' + _0x3c11d8 + '/dragon';
return _0x35cf7e;
}, _0xd73ab9['prototype']['getSubSpecies'] = function () {
var _0x25f3f1 = this['animalSpecies'];
return (this['animalSpecies'] == 0x3 || this['animalSpecies'] == 0xc8 || this['animalSpecies'] == 0xca) && (_0x25f3f1 = '/' + this['animalSubSpecies']), _0x25f3f1;
}, _0xd73ab9['prototype']['animalInfo'] = function () {
var _0x306da2 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x306da2['aniName'] = 'Dragon!';
    break;
case 0x1:
    _0x306da2['aniName'] = 'Golden Dragon!';
    break;
case 0x2:
    _0x306da2['aniName'] = 'Knight Dragon!';
    break;
case 0x3:
    _0x306da2['aniName'] = 'Boss Dragon!';
    break;
case 0x64:
    _0x306da2['aniName'] = 'The Gargon!';
    break;
case 0xca:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x306da2['aniName'] = 'Aberrant Dragon';
        break;
    case 0x1:
        _0x306da2['aniName'] = 'Ghoul Dragon';
        break;
    }
    break;
case 0xcc:
    _0x306da2['aniName'] = 'Magma Dragon!';
    break;
case 0xc8:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x306da2['aniName'] = 'Goofy Dragon!';
        break;
    case 0x1:
        _0x306da2['aniName'] = 'Desert Dragon!';
        break;
    case 0x2:
        _0x306da2['aniName'] = 'Forge Dragon!';
        break;
    case 0x3:
        _0x306da2['aniName'] = 'Mythical Serpent!';
        break;
    case 0x4:
        _0x306da2['aniName'] = 'Firey Dragon!';
        break;
    }
    break;
case 0xc9:
    _0x306da2['aniName'] = 'Squishy Dragon!';
    break;
case 0xce:
    _0x306da2['aniName'] = 'AG Dragon!';
    break;
case 0xdc:
    _0x306da2['aniName'] = 'Behemoth Hive Dragon';
    break;
}
return _0x306da2['aniCol'] = '#FF9000', _0x306da2['skinName'] = this['getSkinName'](), _0x306da2['upgradeText'] = 'UPGRADED to ' + _0x306da2['aniName'] + '\x0a (You\'re amazing!) \x0aFly over everything, Hold W to shoot fire!', _0x306da2['aniCol'] = '#22FF8A', _0x306da2;
}, _0xd73ab9['prototype']['getAbilityInfo'] = function (_0x1505c8) {
var _0x35125f = {};
return _0x35125f['abilName'] = 'Fire', _0x35125f['abilImg'] = 'abilities/Firestorm.svg', _0x35125f['speciesType'] = this['animalSpecies'] == 0x1 ? 0x2 : 0x0, _0x35125f['skinThemeID'] = this['skinThemeID'], _0x35125f['mopeSeasonID'] = this['mopeSeasonID'], _0x35125f;
}, _0xd73ab9['prototype']['diveColor1'] = '#64a034', _0xd73ab9['prototype']['diveColor2'] = '#598b30', _0xd73ab9['prototype']['onAnimalSpeciesSet'] = function () {
switch (this['animalSpecies']) {
case 0x1:
    this['diveColor1'] = '#dbb300', this['diveColor2'] = '#bf9d04';
    break;
case 0x2:
    this['diveColor1'] = '#79c9a8', this['diveColor2'] = '#6fad9f';
    break;
}
};

function _0xd73ab9() {
_0xd73ab9['superClass']['call'](this, _0x4ad968);
}
window['Dragon'] = _0xd73ab9, _0x13dc56['setCustomClassForGameObjType'](_0xd73ab9, _0x4ad968, _0x20f46e);
var _0x1e3c43 = _0x3d6c08;
_0x4657c0['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x4657c0['prototype']['constructor'] = _0x4657c0, _0x4657c0['superClass'] = _0x1e3c43, _0x4657c0['prototype']['animalInfo'] = function () {
var _0x577601 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x577601['aniName'] = 'Elephant!';
    break;
case 0x1:
    _0x577601['aniName'] = 'Golden Elephant!';
    break;
case 0x2:
    _0x577601['aniName'] = 'Albino Elephant!';
    break;
case 0xc9:
    _0x577601['aniName'] = 'Leiphant!';
    break;
case 0xca:
    _0x577601['aniName'] = 'Ice Wizard Elephant';
    break;
case 0xdc:
    _0x577601['aniName'] = 'Lightwave Elephant';
    break;
}
return _0x577601['skinName'] = 'land/elephant/' + this['animalSpecies'] + '/elephant', _0x577601['aniDesc'] = '', _0x577601['upgradeText'] = 'UPGRADED to ' + _0x577601['aniName'] + '\x0a Use your long trunk to attack and eat food!', _0x577601['aniCol'] = '#945A99', _0x577601;
}, _0x4657c0['prototype']['getAbilityInfo'] = function (_0x272b1a) {
var _0x589c35 = {};
return _0x589c35['abilImg'] = 'abilities/TrunkHit.svg', _0x589c35['abilName'] = 'Trunk Hit', _0x589c35['skinThemeID'] = this['skinThemeID'], _0x589c35['mopeSeasonID'] = this['mopeSeasonID'], _0x589c35;
}, _0x4657c0['prototype']['getSkinName'] = function () {
let _0x2e0a72 = this['getSpeciesPath']() + '/elephant';
return _0x2e0a72 += this['specType'] == 0x0 ? '' : 0x1, _0x2e0a72;
}, _0x4657c0['prototype']['getSpeciesPath'] = function () {
return 'land/elephant/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x4657c0['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x4657c0['prototype']['getSkinImageObj'] = function (_0x3e490c) {
var _0x219145 = this['animalSpecies'] === 0x1 || this['animalSpecies'] === 0x2 || this['animalSpecies'] === 0xc9 ? 0x1 : 0x2,
    _0x1fec85 = './assets/s/' + _0x219145 + '/' + _0x3e490c;
return this['skinThemeID'] > 0x0 && (_0x1fec85 = './assets/t/' + this['skinThemeID'] + '/' + _0x3e490c), _0x5ace1d(_0x1fec85, function (_0x283495) {
    console['log'](_0x283495['src']);
});
};

function _0x4657c0() {
_0x4657c0['superClass']['call'](this, _0x4ad968);
}
window['Elephant'] = _0x4657c0, _0x13dc56['setCustomClassForGameObjType'](_0x4657c0, _0x4ad968, _0x39357f);
var _0x1e3c43 = _0x3d6c08;
_0x2562c8['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x2562c8['prototype']['constructor'] = _0x2562c8, _0x2562c8['superClass'] = _0x1e3c43, _0x2562c8['prototype']['animalInfo'] = function () {
var _0x146021 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x146021['aniName'] = 'Hippo!';
    break;
case 0x1:
    _0x146021['aniName'] = 'Golden Hippo!';
    break;
case 0x2:
    _0x146021['aniName'] = 'Pygmy Hippo!';
    break;
case 0x64:
    _0x146021['aniName'] = 'Swampster!';
    break;
case 0xca:
    _0x146021['aniName'] = 'Planet Hippo';
    break;
case 0xcc:
    _0x146021['aniName'] = 'Sun Hippo!';
    break;
}
return _0x146021['skinName'] = this['getSkinName'](), _0x146021['upgradeText'] = 'UPGRADED to ' + _0x146021['aniName'] + '!\x0aHippos are great swimmers, dominate the Lakes/Oceans/Mud!', _0x146021['aniCol'] = '#945A99', _0x146021;
}, _0x2562c8['prototype']['getAbilityInfo'] = function (_0x2e1f3b) {
var _0x5b8902 = {};
return _0x5b8902['abilName'] = 'Loud Grown!', _0x5b8902['abilImg'] = 'abilities/Howl-1.svg', _0x5b8902['skinThemeID'] = this['skinThemeID'], _0x5b8902['mopeSeasonID'] = this['mopeSeasonID'], _0x5b8902;
}, _0x2562c8['prototype']['getSkinName'] = function () {
let _0x2a4fa8 = this['getSpeciesPath']() + '/hippo';
return _0x2a4fa8 += this['specType'] == 0x0 ? '' : 0x1, _0x2a4fa8;
}, _0x2562c8['prototype']['getSpeciesPath'] = function () {
return 'land/hippo/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x2562c8['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x2562c8() {
_0x2562c8['superClass']['call'](this, _0x4ad968);
}
window['Hippo'] = _0x2562c8, _0x13dc56['setCustomClassForGameObjType'](_0x2562c8, _0x4ad968, _0x254b52);
var _0x1e3c43 = _0x3d6c08;
_0x304046['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x304046['prototype']['constructor'] = _0x304046, _0x304046['superClass'] = _0x1e3c43, _0x304046['prototype']['animalInfo'] = function () {
var _0x51bfa5 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x51bfa5['aniName'] = 'Giant Spider!';
    break;
case 0x1:
    _0x51bfa5['aniName'] = 'Golden Spider!';
    break;
case 0x2:
    _0x51bfa5['aniName'] = 'Goliath Spider!';
    break;
case 0xca:
    _0x51bfa5['aniName'] = 'Sapphire Cave Spider';
    break;
case 0xcc:
    _0x51bfa5['aniName'] = 'Smile Spider!';
    break;
}
return _0x51bfa5['skinName'] = this['getSkinName'](), _0x51bfa5['upgradeText'] = 'UPGRADED to ' + _0x51bfa5['aniName'] + '!\x0a Place web around the game to catch prey!', _0x51bfa5['aniCol'] = 'black', _0x51bfa5;
}, _0x304046['prototype']['getAbilityInfo'] = function (_0x1dbae7) {
var _0x3622d2 = {};
return _0x3622d2['abilName'] = 'Spin Web!', _0x3622d2['abilImg'] = 'abilities/Web.svg', _0x3622d2['skinThemeID'] = this['skinThemeID'], _0x3622d2['mopeSeasonID'] = this['mopeSeasonID'], _0x3622d2;
}, _0x304046['prototype']['getSkinName'] = function () {
let _0x18bb9f = this['getSpeciesPath']() + '/giantspider';
return _0x18bb9f;
}, _0x304046['prototype']['getSpeciesPath'] = function () {
return 'land/giantspider/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x304046['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x304046() {
_0x304046['superClass']['call'](this, _0x4ad968);
}
window['GiantSpider'] = _0x304046, _0x13dc56['setCustomClassForGameObjType'](_0x304046, _0x4ad968, _0x4ab048);
var _0x1e3c43 = _0x3d6c08;
_0x30e1e1['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x30e1e1['prototype']['constructor'] = _0x30e1e1, _0x30e1e1['superClass'] = _0x1e3c43, _0x30e1e1['prototype']['animalInfo'] = function () {
var _0x3a5b1a = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x3a5b1a['aniName'] = 'Boa Constrictor!';
    break;
case 0x1:
    _0x3a5b1a['aniName'] = 'Golden Boa!';
    break;
case 0x2:
    _0x3a5b1a['aniName'] = 'Tree Boa!';
    break;
}
return _0x3a5b1a['skinName'] = this['getSkinName'](), _0x3a5b1a['aniDesc'] = '', _0x3a5b1a['upgradeText'] = 'UPGRADED to ' + _0x3a5b1a['aniName'] + '!\x0a Coil and suffocate other animals!', _0x3a5b1a['aniCol'] = 'black', _0x3a5b1a;
}, _0x30e1e1['prototype']['getSkinName'] = function () {
let _0x27f90b = this['getSpeciesPath']() + '/boaconstrictor';
return _0x27f90b;
}, _0x30e1e1['prototype']['getSpeciesPath'] = function () {
return 'land/boaconstrictor/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x30e1e1['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x30e1e1['prototype']['getAbilityInfo'] = function (_0x30dec) {
var _0x241750 = {};
return _0x241750['abilName'] = 'Suffocate prey', _0x241750['abilImg'] = 'abilities/Constrict.svg', _0x241750['skinThemeID'] = this['skinThemeID'], _0x241750['mopeSeasonID'] = this['mopeSeasonID'], _0x241750;
}, _0x30e1e1['prototype']['getSkinName'] = function () {
var _0x5f14c4 = this['getSpeciesPath']('boaconstrictor') + '/boaconstrictor';
if (this['flag_usingAbility'] && this['specType'] == 0x1) _0x5f14c4 += '2';
else _0x5f14c4 += this['specType'] == 0x0 ? '' : 0x1;
return _0x5f14c4;
}, _0x30e1e1['prototype']['drawUnderSkinImg'] = function () {
if (this['flag_usingAbility']) return;
var _0x2c768d = this['rad'] - this['outlineW'],
    _0x3cc8a8 = 0x1f4 / 0x154,
    _0x181b9f = this['getSkinImageObj']('skins/' + this['getSpeciesPath']('boaconstrictor') + '/tongue.png'),
    _0x31aa2b = (_0x740c5b - this['spawnTime']) / 0x3e8,
    _0x2ab238 = _0x31f3fc == 0x2 ? 0x0 : _0x21d673(_0x31aa2b, 0.5, 0x5, 0.5),
    _0x333a8b = _0x31f3fc == 0x2 ? 0x0 : 0x5;
_0x181b9f && _0x1d2dab['drawImage'](_0x181b9f, -_0x2c768d * _0x3cc8a8, -(_0x2c768d + _0x333a8b + _0x2ab238) * _0x3cc8a8, 0x2 * _0x2c768d * _0x3cc8a8, 0x2 * _0x2c768d * _0x3cc8a8);
}, _0x30e1e1['prototype']['getSkinImageObj'] = function (_0x5b1834) {
var _0x3c51af = this['animalSpecies'] === 0x1 || this['animalSpecies'] === 0x2 ? 0x1 : this['mopeSeasonID'];
return this['getSkinImageObjForSeason'](_0x5b1834, _0x3c51af);
};

function _0x30e1e1() {
_0x30e1e1['superClass']['call'](this, _0x4ad968);
}
window['BoaConstrictor'] = _0x30e1e1, _0x13dc56['setCustomClassForGameObjType'](_0x30e1e1, _0x4ad968, _0x17eda1);
var _0x1e3c43 = _0x3d6c08;
_0x19e0b0['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x19e0b0['prototype']['constructor'] = _0x19e0b0, _0x19e0b0['superClass'] = _0x1e3c43, _0x19e0b0['prototype']['animalInfo'] = function () {
var _0x40be5b = {};
_0x40be5b['aniName'] = 'Gorilla!';
switch (this['animalSpecies']) {
case 0x64:
    _0x40be5b['aniName'] = 'Grim Reaper';
    break;
case 0xc9:
    _0x40be5b['aniName'] = 'Explorer Ape';
    break;
case 0xca:
    _0x40be5b['aniName'] = 'Kongrilla';
    break;
case 0xcc:
    _0x40be5b['aniName'] = 'Phantom Gorilla';
    break;
}
return _0x40be5b['skinName'] = this['getSkinName'](), _0x40be5b['upgradeText'] = 'UPGRADED to ' + _0x40be5b['aniName'] + '!\x0a' + _0x40be5b['aniName'] + 's are great swimmers, dominate the Lakes/Oceans/Mud!', _0x40be5b['aniCol'] = '#945A99', _0x40be5b;
}, _0x19e0b0['prototype']['getAbilityInfo'] = function (_0x30098b) {
var _0x4ea757 = {};
return _0x4ea757['abilName'] = 'Fruit Throw!', _0x4ea757['abilImg'] = 'abilities/Throw.svg', _0x4ea757['skinThemeID'] = this['skinThemeID'], _0x4ea757['mopeSeasonID'] = this['mopeSeasonID'], _0x4ea757;
}, _0x19e0b0['prototype']['getSkinName'] = function () {
let _0x4628e2 = this['getSpeciesPath']() + '/gorilla';
return _0x4628e2 += this['specType'] == 0x0 ? '' : 0x1, _0x4628e2;
}, _0x19e0b0['prototype']['getSpeciesPath'] = function () {
return 'land/gorilla/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x19e0b0['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x19e0b0['prototype']['drawSkinCustomization'] = function () {
this['setSkinScale']();
if (this['animalSpecies'] == 0xcc) {
    var _0x3a1404 = 'skins/' + this['getSpeciesPath'](),
        _0x5914ce = this['skinScale'] * 1.07,
        _0x1cdd6f = this['skinRad'],
        _0xf97631 = 0x1 + Math['trunc'](_0x740c5b / 0x78) % 0x7,
        _0x39cf41 = this['getSkinImageObj'](_0x3a1404 + '/gorilla_head.png');
    if (_0x39cf41) {
        var _0x22382e = 0x0,
            _0x524702 = this['getSkinImageObj'](_0x3a1404 + '/fire' + _0xf97631 + '.png');
        _0x524702 && (_0x1d2dab['save'](), _0x1d2dab['drawImage'](_0x524702, -_0x1cdd6f * _0x5914ce, (-_0x1cdd6f + _0x1cdd6f * 0.05) * _0x5914ce - _0x22382e, 0x2 * _0x1cdd6f * _0x5914ce, 0x2 * _0x1cdd6f * _0x5914ce), _0x1d2dab['restore']());
        _0x1d2dab['save']();
        var _0x1cdd6f = this['rad'];
        _0x1d2dab['drawImage'](_0x39cf41, -_0x1cdd6f * _0x5914ce, (-_0x1cdd6f + _0x1cdd6f * 0.05) * _0x5914ce - _0x22382e, 0x2 * _0x1cdd6f * _0x5914ce, 0x2 * _0x1cdd6f * _0x5914ce), _0x1d2dab['restore']();
    }
}
};

function _0x19e0b0() {
_0x19e0b0['superClass']['call'](this, _0x4ad968);
}
window['Gorilla'] = _0x19e0b0, _0x13dc56['setCustomClassForGameObjType'](_0x19e0b0, _0x4ad968, _0x199c9a);
var _0x1e3c43 = _0x3d6c08;
_0x5ecb99['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x5ecb99['prototype']['constructor'] = _0x5ecb99, _0x5ecb99['superClass'] = _0x1e3c43, _0x5ecb99['prototype']['animalInfo'] = function () {
var _0x22c4f4 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x22c4f4['aniName'] = 'The Kraken!';
    break;
case 0x1:
    _0x22c4f4['aniName'] = 'Golden Kraken!';
    break;
case 0x2:
    _0x22c4f4['aniName'] = 'Chromatic Kraken!';
    break;
case 0xc9:
    _0x22c4f4['aniName'] = 'Squishy Kraken!';
    break;
case 0xca:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x22c4f4['aniName'] = 'Giant Squid';
        break;
    case 0x1:
        _0x22c4f4['aniName'] = 'Hydrothoth Kraken';
        break;
    }
    break;
case 0xcc:
    _0x22c4f4['aniName'] = 'Cthulhu Kraken!';
    break;
case 0xdc:
    _0x22c4f4['aniName'] = 'Dr. Brainiopod';
    break;
case 0xde:
    _0x22c4f4['aniName'] = 'Gingerbread Kraken';
    break;
}
return _0x22c4f4['aniCol'] = '#FF9000', _0x22c4f4['skinName'] = this['getSkinName'](), _0x22c4f4['upgradeText'] = 'UPGRADED to THE ' + _0x22c4f4['aniName'] + '!\x0a Terrorize the oceans, and be feared by all!\x0a (Release W to use whirlpool ability!)', _0x22c4f4['aniCol'] = '#64a034', _0x22c4f4;
}, _0x5ecb99['prototype']['getSkinName'] = function () {
return this['getSpeciesPath']('kraken') + '/kraken';
}, _0x5ecb99['prototype']['getSubSpecies'] = function () {
return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
}, _0x5ecb99['prototype']['getSpeciesPath'] = function (_0x30ff75) {
return 'ocean/' + _0x30ff75 + '/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x5ecb99['prototype']['getAbilityInfo'] = function (_0x9c7721) {
var _0x398a12 = {};
return _0x398a12['abilName'] = 'Whirlpool', _0x398a12['abilImg'] = 'abilities/Whirlpool.svg', _0x398a12['skinThemeID'] = this['skinThemeID'], _0x398a12['mopeSeasonID'] = this['mopeSeasonID'], _0x398a12;
}, _0x5ecb99['prototype']['diveColor1'] = '#64a034', _0x5ecb99['prototype']['diveColor2'] = '#598b30', _0x5ecb99['prototype']['onAnimalSpeciesSet'] = function () {
switch (this['animalSpecies']) {
case 0x1:
    this['diveColor1'] = '#dbb300', this['diveColor2'] = '#bf9d04';
    break;
case 0x2:
    this['diveColor1'] = '#79c9a8', this['diveColor2'] = '#6fad9f';
    break;
}
};

function _0x5ecb99() {
_0x5ecb99['superClass']['call'](this, _0x4ad968);
}
window['Kraken'] = _0x5ecb99, _0x13dc56['setCustomClassForGameObjType'](_0x5ecb99, _0x4ad968, _0x526523);
var _0x1e3c43 = _0x3d6c08;
_0x10e3f6['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x10e3f6['prototype']['constructor'] = _0x10e3f6, _0x10e3f6['superClass'] = _0x1e3c43, _0x10e3f6['prototype']['animalInfo'] = function () {
var _0x1fe4c8 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x1fe4c8['aniName'] = 'Bluewhale!';
    break;
case 0x1:
    _0x1fe4c8['aniName'] = 'Golden Whale!';
    break;
case 0x2:
    _0x1fe4c8['aniName'] = 'Albino Whale!';
    break;
case 0xc9:
    _0x1fe4c8['aniName'] = 'Mermaid Whale!';
    break;
case 0xca:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x1fe4c8['aniName'] = 'Whale Boat';
        break;
    case 0x1:
        _0x1fe4c8['aniName'] = 'Ancient Island Monster';
    }
    break;
case 0xdc:
    _0x1fe4c8['aniName'] = 'Sailor Whale';
    break;
}
return _0x1fe4c8['skinName'] = this['getSkinName'](), _0x1fe4c8['aniDesc'] = '', _0x1fe4c8['upgradeText'] = 'UPGRADED to ' + _0x1fe4c8['aniName'] + '\x0a Smash with your powerful tail!', _0x1fe4c8['aniCol'] = '#945A99', _0x1fe4c8;
}, _0x10e3f6['prototype']['getSkinName'] = function () {
return this['getSpeciesPath']() + '/bluewhale' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x10e3f6['prototype']['getSpeciesPath'] = function () {
return 'ocean/bluewhale/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x10e3f6['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
}, _0x10e3f6['prototype']['getAbilityInfo'] = function (_0x5d5851) {
var _0x1b63fc = {};
return _0x1b63fc['abilName'] = 'Tail Slap', _0x1b63fc['abilImg'] = 'abilities/TailHit.svg', _0x1b63fc['skinThemeID'] = this['skinThemeID'], _0x1b63fc['mopeSeasonID'] = this['mopeSeasonID'], _0x1b63fc;
};

function _0x10e3f6() {
_0x10e3f6['superClass']['call'](this, _0x4ad968);
}
window['Bluewhale'] = _0x10e3f6, _0x13dc56['setCustomClassForGameObjType'](_0x10e3f6, _0x4ad968, _0x13ad70);
var _0x1e3c43 = _0x3d6c08;
_0x2716ae['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x2716ae['prototype']['constructor'] = _0x2716ae, _0x2716ae['superClass'] = _0x1e3c43, _0x2716ae['prototype']['animalInfo'] = function () {
var _0x382738 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x382738['aniName'] = 'King Crab!';
    break;
case 0x1:
    _0x382738['aniName'] = 'Golden Crab!';
    break;
case 0x2:
    _0x382738['aniName'] = 'Amethyst Crab!';
    break;
case 0xca:
    _0x382738['aniName'] = 'Abyssal King Crab';
    break;
case 0xcc:
    _0x382738['aniName'] = 'Plasma-core King Crab!';
    break;
case 0xdc:
    _0x382738['aniName'] = 'Star Crusher Crab';
    break;
}
return _0x382738['skinName'] = 'ocean/kingcrab/' + this['animalSpecies'] + '/kingcrab', _0x382738['aniDesc'] = '', _0x382738['upgradeText'] = 'UPGRADED to ' + _0x382738['aniName'] + '!\x0a Use your powerful arms to smack your prey!', _0x382738['aniCol'] = '#971f0e', _0x382738;
}, _0x2716ae['prototype']['getSkinImageObj'] = function (_0x58b1c8) {
var _0x4787f3 = this['animalSpecies'] === 0x1 || this['animalSpecies'] === 0x2 || this['animalSpecies'] === 0xcc ? 0x1 : 0x2,
    _0x51b318 = './assets/s/' + _0x4787f3 + '/' + _0x58b1c8;
return this['skinThemeID'] > 0x0 && (_0x51b318 = './assets/t/' + this['skinThemeID'] + '/' + _0x58b1c8), _0x5ace1d(_0x51b318, function (_0x3c1883) {
    console['log'](_0x3c1883['src']);
});
}, _0x2716ae['prototype']['getAbilityInfo'] = function (_0x523429) {
var _0x36ac0c = {};
return _0x36ac0c['abilName'] = 'Arm Smash', _0x36ac0c['abilImg'] = 'abilities/ArmSmash.svg', _0x36ac0c['skinThemeID'] = this['skinThemeID'], _0x36ac0c['mopeSeasonID'] = this['mopeSeasonID'], _0x36ac0c;
}, _0x2716ae['prototype']['getSkinName'] = function () {
return 'ocean/kingcrab/' + this['animalSpecies'] + '/kingcrab';
};

function _0x2716ae() {
_0x2716ae['superClass']['call'](this, _0x4ad968);
}
window['KingCrab'] = _0x2716ae, _0x13dc56['setCustomClassForGameObjType'](_0x2716ae, _0x4ad968, _0x2350ea);
var _0x1e3c43 = _0x3d6c08;
_0x50e9e2['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x50e9e2['prototype']['constructor'] = _0x50e9e2, _0x50e9e2['superClass'] = _0x1e3c43, _0x50e9e2['prototype']['animalInfo'] = function () {
var _0x1be798 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x1be798['aniName'] = 'Killerwhale!';
    break;
case 0x1:
    _0x1be798['aniName'] = 'Golden Orca!';
    break;
case 0x2:
    _0x1be798['aniName'] = 'Albino Orca!';
    break;
case 0xc9:
    _0x1be798['aniName'] = 'Lifeguard Orca!';
    break;
case 0xca:
    _0x1be798['aniName'] = 'Sea Angel Orca';
    break;
}
return _0x1be798['skinName'] = this['getSkinName'](), _0x1be798['aniDesc'] = '', _0x1be798['upgradeText'] = 'UPGRADED to ' + _0x1be798['aniName'] + '\x0aWhales blow out water when diving! (And sometimes other loot!)', _0x1be798['aniCol'] = '#141414', _0x1be798;
}, _0x50e9e2['prototype']['getAbilityInfo'] = function (_0x516821) {
var _0xb95bd7 = {};
return _0xb95bd7['abilName'] = 'Cause Wave', _0xb95bd7['abilImg'] = 'abilities/Wave.svg', _0xb95bd7['skinThemeID'] = this['skinThemeID'], _0xb95bd7['mopeSeasonID'] = this['mopeSeasonID'], _0xb95bd7;
}, _0x50e9e2['prototype']['getSkinName'] = function () {
let _0x34aec6 = this['getSpeciesPath']() + '/killerwhale';
return _0x34aec6 += this['specType'] == 0x0 ? '' : 0x1, _0x34aec6;
}, _0x50e9e2['prototype']['getSpeciesPath'] = function () {
return 'ocean/killerwhale/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x50e9e2['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x50e9e2() {
_0x50e9e2['superClass']['call'](this, _0x4ad968);
}
window['Killerwhale'] = _0x50e9e2, _0x13dc56['setCustomClassForGameObjType'](_0x50e9e2, _0x4ad968, _0x697285);
var _0x1e3c43 = _0x3d6c08;
_0x2e7c64['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x2e7c64['prototype']['constructor'] = _0x2e7c64, _0x2e7c64['superClass'] = _0x1e3c43, _0x2e7c64['prototype']['animalInfo'] = function () {
var _0x2b64ea = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x2b64ea['aniName'] = 'Jellyfish';
    break;
case 0xc9:
    _0x2b64ea['aniName'] = 'Seafoam Jellyfish';
    break;
case 0xca:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x2b64ea['aniName'] = 'Disco Jellyfish';
        break;
    case 0x1:
        _0x2b64ea['aniName'] = 'Twisted Horror';
    }
    break;
}
return _0x2b64ea['skinName'] = this['getSkinName'](), _0x2b64ea['aniDesc'] = '', _0x2b64ea['upgradeText'] = 'UPGRADED to ' + _0x2b64ea['aniName'] + '!\x0a A slowly-turning animal that can grow quite large!', _0x2b64ea['aniCol'] = '#FDB9BA', _0x2b64ea;
}, _0x2e7c64['prototype']['getAbilityInfo'] = function (_0x55276c) {
var _0x4245a5 = {};
return _0x4245a5['abilName'] = 'Touch prey to sting!', _0x4245a5['abilImg'] = 'abilities/Sting.svg', _0x4245a5['isPassive'] = !![], _0x4245a5['skinThemeID'] = this['skinThemeID'], _0x4245a5['mopeSeasonID'] = this['mopeSeasonID'], _0x4245a5;
}, _0x2e7c64['prototype']['getSkinName'] = function () {
let _0x4fa02f = this['getSpeciesPath']() + '/jellyfish';
return _0x4fa02f;
}, _0x2e7c64['prototype']['getSpeciesPath'] = function () {
return 'ocean/jellyfish/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x2e7c64['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
}, _0x2e7c64['prototype']['getSkinImageObj'] = function (_0x211ed5) {
var _0x394869 = this['animalSpecies'] === 0xc9 ? 0x1 : this['mopeSeasonID'];
return this['getSkinImageObjForSeason'](_0x211ed5, _0x394869);
}, _0x2e7c64['prototype']['basicDrawSkinImg'] = function () {
this['setSkinScale']();
var _0x569ecb = -0x0,
    _0x405751 = -0.4,
    _0x5b252d = 0x1;
this['animalSpecies'] == 0xc9 && (_0x405751 = -0.3, _0x5b252d = 1.05);
var _0x2e0fc5 = this['skinScale'] * _0x5b252d,
    _0x226941 = this['skinRad'];
console['log'](this['animalSubSpecies'] + ' : ' + _0x2e0fc5);
this['loadedSkinImg'] && _0x1d2dab['drawImage'](this['loadedSkinImg'], -_0x226941 * _0x2e0fc5 + _0x226941 * _0x569ecb, -_0x226941 * _0x2e0fc5 + _0x226941 * _0x405751, 0x2 * _0x226941 * _0x2e0fc5, 0x2 * _0x226941 * (_0x2e0fc5 * 1.2));
if (this['animalSpecies'] == 0xca) {
    if (!(_0x31f3fc == 0x2) && !_0x44408d) {
        var _0x18e90c = Math['trunc'](_0x740c5b / 0x1f4) % 0x2;
        if (_0x18e90c == 0x1) {
            var _0x1ba08e = this['getSkinImageObj']('skins/' + this['getSkinName']() + '_shine.png');
            _0x1ba08e && _0x1d2dab['drawImage'](_0x1ba08e, -_0x226941 * _0x2e0fc5 + _0x226941 * _0x569ecb, -_0x226941 * _0x2e0fc5 + _0x226941 * _0x405751, 0x2 * _0x226941 * _0x2e0fc5, 0x2 * _0x226941 * (_0x2e0fc5 * 1.2));
        }
    }
}
};

function _0x2e7c64() {
_0x2e7c64['superClass']['call'](this, _0x4ad968);
}
window['Jellyfish'] = _0x2e7c64, _0x13dc56['setCustomClassForGameObjType'](_0x2e7c64, _0x4ad968, _0xfbbc5);
var _0x1e3c43 = _0x3d6c08;
_0x128f70['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x128f70['prototype']['constructor'] = _0x128f70, _0x128f70['superClass'] = _0x1e3c43, _0x128f70['prototype']['animalInfo'] = function () {
var _0x264525 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x264525['aniName'] = 'Stingray!';
    break;
case 0x64:
    _0x264525['aniName'] = 'Phantom Ray!';
    break;
case 0xc9:
    _0x264525['aniName'] = 'Chocolate Ray!';
    break;
case 0xca:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x264525['aniName'] = 'Ether Stingray';
        break;
    case 0x1:
        _0x264525['aniName'] = 'Pancake Stingray';
    }
    break;
}
return _0x264525['skinName'] = this['getSkinName'](), _0x264525['upgradeText'] = 'UPGRADED to ' + _0x264525['aniName'] + '\x0a Use electic shock (Release W key!) to shock animals! \x0a(Takes time to recharge)', _0x264525['aniCol'] = '#164336', _0x264525;
}, _0x128f70['prototype']['getAbilityInfo'] = function (_0x272ad3) {
var _0x5e8205 = {};
return _0x5e8205['abilName'] = 'Shock!', _0x5e8205['abilImg'] = 'abilities/Shock.svg', _0x5e8205['skinThemeID'] = this['skinThemeID'], _0x5e8205['mopeSeasonID'] = this['mopeSeasonID'], _0x5e8205;
}, _0x128f70['prototype']['getSkinName'] = function () {
let _0x1b2716 = this['getSpeciesPath']() + '/stingray';
return _0x1b2716;
}, _0x128f70['prototype']['getSpeciesPath'] = function () {
return 'ocean/stingray/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x128f70['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
}, _0x128f70['prototype']['drawUnderSkinImg'] = function () {
var _0x50fb77 = 1.245,
    _0x178b1c = 1.2,
    _0xfd3f84 = 0.8,
    _0x4f7bf1 = 0x1f4 / 0x154,
    _0x1ee0fe = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/tail.png');
if (_0x1ee0fe) {
    _0x1d2dab['save']();
    var _0xcc7864 = this['rad'] - this['outlineW'];
    _0x1d2dab['drawImage'](_0x1ee0fe, -_0xcc7864 * _0x4f7bf1, -_0xcc7864 * _0x50fb77 * _0x4f7bf1, 0x2 * _0xcc7864 * _0x4f7bf1, 0x2 * _0xcc7864 * _0x4f7bf1), _0x1d2dab['restore']();
}
if (this['animalSpecies'] == 0x64) {
    var _0x8284ec = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x4bc182 = !(_0x31f3fc == 0x2 || _0x44408d) ? _0x21d673(_0x8284ec, 0x5, 0x1, 0x1) : this['birdNoAnimationFlyWingAngle'],
        _0x1ee0fe = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/tail2.png');
    if (_0x1ee0fe) {
        _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = Math['max'](0x0, _0x4bc182);
        var _0xcc7864 = this['rad'] - this['outlineW'];
        _0x1d2dab['drawImage'](_0x1ee0fe, -_0xcc7864 * _0x4f7bf1, -_0xcc7864 * _0x50fb77 * _0x4f7bf1, 0x2 * _0xcc7864 * _0x4f7bf1, 0x2 * _0xcc7864 * _0x4f7bf1), _0x1d2dab['restore']();
    }
    return;
}
var _0x1ee0fe = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/leftwing.png');
if (_0x1ee0fe) {
    _0x1d2dab['save']();
    var _0x40b75f = 0x1,
        _0xcc7864 = this['rad'] - this['outlineW'];
    _0x1d2dab['drawImage'](_0x1ee0fe, -_0xcc7864 * _0x178b1c * _0x4f7bf1, -_0xcc7864 * _0x4f7bf1, 0x2 * _0xcc7864 * _0x4f7bf1, 0x2 * _0xcc7864 * _0x4f7bf1), _0x1d2dab['restore']();
}
var _0x1ee0fe = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/rightwing.png');
if (_0x1ee0fe) {
    _0x1d2dab['save']();
    var _0x40b75f = 0x1,
        _0xcc7864 = this['rad'] - this['outlineW'];
    _0x1d2dab['drawImage'](_0x1ee0fe, -_0xcc7864 * _0xfd3f84 * _0x4f7bf1, -_0xcc7864 * _0x4f7bf1, 0x2 * _0xcc7864 * _0x4f7bf1, 0x2 * _0xcc7864 * _0x4f7bf1), _0x1d2dab['restore']();
}
};

function _0x128f70() {
_0x128f70['superClass']['call'](this, _0x4ad968);
}
window['Stingray'] = _0x128f70, _0x13dc56['setCustomClassForGameObjType'](_0x128f70, _0x4ad968, _0x46166b);
var _0x1e3c43 = _0x3d6c08;
_0x2dc812['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x2dc812['prototype']['constructor'] = _0x2dc812, _0x2dc812['superClass'] = _0x1e3c43, _0x2dc812['prototype']['animalInfo'] = function () {
var _0x31ccf2 = {};
_0x31ccf2['aniName'] = 'Puffer Fish';
switch (this['animalSpecies']) {
case 0x2:
    _0x31ccf2['aniName'] = 'Demon Fish';
    break;
case 0x64:
    _0x31ccf2['aniName'] = 'Puffermace';
    break;
case 0xc9:
    _0x31ccf2['aniName'] = 'Omniball Puffer';
    break;
case 0xca:
    _0x31ccf2['aniName'] = 'Balloon Pufferfish';
    break;
}
return _0x31ccf2['skinName'] = this['getSkinName'](), _0x31ccf2['aniDesc'] = '', _0x31ccf2['upgradeText'] = 'UPGRADED to ' + _0x31ccf2['aniName'] + '!\x0a(Hold W to inflate - become spiky, and dangerous to touch!)', _0x31ccf2['aniCol'] = '#94a3a9', _0x31ccf2;
}, _0x2dc812['prototype']['getAbilityInfo'] = function (_0x279a78) {
var _0x568ddf = {};
return _0x568ddf['abilName'] = 'Puff!', _0x568ddf['abilImg'] = 'abilities/Puff.svg', _0x568ddf['skinThemeID'] = this['skinThemeID'], _0x568ddf['mopeSeasonID'] = this['mopeSeasonID'], _0x568ddf;
}, _0x2dc812['prototype']['getSkinName'] = function () {
let _0x472cdf = this['getSpeciesPath']() + '/pufferfish';
if (this['flag_usingAbility']) _0x472cdf += '2';
return _0x472cdf;
}, _0x2dc812['prototype']['getSpeciesPath'] = function () {
return 'ocean/pufferfish/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x2dc812['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x2dc812['prototype']['drawUnderSkinImg'] = function () {
var _0x5f8010 = 1.6,
    _0x1746f0 = 0x1f4 / 0x154,
    _0x36103b = '';
if (this['animalSpecies'] == 0x64) {
    _0x36103b = '/100';
    var _0x39dd57 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/tail.png');
    if (_0x39dd57) {
        _0x1d2dab['save']();
        var _0x119af2 = this['rad'] - this['outlineW'];
        _0x1d2dab['drawImage'](_0x39dd57, -_0x119af2 * _0x1746f0, -_0x119af2 * _0x5f8010 * _0x1746f0, 0x2 * _0x119af2 * _0x1746f0, 0x2 * _0x119af2 * _0x1746f0), _0x1d2dab['restore']();
    }
}
};

function _0x2dc812() {
_0x2dc812['superClass']['call'](this, _0x4ad968);
}
window['PufferFish'] = _0x2dc812, _0x13dc56['setCustomClassForGameObjType'](_0x2dc812, _0x4ad968, _0x52507b);
var _0x1e3c43 = _0x3d6c08;
_0x44312f['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x44312f['prototype']['constructor'] = _0x44312f, _0x44312f['superClass'] = _0x1e3c43, _0x44312f['prototype']['animalInfo'] = function () {
var _0x2e27cc = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x2e27cc['aniName'] = 'Squid';
    break;
case 0xc8:
    _0x2e27cc['aniName'] = 'Cuttle Fish';
    break;
case 0xc9:
    _0x2e27cc['aniName'] = 'Seacoast Squid';
    break;
case 0xca:
    _0x2e27cc['aniName'] = 'Psychedelic Squid';
    break;
case 0xcc:
    _0x2e27cc['aniName'] = 'Void Scuttling Squid';
    break;
}
return _0x2e27cc['skinName'] = this['getSkinName'](), _0x2e27cc['aniDesc'] = '', _0x2e27cc['upgradeText'] = 'UPGRADED to ' + _0x2e27cc['aniName'] + '!\x0a ' + _0x2e27cc['aniName'] + ' can use INK when injured (press W!) \x0a+ you can hide in plankton bushes!', _0x2e27cc['aniCol'] = '#40dda4', _0x2e27cc;
}, _0x44312f['prototype']['getSkinName'] = function () {
let _0x580d54 = this['getSpeciesPath']() + '/squid';
return _0x580d54 += this['specType'] == 0x0 ? '' : 0x1, _0x580d54;
}, _0x44312f['prototype']['getSpeciesPath'] = function () {
return 'ocean/squid/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x44312f['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x44312f['prototype']['getAbilityInfo'] = function (_0x1ca20f) {
var _0x3085ff = {};
return _0x3085ff['abilName'] = 'INK!', _0x3085ff['abilImg'] = 'abilities/Ink.svg', _0x3085ff['skinThemeID'] = this['skinThemeID'], _0x3085ff['mopeSeasonID'] = this['mopeSeasonID'], _0x3085ff;
}, _0x44312f['prototype']['drawUnderSkinImg'] = function () {
if (this['animalSpecies'] == 0x0 || this['animalSpecies'] == 0xc9) {
    var _0x1333ee = 0x1f4 / 0x154,
        _0x2c97ef = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/cape.png');
    if (_0x2c97ef) {
        _0x1d2dab['save']();
        var _0xb7fe45 = 1.1,
            _0x5d73f3 = this['rad'] - this['outlineW'];
        _0x1d2dab['drawImage'](_0x2c97ef, -_0x5d73f3 * _0x1333ee, -_0x5d73f3 * _0xb7fe45 * _0x1333ee, 0x2 * _0x5d73f3 * _0x1333ee, 0x2 * _0x5d73f3 * _0x1333ee), _0x1d2dab['restore']();
    }
}
};

function _0x44312f() {
_0x44312f['superClass']['call'](this, _0x4ad968);
}
window['Squid'] = _0x44312f, _0x13dc56['setCustomClassForGameObjType'](_0x44312f, _0x4ad968, _0xab40e7);
var _0x1e3c43 = _0x3d6c08;
_0x45ff71['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x45ff71['prototype']['constructor'] = _0x45ff71, _0x45ff71['superClass'] = _0x1e3c43, _0x45ff71['prototype']['updateZ'] = function () {
if (this['flag_underWater']) this['z'] = -0x97;
else this['z'] = this['rad'];
}, _0x45ff71['prototype']['animalInfo'] = function () {
var _0x89bea6 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x89bea6['aniName'] = 'Shark!';
    break;
case 0x1:
    _0x89bea6['aniName'] = 'Tiger Shark!';
    break;
case 0x2:
    _0x89bea6['aniName'] = 'Hammarhead Shark!';
    break;
case 0xc9:
    _0x89bea6['aniName'] = 'Surfboard Chomper!';
    break;
}
return _0x89bea6['skinName'] = this['getSkinName'](), _0x89bea6['upgradeText'] = 'UPGRADED to ' + _0x89bea6['aniName'] + '\x0a A vicious predator of the oceans!', _0x89bea6['aniCol'] = '#999fc6', _0x89bea6;
}, _0x45ff71['prototype']['getAbilityInfo'] = function (_0x1489f3) {
var _0x2b8bba = {};
return _0x2b8bba['abilName'] = 'Jaws Bite', _0x2b8bba['abilImg'] = 'abilities/Bite.svg', _0x2b8bba['skinThemeID'] = this['skinThemeID'], _0x2b8bba['mopeSeasonID'] = this['mopeSeasonID'], _0x2b8bba;
}, _0x45ff71['prototype']['getSkinName'] = function () {
let _0x36ff36 = this['getSpeciesPath']() + '/shark';
if (this['flag_usingAbility']) _0x36ff36 += '2';
return _0x36ff36;
}, _0x45ff71['prototype']['getSpeciesPath'] = function () {
return 'ocean/shark/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x45ff71['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x45ff71['prototype']['getSkinImageObj'] = function (_0x2c6e5a) {
var _0x5db927 = this['animalSpecies'] === 0x1 || this['animalSpecies'] === 0x2 || this['animalSpecies'] === 0xc9 ? 0x1 : this['mopeSeasonID'];
return this['getSkinImageObjForSeason'](_0x2c6e5a, _0x5db927);
}, _0x45ff71['prototype']['drawUnderSkinImg'] = function () {
if (this['flag_underWater']) return;
var _0x5786ec = 1.33,
    _0x45eb08 = 0x1,
    _0x41fcfa = 0x1f4 / 0x154 * _0x45eb08,
    _0x561e69 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/tail.png');
if (_0x561e69) {
    _0x1d2dab['save']();
    var _0x179742 = this['rad'] - this['outlineW'];
    _0x1d2dab['drawImage'](_0x561e69, -_0x179742 * _0x41fcfa, -_0x179742 * _0x5786ec * _0x41fcfa, 0x2 * _0x179742 * _0x41fcfa, 0x2 * _0x179742 * _0x41fcfa), _0x1d2dab['restore']();
}
};

function _0x45ff71() {
_0x45ff71['superClass']['call'](this, _0x4ad968);
}
window['Shark'] = _0x45ff71, _0x13dc56['setCustomClassForGameObjType'](_0x45ff71, _0x4ad968, _0x2fd73b);
var _0x1e3c43 = _0x3d6c08;
_0x49217e['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x49217e['prototype']['constructor'] = _0x49217e, _0x49217e['superClass'] = _0x1e3c43, _0x49217e['prototype']['animalInfo'] = function () {
var _0x426049 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x426049['aniName'] = 'Turtle!';
    break;
case 0xc8:
    _0x426049['aniName'] = 'Leather Back Turtle!';
    break;
case 0xc9:
    _0x426049['aniName'] = 'Kiwi Turtle!';
    break;
case 0xca:
    _0x426049['aniName'] = 'Molten Lava Turtle';
    break;
}
return _0x426049['skinName'] = this['getSkinName'](), _0x426049['aniDesc'] = '', _0x426049['upgradeText'] = 'UPGRADED to ' + _0x426049['aniName'] + '\x0a Lives well on land & water! (On land, Press W to go into your shell!)', _0x426049['aniCol'] = '#502E1A', _0x426049;
}, _0x49217e['prototype']['getAbilityInfo'] = function (_0x46c203) {
var _0x35c03a = {};
return _0x35c03a['abilName'] = 'Hide in Shell!', _0x35c03a['abilImg'] = 'abilities/Hide.svg', _0x35c03a['skinThemeID'] = this['skinThemeID'], _0x35c03a['mopeSeasonID'] = this['mopeSeasonID'], _0x35c03a;
}, _0x49217e['prototype']['getSkinName'] = function () {
let _0x75e6c6 = this['getSpeciesPath']() + '/turtle';
if (this['flag_usingAbility']) _0x75e6c6 += '2';
else _0x75e6c6 += this['specType'] == 0x0 ? '' : 0x1;
return _0x75e6c6;
}, _0x49217e['prototype']['getSpeciesPath'] = function () {
return 'ocean/turtle/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x49217e['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x49217e['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) {
    if (this['specType'] == 0x1) {
        var _0x256617 = 0x1f4 / 0x154,
            _0x29c457 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/head.png');
        if (_0x29c457) {
            var _0x2ad896 = 0.88;
            _0x1d2dab['save']();
            var _0x30b584 = this['rad'] - this['outlineW'];
            _0x1d2dab['drawImage'](_0x29c457, -_0x30b584 * _0x256617, -_0x30b584 * _0x2ad896 * _0x256617, 0x2 * _0x30b584 * _0x256617, 0x2 * _0x30b584 * _0x256617), _0x1d2dab['restore']();
        }
    }
}
};

function _0x49217e() {
_0x49217e['superClass']['call'](this, _0x4ad968);
}
window['Turtle'] = _0x49217e, _0x13dc56['setCustomClassForGameObjType'](_0x49217e, _0x4ad968, _0x1597d0);
var _0x1e3c43 = _0x3d6c08;
_0x458eed['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x458eed['prototype']['constructor'] = _0x458eed, _0x458eed['superClass'] = _0x1e3c43, _0x458eed['prototype']['getAniRadius'] = function (_0xb57fcf) {
if (this['flag_usingDiveAbility']) return _0xb57fcf * 0.7;
return _0xb57fcf;
}, _0x458eed['prototype']['animalInfo'] = function () {
var _0x3c1d00 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x3c1d00['aniName'] = 'Swordfish!';
    break;
case 0xc9:
    _0x3c1d00['aniName'] = 'Surfboardfish';
    break;
case 0xca:
    _0x3c1d00['aniName'] = 'Rocket Swordfish';
    break;
case 0xcc:
    _0x3c1d00['aniName'] = 'Chainsaw Fish';
    break;
}
return _0x3c1d00['skinName'] = this['getSkinName'](), _0x3c1d00['upgradeText'] = 'UPGRADED to ' + _0x3c1d00['aniName'] + '\x0a (Press W to rush with your sharp nose!)', _0x3c1d00['aniCol'] = '#689CD7', _0x3c1d00;
}, _0x458eed['prototype']['getAbilityInfo'] = function (_0x2ff963) {
var _0xedb96f = {};
return _0xedb96f['abilName'] = 'Charge!', _0xedb96f['abilImg'] = 'abilities/Charge.svg', _0xedb96f['skinThemeID'] = this['skinThemeID'], _0xedb96f['mopeSeasonID'] = this['mopeSeasonID'], _0xedb96f;
}, _0x458eed['prototype']['getSkinName'] = function () {
let _0x5db450 = this['getSpeciesPath']() + '/swordfish';
if (this['flag_usingAbility']) _0x5db450 += '2';
else _0x5db450 += this['specType'] == 0x0 ? '' : 0x1;
return _0x5db450;
}, _0x458eed['prototype']['getSpeciesPath'] = function () {
return 'ocean/swordfish/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x458eed['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x458eed['prototype']['drawSkinCustomization'] = function () {}, _0x458eed['prototype']['basicDrawSkinImg'] = function () {
this['setSkinScale']();
var _0x43a6a8 = this['skinScale'],
    _0x12f96a = this['rad'],
    _0x56054c = 0x0,
    _0x1990bb = 1.2,
    _0x1f548c = -_0x1990bb / 0x4;
this['loadedSkinImg'] && _0x1d2dab['drawImage'](this['loadedSkinImg'], -_0x12f96a * _0x43a6a8 + _0x12f96a * _0x56054c, -_0x12f96a * _0x43a6a8 + _0x12f96a * _0x1f548c, 0x2 * _0x12f96a * _0x43a6a8, 0x2 * _0x12f96a * (_0x43a6a8 * _0x1990bb));
}, _0x458eed['prototype']['getSkinImageObj'] = function (_0x213619) {
var _0xfc525a = this['animalSpecies'] === 0xc9 ? 0x1 : this['mopeSeasonID'];
return this['getSkinImageObjForSeason'](_0x213619, _0xfc525a);
};

function _0x458eed() {
_0x458eed['superClass']['call'](this, _0x4ad968);
}
window['Swordfish'] = _0x458eed, _0x13dc56['setCustomClassForGameObjType'](_0x458eed, _0x4ad968, _0x3e9276);
var _0x1e3c43 = _0x3d6c08;
_0x23e16a['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x23e16a['prototype']['constructor'] = _0x23e16a, _0x23e16a['superClass'] = _0x1e3c43, _0x23e16a['prototype']['animalInfo'] = function () {
var _0x20389b = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x20389b['aniName'] = 'Crab!';
    break;
case 0xc8:
    _0x20389b['aniName'] = 'Metallic Crab!';
    break;
case 0xc9:
    _0x20389b['aniName'] = 'Coconut Crab!';
    break;
case 0xcc:
    _0x20389b['aniName'] = 'Dark Matter Crab!';
    break;
}
return _0x20389b['skinName'] = this['getSkinName'](), _0x20389b['aniDesc'] = '', _0x20389b['upgradeText'] = 'UPGRADED to ' + _0x20389b['aniName'] + '\x0a Crabs can survive on dry land!\x0a (On land, Press W to go into your shell!)', _0x20389b['aniCol'] = '#bf2408', _0x20389b;
}, _0x23e16a['prototype']['getAbilityInfo'] = function (_0x80d831) {
var _0x26fe33 = {};
return _0x26fe33['abilName'] = 'Hide in Shell!', _0x26fe33['abilImg'] = 'abilities/Hide.svg', _0x26fe33['skinThemeID'] = this['skinThemeID'], _0x26fe33['mopeSeasonID'] = this['mopeSeasonID'], _0x26fe33;
}, _0x23e16a['prototype']['getSkinName'] = function () {
let _0x372fd5 = this['getSpeciesPath']() + '/crab';
if (this['flag_usingAbility']) _0x372fd5 += '2';
else _0x372fd5 += this['specType'] == 0x0 ? '' : 0x1;
return _0x372fd5;
}, _0x23e16a['prototype']['getSpeciesPath'] = function () {
return 'ocean/crab/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x23e16a['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x23e16a['prototype']['basicDrawSkinImg'] = function () {
this['setSkinScale']();
var _0x472512 = this['skinScale'],
    _0x46101e = this['skinRad'];
_0x1d2dab['save']();
if (this['id'] > 0x0) _0x1d2dab['rotate'](_0x2bcbaa(0x5a));
if (this['loadedSkinImg']) {
    _0x1d2dab['drawImage'](this['loadedSkinImg'], -_0x46101e * _0x472512, -_0x46101e * _0x472512, 0x2 * _0x46101e * _0x472512, 0x2 * _0x46101e * _0x472512);
} else _0x1d2dab['fillStyle'] = this['skinNotLoadedColor'], _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - this['outlineW']), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill']();
_0x1d2dab['restore']();
};

function _0x23e16a() {
_0x23e16a['superClass']['call'](this, _0x4ad968);
}
window['Crab'] = _0x23e16a, _0x13dc56['setCustomClassForGameObjType'](_0x23e16a, _0x4ad968, _0x1a993f);
var _0x1e3c43 = _0x3d6c08;
_0x5aeeef['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x5aeeef['prototype']['constructor'] = _0x5aeeef, _0x5aeeef['superClass'] = _0x1e3c43, _0x5aeeef['prototype']['animalInfo'] = function () {
var _0x5b6bd5 = {};
return _0x5b6bd5['aniName'] = 'Snail', _0x5b6bd5['aniCol'] = '#FF9000', _0x5b6bd5['skinName'] = 'ocean/snail/snail', _0x5b6bd5['upgradeText'] = 'UPGRADED to ' + _0x5b6bd5['aniName'] + '!\x0a Press W to hide in your shell!', _0x5b6bd5;
}, _0x5aeeef['prototype']['getSkinName'] = function () {
var _0x23b507 = 'ocean/snail/snail';
return _0x23b507;
}, _0x5aeeef['prototype']['dir'] = 0x1, _0x5aeeef['prototype']['snail_yOffset'] = 0.75, _0x5aeeef['prototype']['wasUsingAbility'] = ![], _0x5aeeef['prototype']['animateHead'] = ![], _0x5aeeef['prototype']['animationIn'] = null, _0x5aeeef['prototype']['animationOut'] = null, _0x5aeeef['prototype']['offset'] = 0x0, _0x5aeeef['prototype']['drawUnderSkinImg'] = function () {
if (this['flag_usingAbility'] && !this['wasUsingAbility'] && this['animationIn'] == null) this['wasUsingAbility'] = !![], this['animationIn'] = new _0xf2d657(this, 0x1, _0xf2d657['arc']), this['animationIn']['keepLastFrame'] = !![], this['animationIn']['onFrameEntered'] = function (_0xbafa76) {
    if (!isNaN(_0xbafa76)) {
        if (this['forObj']['offset'] < 0.35) this['forObj']['offset'] = 0.35 * _0xbafa76 * 0xa;
    }
}, this['animationIn']['onStop'] = function () {
    this['forObj']['offset'] = 0.35, this['forObj']['wasUsingAbility'] = !![], this['forObj']['animationIn'] = null;
};
else !this['flag_usingAbility'] && this['wasUsingAbility'] && this['animationOut'] == null && (this['wasUsingAbility'] = !![], this['animationOut'] = new _0xf2d657(this, 0x3, _0xf2d657['halfWave']), this['animationOut']['keepLastFrame'] = !![], this['animationOut']['onFrameEntered'] = function (_0x532b79) {
    !isNaN(_0x532b79) && (this['forObj']['offset'] = 0.35 * (0x1 - _0x532b79));
}, this['animationOut']['onStop'] = function () {
    this['forObj']['offset'] = 0x0, this['forObj']['wasUsingAbility'] = ![], this['forObj']['animationOut'] = null;
});
this['animationIn'] && this['animationIn']['run']();
this['animationOut'] && this['animationOut']['run']();
if (this['animationIn'] == null && this['animationOut'] == null && !this['wasUsingAbility']) this['offset'] = 0x0;
var _0x10c5e9 = 0.75 + this['offset'],
    _0x37a50b = 0x1f4 / 0x154,
    _0x322ffc = this['getSkinImageObj']('skins/ocean/snail/snail_head.png');
if (_0x322ffc) {
    _0x1d2dab['save']();
    var _0x5ae985 = this['rad'] - this['outlineW'];
    _0x1d2dab['drawImage'](_0x322ffc, -_0x5ae985 * _0x37a50b, -_0x5ae985 * _0x10c5e9 * _0x37a50b, 0x2 * _0x5ae985 * _0x37a50b, 0x2 * _0x5ae985 * _0x37a50b), _0x1d2dab['restore']();
}
};

function _0x5aeeef() {
_0x5aeeef['superClass']['call'](this, _0x4ad968);
}
window['Snail'] = _0x5aeeef, _0x13dc56['setCustomClassForGameObjType'](_0x5aeeef, _0x4ad968, _0x3d71a1);
var _0x1e3c43 = _0x3d6c08;
_0x23ce20['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x23ce20['prototype']['constructor'] = _0x23ce20, _0x23ce20['superClass'] = _0x1e3c43, _0x23ce20['prototype']['updateZ'] = function () {
this['z'] = 0x186a0;
}, _0x23ce20['prototype']['canUseTailslap'] = ![], _0x23ce20['prototype']['tailState'] = 0x0, _0x23ce20['prototype']['lava'] = 0x64, _0x23ce20['prototype']['getSkinName'] = function () {
var _0x57b08f = _0x44408d || _0x31f3fc == 0x2 ? 'kingdragon' : 'kingdragon_body';
return 'volcano/kingdragon/' + this['animalSpecies'] + '/' + _0x57b08f;
}, _0x23ce20['prototype']['customUpdatedProperty'] = function (_0x345954, _0x36fefd) {
if (_0x345954 == _0x42e9eb) this['canUseTailslap'] = _0x36fefd['readUInt8']() == 0x1;
else _0x345954 == _0x466b39 && (this['tailState'] = _0x36fefd['readUInt16']() / 0x64);
}, _0x23ce20['prototype']['leftWingAnim'] = null, _0x23ce20['prototype']['flapAngleDiff'] = 0x3, _0x23ce20['prototype']['flapAngle'] = 0x3, _0x23ce20['prototype']['flapF'] = 0.1, _0x23ce20['prototype']['flapDur'] = 0x2, _0x23ce20['prototype']['sF'] = 0.02, _0x23ce20['prototype']['drawWings'] = function () {
if (_0x31f3fc == 0x2 || _0x44408d) return;
this['leftWingAnim'] == null && (this['leftWingAnim'] = new _0xf2d657(this, this['flapDur'], _0xf2d657['wave']), this['leftWingAnim']['keepLastFrame'] = !![], this['leftWingAnim']['loop'] = !![], this['leftWingAnim']['onFrameEntered'] = function (_0x1193fb) {
    this['forObj']['frame1'] = _0x1193fb;
});
this['leftWingAnim'] != null && this['leftWingAnim']['run']();
var _0x19384c = this['rad'] - this['outlineW'],
    _0x468b15 = this['frame1'] * this['sF'] * _0x19384c,
    _0xf87727 = -(-this['flapF'] + this['frame1']),
    _0x3d3942 = _0xf87727 * _0x2bcbaa(this['flapAngle']),
    _0x66bac6 = 0x1f4 / 0x154,
    _0x1d83cc = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/left_wing.png'),
    _0x1210d9 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/right_wing.png');
if (_0x1d83cc && _0x1210d9) {
    _0x1d2dab['save'](), _0x1d2dab['rotate'](_0x2bcbaa(this['flapAngleDiff']) + _0x3d3942), _0x1d2dab['drawImage'](_0x1d83cc, -_0x19384c * _0x66bac6, -_0x19384c * _0x66bac6 + _0x468b15, 0x2 * _0x19384c * _0x66bac6, 0x2 * _0x19384c * _0x66bac6 + _0x468b15 * 1.5), _0x1d2dab['restore'](), _0x1d2dab['save'](), _0x1d2dab['rotate'](-(_0x2bcbaa(this['flapAngleDiff']) + _0x3d3942)), _0x1d2dab['drawImage'](_0x1210d9, -_0x19384c * _0x66bac6, -_0x19384c * _0x66bac6 + _0x468b15, 0x2 * _0x19384c * _0x66bac6, 0x2 * _0x19384c * _0x66bac6 + _0x468b15 * 1.5), _0x1d2dab['restore']();
    if (this['animalSpecies'] == 0x4) {
        let _0x1d022f = _0x1170c4('kd', this['spawnTime']);
        _0x1d022f !== undefined && _0x1d022f != null && (this['theFrame'] = _0x1d022f);
        let _0xcb9cb4 = !(_0x31f3fc == 0x2 || _0x44408d) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'];
        _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = Math['max'](0x0, _0xcb9cb4);
        var _0x546636 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/left_wing_tips.png'),
            _0x19bc64 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/right_wing_tips.png');
        _0x546636 && _0x19bc64 && (_0x1d2dab['save'](), _0x1d2dab['rotate'](_0x2bcbaa(this['flapAngleDiff']) + _0x3d3942), _0x1d2dab['drawImage'](_0x546636, -_0x19384c * _0x66bac6, -_0x19384c * _0x66bac6 + _0x468b15, 0x2 * _0x19384c * _0x66bac6, 0x2 * _0x19384c * _0x66bac6 + _0x468b15 * 1.5), _0x1d2dab['restore'](), _0x1d2dab['save'](), _0x1d2dab['rotate'](-(_0x2bcbaa(this['flapAngleDiff']) + _0x3d3942)), _0x1d2dab['drawImage'](_0x19bc64, -_0x19384c * _0x66bac6, -_0x19384c * _0x66bac6 + _0x468b15, 0x2 * _0x19384c * _0x66bac6, 0x2 * _0x19384c * _0x66bac6 + _0x468b15 * 1.5), _0x1d2dab['restore']()), _0x1d2dab['restore']();
    }
}
var _0x5d2df3 = this['lava'],
    _0x266186 = 0x32;
if (_0x5d2df3 < _0x266186) {
    var _0x2d12f0 = _0x5d2df3 / _0x266186,
        _0xb981e = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/left_wing1.png'),
        _0x15c39a = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/right_wing2.png');
    _0xb981e && _0x15c39a && (_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1 - _0x2d12f0, _0x1d2dab['save'](), _0x1d2dab['rotate'](_0x2bcbaa(this['flapAngleDiff']) + _0x3d3942), _0x1d2dab['drawImage'](_0xb981e, -_0x19384c * _0x66bac6, -_0x19384c * _0x66bac6 + _0x468b15, 0x2 * _0x19384c * _0x66bac6, 0x2 * _0x19384c * _0x66bac6 + _0x468b15 * 1.5), _0x1d2dab['restore'](), _0x1d2dab['save'](), _0x1d2dab['rotate'](-(_0x2bcbaa(this['flapAngleDiff']) + _0x3d3942)), _0x1d2dab['drawImage'](_0x15c39a, -_0x19384c * _0x66bac6, -_0x19384c * _0x66bac6 + _0x468b15, 0x2 * _0x19384c * _0x66bac6, 0x2 * _0x19384c * _0x66bac6 + _0x468b15 * 1.5), _0x1d2dab['restore'](), _0x1d2dab['restore']());
}
}, _0x23ce20['prototype']['drawSkinCustomization'] = function () {
if (this['flag_underWater']) return;
if (_0x31f3fc == 0x2 || _0x44408d) return;
var _0x39a09d = 0x1f4 / 0x154;
let _0x2d2871 = _0x1170c4('kd', this['spawnTime']);
_0x2d2871 !== undefined && _0x2d2871 != null && (this['theFrame'] = _0x2d2871);
let _0x61727a = !(_0x31f3fc == 0x2 || _0x44408d) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'];
var _0xa53bc3 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/nostrils.png');
if (_0xa53bc3) {
    _0x1d2dab['save']();
    var _0x54b82a = this['lava'],
        _0x33e3b9 = 0x64,
        _0x10962d = _0x54b82a / _0x33e3b9;
    _0x1d2dab['globalAlpha'] = Math['max'](0x0, _0x61727a) * _0x10962d;
    var _0x5c28fb = this['rad'] - this['outlineW'];
    _0x1d2dab['drawImage'](_0xa53bc3, -_0x5c28fb * _0x39a09d, -_0x5c28fb * _0x39a09d, 0x2 * _0x5c28fb * _0x39a09d, 0x2 * _0x5c28fb * _0x39a09d), _0x1d2dab['restore']();
}
if (!this['canUseTailslap']) {
    var _0x1628e2 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/bone1.png');
    if (_0x1628e2) {
        _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1;
        var _0x5c28fb = this['rad'] - this['outlineW'];
        _0x1d2dab['drawImage'](_0x1628e2, -_0x5c28fb * _0x39a09d, -_0x5c28fb * _0x39a09d, 0x2 * _0x5c28fb * _0x39a09d, 0x2 * _0x5c28fb * _0x39a09d), _0x1d2dab['restore']();
    }
    var _0x33f372 = 0x0;
    if (this['tailState'] < 0xb && this['tailState'] > 0x5) {
        var _0x545ab8 = this['tailState'] - 0x5;
        _0x33f372 = _0x545ab8 / 0x6;
    } else this['tailState'] <= 0x3 && (_0x33f372 = this['tailState'] / 0x3);
    var _0x1492eb = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/bone3.png');
    if (this['tailState'] < 0xb) {
        if (_0x1492eb) {
            _0x1d2dab['save']();
            if (this['tailState'] > 0x5) _0x1d2dab['globalAlpha'] = 0x1 - _0x33f372;
            else _0x1d2dab['globalAlpha'] = 0x1;
            var _0x5c28fb = this['rad'] - this['outlineW'];
            _0x1d2dab['drawImage'](_0x1492eb, -_0x5c28fb * _0x39a09d, -_0x5c28fb * _0x39a09d, 0x2 * _0x5c28fb * _0x39a09d, 0x2 * _0x5c28fb * _0x39a09d), _0x1d2dab['restore']();
        }
    }
    var _0x4470d9 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/bone2.png');
    if (this['tailState'] < 0x3) {
        if (_0x4470d9) {
            _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1 - _0x33f372;
            var _0x5c28fb = this['rad'] - this['outlineW'];
            _0x1d2dab['drawImage'](_0x4470d9, -_0x5c28fb * _0x39a09d, -_0x5c28fb * _0x39a09d, 0x2 * _0x5c28fb * _0x39a09d, 0x2 * _0x5c28fb * _0x39a09d), _0x1d2dab['restore']();
        }
    }
} else {
    var _0x4470d9 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/bone2.png');
    if (_0x4470d9) {
        _0x1d2dab['save']();
        var _0xc622d8 = Math['max'](0.3, _0x61727a);
        _0x1d2dab['globalAlpha'] = _0xc622d8;
        var _0x5c28fb = this['rad'] - this['outlineW'];
        _0x1d2dab['drawImage'](_0x4470d9, -_0x5c28fb * _0x39a09d, -_0x5c28fb * _0x39a09d, 0x2 * _0x5c28fb * _0x39a09d, 0x2 * _0x5c28fb * _0x39a09d), _0x1d2dab['restore']();
    }
}
this['drawWings']();
}, _0x23ce20['prototype']['drawLowWaterDrop'] = function () {
if (this['flag_underWater']) return;
if (this['flag_lowWat']) {
    var _0x44b1d8 = 1.2,
        _0x149e8b = 0.2,
        _0x27c660 = 0.8,
        _0x45175f = 0.5 * (_0x27c660 - _0x149e8b),
        _0x28302e = _0x149e8b + _0x45175f + _0x45175f * Math['sin'](0x2 * Math['PI'] / _0x44b1d8 * (_0x740c5b / 0x3e8));
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = _0x28302e, _0x1d2dab['fillStyle'] = _0x3ada2a, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, this['rad'] + 0x5, 0x5, 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['restore']();
}
}, _0x23ce20['prototype']['animalInfo'] = function () {
var _0x344373 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x344373['aniName'] = 'King Dragon';
    break;
case 0x1:
    _0x344373['aniName'] = 'Golden King Dragon';
    break;
case 0x2:
    _0x344373['aniName'] = 'King Ripper';
    break;
case 0x3:
    _0x344373['aniName'] = 'King Stan';
    break;
case 0x4:
    _0x344373['aniName'] = 'King Shah';
    break;
case 0x5:
    _0x344373['aniName'] = 'Queen Scarlet';
    break;
case 0x6:
    _0x344373['aniName'] = 'Queen Celeste';
    break;
case 0xc8:
    _0x344373['aniName'] = 'Queen Flame';
    break;
case 0xca:
    _0x344373['aniName'] = 'King Graveyard';
    break;
}
return _0x344373['aniCol'] = '#FF9000', _0x344373['skinName'] = this['getSkinName'](), _0x344373['upgradeText'] = 'UPGRADED to ' + _0x344373['aniName'], _0x344373['upgradeText'] += '!\x0aYou got firestream that burns your victim alive! Watch your tail and slap them hard.', _0x344373['aniCol'] = 'black', _0x344373;
}, _0x23ce20['prototype']['getAbilityInfo'] = function (_0x2e40a0) {
var _0x3af254 = {};
_0x3af254['abilName'] = 'Firestream\x0a& Tail slap';
var _0x1ac994 = 0x0;
switch (this['animalSpecies']) {
case 0x0:
    _0x1ac994 = 0x1;
    break;
case 0x1:
    _0x1ac994 = 0x2;
    break;
case 0x2:
    _0x1ac994 = 0x4;
    break;
case 0x3:
    _0x1ac994 = 0x5;
    break;
case 0x4:
    _0x1ac994 = 0x6;
    break;
case 0x5:
    _0x1ac994 = 0x9;
    break;
case 0x6:
    _0x1ac994 = 0x8;
    break;
}
return _0x3af254['speciesType'] = _0x1ac994, _0x3af254['abilImg'] = 'abilities/Fireball.svg', _0x3af254['skinThemeID'] = this['skinThemeID'], _0x3af254['mopeSeasonID'] = this['mopeSeasonID'], _0x3af254;
};

function _0x23ce20() {
this['lava'] = 0x64, _0x23ce20['superClass']['call'](this, _0x4ad968);
}
window['KingDragon'] = _0x23ce20, _0x13dc56['setCustomClassForGameObjType'](_0x23ce20, _0x4ad968, _0x1ed4e2);
var _0x1e3c43 = _0x131218;
_0x4c0ddd['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x4c0ddd['prototype']['constructor'] = _0x4c0ddd, _0x4c0ddd['superClass'] = _0x1e3c43, _0x4c0ddd['prototype']['updateZ'] = function () {
this['z'] = -0x8c;
}, _0x4c0ddd['prototype']['shiverF'] = 0.015, _0x4c0ddd['prototype']['drawTranslate'] = function () {
_0x1d2dab['translate'](this['x'], this['y']), _0x1d2dab['save']();
if (this['eruption'] >= this['shakeStart'] && this['eruption'] <= this['shakeEnd'] + 0x1) {
    if (this['eruption'] >= this['shakeStart'] + 0x2) this['shiverF'] = 0.025;
    else this['shiverF'] = 0.015;
    var _0xf0e06e = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x4a9e68 = 0.2,
        _0x598436 = this['rad'] * this['shiverF'];
    this['shakeOffsetX'] = _0x598436 * Math['sin'](0x2 * Math['PI'] / _0x4a9e68 * _0xf0e06e);
    var _0x4a9e68 = 0.3,
        _0x598436 = this['rad'] * this['shiverF'];
    this['shakeOffsetY'] = _0x598436 * Math['sin'](0x2 * Math['PI'] / _0x4a9e68 * _0xf0e06e), _0x1d2dab['translate'](-this['shakeOffsetX'], -this['shakeOffsetY']);
}
}, _0x4c0ddd['prototype']['drawHealthBar'] = function () {
_0x1d2dab['restore']();
}, _0x4c0ddd['prototype']['customDraw2'] = function (_0x9aea55) {
_0x1d2dab['save']();
var _0x3617fc = '' + this['oType'];
(this['curBiome'] == _0x1c3cf7 || this['curBiome'] == _0x49e519) && (_0x3617fc = '' + this['oType'] + '_' + this['curBiome']);
var _0xd8e9b0 = 'gameobj/' + this['oType'] + '/' + _0x3617fc + '.png',
    _0x529d46 = this['getSkinImageObj'](_0xd8e9b0);
if (_0x529d46) {
    var _0x303458 = this['rad'];
    _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x529d46, -_0x303458, -_0x303458, 0x2 * _0x303458, 0x2 * _0x303458);
}
_0x1d2dab['restore']();
var _0x12fc3d = 0x0;
switch (Math['round'](this['eruption'])) {
case 0x0:
case 0x1:
    _0x12fc3d = 0x0;
    break;
case 0x2:
    _0x12fc3d = 0x1;
    break;
case 0x3:
    _0x12fc3d = 0x2;
    break;
case 0x4:
case 0x5:
case 0x6:
case 0x7:
    _0x12fc3d = 0x3;
    break;
case 0x8:
    _0x12fc3d = 0x2;
    break;
case 0x9:
    _0x12fc3d = 0x1;
    break;
case 0xa:
default:
    _0x12fc3d = 0x0;
    break;
}
if (_0x12fc3d < 0x3) {
    _0x1d2dab['save']();
    var _0x3617fc = _0x12fc3d,
        _0xd8e9b0 = 'gameobj/' + this['oType'] + '/' + _0x3617fc + '.png',
        _0x529d46 = this['getSkinImageObj'](_0xd8e9b0);
    if (_0x529d46) {
        var _0x303458 = this['rad'];
        _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x529d46, -_0x303458, -_0x303458, 0x2 * _0x303458, 0x2 * _0x303458);
    }
    _0x1d2dab['restore']();
}
}, _0x4c0ddd['prototype']['customDraw'] = function (_0x1c7a44) {
this['customDraw2'](_0x1c7a44);
}, _0x4c0ddd['prototype']['readCustomData_onNewlyVisible'] = function (_0xc39308) {
_0x4c0ddd['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0xc39308), this['maxLvl'] = _0xc39308['readUInt8']() / 0xa, this['shakeStart'] = _0xc39308['readUInt8']() / 0xa, this['shakeEnd'] = _0xc39308['readUInt8']() / 0xa, this['spitLevelMin'] = this['maxLvl'] * 0.2, this['spitLevelMax'] = this['maxLvl'] * 0.8;
}, _0x4c0ddd['prototype']['readUpdatedProperty'] = function (_0x20db93, _0xbfd326) {
_0x20db93 == _0x2a5e6c && (this['eruption'] = _0xbfd326['readUInt16']());
};

function _0x4c0ddd() {
_0x4c0ddd['superClass']['call'](this, _0xbfd919);
}
window['Volcano'] = _0x4c0ddd, _0x13dc56['setCustomClassForGameObjType'](_0x4c0ddd, _0xbfd919);
var _0x570743 = _0x489661,
_0x1e3c43 = _0x131218;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43, _0x489661['prototype']['customDraw'] = function (_0xf5a678) {
_0x1d2dab['save'](), _0x1d2dab['rotate'](this['angle'] + _0x2bcbaa(0xb4)), _0x1d2dab['globalAlpha'] = 0x1;
var _0x2748e2 = this['getSkinImageObj']('img/raindrop.png');
if (_0x2748e2) {
    var _0x2dc8de = this['rad'] * 0x2;
    _0x1d2dab['drawImage'](_0x2748e2, -_0x2dc8de, -_0x2dc8de, 0x2 * _0x2dc8de, 0x2 * _0x2dc8de);
}
_0x1d2dab['restore']();
}, _0x489661['prototype']['updateZ'] = function () {
this['z'] = 0x2710 + this['rad'];
};

function _0x489661() {
_0x489661['superClass']['call'](this), this['spawnTime'] = _0x740c5b;
}
window['RainDrop'] = _0x489661, _0x13dc56['setCustomClassForGameObjType'](_0x489661, _0x5d8238);
var _0x1e3c43 = _0x131218;
_0x404d7c['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x404d7c['prototype']['constructor'] = _0x404d7c, _0x404d7c['superClass'] = _0x1e3c43, _0x404d7c['prototype']['updateZ'] = function () {
this['z'] = 0x3ed;
}, _0x404d7c['prototype']['customDraw'] = function (_0x39a919) {
if (!(_0x31f3fc == 0x2)) {
    var _0x567ddb = 0x1,
        _0x196a3c = 0.15,
        _0x490727 = 0.8,
        _0x2471d5 = 0.5 * (_0x490727 - _0x196a3c),
        _0x4a496f = _0x196a3c + _0x2471d5 + _0x2471d5 * Math['sin'](0x2 * Math['PI'] / _0x567ddb * (_0x740c5b / 0x3e8));
    _0x1d2dab['save'](); {
        _0x1d2dab['globalAlpha'] *= _0x4a496f;
    }
    _0x1d2dab['restore']();
    var _0x567ddb = 0x1,
        _0x196a3c = 0.85,
        _0x490727 = 0x1,
        _0x2471d5 = 0.5 * (_0x490727 - _0x196a3c),
        _0x50d90d = _0x196a3c + _0x2471d5 + _0x2471d5 * Math['sin'](0x2 * Math['PI'] / _0x567ddb * (_0x740c5b / 0x3e8)),
        _0x512ea2 = Math['trunc'](_0x740c5b / 0x78) % 0x5,
        _0x4d5e6b = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + _0x512ea2 + '.png');
    if (_0x4d5e6b) {
        var _0x182ff0 = 0x0,
            _0xbdbcbe = this['rad'] * 0.4,
            _0x48a5e7 = this['rad'] * 0x2 * (0x2 + _0x50d90d * 0x2) / 0x3,
            _0x343cfc = this['rad'] * 3.5 * _0x50d90d,
            _0xac11ed = 0.5,
            _0x4783ec = 0.95;
        _0x1d2dab['save'](); {
            _0x1d2dab['globalAlpha'] *= this['onFireEffA'] * _0x50d90d, _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x4d5e6b, _0x182ff0 + _0x48a5e7 * -_0xac11ed, _0xbdbcbe + _0x343cfc * -_0x4783ec, _0x48a5e7, _0x343cfc);
        }
        _0x1d2dab['restore']();
    } else {}
} else {
    var _0x4d5e6b = this['getSkinImageObj']('gameobj/' + this['oType'] + '/0.png');
    if (_0x4d5e6b) {
        var _0x567ddb = 0x1,
            _0x196a3c = 0.85,
            _0x490727 = 0x1,
            _0x2471d5 = 0.5 * (_0x490727 - _0x196a3c),
            _0x50d90d = _0x196a3c + _0x2471d5 + _0x2471d5 * Math['sin'](0x2 * Math['PI'] / _0x567ddb * (_0x740c5b / 0x3e8)),
            _0x182ff0 = 0x0,
            _0xbdbcbe = this['rad'] * 0.4,
            _0x48a5e7 = this['rad'] * 0x2 * (0x2 + _0x50d90d * 0x2) / 0x3,
            _0x343cfc = this['rad'] * 3.5 * _0x50d90d,
            _0xac11ed = 0.5,
            _0x4783ec = 0.95;
        _0x1d2dab['save'](); {
            _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x4d5e6b, _0x182ff0 + _0x48a5e7 * -_0xac11ed, _0xbdbcbe + _0x343cfc * -_0x4783ec, _0x48a5e7, _0x343cfc);
        }
        _0x1d2dab['restore']();
    }
}
};

function _0x404d7c() {
_0x404d7c['superClass']['call'](this, _0x25dd29);
}
window['Iceball'] = _0x404d7c, _0x13dc56['setCustomClassForGameObjType'](_0x404d7c, _0x25dd29);
var _0x1e3c43 = _0x3d6c08;
_0x369e2b['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x369e2b['prototype']['constructor'] = _0x369e2b, _0x369e2b['superClass'] = _0x1e3c43, _0x369e2b['prototype']['animalInfo'] = function () {
var _0x2d4254 = {};
switch (this['animalSpecies']) {
case 0x1:
    _0x2d4254['aniName'] = 'The BigFoot';
    break;
}
return _0x2d4254['skinName'] = 'land/bigfoot/' + this['animalSpecies'] + '/bigfoot', _0x2d4254['aniDesc'] = '', _0x2d4254['upgradeText'] = 'UPGRADED to ' + _0x2d4254['aniName'] + '! So it really exists... \x0a Right click/W to throw Spears. \x0aHold to make a fire (every 30s)', _0x2d4254['aniCol'] = '#839eb5', _0x2d4254;
}, _0x369e2b['prototype']['getAbilityInfo'] = function (_0x1b0fdb) {
var _0xab7a17 = {};
return _0xab7a17['abilName'] = 'Throw Spear\x0a (Hold for fire!)', _0xab7a17['abilImg'] = 'abilities/ThrowSpear.svg', _0xab7a17['skinThemeID'] = this['skinThemeID'], _0xab7a17['mopeSeasonID'] = this['mopeSeasonID'], _0xab7a17;
}, _0x369e2b['prototype']['getSkinName'] = function () {
var _0x125326 = '';
_0x125326 = 'land/bigfoot/' + this['animalSpecies'] + '/';
if (this['flag_underWater'] || this['flag_isInArena']) _0x125326 += 'thebigfoot';
else _0x125326 += 'bigfoot';
return _0x125326;
}, _0x369e2b['prototype']['drawUnderSkinTail'] = function (_0x58e7e9) {
if (!this['isCamouflage']) _0x369e2b['superClass']['prototype']['drawUnderSkinTail']['call'](this, _0x58e7e9);
}, _0x369e2b['prototype']['drawHealthBar'] = function () {
if (!this['isCamouflage']) _0x369e2b['superClass']['prototype']['drawHealthBar']['call'](this);
}, _0x369e2b['prototype']['isTransforming'] = ![], _0x369e2b['prototype']['isCamouflage'] = ![], _0x369e2b['prototype']['carrotAlpha'] = 0x0, _0x369e2b['prototype']['getIdealOpacity'] = function () {
var _0x42ba41 = this['flag_underWater'] || this['flag_usingAbility'] && this['isTransforming'] || this['isCamouflage'] ? 0x0 : 0x1;
return _0x42ba41;
}, _0x369e2b['prototype']['biteStart'] = 0x0, _0x369e2b['prototype']['flapAmount'] = 0x3, _0x369e2b['prototype']['flapDur'] = 1.5, _0x369e2b['prototype']['roarStartT'] = -0x1f4, _0x369e2b['prototype']['spearThrow'] = function () {
_0x1d2dab['save']();
var _0x535ffa = this['getSkinImageObj']('skins/land/bigfoot/' + this['animalSpecies'] + '/arm21.png');
if (_0x535ffa) {
    var _0x8c2fe3 = Math['min'](0x1, (_0x740c5b - this['biteStart']) / 0xc8),
        _0x36f996 = _0x29d4e1((_0x740c5b - this['biteStart']) / 0x12c, 0x0, 0x1),
        _0x123e5d = -_0x36f996 * _0xa0b20a;
    _0x1d2dab['rotate'](this['angle'] + _0x123e5d);
    var _0x23645b = -this['rad'] * 1.75,
        _0x36bad7 = this['rad'] / 0x2,
        _0x45e12c = this['rad'],
        _0x17f038 = _0x23645b * 0x2,
        _0x16bb9b = _0x23645b * 0x2 * _0x8c2fe3,
        _0x2774e1 = 0.3,
        _0x3661a3 = 0.8;
    _0x1d2dab['drawImage'](_0x535ffa, _0x36bad7 + _0x17f038 * -_0x2774e1, _0x45e12c + _0x16bb9b * -_0x3661a3 + _0x23645b, _0x17f038, _0x16bb9b);
}
_0x1d2dab['restore']();
}, _0x369e2b['prototype']['showSpear'] = ![], _0x369e2b['prototype']['showHand'] = !![], _0x369e2b['prototype']['drawSkinCustomization'] = function () {
if (this['flag_underWater'] || this['flag_isInArena']) return;
this['setSkinScale']();
!this['flag_usingAbility'] && (this['biteStart'] = 0x0);
if (this['showSpear']) this['spearHandAnimation'](0x0);
else {
    if (this['showHand'] || this['id'] == 0x0) this['leftHandAnimation'](0x0);
}
this['rightHandAnimation'](0x0), this['bigfootHead'](0x0);
if (!this['flag_usingAbility'] && !this['flag_inHidingHole']) this['oogaBoogaAnimation'](0x0);
}, _0x369e2b['prototype']['oogaBoogaNextT'] = +new Date() + 0x3a98, _0x369e2b['prototype']['oogaBoogaFrame'] = 0x0, _0x369e2b['prototype']['oogaBoogaFrameT'] = 0x0, _0x369e2b['prototype']['oogaBoogaAnimation'] = function (_0x1c6836) {
if (_0x740c5b > this['oogaBoogaNextT']) {
    if (_0x740c5b > this['oogaBoogaFrameT']) {
        this['oogaBoogaFrameT'] = _0x740c5b + 0x12c, this['oogaBoogaFrame'] += 0x1;
        if (this['oogaBoogaFrame'] == 0x1) this['gotChat']('OOGA!');
        else {
            if (this['oogaBoogaFrame'] == 0x3) this['gotChat']('BOOGA!');
        }
    }
    this['oogaBoogaFrame'] > 0x4 && (this['oogaBoogaFrame'] = 0x0, this['oogaBoogaNextT'] = +new Date() + 0x3a98);
}
if (this['oogaBoogaFrame'] > 0x0) {
    var _0x4384dc = 0x0,
        _0x540a56 = 0x1f4 / 0x154,
        _0x1a45bf = this['getSkinImageObj']('skins/land/bigfoot/' + this['animalSpecies'] + '/head' + this['oogaBoogaFrame'] + '.png');
    if (_0x1a45bf) {
        _0x1d2dab['save']();
        var _0x1ef67b = this['rad'];
        _0x1d2dab['drawImage'](_0x1a45bf, -_0x1ef67b * _0x540a56, (-_0x1ef67b + _0x1ef67b * _0x4384dc) * _0x540a56, 0x2 * _0x1ef67b * _0x540a56, 0x2 * _0x1ef67b * _0x540a56), _0x1d2dab['restore']();
    }
}
}, _0x369e2b['prototype']['spearInHand'] = ![], _0x369e2b['prototype']['canCreateFire'] = ![], _0x369e2b['prototype']['readCustomData_onUpdate'] = function (_0x42064f) {
_0x369e2b['superClass']['prototype']['readCustomData_onUpdate']['call'](this, _0x42064f);
var _0x5aaee5 = _0x42064f['readBitGroup']();
this['showHand'] = _0x5aaee5['getBool'](), this['showSpear'] = this['showHand'] && _0x5aaee5['getBool'](), this['canCreateFire'] = _0x5aaee5['getBool']();
};
var _0x351894 = 0.84,
_0x26e96a = 0.47,
_0x32feed = 0x2d,
_0x5e6dd3 = -0x1e,
_0x6ec369 = 1.3,
_0x4c7ab4 = 1.5,
_0x25b1ef = 0.3;
_0x369e2b['prototype']['bigfootHead'] = function (_0x2edb24) {
var _0x3c5935 = 0x0,
    _0x49f681 = 0x1f4 / 0x154,
    _0x3bc0ff = this['flag_usingAbility'] ? 'head2' : 'head';
if (!this['flag_usingAbility']) _0x3c5935 = 0x0;
var _0xd75478 = this['getSkinImageObj']('skins/land/bigfoot/' + this['animalSpecies'] + '/' + _0x3bc0ff + '.png');
if (_0xd75478) {
    _0x1d2dab['save']();
    var _0x570401 = this['rad'];
    _0x1d2dab['drawImage'](_0xd75478, -_0x570401 * _0x49f681, (-_0x570401 + _0x570401 * _0x3c5935) * _0x49f681, 0x2 * _0x570401 * _0x49f681, 0x2 * _0x570401 * _0x49f681), _0x1d2dab['restore']();
}
}, _0x369e2b['prototype']['spearHandAnimation'] = function (_0x3cc06a) {
var _0x2c6833 = (_0x740c5b - this['spawnTime']) / 0x3e8,
    _0x2bce37 = 0x0;
if (!_0x44408d && !(_0x31f3fc == 0x2)) _0x2bce37 = _0x21d673(_0x2c6833, _0x4c7ab4, _0x25b1ef, 0x2);
var _0x1ee30e = this['getSkinImageObj']('skins/land/bigfoot/' + this['animalSpecies'] + '/arm2.png');
if (_0x1ee30e) {
    _0x1d2dab['save']();
    var _0x39a080 = -(-0.2 + _0x2bce37) * _0x2bcbaa(_0x32feed),
        _0x4eff5c = this['rad'] * _0x6ec369;
    _0x1d2dab['rotate'](_0x2bcbaa(_0x5e6dd3) + _0x39a080);
    var _0x15a4ca = 0x0,
        _0x16ceee = this['rad'],
        _0x34f59e = _0x4eff5c * 0x2,
        _0x5de794 = _0x4eff5c * 0x2,
        _0x211a93 = _0x26e96a,
        _0x509147 = _0x351894;
    _0x1d2dab['drawImage'](_0x1ee30e, _0x15a4ca + _0x34f59e * -_0x211a93, _0x16ceee + _0x5de794 * -_0x509147, _0x34f59e, _0x5de794);
    if (this['canCreateFire']) {
        var _0x27e55c = this['getSkinImageObj']('skins/land/bigfoot/' + this['animalSpecies'] + '/arm2-fire.png');
        if (_0x27e55c) {
            var _0x2c6833 = (_0x740c5b - this['spawnTime']) / 0x3e8,
                _0x2bce37 = _0x21d673(_0x2c6833, 0x5, 0x1, 0x1);
            _0x1d2dab['globalAlpha'] = Math['max'](0x0, _0x2bce37), _0x1d2dab['drawImage'](_0x27e55c, _0x15a4ca + _0x34f59e * -_0x211a93, _0x16ceee + _0x5de794 * -_0x509147, _0x34f59e, _0x5de794);
        }
    }
    _0x1d2dab['restore']();
}
}, _0x369e2b['prototype']['rightHandAnimation'] = function (_0x30e637) {
var _0x468407 = (_0x740c5b - this['spawnTime']) / 0x3e8,
    _0x5e24fb = 0x0;
if (!_0x44408d && !(_0x31f3fc == 0x2)) _0x5e24fb = _0x21d673(_0x468407, _0x4c7ab4, _0x25b1ef, 0x2);
var _0x6f268 = this['getSkinImageObj']('skins/land/bigfoot/' + this['animalSpecies'] + '/arm1.png');
if (_0x6f268) {
    _0x1d2dab['save']();
    var _0x1259cb = -_0x5e24fb * _0x2bcbaa(-0xa),
        _0x217a61 = this['rad'] * _0x6ec369;
    _0x1d2dab['rotate'](_0x2bcbaa(-0x5) + _0x1259cb);
    var _0x3dc177 = 0x0,
        _0x451ed2 = this['rad'],
        _0x4e4bc1 = _0x217a61 * 0x2,
        _0x4c467b = _0x217a61 * 0x2,
        _0x43bfec = 0.55,
        _0xbe3680 = 0.85;
    _0x1d2dab['drawImage'](_0x6f268, _0x3dc177 + _0x4e4bc1 * -_0x43bfec, _0x451ed2 + _0x4c467b * -_0xbe3680, _0x4e4bc1, _0x4c467b), _0x1d2dab['restore']();
}
}, _0x369e2b['prototype']['leftHandAnimation'] = function (_0x534603) {
var _0xc95655 = (_0x740c5b - this['spawnTime']) / 0x3e8,
    _0x149a9c = 0x0;
if (!_0x44408d && !(_0x31f3fc == 0x2)) {
    if (!(this['id'] == _0x2fc9ba && _0x44408d)) _0x149a9c = _0x21d673(_0xc95655, _0x4c7ab4, _0x25b1ef, 0x2);
}
var _0x314f93 = this['getSkinImageObj']('skins/land/bigfoot/' + this['animalSpecies'] + '/arm21.png');
if (_0x314f93) {
    _0x1d2dab['save']();
    var _0x159ed6 = -_0x149a9c * _0x2bcbaa(-0xa),
        _0x3edb85 = this['rad'] * _0x6ec369;
    _0x1d2dab['rotate'](_0x2bcbaa(-0x5) + _0x159ed6);
    var _0x344a28 = 0x0,
        _0xc71953 = this['rad'],
        _0x4d330a = _0x3edb85 * 0x2,
        _0xe01caf = _0x3edb85 * 0x2,
        _0x15ce8b = 0.47,
        _0x4f6378 = 0.8;
    _0x1d2dab['drawImage'](_0x314f93, _0x344a28 + _0x4d330a * -_0x15ce8b, _0xc71953 + _0xe01caf * -_0x4f6378, _0x4d330a, _0xe01caf), _0x1d2dab['restore']();
}
};

function _0x369e2b() {
_0x369e2b['superClass']['call'](this, _0x4ad968), this['oogaBoogaNextT'] = +new Date() + 0x3a98;
}
window['BigFoot'] = _0x369e2b, _0x13dc56['setCustomClassForGameObjType'](_0x369e2b, _0x4ad968, _0x363563);
var _0x570743 = _0x49a541,
_0x1e3c43 = _0x4763ce;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43, _0x49a541['prototype']['victimID'] = 0x0, _0x49a541['prototype']['updateZ'] = function () {
if (this['effect_flying']) this['z'] = 0x186a0;
else this['victimID'] == 0x0 && (this['z'] = 0x44c);
};
var _0x2d4707 = 0x1,
_0x25d165 = 0x2,
_0x30ded8 = 0x3;
_0x49a541['prototype']['customDraw'] = function (_0x2c1d22) {
_0x1d2dab['save']();
if (this['spearState'] == _0x25d165) {
    var _0x443042 = this['getSkinImageObj']('skins/land/bigfoot/' + this['speciesType'] + '/spear.png');
    if (_0x443042) {
        _0x1d2dab['save']();
        var _0x5edd45 = this['rad'] * 0x2;
        _0x1d2dab['rotate'](this['angle'] + _0xa0b20a), _0x1d2dab['drawImage'](_0x443042, -_0x5edd45 / 0x2, -_0x5edd45 / 0x2, _0x5edd45, _0x5edd45 * 0x4), _0x1d2dab['restore']();
    }
} else {
    if (this['spearState'] == _0x30ded8) {
        _0x1d2dab['save']();
        var _0x443042 = this['getSkinImageObj']('skins/land/bigfoot/' + this['speciesType'] + '/spear2.png');
        if (_0x443042) {
            var _0x5edd45 = this['rad'] * 0x2;
            _0x1d2dab['rotate'](this['angle'] + _0xa0b20a), _0x1d2dab['drawImage'](_0x443042, -_0x5edd45 / 0x2, -_0x5edd45 / 0x2, _0x5edd45, _0x5edd45 * 0x4);
        }
        _0x1d2dab['restore']();
    } else {
        if (this['spearState'] == _0x2d4707) {
            var _0x4341ae = this['spearState'],
                _0x443042 = this['getSkinImageObj']('skins/land/bigfoot/' + this['speciesType'] + '/arm2.png');
            if (_0x443042) {
                var _0x42615e = Math['min'](0x1, (_0x740c5b - this['spawnTime']) / 0xc8),
                    _0x2170ef = _0x29d4e1((_0x740c5b - this['spawnTime']) / 0x12c, 0x0, 0x1),
                    _0x140fa8 = -_0x2170ef * _0xa0b20a;
                _0x1d2dab['rotate'](this['angle'] + _0x140fa8 * (this['specType'] == 0x1 ? 0x1 : -0x1));
                var _0x5edd45 = -this['rad'] * 1.5,
                    _0x372a64 = this['rad'] / 0x2,
                    _0x39a130 = this['rad'],
                    _0x2bf0e2 = _0x5edd45 * 0x2,
                    _0x4a5a7b = _0x5edd45 * 0x2 * _0x42615e,
                    _0x592b9c = 0.3,
                    _0x3083c4 = 0.8;
                _0x1d2dab['drawImage'](_0x443042, _0x372a64 + _0x2bf0e2 * -_0x592b9c, _0x39a130 + _0x4a5a7b * -_0x3083c4 + _0x5edd45, _0x2bf0e2, _0x4a5a7b);
            }
        }
    }
}
_0x1d2dab['restore']();
}, _0x49a541['prototype']['spearState'] = 0x0, _0x49a541['prototype']['effect_flying'] = ![], _0x49a541['prototype']['readUpdatedProperty'] = function (_0x467bd0, _0x477855) {
if (_0x467bd0 == _0x39e92f) this['spearState'] = _0x477855['readUInt8']();
else {
    if (_0x467bd0 == _0x4d6542) {
        this['victimID'] = _0x477855['readUInt32']();
        if (this['victimID'] != 0x0) {
            if (_0x3c55ea[this['victimID']]) this['z'] = _0x3c55ea[this['victimID']]['z'] + 0x1;
        }
    } else _0x467bd0 == _0x5ef926 && (this['effect_flying'] = _0x477855['readUInt8']() == 0x1);
}
}, _0x49a541['prototype']['readCustomData_onNewlyVisible'] = function (_0x5f52fb) {
_0x49a541['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x5f52fb), this['spearState'] = _0x5f52fb['readUInt8'](), this['victimID'] = _0x5f52fb['readUInt32']();
if (this['victimID'] != 0x0) {
    if (_0x3c55ea[this['victimID']]) this['z'] = _0x3c55ea[this['victimID']]['z'] + 0x1;
}
this['effect_flying'] = _0x5f52fb['readUInt8']() == 0x1;
};

function _0x49a541() {
_0x49a541['superClass']['call'](this), _0x49a541['prototype']['easeAngleChanges'] = !![];
}
window['BigfootSpear'] = _0x49a541, _0x13dc56['setCustomClassForGameObjType'](_0x49a541, _0x2c5edd, _0x1616ce);
var _0x1e3c43 = _0x131218;
_0x4804d5['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x4804d5['prototype']['constructor'] = _0x4804d5, _0x4804d5['superClass'] = _0x1e3c43, _0x4804d5['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x4804d5['prototype']['setSkinPath'] = function () {
this['objSkinPath'] = 'skins/land/bigfoot/' + this['speciesType'] + '/firewood.png';
}, _0x4804d5['prototype']['customDraw'] = function (_0x69265a) {
_0x1d2dab['save']();
var _0x3b6f1f = this['rad'] * 2.2,
    _0x5681f3 = this['getSkinImageObj'](this['objSkinPath']);
_0x5681f3 && _0x1d2dab['drawImage'](_0x5681f3, -_0x3b6f1f / 0x2, -_0x3b6f1f / 0x2, _0x3b6f1f, _0x3b6f1f), _0x1d2dab['restore']();
};
var _0x513661 = 0x79;

function _0x4804d5() {
_0x4804d5['superClass']['call'](this, _0x513661);
}
window['FireWood'] = _0x4804d5, _0x13dc56['setCustomClassForGameObjType'](_0x4804d5, _0x513661);
var _0x1e3c43 = _0x131218;
_0x5210f9['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x5210f9['prototype']['constructor'] = _0x5210f9, _0x5210f9['superClass'] = _0x1e3c43, _0x5210f9['prototype']['updateZ'] = function () {
this['z'] = 0x44c;
}, _0x5210f9['prototype']['alpha'] = 0x1, _0x5210f9['prototype']['trunkW'] = 0.5, _0x5210f9['prototype']['customDraw'] = function (_0x3fee7f) {
_0x1d2dab['save']();
var _0x50feeb = 0x0,
    _0x5a7a4d = 0x0;
let _0x387be2 = _0x4f8e9d[this['id']] == 0x1;
var _0x22f25f = 0x1;
try {
    _0x387be2 ? this['alpha'] += (0.4 - this['alpha']) * 0.1 : (this['alpha'] += (0x1 - this['alpha']) * 0.1, this['alpha'] > 0.99 && (this['alpha'] = 0x1));
} catch (_0x180eb2) {}
var _0x3f5bda = this['getTreeName']();
if (!(_0x31f3fc == 0x2)) {
    var _0xf888b = this['getSkinImageObj']('gameobj/101/' + _0x3f5bda + '/' + this['getTrunk']() + '.png');
    if (_0xf888b) {
        var _0x1d63e0 = this['rad'],
            _0x21f0ca = this['rPer'] * Math['PI'] * 0x2;
        _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0xf888b, -_0x1d63e0, -_0x1d63e0, 0x2 * _0x1d63e0, 0x2 * _0x1d63e0);
    }
}
if (this['canopy']) {
    var _0x2a4053 = 'canopy';
    _0x3f5bda == 'default' && (_0x2a4053 += this['curBiome'], this['curBiome'] == _0x49e519 && (_0x2a4053 = _0x2a4053 + '_' + this['speciesType']));
    var _0x1d63e0 = (this['foodType'] == _0x34cf69 ? this['rad'] * 1.25 : this['rad']) + _0x50feeb;
    if (this['eventType'] == 0x2 && this['treeType'] != 'default') this['drawEventDecorations'](_0x3f5bda, _0x2a4053, _0x1d63e0, _0x21f0ca);
    else {
        if (this['xmasTree']) this['drawXmasProp'](_0x3f5bda, _0x1d63e0, _0x21f0ca, 'ornament', _0x5a7a4d);
        if (!_0x44408d && !(_0x31f3fc == 0x2)) {
            var _0xf888b = this['getSkinImageObj'](this['getCanopySkin'](_0x3f5bda, _0x2a4053));
            _0xf888b ? (_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] *= this['alpha'], !(this['curBiome'] === _0x49e519 && this['speciesType'] === 0x1) && _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0xf888b, -_0x1d63e0 + _0x5a7a4d, -_0x1d63e0 - _0x5a7a4d, 0x2 * _0x1d63e0, 0x2 * _0x1d63e0), _0x1d2dab['restore']()) : console['log']('not found ' + _0x3f5bda);
        } else _0x1d2dab['save'](), _0x444e67(0x0, 0x0, this['rad'] * 0.2, 'brown'), this['drawNoImageTree'](this['rad']), _0x1d2dab['restore']();
        if (this['xmasTree']) this['drawXmasProps'](_0x3f5bda, _0x1d63e0, _0x21f0ca, _0x5a7a4d);
    }
}
_0x1d2dab['restore']();
}, _0x5210f9['prototype']['drawNoImageTree'] = function (_0x3ad181) {
_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = this['alpha'];
var _0x3739d2 = this['getBiomeColors']();
_0x444e67(-_0x3ad181 * 0.5, -_0x3ad181 * 0.5, _0x3ad181 * 0.65, _0x3739d2['dark']), _0x444e67(_0x3ad181 * 0.5, -_0x3ad181 * 0.5, _0x3ad181 * 0.73, _0x3739d2['dark']), _0x444e67(_0x3ad181 * 0.6, _0x3ad181 * 0.4, Math['max'](0x0, _0x3ad181 * 0.78), _0x3739d2['dark']), _0x444e67(-_0x3ad181 * 0.5, _0x3ad181 * 0.5, Math['max'](0x0, _0x3ad181 * 0.6), _0x3739d2['dark']), _0x444e67(-_0x3ad181 * 0.5, -_0x3ad181 * 0.5, (_0x3ad181 - 0x2) * 0.65, _0x3739d2['light']), _0x444e67(_0x3ad181 * 0.5, -_0x3ad181 * 0.5, (_0x3ad181 - 0x2) * 0.73, _0x3739d2['light']), _0x444e67(_0x3ad181 * 0.6, _0x3ad181 * 0.4, (_0x3ad181 - 0x2) * 0.78, _0x3739d2['light']), _0x444e67(-_0x3ad181 * 0.5, _0x3ad181 * 0.5, (_0x3ad181 - 0x2) * 0.6, _0x3739d2['light']), _0x1d2dab['restore']();
return;
_0x1d2dab['save'](), this['rPer'] = 0x0;
var _0x3d411f = 0x0,
    _0x1d0936 = '#45D157';
_0x1d2dab['fillStyle'] = color, _0x1d2dab['globalAlpha'] = this['alpha'], _0x1d2dab['beginPath'](), _0x1d2dab['arc'](_0x3ad181 * 0.5, -_0x3ad181 * 0.5, Math['max'](0x0, _0x3ad181 * 0.73), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](_0x3ad181 * 0.6, _0x3ad181 * 0.4, Math['max'](0x0, _0x3ad181 * 0.78), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-_0x3ad181 * 0.5, _0x3ad181 * 0.5, Math['max'](0x0, _0x3ad181 * 0.6), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['restore']();
}, _0x5210f9['prototype']['lights'] = 0x0, _0x5210f9['prototype']['drawXmasProps'] = function (_0x49b6e0, _0xe8c49f, _0x250e4d, _0x27ac71) {
this['drawXmasProp'](_0x49b6e0, _0xe8c49f, _0x250e4d, 'decoration', _0x27ac71);
if (this['lights'] == 0x1 || this['lights'] == 0x3) this['drawXmasProp'](_0x49b6e0, _0xe8c49f, _0x250e4d, 'light', _0x27ac71);
if (this['lights'] == 0x2 || this['lights'] == 0x3) this['drawXmasProp'](_0x49b6e0, _0xe8c49f, _0x250e4d, 'light1', _0x27ac71);
}, _0x5210f9['prototype']['drawXmasProp'] = function (_0x40737a, _0x432878, _0x2a7f84, _0x29fd3a, _0x5bc920) {
var _0x54da67 = 'img/tree/' + _0x40737a + '/xmas/' + _0x29fd3a + '.png',
    _0x2f782f = this['getSkinImageObj'](_0x54da67);
_0x2f782f ? (_0x1d2dab['save'](), _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x2f782f, -_0x432878 + _0x5bc920, -_0x432878 - _0x5bc920, 0x2 * _0x432878, 0x2 * _0x432878), _0x1d2dab['restore']()) : console['log']('not found: ' + _0x54da67);
}, _0x5210f9['prototype']['drawEventDecorations'] = function (_0x5006a3, _0x9c0f53, _0x51f8d2, _0x193a0b) {
let _0x413820 = 'gameobj/101/' + _0x5006a3 + '/' + _0x9c0f53 + '_' + this['eventType'] + '.png';
var _0x5619cc = this['getSkinImageObj'](_0x413820);
_0x5619cc ? (_0x1d2dab['save'](), _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x5619cc, -_0x51f8d2 + _0x193a0b, -_0x51f8d2 - _0x193a0b, 0x2 * _0x51f8d2, 0x2 * _0x51f8d2), _0x1d2dab['restore']()) : console['log']('not found: ' + _0x413820);
}, _0x5210f9['prototype']['drawEventDecorations'] = function (_0x3f377a, _0x44eeb3, _0x3800f0, _0x3cf024) {
let _0x5be90f = 'gameobj/101/' + _0x3f377a + '/' + _0x44eeb3 + '_' + this['eventType'] + '.png';
var _0x28aff0 = this['getSkinImageObj'](_0x5be90f);
console['log'](_0x5be90f), _0x28aff0 && (_0x1d2dab['save'](), _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x28aff0, -_0x3800f0 + _0x3cf024, -_0x3800f0 - _0x3cf024, 0x2 * _0x3800f0, 0x2 * _0x3800f0), _0x1d2dab['restore']());
}, _0x5210f9['prototype']['getTreeName'] = function () {
switch (this['foodType']) {
case _0x34cf69:
    return 'coco';
case _0x9c93d1:
    return 'banana';
case _0x5aa030:
    return 'fir';
}
return 'default';
}, _0x5210f9['prototype']['getBiomeColors'] = function () {
var _0x368725 = {
    'dark': '#09992f',
    'light': '#1cba34'
};
switch (this['curBiome']) {
case _0x1c3cf7:
    _0x368725 = {
        'dark': '#808080',
        'light': '#f7f7f7'
    };
    break;
case _0x545d4b:
case _0x49e519:
    _0x368725 = {
        'dark': '#a59215',
        'light': '#fffff'
    };
    break;
case _0x248a5d:
    _0x368725 = {
        'dark': '#09992f',
        'light': '#1cba34'
    };
    break;
case _0x1c453c:
    _0x368725 = {
        'dark': '#09992f',
        'light': 'limegreen'
    };
    break;
case _0x506414:
    _0x368725 = {
        'dark': '#1aae31',
        'light': 'limegreen'
    };
    break;
default:
}
return _0x368725;
}, _0x5210f9['prototype']['getTrunk'] = function () {
if (this['curBiome'] == _0x49e519) return 'trunk4_' + this['speciesType'];
return 'trunk';
}, _0x5210f9['prototype']['foodType'] = 0x0, _0x5210f9['prototype']['canopy'] = !![], _0x5210f9['prototype']['readCustomData_onNewlyVisible'] = function (_0x348dcb) {
this['foodType'] = _0x348dcb['readUInt16'](), this['canopy'] = _0x348dcb['readUInt8']() == 0x1, this['eventType'] = _0x348dcb['readUInt8'](), this['xmasTree'] = this['eventType'] == 0x3;
}, _0x5210f9['prototype']['readUpdatedProperty'] = function (_0x10f220, _0x14a631) {
_0x10f220 == _0x27a574 && (this['lights'] = _0x14a631['readUInt8']());
}, _0x5210f9['prototype']['treeCanopySkin'] = null, _0x5210f9['prototype']['getCanopySkin'] = function (_0x19e355, _0x30a69d) {
return this['treeCanopySkin'] == null && (this['treeCanopySkin'] = 'gameobj/101/' + _0x19e355 + '/' + _0x30a69d + '.png'), this['treeCanopySkin'];
};

function _0x5210f9() {
_0x5210f9['superClass']['call'](this, _0x3319d3);
}
window['Tree'] = _0x5210f9, _0x13dc56['setCustomClassForGameObjType'](_0x5210f9, _0x3319d3);
var _0x570743 = _0x19a06d,
_0x1e3c43 = _0x131218;
_0x19a06d['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x19a06d['prototype']['constructor'] = _0x19a06d, _0x19a06d['superClass'] = _0x1e3c43, _0x19a06d['prototype']['updateZ'] = function () {
this['z'] = -0xd7;
}, _0x19a06d['prototype']['customDraw'] = function (_0x1f0beb) {
_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.5; {
    _0x1d2dab['fillStyle'] = _0x4af19c;
    var _0x5c9f27 = -this['rectW'] / 0x2,
        _0x20fdb4 = this['rectW'] / 0x2,
        _0x117bb4 = -this['rectH'] / 0x2,
        _0xfff7e8 = this['rectH'] / 0x2;
    _0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](_0x5c9f27, _0x117bb4);
    var _0x97d2df = 0x14,
        _0x2e9711 = [-0xf, 0xa, -0xa, 0xc, 0x0, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
        _0x4e9636 = 0x2d,
        _0x4ad504 = 0x0,
        _0x566202 = _0x1f4cd2 - this['x'],
        _0x5a6a41 = 0x0 - this['x'],
        _0x3d154d = _0x4767f1 - this['y'],
        _0x41a97d = 0x0 - this['y'],
        _0xa61e33, _0x3550f5 = _0x5c9f27 - _0x97d2df;
    for (_0xa61e33 = _0x117bb4; _0xa61e33 < _0xfff7e8; _0xa61e33 += _0x4e9636) {
        _0x1d2dab['lineTo'](Math['min'](_0x566202, Math['max'](_0x5a6a41, _0x3550f5 + _0x2e9711[_0x4ad504])), _0xa61e33), _0x4ad504 = (_0x4ad504 + 0x1) % _0x2e9711['length'];
    }
    _0x1d2dab['lineTo'](_0x5c9f27, _0xfff7e8), _0xa61e33 = _0xfff7e8 + _0x97d2df;
    for (_0x3550f5 = _0x5c9f27; _0x3550f5 < _0x20fdb4; _0x3550f5 += _0x4e9636) {
        _0x1d2dab['lineTo'](_0x3550f5, Math['min'](_0x3d154d, Math['max'](_0x41a97d, _0xa61e33 + _0x2e9711[_0x4ad504]))), _0x4ad504 = (_0x4ad504 + 0x1) % _0x2e9711['length'];
    }
    _0x1d2dab['lineTo'](_0x20fdb4, _0xfff7e8), _0x3550f5 = _0x20fdb4 + _0x97d2df;
    for (_0xa61e33 = _0xfff7e8; _0xa61e33 > _0x117bb4; _0xa61e33 -= _0x4e9636) {
        _0x1d2dab['lineTo'](Math['min'](_0x566202, Math['max'](_0x5a6a41, _0x3550f5 + _0x2e9711[_0x4ad504])), _0xa61e33), _0x4ad504 = (_0x4ad504 + 0x1) % _0x2e9711['length'];
    }
    _0x1d2dab['lineTo'](_0x20fdb4, _0x117bb4), _0xa61e33 = _0x117bb4 - _0x97d2df;
    for (_0x3550f5 = _0x20fdb4; _0x3550f5 > _0x5c9f27; _0x3550f5 -= _0x4e9636) {
        _0x1d2dab['lineTo'](_0x3550f5, Math['min'](_0x3d154d, Math['max'](_0x41a97d, _0xa61e33 + _0x2e9711[_0x4ad504]))), _0x4ad504 = (_0x4ad504 + 0x1) % _0x2e9711['length'];
    }
    _0x1d2dab['closePath'](), _0x1d2dab['fill']();
}
_0x1d2dab['restore']();
}, _0x19a06d['prototype']['edge'] = function () {
_0x1d2dab['save']();
var _0x4e19a2 = 0xf; {
    _0x1d2dab['fillStyle'] = 'red';
    var _0x23f8dc = -this['rectW'] / 0x2,
        _0x372af4 = this['rectW'] / 0x2,
        _0x2a76d8 = -this['rectH'] / 0x2 + 0x3,
        _0x3fe3e7 = -this['rectH'] / 0x2 - _0x4e19a2;
    _0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](_0x23f8dc, _0x2a76d8);
    var _0x5400f4 = 0x0,
        _0x24e91f = [-0xf, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
        _0xfe6106 = 0x3c,
        _0x42a31a = 0x0,
        _0x2693ae = _0x1f4cd2 - this['x'],
        _0x1cb0af = 0x0 - this['x'],
        _0x4795a9 = _0x4767f1 - this['y'],
        _0x519c61 = 0x0 - this['y'],
        _0x2b322f, _0xef10dc = _0x23f8dc - _0x5400f4;
    _0x1d2dab['lineTo'](_0x23f8dc, _0x3fe3e7), _0x2b322f = _0x3fe3e7 + _0x5400f4;
    for (_0xef10dc = _0x23f8dc; _0xef10dc < _0x372af4; _0xef10dc += _0xfe6106) {
        _0x1d2dab['lineTo'](_0xef10dc, Math['min'](_0x4795a9, Math['max'](_0x519c61, _0x2b322f + _0x24e91f[_0x42a31a]))), _0x42a31a = (_0x42a31a + 0x1) % _0x24e91f['length'];
    }
    _0x1d2dab['lineTo'](_0x372af4, _0x3fe3e7), _0x1d2dab['lineTo'](_0x372af4, _0x2a76d8), _0x1d2dab['closePath']();
}
_0x1d2dab['restore']();
};

function _0x19a06d() {
_0x19a06d['superClass']['call'](this, _0x1fad46);
}
window['RainForest'] = _0x19a06d, _0x13dc56['setCustomClassForGameObjType'](_0x19a06d, _0x1fad46);
var _0x1e3c43 = _0x131218;
_0x4ae251['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x4ae251['prototype']['constructor'] = _0x4ae251, _0x4ae251['superClass'] = _0x1e3c43, _0x4ae251['prototype']['updateZ'] = function () {
this['z'] = 0x3ed;
}, _0x4ae251['prototype']['customDraw'] = function (_0x426cde) {
_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1, _0x444e67(0x0, 0x0, this['rad'], '#000'), _0x1d2dab['restore']();
};

function _0x4ae251() {
_0x4ae251['superClass']['call'](this, _0x5630b5);
}
window['FOV'] = _0x4ae251, _0x13dc56['setCustomClassForGameObjType'](_0x4ae251, _0x5630b5);
var _0x1e3c43 = _0x131218;
_0x22f300['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x22f300['prototype']['constructor'] = _0x22f300, _0x22f300['superClass'] = _0x1e3c43, _0x22f300['prototype']['updateZ'] = function () {
this['z'] = -0x9f, (this['specType'] == 0x0 || 0x1) && (this['z'] = -0x9e);
}, _0x22f300['prototype']['currentWidth'] = 0x5a, _0x22f300['prototype']['currentPadding'] = 0x0, _0x22f300['prototype']['padding'] = 0x32, _0x22f300['prototype']['isFloatingRiver'] = ![], _0x22f300['prototype']['customDraw'] = function (_0x4ee248) {
if (_0x4ee248) {
    this['jaggedSidesForRect'](_0x1b5add, this['getStreamMargin']());
    if (!_0x4974ed['noTextures']) this['drawTerrainFeatures']();
} else {}
this['drawStream'](_0x201756), this['drawCurrent'](this['isFloatingRiver'], this['riverSize']);
}, _0x22f300['prototype']['drawCurrent'] = function (_0x32bf68, _0x1feee4) {
if (_0x32bf68) {
    this['currentPadding'] = this['padding'] * _0x1feee4 / 0x2;
    var _0x2f64cb = 0x3c,
        _0x3c23bd = 0x3e8;
    if (this['specType'] == 0x0) {
        var _0x4d7743 = this['getSkinImageObj']('gameobj/40/currentRight.png');
        if (_0x4d7743) {
            var _0x295dba = -this['rectW'] / 0x2 + 0x32,
                _0x4ebfba = this['currentWidth'];
            _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1, maxWaves = Math['round'](this['rectW'] / _0x4ebfba) - 0x1;
            for (i = 0x0; i < maxWaves; i++) {
                var _0x279ba9 = this['speedX'] * (_0x4ebfba / _0x2f64cb) * _0x3c23bd,
                    _0x4cff9d = (_0x740c5b - this['spawnTime']) % _0x279ba9 / _0x279ba9,
                    _0x257811 = _0x4ebfba,
                    _0xe5cf17 = _0x295dba + _0x257811 * _0x4cff9d;
                _0x1d2dab['drawImage'](_0x4d7743, _0xe5cf17, this['currentPadding'] + -this['rectH'] * _0x1feee4 / 0x2, _0x4ebfba * _0x1feee4, this['riverStreamHeight'] * _0x1feee4 - 0x8), _0x295dba += _0x4ebfba;
            }
            _0x1d2dab['restore']();
        }
    } else {
        if (this['specType'] == 0x1) {
            var _0x4d7743 = this['getSkinImageObj']('gameobj/40/currentLeft.png');
            if (_0x4d7743) {
                var _0x295dba = this['rectW'] / 0x2 - 0x64,
                    _0x4ebfba = this['currentWidth'];
                _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1, maxWaves = Math['round'](this['rectW'] / _0x4ebfba) - 0x1;
                for (i = 0x0; i < maxWaves; i++) {
                    var _0x279ba9 = this['speedX'] * (_0x4ebfba / _0x2f64cb) * _0x3c23bd,
                        _0x4cff9d = (_0x740c5b - this['spawnTime']) % _0x279ba9 / _0x279ba9,
                        _0x257811 = _0x4ebfba,
                        _0xe5cf17 = _0x295dba + _0x257811 * _0x4cff9d;
                    _0x1d2dab['drawImage'](_0x4d7743, _0xe5cf17, this['currentPadding'] + -this['rectH'] * _0x1feee4 / 0x2, _0x4ebfba * _0x1feee4, this['riverStreamHeight'] * _0x1feee4 - 0x8), _0x295dba -= _0x4ebfba;
                }
                _0x1d2dab['restore']();
            }
        } else {
            if (this['specType'] == 0x2) {
                var _0x4d7743 = this['getSkinImageObj']('gameobj/40/currentDown.png');
                if (_0x4d7743) {
                    var _0x244726 = -this['rectH'] / 0x2 - 0x32,
                        _0x1672ae = this['currentWidth'];
                    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1, maxWaves = Math['round'](this['rectH'] / _0x1672ae) - 0x1;
                    for (i = 0x0; i < maxWaves; i++) {
                        var _0x279ba9 = this['speedY'] * (_0x1672ae / _0x2f64cb) * _0x3c23bd,
                            _0x4cff9d = (_0x740c5b - this['spawnTime']) % _0x279ba9 / _0x279ba9,
                            _0x257811 = _0x1672ae,
                            _0x225aee = _0x244726 + _0x257811 * _0x4cff9d;
                        if (i > 0x0) _0x1d2dab['drawImage'](_0x4d7743, this['currentPadding'] + -this['rectW'] * _0x1feee4 / 0x2, _0x225aee, this['riverStreamHeight'] * _0x1feee4 - 0x8, _0x1672ae * _0x1feee4);
                        _0x244726 += _0x1672ae;
                    }
                    _0x1d2dab['restore']();
                }
            } else {
                if (this['specType'] == 0x3) {
                    var _0x4d7743 = this['getSkinImageObj']('gameobj/40/currentUp.png');
                    if (_0x4d7743) {
                        var _0x244726 = this['rectH'] / 0x2 + 0x32,
                            _0x1672ae = this['currentWidth'];
                        _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1, maxWaves = Math['round'](this['rectH'] / _0x1672ae) - 0x1;
                        for (i = 0x0; i < maxWaves; i++) {
                            var _0x279ba9 = this['speedY'] * (_0x1672ae / _0x2f64cb) * _0x3c23bd,
                                _0x4cff9d = (_0x740c5b - this['spawnTime']) % _0x279ba9 / _0x279ba9,
                                _0x257811 = _0x1672ae,
                                _0x225aee = _0x244726 + _0x257811 * _0x4cff9d;
                            if (i > 0x0) _0x1d2dab['drawImage'](_0x4d7743, this['currentPadding'] + -this['rectW'] * _0x1feee4 / 0x2, _0x225aee, this['riverStreamHeight'] * _0x1feee4 - 0x8, _0x1672ae * _0x1feee4);
                            _0x244726 -= _0x1672ae;
                        }
                        _0x1d2dab['restore']();
                    }
                }
            }
        }
    }
}
}, _0x22f300['prototype']['getStreamMargin'] = function () {
return this['margin'];
}, _0x22f300['prototype']['getRectWidth'] = function () {
var _0x2c7674 = this['rectW'];
return _0x2c7674;
}, _0x22f300['prototype']['getRectHeight'] = function () {
var _0x178931 = this['rectH'];
return _0x178931;
}, _0x22f300['prototype']['jaggedSidesForRect'] = function (_0x2e36a9, _0xbcd5ee) {
_0x1d2dab['fillStyle'] = _0x2e36a9;
var _0x4824e2 = ![];
if (_0xbcd5ee) _0x4824e2 = !![];
var _0x1ddc26 = -this['getRectWidth']() / 0x2 + (_0x4824e2 ? _0xbcd5ee['x_min'] : 0x0),
    _0x570e4d = this['getRectWidth']() / 0x2 + (_0x4824e2 ? _0xbcd5ee['x_max'] : 0x0),
    _0x9785a6 = -this['getRectHeight']() / 0x2 + (_0x4824e2 ? _0xbcd5ee['y_min'] : 0x0),
    _0x4cc258 = this['getRectHeight']() / 0x2 + (_0x4824e2 ? _0xbcd5ee['y_max'] : 0x0);
_0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](_0x1ddc26, _0x9785a6);
var _0x483c44 = 0x1e,
    _0x4d30c1 = [-0x8, 0xa, -0xa, 0xc, 0x0, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
    _0x446c02 = 0x2d,
    _0x600273 = 0x0,
    _0x1170ed = _0x1f4cd2 - this['x'],
    _0x31a425 = 0x0 - this['x'],
    _0x17a29d = _0x4767f1 - this['y'],
    _0x5771ec = 0x0 - this['y'],
    _0x26843f, _0x261177 = _0x1ddc26 - _0x483c44;
for (_0x26843f = _0x9785a6; _0x26843f < _0x4cc258; _0x26843f += _0x446c02) {
    _0x1d2dab['lineTo'](Math['min'](_0x1170ed, Math['max'](_0x31a425, _0x261177 + _0x4d30c1[_0x600273])), _0x26843f), _0x600273 = (_0x600273 + 0x1) % _0x4d30c1['length'];
}
_0x1d2dab['lineTo'](_0x1ddc26, _0x4cc258), _0x26843f = _0x4cc258 + _0x483c44;
for (_0x261177 = _0x1ddc26; _0x261177 < _0x570e4d; _0x261177 += _0x446c02) {
    _0x1d2dab['lineTo'](_0x261177, Math['min'](_0x17a29d, Math['max'](_0x5771ec, _0x26843f + _0x4d30c1[_0x600273]))), _0x600273 = (_0x600273 + 0x1) % _0x4d30c1['length'];
}
_0x1d2dab['lineTo'](_0x570e4d, _0x4cc258), _0x261177 = _0x570e4d + _0x483c44;
for (_0x26843f = _0x4cc258; _0x26843f > _0x9785a6; _0x26843f -= _0x446c02) {
    _0x1d2dab['lineTo'](Math['min'](_0x1170ed, Math['max'](_0x31a425, _0x261177 + _0x4d30c1[_0x600273])), _0x26843f), _0x600273 = (_0x600273 + 0x1) % _0x4d30c1['length'];
}
_0x1d2dab['lineTo'](_0x570e4d, _0x9785a6), _0x26843f = _0x9785a6 - _0x483c44;
for (_0x261177 = _0x570e4d; _0x261177 > _0x1ddc26; _0x261177 -= _0x446c02) {
    _0x1d2dab['lineTo'](_0x261177, Math['min'](_0x17a29d, Math['max'](_0x5771ec, _0x26843f + _0x4d30c1[_0x600273]))), _0x600273 = (_0x600273 + 0x1) % _0x4d30c1['length'];
}
_0x1d2dab['closePath'](), _0x1d2dab['fill']();
}, _0x22f300['prototype']['drawStream'] = function (_0x4e66e1) {
_0x1d2dab['save']();
if (this['specType'] < 0x2) {
    var _0x52c1fd = -this['rectW'] / 0x2,
        _0x13f662 = this['rectW'],
        _0x4950dd = -this['riverStreamHeight'] / 0x2 * this['riverSize'],
        _0x4fa9a1 = this['riverStreamHeight'] * this['riverSize'];
    _0x1d2dab['fillStyle'] = _0x4e66e1, this['drawRandomEdges'](_0x52c1fd, _0x4950dd, _0x13f662 / 0x2, _0x4fa9a1 / 0x2);
} else {
    var _0x52c1fd = -this['riverStreamHeight'] / 0x2 * this['riverSize'],
        _0x13f662 = this['riverStreamHeight'] * this['riverSize'],
        _0x4950dd = -this['rectH'] / 0x2,
        _0x4fa9a1 = this['rectH'];
    _0x1d2dab['fillStyle'] = _0x4e66e1, this['drawRandomEdges'](_0x52c1fd, _0x4950dd, _0x13f662 / 0x2, _0x4fa9a1 / 0x2);
}
_0x1d2dab['restore']();
}, _0x22f300['prototype']['drawRandomEdges'] = function (_0x2ee9f6, _0x5f3fc1, _0x2f502e, _0x90ac9d) {
_0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](_0x2ee9f6, _0x5f3fc1);
var _0x4fa267 = 0xa,
    _0x4c8a2a = [-0x8, 0xa, -0xa, 0xc, 0x0, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
    _0x16ede = 0x2d,
    _0x15bacb = 0x0,
    _0xe9827c, _0x150bf3 = _0x2ee9f6 - _0x4fa267;
if (this['specType'] == 0x2 || this['specType'] == 0x3)
    for (_0xe9827c = _0x5f3fc1; _0xe9827c < _0x90ac9d; _0xe9827c += _0x16ede) {
        _0x1d2dab['lineTo'](_0x150bf3 + _0x4c8a2a[_0x15bacb], _0xe9827c), _0x15bacb = (_0x15bacb + 0x1) % _0x4c8a2a['length'];
    }
_0x1d2dab['lineTo'](_0x2ee9f6, _0x90ac9d), _0xe9827c = _0x90ac9d + _0x4fa267;
if (this['specType'] == 0x0 || this['specType'] == 0x1)
    for (_0x150bf3 = _0x2ee9f6; _0x150bf3 < _0x2f502e; _0x150bf3 += _0x16ede) {
        _0x1d2dab['lineTo'](_0x150bf3, _0xe9827c + _0x4c8a2a[_0x15bacb]), _0x15bacb = (_0x15bacb + 0x1) % _0x4c8a2a['length'];
    }
_0x1d2dab['lineTo'](_0x2f502e, _0x90ac9d);
if (this['specType'] == 0x2 || this['specType'] == 0x3) {
    _0x150bf3 = _0x2f502e + _0x4fa267;
    for (_0xe9827c = _0x90ac9d; _0xe9827c > _0x5f3fc1; _0xe9827c -= _0x16ede) {
        _0x1d2dab['lineTo'](_0x150bf3 + _0x4c8a2a[_0x15bacb], _0xe9827c), _0x15bacb = (_0x15bacb + 0x1) % _0x4c8a2a['length'];
    }
}
_0x1d2dab['lineTo'](_0x2f502e, _0x5f3fc1);
if (this['specType'] == 0x0 || this['specType'] == 0x1) {
    _0xe9827c = _0x5f3fc1 - _0x4fa267;
    for (_0x150bf3 = _0x2f502e; _0x150bf3 > _0x2ee9f6; _0x150bf3 -= _0x16ede) {
        _0x1d2dab['lineTo'](_0x150bf3, _0xe9827c + _0x4c8a2a[_0x15bacb]), _0x15bacb = (_0x15bacb + 0x1) % _0x4c8a2a['length'];
    }
}
_0x1d2dab['closePath'](), _0x1d2dab['fill']();
}, _0x22f300['prototype']['drawBody'] = function (_0x2d721b, _0x1f79ac, _0x491302) {
var _0xda9577 = _0x1d2dab['globalAlpha']; {
    _0x1d2dab['fillStyle'] = _0x2d721b;
    var _0x5b6bc0 = 0x0;
    _0x1f79ac > 0x1 && (_0x5b6bc0 = 0x64);
    this['specType'] < 0x2 ? _0x1d2dab['fillRect'](-this['rectW'] / 0x2, -this['riverStreamHeight'] / 0x2 * _0x1f79ac, this['rectW'], this['riverStreamHeight'] * _0x1f79ac) : _0x1d2dab['fillRect'](-this['riverStreamHeight'] / 0x2 * _0x1f79ac, -this['rectH'] / 0x2, this['riverStreamHeight'] * _0x1f79ac, this['rectH']);
    if (this['specType'] < 0x2) {
        var _0x139aad = 0xf; {
            _0x1d2dab['fillStyle'] = _0x2d721b;
            var _0x4af489 = -this['rectW'] / 0x2,
                _0x391db7 = this['rectW'] / 0x2,
                _0x536e3a = (-this['riverStreamHeight'] / 0x2 + 0x3) * _0x1f79ac,
                _0x388495 = (-this['riverStreamHeight'] / 0x2 - _0x139aad) * _0x1f79ac;
            _0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](_0x4af489, _0x536e3a);
            var _0x16b389 = 0x0,
                _0x527991 = [-0xf, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
                _0x32f395 = 0x3c,
                _0x5da00d = 0x0,
                _0xf29097 = _0x1f4cd2 - this['x'],
                _0x3e1feb = 0x0 - this['x'],
                _0x4c5b10 = _0x4767f1 - this['y'],
                _0x424b88 = 0x0 - this['y'],
                _0x37bc6d, _0x29472a = _0x4af489 - _0x16b389;
            _0x1d2dab['lineTo'](_0x4af489, _0x388495), _0x37bc6d = _0x388495 + _0x16b389;
            for (_0x29472a = _0x4af489; _0x29472a < _0x391db7; _0x29472a += _0x32f395) {
                _0x1d2dab['lineTo'](_0x29472a, Math['min'](_0x4c5b10, Math['max'](_0x424b88, _0x37bc6d + _0x527991[_0x5da00d]))), _0x5da00d = (_0x5da00d + 0x1) % _0x527991['length'];
            }
            _0x1d2dab['lineTo'](_0x391db7, _0x388495), _0x1d2dab['lineTo'](_0x391db7, _0x536e3a), _0x1d2dab['closePath'](), _0x1d2dab['fill']();
        } {
            _0x1d2dab['fillStyle'] = _0x2d721b;
            var _0x4af489 = -this['rectW'] / 0x2,
                _0x391db7 = this['rectW'] / 0x2,
                _0x536e3a = (this['riverStreamHeight'] / 0x2 - 0x3) * _0x1f79ac,
                _0x388495 = (this['riverStreamHeight'] / 0x2 + _0x139aad) * _0x1f79ac;
            _0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](_0x4af489, _0x536e3a);
            var _0x16b389 = 0x0,
                _0x527991 = [-0xf, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
                _0x32f395 = 0x3c,
                _0x5da00d = 0x0,
                _0xf29097 = _0x1f4cd2 - this['x'],
                _0x3e1feb = 0x0 - this['x'],
                _0x4c5b10 = _0x4767f1 - this['y'],
                _0x424b88 = 0x0 - this['y'],
                _0x37bc6d, _0x29472a = _0x4af489 - _0x16b389;
            _0x1d2dab['lineTo'](_0x4af489, _0x388495), _0x37bc6d = _0x388495 + _0x16b389;
            for (_0x29472a = _0x4af489; _0x29472a < _0x391db7; _0x29472a += _0x32f395) {
                _0x1d2dab['lineTo'](_0x29472a, Math['min'](_0x4c5b10, Math['max'](_0x424b88, _0x37bc6d + _0x527991[_0x5da00d]))), _0x5da00d = (_0x5da00d + 0x1) % _0x527991['length'];
            }
            _0x1d2dab['lineTo'](_0x391db7, _0x388495), _0x1d2dab['lineTo'](_0x391db7, _0x536e3a), _0x1d2dab['closePath'](), _0x1d2dab['fill']();
        }
    }
}
if (_0x491302 && _0x1f79ac > 0.3) {
    var _0xdda7f3 = this['getSkinImageObj']('img/riverCurrent' + this['specType'] + '.png');
    if (_0xdda7f3) {
        var _0x1ea14c = -this['rectW'] / 0x2,
            _0x4c7dfe = 0x64;
        _0x1d2dab['save'](), _0x1d2dab['fillStyle'] = 'yellow', _0x1d2dab['globalAlpha'] = 0x1;
        var _0x5f0d77 = 0x3c;
        for (i = 0x0; i < 0x50; i++) {
            var _0x3fa9df = this['speedX'] * (_0x4c7dfe / _0x5f0d77) * 0x3e8,
                _0x5631b0 = (_0x740c5b - this['spawnTime']) % _0x3fa9df / _0x3fa9df,
                _0x4d3f0e = _0x4c7dfe,
                _0x3e8699 = _0x1ea14c + _0x4d3f0e * _0x5631b0;
            _0x1d2dab['drawImage'](_0xdda7f3, _0x3e8699, 0xf + -this['rectH'] * _0x1f79ac / 0x2, _0x4c7dfe * _0x1f79ac, this['riverStreamHeight'] * _0x1f79ac - 0x8), _0x1ea14c += _0x4c7dfe;
        }
        _0x1d2dab['restore']();
    }
}
}, _0x22f300['prototype']['speedX'] = 0x1, _0x22f300['prototype']['speedY'] = 0x1, _0x22f300['prototype']['onLerpUpdate'] = function (_0x4e2909) {
this['riverSize'] = _0x4e2909 * (this['n_riverSize'] - this['o_riverSize']) + this['o_riverSize'];
}, _0x22f300['prototype']['readUpdatedProperty'] = function (_0x293597, _0x6467ce) {
_0x293597 == _0x22fe89 && (this['n_riverSize'] = _0x6467ce['readUInt16']() / 0x3e8, this['o_riverSize'] = this['riverSize']);
}, _0x22f300['prototype']['worldUpd_readMsgNewlyVisible'] = function (_0x553b09, _0x3ed81c, _0xa4cca3) {
this['setObjTypes'](_0x3ed81c, _0xa4cca3), this['id'] = _0x553b09['readUInt32']();
var _0x397447 = _0x553b09['readUInt16']() / 0x4,
    _0x4638fc = _0x553b09['readUInt16']() / 0x4;
this['rectW'] = _0x553b09['readUInt16'](), this['rectH'] = _0x553b09['readUInt16'](), this['curBiome'] = _0x553b09['readUInt8'](), this['clientBatchDrawID'] = _0x553b09['readUInt16'](), this['specType'] = _0x553b09['readUInt8'](), this['riverStreamHeight'] = _0x553b09['readUInt16'](), this['isRectangle'] = !![], this['ox'] = this['x'] = this['nx'] = _0x397447, this['oy'] = this['y'] = this['ny'] = _0x4638fc, this['clientBatchDraw'] = !![], this['isFloatingRiver'] = _0x553b09['readUInt8']() == 0x1;
if (this['specType'] == 0x1) this['speedX'] = -0x1;
if (this['specType'] == 0x3) this['speedY'] = -0x1;
this['riverSize'] = this['o_riverSize'] = this['n_riverSize'] = 0x1;
var _0x37b0e1 = 0x0,
    _0x252126 = 0x0,
    _0x4ebfeb = 0x0,
    _0x26784d = 0x0;
if (this['specType'] == 0x2) _0x26784d = -0x78;
else this['specType'] == 0x3 ? _0x4ebfeb = 0x78 : (_0x37b0e1 = 0x78, _0x252126 = -0x78);
this['margin'] = {
    'x_min': _0x37b0e1,
    'x_max': _0x252126,
    'y_min': _0x4ebfeb,
    'y_max': _0x26784d
}, this['generateTerrainFeatures']();
}, _0x22f300['prototype']['biomePattern'] = null, _0x22f300['prototype']['generateTerrainFeatures'] = function () {
var _0x4f08b6 = [],
    _0x4fd5c8 = 0x12c,
    _0x46462b = 1.5;
if (this['specType'] == 0x2 || this['specType'] == 0x3) {
    var _0x3a9795 = 0x0,
        _0x3d1277 = -this['rectH'] / 0x2;
    for (; _0x3d1277 + _0x4fd5c8 < this['rectH'] / 0x2;) {
        _0x3a9795 = -_0x4fd5c8 / 0x2;
        var _0x46c2e9 = Math['max'](0x0, Math['round'](_0x5e22a2(0x0, 0x3)) - 0x1);
        _0x4f08b6['push']({
            'x': _0x3a9795,
            'y': _0x3d1277,
            'w': _0x4fd5c8,
            'h': _0x4fd5c8,
            'img': _0x46c2e9,
            'r': _0x5e22a2(0x0, 0xb4)
        }), _0x3d1277 += _0x4fd5c8 * _0x46462b;
    }
} else {
    var _0x3d1277 = 0x0,
        _0x3a9795 = _0x4fd5c8 / 0x4 - this['rectW'] / 0x2;
    for (; _0x3a9795 + _0x4fd5c8 < this['rectW'] / 0x2;) {
        _0x3d1277 = -_0x4fd5c8 / 0x2;
        var _0x46c2e9 = Math['max'](0x0, Math['round'](_0x5e22a2(0x0, 0x3)) - 0x1);
        _0x4f08b6['push']({
            'x': _0x3a9795,
            'y': _0x3d1277,
            'w': _0x4fd5c8,
            'h': _0x4fd5c8,
            'img': _0x46c2e9,
            'r': _0x5e22a2(0x0, 0xb4)
        }), _0x3a9795 += _0x4fd5c8 * _0x46462b;
    }
}
this['biomePattern'] = _0x4f08b6;
}, _0x22f300['prototype']['drawTerrainFeatures'] = function () {
if (this['biomePattern'] && this['biomePattern']['length'] > 0x0)
    for (i = 0x0; i < this['biomePattern']['length']; i++) {
        var _0x4dbf17 = this['biomePattern'][i];
        _0x1d2dab['save'](), _0x1d2dab['translate'](_0x4dbf17['x'], _0x4dbf17['y']);
        var _0x1e370d = 0x0,
            _0x67097 = 0x0,
            _0xf8158c = _0x4dbf17['w'],
            _0x599cd1 = _0x4dbf17['h'],
            _0x52c369 = '0_' + _0x4dbf17['img'],
            _0x2c985c = 'gameobj/' + this['oType'] + '/' + _0x52c369 + '.png',
            _0x1307b8 = this['getSkinImageObj'](_0x2c985c);
        _0x1307b8 && _0x1d2dab['drawImage'](_0x1307b8, _0x1e370d, _0x67097, _0xf8158c, _0x599cd1), _0x1d2dab['restore']();
    }
}, _0x22f300['prototype']['drawBox'] = function (_0x3c93e6, _0x4712be, _0x261e41, _0x9b78e3) {
_0x1d2dab['beginPath'](), _0x1d2dab['fillStyle'] = 'red', _0x1d2dab['moveTo'](_0x3c93e6, _0x4712be), _0x1d2dab['lineTo'](_0x3c93e6, _0x9b78e3), _0x1d2dab['lineTo'](_0x261e41, _0x9b78e3), _0x1d2dab['lineTo'](_0x261e41, _0x4712be), _0x1d2dab['closePath'](), _0x1d2dab['fill']();
};

function _0x22f300() {
_0x22f300['superClass']['call'](this, _0x141bf4), this['clientBatchDraw'] = !![];
}
window['River'] = _0x22f300, _0x13dc56['setCustomClassForGameObjType'](_0x22f300, _0x141bf4);
var _0x1e3c43 = _0x131218;
_0x673759['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x673759['prototype']['constructor'] = _0x673759, _0x673759['superClass'] = _0x1e3c43, _0x673759['prototype']['LakeSize'] = 0x1, _0x673759['prototype']['isEmptyLake'] = ![], _0x673759['prototype']['isDeathLake'] = ![], _0x673759['prototype']['updateZ'] = function () {
if (this['isEmptyLake']) this['z'] = -0x9d;
else this['z'] = -0xa0;
}, _0x673759['prototype']['customDraw'] = function (_0x2fa456) {
if (this['isDeathLake']) _0x1d2dab['fillStyle'] = _0x1b5add, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), this['poisonBody'](_0x201756, this['LakeSize'], this['poison']);
else this['drawBody'](_0x201756, 0x1);
}, _0x673759['prototype']['poisonBody'] = function (_0x47e419, _0x82387d, _0xc862d0) {
{
    var _0x392fa1 = '#547d24',
        _0x12d413 = this['rad'] * _0x82387d;
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1;
    if (!(_0x31f3fc == 0x2)) _0x1d2dab['rotate'](this['rPer'] * 0x2 * Math['PI']);
    var _0x1a35ab = 5.5,
        _0x4228dc = _0x1170c4('lake', this['spawnTime']);
    _0x4228dc !== undefined && _0x4228dc != null && (this['theFrame'] = _0x4228dc);
    _0x1a35ab = this['theFrame'];
    var _0x115b95 = 0x4;
    _0x1d2dab['fillStyle'] = _0x1b5add, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, _0x12d413, 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['fillStyle'] = _0x47e419;
    var _0x49159d = _0x12d413 * 0.45,
        _0x304335 = _0x12d413 * 0.45 + 0xf * this['rPer'],
        _0x13de2a = _0x12d413 * 0.5,
        _0x145e3c = _0x12d413 * 0.5 + 0xf * this['rPer'],
        _0x48d812 = -_0x12d413 * 0.55 * 0.707,
        _0x2f2dd2 = +_0x12d413 * 0.55 * 0.707 + 0xf * this['rPer'],
        _0x3f50d8 = -_0x12d413 * 0.75,
        _0x28b305 = -_0x12d413 * 0.35 + 0xf * this['rPer'],
        _0xde7284 = _0x12d413 + 0xa * this['rPer'],
        _0x1242c1 = 0x32 * this['rPer'],
        _0x19bcd2 = _0x12d413 - 0x14 * this['rPer'],
        _0x40ae35 = 0x32 * this['rPer'];
    _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, _0x12d413 - _0x115b95 + _0x1a35ab), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['save'](), _0x1d2dab['fillStyle'] = _0x392fa1, _0x1d2dab['globalAlpha'] = _0xc862d0, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, _0x12d413 - _0x115b95 + _0x1a35ab), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['restore'](), _0x1d2dab['restore']();
}
}, _0x673759['prototype']['drawBody'] = function (_0x5f595b, _0x41b89f, _0x348452) {
{
    var _0x528086 = this['rad'] * _0x41b89f;
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = _0x348452;
    if (!_0x44408d) {
        if (!(_0x31f3fc == 0x2)) _0x1d2dab['rotate'](this['rPer'] * 0x2 * Math['PI']);
    }
    var _0x13c68b = 0x0;
    if (!_0x44408d && !this['isEmptyLake']) {
        var _0x3b76f3 = (_0x740c5b - this['spawnTime']) / 0x3e8,
            _0x377fc4 = 0x4,
            _0x1e07a9 = 5.5;
        _0x13c68b = _0x1e07a9 * Math['sin'](0x2 * Math['PI'] / _0x377fc4 * _0x3b76f3);
    }
    var _0x524126 = 0x4;
    !this['isEmptyLake'] && (_0x1d2dab['fillStyle'] = _0x1b5add, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, _0x528086, 0x0, Math['PI'] * 0x2), _0x1d2dab['fill']());
    if (this['curBiome'] == _0x1c3cf7) _0x1d2dab['fillStyle'] = '#8da0d6';
    else _0x1d2dab['fillStyle'] = _0x201756;
    _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, _0x528086 - _0x524126 + _0x13c68b), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), !(_0x44408d && _0x31f3fc == 0x2) && (_0x1d2dab['beginPath'](), _0x1d2dab['arc'](_0x528086 * 0.45, -_0x528086 * 0.45 + 0xf * this['rPer'], Math['max'](0x0, _0x528086 * 0.5 + _0x13c68b), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](_0x528086 * 0.5, _0x528086 * 0.5 + 0xf * this['rPer'], Math['max'](0x0, _0x528086 * 0.4 + _0x13c68b), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-_0x528086 * 0.55 * 0.707, +_0x528086 * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, _0x528086 * 0.5 + _0x13c68b), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-_0x528086 * 0.75, -_0x528086 * 0.35 + 0xf * this['rPer'], Math['max'](0x0, _0x528086 * 0.3 + _0x13c68b), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](_0x528086 + 0xa * this['rPer'], 0x32 * this['rPer'], this['specType'] == 0x0 ? 0x8 : 0x4, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](_0x528086 - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill']()), _0x1d2dab['restore']();
}
}, _0x673759['prototype']['onLerpUpdate'] = function (_0xec7675) {
this['LakeSize'] = _0xec7675 * (this['n_LakeSize'] - this['o_LakeSize']) + this['o_LakeSize'];
}, _0x673759['prototype']['readUpdatedProperty'] = function (_0x148c15, _0x2ed6fa) {
if (_0x148c15 == _0x28edb2) this['n_LakeSize'] = _0x2ed6fa['readUInt16']() / 0x3e8, this['o_LakeSize'] = this['LakeSize'];
else {
    if (_0x148c15 == _0x554256) this['poison'] = _0x2ed6fa['readUInt16']() / 0x3e8;
    else _0x148c15 == _0xf89e0c && (this['isEmptyLake'] = _0x2ed6fa['readUInt8']() == 0x1);
}
}, _0x673759['prototype']['readCustomData_onNewlyVisible'] = function (_0x71d3db) {
this['isEmptyLake'] = _0x71d3db['readUInt8']() == 0x1, this['isDeathLake'] = _0x71d3db['readUInt8']() == 0x1, this['isDeathLake'] && (this['LakeSize'] = this['o_LakeSize'] = this['n_LakeSize'] = 0x1, this['LakeStream'] = _0x71d3db['readUInt16']());
};

function _0x673759() {
_0x673759['superClass']['call'](this, _0x5ddad8);
}
window['Lake'] = _0x673759, _0x13dc56['setCustomClassForGameObjType'](_0x673759, _0x5ddad8);
var _0x1e3c43 = _0x131218;
_0x4a7a07['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x4a7a07['prototype']['constructor'] = _0x4a7a07, _0x4a7a07['superClass'] = _0x1e3c43, _0x4a7a07['prototype']['updateZ'] = function () {
this['z'] = 0x3f2;
}, _0x4a7a07['prototype']['customDraw'] = function (_0x1a3b5a) {
var _0x465d9d = 0x0,
    _0x58a62e = (_0x740c5b - this['spawnTime']) / 0x3e8,
    _0x63a31a = _0x21d673(_0x58a62e, 0x1, 0.3, 0x2),
    _0x5b97da = this['getSkinImageObj']('img/viralpandemic/virus.png');
if (_0x5b97da) {
    var _0x32e0ca = this['rad'] * 1.2 + _0x63a31a;
    if (this['stickyVirus']) _0x1d2dab['rotate'](this['angle']);
    else {
        if (this['angleR'] == undefined) this['angleR'] = _0xc151f5(0.01, 0.09);
        this['angleR'] += 0.01, _0x1d2dab['rotate'](this['angleR']);
    }
    _0x1d2dab['drawImage'](_0x5b97da, -_0x32e0ca, -_0x32e0ca, 0x2 * _0x32e0ca, 0x2 * _0x32e0ca);
} else this['drawOutlinedCircle']('', 'white');
}, _0x4a7a07['prototype']['stickyVirus'] = ![], _0x4a7a07['prototype']['readUpdatedProperty'] = function (_0x34da6a, _0xd2220a) {
_0x34da6a == _0x55eeb9 && (this['stickyVirus'] = _0xd2220a['readUInt8']() == 0x1);
};

function _0x4a7a07() {
_0x4a7a07['superClass']['call'](this, _0x547a8a), _0x4a7a07['prototype']['easeAngleChanges'] = !![];
}
window['Virus'] = _0x4a7a07, _0x13dc56['setCustomClassForGameObjType'](_0x4a7a07, _0x547a8a);
var _0x1e3c43 = _0x131218;
_0x509d49['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x509d49['prototype']['constructor'] = _0x509d49, _0x509d49['superClass'] = _0x1e3c43, _0x509d49['prototype']['foodType'] = 0x0, _0x509d49['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x509d49['prototype']['customDraw'] = function (_0x5b92b8) {
_0x1d2dab['save']();
var _0x39883e = this['getImmunityFoodName'](),
    _0x32a3b2 = this['getSkinImageObj']('img/viralpandemic/' + _0x39883e + '_e.png');
if (_0x32a3b2) {
    var _0x1158ab = this['rad'];
    _0x1d2dab['save'](), _0x1d2dab['rotate'](this['rPer'] * 0.5 * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0x32a3b2, -_0x1158ab, -_0x1158ab, 0x2 * _0x1158ab, 0x2 * _0x1158ab), _0x1d2dab['restore']();
}
_0x1d2dab['restore']();
}, _0x509d49['prototype']['getImmunityFoodName'] = function () {
var _0xb19d9b = 'cabbage';
switch (this['foodType']) {
case 0x1:
    _0xb19d9b = 'cabbage';
    break;
case 0x2:
    _0xb19d9b = 'dragonfruit';
    break;
case 0x3:
    _0xb19d9b = 'onion';
    break;
case 0x4:
    _0xb19d9b = 'papaya';
    break;
case 0x5:
    _0xb19d9b = 'papayaslice';
    break;
case 0x6:
    _0xb19d9b = 'peach';
    break;
case 0x7:
    _0xb19d9b = 'peapod';
    break;
case 0x8:
    _0xb19d9b = 'peapod1';
    break;
}
return _0xb19d9b;
}, _0x509d49['prototype']['readCustomData_onNewlyVisible'] = function (_0x27c193) {
this['foodType'] = _0x27c193['readUInt8']();
};

function _0x509d49() {
_0x509d49['superClass']['call'](this, _0x351f4e), this['doesDrawEffectScale'] = !![];
}
window['ImmunityFood'] = _0x509d49, _0x13dc56['setCustomClassForGameObjType'](_0x509d49, _0x351f4e);
var _0x1e3c43 = _0x131218;
_0x4697a1['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x4697a1['prototype']['constructor'] = _0x4697a1, _0x4697a1['superClass'] = _0x1e3c43;
var _0x1a2c52 = 0x0,
_0x28ca3e = 0x0;
_0x4697a1['prototype']['updateZ'] = function () {
this['z'] = 0x18706;
}, _0x4697a1['prototype']['customDraw'] = function (_0x320897) {
_0x1d2dab['save']();
if (this['isEnabled']) _0x1d2dab['globalAlpha'] = 0.4;
else _0x1d2dab['globalAlpha'] = 0.2;
_0x1d2dab['fillStyle'] = 'black', _0x1d2dab['fillRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']), _0x1d2dab['strokeRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']);
if (this['isEnabled']) _0x1d2dab['globalAlpha'] = this['opacity'] * 0.5;
else _0x1d2dab['globalAlpha'] = this['opacity'] * 0.2;
_0x1d2dab['fillStyle'] = this['color'], _0x1d2dab['fillRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']), _0x1d2dab['lineWidth'] = '3';
this['btnStroke'] > 0x0 && (_0x1d2dab['globalAlpha'] = this['opacity'] * 0.9, _0x1d2dab['strokeStyle'] = this['color'], _0x1d2dab['strokeRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']));
_0x1d2dab['restore']();
if (this['isEnabled']) {
    var _0x33d1da = this['x'] - this['rectW'] / 0x2,
        _0x21c0ff = this['x'] + this['rectW'] / 0x2,
        _0x11e940 = this['y'] - this['rectH'] / 0x2,
        _0x1f2930 = this['y'] + this['rectH'] / 0x2,
        _0xc0b605 = ![];
    if (_0x500d8e > _0x33d1da && _0x500d8e < _0x21c0ff && _0x2a7c03 > _0x11e940 && _0x2a7c03 < _0x1f2930 || _0xd668be == this['hotkey']) _0xc0b605 = !![], _0x28ca3e = _0x1a2c52 = this['id'], _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = this['opacity'], _0x1d2dab['fillStyle'] = this['color'], _0x1d2dab['fillRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']), this['hoverStroke'] > 0x0 && (_0x1d2dab['globalAlpha'] = 0x1, _0x1d2dab['lineWidth'] = this['hoverStroke'], _0x1d2dab['strokeStyle'] = _0x4c4d1f, _0x1d2dab['strokeRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH'])), _0x1d2dab['restore']();
    else {
        if (_0x28ca3e == this['id']) _0x1a2c52 = 0x0;
    }
}
null != this['txtLabel'] && (_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = _0xc0b605 ? 0x1 : 0.6, _0xc0b605 ? (this['txtLabel']['setFontSize'](0xc), this['txtLabel']['setColor']('white'), this['txtLabel']['setStroke'](0x2)) : (this['txtLabel']['setColor'](this['isEnabled'] ? 'white' : 'black'), this['txtLabel']['setStroke'](0x0)), this['txtLabel']['draw'](), _0x1d2dab['restore']());
if (this['isEnabled'] && this['hotkey'] != '') {
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.2, _0x1d2dab['fillStyle'] = 'white';
    var _0x2d3dea = -this['rectW'] / 0x2 + 0x2,
        _0x100df9 = this['rectH'] / 0x2 - 0xc;
    _0x1d2dab['fillRect'](_0x2d3dea, _0x100df9, 0xa, 0xa), this['txtHotkey']['x'] = _0x2d3dea + 0x5, this['txtHotkey']['y'] = _0x100df9 + 0x5, _0x1d2dab['globalAlpha'] = 0.7, this['txtHotkey']['draw'](), _0x1d2dab['restore']();
}
}, _0x4697a1['prototype']['optionID'] = 0x0, _0x4697a1['prototype']['optionType'] = 0x0, _0x4697a1['prototype']['label'] = 0x0, _0x4697a1['prototype']['highlight'] = 0x0, _0x4697a1['prototype']['txtLabel'] = null, _0x4697a1['prototype']['txtHotkey'] = null, _0x4697a1['prototype']['isEnabled'] = !![], _0x4697a1['prototype']['hotkey'] = '', _0x4697a1['prototype']['readCustomData_onNewlyVisible'] = function (_0x259c0f) {
_0xd668be = null, _0x41abf8 = +new Date() + 0x3e8, this['optionID'] = _0x259c0f['readUInt32']();
var _0xa3daf7 = _0x259c0f['readString']();
_0xa3daf7 = _0xa3daf7['replace']('\x0a', 'newline'), console['log'](_0xa3daf7);
var _0x5bca51 = JSON['parse'](_0xa3daf7);
this['label'] = _0x5bca51['label']['replace']('newline', '\x0a'), this['optionType'] = _0x5bca51['value'], this['color'] = _0x5bca51['color'], this['opacity'] = _0x5bca51['opacity'] / 0x64, this['hoverStroke'] = _0x5bca51['hoverStroke'], this['btnStroke'] = _0x5bca51['btnStroke'], this['isEnabled'] = Number(_0x5bca51['enabled']) == 0x1, this['hotkey'] = _0x5bca51['hotkey'], !this['isEnabled'] && (this['opacity'] *= 0.5), null == this['txtLabel'] && (this['txtLabel'] = new _0x407dea(0xc, '#FFFFFF'), this['txtLabel']['x'] = 0x0, this['txtLabel']['y'] = 0x0, this['txtLabel']['strokeW'] = 0x0, this['txtLabel']['multiLine'] = !![], this['txtLabel']['renderScale'] = 0x2, this['txtLabel']['setText'](this['label'])), this['isEnabled'] && this['hotkey'] != '' && null == this['txtHotkey'] && (this['txtHotkey'] = new _0x407dea(0x8, '#FFFFFF'), this['txtHotkey']['x'] = 0x0, this['txtHotkey']['y'] = 0x0, this['txtHotkey']['strokeW'] = 0x0, this['txtHotkey']['multiLine'] = ![], this['txtHotkey']['renderScale'] = 0x2, this['txtHotkey']['setText'](this['hotkey']), this['txtHotkey']['setColor']('white'), this['txtHotkey']['setStroke'](0x0));
};
var _0x1ce9c3 = 0x81;

function _0x4697a1() {
_0x4697a1['superClass']['call'](this, _0x1ce9c3);
}
window['GameOptionButton'] = _0x4697a1, _0x13dc56['setCustomClassForGameObjType'](_0x4697a1, _0x1ce9c3);
var _0x1e3c43 = _0x131218;
_0x26e276['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x26e276['prototype']['constructor'] = _0x26e276, _0x26e276['superClass'] = _0x1e3c43, _0x26e276['prototype']['updateZ'] = function () {
this['z'] = 0x18706;
}, _0x26e276['prototype']['customDraw'] = function (_0x371745) {
_0x1d2dab['save']();
var _0x1102cc = this['rectW'],
    _0x316b70 = this['rectH'];
_0x1d2dab['globalAlpha'] = 0.3, _0x1d2dab['fillStyle'] = 'black', _0x1d2dab['fillRect'](-_0x1102cc / 0x2, -_0x316b70 / 0x2, _0x1102cc, _0x316b70), _0x1d2dab['globalAlpha'] = 0.15, _0x1d2dab['fillStyle'] = 'white', _0x1102cc -= 0x3, _0x316b70 -= 0x3, _0x1d2dab['fillRect'](-_0x1102cc / 0x2, -_0x316b70 / 0x2, _0x1102cc, _0x316b70), _0x1d2dab['stroke'](), _0x1d2dab['restore']();
null != this['txtTitle'] && (_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1, this['txtTitle']['setFontSize'](0x12), this['txtTitle']['setColor']('white'), this['txtTitle']['setStroke'](0x2), this['txtTitle']['draw'](), _0x1d2dab['restore']());
null != this['txtMessage'] && (_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1, this['txtMessage']['draw'](), _0x1d2dab['restore']());
if (null != this['timerTxt']) {
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1;
    var _0x1102cc = 0x19,
        _0x316b70 = 0x19;
    _0x1d2dab['globalAlpha'] = 0.5, _0x1d2dab['fillStyle'] = 'red';
    var _0x16f119 = this['rectW'] / 0x2 - _0x1102cc - 1.5,
        _0x1e1c4b = -this['rectH'] / 0x2 + 1.5;
    _0x1d2dab['fillRect'](_0x16f119, _0x1e1c4b, _0x1102cc, _0x316b70), _0x1d2dab['globalAlpha'] = 0x1, this['timerTxt']['setFontSize'](0x10), this['timerTxt']['setColor']('white'), this['timerTxt']['setStroke'](0x2);
    var _0xd4358d = this['timeoutTime'] - Math['round']((+new Date() - this['spawnTime']) / 0x3e8);
    this['timerTxt']['setText'](_0xd4358d), this['timerTxt']['x'] = _0x16f119 + 12.5, this['timerTxt']['y'] = _0x1e1c4b + 12.5, this['timerTxt']['draw'](), _0x1d2dab['restore']();
}
_0x1d2dab['save'](), _0x585438(this), _0x1d2dab['restore']();
}, _0x26e276['prototype']['option1'] = null, _0x26e276['prototype']['option2'] = null, _0x26e276['prototype']['option3'] = null, _0x26e276['prototype']['option4'] = null;

function _0x585438(_0x1057f9) {
var _0x45029c = _0x1057f9['rectW'] * 0.5,
    _0x3adb50 = _0x1057f9['rectH'] * 0.35,
    _0x4630ec = -_0x45029c / 0x2,
    _0x1a9b92 = -0x14;
_0x1d2dab['globalAlpha'] = 0.2, _0x1d2dab['fillStyle'] = 'black', _0x1d2dab['fillRect'](_0x4630ec, _0x1a9b92, _0x45029c, _0x3adb50), _0x1d2dab['globalAlpha'] = 0.7, _0x1d2dab['fillStyle'] = 'limegreen', _0x1d2dab['fillRect'](_0x4630ec, _0x1a9b92, _0x45029c, 0x14), _0x2e6a0d('options', _0x1057f9, _0x4630ec, _0x1a9b92 + 2.5, _0x45029c, _0x3adb50, 'ARENA OPTIONS', 'white', 0x2), _0x45029c = 0x64, _0x3adb50 = 0xf, _0x4630ec = -_0x45029c / 0x2, _0x1a9b92 += 0x7, _0x1d2dab['globalAlpha'] = 0x1, _0x1d2dab['fillStyle'] = 'green', _0x1a9b92 += _0x3adb50 + 0x5, _0x1d2dab['globalAlpha'] = 0.7, _0x2e6a0d('option2', _0x1057f9, _0x4630ec, _0x1a9b92, _0x45029c, _0x3adb50, (_0x1057f9['data']['watr'] == Number(0x1) ? 'INFINITE' : 'LIMITED') + ' WATER', 'white', 0x0), _0x1a9b92 += _0x3adb50, _0x2e6a0d('option3', _0x1057f9, _0x4630ec, _0x1a9b92, _0x45029c, _0x3adb50, (_0x1057f9['data']['hp'] == Number(0x1) ? 'INFINITE' : 'LIMITED') + ' HEALTH', 'white', 0x0), _0x1a9b92 += _0x3adb50, _0x2e6a0d('option4', _0x1057f9, _0x4630ec, _0x1a9b92, _0x45029c, _0x3adb50, 'TURN ' + (_0x1057f9['data']['speed'] == Number(0x1) ? 'NORMAL' : 'FAST'), 'white', 0x0), _0x1a9b92 += _0x3adb50, _0x2e6a0d('option5', _0x1057f9, _0x4630ec, _0x1a9b92, _0x45029c, _0x3adb50, _0x1057f9['data']['climax'] == Number(0x1) ? 'LAST MAN STANDING' : _0x1057f9['data']['bites'] + ' BITES WINS', 'white', 0x0), _0x1a9b92 += _0x3adb50, _0x2e6a0d('option6', _0x1057f9, _0x4630ec, _0x1a9b92, _0x45029c, _0x3adb50, _0x1057f9['data']['wall'] == Number(0x1) ? 'WALL DAMAGE' : 'NO WALL DAMAGE', 'white', 0x0);
}

function _0x2e6a0d(_0x846f2a, _0x2469ca, _0x51b4ad, _0x19d9b7, _0x21f893, _0x56a876, _0x33373e, _0x19733b, _0x1f2fba) {
if (_0x1f2fba == undefined) _0x1f2fba = 0x0;
null == _0x2469ca[_0x846f2a] ? (_0x2469ca[_0x846f2a] = new _0x407dea(0xa, _0x19733b), _0x2469ca[_0x846f2a]['x'] = _0x51b4ad, _0x2469ca[_0x846f2a]['y'] = _0x19d9b7, _0x2469ca[_0x846f2a]['strokeW'] = 0x0, _0x2469ca[_0x846f2a]['multiLine'] = !![], _0x2469ca[_0x846f2a]['renderScale'] = 0x2, _0x2469ca[_0x846f2a]['setStroke'](_0x1f2fba), _0x2469ca[_0x846f2a]['setText'](_0x33373e)) : (_0x2469ca[_0x846f2a]['x'] = _0x51b4ad + _0x21f893 / 0x2, _0x2469ca[_0x846f2a]['y'] = _0x19d9b7 + 0x7, _0x2469ca[_0x846f2a]['draw']());
}
_0x26e276['prototype']['timeoutTime'] = 0x0, _0x26e276['prototype']['optionType'] = 0x0, _0x26e276['prototype']['label'] = 0x0, _0x26e276['prototype']['highlight'] = 0x0, _0x26e276['prototype']['txtTitle'] = null, _0x26e276['prototype']['txtMessage'] = null, _0x26e276['prototype']['timerTxt'] = null, _0x26e276['prototype']['screenMsg'] = null, _0x26e276['prototype']['screenTitle'] = null, _0x26e276['prototype']['invitee_id'] = null, _0x26e276['prototype']['spiderX'] = null, _0x26e276['prototype']['spiderY'] = null, _0x26e276['prototype']['beforeCustomDraw'] = function (_0xdc1392) {
_0x1d2dab['save'](), _0x1d2dab['strokeStyle'] = 'white', _0x1d2dab['globalAlpha'] = 0x1, _0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](this['x'], this['y']), _0x1d2dab['lineTo'](this['spiderX'], this['spiderY']), _0x1d2dab['stroke'](), _0x1d2dab['restore']();
}, _0x26e276['prototype']['worldUpd_readMsgUpdate'] = function (_0x32279d) {
var _0x496356 = _0x32279d['readUInt16']() / 0x4,
    _0x3e30cc = _0x32279d['readUInt16']() / 0x4;
this['setMovedToPos'](_0x496356, _0x3e30cc);
var _0x382ef4 = _0x32279d['readUInt32']() / 0x64,
    _0x1754e5 = _0x32279d['readUInt32']() / 0x64;
this['spider_ox'] = this['spiderX'], this['spider_oy'] = this['spiderY'], this['spider_nx'] = _0x382ef4, this['spider_ny'] = _0x1754e5;
}, _0x26e276['prototype']['onLerpUpdate'] = function (_0x33663c) {
this['spiderX'] = _0x33663c * (this['spider_nx'] - this['spider_ox']) + this['spider_ox'], this['spiderY'] = _0x33663c * (this['spider_ny'] - this['spider_oy']) + this['spider_oy'];
}, _0x26e276['prototype']['data'] = null, _0x26e276['prototype']['readCustomData_onNewlyVisible'] = function (_0x3dc4d9) {
var _0x4c7b0a = _0x3dc4d9['readString'](),
    _0x18873e = _0x3dc4d9['readString'](),
    _0x40c665 = _0x3dc4d9['readUInt8'](),
    _0x59b6eb = _0x3dc4d9['readBitGroup'](),
    _0x42a109 = _0x59b6eb['getBool']() ? 0x1 : 0x0,
    _0x1104bd = _0x59b6eb['getBool']() ? 0x1 : 0x0,
    _0x4b3fa5 = _0x59b6eb['getBool']() ? 0x1 : 0x0,
    _0x53b4b2 = _0x59b6eb['getBool']() ? 0x1 : 0x0,
    _0x232fab = _0x59b6eb['getBool']() ? 0x1 : 0x0,
    _0x3afb10 = 0x0;
if (!_0x232fab) _0x3afb10 = _0x3dc4d9['readUInt8']();
var _0x17d93a = {
    'title': _0x4c7b0a,
    'invtedBy': _0x18873e,
    'watr': _0x42a109,
    'hp': _0x1104bd,
    'speed': _0x4b3fa5,
    'climax': _0x232fab,
    'wall': _0x53b4b2,
    'time': _0x40c665,
    'bites': _0x3afb10
};
this['spider_ox'] = this['spiderX'] = this['spider_nx'] = this['x'], this['spider_oy'] = this['spiderY'] = this['spider_ny'] = this['y'];
var _0x6c8319 = '\x0a',
    _0x2f7b95 = '-br-';
this['data'] = _0x17d93a, this['timeoutTime'] = Number(_0x17d93a['time']);
null == this['txtTitle'] && (this['txtTitle'] = new _0x407dea(0x12, '#FFFFFF'), this['txtTitle']['x'] = 0x0, this['txtTitle']['y'] = this['rectH'] / 0x2 * -0.85, this['txtTitle']['strokeW'] = 0x0, this['txtTitle']['multiLine'] = !![], this['txtTitle']['renderScale'] = 0x2, this['txtTitle']['setText'](this['data']['title']));
if (null == this['txtMessage']) {
    this['txtMessage'] = new _0x407dea(0x10, '#FFFFFF'), this['txtMessage']['x'] = 0x0, this['txtMessage']['y'] = this['txtTitle']['y'] + 0x28, this['txtMessage']['strokeW'] = 0x0, this['txtMessage']['multiLine'] = !![], this['txtMessage']['renderScale'] = 0x2;
    if (this['data']['invtedBy'] == '') this['data']['invtedBy'] = 'mope.io';
    this['txtMessage']['setText'](this['data']['invtedBy'] + '\x0ainvites you for 1v1 fight!');
}
null == this['timerTxt'] && (this['timerTxt'] = new _0x407dea(0x10, '#FFFFFF'), this['timerTxt']['x'] = 0x0, this['timerTxt']['y'] = 0x0, this['timerTxt']['strokeW'] = 0x0, this['timerTxt']['multiLine'] = ![], this['timerTxt']['renderScale'] = 0x2, this['timerTxt']['setText']('15'));
};
var _0x382788 = 0x82;

function _0x26e276() {
_0x26e276['superClass']['call'](this, _0x382788);
}
window['ScreenMessage'] = _0x26e276, _0x13dc56['setCustomClassForGameObjType'](_0x26e276, _0x382788);
var _0x570743 = _0x472ece,
_0x1e3c43 = _0x131218;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43, _0x472ece['prototype']['customType'] = 0x0, _0x472ece['prototype']['updateZ'] = function () {
this['z'] = 0x3e9;
}, _0x472ece['prototype']['customDraw'] = function (_0x137068) {}, _0x472ece['prototype']['setObjTypes'] = function (_0x30424e, _0x3c3ba6) {
this['oType'] = _0x30424e, this['customType'] = _0x3c3ba6;
}, _0x472ece['prototype']['readCustomData_onNewlyVisible'] = function (_0x473b05) {
_0x472ece['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x473b05);
}, _0x472ece['prototype']['readCustomData_onUpdate'] = function (_0x24862f) {
_0x472ece['superClass']['prototype']['readCustomData_onUpdate']['call'](this, _0x24862f);
};
var _0x194091 = 0x80;

function _0x472ece() {
_0x472ece['superClass']['call'](this, _0x194091), _0x472ece['prototype']['easeAngleChanges'] = ![];
}
window['CustomObj'] = _0x472ece, _0x13dc56['setCustomClassForGameObjType'](_0x472ece, _0x194091), _0x13dc56['addCustomClassType'](_0x194091);
var _0x570743 = _0x285e28,
_0x1e3c43 = _0x472ece;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43, _0x285e28['prototype']['customDraw'] = function (_0x274b90) {
_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.095, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, this['rad'], 0x0, 0x2 * Math['PI'], ![]), _0x1d2dab['arc'](0x0, 0x0, this['rad'] * 0.9, 0x0, 0x2 * Math['PI'], !![]), _0x1d2dab['fillStyle'] = 'red', _0x1d2dab['closePath'](), _0x1d2dab['fill'](), _0x1d2dab['restore']();
var _0x166b09 = 0xf;
_0x1d2dab['save'](), _0x1d2dab['rotate'](this['angle'] + _0x2bcbaa(-0x5a));
var _0x35dee6 = this['getSkinImageObj']('img/custom/trunk2.png');
if (_0x35dee6) {
    var _0x3603d0 = 0x3c;
    _0x1d2dab['save'](), _0x1d2dab['drawImage'](_0x35dee6, -_0x3603d0, this['rad'] - _0x3603d0 + _0x166b09, 0x2 * _0x3603d0, 0x2 * _0x3603d0), _0x1d2dab['restore']();
}
var _0x35dee6 = this['getSkinImageObj']('img/custom/trunk1.png');
if (_0x35dee6) {
    var _0x3603d0 = 0x3c;
    _0x1d2dab['save'](), _0x1d2dab['drawImage'](_0x35dee6, -_0x3603d0, -this['rad'] - _0x3603d0 - _0x166b09, 0x2 * _0x3603d0, 0x2 * _0x3603d0), _0x1d2dab['restore']();
}
_0x1d2dab['restore']();
}, _0x285e28['prototype']['readCustomData_onNewlyVisible'] = function (_0x394aa6) {
_0x285e28['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x394aa6);
};

function _0x285e28() {
_0x285e28['superClass']['call'](this);
}
window['Slingshot'] = _0x285e28;
var _0x5bb7e6 = 0x1;
_0x13dc56['setCustomClassForGameObjType'](_0x285e28, _0x194091, _0x5bb7e6);
var _0x570743 = _0x4eeaf3,
_0x1e3c43 = _0x472ece;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43, _0x4eeaf3['prototype']['updateZ'] = function () {
this['z'] = 0x3f2 + this['rad'];
}, _0x4eeaf3['prototype']['customDraw'] = function (_0x4f4e31) {
_0x1d2dab['save']();
var _0xebb20 = this['getSkinImageObj']('img/custom/pad.png');
if (_0xebb20) {
    var _0x459f83 = this['rad'];
    _0x1d2dab['save'](), _0x1d2dab['rotate'](this['angle'] + _0x2bcbaa(-0x5a)), _0x1d2dab['drawImage'](_0xebb20, -_0x459f83, -_0x459f83, 0x2 * _0x459f83, 0x2 * _0x459f83), _0x1d2dab['restore']();
}
_0x1d2dab['restore']();
}, _0x4eeaf3['prototype']['ropeMargin'] = 0x0, _0x4eeaf3['prototype']['beforeCustomDraw'] = function (_0x10a94d) {
var _0x503214 = 0xa;
_0x1d2dab['save'](), _0x1d2dab['strokeStyle'] = '#4f4f4f', _0x1d2dab['lineWidth'] = _0x503214, _0x1d2dab['globalAlpha'] = 0x1, _0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](this['x'], this['y']), _0x1d2dab['lineTo'](this['base1_X'], this['base1_Y']), _0x1d2dab['stroke'](), _0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](this['x'], this['y']), _0x1d2dab['lineTo'](this['base2_X'], this['base2_Y']), _0x1d2dab['stroke'](), _0x1d2dab['restore'](), _0x1d2dab['save'](), _0x1d2dab['strokeStyle'] = '#222222', _0x1d2dab['lineWidth'] = _0x503214 * 0.6, _0x1d2dab['globalAlpha'] = 0x1, _0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](this['x'], this['y']), _0x1d2dab['lineTo'](this['base1_X'], this['base1_Y']), _0x1d2dab['stroke'](), _0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](this['x'], this['y']), _0x1d2dab['lineTo'](this['base2_X'], this['base2_Y']), _0x1d2dab['stroke'](), _0x1d2dab['restore']();
}, _0x4eeaf3['prototype']['readCustomData_onNewlyVisible'] = function (_0x268b0d) {
_0x4eeaf3['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x268b0d), this['base1_ox'] = this['base1_X'] = this['base1_nx'] = this['x'], this['base1_oy'] = this['base1_Y'] = this['base1_ny'] = this['y'], this['base2_ox'] = this['base2_X'] = this['base2_nx'] = this['x'], this['base2_oy'] = this['base2_Y'] = this['base2_ny'] = this['y'], this['readBaseData'](_0x268b0d);
}, _0x4eeaf3['prototype']['readBaseData'] = function (_0xfedc07) {
var _0x389e2b = _0xfedc07['readUInt32']() / 0x64,
    _0x4f5f42 = _0xfedc07['readUInt32']() / 0x64,
    _0x43f5cf = _0xfedc07['readUInt32']() / 0x64,
    _0x5a2d7b = _0xfedc07['readUInt32']() / 0x64;
this['base1_ox'] = this['base1_X'], this['base1_oy'] = this['base1_Y'], this['base1_nx'] = _0x389e2b, this['base1_ny'] = _0x4f5f42, this['base2_ox'] = this['base2_X'], this['base2_oy'] = this['base2_Y'], this['base2_nx'] = _0x43f5cf, this['base2_ny'] = _0x5a2d7b;
}, _0x4eeaf3['prototype']['base1_X'] = 0x0, _0x4eeaf3['prototype']['base1_Y'] = 0x0, _0x4eeaf3['prototype']['base2_X'] = 0x0, _0x4eeaf3['prototype']['base2_Y'] = 0x0, _0x4eeaf3['prototype']['onLerpUpdate'] = function (_0x10b8e9) {
this['base1_X'] = _0x10b8e9 * (this['base1_nx'] - this['base1_ox']) + this['base1_ox'], this['base1_Y'] = _0x10b8e9 * (this['base1_ny'] - this['base1_oy']) + this['base1_oy'], this['base2_X'] = _0x10b8e9 * (this['base2_nx'] - this['base2_ox']) + this['base2_ox'], this['base2_Y'] = _0x10b8e9 * (this['base2_ny'] - this['base2_oy']) + this['base2_oy'];
};

function _0x4eeaf3() {
_0x4eeaf3['superClass']['call'](this);
}
window['SlingshotPad'] = _0x4eeaf3;
var _0x29233a = 0x2;
_0x13dc56['setCustomClassForGameObjType'](_0x4eeaf3, _0x194091, _0x29233a);
var _0x570743 = _0x3f73cf,
_0x1e3c43 = _0x472ece;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43, _0x3f73cf['prototype']['customDraw'] = function (_0x972914) {
_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.095, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, this['rad'], 0x0, 0x2 * Math['PI'], ![]), _0x1d2dab['arc'](0x0, 0x0, this['rad'] * 0.9, 0x0, 0x2 * Math['PI'], !![]), _0x1d2dab['fillStyle'] = 'red', _0x1d2dab['closePath'](), _0x1d2dab['fill'](), _0x1d2dab['restore']();
};

function _0x3f73cf() {
_0x3f73cf['superClass']['call'](this);
}
window['Trampoline'] = _0x3f73cf;
var _0x1c7fd1 = 0x4;
_0x13dc56['setCustomClassForGameObjType'](_0x3f73cf, _0x194091, _0x1c7fd1);
var _0x570743 = _0x305aa0,
_0x1e3c43 = _0x472ece;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43, _0x305aa0['prototype']['updateZ'] = function () {
this['z'] = 0x3f2 + this['rad'];
}, _0x305aa0['prototype']['customDraw'] = function (_0x485b3f) {
this['drawLeg'](_0x48c527), this['drawLeg'](_0xf779c7), this['drawLeg'](_0x22e0d7), this['drawLeg'](_0x3684e1), _0x1d2dab['save']();
var _0x2ee1a6 = this['getSkinImageObj']('img/custom/trampoline/rug_zebra.png');
if (_0x2ee1a6) {
    var _0x927008 = this['rad'] * (this['stretch'] / 0x64),
        _0x223239 = _0x927008 + _0x5e70bb;
    _0x1d2dab['save'](), _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x2ee1a6, -_0x927008, -_0x223239, 0x2 * _0x927008, 0x2 * _0x223239), _0x1d2dab['restore']();
}
_0x1d2dab['restore']();
};
var _0x5e70bb = 0xf,
_0x48c527 = -0x2b,
_0xf779c7 = 0x32,
_0x22e0d7 = 0x87,
_0x3684e1 = 0xe1,
_0x1a833f = 0.4,
_0x511cf3 = 0x0;

function _0x4e7917(_0x29152f) {
return 0x1 + (0x1 - _0x29152f['stretch'] / 0x64);
}
_0x305aa0['prototype']['drawLeg'] = function (_0x3877ef) {
_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1;
var _0x9d44cd = this['getSkinImageObj']('img/custom/trampoline/leg_zebra.png');
if (_0x9d44cd) {
    var _0x5b396e = this['rad'] * 0.3,
        _0x480f25 = 0x2 * this['rad'] * _0x1a833f * _0x4e7917(this);
    _0x1d2dab['save'](), _0x1d2dab['rotate'](this['angle'] + _0x2bcbaa(_0x3877ef)), _0x1d2dab['drawImage'](_0x9d44cd, -_0x5b396e, this['rad'] * _0x4e7917(this), 0x2 * _0x5b396e, _0x480f25), _0x1d2dab['restore']();
}
_0x1d2dab['restore']();
}, _0x305aa0['prototype']['readCustomData_onNewlyVisible'] = function (_0x4e2bf6) {
_0x305aa0['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x4e2bf6), this['o_stretch'] = this['nw_strech'] = this['n_strech'] = this['stretch'], this['readBaseData'](_0x4e2bf6);
}, _0x305aa0['prototype']['baseStrech'] = 0x0, _0x305aa0['prototype']['readCustomData_onUpdate'] = function (_0x40af6e) {
_0x305aa0['superClass']['prototype']['readCustomData_onUpdate']['call'](this, _0x40af6e), this['readBaseData'](_0x40af6e);
}, _0x305aa0['prototype']['stretch'] = 0x64, _0x305aa0['prototype']['readBaseData'] = function (_0x1e1bef) {
var _0x2920a0 = _0x1e1bef['readUInt32']() / 0x64;
this['o_stretch'] = this['stretch'], this['n_strech'] = _0x2920a0;
}, _0x305aa0['prototype']['base1_X'] = 0x0, _0x305aa0['prototype']['base1_Y'] = 0x0, _0x305aa0['prototype']['base2_X'] = 0x0, _0x305aa0['prototype']['base2_Y'] = 0x0, _0x305aa0['prototype']['base3_X'] = 0x0, _0x305aa0['prototype']['base3_Y'] = 0x0, _0x305aa0['prototype']['base4_X'] = 0x0, _0x305aa0['prototype']['base4_Y'] = 0x0, _0x305aa0['prototype']['onLerpUpdate'] = function (_0x53ba5c) {
this['stretch'] = _0x53ba5c * (this['n_strech'] - this['o_stretch']) + this['o_stretch'];
};

function _0x305aa0() {
_0x305aa0['superClass']['call'](this);
}
window['TrampolinePad'] = _0x305aa0;
var _0x4ad0e6 = 0x5;
_0x13dc56['setCustomClassForGameObjType'](_0x305aa0, _0x194091, _0x4ad0e6);
var _0x1e3c43 = _0x3d6c08;
_0x233859['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x233859['prototype']['constructor'] = _0x233859, _0x233859['superClass'] = _0x1e3c43, _0x233859['prototype']['updateZ'] = function () {
this['z'] = 0x186a0;
}, _0x233859['prototype']['getSkinName'] = function () {
var _0x169cbc = this['animalInfo']();
if (this['animalSpecies'] == 0x8 || this['animalSpecies'] == 0x6) return _0x169cbc['skinName'] + '_body';
return _0x169cbc['skinName'];
}, _0x233859['prototype']['animalInfo'] = function () {
var _0x214272 = {},
    _0xc01685 = '';
switch (this['animalSpecies']) {
case 0x0:
    _0xc01685 = 'jagga', _0x214272['aniName'] = 'Jagga';
    break;
case 0x1:
    _0xc01685 = 'bali', _0x214272['aniName'] = 'Bali';
    break;
case 0x2:
    _0xc01685 = 'jutt', _0x214272['aniName'] = 'Jutt';
    break;
case 0x3:
    _0xc01685 = 'bhollaa', _0x214272['aniName'] = 'Bhollaa';
    break;
case 0x4:
    _0xc01685 = 'butt', _0x214272['aniName'] = 'Butt';
    break;
case 0x5:
    _0xc01685 = 'khattak', _0x214272['aniName'] = 'Khattak';
    break;
case 0x6:
    _0xc01685 = 'chandyo/chandyo', _0x214272['aniName'] = 'Chandyo';
    break;
case 0x7:
    _0xc01685 = 'abysmal', _0x214272['aniName'] = 'Abysmal';
    break;
case 0x8:
    _0xc01685 = 'sultan/sultan', _0x214272['aniName'] = 'Sultan';
    break;
case 0x9:
    _0xc01685 = 'gujjar', _0x214272['aniName'] = 'Gujjar';
    break;
}
return _0x214272['aniCol'] = '#FF9000', _0x214272['skinName'] = 'land/aiboss/' + _0xc01685, _0x214272['upgradeText'] = 'UPGRADED to ' + _0x214272['aniName'] + ' the A.I BOSS!', _0x214272['aniCol'] = '#22FF8A', _0x214272;
}, _0x233859['prototype']['getAbilityInfo'] = function (_0x31b1ae) {
var _0x1c81b1 = {},
    _0x2258c7 = this['animalInfo']();
return _0x1c81b1['abilName'] = 'AI', _0x1c81b1['abilImg'] = 'skins/' + _0x2258c7['skinName'] + '.png', _0x1c81b1['speciesType'] = this['animalSpecies'], _0x1c81b1['skinThemeID'] = this['skinThemeID'], _0x1c81b1['mopeSeasonID'] = this['mopeSeasonID'], _0x1c81b1;
}, _0x233859['prototype']['diveColor1'] = '#64a034', _0x233859['prototype']['diveColor2'] = '#598b30', _0x233859['prototype']['onAnimalSpeciesSet'] = function () {
switch (this['animalSpecies']) {
case 0x1:
    this['diveColor1'] = '#dbb300', this['diveColor2'] = '#bf9d04';
    break;
case 0x2:
    this['diveColor1'] = '#79c9a8', this['diveColor2'] = '#6fad9f';
    break;
}
}, _0x233859['prototype']['leftWingAnim'] = null, _0x233859['prototype']['flapAngleDiff'] = 0x3, _0x233859['prototype']['flapAngle'] = 0x3, _0x233859['prototype']['flapF'] = 0.1, _0x233859['prototype']['flapDur'] = 0x2, _0x233859['prototype']['sF'] = 0.02, _0x233859['prototype']['drawWings'] = function () {
this['leftWingAnim'] == null && (this['leftWingAnim'] = new _0xf2d657(this, this['flapDur'], _0xf2d657['wave']), this['leftWingAnim']['keepLastFrame'] = !![], this['leftWingAnim']['loop'] = !![], this['leftWingAnim']['onFrameEntered'] = function (_0x2c6528) {
    this['forObj']['frame1'] = _0x2c6528;
});
if (this['leftWingAnim'] != null) this['leftWingAnim']['run']();
var _0x4a554f = this['rad'] - this['outlineW'],
    _0x463d5d = this['frame1'] * this['sF'] * _0x4a554f,
    _0x5ceb6a = -(-this['flapF'] + this['frame1']),
    _0x85e249 = _0x5ceb6a * _0x2bcbaa(this['flapAngle']),
    _0x3ee7f1 = 0x1f4 / 0x154,
    _0x3f8658 = this['getSkinImageObj']('skins/land/aiboss/sultan/left_wing.png'),
    _0x1d05e0 = this['getSkinImageObj']('skins/land/aiboss/sultan/right_wing.png');
if (_0x3f8658 && _0x1d05e0) {
    var _0x548759 = 0.2;
    _0x1d2dab['save'](), _0x1d2dab['rotate'](_0x2bcbaa(this['flapAngleDiff']) + _0x85e249), _0x1d2dab['drawImage'](_0x3f8658, -_0x4a554f * _0x3ee7f1 - _0x548759 * _0x4a554f, -_0x4a554f * _0x3ee7f1 + _0x463d5d, 0x2 * _0x4a554f * _0x3ee7f1, 0x2 * _0x4a554f * _0x3ee7f1 + _0x463d5d * 1.5), _0x1d2dab['restore'](), _0x1d2dab['save'](), _0x1d2dab['rotate'](-(_0x2bcbaa(this['flapAngleDiff']) + _0x85e249)), _0x1d2dab['drawImage'](_0x1d05e0, -_0x4a554f * _0x3ee7f1 + _0x548759 * _0x4a554f, -_0x4a554f * _0x3ee7f1 + _0x463d5d, 0x2 * _0x4a554f * _0x3ee7f1, 0x2 * _0x4a554f * _0x3ee7f1 + _0x463d5d * 1.5), _0x1d2dab['restore']();
}
}, _0x233859['prototype']['drawSkinCustomization'] = function () {
if (this['animalSpecies'] == 0x8) {
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = _0x44408d ? 0.5 : 0x1;
    var _0x23752f = 0x1f4 / 0x154,
        _0x5182c7 = this['getSkinImageObj']('skins/land/aiboss/sultan/sultan_head.png');
    if (_0x5182c7) {
        _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = _0x44408d ? 0.2 : 0x1;
        var _0x25ad98 = this['rad'] - this['outlineW'];
        _0x1d2dab['drawImage'](_0x5182c7, -_0x25ad98 * _0x23752f, -_0x25ad98 * _0x23752f, 0x2 * _0x25ad98 * _0x23752f, 0x2 * _0x25ad98 * _0x23752f), _0x1d2dab['restore']();
    }
    var _0x23901e = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x45d8cd = !(_0x31f3fc == 0x2 || _0x44408d) ? _0x21d673(_0x23901e, 0x5, 0x1, 0x1) : this['birdNoAnimationFlyWingAngle'];
    this['drawWings']();
    var _0x1b99d8 = -1.25,
        _0x2fb196 = -0.1,
        _0x23d960 = 0x258 / 0x17c,
        _0x7ebcde = 0.4,
        _0x287e52 = this['getSkinImageObj']('skins/land/aiboss/sultan/tail.png');
    if (_0x287e52) {
        _0x1d2dab['save']();
        var _0x25ad98 = this['rad'] - this['outlineW'];
        _0x1d2dab['drawImage'](_0x287e52, -_0x25ad98 * _0x7ebcde, -_0x25ad98 * _0x7ebcde + _0x1b99d8 * _0x25ad98, 0x2 * _0x25ad98 * _0x7ebcde, 0x2 * _0x25ad98 * _0x7ebcde), _0x1d2dab['restore']();
    }
    _0x1d2dab['restore']();
} else {
    if (this['animalSpecies'] == 0x6) {
        var _0x28c140 = 0x0,
            _0x14756d = 0.42,
            _0x2a5495 = 0x1f4 / 0x154,
            _0x32f3bf = 0x1f4 / 0x154,
            _0x287e52 = this['getSkinImageObj']('skins/land/aiboss/chandyo/chandyo_back.png');
        if (_0x287e52) {
            _0x1d2dab['save']();
            var _0x25ad98 = this['rad'] - this['outlineW'];
            _0x1d2dab['drawImage'](_0x287e52, -_0x25ad98 * _0x32f3bf, -_0x25ad98 * _0x32f3bf + _0x28c140 * _0x25ad98, 0x2 * _0x25ad98 * _0x32f3bf, 0x2 * _0x25ad98 * _0x32f3bf), _0x1d2dab['restore']();
        }
        var _0x5182c7 = this['getSkinImageObj']('skins/land/aiboss/chandyo/chandyo_head.png');
        if (_0x5182c7) {
            _0x1d2dab['save']();
            var _0x25ad98 = this['rad'] - this['outlineW'];
            _0x1d2dab['drawImage'](_0x5182c7, -_0x25ad98 * _0x2a5495, -_0x25ad98 * _0x2a5495 + _0x14756d * _0x25ad98, 0x2 * _0x25ad98 * _0x2a5495, 0x2 * _0x25ad98 * _0x2a5495), _0x1d2dab['restore']();
        }
    }
}
};

function _0x233859() {
_0x233859['superClass']['call'](this, _0x4ad968);
}
window['AiBoss'] = _0x233859;
var _0x5ec601 = 0x6b;
_0x13dc56['setCustomClassForGameObjType'](_0x233859, _0x4ad968, _0x5ec601);
var _0x1e3c43 = _0x131218;
_0xe3aa82['prototype'] = Object['create'](_0x1e3c43['prototype']), _0xe3aa82['prototype']['constructor'] = _0xe3aa82, _0xe3aa82['superClass'] = _0x1e3c43, _0xe3aa82['prototype']['mommyID'] = 0x0, _0xe3aa82['prototype']['updateZ'] = function () {
this['z'] = 0x989680;
}, _0xe3aa82['prototype']['isEdibleOutlined'] = function () {
if (this['mommyID'] == _0x2fc9ba) return ![];
return _0x233b7c['superClass']['prototype']['isEdibleOutlined']['call'](this);
}, _0xe3aa82['prototype']['customDraw'] = function (_0x112e61) {
_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.01;
var _0x279c22 = this['getSkinImageObj']('img/camera.png');
if (_0x279c22) {
    var _0x4d5ac9 = this['rad'] * 0x2;
    _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x279c22, -_0x4d5ac9, -_0x4d5ac9, 0x2 * _0x4d5ac9, 0x2 * _0x4d5ac9);
}
_0x1d2dab['restore']();
};
var _0x13a007 = 0x7f;

function _0xe3aa82() {
_0xe3aa82['superClass']['call'](this, _0x13a007), this['doesDrawEffectScale'] = ![];
}
window['DroneCamera'] = _0xe3aa82, _0x13dc56['setCustomClassForGameObjType'](_0xe3aa82, _0x13a007);
var _0x570743 = _0x4c6e0d,
_0x1e3c43 = _0x131218;
_0x4c6e0d['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x4c6e0d['prototype']['constructor'] = _0x4c6e0d, _0x4c6e0d['superClass'] = _0x1e3c43, _0x4c6e0d['prototype']['r'] = 0x0, _0x4c6e0d['prototype']['updateZ'] = function () {
this['z'] = 0x186a2;
}, _0x4c6e0d['prototype']['customDraw'] = function (_0x213ecf) {
_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.3, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, this['rad'] + 0x2, 0x0, 0x2 * Math['PI'], ![]), _0x1d2dab['arc'](0x0, 0x0, this['rad'], 0x0, 0x2 * Math['PI'], !![]), _0x1d2dab['fillStyle'] = '#32ff00', _0x1d2dab['closePath'](), _0x1d2dab['fill'](), _0x1d2dab['restore'](), _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.095, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, this['rad'], 0x0, 0x2 * Math['PI'], ![]), _0x1d2dab['arc'](0x0, 0x0, this['rad'], 0x0, 0x2 * Math['PI'], !![]), _0x1d2dab['fillStyle'] = 'red', _0x1d2dab['closePath'](), _0x1d2dab['fill'](), _0x1d2dab['restore'](), _0x1d2dab['save']();
var _0x5efb25 = 0x1,
    _0x468875 = _0x5efb25 * 0.1;
this['r'] += _0x468875, _0x1d2dab['rotate'](_0x2bcbaa(-this['r'])), this['setTitle'](), _0x1d2dab['restore']();
}, _0x4c6e0d['prototype']['setTitle'] = function () {
var _0x23357f = _0x23357f = 'SANDBOX\x0aARENA',
    _0x4a3eaa = this['rad'] * 0.07;
null == this['timerTxt'] ? (this['timerTxt'] = new _0x407dea(_0x4a3eaa, '#FFFFFF'), this['timerTxt']['strokeW'] = 0x2, this['timerTxt']['multiLine'] = !![], this['timerTxt']['renderScale'] = 0x5, this['timerTxt']['setText'](_0x23357f)) : (this['timerTxt']['setFontSize'](_0x4a3eaa), this['timerTxt']['setText'](_0x23357f)), this['timerTxt']['x'] = 0x0, this['timerTxt']['y'] = -this['rad'] * 0.9, this['timerTxt']['draw']();
};
var _0x2f54c9 = 0x7e;

function _0x4c6e0d() {
_0x4c6e0d['superClass']['call'](this, _0x2f54c9);
}
window['Sandbox'] = _0x4c6e0d, _0x13dc56['setCustomClassForGameObjType'](_0x4c6e0d, _0x2f54c9);
var _0x7afe75 = '6Le2eLIZAAAAACYfDXc6fT__SyfOP0m7rNyjkJdR';
_0x2dd932('https://www.google.com/recaptcha/api.js?render=' + _0x7afe75, function () {
console['log']('loaded recatcha script.'), grecaptcha['ready'](function () {
    console['log']('::: iandev ::: RECAPTCHA LOADED'), _0x23b208();
});
});
var _0x49319f = function (_0x1d167a, _0x15ea47) {
    window['setTimeout'](function () {
        _0x1d167a += 'r';
        var _0x37e278 = _0x1c5f12 ? 0x1 : 0x0;
        _0x15ea47 = _0x37e278 + '' + _0x15ea47, _0x15ea47 = _0x15ea47 + '' + _0x37e278;
        var _0x42f521 = new _0x5768c5(0x2 + _0x15ea47['length'] + 0x2);
        _0x42f521['writeUInt8'](0x3e), _0x42f521['writeString'](_0x15ea47), _0x485a35(_0x42f521);
    }, 0x1388);
},
_0x1b2953 = '',
_0x38e966 = function () {
    console['log']('@@@@@@@@@@@@@@@@@@@ recaptcha called'), _0x1b2953 = '', grecaptcha['execute'](_0x7afe75, {
        'action': 'homepage'
    })['then'](function (_0x373552) {
        _0x1b2953 = _0x373552 || 'error';
        var _0x5490b3 = new _0x5768c5(0x2 + _0x1b2953['length'] + 0x2);
        _0x5490b3['writeUInt8'](_0x285165), _0x5490b3['writeString'](_0x1b2953), _0x485a35(_0x5490b3), _0x1b2953 == null && console['log']('error: rec token could not received!');
    })['catch'](function (_0x515d6a) {
        console['log']('Error loading recaptcha! Reason: ' + _0x515d6a), _0x1b2953 = 'error';
        var _0x276b75 = new _0x5768c5(0x2 + _0x1b2953['length'] + 0x2);
        _0x276b75['writeUInt8'](_0x285165), _0x276b75['writeString'](_0x1b2953), _0x485a35(_0x276b75);
    });
},
_0x3c7c88 = function (_0x53a260, _0xd22e1b, _0xffee24) {
    window['setTimeout'](function () {
        if (_0xd22e1b) {
            _0xffee24 = eval(_0x53a260), _0xffee24 = _0xffee24 + '|' + _0xd22e1b;
            var _0x565952 = new _0x5768c5(0x2 + _0xffee24['length'] + 0x2);
            _0x565952['writeUInt8'](_0x3bcca7), _0x565952['writeString'](_0xffee24), _0x485a35(_0x565952);
        }
    }, _0x5e22a2(0.5, 0.8) * 0x3e8);
},
_0x570743 = _0x20971e,
_0x1e3c43 = _0x4763ce;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43, _0x20971e['prototype']['customDraw'] = function (_0x5732c7) {
_0x1d2dab['save'](), _0x1d2dab['rotate'](this['angle'] + _0x2bcbaa(0xb4));
var _0x4b1f41 = _0x1d2dab['globalAlpha'];
_0x1d2dab['globalAlpha'] = this['alpha'] < 0.7 ? this['alpha'] : 0.7;
var _0x59c25e = this['getSkinImageObj']('img/disasters/coldwave.png');
if (_0x59c25e) {
    var _0x13665a = this['rad'] * 1.25;
    _0x1d2dab['drawImage'](_0x59c25e, -_0x13665a, -_0x13665a, 0x2 * _0x13665a, 0x2 * _0x13665a);
}
_0x1d2dab['restore']();
}, _0x20971e['prototype']['updateZ'] = function () {
this['z'] = 0x2710 - this['rad'];
}, _0x20971e['prototype']['readCustomData_onNewlyVisible'] = function (_0x3622a2) {
this['alpha'] = _0x3622a2['readUInt8']() / 0x64;
}, _0x20971e['prototype']['readUpdatedProperty'] = function (_0x3253b4, _0xdcd4d) {
_0x3253b4 == _0x225f9d && (this['alpha'] = _0xdcd4d['readUInt8']() / 0x64);
};

function _0x20971e() {
_0x20971e['superClass']['call'](this), this['spawnTime'] = _0x740c5b;
}
window['ColdWave'] = _0x20971e, _0x13dc56['setCustomClassForGameObjType'](_0x20971e, _0x2c5edd, _0x22613e);
var _0x1e3c43 = _0x131218;
_0x2ef7fd['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x2ef7fd['prototype']['constructor'] = _0x2ef7fd, _0x2ef7fd['superClass'] = _0x1e3c43, _0x2ef7fd['prototype']['updateZ'] = function () {
this['z'] = 0x3e8 + this['rad'];
}, _0x2ef7fd['prototype']['customDraw'] = function (_0x4a8c13) {
_0x1d2dab['save']();
var _0x26bf4d = 0x0,
    _0x4b2c0e = _0x740c5b - this['spawnTime'],
    _0x2b1697 = _0x4b2c0e / 0x3e8,
    _0xf359cb = 0x2,
    _0x451437 = 1.5;
_0x26bf4d = _0x451437 * Math['sin'](0x2 * Math['PI'] / _0xf359cb * _0x2b1697);
var _0x4b7e32 = 0.6,
    _0x14c17a = _0x21d673(_0x2b1697, 0xa, 0x1, 0.5);
_0x14c17a = _0x29d4e1(_0x14c17a, 0x0, 0x1);
_0x14c17a >= _0x4b7e32 && (_0x4b7e32 = _0x4b7e32 - (_0x14c17a - _0x4b7e32));
var _0x3051ad = '#98803A';
_0x1d2dab['fillStyle'] = _0x3051ad, _0x1d2dab['globalAlpha'] = _0x4b7e32, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.5, -this['rad'] * 0.5 + 0xa * this['rPer'], Math['max'](0x0, this['rad'] * 0.65 + _0x26bf4d), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.5, -this['rad'] * 0.5 - 0xa * this['rPer'], Math['max'](0x0, this['rad'] * 0.73 - _0x26bf4d), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.6, this['rad'] * 0.4, Math['max'](0x0, this['rad'] * 0.78 + _0x26bf4d), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.5, this['rad'] * 0.5, Math['max'](0x0, this['rad'] * 0.6 + this['rPer'] - _0x26bf4d), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['restore']();
};

function _0x2ef7fd() {
_0x2ef7fd['superClass']['call'](this, _0x19053a);
}
window['DustCloud'] = _0x2ef7fd, _0x13dc56['setCustomClassForGameObjType'](_0x2ef7fd, _0x19053a);
var _0x570743 = _0x5e7e02,
_0x1e3c43 = _0x4763ce;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43, _0x5e7e02['prototype']['customDraw'] = function (_0x54b821) {
_0x1d2dab['save'](), _0x1d2dab['rotate'](this['angle'] + _0x2bcbaa(0xb4));
var _0x3ac45c = _0x1d2dab['globalAlpha'];
_0x1d2dab['globalAlpha'] = this['alpha'] < 0.7 ? this['alpha'] : 0.7;
var _0x5eff1b = this['getSkinImageObj']('img/disasters/dustwave.png');
if (_0x5eff1b) {
    var _0x545c10 = this['rad'] * 1.25;
    _0x1d2dab['drawImage'](_0x5eff1b, -_0x545c10, -_0x545c10, 0x2 * _0x545c10, 0x2 * _0x545c10);
}
_0x1d2dab['restore']();
}, _0x5e7e02['prototype']['updateZ'] = function () {
this['z'] = 0x2710 - this['rad'];
}, _0x5e7e02['prototype']['readCustomData_onUpdate'] = function (_0x391193) {
this['alpha'] = _0x391193['readUInt8']() / 0x64;
}, _0x5e7e02['prototype']['readUpdatedProperty'] = function (_0x338bf4, _0x41f72f) {
_0x338bf4 == _0x225f9d && (this['alpha'] = _0x41f72f['readUInt8']() / 0x64);
};

function _0x5e7e02() {
_0x5e7e02['superClass']['call'](this), this['spawnTime'] = _0x740c5b;
}
window['DustWave'] = _0x5e7e02, _0x13dc56['setCustomClassForGameObjType'](_0x5e7e02, _0x2c5edd, _0x12c6d1);
var _0x570743 = _0x402b73,
_0x1e3c43 = _0x4763ce;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43, _0x402b73['prototype']['customDraw'] = function (_0x5df5ef) {
_0x1d2dab['save'](), _0x1d2dab['rotate'](this['angle'] + _0x2bcbaa(0xb4));
var _0x4bb258 = _0x1d2dab['globalAlpha'];
_0x1d2dab['globalAlpha'] = this['alpha'] < 0.7 ? this['alpha'] : 0.7;
var _0x1eaac8 = this['getSkinImageObj']('img/disasters/heatwave.png');
if (_0x1eaac8) {
    var _0x43ddf3 = this['rad'] * 1.25;
    _0x1d2dab['drawImage'](_0x1eaac8, -_0x43ddf3, -_0x43ddf3, 0x2 * _0x43ddf3, 0x2 * _0x43ddf3);
}
_0x1d2dab['restore']();
}, _0x402b73['prototype']['updateZ'] = function () {
this['z'] = 0x2710 - this['rad'];
}, _0x402b73['prototype']['readCustomData_onUpdate'] = function (_0x3ab819) {
this['alpha'] = _0x3ab819['readUInt8']() / 0x64;
}, _0x402b73['prototype']['readUpdatedProperty'] = function (_0x5ae792, _0xe5fa4d) {
_0x5ae792 == _0x225f9d && (this['alpha'] = _0xe5fa4d['readUInt8']() / 0x64);
};

function _0x402b73() {
_0x402b73['superClass']['call'](this), this['spawnTime'] = _0x740c5b;
}
window['HeatWave'] = _0x402b73, _0x13dc56['setCustomClassForGameObjType'](_0x402b73, _0x2c5edd, _0x1f65f3);
var _0x1e3c43 = _0x131218;
_0x1c2949['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x1c2949['prototype']['constructor'] = _0x1c2949, _0x1c2949['superClass'] = _0x1e3c43, _0x1c2949['prototype']['updateZ'] = function () {
this['z'] = 0xf4240;
}, _0x1c2949['prototype']['customDraw'] = function (_0x2b7bc6) {
var _0x48c7f1 = (_0x740c5b - this['spawnTime']) / 0x3e8;
_0x1d2dab['save'](), _0x1d2dab['rotate'](this['angle'] + _0x2bcbaa(0xb4)), _0x1d2dab['globalAlpha'] = 0.1 + this['cloudOpacity'];
var _0xe021f2 = this['getSkinImageObj']('img/disasters/cloud.png');
if (_0xe021f2) {
    var _0x5ca655 = this['rad'] * 0x2;
    _0x1d2dab['drawImage'](_0xe021f2, -_0x5ca655, -_0x5ca655, 0x2 * _0x5ca655, 0x2 * _0x5ca655);
}
var _0x4563cf = 0x0,
    _0x5b8c7d = 0x6,
    _0x1ea309 = 0xf;
_0x4563cf = _0x1ea309 * Math['sin'](0x2 * Math['PI'] / _0x5b8c7d * _0x48c7f1), _0x1d2dab['globalAlpha'] = 0.1;
var _0xe021f2 = this['getSkinImageObj']('img/disasters/cloud1.png');
if (_0xe021f2) {
    var _0x5ca655 = this['rad'] * 0x2;
    _0x5ca655 = Math['max'](0x0, _0x5ca655 - 0x5 + _0x4563cf), _0x1d2dab['drawImage'](_0xe021f2, -_0x5ca655, -_0x5ca655, 0x2 * _0x5ca655, 0x2 * _0x5ca655);
}
_0x1d2dab['restore']();
}, _0x1c2949['prototype']['readUpdatedProperty'] = function (_0x36f1af, _0x336019) {
_0x36f1af == _0x225f9d && (this['alpha'] = _0x336019['readUInt8']() / 0x64);
};

function _0x1c2949() {
_0x1c2949['superClass']['call'](this, _0x8fac97);
}
window['RainStorm'] = _0x1c2949, _0x13dc56['setCustomClassForGameObjType'](_0x1c2949, _0x8fac97);
var _0x1e3c43 = _0x131218;
_0x2e0c26['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x2e0c26['prototype']['constructor'] = _0x2e0c26, _0x2e0c26['superClass'] = _0x1e3c43, _0x2e0c26['prototype']['updateZ'] = function () {
this['z'] = 0xf4240;
}, _0x2e0c26['prototype']['customDraw'] = function (_0x9095c8) {
var _0x15f51d = (_0x740c5b - this['spawnTime']) / 0x3e8;
_0x1d2dab['save'](), _0x1d2dab['rotate'](this['angle'] + _0x2bcbaa(0xb4)), _0x1d2dab['globalAlpha'] = 0.1 + this['cloudOpacity'];
var _0x2bb6bc = this['getSkinImageObj']('img/disasters/cloud.png');
if (_0x2bb6bc) {
    var _0xf087d3 = this['rad'] * 0x2;
    _0x1d2dab['drawImage'](_0x2bb6bc, -_0xf087d3, -_0xf087d3, 0x2 * _0xf087d3, 0x2 * _0xf087d3);
}
var _0x6ed294 = 0x0,
    _0x7a3733 = 0x6,
    _0x3d1f6d = 0xf;
_0x6ed294 = _0x3d1f6d * Math['sin'](0x2 * Math['PI'] / _0x7a3733 * _0x15f51d), _0x1d2dab['globalAlpha'] = 0.1;
var _0x2bb6bc = this['getSkinImageObj']('img/disasters/cloud1.png');
if (_0x2bb6bc) {
    var _0xf087d3 = this['rad'] * 0x2;
    _0xf087d3 = Math['max'](0x0, _0xf087d3 - 0x5 + _0x6ed294), _0x1d2dab['drawImage'](_0x2bb6bc, -_0xf087d3, -_0xf087d3, 0x2 * _0xf087d3, 0x2 * _0xf087d3);
}
_0x1d2dab['restore']();
}, _0x2e0c26['prototype']['readUpdatedProperty'] = function (_0x40c23d, _0x13e36a) {
_0x40c23d == _0x225f9d && (this['alpha'] = _0x13e36a['readUInt8']() / 0x64);
};

function _0x2e0c26() {
_0x2e0c26['superClass']['call'](this, _0x5b3c07);
}
window['SnowStorm'] = _0x2e0c26, _0x13dc56['setCustomClassForGameObjType'](_0x2e0c26, _0x5b3c07);
var _0x1e3c43 = _0x131218;
_0x4cec33['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x4cec33['prototype']['constructor'] = _0x4cec33, _0x4cec33['superClass'] = _0x1e3c43, _0x4cec33['prototype']['updateZ'] = function () {
this['z'] = 0x2710;
}, _0x4cec33['prototype']['tornadoType'] = 'tornado', _0x4cec33['prototype']['customDraw'] = function (_0x8f9bfc) {
this['setTornadoType']();
var _0x2c8ad1 = 'img/disasters/' + this['tornadoType'] + '.png',
    _0x51727a = this['getSkinImageObj'](_0x2c8ad1);
if (_0x51727a) {
    var _0x49d11b = this['rad'] * 0.8;
    if (!_0x44408d && !(_0x31f3fc == 0x2)) {
        var _0x30a9 = 0x3c / 0x3c,
            _0x25cc98 = 0x3e8 / _0x30a9,
            _0x2f9c9d = (_0x740c5b - this['spawnTime']) % _0x25cc98 / _0x25cc98,
            _0xa0112d = _0x2f9c9d * 0x2 * Math['PI'],
            _0x30a9 = 0x1e / 0x3c,
            _0x25cc98 = 0x3e8 / _0x30a9,
            _0x2f9c9d = (_0x740c5b - this['spawnTime']) % _0x25cc98 / _0x25cc98,
            _0xe7da5 = _0x2f9c9d * 0x2 * Math['PI'];
        _0x1d2dab['save'](), _0x1d2dab['rotate'](_0xa0112d);
        var _0x3a2ac6 = _0x1d2dab['globalAlpha'];
        _0x1d2dab['globalAlpha'] = 0x1 * _0x3a2ac6;
        var _0x166337 = (_0x740c5b - this['spawnTime']) / 0x3e8,
            _0x3b01ef = 2.2,
            _0x68f6de = 6.5 * Math['cos'](0x2 * Math['PI'] / _0x3b01ef * _0x166337),
            _0x53d5d5 = 6.5 * Math['sin'](0x2 * Math['PI'] / _0x3b01ef * _0x166337);
        _0x1d2dab['globalAlpha'] = 0.3, _0x1d2dab['drawImage'](_0x51727a, -_0x49d11b - _0x68f6de / 2.2, -_0x49d11b, 0x2 * _0x49d11b, 0x2 * _0x49d11b), _0x1d2dab['restore'](), _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.7, _0x1d2dab['rotate'](_0xe7da5), _0x1d2dab['drawImage'](_0x51727a, -_0x49d11b - _0x68f6de / 2.2, -_0x49d11b, 0x2 * _0x49d11b, 0x2 * _0x49d11b), _0x1d2dab['restore']();
    } else _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.7, _0x1d2dab['drawImage'](_0x51727a, -_0x49d11b, -_0x49d11b, 0x2 * _0x49d11b, 0x2 * _0x49d11b), _0x1d2dab['restore']();
    if (this['showDevilFace']) {
        var _0x2c8ad1 = 'img/disasters/' + this['tornadoFace'] + '.png',
            _0x4696e7 = this['getSkinImageObj'](_0x2c8ad1);
        _0x4696e7 && (_0x1d2dab['save'](), _0x1d2dab['rotate'](this['angle']), _0x1d2dab['globalAlpha'] = 0.3, _0x1d2dab['drawImage'](_0x4696e7, -_0x49d11b, -_0x49d11b, 0x2 * _0x49d11b, 0x2 * _0x49d11b), _0x1d2dab['restore']());
    }
}
}, _0x4cec33['prototype']['setTornadoType'] = function (_0x27db32) {
switch (this['specType']) {
case 0x0:
    this['tornadoType'] = 'tornado', this['tornadoFace'] = 'dustface';
    break;
case 0x1:
    this['tornadoType'] = 'waterspout', this['tornadoFace'] = 'waterface';
    break;
case 0x2:
    this['tornadoType'] = 'dustdevil', this['tornadoFace'] = 'dustface';
    break;
case 0x3:
    this['tornadoType'] = 'arcticwhirl', this['tornadoFace'] = 'arcticface';
    break;
case 0x4:
    this['tornadoType'] = 'firedevil', this['tornadoFace'] = 'fireface';
    break;
case 0x5:
    this['tornadoType'] = 'deviltwister', this['tornadoFace'] = 'devilface';
    break;
}
}, _0x4cec33['prototype']['readCustomData_onNewlyVisible'] = function (_0xa133c4) {
this['setTornadoType'](), this['showDevilFace'] = _0xa133c4['readUInt8']() == 0x1;
}, _0x4cec33['prototype']['showDevilFace'] = ![], _0x4cec33['prototype']['tornadoFace'] = null;

function _0x4cec33() {
_0x4cec33['superClass']['call'](this, _0x22ccdc), this['doesDrawEffectScale'] = ![], this['drawEffectScale_Slow'] = !![];
}
window['Tornado'] = _0x4cec33, _0x13dc56['setCustomClassForGameObjType'](_0x4cec33, _0x22ccdc);
var _0x570743 = _0x31ddf9,
_0x1e3c43 = _0x4763ce;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43, _0x31ddf9['prototype']['customDraw'] = function (_0x921530) {
_0x1d2dab['save'](), _0x1d2dab['rotate'](this['angle'] + _0x2bcbaa(0xb4));
var _0xa25af = _0x1d2dab['globalAlpha'];
_0x1d2dab['globalAlpha'] = this['alpha'] < 0.7 ? this['alpha'] : 0.7;
var _0x22b985 = this['getSkinImageObj']('img/disasters/tsunami.png');
if (_0x22b985) {
    var _0x524329 = this['rad'] * 1.25;
    _0x1d2dab['drawImage'](_0x22b985, -_0x524329, -_0x524329, 0x2 * _0x524329, 0x2 * _0x524329);
}
_0x1d2dab['restore']();
}, _0x31ddf9['prototype']['updateZ'] = function () {
this['z'] = 0x2710 - this['rad'];
}, _0x31ddf9['prototype']['readUpdatedProperty'] = function (_0xd19a8c, _0x2e1ab3) {
_0xd19a8c == _0x225f9d && (this['alpha'] = _0x2e1ab3['readUInt8']() / 0x64);
}, _0x31ddf9['prototype']['readCustomData_onNewlyVisible'] = function (_0x2d5a26) {
this['alpha'] = _0x2d5a26['readUInt8']() / 0x64;
};

function _0x31ddf9() {
_0x31ddf9['superClass']['call'](this), this['spawnTime'] = _0x740c5b;
}
window['TsunamiWave'] = _0x31ddf9, _0x13dc56['setCustomClassForGameObjType'](_0x31ddf9, _0x2c5edd, _0x452520);
var _0x1e3c43 = _0x131218;
_0x33421e['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x33421e['prototype']['constructor'] = _0x33421e, _0x33421e['superClass'] = _0x1e3c43, _0x33421e['prototype']['lookAngle'] = 0x0, _0x33421e['prototype']['frameNumber'] = 0x0, _0x33421e['prototype']['isRolling'] = ![], _0x33421e['prototype']['pumpkinType'] = ![], _0x33421e['prototype']['updateZ'] = function () {
this['z'] = 0x3ea;
}, _0x33421e['prototype']['customDraw'] = function (_0x566678) {
var _0x1038b9 = 0x1,
    _0x47b8f0 = 0.15,
    _0x2c7c11 = 0.8,
    _0x1247ba = 0.5 * (_0x2c7c11 - _0x47b8f0),
    _0x2a2cae = _0x47b8f0 + _0x1247ba + _0x1247ba * Math['sin'](0x2 * Math['PI'] / _0x1038b9 * (_0x740c5b / 0x3e8)),
    _0x1038b9 = 0x1,
    _0x47b8f0 = 0.85,
    _0x2c7c11 = 0x1,
    _0x1247ba = 0.5 * (_0x2c7c11 - _0x47b8f0),
    _0xb5aebf = 0x1;
if (this['isRolling']) this['frameNumber'] = Math['trunc'](_0x740c5b / 0x78) % 0x5;
var _0x45eeb1 = this['getSkinImageObj']('img/pumpkin/' + this['pumpkinType'] + '/' + this['frameNumber'] + '.png');
if (_0x45eeb1) {
    var _0x4137eb = 0x0,
        _0x23d70c = this['rad'],
        _0x589586 = this['rad'] * 2.5;
    imH = this['rad'] * 2.5;
    var _0x4ad93e = 0.5,
        _0x20d139 = 0.95;
    _0x1d2dab['save'](); {
        _0x1d2dab['globalAlpha'] *= this['onFireEffA'] * _0xb5aebf, _0x1d2dab['rotate'](this['angle'] + _0x2bcbaa(0x5a)), _0x1d2dab['drawImage'](_0x45eeb1, _0x4137eb + _0x589586 * -_0x4ad93e, _0x23d70c + imH * -_0x20d139, _0x589586, imH);
    }
    _0x1d2dab['restore']();
} else {}
}, _0x33421e['prototype']['isFloating'] = ![], _0x33421e['prototype']['isRolling'] = ![], _0x33421e['prototype']['readUpdatedProperty'] = function (_0x12d67e, _0x21d864) {
if (_0x12d67e == _0x189dbf) this['isFloating'] = _0x21d864['readUInt8']() == 0x1;
else _0x12d67e == _0x458b93 && (this['isRolling'] = _0x21d864['readUInt8']() == 0x1);
}, _0x33421e['prototype']['readCustomData_onNewlyVisible'] = function (_0x585d3e) {
this['isRolling'] = _0x585d3e['readUInt8']() == 0x1, this['pumpkinType'] = _0x585d3e['readUInt8']();
};

function _0x33421e() {
_0x33421e['superClass']['call'](this, _0x4341d1), this['lookAngle'] = 0x0, this['isRolling'] = ![], this['isFloating'] = ![], this['pumpkinType'] = ![], this['doesDrawEffectScale'] = !![], this['drawEffectScale_Slow'] = !![];
}
var _0x4341d1 = 0x83;
window['PumpkinBall'] = _0x33421e, _0x13dc56['setCustomClassForGameObjType'](_0x33421e, _0x4341d1);
var _0x570743 = _0x5c6d18,
_0x1e3c43 = _0x4763ce;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43, _0x570743['prototype']['alltimeGoals'] = 0x0, _0x570743['prototype']['xpGained'] = 0x0, _0x570743['prototype']['goalScorer'] = '', _0x570743['prototype']['timerTxt'] = null, _0x570743['prototype']['timer'] = 0x0, _0x5c6d18['prototype']['updateZ'] = function () {
this['z'] = 0x186a2;
}, _0x5c6d18['prototype']['customDraw'] = function (_0xfecdb8) {
this['updateTimer']();
if (this['timer'] > 0x3) {
    _0x1d2dab['save']();
    var _0x317526 = _0x1d2dab['globalAlpha'];
    _0x1d2dab['globalAlpha'] = 0.25 * _0x317526, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, this['rad'], 0x0, 0x2 * Math['PI'], ![]), _0x1d2dab['arc'](0x0, 0x0, this['rad'] - 0x14, 0x0, 0x2 * Math['PI'], !![]), _0x1d2dab['fillStyle'] = '#ff9000', _0x1d2dab['closePath'](), _0x1d2dab['fill'](), _0x1d2dab['restore']();
}
this['timerTxt'] != null && (this['timerTxt']['x'] = 0x0, this['timerTxt']['y'] = -this['rad'], this['timerTxt']['draw']());
}, _0x5c6d18['prototype']['readCustomData_onNewlyVisible'] = function (_0x483190) {
_0x5c6d18['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x483190), this['alltimeGoals'] = _0x483190['readUInt16'](), this['goalScorer'] = _0x483190['readString'](), this['timer'] = _0x483190['readUInt8']();
}, _0x5c6d18['prototype']['readUpdatedProperty'] = function (_0x3abfd5, _0x1429bb) {
_0x3abfd5 == _0x571db5 && (this['timer'] = _0x1429bb['readUInt8']());
}, _0x5c6d18['prototype']['setTimer'] = function (_0x2f1de7) {
var _0x4ad559 = _0x2f1de7,
    _0x363024 = 0x10;
null == this['timerTxt'] ? (this['timerTxt'] = new _0x407dea(_0x363024, '#ffd800'), this['timerTxt']['strokeW'] = 0x2, this['timerTxt']['multiLine'] = !![], this['timerTxt']['renderScale'] = 0x3, this['timerTxt']['setText'](_0x4ad559)) : (this['timerTxt']['setFontSize'](_0x363024), this['timerTxt']['setText'](_0x4ad559));
}, _0x5c6d18['prototype']['updateTimer'] = function () {
this['timer'] = Math['round'](this['timer']);
var _0x356df0 = this['timer'];
switch (this['timer']) {
case 0xa:
case 0x9:
case 0x8:
    _0x356df0 = 'GOAAAAAL!!!';
    break;
case 0x7:
case 0x6:
case 0x5:
    _0x356df0 = this['goalScorer'];
    break;
case 0x4:
case 0x3:
case 0x2:
    _0x356df0 = 'TOTAL GOALS ' + this['alltimeGoals'];
    break;
default:
    _0x356df0 = '';
    break;
}
this['setTimer'](_0x356df0);
};
var _0x122acc = 0x7d;

function _0x5c6d18() {
_0x5c6d18['superClass']['call'](this), this['hasAdLoaded'] = ![];
}
window['AbilityObjGoalScored'] = _0x5c6d18, _0x13dc56['setCustomClassForGameObjType'](_0x5c6d18, _0x2c5edd, _0x122acc);
var _0x500e94 = _0x500e94,
_0x1e3c43 = _0x3d6c08;
_0x500e94['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x500e94['prototype']['constructor'] = _0x500e94, _0x500e94['superClass'] = _0x1e3c43, _0x500e94['prototype']['animalInfo'] = function () {
var _0xdd6f8 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0xdd6f8['aniName'] = 'Raven';
    break;
case 0xdc:
    _0xdd6f8['aniName'] = 'Muscipula Raven';
    break;
}
return _0xdd6f8['aniCol'] = '#FF9000', _0xdd6f8['skinName'] = this['getSkinName'](), _0xdd6f8['upgradeText'] = 'UPGRADED to ' + _0xdd6f8['aniName'] + '!\x0aHold W to fly around from Tress/Hills.\x0a(Hint: Use ability on land to scare animals) ', _0xdd6f8;
}, _0x500e94['prototype']['getAbilityInfo'] = function (_0x2ab3c7) {
var _0x5e8f8a = {};
return _0x5e8f8a['abilName'] = 'Loud Caw!', _0x5e8f8a['abilImg'] = 'abilities/Caw-Mimic.svg', _0x5e8f8a['skinThemeID'] = this['skinThemeID'], _0x5e8f8a['mopeSeasonID'] = this['mopeSeasonID'], _0x5e8f8a;
}, _0x500e94['prototype']['getSkinName'] = function () {
return this['getSpeciesPath']() + this['getSubSpecies']() + '/raven' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x500e94['prototype']['getSpeciesPath'] = function () {
return 'forest/raven/' + this['animalSpecies'];
}, _0x500e94['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x500e94['prototype']['getWing'] = function (_0x122a14, _0x2dc54a, _0x5437b6) {
var _0x128f00 = 'skins/' + this['getSpeciesPath']() + '/';
return _0x128f00 += _0x122a14 + '_wing' + _0x2dc54a + '.png', _0x128f00;
}, _0x500e94['prototype']['getHead'] = function (_0x91ec2e, _0x2aab91) {
var _0x5b9722 = 'skins/' + this['getSpeciesPath']() + '/';
return _0x5b9722 += _0x91ec2e + '_head.png', _0x5b9722;
};
var _0x34da81 = 0x0,
_0xedcf47 = 1.25,
_0x458fda = 0x5,
_0x53bffe = 0x1;
_0x500e94['prototype']['biteStart'] = 0x0, _0x500e94['prototype']['flapAmount'] = 0x3, _0x500e94['prototype']['flapDur'] = 0.7, _0x500e94['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) {
    this['biteStart'] = 0x0;
    return;
} else {
    if (!this['flag_flying']) {
        this['biteStart'] == 0x0 && (this['biteStart'] = _0x740c5b);
        if (this['specType'] != 0x0 && this['specType'] != undefined) {
            var _0x420470 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/raven_head1.png'),
                _0x14b483 = (_0x740c5b - this['biteStart']) / 0x3e8,
                _0x41e063 = this['skinScale'] * 1.1,
                _0x72d7b2 = this['skinRad'];
            _0x32362b = !(_0x31f3fc == 0x2) ? _0x21d673(_0x14b483, this['flapDur'], 0.05, 0x2) : 0.05;
            var _0x5a50b6 = this['getSkinImageObj'](this['getWing']('raven', 0x1, !![]));
            if (_0x5a50b6) {
                _0x1d2dab['save']();
                var _0x5877d0 = -(-0.2 + _0x32362b) * _0xa0b20a,
                    _0x72d7b2 = this['rad'] * 0.9;
                _0x1d2dab['rotate'](_0x2bcbaa(_0x458fda) + _0x5877d0);
                var _0x1af2b1 = 0x0,
                    _0x45a015 = this['rad'],
                    _0x4ed2e0 = _0x72d7b2 * 0x2 * 0.62,
                    _0x5ec494 = _0x72d7b2 * 2.5,
                    _0x36d0a6 = _0x34da81,
                    _0x79adb4 = _0xedcf47;
                _0x1d2dab['drawImage'](_0x5a50b6, _0x1af2b1 + _0x4ed2e0 * -_0x36d0a6, _0x45a015 + _0x5ec494 * -_0x79adb4, _0x4ed2e0, _0x5ec494), _0x1d2dab['restore']();
            }
            var _0x5a50b6 = this['getSkinImageObj'](this['getWing']('raven', 0x2, !![]));
            if (_0x5a50b6) {
                _0x1d2dab['save']();
                var _0x5877d0 = -(-0.2 + _0x32362b) * _0x2bcbaa(-0x5a),
                    _0x72d7b2 = this['rad'] * 0.9;
                _0x1d2dab['rotate'](_0x2bcbaa(-_0x458fda) + _0x5877d0);
                var _0x1af2b1 = 0x0,
                    _0x45a015 = this['rad'],
                    _0x4ed2e0 = _0x72d7b2 * 0x2 * 0.62,
                    _0x5ec494 = _0x72d7b2 * 2.5,
                    _0x36d0a6 = _0x53bffe,
                    _0x79adb4 = _0xedcf47;
                _0x1d2dab['drawImage'](_0x5a50b6, _0x1af2b1 + _0x4ed2e0 * -_0x36d0a6, _0x45a015 + _0x5ec494 * -_0x79adb4, _0x4ed2e0, _0x5ec494), _0x1d2dab['restore']();
            }
            if (_0x420470) {
                _0x32362b = 0x0;
                !this['flag_flying'] && (_0x32362b = !(_0x31f3fc == 0x2) ? _0x21d673(_0x14b483, this['flapDur'], this['flapAmount'], 0x2) : this['flapAmount']);
                _0x1d2dab['save']();
                var _0x72d7b2 = this['rad'];
                _0x1d2dab['drawImage'](_0x420470, -_0x72d7b2 * _0x41e063, (-_0x72d7b2 + _0x72d7b2 * 0.1) * _0x41e063 + _0x32362b, 0x2 * _0x72d7b2 * _0x41e063, 0x2 * _0x72d7b2 * _0x41e063), _0x1d2dab['restore']();
            }
        }
    } else {
        if (this['flag_flying']) {
            var _0x41e063 = 0x1f4 / 0x154;
            if (this['flag_flying'] && !this['flag_isGrabbed']) {
                _0x1d2dab['save']();
                var _0x14b483 = (_0x740c5b - this['spawnTime']) / 0x3e8,
                    _0x32362b = !(_0x31f3fc == 0x2 || _0x44408d) ? _0x21d673(_0x14b483, 0.5, 0.3, 0x2) : this['birdNoAnimationFlyWingAngle'],
                    _0x5a50b6 = this['getSkinImageObj'](this['getWing']('raven', 0x1, !![]));
                if (_0x5a50b6) {
                    _0x1d2dab['save']();
                    var _0x5877d0 = -(-0.2 + _0x32362b) * _0xa0b20a,
                        _0x72d7b2 = this['rad'] * 0.8;
                    _0x1d2dab['rotate'](_0x2bcbaa(0x2d) + _0x5877d0);
                    var _0x1af2b1 = 0x0,
                        _0x45a015 = this['rad'],
                        _0x4ed2e0 = _0x72d7b2 * 0x2 * 0.62,
                        _0x5ec494 = _0x72d7b2 * 2.5,
                        _0x36d0a6 = 0.2,
                        _0x79adb4 = 1.7;
                    _0x1d2dab['drawImage'](_0x5a50b6, _0x1af2b1 + _0x4ed2e0 * -_0x36d0a6, _0x45a015 + _0x5ec494 * -_0x79adb4, _0x4ed2e0, _0x5ec494), _0x1d2dab['restore']();
                }
                var _0x5a50b6 = this['getSkinImageObj'](this['getWing']('raven', 0x2, !![]));
                if (_0x5a50b6) {
                    _0x1d2dab['save']();
                    var _0x5877d0 = -(-0.2 + _0x32362b) * _0x2bcbaa(-0x5a),
                        _0x72d7b2 = this['rad'] * 0.8;
                    _0x1d2dab['rotate'](_0x2bcbaa(-0x2d) + _0x5877d0);
                    var _0x1af2b1 = 0x0,
                        _0x45a015 = this['rad'],
                        _0x4ed2e0 = _0x72d7b2 * 0x2 * 0.62,
                        _0x5ec494 = _0x72d7b2 * 2.5,
                        _0x36d0a6 = 0.8,
                        _0x79adb4 = 1.7;
                    _0x1d2dab['drawImage'](_0x5a50b6, _0x1af2b1 + _0x4ed2e0 * -_0x36d0a6, _0x45a015 + _0x5ec494 * -_0x79adb4, _0x4ed2e0, _0x5ec494), _0x1d2dab['restore']();
                }
                _0x1d2dab['restore']();
            }
            if (this['specType'] != 0x0 && this['specType'] != undefined) {
                var _0x420470 = this['getSkinImageObj'](this['getHead']('raven', !![]));
                if (_0x420470) {
                    _0x1d2dab['save']();
                    var _0x72d7b2 = this['rad'];
                    _0x1d2dab['drawImage'](_0x420470, -_0x72d7b2 * _0x41e063, (-_0x72d7b2 + _0x72d7b2 * 0.1) * _0x41e063, 0x2 * _0x72d7b2 * _0x41e063, 0x2 * _0x72d7b2 * _0x41e063), _0x1d2dab['restore']();
                }
            }
        }
    }
}
};

function _0x500e94() {
_0x500e94['superClass']['call'](this, _0x4ad968);
}
window['Raven'] = _0x500e94, _0x13dc56['setCustomClassForGameObjType'](_0x500e94, _0x4ad968, _0x286bc1);
var _0x570743 = _0x171bcb,
_0x1e3c43 = _0x4763ce;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43, _0x171bcb['prototype']['updateZ'] = function () {
this['z'] = 0x186a2;
}, _0x171bcb['prototype']['customDraw'] = function (_0x47f8ac) {
_0x1d2dab['save']();
var _0x277eb0 = _0x1d2dab['globalAlpha'];
_0x1d2dab['globalAlpha'] = 0.1 * _0x277eb0, _0x444e67(0x0, 0x0, this['rad'], '#755A2A'), _0x1d2dab['restore'](), this['drawChat']();
}, _0x171bcb['prototype']['drawChat'] = function () {
if (this['aLine'] == null) return;
_0x1d2dab['save'](), _0x1d2dab['font'] = '10px Arial', _0x1d2dab['lineWidth'] = 0x1, _0x1d2dab['textAlign'] = 'center', _0x1d2dab['textBaseline'] = 'middle';
var _0xe40085 = this['aLine'],
    _0x89d377 = _0x740c5b > _0xe40085['chatFadeT'] ? 0x0 : 0x1;
_0xe40085['chatA'] += (_0x89d377 - _0xe40085['chatA']) * 0.1, _0x1d2dab['shadowOffsetX'] = 0x0, _0x1d2dab['shadowOffsetY'] = 0x0;
_0xe40085['chatA'] < 0.02 && (this['aLine'] = null);
var _0x29f4a9 = _0x1d2dab['measureText'](_0xe40085['chatTxt'])['width'],
    _0x4afc81 = 0xa,
    _0x33ab7c = 0x1,
    _0x3fcf69 = 0x1;
_0x1d2dab['globalAlpha'] = 0.8 * _0xe40085['chatA'], _0x1d2dab['fillStyle'] = _0x3b949e(this['curBiome']), _0x1d2dab['fillRect'](this['x'] - _0x33ab7c - _0x29f4a9 / 0x2, this['y'] - this['rad'] - _0x4afc81 / 0x2 - _0x3fcf69, _0x29f4a9 + _0x33ab7c * 0x2, _0x4afc81 + _0x3fcf69 * 0x2), _0x1d2dab['fillStyle'] = '#F1C34C', !(_0x31f3fc == 0x2) && (_0x1d2dab['shadowOffsetX'] = 0x1, _0x1d2dab['shadowOffsetY'] = 0x1, _0x1d2dab['shadowColor'] = 'black'), _0x1d2dab['globalAlpha'] = _0xe40085['chatA'], _0x1d2dab['fillText'](_0xe40085['chatTxt'], this['x'], this['y'] - this['rad']), _0x1d2dab['restore']();
};

function _0x171bcb() {
_0x171bcb['superClass']['call'](this);
}
_0x171bcb['prototype']['aLine'] = null, _0x171bcb['prototype']['readCustomData_onNewlyVisible'] = function (_0x72d143) {
_0x171bcb['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x72d143), this['aLine'] = {
    'chatTxt': 'CAW!!!',
    'chatFadeT': _0x740c5b + 0x7d0,
    'chatA': 0x0
};
}, window['RavenCaw'] = _0x171bcb, _0x13dc56['setCustomClassForGameObjType'](_0x171bcb, _0x2c5edd, _0x1eb851);
var _0x44b449 = _0x44b449,
_0x1e3c43 = _0x3d6c08;
_0x44b449['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x44b449['prototype']['constructor'] = _0x44b449, _0x44b449['superClass'] = _0x1e3c43, _0x44b449['prototype']['animalInfo'] = function () {
var _0x2711d3 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x2711d3['aniName'] = 'Kakapo';
    break;
case 0xca:
    _0x2711d3['aniName'] = 'Wind-up Kakapo';
    break;
}
return _0x2711d3['aniCol'] = '#FF9000', _0x2711d3['skinName'] = this['getSkinName'](), _0x2711d3['upgradeText'] = 'UPGRADED to ' + _0x2711d3['aniName'] + '!\x0aHold W to hop around.\x0a(Hint: Use ability on prey to stun them) ', _0x2711d3;
}, _0x44b449['prototype']['getSkinName'] = function () {
return this['getSpeciesPath']() + this['getSubSpecies']() + '/kakapo' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x44b449['prototype']['getSpeciesPath'] = function () {
return 'forest/kakapo/' + this['animalSpecies'];
}, _0x44b449['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x44b449['prototype']['getWing'] = function (_0xf4ec47, _0x2dfd6f, _0x2d3202) {
var _0x1afe58 = 'skins/' + this['getSpeciesPath']() + '/';
return _0x1afe58 += _0xf4ec47 + '_wing' + _0x2dfd6f + '.png', _0x1afe58;
}, _0x44b449['prototype']['getHead'] = function (_0x27dd2c, _0x49ef71) {
var _0x11ee9b = 'skins/' + this['getSpeciesPath']() + '/';
return _0x11ee9b += _0x27dd2c + '_head.png', _0x11ee9b;
};
var _0x2c7292 = 0x0,
_0x51ec8b = 1.25,
_0x337184 = 0x5,
_0x4d1c66 = 0x1;
_0x44b449['prototype']['biteStart'] = 0x0, _0x44b449['prototype']['flapAmount'] = 0x3, _0x44b449['prototype']['flapDur'] = 0.7, _0x44b449['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) {
    this['biteStart'] = 0x0;
    return;
} else {
    if (!this['flag_flying']) {
        this['biteStart'] == 0x0 && (this['biteStart'] = _0x740c5b);
        if (this['specType'] != 0x0 && this['specType'] != undefined) {
            var _0x49db4f = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/kakapo_head.png'),
                _0x5dcf61 = (_0x740c5b - this['biteStart']) / 0x3e8,
                _0x4a1f23 = this['skinScale'] * 1.1,
                _0x293db7 = this['skinRad'];
            _0x55e1b7 = !(_0x31f3fc == 0x2) ? _0x21d673(_0x5dcf61, this['flapDur'], 0.05, 0x2) : 0.05;
            var _0x3506a9 = this['getSkinImageObj'](this['getWing']('kakapo', 0x1, !![]));
            if (_0x3506a9) {
                _0x1d2dab['save']();
                var _0x332632 = -(-0.2 + _0x55e1b7) * _0xa0b20a,
                    _0x293db7 = this['rad'] * 0.9;
                _0x1d2dab['rotate'](_0x2bcbaa(_0x337184) + _0x332632);
                var _0x22c207 = 0x0,
                    _0x27d0a5 = this['rad'],
                    _0x43184f = _0x293db7 * 0x2 * 0.62,
                    _0x249034 = _0x293db7 * 2.5,
                    _0x29cbd6 = _0x2c7292,
                    _0x2281fc = _0x51ec8b;
                _0x1d2dab['drawImage'](_0x3506a9, _0x22c207 + _0x43184f * -_0x29cbd6, _0x27d0a5 + _0x249034 * -_0x2281fc, _0x43184f, _0x249034), _0x1d2dab['restore']();
            }
            var _0x3506a9 = this['getSkinImageObj'](this['getWing']('kakapo', 0x2, !![]));
            if (_0x3506a9) {
                _0x1d2dab['save']();
                var _0x332632 = -(-0.2 + _0x55e1b7) * _0x2bcbaa(-0x5a),
                    _0x293db7 = this['rad'] * 0.9;
                _0x1d2dab['rotate'](_0x2bcbaa(-_0x337184) + _0x332632);
                var _0x22c207 = 0x0,
                    _0x27d0a5 = this['rad'],
                    _0x43184f = _0x293db7 * 0x2 * 0.62,
                    _0x249034 = _0x293db7 * 2.5,
                    _0x29cbd6 = _0x4d1c66,
                    _0x2281fc = _0x51ec8b;
                _0x1d2dab['drawImage'](_0x3506a9, _0x22c207 + _0x43184f * -_0x29cbd6, _0x27d0a5 + _0x249034 * -_0x2281fc, _0x43184f, _0x249034), _0x1d2dab['restore']();
            }
            if (_0x49db4f) {
                _0x55e1b7 = 0x0;
                !this['flag_flying'] && (_0x55e1b7 = !(_0x31f3fc == 0x2) ? _0x21d673(_0x5dcf61, this['flapDur'], this['flapAmount'], 0x2) : this['flapAmount']);
                _0x1d2dab['save']();
                var _0x293db7 = this['rad'];
                _0x1d2dab['drawImage'](_0x49db4f, -_0x293db7 * _0x4a1f23, (-_0x293db7 + _0x293db7 * 0.1) * _0x4a1f23 + _0x55e1b7, 0x2 * _0x293db7 * _0x4a1f23, 0x2 * _0x293db7 * _0x4a1f23), _0x1d2dab['restore']();
            }
        }
    } else {
        if (this['flag_flying']) {
            var _0x4a1f23 = 0x1f4 / 0x154;
            if (this['flag_flying'] && !this['flag_isGrabbed']) {
                _0x1d2dab['save']();
                var _0x5dcf61 = (_0x740c5b - this['spawnTime']) / 0x3e8,
                    _0x55e1b7 = !(_0x31f3fc == 0x2 || _0x44408d) ? _0x21d673(_0x5dcf61, 0.5, 0.3, 0x2) : this['birdNoAnimationFlyWingAngle'],
                    _0x3506a9 = this['getSkinImageObj'](this['getWing']('kakapo', 0x1, !![]));
                if (_0x3506a9) {
                    _0x1d2dab['save']();
                    var _0x332632 = -(-0.2 + _0x55e1b7) * _0xa0b20a,
                        _0x293db7 = this['rad'] * 0.8;
                    _0x1d2dab['rotate'](_0x2bcbaa(0x2d) + _0x332632);
                    var _0x22c207 = 0x0,
                        _0x27d0a5 = this['rad'],
                        _0x43184f = _0x293db7 * 0x2 * 0.62,
                        _0x249034 = _0x293db7 * 2.5,
                        _0x29cbd6 = 0.2,
                        _0x2281fc = 1.7;
                    _0x1d2dab['drawImage'](_0x3506a9, _0x22c207 + _0x43184f * -_0x29cbd6, _0x27d0a5 + _0x249034 * -_0x2281fc, _0x43184f, _0x249034), _0x1d2dab['restore']();
                }
                var _0x3506a9 = this['getSkinImageObj'](this['getWing']('kakapo', 0x2, !![]));
                if (_0x3506a9) {
                    _0x1d2dab['save']();
                    var _0x332632 = -(-0.2 + _0x55e1b7) * _0x2bcbaa(-0x5a),
                        _0x293db7 = this['rad'] * 0.8;
                    _0x1d2dab['rotate'](_0x2bcbaa(-0x2d) + _0x332632);
                    var _0x22c207 = 0x0,
                        _0x27d0a5 = this['rad'],
                        _0x43184f = _0x293db7 * 0x2 * 0.62,
                        _0x249034 = _0x293db7 * 2.5,
                        _0x29cbd6 = 0.8,
                        _0x2281fc = 1.7;
                    _0x1d2dab['drawImage'](_0x3506a9, _0x22c207 + _0x43184f * -_0x29cbd6, _0x27d0a5 + _0x249034 * -_0x2281fc, _0x43184f, _0x249034), _0x1d2dab['restore']();
                }
                _0x1d2dab['restore']();
            }
            if (this['specType'] != 0x0 && this['specType'] != undefined) {
                var _0x49db4f = this['getSkinImageObj'](this['getHead']('kakapo', !![]));
                if (_0x49db4f) {
                    _0x1d2dab['save']();
                    var _0x293db7 = this['rad'];
                    _0x1d2dab['drawImage'](_0x49db4f, -_0x293db7 * _0x4a1f23, (-_0x293db7 + _0x293db7 * 0.1) * _0x4a1f23, 0x2 * _0x293db7 * _0x4a1f23, 0x2 * _0x293db7 * _0x4a1f23), _0x1d2dab['restore']();
                }
            }
        }
    }
}
}, _0x44b449['prototype']['getAbilityInfo'] = function (_0x3f87f5) {
var _0x499f2f = {};
return _0x499f2f['abilName'] = 'Hop!', _0x499f2f['abilImg'] = 'abilities/Jump.svg', _0x499f2f['skinThemeID'] = this['skinThemeID'], _0x499f2f['mopeSeasonID'] = this['mopeSeasonID'], _0x499f2f;
};

function _0x44b449() {
_0x44b449['superClass']['call'](this, _0x4ad968);
}
window['Kakapo'] = _0x44b449, _0x13dc56['setCustomClassForGameObjType'](_0x44b449, _0x4ad968, _0x232d17);
var _0x44c980 = _0x44c980,
_0x1e3c43 = _0x3d6c08;
_0x44c980['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x44c980['prototype']['constructor'] = _0x44c980, _0x44c980['superClass'] = _0x1e3c43, _0x44c980['prototype']['objSkinSpotsCanvas'] = null, _0x44c980['prototype']['animalInfo'] = function () {
var _0x5997da = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x5997da['aniName'] = 'Mole';
    break;
case 0x64:
    _0x5997da['aniName'] = 'Zombie Mole';
    break;
case 0xca:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x5997da['aniName'] = 'Toxic Mole';
        break;
    case 0x1:
        _0x5997da['aniName'] = 'Cytokinetic Mole';
        break;
    }
    break;
}
return _0x5997da['aniDesc'] = '', _0x5997da['upgradeText'] = 'UPGRADED to ' + _0x5997da['aniName'] + '!\x0a Hold W to dig underground!\x0aGo under anything, do surprise attacks!', _0x5997da['aniCol'] = '#4C4A45', _0x5997da['skinName'] = this['getSkinName'](), _0x5997da;
}, _0x44c980['prototype']['getSkinName'] = function () {
return 'land/mole/' + this['animalSpecies'] + this['getSubSpecies']() + '/mole';
}, _0x44c980['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
}, _0x44c980['prototype']['getAbilityInfo'] = function (_0xe0e71) {
var _0x1f50c7 = {};
return _0x1f50c7['abilName'] = 'Hold to Dig', _0x1f50c7['abilImg'] = 'abilities/Dig.svg', _0x1f50c7['skinThemeID'] = this['skinThemeID'], _0x1f50c7['mopeSeasonID'] = this['mopeSeasonID'], _0x1f50c7;
};

function _0x44c980() {
_0x44c980['superClass']['call'](this, _0x4ad968);
}
window['Mole'] = _0x44c980, _0x13dc56['setCustomClassForGameObjType'](_0x44c980, _0x4ad968, _0x12b5f6);
var _0x1e3c43 = _0x131218;
_0x44e6c7['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x44e6c7['prototype']['constructor'] = _0x44e6c7, _0x44e6c7['superClass'] = _0x1e3c43, _0x44e6c7['prototype']['updateZ'] = function () {
this['z'] = 0x3f2;
}, _0x44e6c7['prototype']['setSkinPath'] = function () {
this['objSkinPath'] = 'img/coin/coin' + (this['isEdibleOutlined']() ? '_e' : '') + '.png';
}, _0x44e6c7['prototype']['customDraw'] = function (_0x315ef2) {
var _0x1e2986 = this['getSkinImageObj'](this['objSkinPath']);
if (_0x1e2986) {
    var _0x391af9 = this['rad'];
    _0x1d2dab['drawImage'](_0x1e2986, -_0x391af9, -_0x391af9, 0x2 * _0x391af9, 0x2 * _0x391af9);
}
};
var _0x1e2d60 = 0x84;

function _0x44e6c7() {
_0x44e6c7['superClass']['call'](this, _0x1e2d60), _0x44e6c7['prototype']['easeAngleChanges'] = !![];
}
window['MopeCoin'] = _0x44e6c7, _0x13dc56['setCustomClassForGameObjType'](_0x44e6c7, _0x1e2d60);
var _0x1e3c43 = _0x131218;
_0x579824['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x579824['prototype']['constructor'] = _0x579824, _0x579824['superClass'] = _0x1e3c43, _0x579824['prototype']['color'] = 'limegreen', _0x579824['prototype']['updateZ'] = function () {
this['z'] = this['rad'] + 0xa98670;
}, _0x579824['prototype']['customDraw'] = function (_0xd07878) {
_0x1d2dab['save']();
var _0x502971 = 0.4,
    _0x15492c = 0x8;
this['shrinkRad'] > 0xfa && (_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.1, _0xee861c(0x0, 0x0, this['shrinkRad'], _0x15492c * 0.5, this['color']), _0x1d2dab['restore']());
_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = _0x502971 + 0.3, _0xee861c(0x0, 0x0, this['rad'], _0x15492c, this['color']), _0x1d2dab['restore']();
this['rad'] > 0x5dc && (_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = _0x502971, _0xee861c(0x0, 0x0, this['shrinkedRad'], _0x15492c, _0x4c4d1f), _0x1d2dab['restore']());
var _0x4ab2fe = _0x4ffcf2 * (_0x4767f1 / 0x2),
    _0x55a23a = _0x4ffcf2 * (_0x1f4cd2 / 0x2),
    _0x3e154b = _0x502971 - 0.1,
    _0x18752a = this['color'],
    _0x4e3723 = _0x1f4cd2,
    _0x1a403e = _0x4767f1,
    _0x131bf8 = _0x4e3723 - this['x'],
    _0x2c66b0 = _0x1a403e - this['y'],
    _0xa44fd3 = this['x'],
    _0x4d793e = _0x2c66b0,
    _0x347d07 = _0xa44fd3,
    _0x1ac205 = this['y'],
    _0x502718 = _0x131bf8,
    _0x23d064 = _0x1ac205;
_0x131bf8 = _0x4ffcf2 * _0x131bf8, _0x2c66b0 = _0x4ffcf2 * _0x2c66b0, _0xa44fd3 = _0x4ffcf2 * _0xa44fd3, _0x4d793e = _0x4ffcf2 * _0x4d793e, _0x347d07 = _0x4ffcf2 * _0x347d07, _0x1ac205 = _0x4ffcf2 * _0x1ac205, _0x502718 = _0x4ffcf2 * _0x502718, _0x23d064 = _0x4ffcf2 * _0x23d064, this['drawDangerAreaSegment2'](0x0, _0x18752a, _0x3e154b, _0x2c66b0, _0x131bf8), this['drawDangerAreaSegment2'](Math['PI'] * 0.5, _0x18752a, _0x3e154b, _0xa44fd3, _0x4d793e), this['drawDangerAreaSegment2'](Math['PI'] * 0x1, _0x18752a, _0x3e154b, _0x1ac205, _0x347d07), this['drawDangerAreaSegment2'](Math['PI'] * 1.5, _0x18752a, _0x3e154b, _0x502718, _0x23d064), _0x1d2dab['restore']();
}, _0x579824['prototype']['drawDangerAreaSegment2'] = function (_0x43080c, _0x3c6f0d, _0x30f013, _0x55c985, _0x5d0405) {
_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = _0x30f013, _0x1d2dab['fillStyle'] = _0x3c6f0d, _0x1d2dab['beginPath'](), _0x1d2dab['rotate'](_0x43080c), _0x1d2dab['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0.5, ![]), _0x1d2dab['lineTo'](0x0, _0x55c985), _0x1d2dab['lineTo'](_0x5d0405, _0x55c985), _0x1d2dab['lineTo'](_0x5d0405, 0x0), _0x1d2dab['closePath'](), _0x1d2dab['fill'](), _0x1d2dab['restore']();
}, _0x579824['prototype']['moveUpdate'] = function () {
var _0x6ac217 = (_0x740c5b - this['updateTime']) / 0x3e8 / _0x161edc;
return _0x6ac217 = 0x0 > _0x6ac217 ? 0x0 : 0x1 < _0x6ac217 ? 0x1 : _0x6ac217, this['x'] = _0x6ac217 * (this['nx'] - this['ox']) + this['ox'], this['y'] = _0x6ac217 * (this['ny'] - this['oy']) + this['oy'], this['rad'] += (this['nRad'] - this['rad']) * 0.1, Math['min'](0x1, _0x6ac217);
}, _0x579824['prototype']['readUpdatedProperty'] = function (_0x4aa1a4, _0x48ea26) {
_0x4aa1a4 == _0x168471 && (this['shrinkRad'] = _0x48ea26['readUInt32']() / 0x4);
}, _0x579824['prototype']['readCustomData_onNewlyVisible'] = function (_0x31336b) {
this['shrinkRad'] = _0x31336b['readUInt32']() / 0x4;
};

function _0x579824() {
_0x579824['superClass']['call'](this, _0x571392), _0x579824['prototype']['easeAngleChanges'] = !![], this['color'] = _0x5dd9a5 == _0x216779 ? 'limegreen' : 'red';
}
window['SafeArea'] = _0x579824, _0x13dc56['setCustomClassForGameObjType'](_0x579824, _0x571392);
var _0x1e3c43 = _0x3d6c08;
_0x590c29['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x590c29['prototype']['constructor'] = _0x590c29, _0x590c29['superClass'] = _0x1e3c43, _0x590c29['prototype']['animalInfo'] = function () {
var _0x51fd1d = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x51fd1d['aniName'] = 'Snow Leopard!';
    break;
case 0x64:
    _0x51fd1d['aniName'] = 'Frostaline';
    break;
case 0xc9:
    _0x51fd1d['aniName'] = 'Coral Queen';
    break;
case 0xca:
    _0x51fd1d['aniName'] = 'Astral Leopard';
    break;
case 0xcc:
    _0x51fd1d['aniName'] = 'Martian Leopard';
    break;
}
return _0x51fd1d['skinName'] = this['getSkinName'](), _0x51fd1d['aniDesc'] = '', _0x51fd1d['upgradeText'] = 'UPGRADED to ' + _0x51fd1d['aniName'] + '!\x0a Press W to get a speed boost! (Every 8 seconds)!', _0x51fd1d['aniCol'] = '#cfcfcf', _0x51fd1d;
}, _0x590c29['prototype']['getSkinName'] = function () {
return 'arctic/snowleopard/' + this['animalSpecies'] + this['getSubSpecies']() + '/snowleopard';
}, _0x590c29['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x590c29['prototype']['getAbilityInfo'] = function (_0x28a139) {
var _0x27551c = {};
return _0x27551c['abilName'] = 'Extra Boost', _0x27551c['abilImg'] = 'abilities/Dash-Boost.svg', _0x27551c['skinThemeID'] = this['skinThemeID'], _0x27551c['mopeSeasonID'] = this['mopeSeasonID'], _0x27551c;
};

function _0x590c29() {
_0x590c29['superClass']['call'](this, _0x4ad968);
}
window['SnowLeopard'] = _0x590c29, _0x13dc56['setCustomClassForGameObjType'](_0x590c29, _0x4ad968, _0x575d5b);
var _0x1e3c43 = _0x131218;
_0x34e55c['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x34e55c['prototype']['constructor'] = _0x34e55c, _0x34e55c['superClass'] = _0x1e3c43, _0x34e55c['prototype']['updateZ'] = function () {
this['z'] = 0xf4240;
};
var _0x5d90fa = -0.3,
_0x1126f5 = -0.2,
_0x39710a = 0.3,
_0x297def = -0.2,
_0x507bdd = 0.2;
_0x34e55c['prototype']['customDraw'] = function (_0x37f7ff) {
var _0x20c687 = 0x1f4 / 0x154;
_0x1d2dab['save'](), _0x1d2dab['rotate'](this['angle']);
var _0xa6dd5 = this['rad'],
    _0x40179b = this['getSkinImageObj'](this['getBody']('battleduck', !![]));
_0x40179b && (_0x1d2dab['save'](), _0x1d2dab['drawImage'](_0x40179b, -_0xa6dd5 * _0x20c687, -_0xa6dd5 * _0x20c687, 0x2 * _0xa6dd5 * _0x20c687, 0x2 * _0xa6dd5 * _0x20c687), _0x1d2dab['restore']());
var _0x68a825 = (_0x740c5b - this['spawnTime']) / 0x3e8,
    _0x3e041a = !(_0x31f3fc == 0x2 || _0x44408d) ? _0x21d673(_0x68a825, 2.5, 0.3, 0x2) : this['birdNoAnimationFlyWingAngle'],
    _0x5272a4 = this['getSkinImageObj'](this['getWing']('battleduck', 0x1, !![]));
if (_0x5272a4) {
    _0x1d2dab['save']();
    var _0x13d956 = -(-0.2 + _0x3e041a) * _0xa0b20a,
        _0xa6dd5 = this['rad'] * 0x1;
    _0x1d2dab['rotate'](_0x2bcbaa(0x2d) + _0x13d956);
    var _0x8e372e = 0x0,
        _0xa7a064 = this['rad'],
        _0x3e06e8 = _0xa6dd5 * 0x2 * 0.62,
        _0x910498 = _0xa6dd5 * 2.5,
        _0x176412 = 0.2 + _0x5d90fa,
        _0x3f4435 = 1.7 + _0x1126f5;
    _0x1d2dab['drawImage'](_0x5272a4, _0x8e372e + _0x3e06e8 * -_0x176412, _0xa7a064 + _0x910498 * -_0x3f4435, _0x3e06e8, _0x910498), _0x1d2dab['restore']();
}
var _0x5272a4 = this['getSkinImageObj'](this['getWing']('battleduck', 0x2, !![]));
if (_0x5272a4) {
    _0x1d2dab['save']();
    var _0x13d956 = -(-0.2 + _0x3e041a) * _0x2bcbaa(-0x5a),
        _0xa6dd5 = this['rad'] * 0x1;
    _0x1d2dab['rotate'](_0x2bcbaa(-0x2d) + _0x13d956);
    var _0x8e372e = 0x0,
        _0xa7a064 = this['rad'],
        _0x3e06e8 = _0xa6dd5 * 0x2 * 0.62,
        _0x910498 = _0xa6dd5 * 2.5,
        _0x176412 = 0.8 + _0x39710a,
        _0x3f4435 = 1.7 + _0x297def;
    _0x1d2dab['drawImage'](_0x5272a4, _0x8e372e + _0x3e06e8 * -_0x176412, _0xa7a064 + _0x910498 * -_0x3f4435, _0x3e06e8, _0x910498), _0x1d2dab['restore']();
}
var _0x574b6f = this['getSkinImageObj'](this['getHead']('battleduck', !![]));
if (_0x574b6f) {
    _0x1d2dab['save']();
    var _0xa6dd5 = this['rad'];
    _0x1d2dab['drawImage'](_0x574b6f, -_0xa6dd5 * _0x20c687, (-_0xa6dd5 + _0xa6dd5 * _0x507bdd) * _0x20c687, 0x2 * _0xa6dd5 * _0x20c687, 0x2 * _0xa6dd5 * _0x20c687), _0x1d2dab['restore']();
}
_0x1d2dab['restore']();
}, _0x34e55c['prototype']['getSpeciesPath'] = function (_0x283f28) {
return _0x283f28 + '/' + this['speciesType'];
}, _0x34e55c['prototype']['getWing'] = function (_0x140602, _0x1e4450, _0x348246) {
var _0x4c3819 = 'skins/' + (_0x348246 ? this['getSpeciesPath'](_0x140602) + '/' : _0x140602 + '/');
return _0x4c3819 += _0x140602 + '_wing' + _0x1e4450 + '.png', _0x4c3819;
}, _0x34e55c['prototype']['getBody'] = function (_0x169316, _0x47be89) {
var _0x678e17 = 'skins/' + (_0x47be89 ? this['getSpeciesPath'](_0x169316) + '/' : _0x169316 + '/');
return _0x678e17 += _0x169316 + '_body.png', _0x678e17;
}, _0x34e55c['prototype']['getHead'] = function (_0x11eea2, _0x1910e9) {
var _0x3f31ed = 'skins/' + (_0x1910e9 ? this['getSpeciesPath'](_0x11eea2) + '/' : _0x11eea2 + '/');
return _0x3f31ed += _0x11eea2 + '_head.png', _0x3f31ed;
};
var _0x5df84a = 0x85;

function _0x34e55c() {
_0x34e55c['superClass']['call'](this, _0x5df84a), console['log']('@@@@@@@@@@@@ BATTLE DUCK SPAWNED @@@@@@@@@');
}
window['BattleDuck'] = _0x34e55c, _0x13dc56['setCustomClassForGameObjType'](_0x34e55c, _0x5df84a);
var _0x4e8653 = _0x4e8653,
_0x1e3c43 = _0x3d6c08;
_0x4e8653['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x4e8653['prototype']['constructor'] = _0x4e8653, _0x4e8653['superClass'] = _0x1e3c43, _0x4e8653['prototype']['objSkinSpotsCanvas'] = null, _0x4e8653['prototype']['animalInfo'] = function () {
var _0x3a3731 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x3a3731['aniName'] = 'Giraffe';
    break;
case 0x1:
    _0x3a3731['aniName'] = 'Momaffie';
    break;
case 0x2:
    _0x3a3731['aniName'] = 'Girabie';
    break;
case 0x3:
    _0x3a3731['aniName'] = 'Momaffie Family';
    break;
case 0xca:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x3a3731['aniName'] = 'Quilin Giraffe';
        break;
    case 0x1:
        _0x3a3731['aniName'] = 'Draquorum';
    }
    break;
}
return _0x3a3731['upgradeText'] = 'UPGRADED to ' + _0x3a3731['aniName'] + '!\x0aGiraffe have huge legs and stomp anyone in their way!', _0x3a3731['aniCol'] = '#E9BD23', _0x3a3731['skinName'] = this['getSkinName'](), _0x3a3731;
}, _0x4e8653['prototype']['getSkinName'] = function () {
let _0x5d816e = this['getSpeciesPath']() + '/giraffe';
if (this['id'] == 0x0 && this['animalSpecies'] == 0x3) _0x5d816e += '_family';
return _0x5d816e;
}, _0x4e8653['prototype']['getSpeciesPath'] = function () {
return 'land/giraffe/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x4e8653['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
}, _0x4e8653['prototype']['getAbilityInfo'] = function (_0x5910c5) {
var _0x472e9f = {};
return _0x472e9f['abilName'] = 'Stomp!', _0x472e9f['abilImg'] = 'abilities/Stomp.svg', _0x472e9f['skinThemeID'] = this['skinThemeID'], _0x472e9f['mopeSeasonID'] = this['mopeSeasonID'], _0x472e9f;
}, _0x4e8653['prototype']['isEdibleOutlined'] = function () {
if (this['mommyID'] == _0x2fc9ba) return ![];
return _0x4e8653['superClass']['prototype']['isEdibleOutlined']['call'](this);
}, _0x4e8653['prototype']['readCustomData_onNewlyVisible'] = function (_0x15decd) {
_0x4e8653['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x15decd), this['mommyID'] = _0x15decd['readUInt32']();
};

function _0x4e8653() {
_0x4e8653['superClass']['call'](this, _0x4ad968);
}
window['Giraffe'] = _0x4e8653, _0x13dc56['setCustomClassForGameObjType'](_0x4e8653, _0x4ad968, _0x4f8d37);
var _0x19ee1b = _0x19ee1b,
_0x1e3c43 = _0x3d6c08;
_0x19ee1b['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x19ee1b['prototype']['constructor'] = _0x19ee1b, _0x19ee1b['superClass'] = _0x1e3c43, _0x19ee1b['prototype']['objSkinSpotsCanvas'] = null, _0x19ee1b['prototype']['getSkinName'] = function () {
let _0x255e07 = this['getSpeciesPath']() + '/giraffe';
if (this['specType'] > 0x0) _0x255e07 += '' + this['specType'];
if (this['id'] == 0x0 && this['animalSpecies'] == 0x2) _0x255e07 += '_family';
return _0x255e07;
}, _0x19ee1b['prototype']['getSpeciesPath'] = function () {
return 'forest/whitegiraffe/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x19ee1b['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x19ee1b['prototype']['animalInfo'] = function () {
var _0x18a9a4 = {};
switch (this['animalSpecies']) {
case 0x1:
    _0x18a9a4['aniName'] = 'White Giraffe';
    break;
case 0x2:
    _0x18a9a4['aniName'] = 'Giraffe Family';
    break;
}
return _0x18a9a4['aniDesc'] = '', _0x18a9a4['upgradeText'] = 'UPGRADED to ' + _0x18a9a4['aniName'] + '!\x0aWhite Giraffe are very aggressive and have huge legs and stomp anyone in their way!', _0x18a9a4['aniCol'] = '#E9BD23', _0x18a9a4['skinName'] = this['getSkinName'](), _0x18a9a4;
}, _0x19ee1b['prototype']['getAbilityInfo'] = function (_0x3eb0c7) {
var _0x1a7fa9 = {};
return _0x1a7fa9['abilName'] = 'Stomp!', _0x1a7fa9['abilImg'] = 'abilities/Stomp.svg', _0x1a7fa9['skinThemeID'] = this['skinThemeID'], _0x1a7fa9['mopeSeasonID'] = this['mopeSeasonID'], _0x1a7fa9;
};

function _0x19ee1b() {
_0x19ee1b['superClass']['call'](this, _0x4ad968);
}
window['WhiteGiraffe'] = _0x19ee1b, _0x13dc56['setCustomClassForGameObjType'](_0x19ee1b, _0x4ad968, _0xdaf2fe);
var _0x1e3c43 = _0x3d6c08;
_0xc6baf3['prototype'] = Object['create'](_0x1e3c43['prototype']), _0xc6baf3['prototype']['constructor'] = _0xc6baf3, _0xc6baf3['superClass'] = _0x1e3c43, _0xc6baf3['prototype']['getSkinName'] = function () {
return this['getSpeciesPath']() + '/turkey' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0xc6baf3['prototype']['getSpeciesPath'] = function () {
return 'forest/turkey/' + this['animalSpecies'];
}, _0xc6baf3['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0xc6baf3['prototype']['getWing'] = function (_0x4aaed3, _0x9494fd, _0x2bb17c) {
var _0x3ed0f9 = 'skins/' + this['getSpeciesPath']() + '/turkey';
return _0x3ed0f9 += '_wing' + _0x9494fd + '.png', _0x3ed0f9;
}, _0xc6baf3['prototype']['getHead'] = function (_0x3b37b6, _0x3c8ca5) {
var _0x47deba = 'skins/' + this['getSpeciesPath']() + '/turkey';
return _0x47deba += '_head.png', _0x47deba;
}, _0xc6baf3['prototype']['getAbilityInfo'] = function (_0x54433e) {
var _0xd871e6 = {};
if (this['flag_eff_isOnTree'] || this['flag_flying'] && this['flag_usingAbility']) _0xd871e6['abilName'] = 'Hold to Fly', _0xd871e6['abilImg'] = 'abilities/Fly.svg';
else this['flag_isClimbingHill'] ? (_0xd871e6['abilName'] = 'Shoots Eggs!', _0xd871e6['abilImg'] = 'abilities/Spit.svg') : (_0xd871e6['abilName'] = 'Front Kick\x0a(Hold to Charge)', _0xd871e6['abilImg'] = 'abilities/Kick.svg');
return _0xd871e6['skinThemeID'] = this['skinThemeID'], _0xd871e6['mopeSeasonID'] = this['mopeSeasonID'], _0xd871e6;
}, _0xc6baf3['prototype']['animalInfo'] = function () {
var _0x462dc3 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x462dc3['aniName'] = 'Turkey!';
    break;
}
return _0x462dc3['aniCol'] = '#FF9000', _0x462dc3['skinName'] = this['getSkinName'](), _0x462dc3['upgradeText'] = 'UPGRADED to ' + _0x462dc3['aniName'] + '!\x0aHold W to charge up a kick, fly from tree and shoot eggs from hill!', _0x462dc3;
};
var _0x3bb449 = 0.6,
_0x5363f8 = -1.5,
_0x50c798 = -0x2;
_0xc6baf3['prototype']['drawUnderSkinImg'] = function () {
_0x1d2dab['save']();
var _0x16a776 = this['rad'] * _0x3bb449,
    _0x1304f8 = 'tail';
if (this['flag_usingAbility']) {
    if (!this['flag_flying']) _0x1304f8 = 'tail1';
    _0x5363f8 = _0x50c798;
} else _0x5363f8 = -1.5;
_0x1304f8 = 'skins/' + this['getSpeciesPath']() + '/' + _0x1304f8 + '.png';
var _0x4ddd0f = this['getSkinImageObj'](_0x1304f8);
_0x4ddd0f && _0x1d2dab['drawImage'](_0x4ddd0f, -_0x16a776 * this['skinScale'] * 0x2, -_0x16a776 * this['skinScale'] * 0x2 + _0x16a776 * _0x5363f8, 0x2 * _0x16a776 * this['skinScale'] * 0x2, 0x3 * _0x16a776 * this['skinScale']), _0x1d2dab['restore']();
}, _0xc6baf3['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) return;
var _0x109162 = 0x1f4 / 0x154;
_0x1d2dab['save']();
var _0x295d61 = this['flag_flying'] ? 0x2d : 0x14,
    _0x335d1a = this['flag_flying'] ? 0x5a : 0x2d,
    _0x16a350 = this['flag_flying'] ? 0.2 : 0.01,
    _0x22d585 = this['flag_flying'] ? 2.5 : 2.2,
    _0x1d0df5 = this['flag_flying'] ? 2.5 : 2.2,
    _0x40a263 = this['flag_flying'] ? 0x0 : -0.4,
    _0x3d497c = this['flag_flying'] ? 0x0 : -0.2,
    _0xec1844 = this['flag_flying'] ? 0.5 : 1.2,
    _0x2e87f2 = this['flag_flying'] ? 0.3 : 0.1,
    _0x2e4092 = (_0x740c5b - this['spawnTime']) / 0x3e8,
    _0x433d9c = !(_0x31f3fc == 0x2 || _0x44408d) ? _0x21d673(_0x2e4092, _0xec1844, _0x2e87f2, 0x2) : this['birdNoAnimationFlyWingAngle'],
    _0x4c021b = this['getSkinImageObj'](this['getWing']('turkey', 0x1, !![]));
if (_0x4c021b) {
    _0x1d2dab['save']();
    var _0x3f4899 = -(-_0x16a350 + _0x433d9c) * _0x2bcbaa(_0x335d1a),
        _0x112a71 = this['rad'] * 0.8;
    _0x1d2dab['rotate'](_0x2bcbaa(_0x295d61) + _0x3f4899);
    var _0xee3ebf = 0x0,
        _0x402b84 = this['rad'],
        _0x37a3d9 = _0x112a71 * _0x1d0df5 * 0.62,
        _0x3f4e34 = _0x112a71 * _0x22d585,
        _0xb81a2d = 0.2 + _0x40a263,
        _0x52357a = 1.7 + _0x3d497c;
    _0x1d2dab['drawImage'](_0x4c021b, _0xee3ebf + _0x37a3d9 * -_0xb81a2d, _0x402b84 + _0x3f4e34 * -_0x52357a, _0x37a3d9, _0x3f4e34), _0x1d2dab['restore']();
}
var _0x4c021b = this['getSkinImageObj'](this['getWing']('turkey', 0x2, !![]));
if (_0x4c021b) {
    _0x1d2dab['save']();
    var _0x3f4899 = -(-_0x16a350 + _0x433d9c) * _0x2bcbaa(-_0x335d1a),
        _0x112a71 = this['rad'] * 0.8;
    _0x1d2dab['rotate'](_0x2bcbaa(-_0x295d61) + _0x3f4899);
    var _0xee3ebf = 0x0,
        _0x402b84 = this['rad'],
        _0x37a3d9 = _0x112a71 * _0x1d0df5 * 0.62,
        _0x3f4e34 = _0x112a71 * _0x22d585,
        _0xb81a2d = 0.8 - _0x40a263,
        _0x52357a = 1.7 + _0x3d497c;
    _0x1d2dab['drawImage'](_0x4c021b, _0xee3ebf + _0x37a3d9 * -_0xb81a2d, _0x402b84 + _0x3f4e34 * -_0x52357a, _0x37a3d9, _0x3f4e34), _0x1d2dab['restore']();
}
_0x1d2dab['restore']();
var _0x43eee7 = 0.1;
if (this['specType'] == 0x2) _0x43eee7 = -0.1;
var _0x16dd4b = this['getSkinImageObj'](this['getHead']('turkey', !![]));
if (_0x16dd4b) {
    _0x1d2dab['save']();
    var _0x112a71 = this['rad'];
    _0x1d2dab['drawImage'](_0x16dd4b, -_0x112a71 * _0x109162, (-_0x112a71 + _0x112a71 * _0x43eee7) * _0x109162, 0x2 * _0x112a71 * _0x109162, 0x2 * _0x112a71 * _0x109162), _0x1d2dab['restore']();
}
};

function _0xc6baf3() {
_0xc6baf3['superClass']['call'](this, _0x4ad968);
}
window['Turkey'] = _0xc6baf3;
var _0x1e0653 = 0x70;
_0x13dc56['setCustomClassForGameObjType'](_0xc6baf3, _0x4ad968, _0x1e0653);
var _0x1e3c43 = _0x131218;
_0x5cc871['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x5cc871['prototype']['constructor'] = _0x5cc871, _0x5cc871['superClass'] = _0x1e3c43, _0x5cc871['prototype']['mommyID'] = 0x0, _0x5cc871['prototype']['updateZ'] = function () {
this['z'] = this['flag_flying'] ? 0x3e8 : this['rad'];
}, _0x5cc871['prototype']['customDraw'] = function (_0x241249) {
_0x1d2dab['save']();
var _0x16f9ed = this['getSkinImageObj']('skins/forest/turkey/' + this['speciesType'] + '/turkeyegg' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
if (_0x16f9ed) {
    var _0x3fe55c = this['rad'];
    _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x16f9ed, -_0x3fe55c, -_0x3fe55c, 0x2 * _0x3fe55c, 0x2 * _0x3fe55c);
}
_0x1d2dab['restore']();
};
var _0x3b7963 = 0x86;

function _0x5cc871() {
_0x5cc871['superClass']['call'](this, _0x3b7963), this['doesDrawEffectScale'] = !![];
}
window['TurkeyEgg'] = _0x5cc871, _0x13dc56['setCustomClassForGameObjType'](_0x5cc871, _0x3b7963);
var _0x1e3c43 = _0x131218;
_0x189fee['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x189fee['prototype']['constructor'] = _0x189fee, _0x189fee['superClass'] = _0x1e3c43, _0x189fee['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x189fee['prototype']['customDraw'] = function (_0x5f6bfa) {
_0x1d2dab['save']();
var _0x6bdee = 'gameobj/' + this['oType'] + '/' + this['oType'] + (this['isEdibleOutlined']() ? '_e' : '') + '.png',
    _0x536e26 = this['getSkinImageObj'](_0x6bdee);
if (_0x536e26) {
    var _0x4aa883 = this['rad'];
    this['angle'] = this['rPer'] * Math['PI'] * 0x2, _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x536e26, -_0x4aa883, -_0x4aa883, 0x2 * _0x4aa883, 0x2 * _0x4aa883);
}
_0x1d2dab['restore']();
};
var _0x41474b = 0x87;

function _0x189fee() {
_0x189fee['superClass']['call'](this, _0x41474b), this['doesDrawEffectScale'] = !![];
}
window['TurkeyLeg'] = _0x189fee, _0x13dc56['setCustomClassForGameObjType'](_0x189fee, _0x41474b);
var _0x1e3c43 = _0x131218;
_0x36c463['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x36c463['prototype']['constructor'] = _0x36c463, _0x36c463['superClass'] = _0x1e3c43, _0x36c463['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x36c463['prototype']['customDraw'] = function (_0x4531a2) {
_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1;
var _0x48d501 = 'gameobj/' + this['oType'] + '/' + this['oType'] + (this['isEdibleOutlined']() ? '_e' : '') + '.png',
    _0xc176dc = this['getSkinImageObj'](_0x48d501);
if (_0xc176dc) {
    var _0x5f23ad = 0.15,
        _0x473fe9 = this['rad'] * 1.2;
    this['angle'] = this['rPer'] * Math['PI'] * 0x2, _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0xc176dc, -_0x473fe9, -_0x473fe9 + _0x473fe9 * _0x5f23ad, 0x2 * _0x473fe9, 0x2 * _0x473fe9);
}
_0x1d2dab['restore']();
};
var _0x288dfc = 0x88;

function _0x36c463() {
_0x36c463['superClass']['call'](this, _0x288dfc), this['doesDrawEffectScale'] = !![];
}
window['TurkeyBaked'] = _0x36c463, _0x13dc56['setCustomClassForGameObjType'](_0x36c463, _0x288dfc);
var _0x1e3c43 = _0x131218;
_0x1c4723['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x1c4723['prototype']['constructor'] = _0x1c4723, _0x1c4723['superClass'] = _0x1e3c43, _0x1c4723['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x1c4723['prototype']['customDraw'] = function (_0x4ca8d5) {
_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1;
var _0x2988d6 = 'gameobj/' + this['oType'] + '/' + this['oType'] + (this['isEdibleOutlined']() ? '_e' : '') + '.png',
    _0x56f892 = this['getSkinImageObj'](_0x2988d6);
if (_0x56f892) {
    var _0x5db8b4 = this['rad'] * 1.1;
    this['angle'] = this['rPer'] * Math['PI'] * 0x2, _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x56f892, -_0x5db8b4, -_0x5db8b4, 0x2 * _0x5db8b4, 0x2 * _0x5db8b4);
}
_0x1d2dab['restore']();
};
var _0xbedff6 = 0x89;

function _0x1c4723() {
_0x1c4723['superClass']['call'](this, _0xbedff6), this['doesDrawEffectScale'] = !![];
}
window['PumpkinPie'] = _0x1c4723, _0x13dc56['setCustomClassForGameObjType'](_0x1c4723, _0xbedff6);
var _0x1e3c43 = _0x131218;
_0x4aa6eb['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x4aa6eb['prototype']['constructor'] = _0x4aa6eb, _0x4aa6eb['superClass'] = _0x1e3c43, _0x4aa6eb['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x4aa6eb['prototype']['customDraw'] = function (_0x5db7f6) {
var _0x436821 = ![],
    _0x443825 = _0x3c55ea[_0x2fc9ba];
(_0x443825 && _0x443825['lastHidingHoleID'] == this['id'] || _0x5810d2 == this['id']) && (_0x436821 = !![]);
if (_0x5db7f6) {} else {
    var _0x4e67e8 = 1.4,
        _0x599ac8 = 0.05,
        _0x412775 = 'igloo',
        _0x26c877 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + this['oType'] + '.png');
    if (_0x26c877) {
        _0x1d2dab['save']();
        var _0x443825 = _0x3c55ea[_0x2fc9ba];
        if (_0x443825 && _0x443825['lastHidingHoleID'] == this['id']) _0x1d2dab['globalAlpha'] = 0.5;
        var _0x112f1a = this['rad'] * _0x4e67e8;
        _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x26c877, -_0x112f1a, -_0x112f1a + _0x599ac8 * _0x112f1a, _0x112f1a * 0x2, _0x112f1a * 0x2), _0x1d2dab['restore']();
    }
}
if (_0x436821) {
    _0x1d2dab['save'](), _0x1d2dab['rotate'](this['angle'] + _0x2bcbaa(0x73)), _0x1d2dab['globalAlpha'] = 0x1;
    var _0x43afae = Math['PI'] * 0x2 * this['timerAngle'];
    _0x1d2dab['beginPath'](), _0x1d2dab['lineWidth'] = 0x7, _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - 0x4), 0x0, _0x43afae), _0x1d2dab['strokeStyle'] = _0xf1a8b5, _0x1d2dab['stroke'](), _0x1d2dab['restore']();
}
}, _0x4aa6eb['prototype']['timerAngle'] = 0x0, _0x4aa6eb['prototype']['nTimerAngle'] = 0x0, _0x4aa6eb['prototype']['onLerpUpdate'] = function (_0x4d0323) {
_0x4aa6eb['superClass']['prototype']['onLerpUpdate']['call'](this, _0x4d0323), this['timerAngle'] += (this['nTimerAngle'] - this['timerAngle']) * 0.1;
}, _0x4aa6eb['prototype']['readUpdatedProperty'] = function (_0x2383c2, _0x4091c0) {
_0x2383c2 == _0x2b741e && (this['timeLeft'] = _0x4091c0['readUInt16']() / 0x64, this['nTimerAngle'] = this['timeLeft'] / 0x64);
};
var _0x1df0f9 = 0x8a;

function _0x4aa6eb() {
_0x4aa6eb['superClass']['call'](this, _0x1df0f9), this['doesDrawEffectScale'] = ![];
}
window['Igloo'] = _0x4aa6eb, _0x13dc56['setCustomClassForGameObjType'](_0x4aa6eb, _0x1df0f9);
var _0x1e3c43 = _0x131218;
_0x5301a4['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x5301a4['prototype']['constructor'] = _0x5301a4, _0x5301a4['superClass'] = _0x1e3c43, _0x5301a4['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x5301a4['prototype']['customDraw'] = function (_0x49d612) {};
var _0x38b130 = 0x8b;

function _0x5301a4() {
_0x5301a4['superClass']['call'](this, _0x38b130), this['doesDrawEffectScale'] = ![];
}
window['IglooOpening'] = _0x5301a4, _0x13dc56['setCustomClassForGameObjType'](_0x5301a4, _0x38b130);
var _0x1e3c43 = _0x131218;
_0x4066f7['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x4066f7['prototype']['constructor'] = _0x4066f7, _0x4066f7['superClass'] = _0x1e3c43, _0x4066f7['prototype']['updateZ'] = function () {
this['z'] = -0x63;
};
var _0x18a1c2 = '#9F8641',
_0x3cb55d = '#735e28',
_0x5618ba = '#63501d',
_0x234dd8 = '#735e28',
_0x229276 = '#806a30';
_0x4066f7['prototype']['customDraw'] = function (_0xe22517) {
_0x1d2dab['save']();
var _0x27dc67 = ![],
    _0x45bf29 = _0x3c55ea[_0x2fc9ba];
(_0x45bf29 && _0x45bf29['lastHidingHoleID'] == this['id'] || _0x5810d2 == this['id']) && (_0x27dc67 = !![]);
if (_0xe22517) {} else {
    var _0x344b1c = 0.5,
        _0x5e93fb = 1.7;
    _0x1d2dab['save'](); {
        if (_0x27dc67) {
            _0x1d2dab['globalAlpha'] = 0x1;
            var _0xe9f37a = this['rad'];
            this['drawOutlinedCircleRad']('', _0x18a1c2, _0xe9f37a), _0x444e67(0x0 - this['rPer'], 0x0 - this['rPer'], Math['max'](0x0, _0xe9f37a - 0x7), _0x3cb55d), _0x444e67(0x0 + this['rPer'], 0x1, Math['max'](0x0, _0xe9f37a - 0xc), _0x5618ba), _0x1d2dab['globalAlpha'] = this['alpha'] * 0.7, _0xe9f37a = _0xe9f37a * 0.7, _0x444e67(0x0 - this['rPer'], 0x0 - this['rPer'], Math['max'](0x0, _0xe9f37a - 0x7), _0x234dd8), _0xe9f37a = _0xe9f37a * 0.5, _0x1d2dab['globalAlpha'] = this['alpha'] * 0.3, _0x444e67(0x0 - this['rPer'], 0x0 - this['rPer'], Math['max'](0x0, _0xe9f37a), _0x229276);
        }
        if (this['curBiome'] == _0x506414) {
            if (!_0x27dc67) {
                var _0x61aeb6 = 'gameobj/' + this['oType'] + '/' + this['curBiome'] + '.png',
                    _0x1dcd70 = this['getSkinImageObj'](_0x61aeb6);
                if (_0x1dcd70) {
                    _0x1d2dab['save']();
                    var _0x4709d5 = this['rad'];
                    _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x1dcd70, -_0x4709d5, -_0x4709d5, _0x4709d5 * 0x2, _0x4709d5 * 0x2), _0x1d2dab['restore']();
                }
            }
        }
    }
    _0x1d2dab['restore']();
    if (this['curBiome'] == _0x506414) {
        var _0x61aeb6 = 'gameobj/' + this['oType'] + '/cave_bottom_' + this['curBiome'] + '.png',
            _0x1dcd70 = this['getSkinImageObj'](_0x61aeb6);
        if (_0x1dcd70) {
            _0x1d2dab['save']();
            var _0x4709d5 = this['rad'] * _0x344b1c;
            _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x1dcd70, -_0x4709d5, -_0x4709d5 + _0x5e93fb * _0x4709d5, _0x4709d5 * 0x2, _0x4709d5 * 0x2), _0x1d2dab['restore']();
        }
        if (!_0x27dc67) {
            var _0x61aeb6 = 'gameobj/' + this['oType'] + '/cave_top_' + this['curBiome'] + '.png',
                _0x1dcd70 = this['getSkinImageObj'](_0x61aeb6);
            if (_0x1dcd70) {
                _0x1d2dab['save']();
                var _0x4709d5 = this['rad'] * _0x344b1c;
                _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x1dcd70, -_0x4709d5, -_0x4709d5 + _0x5e93fb * _0x4709d5, _0x4709d5 * 0x2, _0x4709d5 * 0x2), _0x1d2dab['restore']();
            }
        }
    } else {
        var _0x1dcd70 = this['getSkinImageObj']('img/cave/' + this['curBiome'] + '/cave_bottom.png');
        if (_0x1dcd70) {
            _0x1d2dab['save']();
            var _0x4709d5 = this['rad'] * _0x344b1c;
            _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x1dcd70, -_0x4709d5, -_0x4709d5 + _0x5e93fb * _0x4709d5, _0x4709d5 * 0x2, _0x4709d5 * 0x2), _0x1d2dab['restore']();
        }
        if (!_0x27dc67) {
            var _0x1dcd70 = this['getSkinImageObj']('img/cave/' + this['curBiome'] + '/cave_top.png');
            if (_0x1dcd70) {
                _0x1d2dab['save']();
                var _0x4709d5 = this['rad'] * _0x344b1c;
                _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x1dcd70, -_0x4709d5, -_0x4709d5 + _0x5e93fb * _0x4709d5, _0x4709d5 * 0x2, _0x4709d5 * 0x2), _0x1d2dab['restore']();
            }
        }
    }
}
_0x1d2dab['restore']();
if (_0x27dc67) {
    _0x1d2dab['save'](), _0x1d2dab['rotate'](this['angle'] + _0x2bcbaa(0x73)), _0x1d2dab['globalAlpha'] = 0.5;
    var _0xe9f37a = Math['PI'] * 0x2 * this['timerAngle'];
    _0x1d2dab['beginPath'](), _0x1d2dab['lineWidth'] = 0x6, _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - 0x4), 0x0, _0xe9f37a), _0x1d2dab['strokeStyle'] = _0xf1a8b5, _0x1d2dab['stroke'](), _0x1d2dab['restore']();
}
}, _0x4066f7['prototype']['timerAngle'] = 0x0, _0x4066f7['prototype']['nTimerAngle'] = 0x0, _0x4066f7['prototype']['onLerpUpdate'] = function (_0x301e5b) {
_0x4066f7['superClass']['prototype']['onLerpUpdate']['call'](this, _0x301e5b), this['timerAngle'] += (this['nTimerAngle'] - this['timerAngle']) * 0.1;
}, _0x4066f7['prototype']['readUpdatedProperty'] = function (_0x3d5866, _0x5b5ea8) {
_0x3d5866 == _0x2b741e && (this['timeLeft'] = _0x5b5ea8['readUInt16']() / 0x64, this['nTimerAngle'] = this['timeLeft'] / 0x64);
};
var _0x5d7fc4 = 0x8c;

function _0x4066f7() {
_0x4066f7['superClass']['call'](this, _0x5d7fc4), this['doesDrawEffectScale'] = ![];
}
window['Cave'] = _0x4066f7, _0x13dc56['setCustomClassForGameObjType'](_0x4066f7, _0x5d7fc4);
var _0x1e3c43 = _0x131218;
_0x51d4df['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x51d4df['prototype']['constructor'] = _0x51d4df, _0x51d4df['superClass'] = _0x1e3c43, _0x51d4df['prototype']['updateZ'] = function () {
this['z'] = 0x64;
}, _0x51d4df['prototype']['customDraw'] = function (_0x7fa2f) {};
var _0x2b88f5 = 0x8d;

function _0x51d4df() {
_0x51d4df['superClass']['call'](this, _0x2b88f5), this['doesDrawEffectScale'] = ![];
}
window['CaveOpening'] = _0x51d4df, _0x13dc56['setCustomClassForGameObjType'](_0x51d4df, _0x2b88f5);
var _0x1e3c43 = _0x3d6c08;
_0x31ae06['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x31ae06['prototype']['constructor'] = _0x31ae06, _0x31ae06['superClass'] = _0x1e3c43, _0x31ae06['prototype']['animalInfo'] = function () {
var _0xda4d6 = {};
return _0xda4d6['aniName'] = 'Santa!', _0xda4d6['skinName'] = 'santa/' + this['animalSpecies'] + '/santa', _0xda4d6['aniDesc'] = '', _0xda4d6['upgradeText'] = 'UPGRADED to ' + _0xda4d6['aniName'] + '\x0a Santa distributes gifts to everyone!', _0xda4d6['aniCol'] = '#231f18', _0xda4d6;
};
var _0x351894 = 0.84,
_0x26e96a = 0.47,
_0x32feed = 0x2d,
_0x5e6dd3 = -0x1e,
_0x6ec369 = 1.3,
_0x4c7ab4 = 1.5,
_0x25b1ef = 0.3,
_0x2fe1ea = 0.95,
_0x5b86e7 = 0.5,
_0x2c6e98 = 0x2d,
_0x48933f = 0x0,
_0x329153 = 1.2,
_0x9a5632 = 0.3,
_0x2335c3 = 0.1;
_0x31ae06['prototype']['updateZ'] = function () {
this['z'] = 0x3f2 + this['rad'];
if (this['flag_flying']) this['z'] += 0x18704;
}, _0x31ae06['prototype']['calculateZIndex'] = function () {
this['updateZ']();
}, _0x31ae06['prototype']['drawUnderSkinTail'] = function (_0x51f369) {}, _0x31ae06['prototype']['flyingHatAnimation'] = function () {
(!this['hideFeatures'] || this['flag_flying']) && (this['santaHead'](0x0), this['hohohoAnimation'](0x0));
var _0x42acfe = (_0x740c5b - this['spawnTime']) / 0x3e8,
    _0x1326a8 = _0x21d673(_0x42acfe, _0x9a5632, _0x2335c3, 0x2),
    _0x2c07fe = this['getSkinImageObj']('skins/santa/' + this['animalSpecies'] + '/hat.png');
if (_0x2c07fe) {
    _0x1d2dab['save']();
    var _0x2c9212 = -(-0.2 + _0x1326a8) * _0x2bcbaa(_0x2c6e98),
        _0x3a99b4 = this['rad'] * _0x329153;
    _0x1d2dab['rotate'](_0x2bcbaa(_0x48933f) + _0x2c9212);
    var _0x101b93 = 0x0,
        _0x58cfee = this['rad'],
        _0x243a5a = _0x3a99b4 * 0x2,
        _0x9b00db = _0x3a99b4 * 0x2,
        _0x5cbe74 = _0x5b86e7,
        _0x14f1eb = _0x2fe1ea;
    _0x1d2dab['drawImage'](_0x2c07fe, _0x101b93 + _0x243a5a * -_0x5cbe74, _0x58cfee + _0x9b00db * -_0x14f1eb, _0x243a5a, _0x9b00db), _0x1d2dab['restore']();
}
}, _0x31ae06['prototype']['drawSkinCustomization'] = function () {
if (this['flag_flying']) this['flyingHatAnimation']();
else {
    if (!this['hideFeatures'] || this['flag_flying']) {
        if (this['specType'] == 0x0) this['bellhandAnimation'](0x0);
        this['santaHead'](0x0), this['hohohoAnimation'](0x0);
    }
}
}, _0x31ae06['prototype']['hideFeatures'] = ![], _0x31ae06['prototype']['bellhandAnimation'] = function (_0x9072de) {
var _0x3c7d6d = (_0x740c5b - this['spawnTime']) / 0x3e8,
    _0xae8f53 = _0x21d673(_0x3c7d6d, _0x4c7ab4, _0x25b1ef, 0x2),
    _0x2c2fbb = this['getSkinImageObj']('skins/santa/' + this['animalSpecies'] + '/bellhand.png');
if (_0x2c2fbb) {
    _0x1d2dab['save']();
    var _0x4fc135 = -(-0.2 + _0xae8f53) * _0x2bcbaa(_0x32feed),
        _0x289d67 = this['rad'] * _0x6ec369;
    _0x1d2dab['rotate'](_0x2bcbaa(_0x5e6dd3) + _0x4fc135);
    var _0x27996a = 0x0,
        _0x24e4e1 = this['rad'],
        _0xb4b4f = _0x289d67 * 0x2,
        _0x362776 = _0x289d67 * 0x2,
        _0x1220d1 = _0x26e96a,
        _0x1d9c2c = _0x351894;
    _0x1d2dab['drawImage'](_0x2c2fbb, _0x27996a + _0xb4b4f * -_0x1220d1, _0x24e4e1 + _0x362776 * -_0x1d9c2c, _0xb4b4f, _0x362776), _0x1d2dab['restore']();
}
}, _0x31ae06['prototype']['hohohoNextT'] = +new Date() + 0x1388, _0x31ae06['prototype']['hohohoAnimation'] = function (_0x52fc21) {
if (_0x740c5b > this['hohohoNextT']) {
    var _0x400854 = -0.1 + _0x52fc21,
        _0x19f100 = 0x1f4 / 0x154,
        _0x5a8d13 = Math['trunc'](_0x740c5b / 0xb4) % 0x3,
        _0x10dbb4 = this['getSkinImageObj']('skins/santa/' + this['animalSpecies'] + '/santa_mouth' + _0x5a8d13 + '.png');
    if (_0x10dbb4) {
        _0x1d2dab['save']();
        var _0x5ed385 = this['rad'];
        _0x1d2dab['drawImage'](_0x10dbb4, -_0x5ed385 * _0x19f100, (-_0x5ed385 + _0x5ed385 * _0x400854) * _0x19f100, 0x2 * _0x5ed385 * _0x19f100, 0x2 * _0x5ed385 * _0x19f100), _0x1d2dab['restore']();
    }
    _0x740c5b > this['hohohoNextT'] + 0x5dc && (this['hohohoNextT'] = +new Date() + 0x2710);
}
}, _0x31ae06['prototype']['getSkinImageObj'] = function (_0x19f747) {
return this['skinThemeID'] = 0x0, _0x31ae06['superClass']['prototype']['getSkinImageObj']['call'](this, _0x19f747);
}, _0x31ae06['prototype']['santaHead'] = function (_0x32609a) {
var _0x1e034e = 0.1,
    _0x22acf3 = 0x1f4 / 0x154,
    _0x3ce34a = this['flag_flying'] ? '2' : '';
if (this['specType'] == 0x2) _0x3ce34a = '3';
var _0x466fda = this['getSkinImageObj']('skins/santa/' + this['animalSpecies'] + '/santa_head' + _0x3ce34a + '.png');
if (_0x466fda) {
    _0x1d2dab['save']();
    var _0x15978d = this['rad'];
    _0x1d2dab['drawImage'](_0x466fda, -_0x15978d * _0x22acf3, (-_0x15978d + _0x15978d * _0x1e034e) * _0x22acf3, 0x2 * _0x15978d * _0x22acf3, 0x2 * _0x15978d * _0x22acf3), _0x1d2dab['restore']();
}
}, _0x31ae06['prototype']['getAbilityInfo'] = function (_0x453f64) {
var _0x137383 = {};
switch (_0x453f64) {
case _0x2f96ef:
    _0x137383['abilName'] = 'Fly High!', _0x137383['abilImg'] = 'skins/santa/' + this['animalSpecies'] + '/ability_santa_flying.png';
    break;
case _0x11dc57:
    _0x137383['abilName'] = 'Gives Gifts!', _0x137383['abilImg'] = 'skins/santa/' + this['animalSpecies'] + '/ability_santa_throwgifts.png';
    break;
case _0x5eee86:
    _0x137383['abilName'] = 'Flying Sleigh!', _0x137383['abilImg'] = 'skins/santa/' + this['animalSpecies'] + '/ability_santa_flyingsleigh.png';
    break;
}
return _0x137383['skinThemeID'] = this['skinThemeID'], _0x137383['mopeSeasonID'] = this['mopeSeasonID'], _0x137383;
}, _0x31ae06['prototype']['getSkinName'] = function () {
var _0x41d3c5 = '';
return _0x41d3c5 = 'santa/' + this['animalSpecies'] + '/santa' + (this['specType'] == 0x0 ? '' : this['specType']), _0x41d3c5;
};

function _0x31ae06() {
_0x31ae06['superClass']['call'](this, _0x4ad968);
}
window['Santa'] = _0x31ae06, _0x13dc56['setCustomClassForGameObjType'](_0x31ae06, _0x4ad968, _0x82a74);
var _0x1e3c43 = _0x131218;
_0x2871eb['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x2871eb['prototype']['constructor'] = _0x2871eb, _0x2871eb['superClass'] = _0x1e3c43;
var _0x52482a = 0x3f2;
_0x2871eb['prototype']['updateZ'] = function () {
this['z'] = 0x3f2;
if (this['flag_flying']) this['z'] += 0x186a0;
}, _0x2871eb['prototype']['customDraw'] = function (_0x1d7106) {
var _0x48d262 = this['getSkinImageObj']('skins/santa/0/sleigh.png');
if (_0x48d262) {
    _0x1d2dab['save']();
    var _0x12417f = this['rad'] * 0x1;
    _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x48d262, -_0x12417f, -_0x12417f, _0x12417f * 0x2, _0x12417f * 0x2), _0x1d2dab['restore']();
}
};

function _0x2871eb() {
_0x2871eb['superClass']['call'](this, _0x53caef);
}
window['Sleigh'] = _0x2871eb, _0x13dc56['setCustomClassForGameObjType'](_0x2871eb, _0x53caef);
var _0x1e3c43 = _0x3d6c08;
_0x50e144['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x50e144['prototype']['constructor'] = _0x50e144, _0x50e144['superClass'] = _0x1e3c43;
var _0x335f5f = 0x186a0;
_0x50e144['prototype']['updateZ'] = function () {
this['z'] = 0x3e8 + this['rad'] + this['rowNumber'];
if (this['flag_flying']) this['z'] += _0x335f5f;
}, _0x50e144['prototype']['calculateZIndex'] = function () {
this['updateZ']();
}, _0x50e144['prototype']['animalInfo'] = function () {
var _0x2ad485 = {};
return _0x2ad485['aniName'] = 'Rudolph!', _0x2ad485['skinName'] = 'santa/rudolph', _0x2ad485['upgradeText'] = 'UPGRADED to Rudolph!\x0a Rudolph paws turn very well on ice!\x0a Press W to howl!', _0x2ad485['aniCol'] = '#6B6B6B', _0x2ad485;
}, _0x50e144['prototype']['getAbilityInfo'] = function (_0x4c2f1c) {
var _0x102e0f = {};
return _0x102e0f['abilName'] = 'Howl!', _0x102e0f['abilImg'] = 'abilities/Howl.svg', _0x102e0f;
}, _0x50e144['prototype']['getSkinName'] = function () {
var _0x4f65c5 = '';
return _0x4f65c5 = 'santa/0/' + (this['isRudolph'] ? 'rudolph' : 'deer'), _0x4f65c5 += this['specType'] == 0x0 ? '' : 0x1, _0x4f65c5;
}, _0x50e144['prototype']['drawAnimalUnderSkinCircle'] = function (_0x47a828, _0x239d77) {
if (!this['flag_isGrabbed']) {
    if (this['playerNum'] == 0x1) _0x47a828 = 'cyan';
    else {
        if (this['playerNum'] == 0x2) _0x47a828 = 'yellow';
        else this['flag_eff_isOnSpiderWeb'] && (_0x47a828 = 'white');
    }
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = this['isAnimalInside1v1Arena']() ? 0.3 : this['idealOp'], _0x444e67(0x0, 0x0, this['rad'], _0x47a828), _0x1d2dab['restore']();
}
}, _0x50e144['prototype']['drawLights'] = function () {
var _0x17c6e3 = '/skins/' + this['getSkinName'](),
    _0x1d3993 = this['getSkinImagePath'](_0x17c6e3),
    _0x5f412c = this['skinScale'],
    _0x2799c2 = this['skinRad'];
}, _0x50e144['prototype']['afterCustomDraw'] = function (_0x23ebc4) {
if (this['isRudolph']) this['drawLights']();
var _0x2488c2 = -0x1,
    _0x962de = '#b84831',
    _0x23c12b = 0x4 * (this['curRad'] / this['startRad']),
    _0xefcb3d = 0x1;
this['drawRope'](this['rope1_x'], this['rope1_y'], this['deerPos1_x'], this['deerPos1_y'], _0x962de, _0x23c12b, _0x2488c2, _0xefcb3d), this['drawRope'](this['rope2_x'], this['rope2_y'], this['deerPos2_x'], this['deerPos2_y'], _0x962de, _0x23c12b, _0x2488c2, _0xefcb3d), _0x962de = 'white', _0x23c12b = 0x1 * (this['curRad'] / this['startRad']), _0xefcb3d = 0.3, this['drawRope'](this['rope1_x'], this['rope1_y'], this['deerPos1_x'], this['deerPos1_y'], _0x962de, _0x23c12b, _0x2488c2, _0xefcb3d), this['drawRope'](this['rope2_x'], this['rope2_y'], this['deerPos2_x'], this['deerPos2_y'], _0x962de, _0x23c12b, _0x2488c2, _0xefcb3d);
}, _0x50e144['prototype']['drawRope'] = function (_0x2ff981, _0x3091f7, _0x17c43f, _0x49fe12, _0x3eca92, _0x54312c, _0x12b653, _0x97823c) {
_0x1d2dab['save'](), _0x1d2dab['strokeStyle'] = _0x3eca92, _0x1d2dab['lineWidth'] = _0x54312c * (this['curRad'] / this['startRad']), _0x1d2dab['globalAlpha'] = _0x97823c, _0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](_0x2ff981, _0x3091f7), _0x1d2dab['quadraticCurveTo'](_0x2ff981, _0x49fe12 - _0x12b653, _0x17c43f, _0x49fe12), _0x1d2dab['stroke'](), _0x1d2dab['restore']();
}, _0x50e144['prototype']['setOpacityForFlyingAnimals'] = function (_0x32ef53) {
!(this['id'] == _0x2fc9ba || this['santaID'] == _0x2fc9ba) && (this['idealOp'] = 0.6);
}, _0x50e144['prototype']['onLerpUpdate'] = function (_0x44d445) {
this['rope1_x'] = _0x44d445 * (this['rope1_nx'] - this['rope1_ox']) + this['rope1_ox'], this['rope1_y'] = _0x44d445 * (this['rope1_ny'] - this['rope1_oy']) + this['rope1_oy'], this['deerPos1_x'] = _0x44d445 * (this['deerpos1_nx'] - this['deerpos1_ox']) + this['deerpos1_ox'], this['deerPos1_y'] = _0x44d445 * (this['deerpos1_ny'] - this['deerpos1_oy']) + this['deerpos1_oy'], this['rope2_x'] = _0x44d445 * (this['rope2_nx'] - this['rope2_ox']) + this['rope2_ox'], this['rope2_y'] = _0x44d445 * (this['rope2_ny'] - this['rope2_oy']) + this['rope2_oy'], this['deerPos2_x'] = _0x44d445 * (this['deerpos2_nx'] - this['deerpos2_ox']) + this['deerpos2_ox'], this['deerPos2_y'] = _0x44d445 * (this['deerpos2_ny'] - this['deerpos2_oy']) + this['deerpos2_oy'];
}, _0x50e144['prototype']['readCustomData_onNewlyVisible'] = function (_0x26cf05) {
_0x50e144['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x26cf05), this['santaID'] = _0x26cf05['readUInt32'](), this['rowNumber'] = _0x26cf05['readUInt8'](), this['isRudolph'] = _0x26cf05['readUInt8']() == 0x1, this['startRad'] = _0x26cf05['readUInt16']() / 0x64, this['curRad'] = _0x26cf05['readUInt16']() / 0x64, this['readInfo'](_0x26cf05), this['rope1_nx'] = this['rope1_ox'] = this['rope1_x'] = this['x'], this['rope1_ny'] = this['rope1_oy'] = this['rope1_y'] = this['y'], this['deerpos1_ox'] = this['deerPos1_x'] = this['deerpos1_nx'] = this['x'], this['deerpos1_oy'] = this['deerPos1_y'] = this['deerpos1_ny'] = this['y'], this['rope2_nx'] = this['rope2_ox'] = this['rope2_x'] = this['x'], this['rope2_ny'] = this['rope2_oy'] = this['rope2_y'] = this['y'], this['deerpos2_ox'] = this['deerPos2_x'] = this['deerpos2_nx'] = this['x'], this['deerpos2_oy'] = this['deerPos2_y'] = this['deerpos2_ny'] = this['y'];
}, _0x50e144['prototype']['rope1_x'] = 0x0, _0x50e144['prototype']['rope1_y'] = 0x0, _0x50e144['prototype']['deerPos1_x'] = 0x0, _0x50e144['prototype']['deerPos1_y'] = 0x0, _0x50e144['prototype']['rope2_x'] = 0x0, _0x50e144['prototype']['rope2_y'] = 0x0, _0x50e144['prototype']['deerPos2_x'] = 0x0, _0x50e144['prototype']['deerPos2_y'] = 0x0, _0x50e144['prototype']['webState'] = 0x0, _0x50e144['prototype']['readInfo'] = function (_0x5aa000) {
this['customUpdatedProperty'](_0x744ce0, _0x5aa000), this['customUpdatedProperty'](_0x40b7e9, _0x5aa000), this['customUpdatedProperty'](_0x50e577, _0x5aa000), this['customUpdatedProperty'](_0x2b5a90, _0x5aa000);
}, _0x50e144['prototype']['customUpdatedProperty'] = function (_0x512a84, _0x8c54d2) {
if (_0x512a84 == _0x744ce0) {
    var _0x4b8562 = _0x8c54d2['readUInt16']() / 0x4,
        _0x1ba1c2 = _0x8c54d2['readUInt16']() / 0x4;
    this['rope1_ox'] = this['rope1_x'], this['rope1_oy'] = this['rope1_y'], this['rope1_nx'] = _0x4b8562, this['rope1_ny'] = _0x1ba1c2;
} else {
    if (_0x512a84 == _0x40b7e9) {
        var _0x4062d4 = _0x8c54d2['readUInt16']() / 0x4,
            _0x4f04ce = _0x8c54d2['readUInt16']() / 0x4;
        this['rope2_ox'] = this['rope2_x'], this['rope2_oy'] = this['rope2_y'], this['rope2_nx'] = _0x4062d4, this['rope2_ny'] = _0x4f04ce;
    } else {
        if (_0x512a84 == _0x50e577) {
            var _0x415a6d = _0x8c54d2['readUInt16']() / 0x4,
                _0x2f5953 = _0x8c54d2['readUInt16']() / 0x4;
            this['deerpos1_ox'] = this['deerPos1_x'], this['deerpos1_oy'] = this['deerPos1_y'], this['deerpos1_nx'] = _0x415a6d, this['deerpos1_ny'] = _0x2f5953;
        } else {
            if (_0x512a84 == _0x2b5a90) {
                var _0x3ad3da = _0x8c54d2['readUInt16']() / 0x4,
                    _0x4c8cf5 = _0x8c54d2['readUInt16']() / 0x4;
                this['deerpos2_ox'] = this['deerPos2_x'], this['deerpos2_oy'] = this['deerPos2_y'], this['deerpos2_nx'] = _0x3ad3da, this['deerpos2_ny'] = _0x4c8cf5;
            }
        }
    }
}
};

function _0x50e144() {
_0x50e144['superClass']['call'](this, _0x4ad968);
}
window['Rudolph'] = _0x50e144, _0x13dc56['setCustomClassForGameObjType'](_0x50e144, _0x4ad968, _0xa0dcbc);
var _0x1e3c43 = _0x131218;
_0x3bc9dc['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x3bc9dc['prototype']['constructor'] = _0x3bc9dc, _0x3bc9dc['superClass'] = _0x1e3c43;
var _0x5c84d5 = 0x3f0;
_0x3bc9dc['prototype']['updateZ'] = function () {
this['z'] = 0x3f0;
if (this['flag_flying']) this['z'] += 0x186a0;
}, _0x3bc9dc['prototype']['customDraw'] = function (_0x47580f) {
_0x444e67(0x0, 0x0, this['curRad'], '#ebac2d'), _0x444e67(0x0, 0x0, this['curRad'] * 0.6, '#ffbc33');
}, _0x3bc9dc['prototype']['beforeCustomDraw'] = function (_0x549fca) {
_0x1d2dab['save'](), _0x1d2dab['strokeStyle'] = '#ffbc33', _0x1d2dab['lineWidth'] = 0xa * (this['curRad'] / this['startRad']), _0x1d2dab['globalAlpha'] = 0x1, _0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](this['webX'], this['webY']), _0x1d2dab['lineTo'](this['spiderX'], this['spiderY']), _0x1d2dab['stroke'](), _0x1d2dab['restore'](), _0x1d2dab['save'](), _0x1d2dab['strokeStyle'] = 'gold', _0x1d2dab['lineWidth'] = 0x6 * (this['curRad'] / this['startRad']), _0x1d2dab['globalAlpha'] = 0x1, _0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](this['webX'], this['webY']), _0x1d2dab['lineTo'](this['spiderX'], this['spiderY']), _0x1d2dab['stroke'](), _0x1d2dab['restore']();
}, _0x3bc9dc['prototype']['onLerpUpdate'] = function (_0x332917) {
this['webX'] = _0x332917 * (this['web_nx'] - this['web_ox']) + this['web_ox'], this['webY'] = _0x332917 * (this['web_ny'] - this['web_oy']) + this['web_oy'], this['spiderX'] = _0x332917 * (this['spider_nx'] - this['spider_ox']) + this['spider_ox'], this['spiderY'] = _0x332917 * (this['spider_ny'] - this['spider_oy']) + this['spider_oy'];
}, _0x3bc9dc['prototype']['readCustomData_onUpdate'] = function (_0x1c78d7) {
_0x3bc9dc['superClass']['prototype']['readCustomData_onUpdate']['call'](this, _0x1c78d7), this['readInfo'](_0x1c78d7);
}, _0x3bc9dc['prototype']['readCustomData_onNewlyVisible'] = function (_0x2736ec) {
_0x3bc9dc['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x2736ec), this['startRad'] = _0x2736ec['readUInt16']() / 0x64, this['readInfo'](_0x2736ec), this['web_nx'] = this['web_ox'] = this['webX'] = this['x'], this['web_ny'] = this['web_oy'] = this['webY'] = this['y'], this['spider_ox'] = this['spiderX'] = this['spider_nx'] = this['x'], this['spider_oy'] = this['spiderY'] = this['spider_ny'] = this['y'];
}, _0x3bc9dc['prototype']['startRad'] = 0x0, _0x3bc9dc['prototype']['webX'] = 0x0, _0x3bc9dc['prototype']['webY'] = 0x0, _0x3bc9dc['prototype']['spiderX'] = 0x0, _0x3bc9dc['prototype']['spiderY'] = 0x0, _0x3bc9dc['prototype']['webState'] = 0x0, _0x3bc9dc['prototype']['readInfo'] = function (_0x55af04) {
this['curRad'] = _0x55af04['readUInt16']() / 0x64;
var _0x3308ea = _0x55af04['readUInt16']() / 0x4,
    _0x45c99d = _0x55af04['readUInt16']() / 0x4;
this['web_ox'] = this['webX'], this['web_oy'] = this['webY'], this['web_nx'] = _0x3308ea, this['web_ny'] = _0x45c99d;
var _0x58f242 = _0x55af04['readUInt16']() / 0x4,
    _0x2424ab = _0x55af04['readUInt16']() / 0x4;
this['spider_ox'] = this['spiderX'], this['spider_oy'] = this['spiderY'], this['spider_nx'] = _0x58f242, this['spider_ny'] = _0x2424ab;
};

function _0x3bc9dc() {
_0x3bc9dc['superClass']['call'](this, _0xb31ef7), this['spawnTime'] = +new Date();
}
window['CartSaddle'] = _0x3bc9dc, _0x13dc56['setCustomClassForGameObjType'](_0x3bc9dc, _0xb31ef7);
var _0x1e3c43 = _0x131218;
_0x2b4229['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x2b4229['prototype']['constructor'] = _0x2b4229, _0x2b4229['superClass'] = _0x1e3c43;
var _0x3cf099 = 0x3ef;
_0x2b4229['prototype']['updateZ'] = function () {
this['z'] = 0x3ef;
if (this['flag_flying']) this['z'] += 0x186a0;
}, _0x2b4229['prototype']['customDraw'] = function (_0x1ef3b3) {
_0x444e67(0x0, 0x0, this['rad'], '#ebac2d'), _0x444e67(0x0, 0x0, this['rad'] * 0.9, '#e9ae34');
}, _0x2b4229['prototype']['beforeCustomDraw'] = function (_0x2ae29f) {
_0x1d2dab['save'](), _0x1d2dab['strokeStyle'] = '#ffbc33', _0x1d2dab['lineWidth'] = 0xa * (this['curRad'] / this['startRad']), _0x1d2dab['globalAlpha'] = 0x1, _0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](this['webX'], this['webY']), _0x1d2dab['lineTo'](this['spiderX'], this['spiderY']), _0x1d2dab['stroke'](), _0x1d2dab['restore'](), _0x1d2dab['save'](), _0x1d2dab['strokeStyle'] = 'gold', _0x1d2dab['lineWidth'] = 0x6 * (this['curRad'] / this['startRad']), _0x1d2dab['globalAlpha'] = 0x1, _0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](this['webX'], this['webY']), _0x1d2dab['lineTo'](this['spiderX'], this['spiderY']), _0x1d2dab['stroke'](), _0x1d2dab['restore']();
}, _0x2b4229['prototype']['onLerpUpdate'] = function (_0x245772) {
this['webX'] = _0x245772 * (this['web_nx'] - this['web_ox']) + this['web_ox'], this['webY'] = _0x245772 * (this['web_ny'] - this['web_oy']) + this['web_oy'], this['spiderX'] = _0x245772 * (this['spider_nx'] - this['spider_ox']) + this['spider_ox'], this['spiderY'] = _0x245772 * (this['spider_ny'] - this['spider_oy']) + this['spider_oy'];
}, _0x2b4229['prototype']['readCustomData_onUpdate'] = function (_0xef105b) {
_0x2b4229['superClass']['prototype']['readCustomData_onUpdate']['call'](this, _0xef105b), this['readInfo'](_0xef105b);
}, _0x2b4229['prototype']['readCustomData_onNewlyVisible'] = function (_0x6684eb) {
_0x2b4229['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x6684eb), this['startRad'] = _0x6684eb['readUInt16']() / 0x64, this['readInfo'](_0x6684eb), this['curRad'] = this['rad'], this['web_nx'] = this['web_ox'] = this['webX'] = this['x'], this['web_ny'] = this['web_oy'] = this['webY'] = this['y'], this['spider_ox'] = this['spiderX'] = this['spider_nx'] = this['x'], this['spider_oy'] = this['spiderY'] = this['spider_ny'] = this['y'];
}, _0x2b4229['prototype']['webX'] = 0x0, _0x2b4229['prototype']['webY'] = 0x0, _0x2b4229['prototype']['spiderX'] = 0x0, _0x2b4229['prototype']['spiderY'] = 0x0, _0x2b4229['prototype']['webState'] = 0x0, _0x2b4229['prototype']['readInfo'] = function (_0x13f675) {
this['curRad'] = _0x13f675['readUInt16']() / 0x64;
var _0x2e2766 = _0x13f675['readUInt16']() / 0x4,
    _0x21e281 = _0x13f675['readUInt16']() / 0x4;
this['web_ox'] = this['webX'], this['web_oy'] = this['webY'], this['web_nx'] = _0x2e2766, this['web_ny'] = _0x21e281;
var _0xa4da28 = _0x13f675['readUInt16']() / 0x4,
    _0x487dde = _0x13f675['readUInt16']() / 0x4;
this['spider_ox'] = this['spiderX'], this['spider_oy'] = this['spiderY'], this['spider_nx'] = _0xa4da28, this['spider_ny'] = _0x487dde;
};

function _0x2b4229() {
_0x2b4229['superClass']['call'](this, _0x4733b5);
}
window['Saddle'] = _0x2b4229, _0x13dc56['setCustomClassForGameObjType'](_0x2b4229, _0x4733b5);
var _0x1e3c43 = _0x131218;
_0xb9f9fa['prototype'] = Object['create'](_0x1e3c43['prototype']), _0xb9f9fa['prototype']['constructor'] = _0xb9f9fa, _0xb9f9fa['superClass'] = _0x1e3c43, _0xb9f9fa['prototype']['foodType'] = 0x0, _0xb9f9fa['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0xb9f9fa['prototype']['customDraw'] = function (_0x217622) {
_0x1d2dab['save']();
var _0x36a0e7 = 'gameobj/' + this['oType'] + '/' + this['oType'] + '_' + this['foodType'] + '' + (this['isEdibleOutlined']() ? '_e' : '') + '.png',
    _0xf8b752 = this['getSkinImageObj'](_0x36a0e7);
if (_0xf8b752) {
    var _0x350688 = this['rad'];
    _0x1d2dab['save'](), _0x1d2dab['rotate'](this['rPer'] * 0.5 * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0xf8b752, -_0x350688, -_0x350688, 0x2 * _0x350688, 0x2 * _0x350688), _0x1d2dab['restore']();
}
_0x1d2dab['restore']();
}, _0xb9f9fa['prototype']['readCustomData_onNewlyVisible'] = function (_0x365a94) {
this['foodType'] = _0x365a94['readUInt8']();
};
var _0xd6afd2 = 0x8e;

function _0xb9f9fa() {
_0xb9f9fa['superClass']['call'](this, _0xd6afd2), this['doesDrawEffectScale'] = !![];
}
window['XmasFood'] = _0xb9f9fa, _0x13dc56['setCustomClassForGameObjType'](_0xb9f9fa, _0xd6afd2);
var _0x1e3c43 = _0x131218;
_0x5b80df['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x5b80df['prototype']['constructor'] = _0x5b80df, _0x5b80df['superClass'] = _0x1e3c43, _0x5b80df['prototype']['giftColor'] = 0x0, _0x5b80df['prototype']['giftType'] = 0x0, _0x5b80df['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x5b80df['prototype']['customDraw'] = function (_0x5d00cb) {
_0x1d2dab['save']();
var _0x43dd2f = this['getSkinImageObj']('img/xmasgifts/' + this['giftColor'] + '/gift_e.png');
if (_0x43dd2f) {
    var _0x508b1f = this['rad'];
    _0x1d2dab['save'](), _0x1d2dab['rotate'](this['rPer'] * 0.5 * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0x43dd2f, -_0x508b1f, -_0x508b1f, 0x2 * _0x508b1f, 0x2 * _0x508b1f), _0x1d2dab['restore']();
}
_0x1d2dab['restore']();
}, _0x5b80df['prototype']['readCustomData_onNewlyVisible'] = function (_0x358901) {
this['giftColor'] = _0x358901['readUInt8'](), this['giftType'] = _0x358901['readUInt8']();
};
var _0x237628 = 0x8f;

function _0x5b80df() {
_0x5b80df['superClass']['call'](this, _0x237628), this['doesDrawEffectScale'] = !![];
}
window['XmasGift'] = _0x5b80df, _0x13dc56['setCustomClassForGameObjType'](_0x5b80df, _0x237628);
var _0x352710 = +new Date() + 0x1388,
_0x4736fd = ![];
let _0x4404f3, _0x2d8173 = 0x32,
_0x3b1e23 = _0x4767f1 - 0x546 + _0x2d8173;
var _0x29bf9d = null,
_0x1a0c4e = {
    'particleCount': 0x2bc,
    'particleSize': 0x3,
    'fallingSpeed': 0.5,
    'color': '#fff',
    'xspeed': 0x1,
    'yspeed': 0.5,
    'yspeedF': 0x1,
    'angle': 0x5a
},
_0x15cefe = {
    'particleCount': 0x5dc,
    'particleSize': 0x4,
    'fallingSpeed': 0x1,
    'color': '#fff',
    'xspeed': 1.5,
    'yspeed': 0x1,
    'yspeedF': 1.5,
    'angle': 0x5a
},
_0x96ad6e = {
    'particleCount': 0x5dc,
    'particleSize': 0x5,
    'fallingSpeed': 1.5,
    'color': '#fff',
    'xspeed': 0x2,
    'yspeed': 1.5,
    'yspeedF': 0x3,
    'angle': 0x5a
};

function _0x40045a(_0x55d4ed, _0x1a627a) {
return Math['floor'](Math['random']() * (_0x1a627a - _0x55d4ed + 0x1) + _0x55d4ed);
}

function _0x281e10(_0x5845a8, _0x50c8dd, _0xec3b07, _0xaad740, _0x49651f) {
this['x'] = _0x5845a8, this['y'] = _0x50c8dd, this['nx'] = _0x5845a8, this['ny'] = _0x50c8dd, this['radius'] = _0xec3b07, this['color'] = _0xaad740, this['radians'] = _0x49651f, this['velocity'] = Math['max'](0.001, Math['random']() * 0.004), this['t'] = 0x0, this['update'] = () => {
    this['radians'] += this['velocity'], this['y'] += Math['pow'](this['velocity'], _0x29bf9d['yspeed']) + _0x29bf9d['yspeed'] * _0x29bf9d['yspeedF'], this['x'] += Math['sin'](this['radians']) * 0.5 * _0x29bf9d['xspeed'], this['draw']();
}, this['lerp'] = () => {}, this['draw'] = () => {
    this['lerp'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['x'], this['y'], this['radius'], 0x0, Math['PI'] * 0x2, ![]), _0x1d2dab['fillStyle'] = this['color'], _0x1d2dab['fill'](), _0x1d2dab['closePath'](), this['reset']();
}, this['reset'] = () => {
    (this['x'] < -_0x2d8173 || this['y'] < -_0x2d8173 || this['x'] > _0x1f4cd2 + _0x2d8173 || this['y'] > _0x3b1e23 || this['t'] == 0x0 || +new Date() > this['t']) && (this['x'] = _0x40045a(0x0, _0x1f4cd2 - 0x64), this['y'] = _0x40045a(0x0, _0x4767f1 - 0x546), this['t'] = +new Date() + Math['random']() * (0x3e8 * 0x1e));
};
}

function _0x433161() {
_0x3b1e23 = _0x4767f1 - 0x546 + _0x2d8173, _0x4404f3 = [];
for (let _0x14fb13 = 0x0; _0x14fb13 < _0x29bf9d['particleCount']; _0x14fb13++) {
    _0x4404f3['push'](new _0x281e10(_0x40045a(0x0, _0x1f4cd2 - 0x64), _0x40045a(0x0, _0x4767f1 - 0x546), _0x40045a(0.5, _0x29bf9d['particleSize']), _0x29bf9d['color'], 0x5a));
}
_0x36c9fc = !![], _0x4736fd = ![], _0x352710 = +new Date() + 0x2710;
}
var _0x36c9fc = ![];

function _0x387116() {
if (_0x36c9fc && _0x29bf9d != null) _0x4404f3['forEach'](_0x39e003 => {
    _0x39e003['update']();
});
}

function _0x2465ca() {
if (_0x29bf9d == null) return;
if (!_0x4736fd) {
    if (_0x352710 < +new Date()) _0x4736fd = !![];
    return;
}
if (_0x3a8d51 && !(_0x31f3fc == 0x2)) _0x387116();
}
var _0x1e3c43 = _0x3d6c08;
_0x3930f1['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x3930f1['prototype']['constructor'] = _0x3930f1, _0x3930f1['superClass'] = _0x1e3c43, _0x3930f1['prototype']['animalInfo'] = function () {
var _0x43ed57 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x43ed57['aniName'] = 'Seahorse!';
    break;
case 0xc8:
    _0x43ed57['aniName'] = 'Tully Monster!';
    break;
case 0xc9:
    _0x43ed57['aniName'] = 'Water Gun Horse!';
    break;
case 0xca:
    _0x43ed57['aniName'] = 'Leafy Seadragon';
    break;
}
return _0x43ed57['skinName'] = this['getSkinName'](), _0x43ed57['aniDesc'] = '', _0x43ed57['upgradeText'] = 'UPGRADED to ' + _0x43ed57['aniName'], _0x43ed57['aniCol'] = '#502E1A', _0x43ed57;
}, _0x3930f1['prototype']['getSkinName'] = function () {
let _0x5454dc = this['getSpeciesPath']() + '/seahorse';
return _0x5454dc;
}, _0x3930f1['prototype']['getSpeciesPath'] = function () {
return 'ocean/seahorse/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x3930f1['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x3930f1['prototype']['getAbilityInfo'] = function (_0x1adcc4) {
var _0x5d5c84 = {};
return _0x5d5c84['abilName'] = 'Dash!', _0x5d5c84['abilImg'] = 'abilities/Dash-Boost.svg', _0x5d5c84['skinThemeID'] = this['skinThemeID'], _0x5d5c84['mopeSeasonID'] = this['mopeSeasonID'], _0x5d5c84;
}, _0x3930f1['prototype']['basicDrawSkinImg'] = function () {
this['setSkinScale']();
var _0x41cecd = this['skinRad'];
let _0x136d1f = 1.5;
var _0x278355 = 0x0;
if (this['mopeSeasonID'] == 0x1) {
    (this['animalSpecies'] == 0xc8 || this['animalSpecies'] == 0xc9) && (_0x136d1f = 1.8);
    if (this['animalSpecies'] == 0xc9) _0x278355 = -0.1;
}
this['loadedSkinImg'] && _0x1d2dab['drawImage'](this['loadedSkinImg'], -_0x41cecd * _0x136d1f, -_0x41cecd * _0x136d1f + _0x41cecd * _0x278355, 0x2 * _0x41cecd * _0x136d1f, 0x2 * _0x41cecd * _0x136d1f);
};

function _0x3930f1() {
_0x3930f1['superClass']['call'](this, _0x4ad968);
}
window['Seahorse'] = _0x3930f1, _0x13dc56['setCustomClassForGameObjType'](_0x3930f1, _0x4ad968, _0x5b8b30);
var _0x1e3c43 = _0x3d6c08;
_0x4cd4ab['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x4cd4ab['prototype']['constructor'] = _0x4cd4ab, _0x4cd4ab['superClass'] = _0x1e3c43, _0x4cd4ab['prototype']['animalInfo'] = function () {
var _0x36bc5d = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x36bc5d['aniName'] = 'Shrimp!';
    break;
case 0xc8:
    _0x36bc5d['aniName'] = 'Deluxe Shrimp!';
    break;
case 0xc9:
    _0x36bc5d['aniName'] = 'Chef Shrimp!';
    break;
case 0xca:
    _0x36bc5d['aniName'] = 'Sushi Shrimp!';
    break;
}
return _0x36bc5d['skinName'] = this['getSkinName'](), _0x36bc5d['aniDesc'] = '', _0x36bc5d['upgradeText'] = 'UPGRADED to ' + _0x36bc5d['aniName'], _0x36bc5d['aniCol'] = '#502E1A', _0x36bc5d;
}, _0x4cd4ab['prototype']['getSkinName'] = function () {
let _0x1f429d = this['getSpeciesPath']() + '/shrimp';
if (this['flag_usingAbility']) _0x1f429d += '2';
return _0x1f429d;
}, _0x4cd4ab['prototype']['getSpeciesPath'] = function () {
return 'ocean/shrimp/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x4cd4ab['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x4cd4ab() {
_0x4cd4ab['superClass']['call'](this, _0x4ad968);
}
window['Shrimp'] = _0x4cd4ab, _0x13dc56['setCustomClassForGameObjType'](_0x4cd4ab, _0x4ad968, _0x4c5efa);
var _0x1e3c43 = _0x3d6c08;
_0x2ceb3c['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x2ceb3c['prototype']['constructor'] = _0x2ceb3c, _0x2ceb3c['superClass'] = _0x1e3c43, _0x2ceb3c['prototype']['animalInfo'] = function () {
var _0x28119a = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x28119a['aniName'] = 'Trout';
    break;
case 0xc8:
    _0x28119a['aniName'] = 'Clownfish';
    break;
case 0xc9:
    _0x28119a['aniName'] = 'Popsicle Trout';
    break;
case 0xca:
    _0x28119a['aniName'] = 'Royal Guppy';
    break;
case 0xde:
    _0x28119a['aniName'] = 'Ice Husk Trout';
    break;
}
return _0x28119a['skinName'] = this['getSkinName'](), _0x28119a['aniDesc'] = '', _0x28119a['upgradeText'] = 'UPGRADED to ' + _0x28119a['aniName'] + '!', _0x28119a['aniCol'] = '#502E1A', _0x28119a;
}, _0x2ceb3c['prototype']['getAbilityInfo'] = function (_0x1212db) {
var _0x21ee49 = {};
return _0x21ee49['abilName'] = 'Extra Boost!', _0x21ee49['abilImg'] = 'abilities/Dash-Boost.svg', _0x21ee49['skinThemeID'] = this['skinThemeID'], _0x21ee49['mopeSeasonID'] = this['mopeSeasonID'], _0x21ee49;
}, _0x2ceb3c['prototype']['getSkinName'] = function () {
let _0x3cdcab = this['getSpeciesPath']() + '/trout';
return _0x3cdcab;
}, _0x2ceb3c['prototype']['getSpeciesPath'] = function () {
return 'ocean/trout/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x2ceb3c['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x2ceb3c() {
_0x2ceb3c['superClass']['call'](this, _0x4ad968);
}
window['Trout'] = _0x2ceb3c, _0x13dc56['setCustomClassForGameObjType'](_0x2ceb3c, _0x4ad968, _0xf5643);
var _0x1e3c43 = _0x3d6c08;
_0x394d1a['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x394d1a['prototype']['constructor'] = _0x394d1a, _0x394d1a['superClass'] = _0x1e3c43, _0x394d1a['prototype']['getSkinName'] = function () {
return 'arctic/arcticfox/' + this['animalSpecies'] + this['getSubSpecies']() + '/arcticfox';
}, _0x394d1a['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x394d1a['prototype']['animalInfo'] = function () {
var _0x5df987 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x5df987['aniName'] = 'Arctic Fox';
    break;
case 0xc8:
    _0x5df987['aniName'] = 'Ice Fox';
    break;
case 0xc9:
    _0x5df987['aniName'] = 'Forest Spirit Fox';
    break;
case 0xca:
    _0x5df987['aniName'] = 'Ice Fox';
    break;
}
return _0x5df987['skinName'] = this['getSkinName'](), _0x5df987['aniDesc'] = '', _0x5df987['upgradeText'] = 'UPGRADED to ' + _0x5df987['aniName'] + '!\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!', _0x5df987['aniCol'] = '#CFCFCF', _0x5df987;
}, _0x394d1a['prototype']['getAbilityInfo'] = function (_0x5f4526) {
var _0x2d847b = {};
return _0x2d847b['abilName'] = 'Pull from Hole', _0x2d847b['abilImg'] = 'abilities/Dig.svg', _0x2d847b['skinThemeID'] = this['skinThemeID'], _0x2d847b['mopeSeasonID'] = this['mopeSeasonID'], _0x2d847b;
};

function _0x394d1a() {
_0x394d1a['superClass']['call'](this, _0x4ad968);
}
window['ArcticFox'] = _0x394d1a, _0x13dc56['setCustomClassForGameObjType'](_0x394d1a, _0x4ad968, _0x2cb3a6);
var _0x1e3c43 = _0x3d6c08;
_0x2bd090['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x2bd090['prototype']['constructor'] = _0x2bd090, _0x2bd090['superClass'] = _0x1e3c43, _0x2bd090['prototype']['getSkinName'] = function () {
let _0x43eae5 = this['getSpeciesPath']() + '/fox';
return _0x43eae5;
}, _0x2bd090['prototype']['getSpeciesPath'] = function () {
return 'land/fox/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x2bd090['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x2bd090['prototype']['animalInfo'] = function () {
var _0x3d0735 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x3d0735['aniName'] = 'Fox!';
    break;
case 0xc8:
    _0x3d0735['aniName'] = 'Night Thief!';
    break;
case 0xc8:
    _0x3d0735['aniName'] = 'Sneaky Fox';
    break;
case 0xcc:
    _0x3d0735['aniName'] = 'Black Asura Fox';
    break;
}
return _0x3d0735['skinName'] = this['getSkinName'](), _0x3d0735['aniDesc'] = '', _0x3d0735['upgradeText'] = 'UPGRADED to ' + _0x3d0735['aniName'] + '!\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!', _0x3d0735['aniCol'] = '#FF9D43', _0x3d0735;
}, _0x2bd090['prototype']['getAbilityInfo'] = function (_0x9ce5a6) {
var _0x1dff2c = {};
return _0x1dff2c['abilName'] = 'Pull from Hole', _0x1dff2c['abilImg'] = 'abilities/Dig.svg', _0x1dff2c['skinThemeID'] = this['skinThemeID'], _0x1dff2c['mopeSeasonID'] = this['mopeSeasonID'], _0x1dff2c;
};

function _0x2bd090() {
_0x2bd090['superClass']['call'](this, _0x4ad968);
}
window['Fox'] = _0x2bd090, _0x13dc56['setCustomClassForGameObjType'](_0x2bd090, _0x4ad968, _0x84499b);
var _0x1e3c43 = _0x3d6c08;
_0x38f59a['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x38f59a['prototype']['constructor'] = _0x38f59a, _0x38f59a['superClass'] = _0x1e3c43, _0x38f59a['prototype']['animalInfo'] = function () {
var _0x3a2086 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x3a2086['aniName'] = 'Rabbit!';
    break;
case 0xc8:
    _0x3a2086['aniName'] = 'Monochrome Rabbit!';
    break;
case 0xca:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x3a2086['aniName'] = 'Jackapole';
        break;
    case 0x1:
        _0x3a2086['aniName'] = 'Hollow Rabbit';
    }
    break;
case 0xcc:
    _0x3a2086['aniName'] = 'Carrot Rabbit';
    break;
case 0xdc:
    _0x3a2086['aniName'] = 'Fairy Rabbit';
    break;
case 0xde:
    _0x3a2086['aniName'] = 'Jolly Rabbit';
    break;
}
return _0x3a2086['skinName'] = this['getSpeciesPath']('rabbit') + '/rabbit', _0x3a2086['aniDesc'] = '', _0x3a2086['upgradeText'] = 'UPGRADED to ' + _0x3a2086['aniName'], _0x3a2086['aniCol'] = '#502E1A', _0x3a2086;
}, _0x38f59a['prototype']['getSkinName'] = function () {
return this['getSpeciesPath']('rabbit') + '/rabbit';
}, _0x38f59a['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
}, _0x38f59a['prototype']['getSpeciesPath'] = function (_0x3fbbb1) {
return 'land/' + _0x3fbbb1 + '/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x38f59a['prototype']['getAbilityInfo'] = function (_0x28f3d6) {
var _0x263b21 = {};
return _0x263b21['abilName'] = 'Dig Hole!', _0x263b21['abilImg'] = 'abilities/Dig.svg', _0x263b21['skinThemeID'] = this['skinThemeID'], _0x263b21['mopeSeasonID'] = this['mopeSeasonID'], _0x263b21;
}, _0x38f59a['prototype']['getSkinName'] = function (_0x9a8d60) {
var _0x53252d = this['getSpeciesPath']('rabbit') + '/rabbit' + (_0x9a8d60 === !![] ? '.png' : '');
return _0x53252d;
};

function _0x38f59a() {
_0x38f59a['superClass']['call'](this, _0x4ad968);
}
window['Rabbit'] = _0x38f59a, _0x13dc56['setCustomClassForGameObjType'](_0x38f59a, _0x4ad968, _0x48065b);
var _0x1e3c43 = _0x3d6c08;
_0x1c2638['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x1c2638['prototype']['constructor'] = _0x1c2638, _0x1c2638['superClass'] = _0x1e3c43, _0x1c2638['prototype']['getSkinName'] = function () {
let _0x3bf7df = this['getSpeciesPath']() + '/hedgehog';
if (this['flag_usingAbility']) _0x3bf7df += '2';
return _0x3bf7df;
}, _0x1c2638['prototype']['getSpeciesPath'] = function () {
return 'land/hedgehog/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x1c2638['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x1c2638['prototype']['animalInfo'] = function () {
var _0x24cfb6 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x24cfb6['aniName'] = 'Hedgehog!';
    break;
case 0xca:
    _0x24cfb6['aniName'] = 'Grass Hedgehog';
    break;
}
return _0x24cfb6['skinName'] = this['getSkinName'](), _0x24cfb6['aniDesc'] = '', _0x24cfb6['upgradeText'] = 'UPGRADED to ' + _0x24cfb6['aniName'] + '!\x0a (Hold W to become spiky, and dangerous to touch!)', _0x24cfb6['aniCol'] = '#5b400d', _0x24cfb6;
}, _0x1c2638['prototype']['getAbilityInfo'] = function (_0x3addab) {
var _0x2963e9 = {};
return _0x2963e9['abilName'] = 'Spikes!', _0x2963e9['abilImg'] = 'abilities/Spike.svg', _0x2963e9['skinThemeID'] = this['skinThemeID'], _0x2963e9['mopeSeasonID'] = this['mopeSeasonID'], _0x2963e9;
};

function _0x1c2638() {
_0x1c2638['superClass']['call'](this, _0x4ad968);
}
window['Hedgehog'] = _0x1c2638, _0x13dc56['setCustomClassForGameObjType'](_0x1c2638, _0x4ad968, _0x164f9e);
var _0x1e3c43 = _0x131218;
_0x2f2917['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x2f2917['prototype']['constructor'] = _0x2f2917, _0x2f2917['superClass'] = _0x1e3c43, _0x2f2917['prototype']['foodType'] = 0x0, _0x2f2917['prototype']['updateZ'] = function () {
this['z'] = -0x62;
}, _0x2f2917['prototype']['customDraw'] = function (_0xcdcd0) {
var _0x3679ca = this['rad'] - 0xa;
this['waterRipples'](_0x3679ca), _0x1d2dab['save'](), _0x1d2dab['restore']();
var _0x3b7a9e = 'img/floaters/' + this['floaterType'] + '.png';
this['drawSkin'](_0x3b7a9e, _0x3679ca);
}, _0x2f2917['prototype']['drawSkin'] = function (_0x54d3d5, _0x1bf995) {
_0x1d2dab['save']();
var _0x1da3ef = this['getSkinImageObj'](_0x54d3d5);
_0x1da3ef && (_0x1d2dab['save'](), _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x1da3ef, -_0x1bf995, -_0x1bf995, 0x2 * _0x1bf995, 0x2 * _0x1bf995), _0x1d2dab['restore']()), _0x1d2dab['restore']();
};
var _0x5c78d7 = 0.01,
_0x3b7edf = 0.02,
_0x33e55d = 0xa,
_0x4c39db = 0xf;
_0x2f2917['prototype']['waterRipples'] = function (_0x1c6edb) {
_0x1c6edb = _0x1c6edb - 0x5;
var _0x429f3b = (_0x740c5b - this['spawnTime']) / 0x3e8,
    _0x2c453d = 1.75,
    _0x158279 = 0.5,
    _0x45b253 = _0x158279 * Math['sin'](0x2 * Math['PI'] / _0x2c453d * _0x429f3b),
    _0x3f9819 = _0x1d2dab['globalAlpha'];
!this['isFloatingInWater'] && (_0x45b253 = 0x1);
if (this['floaterType'] == 0x0 || this['floaterType'] == 0x2 || this['floaterType'] == 0x3 || this['floaterType'] == 0x4 || this['floaterType'] == 0x5 || this['floaterType'] == 0x7) {
    var _0xedf641 = 'img/floaters/' + this['floaterType'] + '_ripple.png';
    _0x1d2dab['globalAlpha'] *= 0.7 - 0.25 * _0x45b253, this['drawSkin'](_0xedf641, _0x1c6edb + _0x33e55d - 0x5), _0x1d2dab['globalAlpha'] *= 0.6 - 0.2 * _0x45b253, this['drawSkin'](_0xedf641, _0x1c6edb + _0x4c39db - 0x5);
} else _0x1d2dab['globalAlpha'] *= 0.8 - 0.2 * _0x45b253, _0xee861c(0x0, _0x1c6edb * _0x5c78d7, _0x1c6edb * (0.9 + 0.15 * _0x45b253), _0x33e55d, '#4668ff'), _0x1d2dab['globalAlpha'] *= 0.7 - 0.2 * _0x45b253, _0xee861c(0x0, -_0x1c6edb * _0x3b7edf, _0x1c6edb * (1.05 + 0.1 * _0x45b253), _0x4c39db, '#4668ff');
_0x1d2dab['globalAlpha'] = _0x3f9819;
}, _0x2f2917['prototype']['readCustomData_onNewlyVisible'] = function (_0x12dbd4) {
this['floaterType'] = _0x12dbd4['readUInt8']();
}, _0x2f2917['prototype']['isFloatingInWater'] = !![], _0x2f2917['prototype']['readUpdatedProperty'] = function (_0x10c6d1, _0x55d061) {
_0x10c6d1 == _0x189dbf && (this['isFloatingInWater'] = _0x55d061['readUInt8']() == 0x1);
};
var _0x3f0bf9 = 0x90;

function _0x2f2917() {
_0x2f2917['superClass']['call'](this, _0x3f0bf9), this['drawEffectScale_Slow'] = !![];
}
window['WaterFloater'] = _0x2f2917, _0x13dc56['setCustomClassForGameObjType'](_0x2f2917, _0x3f0bf9);
var _0x1e3c43 = _0x131218;
_0x1ef1ca['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x1ef1ca['prototype']['constructor'] = _0x1ef1ca, _0x1ef1ca['superClass'] = _0x1e3c43, _0x1ef1ca['prototype']['lookAngle'] = 0x0, _0x1ef1ca['prototype']['frameNumber'] = 0x0, _0x1ef1ca['prototype']['isRolling'] = ![], _0x1ef1ca['prototype']['pumpkinType'] = ![], _0x1ef1ca['prototype']['updateZ'] = function () {
this['z'] = 0x3ea;
};
var _0xabbe3 = -0.07,
_0x407ef7 = -0.1,
_0x5c7ed3 = 0x8,
_0x57d927 = 0xc,
_0x32dc8a = 0x8;
_0x1ef1ca['prototype']['waterRipples'] = function (_0x7ddc16) {
_0x1d2dab['save'](), _0x7ddc16 = _0x7ddc16 + _0x32dc8a;
var _0x1e7980 = (_0x740c5b - this['spawnTime']) / 0x3e8,
    _0x4ed0a9 = 1.75,
    _0x390e98 = 0.5,
    _0x4c7659 = _0x390e98 * Math['sin'](0x2 * Math['PI'] / _0x4ed0a9 * _0x1e7980),
    _0xedf838 = _0x1d2dab['globalAlpha'];
!this['isFloating'] && (_0x4c7659 = 0x1), _0x1d2dab['rotate'](_0x2bcbaa(this['lookAngle'] + 0x2d)), _0x1d2dab['globalAlpha'] *= 0.8 - 0.2 * _0x4c7659, _0xee861c(0x0, _0x7ddc16 * _0xabbe3, _0x7ddc16 * (0.9 + 0.15 * _0x4c7659), _0x5c7ed3, '#4668ff'), _0x1d2dab['globalAlpha'] *= 0.7 - 0.2 * _0x4c7659, _0xee861c(0x0, -_0x7ddc16 * _0x407ef7, _0x7ddc16 * (1.05 + 0.1 * _0x4c7659), _0x57d927, '#4668ff'), _0x1d2dab['globalAlpha'] = _0xedf838, _0x1d2dab['restore']();
}, _0x1ef1ca['prototype']['customDraw'] = function (_0x5b50c5) {
var _0x26b198 = this['rad'] - 0xa,
    _0x14e164 = 0x1,
    _0x84fae = 0.15,
    _0x5f477d = 0.8,
    _0x10a306 = 0.5 * (_0x5f477d - _0x84fae),
    _0x41ecc4 = _0x84fae + _0x10a306 + _0x10a306 * Math['sin'](0x2 * Math['PI'] / _0x14e164 * (_0x740c5b / 0x3e8)),
    _0x14e164 = 0x1,
    _0x84fae = 0.85,
    _0x5f477d = 0x1,
    _0x10a306 = 0.5 * (_0x5f477d - _0x84fae),
    _0x41fd2e = 0x1;
if (this['isRolling']) this['frameNumber'] = Math['trunc'](_0x740c5b / 0x78) % 0x8;
var _0x5788be = this['getSkinImageObj']('img/beachball/' + this['pumpkinType'] + '/' + this['frameNumber'] + '.png');
if (_0x5788be) {
    var _0x1e8883 = 0x0,
        _0x4a960d = this['rad'],
        _0x304e4d = this['rad'] * 2.5;
    imH = this['rad'] * 2.5;
    var _0x7367a = 0.5,
        _0x2c34fd = 0.95;
    _0x1d2dab['save'](); {
        _0x1d2dab['globalAlpha'] *= this['onFireEffA'] * _0x41fd2e, _0x1d2dab['rotate'](this['angle'] + _0xa0b20a), _0x1d2dab['drawImage'](_0x5788be, _0x1e8883 + _0x304e4d * -_0x7367a, _0x4a960d + imH * -_0x2c34fd, _0x304e4d, imH);
    }
    _0x1d2dab['restore']();
} else {}
}, _0x1ef1ca['prototype']['isFloating'] = ![], _0x1ef1ca['prototype']['isRolling'] = ![], _0x1ef1ca['prototype']['readUpdatedProperty'] = function (_0x3d9947, _0x3722f6) {
if (_0x3d9947 == _0x189dbf) this['isFloating'] = _0x3722f6['readUInt8']() == 0x1;
else _0x3d9947 == _0x458b93 && (this['isRolling'] = _0x3722f6['readUInt8']() == 0x1);
}, _0x1ef1ca['prototype']['readCustomData_onNewlyVisible'] = function (_0x4c1e94) {
this['isRolling'] = _0x4c1e94['readUInt8']() == 0x1, this['pumpkinType'] = _0x4c1e94['readUInt8'](), this['isFloating'] = _0x4c1e94['readUInt8']() == 0x1;
};

function _0x1ef1ca() {
_0x1ef1ca['superClass']['call'](this, _0x86eb30), this['lookAngle'] = 0x0, this['isRolling'] = ![], this['pumpkinType'] = ![], this['doesDrawEffectScale'] = !![], this['drawEffectScale_Slow'] = !![];
}
var _0x86eb30 = 0x91;
window['BeachBall'] = _0x1ef1ca, _0x13dc56['setCustomClassForGameObjType'](_0x1ef1ca, _0x86eb30);
var _0x1e3c43 = _0x131218;
_0x5e74d4['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x5e74d4['prototype']['constructor'] = _0x5e74d4, _0x5e74d4['superClass'] = _0x1e3c43, _0x5e74d4['prototype']['frameNumber'] = 0x0, _0x5e74d4['prototype']['umbrellaType'] = 0x0, _0x5e74d4['prototype']['umbrellaColor'] = 0x0, _0x5e74d4['prototype']['isClosed'] = ![], _0x5e74d4['prototype']['updateZ'] = function () {
this['z'] = this['rad'] + (!this['isClosed'] ? 0x834 : 0x0);
}, _0x5e74d4['prototype']['customDraw'] = function (_0x37796f) {
var _0xfe2749 = 0x1,
    _0x433243 = 0.15,
    _0xef08c4 = 0.8,
    _0x5c94b8 = 0.5 * (_0xef08c4 - _0x433243),
    _0x4b9db6 = _0x433243 + _0x5c94b8 + _0x5c94b8 * Math['sin'](0x2 * Math['PI'] / _0xfe2749 * (_0x740c5b / 0x3e8)),
    _0xfe2749 = 0x1,
    _0x433243 = 0.85,
    _0xef08c4 = 0x1,
    _0x5c94b8 = 0.5 * (_0xef08c4 - _0x433243),
    _0x195f37 = 0x1,
    _0x2fd412 = this['rad'] * 1.5,
    _0x127801 = this['getSkinImageObj']('img/umbrella/' + this['umbrellaType'] + '/' + this['umbrellaColor'] + '/umbrella' + (this['isClosed'] ? '-closed' : '') + '.png');
if (_0x127801) {
    var _0x4a6ac1 = 0x0,
        _0x138568 = this['rad'],
        _0x1976fa = this['rad'] * 2.5;
    imH = this['rad'] * 2.5;
    var _0x167ecc = 0.5,
        _0x4919da = 0.95;
    _0x1d2dab['save'](); {
        _0x1d2dab['globalAlpha'] *= this['onFireEffA'] * _0x195f37, _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x127801, _0x4a6ac1 + _0x1976fa * -_0x167ecc, _0x138568 + imH * -_0x4919da, _0x1976fa, imH);
    }
    _0x1d2dab['restore']();
} else {}
}, _0x5e74d4['prototype']['readUpdatedProperty'] = function (_0x586889, _0x3181c3) {
if (_0x586889 == _0x189dbf) this['isFloating'] = _0x3181c3['readUInt8']() == 0x1;
else _0x586889 == _0x458b93 && (this['isClosed'] = _0x3181c3['readUInt8']() == 0x0);
}, _0x5e74d4['prototype']['readCustomData_onNewlyVisible'] = function (_0x192ae3) {
this['isClosed'] = _0x192ae3['readUInt8']() == 0x1, this['umbrellaType'] = _0x192ae3['readUInt8'](), this['umbrellaColor'] = _0x192ae3['readUInt8']();
};

function _0x5e74d4() {
_0x5e74d4['superClass']['call'](this, _0x25cb51), this['umbrellaType'] = 0x0, this['isClosed'] = ![], this['doesDrawEffectScale'] = !![], this['drawEffectScale_Slow'] = !![];
}
var _0x25cb51 = 0x92;
window['Umbrella'] = _0x5e74d4, _0x13dc56['setCustomClassForGameObjType'](_0x5e74d4, _0x25cb51);
var _0x1e3c43 = _0x3d6c08;
_0x487114['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x487114['prototype']['constructor'] = _0x487114, _0x487114['superClass'] = _0x1e3c43, _0x487114['prototype']['animalInfo'] = function () {
var _0x3b8b8e = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x3b8b8e['aniName'] = 'Chipmunk!';
    break;
case 0xc9:
    _0x3b8b8e['aniName'] = 'Playful Munk!';
    break;
case 0xca:
    _0x3b8b8e['aniName'] = 'Chipmonk';
    break;
}
return _0x3b8b8e['skinName'] = this['getSkinName'](), _0x3b8b8e['aniDesc'] = '', _0x3b8b8e['upgradeText'] = 'You\'re a tiny ' + _0x3b8b8e['aniName'] + ' - Eat food to grow!', _0x3b8b8e['aniCol'] = '#CFCFCF', _0x3b8b8e;
}, _0x487114['prototype']['getSkinName'] = function () {
return 'arctic/chipmunk/' + this['animalSpecies'] + this['getSubSpecies']() + '/chipmunk';
}, _0x487114['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x487114() {
_0x487114['superClass']['call'](this, _0x4ad968);
}
window['Chipmunk'] = _0x487114, _0x13dc56['setCustomClassForGameObjType'](_0x487114, _0x4ad968, _0xaa5ad2);
var _0x1e3c43 = _0x3d6c08;
_0x6459e3['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x6459e3['prototype']['constructor'] = _0x6459e3, _0x6459e3['superClass'] = _0x1e3c43, _0x6459e3['prototype']['getSkinName'] = function () {
return 'arctic/arctichare/' + this['animalSpecies'] + this['getSubSpecies']() + '/arctichare';
}, _0x6459e3['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x6459e3['prototype']['animalInfo'] = function () {
var _0x55c611 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x55c611['aniName'] = 'Arctic Hare!';
    break;
case 0xc9:
    _0x55c611['aniName'] = 'Snow Cone Hare!';
    break;
}
return _0x55c611['skinName'] = this['getSkinName'](), _0x55c611['aniDesc'] = '', _0x55c611['upgradeText'] = 'UPGRADED to ' + _0x55c611['aniName'], _0x55c611['aniCol'] = '#CFCFCF', _0x55c611;
}, _0x6459e3['prototype']['getAbilityInfo'] = function (_0x3c6b03) {
var _0x25e7ed = {};
return _0x25e7ed['abilName'] = 'Dig Hole!', _0x25e7ed['abilImg'] = 'abilities/Dig.svg', _0x25e7ed['skinThemeID'] = this['skinThemeID'], _0x25e7ed['mopeSeasonID'] = this['mopeSeasonID'], _0x25e7ed;
};

function _0x6459e3() {
_0x6459e3['superClass']['call'](this, _0x4ad968);
}
window['ArcticHare'] = _0x6459e3, _0x13dc56['setCustomClassForGameObjType'](_0x6459e3, _0x4ad968, _0x323cb6);
var _0x1e3c43 = _0x3d6c08;
_0x1078f5['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x1078f5['prototype']['constructor'] = _0x1078f5, _0x1078f5['superClass'] = _0x1e3c43, _0x1078f5['prototype']['animalInfo'] = function () {
var _0x4f3309 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x4f3309['aniName'] = 'Polar Bear';
    break;
case 0xc9:
    _0x4f3309['aniName'] = 'Cola Connoisseur';
    break;
case 0xca:
    _0x4f3309['aniName'] = 'Water Bear';
    break;
}
return _0x4f3309['aniDesc'] = '', _0x4f3309['upgradeText'] = 'UPGRADED to ' + _0x4f3309['aniName'] + '!\x0a Polar bears can climb hills! \x0a+ They\'re amazing swimmers!', _0x4f3309['aniCol'] = '#e4e4e4', _0x4f3309['skinName'] = this['getSkinName'](), _0x4f3309;
}, _0x1078f5['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x1078f5['prototype']['getAbilityInfo'] = function (_0x106633) {
var _0x220efd = {};
return _0x220efd['abilName'] = 'Claw Slash!', _0x220efd['abilImg'] = 'abilities/Slash-Claw.svg', _0x220efd['skinThemeID'] = this['skinThemeID'], _0x220efd['mopeSeasonID'] = this['mopeSeasonID'], _0x220efd;
}, _0x1078f5['prototype']['getSkinName'] = function () {
var _0xb2eb9 = 'arctic/bear/' + this['animalSpecies'] + this['getSubSpecies']() + '/bear';
if (this['animalSpecies'] == 0xc9 && this['flag_usingAbility']) _0xb2eb9 += '1';
return _0xb2eb9;
};

function _0x1078f5() {
_0x1078f5['superClass']['call'](this, _0x4ad968);
}
window['PolarBear'] = _0x1078f5, _0x13dc56['setCustomClassForGameObjType'](_0x1078f5, _0x4ad968, _0x3e89f8);
var _0x1e3c43 = _0x3d6c08;
_0x30afa9['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x30afa9['prototype']['constructor'] = _0x30afa9, _0x30afa9['superClass'] = _0x1e3c43, _0x30afa9['prototype']['getSpeciesPath'] = function (_0x7073c2) {
return 'arctic/' + _0x7073c2 + '/' + this['animalSpecies'];
}, _0x30afa9['prototype']['animalInfo'] = function () {
var _0x3ce37b = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x3ce37b['aniName'] = 'Lemming!';
    break;
}
return _0x3ce37b['skinName'] = this['getSpeciesPath']('lemming') + '/lemming', _0x3ce37b['aniDesc'] = '', _0x3ce37b['upgradeText'] = 'You\'re a tiny ' + _0x3ce37b['aniName'] + ' - Eat food to grow!', _0x3ce37b['aniCol'] = '#CFCFCF', _0x3ce37b;
}, _0x30afa9['prototype']['getSkinName'] = function () {
var _0x303c16 = this['getSpeciesPath']('lemming') + '/lemming';
return _0x303c16;
};

function _0x30afa9() {
_0x30afa9['superClass']['call'](this, _0x4ad968);
}
window['Lemming'] = _0x30afa9, _0x13dc56['setCustomClassForGameObjType'](_0x30afa9, _0x4ad968, _0x49617f);

function _0x30409f(_0x3d1fbc) {
var _0x4be544 = _0x13dc56['createGameObjOfOType'](_0x4ad968, _0x3d1fbc['animalType']);
_0x4be544['animalType'] = _0x3d1fbc['animalType'], _0x4be544['animalSpecies'] = _0x3d1fbc['animalSpecies'], _0x4be544['animalSubSpecies'] = _0x3d1fbc['animalSubSpecies'], _0x4be544['animalPremiumSkin'] = _0x3d1fbc['premiumSkinGroup'], _0x4be544['mopeSeasonID'] = 0x1, _0x4be544['skinThemeID'] = 0x0;
var _0x1b226e = _0x4be544['animalInfo']();
_0x3d1fbc['aniCol'] = _0x1b226e['aniCol'], _0x3d1fbc['aniName'] = _0x1b226e['aniName'], _0x3d1fbc['skinName'] = _0x1b226e['skinName'], _0x3d1fbc['upgradeText'] = _0x1b226e['upgradeText'];
var _0x2efcc4 = _0x4be544['getAbilityInfo'](_0x3d1fbc['abilityType']);
return _0x3d1fbc['abilityImage'] = _0x2efcc4['abilImg'], _0x3d1fbc['abilityName'] = _0x2efcc4['abilName'], _0x3d1fbc;
}
class _0x24e5e1 {
constructor(_0x31d54e) {
    this['data'] = _0x31d54e;
    if (!this['miniMapCanvas']) this['miniMapCanvas'] = document['createElement']('canvas');
    this['miniMapCanvas']['width'] = this['data']['mapWidth'], this['miniMapCanvas']['height'] = this['data']['mapHeight'], this['ctx_'] = this['miniMapCanvas']['getContext']('2d'), this['ctx_']['globalAlpha'] = 0.2, this['drawObjects']();
} ['drawObjects']() {
    for (let _0x4ee1eb = 0x0; _0x4ee1eb < this['data']['objects']['length']; _0x4ee1eb++) {
        let _0x4f984f = this['data']['objects'][_0x4ee1eb];
        if (_0x4f984f['isRect']) this['drawRect'](_0x4f984f);
        else this['drawCircle'](_0x4f984f);
    }
} ['drawCircle'](_0x22b130) {
    var _0x400384 = _0x22b130['x'] * this['data']['scaleX'],
        _0x376ce0 = _0x22b130['y'] * this['data']['scaleY'],
        _0x156664 = _0x22b130['r'] / this['data']['objScale'];
    if (_0x22b130['objType'] == _0x2eb6c6) _0x156664 = _0x156664 * 0x2;
    else {
        if (_0x22b130['outline'] !== undefined) {
            this['ctx_']['beginPath'](), this['ctx_']['globalAlpha'] = 0x1, this['ctx_']['fillStyle'] = _0x22b130['outline'];
            var _0x4ed7dd = Math['max'](0x1, _0x156664) + 0x1;
            this['ctx_']['arc'](_0x400384, _0x376ce0, _0x4ed7dd, 0x0, 0x2 * Math['PI']), this['ctx_']['fill']();
        }
    }
    if (_0x22b130['objType'] == _0x2eb6c6 && _0xefeaf8) {
        var _0xcb33b4 = '/assets/s/2/gameobj/78/mini' + _0x22b130['teamID'] + '.png',
            _0x4cde89 = _0x5ace1d(_0xcb33b4);
        _0x4cde89 && (this['ctx_']['globalAlpha'] = 0x1, this['ctx_']['save'](), this['ctx_']['drawImage'](_0x4cde89, _0x400384 - _0x156664, _0x376ce0 - _0x156664, _0x156664 * 0x2, _0x156664 * 0x2), this['ctx_']['restore']());
    } else this['ctx_']['beginPath'](), this['ctx_']['globalAlpha'] = 0x1, this['ctx_']['fillStyle'] = _0x22b130['c'], this['ctx_']['arc'](_0x400384, _0x376ce0, Math['max'](0x1, _0x156664), 0x0, 0x2 * Math['PI']), this['ctx_']['fill']();
} ['drawRect'](_0x3146e9) {
    var _0x196fcc = _0x3146e9['x'] * this['data']['scaleX'],
        _0x5b317c = _0x3146e9['y'] * this['data']['scaleY'],
        _0x4c36e1 = _0x3146e9['w'] * this['data']['scaleX'],
        _0xe9e36 = _0x3146e9['h'] * this['data']['scaleY'];
    this['ctx_']['globalAlpha'] = 0x1, this['ctx_']['fillStyle'] = _0x3146e9['c'], this['ctx_']['fillRect'](_0x196fcc - _0x4c36e1 / 0x2, _0x5b317c - _0xe9e36 / 0x2, _0x4c36e1, _0xe9e36);
} ['drawMap']() {
    if (this['miniMapCanvas'] && _0x161cf1) {
        var _0x369ee5 = _0x1bcf68 - (0xa + this['data']['mapWidth']) * _0x4ffcf2,
            _0x2dc05d = 0xa * _0x4ffcf2;
        _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0x1, _0x1d2dab['drawImage'](this['miniMapCanvas'], _0x369ee5, _0x2dc05d, this['data']['mapWidth'] * _0x4ffcf2, this['data']['mapHeight'] * _0x4ffcf2), _0x1d2dab['restore']();
        const _0x5e73b7 = _0x1bcf68 - (0xc + this['data']['mapWidth']) * _0x4ffcf2,
            _0x4893f9 = _0x2dc05d - 0x1 * _0x4ffcf2,
            _0x48e2c6 = 0xa,
            _0x531a74 = 0x4;
        _0x1d2dab['save'](), _0x1d2dab['strokeStyle'] = '#8AF5AF', _0x1d2dab['lineWidth'] = _0x531a74, _0x55fec5(_0x1d2dab, _0x5e73b7, _0x4893f9, (this['data']['mapWidth'] + 0x2) * _0x4ffcf2, (this['data']['mapHeight'] + 0x2) * _0x4ffcf2, _0x48e2c6, ![], !![]), _0x1d2dab['restore']();
    }
    _0x4d6d2b();
    if (_0x278a8b && _0x278a8b['length'] > 0x0) {
        const _0x5ceaf4 = this['data']['mapWidth'] + 0xc,
            _0x4e2bcc = 0xa;
        for (var _0x527450 = 0x0; _0x527450 < _0x278a8b['length']; _0x527450++) {
            _0x278a8b[_0x527450]['sx'] = _0x5ceaf4, _0x278a8b[_0x527450]['sy'] = _0x4e2bcc, _0x3145b9(_0x278a8b[_0x527450], 'white', 0x1);
        }
    }
    if (_0x284d8d != null) _0x3145b9(_0x284d8d, 'cyan', 0x1);
    var _0x584f48 = _0x3c55ea[_0x2fc9ba];
    if (_0x584f48) {
        const _0x12fa5e = this['data']['mapWidth'] + 0xc,
            _0x2d689a = 0xa;
        _0x3145b9({
            'id': _0x2fc9ba,
            'sx': _0x12fa5e,
            'sy': _0x2d689a,
            'x': _0x782014,
            'y': _0xe7fe22
        }, 'white', 0x1);
    }
    var _0x1a7994 = this['data']['mapHeight'] * _0x4ffcf2 + _0x2dc05d;
    _0x1a7994 += 0xc * _0x4ffcf2;
    var _0x1de64f = 0xa * _0x4ffcf2;
    this['showPlayerCount'](_0x1de64f, _0x1de64f + _0x1a7994);
} ['setPlayersCount'](_0x4f2dc5, _0x56c9d6) {
    _0x476412['playersCount'] = _0x4f2dc5, _0x476412['alivePlayersCount'] = _0x56c9d6, _0x4ea12d['setText'](_0x5f03df(_0x4f2dc5) + ' online');
} ['getFontSize']() {
    return 0x12 * _0x32b8d4;
} ['showPlayerCount'](_0x3572db, _0x17a8ae) {
    if (_0x2790d1 || _0x44408d) return;
    let _0x3e04e1 = this['getFontSize']();
    _0x4ea12d['setFontSize'](_0x3e04e1), _0x73daf0['setFontSize'](_0x3e04e1), _0x310ccb['setFontSize'](_0x3e04e1), _0x4ea12d['x'] = _0x1bcf68 - (_0x3572db + _0x4ea12d['width'] / 0x2), _0x4ea12d['y'] = _0x17a8ae - _0x4ea12d['height'] / 0x2, _0x4ea12d['draw'](), _0x310ccb['x'] = _0x1bcf68 - (_0x3572db + _0x310ccb['width'] / 0x2), _0x310ccb['y'] = _0x4ea12d['y'] + 0xf * _0x4ffcf2, _0x310ccb['draw']();
}
}
var _0x2081db = 0x93,
_0x1e3c43 = _0x131218;
_0x5271f6['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x5271f6['prototype']['constructor'] = _0x5271f6, _0x5271f6['superClass'] = _0x1e3c43, _0x5271f6['prototype']['drawGrid'] = _0x4974ed['drawGrid'], _0x5271f6['prototype']['updateZ'] = function () {
switch (this['biome']) {
case _0x20c42c:
    this['z'] = -0x12c;
    break;
case _0x1fad46:
    this['z'] = -0x12b;
    break;
case _0x17c220:
case _0x3b46a2:
    this['z'] = -0x12a;
    break;
case _0x2ae105:
    if (this['forceBiomeColor']) this['z'] = -0xd2;
    else this['z'] = -0xd0;
    break;
case _0x27ed64:
    this['z'] = -0x127;
    break;
}
}, _0x5271f6['prototype']['customDraw'] = function (_0x1be409) {
if (this['isRect']) {
    this['drawBiome'](_0x1be409);
    if (!_0x1be409) this['jaggedSides'] && (_0x1d2dab['save'](), this['jaggedSidesForRect'](), _0x1d2dab['restore']());
    if (_0x4974ed['showGrid']) {
        var _0x5c3e5e = 0x2d;
        _0x5c6fe2(-this['getRectWidth']() / 0x2 + _0x5c3e5e, -this['getRectHeight']() / 0x2 + _0x5c3e5e, this['getRectWidth']() / 0x2 - _0x5c3e5e, this['getRectHeight']() / 0x2 - _0x5c3e5e, this['x'], this['y']);
    }
    _0x1d2dab['save'](), _0x1d2dab['restore']();
    if (!_0x4974ed['noTextures']) this['drawTerrainFeatures']();
} else this['drawBiome'](![]);
}, _0x5271f6['prototype']['jaggedPointsForRect'] = function (_0x56c09d) {
var _0x589f16 = 0x0,
    _0x3c8d48 = 0x1,
    _0x1c4dc1 = 0x2,
    _0x52a9a1 = 0x3;
if (this['jaggedSides']) {
    if (_0x56c09d == _0x1c4dc1) {
        this['jaggedRect'][_0x56c09d] = [];
        var _0x404d09 = -this['getRectWidth']() / 0x2,
            _0x1cfba7 = this['getRectWidth']() / 0x2,
            _0x253934 = this['getRectHeight']() / 0x2 - 0x20,
            _0x4869b2 = this['getRectHeight']() / 0x2 - 0x20;
        this['jaggedRect'][_0x56c09d]['push']({
            'x': _0x404d09,
            'y': _0x253934
        });
        var _0x11e585 = 0x14,
            _0x59638c = [-0xc, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
            _0x55f604 = 0x3c,
            _0x17fb51 = 0x0,
            _0x544aca = _0x1f4cd2 - this['x'],
            _0x49f574 = 0x0 - this['x'],
            _0x20ae4b = _0x4767f1 - this['y'],
            _0x3725f4 = 0x0 - this['y'],
            _0x26acd0, _0x1ae84d = _0x404d09 - _0x11e585;
        this['jaggedRect'][_0x56c09d]['push']({
            'x': _0x404d09,
            'y': _0x253934
        }), _0x26acd0 = _0x4869b2 + _0x11e585;
        var _0x36754a = 0x0,
            _0x3d08cd = 0x0;
        for (_0x1ae84d = _0x404d09; _0x1ae84d < _0x1cfba7; _0x1ae84d += _0x55f604) {
            _0x3d08cd = _0x1ae84d, _0x36754a = Math['min'](_0x20ae4b, Math['max'](_0x3725f4, _0x26acd0 + _0x59638c[_0x17fb51])), this['jaggedRect'][_0x56c09d]['push']({
                'x': _0x3d08cd,
                'y': _0x36754a
            }), _0x17fb51 = (_0x17fb51 + 0x1) % _0x59638c['length'];
        }
        this['jaggedRect'][_0x56c09d]['push']({
            'x': _0x1cfba7,
            'y': _0x4869b2
        }), this['jaggedRect'][_0x56c09d]['push']({
            'x': _0x1cfba7,
            'y': _0x253934
        }), this['jaggedRect'][_0x56c09d]['push']({
            'x': _0x404d09,
            'y': _0x253934
        });
    } else {
        if (_0x56c09d == _0x589f16) {
            var _0x3b3877 = 0x64;
            this['jaggedRect'][_0x56c09d] = [], _0x1d2dab['fillStyle'] = _0x201756;
            var _0x404d09 = -this['getRectWidth']() / 0x2,
                _0x1cfba7 = this['getRectWidth']() / 0x2,
                _0x253934 = -this['getRectHeight']() / 0x2 + 0x18,
                _0x4869b2 = -this['getRectHeight']() / 0x2 + 0xc;
            this['jaggedRect'][_0x56c09d]['push']({
                'x': _0x404d09,
                'y': _0x253934
            });
            var _0x11e585 = 0x0,
                _0x59638c = [-0xc, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
                _0x55f604 = 0x3c,
                _0x17fb51 = 0x0,
                _0x544aca = _0x1f4cd2 - this['x'],
                _0x49f574 = 0x0 - this['x'],
                _0x20ae4b = _0x4767f1 - this['y'],
                _0x3725f4 = 0x0 - this['y'],
                _0x26acd0, _0x1ae84d = _0x404d09;
            this['jaggedRect'][_0x56c09d]['push']({
                'x': _0x404d09,
                'y': _0x4869b2
            }), _0x26acd0 = _0x4869b2;
            for (_0x1ae84d = _0x404d09; _0x1ae84d < _0x1cfba7; _0x1ae84d += _0x55f604) {
                _0x3d08cd = _0x1ae84d, _0x36754a = Math['min'](_0x20ae4b, Math['max'](_0x3725f4, _0x26acd0 + _0x59638c[_0x17fb51])), this['jaggedRect'][_0x56c09d]['push']({
                    'x': _0x3d08cd,
                    'y': _0x36754a
                }), _0x17fb51 = (_0x17fb51 + 0x1) % _0x59638c['length'];
            }
            this['jaggedRect'][_0x56c09d]['push']({
                'x': _0x1cfba7,
                'y': _0x4869b2
            }), this['jaggedRect'][_0x56c09d]['push']({
                'x': _0x1cfba7,
                'y': _0x253934
            });
        }
    }
}
}, _0x5271f6['prototype']['drawJaggedCircle'] = function (_0x54588a, _0x2dd632) {
if (this['points2']) this['drawPoints'](this['points2'], _0x2dd632, !![]);
this['drawPoints'](this['points1'], _0x54588a, !![]);
}, _0x5271f6['prototype']['getRectWidth'] = function () {
var _0x58844d = this['rectW'];
return _0x58844d;
}, _0x5271f6['prototype']['getRectHeight'] = function () {
var _0x170aa0 = this['rectH'];
return _0x170aa0;
}, _0x5271f6['prototype']['drawBiome'] = function (_0x2d0e42) {
if (this['biome'] == _0x2ae105) this['drawVolcanoBiome'](_0x2d0e42);
else {
    if (!this['isRect']) _0x1d2dab['fillStyle'] = _0x2d0e42 ? 'red' : this['getBiomeColor'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x1, this['rad']), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill']();
    else {
        if (this['biome'] == _0x1fad46) _0x1d2dab['globalAlpha'] = 0x1;
        if (!_0x2d0e42) {
            _0x1d2dab['fillStyle'] = _0x2d0e42 ? _0x1b5add : this['getBiomeColor']();
            var _0x50b1f0 = _0x2d0e42 ? 0x0 : 0x14;
            _0x1d2dab['fillRect'](-this['getRectWidth']() / 0x2 + _0x50b1f0, -this['getRectHeight']() / 0x2 + _0x50b1f0, this['getRectWidth']() - _0x50b1f0 * 0x2, this['getRectHeight']() - _0x50b1f0 * 0x2);
        }
    }
}
}, _0x5271f6['prototype']['drawVolcanoBiome'] = function (_0x18fc26) {
_0x1d2dab['save']();
if (!(_0x31f3fc == 0x2)) _0x1d2dab['rotate'](this['rPer'] * 0x2 * Math['PI']);
var _0x302297 = 1.5,
    _0x13ffd8 = _0x1170c4('volcano', this['spawnTime']);
_0x13ffd8 !== undefined && _0x13ffd8 != null && (this['theFrame'] = _0x13ffd8);
_0x302297 = this['theFrame'];
var _0x561c4b = 0x4;
this['forceBiomeColor'] ? (_0x1d2dab['fillStyle'] = _0x1b5add, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x561c4b * 0x2 * _0x302297), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['save'](), _0x1d2dab['fillStyle'] = '#8A681B', _0x1d2dab['globalAlpha'] = 0.9, _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x561c4b * 0x4), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['restore']()) : (_0x1d2dab['fillStyle'] = '#604729', _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x1d2dab['fill']()), !(_0x31f3fc == 0x2 || this['forceBiomeColor']) && (_0x1d2dab['fillStyle'] = '#8A681B', _0x1d2dab['beginPath'](), _0x1d2dab['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x561c4b + _0x302297), 0x0, Math['PI'] * 0x2), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x302297), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x302297), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x302297), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x302297), 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath'](), _0x1d2dab['beginPath'](), _0x1d2dab['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x1d2dab['fill'](), _0x1d2dab['beginPath']()), _0x1d2dab['restore']();
}, _0x5271f6['prototype']['drawPoints'] = function (_0x42b025, _0x24f943, _0x531d20) {
if (_0x531d20) _0x1d2dab['fillStyle'] = _0x24f943;
else _0x1d2dab['strokeStyle'] = _0x24f943;
_0x1d2dab['strokeStyle'] = _0x24f943, _0x1d2dab['beginPath']();
var _0x15bd1d = 0xa;
_0x1d2dab['moveTo'](_0x42b025[0x0]['x'] * _0x15bd1d, _0x42b025[0x0]['y'] * _0x15bd1d);
for (var _0x279547 = 0x1; _0x279547 < _0x42b025['length']; _0x279547++) {
    _0x1d2dab['lineTo'](_0x42b025[_0x279547]['x'] * _0x15bd1d, _0x42b025[_0x279547]['y'] * _0x15bd1d);
}
_0x1d2dab['lineTo'](_0x42b025[0x0]['x'] * _0x15bd1d, _0x42b025[0x0]['y'] * _0x15bd1d);
if (_0x531d20) _0x1d2dab['fill']();
else _0x1d2dab['stroke']();
}, _0x5271f6['prototype']['drawJaggedRect'] = function () {
var _0x16eb5e = 0x0,
    _0x588ed5 = 0x1,
    _0xcb57a0 = 0x2,
    _0x3d250f = 0x3;
for (var _0x4ad0aa = 0x0; _0x4ad0aa < this['jaggedRect']['length']; _0x4ad0aa++) {
    if (this['jaggedRect'][_0x4ad0aa]) {
        var _0x5a406a = this['jaggedRect'][_0x4ad0aa];
        if (_0x5a406a && _0x5a406a['length'] > 0x0) {
            _0x1d2dab['fillStyle'] = this['biomeColor'], _0x1d2dab['strokeStyle'] = 'red', _0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](_0x5a406a[0x0]['x'], _0x5a406a[0x0]['y']);
            for (i = 0x1; i < _0x5a406a['length']; i++) _0x1d2dab['lineTo'](_0x5a406a[i]['x'], _0x5a406a[i]['y']);
            _0x1d2dab['closePath'](), _0x1d2dab['fill'](), _0x1d2dab['stroke']();
        }
    }
}
}, _0x5271f6['prototype']['jaggedPointsForCircle'] = function (_0x2b9438, _0x4ad2ee, _0x3a6dd0, _0x1cc458, _0xe992a2) {
if (this['points1'] == undefined) {
    this['points1'] = [];
    if (_0xe992a2 > 0x0) this['points2'] = [];
    var _0x3e2a2f = _0x5e22a2(-0x2, 0x2),
        _0x317a38 = 0x2 * Math['PI'] / _0x1cc458;
    a = _0x2bcbaa(_0x3e2a2f);
    var _0x5c89b4 = Math['cos'](a),
        _0x38bb6f = Math['sin'](a),
        _0x4965db = _0x2b9438 + _0x3a6dd0 * _0x5c89b4,
        _0x16fc00 = _0x4ad2ee + _0x3a6dd0 * _0x38bb6f;
    this['points1']['push']({
        'x': _0x4965db,
        'y': _0x16fc00
    });
    if (_0xe992a2 > 0x0) {
        var _0x22fa5b = _0x2b9438 + (_0x3a6dd0 + _0xe992a2) * _0x5c89b4,
            _0x5d3a60 = _0x4ad2ee + (_0x3a6dd0 + _0xe992a2) * _0x38bb6f;
        this['points2']['push']({
            'x': _0x22fa5b,
            'y': _0x5d3a60
        });
    }
    for (var _0x53b306 = 0x1; _0x53b306 < _0x1cc458; _0x53b306++) {
        var _0x549d44 = _0x5e22a2(-0x1, 0x1);
        _0x3e2a2f = _0x5e22a2(-0x2, 0x2);
        var _0x3ef658 = _0x3a6dd0 + _0x549d44;
        a = _0x317a38 * _0x53b306 + _0x2bcbaa(_0x3e2a2f), _0x5c89b4 = Math['cos'](a), _0x38bb6f = Math['sin'](a);
        var _0x3121be = _0x2b9438 + _0x3ef658 * _0x5c89b4,
            _0x4d12e7 = _0x4ad2ee + _0x3ef658 * _0x38bb6f;
        this['points1']['push']({
            'x': _0x3121be,
            'y': _0x4d12e7
        });
        if (_0xe992a2 > 0x0) {
            var _0x1fc701 = _0x3a6dd0 + _0xe992a2 + _0x549d44,
                _0x5053be = _0x2b9438 + (_0x1fc701 + _0xe992a2) * _0x5c89b4,
                _0x5cd4a6 = _0x4ad2ee + (_0x1fc701 + _0xe992a2) * _0x38bb6f;
            this['points2']['push']({
                'x': _0x5053be,
                'y': _0x5cd4a6
            });
        }
    }
    this['points1']['push']({
        'x': _0x4965db,
        'y': _0x16fc00
    });
    if (_0xe992a2 > 0x0) this['points2']['push']({
        'x': _0x22fa5b,
        'y': _0x5d3a60
    });
}
}, _0x5271f6['prototype']['jaggedSidesForRect'] = function () {
var _0x2a2917 = 0x2a;
_0x1d2dab['fillStyle'] = this['getBiomeColor']();
var _0x5c99a2 = -this['getRectWidth']() / 0x2 + _0x2a2917,
    _0x4b9a91 = this['getRectWidth']() / 0x2 - _0x2a2917,
    _0x1d30f5 = -this['getRectHeight']() / 0x2 + _0x2a2917,
    _0xe71665 = this['getRectHeight']() / 0x2 - _0x2a2917;
_0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](_0x5c99a2, _0x1d30f5);
var _0x5816f8 = 0x1e,
    _0x504c24 = [-0x8, 0xa, -0xa, 0xc, 0x0, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
    _0x36f350 = 0x2d,
    _0x493504 = 0x0,
    _0x24d8fc = _0x1f4cd2 - this['x'],
    _0x2265da = 0x0 - this['x'],
    _0x1c5441 = _0x4767f1 - this['y'],
    _0x333e82 = 0x0 - this['y'],
    _0x533fbf, _0x6a3e16 = _0x5c99a2 - _0x5816f8;
for (_0x533fbf = _0x1d30f5; _0x533fbf < _0xe71665; _0x533fbf += _0x36f350) {
    _0x1d2dab['lineTo'](Math['min'](_0x24d8fc, Math['max'](_0x2265da, _0x6a3e16 + _0x504c24[_0x493504])), _0x533fbf), _0x493504 = (_0x493504 + 0x1) % _0x504c24['length'];
}
_0x1d2dab['lineTo'](_0x5c99a2, _0xe71665), _0x533fbf = _0xe71665 + _0x5816f8;
for (_0x6a3e16 = _0x5c99a2; _0x6a3e16 < _0x4b9a91; _0x6a3e16 += _0x36f350) {
    _0x1d2dab['lineTo'](_0x6a3e16, Math['min'](_0x1c5441, Math['max'](_0x333e82, _0x533fbf + _0x504c24[_0x493504]))), _0x493504 = (_0x493504 + 0x1) % _0x504c24['length'];
}
_0x1d2dab['lineTo'](_0x4b9a91, _0xe71665), _0x6a3e16 = _0x4b9a91 + _0x5816f8;
for (_0x533fbf = _0xe71665; _0x533fbf > _0x1d30f5; _0x533fbf -= _0x36f350) {
    _0x1d2dab['lineTo'](Math['min'](_0x24d8fc, Math['max'](_0x2265da, _0x6a3e16 + _0x504c24[_0x493504])), _0x533fbf), _0x493504 = (_0x493504 + 0x1) % _0x504c24['length'];
}
_0x1d2dab['lineTo'](_0x4b9a91, _0x1d30f5), _0x533fbf = _0x1d30f5 - _0x5816f8;
for (_0x6a3e16 = _0x4b9a91; _0x6a3e16 > _0x5c99a2; _0x6a3e16 -= _0x36f350) {
    _0x1d2dab['lineTo'](_0x6a3e16, Math['min'](_0x1c5441, Math['max'](_0x333e82, _0x533fbf + _0x504c24[_0x493504]))), _0x493504 = (_0x493504 + 0x1) % _0x504c24['length'];
}
_0x1d2dab['closePath'](), _0x1d2dab['fill']();
}, _0x5271f6['prototype']['getBiomeColor'] = function () {
if (this['forceBiomeColor']) return this['biomeColor'];
switch (this['biome']) {
case _0x27ed64:
    return _0x201756;
case _0x3b46a2:
    return '#c4dee7';
case _0x17c220:
    return _0x2e6d6d;
case _0x2ae105:
    return _0x2d7435;
case _0x20c42c:
    return _0x59301f;
case _0x1fad46:
    return _0x158cac;
default:
    return _0x59301f;
}
}, _0x5271f6['prototype']['jaggedSides'] = null, _0x5271f6['prototype']['forceBiomeColor'] = ![], _0x5271f6['prototype']['readCustomData_onNewlyVisible'] = function (_0x41bafc) {
this['isRect'] = _0x41bafc['readUInt8']() == 0x1, this['biomeColor'] = _0x41bafc['readString'](), this['biome'] = _0x41bafc['readUInt16']();
var _0x770157 = _0x41bafc['readBitGroup']();
this['forceBiomeColor'] = _0x770157['getBool']();
this['isRect'] && (this['jaggedSides'] = [_0x770157['getBool'](), _0x770157['getBool'](), _0x770157['getBool'](), _0x770157['getBool']()]);
if (!this['isRect']) this['jaggedPointsForCircle'](0x0, 0x0, this['rad'], 0x28, 0x5, this['biomeColor'], '#DAB601');
else {
    this['jaggedRect'] = [];
    var _0x53e813 = 0x0,
        _0xdfe716 = 0x1,
        _0x5ad2d4 = 0x2,
        _0x131059 = 0x3;
}
this['drawGrid'] = _0x4974ed['showGrid'];
if (this['isRect'] && this['biome'] != _0x27ed64) this['generateTerrainFeatures']();
}, _0x5271f6['prototype']['biomePattern'] = null, _0x5271f6['prototype']['generateTerrainFeatures'] = function () {
var _0x48eb16 = 0x64,
    _0x578749 = 0x64,
    _0x1b8a4d = 1.5;
if (this['biome'] == _0x17c220) _0x48eb16 = 0x7d, _0x578749 = 0x7d, _0x1b8a4d = 1.5;
else this['biome'] == _0x1fad46 && (_0x48eb16 = 0x4b, _0x578749 = 0x4b, _0x1b8a4d = 0x2);
var _0x50b545 = 0x1,
    _0x54fbbe = -this['getRectWidth']() / 0x2 + _0x48eb16,
    _0x2544df = -this['getRectHeight']() / 0x2 + _0x578749,
    _0x550e33 = this['getRectWidth']() / 0x2,
    _0x703501 = this['getRectHeight']() / 0x2,
    _0xc13e38 = _0x48eb16 * (this['biome'] == _0x1fad46 ? 0x2 : 0x3),
    _0x31f73e = 0x0,
    _0x203454 = [];
for (; _0x54fbbe < _0x550e33 - _0x48eb16; _0x54fbbe++) {
    if (_0x50b545 == 0x1) {
        var _0x509cfd = {
            'x': _0x54fbbe,
            'y': _0x2544df,
            'rx': _0x54fbbe + _0x48eb16 * _0x5e22a2(-0.25, 0.25),
            'ry': _0x2544df + _0x578749 * _0x5e22a2(-0.25, 0.25),
            'w': _0x48eb16 * _0x1b8a4d,
            'h': _0x578749 * _0x1b8a4d,
            'c': 'blue',
            'img': this['getRandomPatternImg'](),
            'r': _0x5e22a2(0x0, 0xb4)
        };
        if (_0x509cfd['img'] < 0x0) _0x509cfd['img'] = 0x0;
        _0x203454['push'](_0x509cfd);
    }
    _0x54fbbe += _0xc13e38;
    if (_0x54fbbe >= _0x550e33 - _0x48eb16) {
        _0x2544df += _0xc13e38;
        if (this['biome'] != _0x20c42c && this['biome'] != _0x1fad46) _0x50b545 = _0x50b545 == 0x0 ? 0x1 : 0x0;
        _0x54fbbe = -this['getRectWidth']() / 0x2 + _0x48eb16;
    }
    if (this['biome'] != _0x20c42c && this['biome'] != _0x1fad46) _0x50b545 = _0x50b545 == 0x0 ? 0x1 : 0x0;
    else _0x50b545 = _0x50b545 == 0x0 ? 0x1 : 0x0;
    if (this['biome'] == _0x20c42c) _0x50b545 = 0x1;
    if (_0x2544df > _0x703501 - _0x578749) break;
}
this['biomePattern'] = _0x203454;
}, _0x5271f6['prototype']['drawTerrainFeatures'] = function () {
if (this['biomePattern'])
    for (i = 0x0; i < this['biomePattern']['length']; i++) {
        this['drawRectObj'](this['biomePattern'][i]);
    }
}, _0x5271f6['prototype']['fillPattern'] = function (_0x2dc5d9) {
var _0x57506f = this['curBiome'] + '_' + _0x2dc5d9,
    _0x1471dd = 'gameobj/' + this['oType'] + '/' + _0x57506f + '.jpg',
    _0x10b8b7 = this['getSkinImageObj'](_0x1471dd);
if (_0x10b8b7) {
    var _0xff5edc = -this['getRectWidth']() / 0x2,
        _0x369407 = -this['getRectHeight']() / 0x2,
        _0x478b3b = this['getRectWidth']() * 0x2,
        _0x2de4f7 = this['getRectHeight']() * 0x2,
        _0x4cf398 = _0x1d2dab['createPattern'](_0x10b8b7, 'repeat');
    _0x1d2dab['fillStyle'] = _0x4cf398, _0x1d2dab['fillRect'](_0xff5edc, _0x369407, _0x478b3b, _0x2de4f7);
}
}, _0x5271f6['prototype']['drawRectObj'] = function (_0x129081) {
var _0x2b22ca = this['curBiome'] + '_' + _0x129081['img'],
    _0x411418 = 'gameobj/' + this['oType'] + '/' + _0x2b22ca + '.png',
    _0xe16e81 = this['getSkinImageObj'](_0x411418);
if (_0xe16e81) {
    _0x1d2dab['save'](), _0x1d2dab['translate'](_0x129081['rx'], _0x129081['ry']);
    if (this['biome'] == _0x20c42c || this['biome'] == _0x3b46a2 && _0x129081['img'] == 0x1 || this['biome'] == _0x17c220 && _0x129081['img'] > 0x1) _0x1d2dab['rotate'](_0x129081['r']);
    _0x1d2dab['drawImage'](_0xe16e81, 0x0, 0x0, _0x129081['w'], _0x129081['h']), _0x1d2dab['restore']();
}
}, _0x5271f6['prototype']['getRandomPatternImg'] = function () {
var _0x271f8a = 0x1;
if (this['biome'] == _0x20c42c || this['biome'] == _0x3b46a2) _0x271f8a = Math['max'](0x0, Math['round'](_0x5e22a2(0x0, 0x3)));
else {
    if (this['biome'] == _0x1fad46) _0x271f8a = 0x1;
    else _0x271f8a = Math['max'](0x0, Math['round'](_0x5e22a2(0x0, 0x2)));
}
return _0x271f8a - 0x1;
};

function _0x5271f6() {
_0x5271f6['superClass']['call'](this, _0x2081db);
}
window['BiomeShape'] = _0x5271f6, _0x13dc56['setCustomClassForGameObjType'](_0x5271f6, _0x2081db);
var _0x1e3c43 = _0x131218;
_0x108be5['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x108be5['prototype']['constructor'] = _0x108be5, _0x108be5['superClass'] = _0x1e3c43, _0x108be5['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x108be5['prototype']['customDraw'] = function (_0x194926) {
var _0x7d0f09 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + this['oType'] + '.png');
if (_0x7d0f09) {
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = this['alpha'] < 0.7 ? this['alpha'] : 0x1;
    var _0x3b2198 = this['rad'] * 0x1;
    _0x1d2dab['rotate'](this['angle'] + _0x2bcbaa(0xb4)), _0x1d2dab['drawImage'](_0x7d0f09, -_0x3b2198, -_0x3b2198, _0x3b2198 * 0x2, _0x3b2198 * 0x2), _0x1d2dab['restore']();
}
}, _0x108be5['prototype']['readCustomData_onNewlyVisible'] = function (_0x3350bf) {
this['alpha'] = _0x3350bf['readUInt8']() / 0x64;
}, _0x108be5['prototype']['readUpdatedProperty'] = function (_0x224822, _0x3543ed) {
_0x224822 == _0x225f9d && (this['alpha'] = _0x3543ed['readUInt8']() / 0x64);
};
var _0x4e8ffc = 0x94;

function _0x108be5() {
_0x108be5['superClass']['call'](this, _0x4e8ffc);
}
window['OceanWave'] = _0x108be5, _0x13dc56['setCustomClassForGameObjType'](_0x108be5, _0x4e8ffc);
var _0x1e3c43 = _0x131218;
_0x413b4d['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x413b4d['prototype']['constructor'] = _0x413b4d, _0x413b4d['superClass'] = _0x1e3c43, _0x413b4d['prototype']['updateZ'] = function () {
this['z'] = -0x126;
}, _0x413b4d['prototype']['customDraw'] = function (_0x5b9c0d) {
var _0xf8a67b = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + this['oType'] + '_' + this['speciesType'] + '.png');
if (_0xf8a67b) {
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = this['alpha'] < 0.7 ? this['alpha'] : 0x1;
    var _0x483f7a = this['rad'];
    _0x1d2dab['rotate'](this['angle'] + _0x2bcbaa(0xb4)), _0x1d2dab['drawImage'](_0xf8a67b, -_0x483f7a, -_0x483f7a, _0x483f7a * 0x2, _0x483f7a * 0x2), _0x1d2dab['restore']();
}
}, _0x413b4d['prototype']['readCustomData_onNewlyVisible'] = function (_0x5ef55d) {
this['alpha'] = _0x5ef55d['readUInt8']() / 0x64;
}, _0x413b4d['prototype']['readUpdatedProperty'] = function (_0x4dac86, _0xe122c) {
_0x4dac86 == _0x225f9d && (this['alpha'] = _0xe122c['readUInt8']() / 0x64);
};
var _0x1dad26 = 0x95;

function _0x413b4d() {
_0x413b4d['superClass']['call'](this, _0x1dad26);
}
window['UnderwaterFish'] = _0x413b4d, _0x13dc56['setCustomClassForGameObjType'](_0x413b4d, _0x1dad26);
var _0x1e3c43 = _0x131218;
_0x1c7a70['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x1c7a70['prototype']['constructor'] = _0x1c7a70, _0x1c7a70['superClass'] = _0x1e3c43, _0x1c7a70['prototype']['updateZ'] = function () {
this['z'] = this['rad'] + 0x64;
}, _0x1c7a70['prototype']['setSkinPath'] = function () {
var _0x226487 = this['oType'] + '_' + this['speciesSubType'];
this['objSkinPath'] = 'gameobj/' + this['oType'] + '/' + _0x226487 + '_' + this['hasPopped'] + '.png';
}, _0x1c7a70['prototype']['customDraw'] = function (_0x156fe3) {
var _0x1d72e4 = this['getSkinImageObj'](this['objSkinPath']);
if (_0x1d72e4) {
    _0x1d2dab['save']();
    var _0x24652a = this['rad'] * 0x1;
    _0x1d2dab['globalAlpha'] = 0x1, _0x1d2dab['drawImage'](_0x1d72e4, -_0x24652a, -_0x24652a, _0x24652a * 0x2, _0x24652a * 0x2), _0x1d2dab['restore']();
}
}, _0x1c7a70['prototype']['hasPopped'] = 0x0, _0x1c7a70['prototype']['readUpdatedProperty'] = function (_0x5bbb11, _0x57bcd3) {
_0x5bbb11 == _0x464db4 && (this['hasPopped'] = _0x57bcd3['readUInt8']());
};
var _0x44d3d9 = 0x97;

function _0x1c7a70() {
_0x1c7a70['superClass']['call'](this, _0x44d3d9);
}
window['Bubbles'] = _0x1c7a70, _0x13dc56['setCustomClassForGameObjType'](_0x1c7a70, _0x44d3d9);
var _0x1e3c43 = _0x131218;
_0x1ad0ff['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x1ad0ff['prototype']['constructor'] = _0x1ad0ff, _0x1ad0ff['superClass'] = _0x1e3c43, _0x1ad0ff['prototype']['updateZ'] = function () {
this['z'] = -0x96;
}, _0x1ad0ff['prototype']['customDraw'] = function (_0x49e6d9) {
var _0x206fef = 0x0,
    _0xd79cf9 = 0x1,
    _0x3d5c7d = 0x1;
if (!_0x44408d && !(_0x31f3fc == 0x2)) {
    var _0x159697 = (_0x740c5b - this['spawnTime']) / 0x3e8,
        _0x3f4907 = 1.2;
    _0xd79cf9 = 3.5 * Math['cos'](0x2 * Math['PI'] / _0x3f4907 * _0x159697), _0x3d5c7d = 2.5 * Math['sin'](0x2 * Math['PI'] / _0x3f4907 * _0x159697);
    var _0x3747c9 = 0x5 / 0x3c,
        _0x11c0dc = 0x3e8 / _0x3747c9,
        _0x5cb502 = (_0x740c5b - this['spawnTime']) % _0x11c0dc / _0x11c0dc;
    _0x206fef = _0x5cb502 * 0x2 * Math['PI'];
}
_0x1d2dab['save'](), _0x1d2dab['rotate'](_0x206fef), _0x1d2dab['globalAlpha'] = this['getObjAlpha']();
for (i = 0x0; i < 0x5; i++) {
    var _0x220f6e = this['getSkinImage'](i);
    if (_0x220f6e) {
        var _0x900c4c = this['rad'],
            _0x296646 = i > 0x3 ? _0xd79cf9 * (0x1 - i / 0xa) : 0x0,
            _0x36c563 = i > 0x3 ? _0x3d5c7d * (0x1 - i / 0x5) : 0x0;
        _0x1d2dab['drawImage'](_0x220f6e, -_0x900c4c + _0x296646, -_0x900c4c + _0x36c563, 0x2 * _0x900c4c, 0x2 * _0x900c4c);
    }
}
_0x1d2dab['restore']();
}, _0x1ad0ff['prototype']['setSkinPath'] = function (_0x9b00f0) {
this['objSkinPath'] = 'gameobj/' + this['oType'] + '/' + _0x9b00f0 + '.png';
}, _0x1ad0ff['prototype']['getSkinImage'] = function (_0x5d9c12) {
var _0x3a500e = this['getSkinImageObj'](this['objSkinPath']);
return _0x3a500e;
};

function _0x1ad0ff() {
_0x1ad0ff['superClass']['call'](this, _0x51b980), this['doesDrawEffectScale'] = ![], this['drawEffectScale_Slow'] = ![];
}
window['OceanHidinghole'] = _0x1ad0ff, _0x13dc56['setCustomClassForGameObjType'](_0x1ad0ff, _0x51b980);
var _0x1e3c43 = _0x131218;
_0x493013['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x493013['prototype']['constructor'] = _0x493013, _0x493013['superClass'] = _0x1e3c43, _0x493013['prototype']['playerID'] = 0x0, _0x493013['prototype']['shellState'] = 0x0, _0x493013['prototype']['cracksCount'] = 0x0, _0x493013['prototype']['updateZ'] = function () {
if (this['shellState'] == 0x0) this['z'] = this['rad'];
else this['z'] = -0x99;
}, _0x493013['prototype']['isEdibleOutlined'] = function () {
if (this['playerID'] == _0x2fc9ba) return ![];
return _0x233b7c['superClass']['prototype']['isEdibleOutlined']['call'](this);
}, _0x493013['prototype']['nextShakeEndT'] = 0x0, _0x493013['prototype']['nextShakeStartT'] = 0x0, _0x493013['prototype']['drawScaleEffect'] = function () {
if (this['shellState'] != 0x1) this['drawNickName'](0x1);
if (this['shellState'] == 0x0) {
    _0x740c5b > this['nextShakeEndT'] && (this['nextShakeEndT'] = +new Date() + _0x5e22a2(0x9c4, 0x1194), this['nextShakeStartT'] = this['nextShakeEndT'] - _0x5e22a2(0x3e8, 0x5dc));
    if (_0x740c5b > this['nextShakeStartT'] && _0x740c5b < this['nextShakeEndT']) {
        var _0x5105a0 = 0.02,
            _0x146d1e = (_0x740c5b - this['spawnTime']) / 0x3e8,
            _0x351b10 = 0.1,
            _0x2461c5 = this['rad'] * _0x5105a0,
            _0x2f71e1 = _0x2461c5 * Math['sin'](0x2 * Math['PI'] / _0x351b10 * _0x146d1e),
            _0x351b10 = 0.15,
            _0x2461c5 = this['rad'] * _0x5105a0,
            _0x19d723 = _0x2461c5 * Math['cos'](0x2 * Math['PI'] / _0x351b10 * _0x146d1e);
        _0x1d2dab['translate'](-_0x2f71e1, -_0x19d723);
    }
}
}, _0x493013['prototype']['customDraw'] = function (_0x2e7c16) {
var _0xf175d7 = 'upgradeshell';
if (this['shellState'] == 0x0) {
    if (this['cracksCount'] > 0x0 && this['cracksCount'] <= 0xa) _0xf175d7 = 'egg_crack' + this['cracksCount'];
    else _0xf175d7 += '' + this['shellState'];
} else _0xf175d7 += '' + this['shellState'];
var _0x2b7430 = this['getSkinImageObj']('img/upgradeshell/' + _0xf175d7 + '.png'),
    _0x3b50c9 = this['getSkinImageObj']('img/upgradeshell/outline' + this['curBiome'] + '.png'),
    _0x15d5e2 = this['rad'],
    _0x3b03c1 = this['rPer'] * Math['PI'] * 0x2;
_0x1d2dab['save'](), _0x1d2dab['rotate'](_0x3b03c1);
if (_0x2b7430) {
    _0x1d2dab['drawImage'](_0x2b7430, -_0x15d5e2, -_0x15d5e2 * 1.1, 0x2 * _0x15d5e2, 2.2 * _0x15d5e2);
    if (this['shellState'] == 0x0 && _0x3b50c9) _0x1d2dab['drawImage'](_0x3b50c9, -_0x15d5e2, -_0x15d5e2 * 1.1, 0x2 * _0x15d5e2, 2.21 * _0x15d5e2);
}
_0x1d2dab['restore']();
}, _0x493013['prototype']['getNameSize'] = function () {
return 0x6;
}, _0x493013['prototype']['setNick'] = function (_0x320dbf) {
this['nickName'] = _0x320dbf, null == this['nickTXT'] ? (this['nickTXT'] = new _0x407dea(this['getNameSize'](), '#FFFFFF'), this['nickTXT']['strokeW'] = 1.5, this['nickTXT']['renderScale'] = 0x5, this['nickTXT']['setText'](this['nickName'])) : (this['nickTXT']['setFontSize'](this['getNameSize']()), this['nickTXT']['setText'](this['nickName']));
}, _0x493013['prototype']['drawNickName'] = function (_0x5bddb3) {
this['nickName'] && this['nickTXT'] && !_0x49a9c3 && (_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = _0x5bddb3, this['nickTXT']['x'] = 0x0, this['nickTXT']['y'] = this['rad'] + 0x5, this['nickTXT']['draw'](), _0x1d2dab['restore']());
}, _0x493013['prototype']['readCustomData_onNewlyVisible'] = function (_0x580f24) {
_0x493013['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x580f24), this['playerID'] = _0x580f24['readUInt32']();
if (this['playerID'] > 0x0) {
    var _0x3664e6 = _0x580f24['readString']();
    this['setNick'](_0x3664e6 ? _0x3664e6 : 'mope.io');
}
this['readUpdatedProperty'](_0x1fa617, _0x580f24), this['readUpdatedProperty'](_0x5aab2c, _0x580f24);
}, _0x493013['prototype']['readUpdatedProperty'] = function (_0x147da1, _0x552fc2) {
if (_0x147da1 == _0x1fa617) this['shellState'] = _0x552fc2['readUInt8']();
else {
    if (_0x147da1 == _0x5aab2c) this['cracksCount'] = _0x552fc2['readUInt8']();
}
};
var _0xebd208 = 0x98;

function _0x493013() {
_0x493013['superClass']['call'](this, _0xebd208);
}
window['UpgradeShell'] = _0x493013, _0x13dc56['setCustomClassForGameObjType'](_0x493013, _0xebd208);
for (_eimg = 0x1; _eimg <= 0xa; _eimg++) {
var _0x4157f6 = 'egg_crack' + _eimg,
    _0x12fdde = './assets/s/2/img/upgradeshell/' + _0x4157f6 + '.png';
_0x5ace1d(_0x12fdde);
}
for (_eimg = 0x0; _eimg <= 0x5; _eimg++) {
var _0x4157f6 = 'outline' + _eimg,
    _0x12fdde = './assets/s/2/img/upgradeshell/' + _0x4157f6 + '.png';
_0x5ace1d(_0x12fdde);
}
var _0x1e3c43 = _0x131218;
_0x281e10['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x281e10['prototype']['constructor'] = _0x281e10, _0x281e10['superClass'] = _0x1e3c43, _0x281e10['prototype']['playerID'] = 0x0, _0x281e10['prototype']['shellState'] = 0x0, _0x281e10['prototype']['cracksCount'] = 0x0, _0x281e10['prototype']['updateZ'] = function () {
this['z'] = 0x186a0;
}, _0x281e10['prototype']['customDraw'] = function (_0x15018c) {
switch (this['speciesType']) {
case _0xebd208: {
    var _0x2d1155 = this['getSkinImageObj']('img/upgradeshell/shellpart' + this['speciesSubType'] + '.png'),
        _0x45534d = this['rad'],
        _0x26e5ee = this['rPer'] * Math['PI'] * 0x2;
    _0x2d1155 && (_0x1d2dab['save'](), _0x1d2dab['rotate'](_0x26e5ee), _0x1d2dab['drawImage'](_0x2d1155, -_0x45534d, -_0x45534d, 0x2 * _0x45534d, 0x2 * _0x45534d), _0x1d2dab['restore']());
    break;
}
default:
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.1, _0x444e67(0x0, 0x0, this['rad'], 'black'), _0x1d2dab['restore']();
    break;
}
};
var _0xb72f81 = 0x99;

function _0x281e10() {
_0x281e10['superClass']['call'](this, _0xb72f81);
}
window['Particle'] = _0x281e10, _0x13dc56['setCustomClassForGameObjType'](_0x281e10, _0xb72f81);
var _0x570743 = _0x430417,
_0x1e3c43 = _0x4763ce;
_0x570743['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x570743['prototype']['constructor'] = _0x570743, _0x570743['superClass'] = _0x1e3c43, _0x430417['prototype']['updateZ'] = function () {
this['z'] = 0x186a2;
}, _0x430417['prototype']['customDraw'] = function (_0x3b4320) {
this['drawEffectScale_Slow'] = !![], this['doesDrawEffectScale'] = !![], console['log'](this['specType']), _0x1d2dab['globalAlpha'] = 0.2, _0x444e67(0x0, 0x0, this['rad'] * 0.85, 'white');
var _0x2dad7f = this['isGreenTarget'] ? '_e' : '',
    _0x4a171c = this['getSkinImageObj']('img/target' + _0x2dad7f + '.png');
if (_0x4a171c) {
    var _0x4a919e = this['rad'];
    _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = 0.5, _0x1d2dab['drawImage'](_0x4a171c, -_0x4a919e, -_0x4a919e, 0x2 * _0x4a919e, 0x2 * _0x4a919e), _0x1d2dab['restore']();
}
_0x1d2dab['save'](), this['hasTimer'] && this['timerTxt'] != null && (_0x1d2dab['globalAlpha'] = 0x1, this['timerTxt']['x'] = 0x0, this['timerTxt']['y'] = 0x0, this['timerTxt']['draw']()), _0x1d2dab['restore']();
}, _0x430417['prototype']['worldUpd_readMsgNewlyVisible'] = function (_0x3bca98, _0x3af407, _0x3d0d41) {
this['setObjTypes'](_0x3af407, _0x3d0d41), this['id'] = _0x3bca98['readUInt32']();
var _0x3f76d2 = _0x3bca98['readUInt16']() / 0x4,
    _0x2d3303 = _0x3bca98['readUInt16']() / 0x4,
    _0x519ed3 = _0x3bca98['readUInt16']() / 0x4;
this['ox'] = this['x'] = this['nx'] = _0x2d3303, this['oy'] = this['y'] = this['ny'] = _0x519ed3, this['nRad'] = _0x3f76d2, this['oRad'] = this['rad'] = 0x0, this['setMovedToPos'](_0x2d3303, _0x519ed3), this['setNewRad'](_0x3f76d2), this['hasTimer'] = _0x3bca98['readUInt8']() == 0x1, this['readUpdatedProperty'](_0x3083d3, _0x3bca98);
}, _0x430417['prototype']['readUpdatedProperty'] = function (_0x90589, _0x6d6cb7) {
if (_0x90589 == _0xd32f2d) {
    this['timer'] = _0x6d6cb7['readUInt16']() / 0x64;
    if (this['timer'] < 0x1e) this['updateTimer']();
} else {
    if (_0x90589 == _0x462f3a) this['targetText'] = _0x6d6cb7['readString'](), this['hasTimer'] = !![], this['setTimer'](this['targetText']);
    else {
        if (_0x90589 == _0x343d5d) {
            this['hasVictim'] = !![];
            var _0x56b0ab = _0x6d6cb7['readUInt16']() / 0x4,
                _0x31eb6f = _0x6d6cb7['readUInt16']() / 0x4;
            this['spider_ox'] = this['victimX'], this['spider_oy'] = this['victimY'], this['spider_nx'] = _0x56b0ab, this['spider_ny'] = _0x31eb6f;
        } else _0x90589 == _0x3083d3 && (this['isGreenTarget'] = _0x6d6cb7['readUInt8']() == 0x1);
    }
}
}, _0x430417['prototype']['isGreenTarget'] = ![], _0x430417['prototype']['hasVictim'] = ![], _0x430417['prototype']['victimX'] = null, _0x430417['prototype']['victimY'] = null, _0x430417['prototype']['onLerpUpdate'] = function (_0x56d460) {
this['hasVictim'] && (this['victimX'] = _0x56d460 * (this['spider_nx'] - this['spider_ox']) + this['spider_ox'], this['victimY'] = _0x56d460 * (this['spider_ny'] - this['spider_oy']) + this['spider_oy']);
}, _0x430417['prototype']['beforeCustomDraw'] = function (_0x3c7292) {
this['hasVictim'] && (console['log']('beforeCustomDraw'), _0x1d2dab['save'](), _0x1d2dab['strokeStyle'] = 'white', _0x1d2dab['globalAlpha'] = 0x1, _0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](this['x'], this['y']), _0x1d2dab['lineTo'](this['victimX'], this['victimY']), _0x1d2dab['stroke'](), _0x1d2dab['restore']());
}, _0x430417['prototype']['updateTimer'] = function () {
this['timer'] = Math['round'](this['timer']);
var _0x2d4080 = this['timer'];
this['setTimer'](_0x2d4080);
}, _0x430417['prototype']['timerTxt'] = null, _0x430417['prototype']['setTimer'] = function (_0x262480) {
var _0x438097 = '' + _0x262480;
null == this['timerTxt'] ? (this['timerTxt'] = new _0x407dea(0x14, '#FFFFFF'), this['timerTxt']['strokeW'] = 0x2, this['timerTxt']['multiLine'] = !![], this['timerTxt']['renderScale'] = 0x5, this['timerTxt']['setText'](_0x438097)) : (this['timerTxt']['setFontSize'](0x14), this['timerTxt']['setText'](_0x438097));
};

function _0x430417() {
_0x430417['superClass']['call'](this);
}
window['TargetCircle'] = _0x430417, _0x13dc56['setCustomClassForGameObjType'](_0x430417, _0x2c5edd, _0x47a280);
var _0x1e3c43 = _0x131218;
_0x37694b['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x37694b['prototype']['constructor'] = _0x37694b, _0x37694b['superClass'] = _0x1e3c43, _0x37694b['prototype']['stoneIncentive'] = 0x0, _0x37694b['prototype']['teamID'] = 0x0, _0x37694b['prototype']['lastHurtByTeamID'] = 0x0, _0x37694b['prototype']['coolDownTime'] = 0x0, _0x37694b['prototype']['isDefended'] = ![], _0x37694b['prototype']['updateZ'] = function () {
this['z'] = 0x3ea;
}, _0x37694b['prototype']['customDraw'] = function (_0x53831d) {
let _0x3d76ae = this['teamID'];
if (this['teamID'] == 0x0) {
    if (this['lastHurtByTeamID'] != 0x0) _0x3d76ae += '_' + this['lastHurtByTeamID'];
    else {
        if (this['coolDownTime'] > 0.1) _0x3d76ae += '_0';
    }
}
var _0x3caee9 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/stone' + _0x3d76ae + '.png');
if (_0x3caee9) {
    var _0x55d6c8 = this['rad'] * 1.25;
    _0x1d2dab['drawImage'](_0x3caee9, -_0x55d6c8, -_0x55d6c8, 0x2 * _0x55d6c8, 0x2 * _0x55d6c8);
}
if (!this['isDefended']) {
    var _0x16e4bb = this['getSkinImageObj']('gameobj/' + this['oType'] + '/stone_undefended.png');
    if (_0x16e4bb) {
        var _0x55d6c8 = this['rad'] * 1.25;
        _0x1d2dab['drawImage'](_0x16e4bb, -_0x55d6c8, -_0x55d6c8, 0x2 * _0x55d6c8, 0x2 * _0x55d6c8);
    }
}
var _0x4278a1 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/incentive/' + this['stoneIncentive'] + '.png');
if (_0x4278a1) {
    var _0x55d6c8 = this['rad'] / 0x4;
    _0x1d2dab['drawImage'](_0x4278a1, -_0x55d6c8, -_0x55d6c8, 0x2 * _0x55d6c8, 0x2 * _0x55d6c8);
}
}, _0x37694b['prototype']['setIncentiveText'] = function () {
if (null == this['incentiveTxt']) this['incentiveTxt'] = new _0x407dea(0xa, '#FFFFFF'), this['incentiveTxt']['strokeW'] = 1.5, this['incentiveTxt']['multiLine'] = !![], this['incentiveTxt']['renderScale'] = 0x5, this['incentiveTxt']['setText'](this['nickName']);
else {
    this['incentiveTxt']['setFontSize'](0xa), this['incentiveTxt']['multiLine'] = !![];
    let _0x2bcf79 = '';
    this['coolDownTime'] > 0.1 && (_0x2bcf79 = '\x0acooldown: ' + this['coolDownTime'] + 's'), this['incentiveTxt']['setText'](this['nickName'] + _0x2bcf79);
}
}, _0x37694b['prototype']['drawIncentiveText'] = function (_0x66876f) {
this['incentiveTxt'] && !_0x49a9c3 && (_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = _0x66876f, this['incentiveTxt']['x'] = -this['rad'] / 0x2, this['incentiveTxt']['y'] = -this['rad'] / 0x2, this['incentiveTxt']['draw'](), _0x1d2dab['restore']());
}, _0x37694b['prototype']['readCustomData_onNewlyVisible'] = function (_0x1b5b79) {
_0x37694b['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x1b5b79), this['stoneIncentive'] = _0x1b5b79['readUInt8'](), this['readUpdatedProperty'](_0x1d931c, _0x1b5b79), this['readUpdatedProperty'](_0x336a26, _0x1b5b79), this['readUpdatedProperty'](_0x543863, _0x1b5b79), this['readUpdatedProperty'](_0x103070, _0x1b5b79);
}, _0x37694b['prototype']['readUpdatedProperty'] = function (_0x36858f, _0xc6e4dc) {
if (_0x36858f == _0x1d931c) this['teamID'] = _0xc6e4dc['readUInt8']();
else {
    if (_0x36858f == _0x336a26) this['lastHurtByTeamID'] = _0xc6e4dc['readUInt8']();
    else {
        if (_0x36858f == _0x103070) this['isDefended'] = _0xc6e4dc['readUInt8']() == 0x1;
        else _0x36858f == _0x543863 && (this['coolDownTime'] = _0xc6e4dc['readUInt16']() / 0x64);
    }
}
}, _0x37694b['prototype']['onHurt'] = function () {};
var _0x2eb6c6 = 0x4e;

function _0x37694b() {
_0x37694b['superClass']['call'](this, _0x2eb6c6);
}
window['TeamStone'] = _0x37694b, _0x13dc56['setCustomClassForGameObjType'](_0x37694b, _0x2eb6c6);
const _0x20c783 = 0x1,
_0x596f2f = 0x2,
_0x72f68e = 0x3,
_0x20b459 = 0x4,
_0x5aed06 = 0x5,
_0x4c736d = 0x6,
_0x39b502 = 0x7,
_0x52ac69 = 0x8,
_0x5e3999 = 0x9,
_0x1a7bc3 = 0xa,
_0xa18231 = 0xb,
_0x29ad71 = 0xc,
_0x1fae24 = 0xd;
var _0x1e3c43 = _0x131218;
_0x31d2f7['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x31d2f7['prototype']['constructor'] = _0x31d2f7, _0x31d2f7['superClass'] = _0x1e3c43, _0x31d2f7['prototype']['updateZ'] = function () {
this['z'] = this['hasImpact'] ? this['rad'] : 0x174876e800;
};
let _0x58ed8a = 1.5;
_0x31d2f7['prototype']['frame'] = 0x0, _0x31d2f7['prototype']['customDraw'] = function (_0x1456ca) {
if (!this['hasImpact']) this['frame'] = Math['trunc'](_0x740c5b / 0x78) % 0x6;
else this['frame'] = 0x0;
var _0x356bf5 = 'gameobj/' + this['oType'] + '/' + this['oType'] + '_' + this['frame'] + '.png',
    _0x4b9ab6 = this['getSkinImageObj'](_0x356bf5);
if (_0x4b9ab6) {
    _0x1d2dab['save']();
    var _0x171ee4 = this['rad'] * 0x2;
    !this['hasImpact'] ? (_0x1d2dab['shadowColor'] = 'rgba(0,0,0,0.05)', _0x1d2dab['shadowBlur'] = 0x0, _0x1d2dab['shadowOffsetX'] = this['shadowDistance'], _0x1d2dab['shadowOffsetY'] = this['shadowDistance'], _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x4b9ab6, -_0x171ee4 / 0x2, -_0x171ee4 * _0x58ed8a, _0x171ee4, _0x171ee4 * 0x2)) : (_0x356bf5 = 'gameobj/' + this['oType'] + '/meteorite.png', _0x4b9ab6 = null, _0x4b9ab6 = this['getSkinImageObj'](_0x356bf5), _0x4b9ab6 && (_0x1d2dab['rotate'](this['angle']), _0x171ee4 = this['rad'], _0x1d2dab['drawImage'](_0x4b9ab6, -_0x171ee4, -_0x171ee4, _0x171ee4 * 0x2, _0x171ee4 * 0x2))), _0x1d2dab['restore']();
}
}, _0x31d2f7['prototype']['readCustomData_onNewlyVisible'] = function (_0x2ec756) {
_0x31d2f7['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x2ec756), this['readUpdatedProperty'](_0x4fc027, _0x2ec756), this['readUpdatedProperty'](_0xb1a30a, _0x2ec756);
}, _0x31d2f7['prototype']['shadowDistance'] = 0x0, _0x31d2f7['prototype']['hasImpact'] = ![], _0x31d2f7['prototype']['readUpdatedProperty'] = function (_0x4033ff, _0x4892b4) {
if (_0x4033ff == _0xb1a30a) {
    let _0x47a0b7 = _0x4892b4['readUInt16']() / 0xa;
    this['shadowDistance'] = _0x47a0b7;
} else _0x4033ff == _0x4fc027 && (this['hasImpact'] = _0x4892b4['readUInt8']() == 0x1);
};
const _0x4e03c6 = 0x9a;

function _0x31d2f7() {
_0x31d2f7['superClass']['call'](this, _0x4e03c6);
}
window['Meteor'] = _0x31d2f7, _0x13dc56['setCustomClassForGameObjType'](_0x31d2f7, _0x4e03c6);
var _0x1e3c43 = _0x131218;
_0x481453['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x481453['prototype']['constructor'] = _0x481453, _0x481453['superClass'] = _0x1e3c43, _0x481453['prototype']['updateZ'] = function () {
this['z'] = -0x65;
}, _0x481453['prototype']['customDraw'] = function (_0x14e571) {
skin = 'gameobj/' + this['oType'] + '/' + this['oType'] + '.png';
var _0x2b8fe3 = this['getSkinImageObj'](skin);
_0x2b8fe3 && (_0x1d2dab['save'](), _0x1d2dab['rotate'](this['angle']), rad = this['rad'] * 1.5, _0x1d2dab['drawImage'](_0x2b8fe3, -rad, -rad, rad * 0x2, rad * 0x2), _0x1d2dab['restore']());
};
const _0x120ea9 = 0x9b;

function _0x481453() {
_0x481453['superClass']['call'](this, _0x120ea9);
}
window['MeteorCrater'] = _0x481453, _0x13dc56['setCustomClassForGameObjType'](_0x481453, _0x120ea9);
var _0x1e3c43 = _0x131218;
_0xed7977['prototype'] = Object['create'](_0x1e3c43['prototype']), _0xed7977['prototype']['constructor'] = _0xed7977, _0xed7977['superClass'] = _0x1e3c43, _0xed7977['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0xed7977['prototype']['customDraw'] = function (_0xb478c8) {
this['frame'] = Math['trunc'](_0x740c5b / 0x78) % 0x5;
var _0xc8dee6 = 'gameobj/' + this['oType'] + '/' + this['oType'] + '_' + this['frame'] + '.png',
    _0x20b92a = this['getSkinImageObj'](_0xc8dee6);
if (_0x20b92a) {
    var _0x4e3e0c = this['rad'];
    _0x1d2dab['save'](), _0x1d2dab['rotate'](this['angle']), _0x1d2dab['drawImage'](_0x20b92a, -_0x4e3e0c, -_0x4e3e0c, _0x4e3e0c * 0x2, _0x4e3e0c * 0x2), _0x1d2dab['restore']();
}
};
const _0x5d0559 = 0x9d;

function _0xed7977() {
_0xed7977['superClass']['call'](this, _0x5d0559);
}
window['MeteorShockwave'] = _0xed7977, _0x13dc56['setCustomClassForGameObjType'](_0xed7977, _0x5d0559);
const _0xfa2e69 = 0x0,
_0x30a863 = 0x1,
_0x2c7a7a = 0x2,
_0x4bf42e = 0x3;
var _0x1e3c43 = _0x131218;
_0x21cf0b['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x21cf0b['prototype']['constructor'] = _0x21cf0b, _0x21cf0b['superClass'] = _0x1e3c43, _0x21cf0b['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x21cf0b['prototype']['customDraw'] = function (_0x5426e7) {
var _0xd0dae4 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + this['oType'] + '_' + this['speciesType'] + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
if (_0xd0dae4) {
    var _0x5395d8 = this['rad'];
    _0x1d2dab['drawImage'](_0xd0dae4, -_0x5395d8, -_0x5395d8, 0x2 * _0x5395d8, 0x2 * _0x5395d8);
}
};
var _0x2fe3b5 = 0x9e;
_0x21cf0b['prototype']['readCustomData_onNewlyVisible'] = function (_0x492c8b) {
_0x21cf0b['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x492c8b), this['speciesType'] = _0x492c8b['readUInt16'](), this['speciesSubType'] = _0x492c8b['readUInt16']();
};

function _0x21cf0b() {
_0x21cf0b['superClass']['call'](this, _0x2fe3b5);
}
window['HalloweenFood'] = _0x21cf0b, _0x13dc56['setCustomClassForGameObjType'](_0x21cf0b, _0x2fe3b5);
var _0x27324f = _0x27324f,
_0x1e3c43 = _0x3d6c08;
_0x27324f['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x27324f['prototype']['constructor'] = _0x27324f, _0x27324f['superClass'] = _0x1e3c43, _0x27324f['prototype']['animalInfo'] = function () {
var _0xe6a613 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0xe6a613['aniName'] = 'Swinehoe';
    break;
case 0x1:
    _0xe6a613['aniName'] = 'Golden Pheasant';
    break;
}
return _0xe6a613['aniCol'] = '#FF9000', _0xe6a613['skinName'] = this['getSkinName'](), _0xe6a613['upgradeText'] = 'UPGRADED to ' + _0xe6a613['aniName'] + '!\x0aHold W to fly around. ', _0xe6a613;
}, _0x27324f['prototype']['getSkinName'] = function () {
return this['getSpeciesPath']() + this['getSubSpecies']() + '/pheasant' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x27324f['prototype']['getSpeciesPath'] = function () {
return 'forest/pheasant/' + this['animalSpecies'];
}, _0x27324f['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x27324f['prototype']['getWing'] = function (_0x4df482, _0x51a986, _0x2780f2) {
var _0x198b49 = 'skins/' + this['getSpeciesPath']() + '/';
return _0x198b49 += _0x4df482 + '_wing' + _0x51a986 + '.png', _0x198b49;
}, _0x27324f['prototype']['getHead'] = function (_0x4cfdf5, _0x98fb5f) {
var _0x260454 = 'skins/' + this['getSpeciesPath']() + '/';
return _0x260454 += _0x4cfdf5 + '_head.png', _0x260454;
}, _0x27324f['prototype']['theFrame'] = 0x0, _0x27324f['prototype']['drawUnderSkinImg'] = function () {
this['setSkinScale']();
var _0x4fcf5a = -0.7,
    _0x2c27a2 = 0.9,
    _0x490253 = 'skins/' + this['getSpeciesPath']() + '/tail.png',
    _0x40093e = this['getSkinImageObj'](_0x490253);
if (_0x40093e) {
    this['flag_usingAbility'] && (_0x2c27a2 = 1.1);
    var _0x5c4349 = this['skinScale'],
        _0x4c1814 = this['rad'] - this['outlineW'];
    _0x1d2dab['drawImage'](_0x40093e, -_0x4c1814 * _0x5c4349 * _0x2c27a2, (-_0x4c1814 + _0x4c1814 * _0x4fcf5a) * _0x5c4349 * _0x2c27a2, 0x2 * _0x4c1814 * _0x5c4349 * _0x2c27a2, 0x2 * _0x4c1814 * _0x5c4349 * _0x2c27a2);
}
}, _0x27324f['prototype']['drawSkinCustomization'] = function () {
if (this['flag_usingAbility']) {
    if (this['flag_flying']) {
        var _0x2ceb60 = 'skins'; {
            var _0x302562 = 0x1f4 / 0x154;
            if (this['flag_flying'] && !this['flag_isGrabbed']) {
                _0x1d2dab['save']();
                var _0x53ae8f = _0x1170c4('bird', this['spawnTime']);
                _0x53ae8f !== undefined && _0x53ae8f != null && (this['theFrame'] = _0x53ae8f);
                var _0x36af2b = !(_0x31f3fc == 0x2 || _0x44408d) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'],
                    _0x1d84d4 = this['getSkinImageObj'](this['getWing']('pheasant', 0x1, !![]));
                if (_0x1d84d4) {
                    _0x1d2dab['save']();
                    var _0x2708c6 = -(-0.2 + _0x36af2b) * _0xa0b20a,
                        _0x3d82f9 = this['rad'] * 0.8;
                    _0x1d2dab['rotate'](_0x42e6da + _0x2708c6);
                    var _0x1a3f3b = 0x0,
                        _0x3bd6e7 = this['rad'],
                        _0x45f8cb = _0x3d82f9 * 0x2 * 0.62,
                        _0x2c33c5 = _0x3d82f9 * 2.5,
                        _0x193422 = 0.2,
                        _0x3d504c = 1.7;
                    _0x1d2dab['drawImage'](_0x1d84d4, _0x1a3f3b + _0x45f8cb * -_0x193422, _0x3bd6e7 + _0x2c33c5 * -_0x3d504c, _0x45f8cb, _0x2c33c5), _0x1d2dab['restore']();
                }
                var _0x1d84d4 = this['getSkinImageObj'](this['getWing']('pheasant', 0x2, !![]));
                if (_0x1d84d4) {
                    _0x1d2dab['save']();
                    var _0x2708c6 = -(-0.2 + _0x36af2b) * _0x2bcbaa(-0x5a),
                        _0x3d82f9 = this['rad'] * 0.8;
                    _0x1d2dab['rotate'](_0x2bcbaa(-0x2d) + _0x2708c6);
                    var _0x1a3f3b = 0x0,
                        _0x3bd6e7 = this['rad'],
                        _0x45f8cb = _0x3d82f9 * 0x2 * 0.62,
                        _0x2c33c5 = _0x3d82f9 * 2.5,
                        _0x193422 = 0.8,
                        _0x3d504c = 1.7;
                    _0x1d2dab['drawImage'](_0x1d84d4, _0x1a3f3b + _0x45f8cb * -_0x193422, _0x3bd6e7 + _0x2c33c5 * -_0x3d504c, _0x45f8cb, _0x2c33c5), _0x1d2dab['restore']();
                }
                _0x1d2dab['restore']();
            }
            if (this['specType'] != 0x0 && this['specType'] != undefined) {
                var _0x414a59 = this['getSkinImageObj'](this['getHead']('pheasant', !![]));
                if (_0x414a59) {
                    _0x1d2dab['save']();
                    var _0x3d82f9 = this['rad'],
                        _0x47e9b4 = 0.2;
                    _0x1d2dab['drawImage'](_0x414a59, -_0x3d82f9 * _0x302562, (-_0x3d82f9 + _0x3d82f9 * _0x47e9b4) * _0x302562, 0x2 * _0x3d82f9 * _0x302562, 0x2 * _0x3d82f9 * _0x302562), _0x1d2dab['restore']();
                }
            }
        }
    } else {
        var _0x302562 = 0x1f4 / 0x154;
        if (this['flag_usingAbility']) {
            _0x1d2dab['save']();
            var _0x36af2b = 0x0,
                _0x1d84d4 = this['getSkinImageObj'](this['getWing']('pheasant', 0x1, !![]));
            if (_0x1d84d4) {
                _0x1d2dab['save']();
                var _0x2708c6 = -(-0.2 + _0x36af2b) * _0x2bcbaa(0xf),
                    _0x3d82f9 = this['rad'] * 0.8;
                _0x1d2dab['rotate'](_0x2bcbaa(0xf) + _0x2708c6);
                var _0x1a3f3b = 0x0,
                    _0x3bd6e7 = this['rad'],
                    _0x45f8cb = _0x3d82f9 * 0x2 * 0.7,
                    _0x2c33c5 = _0x3d82f9 * 2.2,
                    _0x193422 = 0x0,
                    _0x3d504c = 1.5;
                _0x1d2dab['drawImage'](_0x1d84d4, _0x1a3f3b + _0x45f8cb * -_0x193422, _0x3bd6e7 + _0x2c33c5 * -_0x3d504c, _0x45f8cb, _0x2c33c5), _0x1d2dab['restore']();
            }
            var _0x1d84d4 = this['getSkinImageObj'](this['getWing']('pheasant', 0x2, !![]));
            if (_0x1d84d4) {
                _0x1d2dab['save']();
                var _0x2708c6 = -(-0.2 + _0x36af2b) * _0x2bcbaa(-0xf),
                    _0x3d82f9 = this['rad'] * 0.8;
                _0x1d2dab['rotate'](_0x2bcbaa(-0xf) + _0x2708c6);
                var _0x1a3f3b = 0x0,
                    _0x3bd6e7 = this['rad'],
                    _0x45f8cb = _0x3d82f9 * 0x2 * 0.7,
                    _0x2c33c5 = _0x3d82f9 * 2.2,
                    _0x193422 = 0x1,
                    _0x3d504c = 1.5;
                _0x1d2dab['drawImage'](_0x1d84d4, _0x1a3f3b + _0x45f8cb * -_0x193422, _0x3bd6e7 + _0x2c33c5 * -_0x3d504c, _0x45f8cb, _0x2c33c5), _0x1d2dab['restore']();
            }
            var _0x414a59 = this['getSkinImageObj'](this['getHead']('pheasant', !![]));
            if (_0x414a59) {
                _0x1d2dab['save']();
                var _0x3d82f9 = this['rad'] * 0x1,
                    _0x302159 = -this['rad'] * 0.1;
                _0x1d2dab['drawImage'](_0x414a59, -_0x3d82f9 * _0x302562, -_0x3d82f9 + _0x302159 * _0x302562, 0x2 * _0x3d82f9 * _0x302562, 0x2 * _0x3d82f9 * _0x302562), _0x1d2dab['restore']();
            }
            _0x1d2dab['restore']();
        }
    }
}
};

function _0x27324f() {
_0x27324f['superClass']['call'](this, _0x4ad968);
}
window['Pheasant'] = _0x27324f, _0x13dc56['setCustomClassForGameObjType'](_0x27324f, _0x4ad968, _0x2876ce);
var _0x1e3c43 = _0x3d6c08;
_0x1c08ad['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x1c08ad['prototype']['constructor'] = _0x1c08ad, _0x1c08ad['superClass'] = _0x1e3c43, _0x1c08ad['prototype']['getSkinName'] = function () {
return this['getSpeciesPath']() + this['getSubSpecies']() + '/flyinglizard' + (this['flag_usingAbility'] ? '_body' : '');
}, _0x1c08ad['prototype']['getSpeciesPath'] = function () {
return 'forest/flyinglizard/' + this['animalSpecies'];
}, _0x1c08ad['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x1c08ad['prototype']['animalInfo'] = function () {
var _0x145eed = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x145eed['aniName'] = 'Flying Lizard!';
    break;
}
return _0x145eed['skinName'] = this['getSkinName'](), _0x145eed['aniDesc'] = '', _0x145eed['upgradeText'] = 'UPGRADED to ' + _0x145eed['aniName'] + '!\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!', _0x145eed['aniCol'] = '#FF9D43', _0x145eed;
}, _0x1c08ad['prototype']['getAbilityInfo'] = function (_0x354b7d) {
var _0x432eb9 = {};
return _0x432eb9['abilName'] = 'Pull from Hole', _0x432eb9['abilImg'] = 'abilities/Dig.svg', _0x432eb9['skinThemeID'] = this['skinThemeID'], _0x432eb9['mopeSeasonID'] = this['mopeSeasonID'], _0x432eb9;
}, _0x1c08ad['prototype']['getAsset'] = function (_0x1dd5c2) {
var _0x5de040 = 'skins/' + this['getSpeciesPath']() + '/flyinglizard';
return _0x5de040 += '_' + _0x1dd5c2 + '.png', _0x5de040;
}, _0x1c08ad['prototype']['backOffset'] = -0.4, _0x1c08ad['prototype']['armsOffset'] = 0.16, _0x1c08ad['prototype']['headOffset'] = 0.3, _0x1c08ad['prototype']['wingsOffset'] = -0.5, _0x1c08ad['prototype']['wingsScale'] = 1.5, _0x1c08ad['prototype']['backScale'] = 1.1, _0x1c08ad['prototype']['drawSkinCustomization'] = function () {
if (this['flag_usingAbility']) {
    var _0x3f4967 = 0x1f4 / 0x154;
    this['drawAsset'](_0x3f4967, 'arms', this['armsOffset']), this['drawAsset'](_0x3f4967, 'wings', this['wingsOffset'], _0x3f4967 * this['wingsScale']), this['drawAsset'](_0x3f4967, 'back', this['backOffset'], _0x3f4967 * this['backScale']), this['drawAsset'](_0x3f4967, 'head', this['headOffset']);
}
}, _0x1c08ad['prototype']['drawAsset'] = function (_0x57bf14, _0x3d963c, _0x130b2d, _0x18b732) {
var _0x295798 = this['getSkinImageObj'](this['getAsset'](_0x3d963c));
if (_0x295798) {
    if (_0x130b2d === undefined) _0x130b2d = 0x0;
    if (_0x18b732 === undefined) _0x18b732 = _0x57bf14;
    _0x1d2dab['save']();
    var _0x4b0cc4 = this['rad'];
    _0x1d2dab['drawImage'](_0x295798, -_0x4b0cc4 * _0x57bf14, (-_0x4b0cc4 + _0x4b0cc4 * _0x130b2d) * _0x57bf14, 0x2 * _0x4b0cc4 * _0x57bf14, 0x2 * _0x4b0cc4 * _0x18b732), _0x1d2dab['restore']();
}
};

function _0x1c08ad() {
_0x1c08ad['superClass']['call'](this, _0x4ad968);
}
const _0x41befe = 0x79;
window['FlyingLizard'] = _0x1c08ad, _0x13dc56['setCustomClassForGameObjType'](_0x1c08ad, _0x4ad968, _0x41befe);
var _0x1e3c43 = _0x3d6c08;
_0x4d38ea['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x4d38ea['prototype']['constructor'] = _0x4d38ea, _0x4d38ea['superClass'] = _0x1e3c43, _0x4d38ea['prototype']['getSpeciesPath'] = function (_0x2f2239) {
return 'forest/' + _0x2f2239 + '/' + this['animalSpecies'];
}, _0x4d38ea['prototype']['animalInfo'] = function () {
var _0x1cd33d = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x1cd33d['aniName'] = 'Tarsier!';
    break;
}
return _0x1cd33d['skinName'] = this['getSkinName'](), _0x1cd33d['aniDesc'] = '', _0x1cd33d['upgradeText'] = 'UPGRADED to ' + _0x1cd33d['aniName'] + '!\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!', _0x1cd33d['aniCol'] = '#FF9D43', _0x1cd33d;
}, _0x4d38ea['prototype']['getSkinName'] = function () {
return this['getSpeciesPath']() + this['getSubSpecies']() + '/tarsier' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x4d38ea['prototype']['getSpeciesPath'] = function () {
return 'forest/tarsier/' + this['animalSpecies'];
}, _0x4d38ea['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x4d38ea() {
_0x4d38ea['superClass']['call'](this, _0x4ad968);
}
const _0x2bd53d = 0x71;
window['Tarsier'] = _0x4d38ea, _0x13dc56['setCustomClassForGameObjType'](_0x4d38ea, _0x4ad968, _0x2bd53d);
var _0x1e3c43 = _0x3d6c08;
_0x50d445['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x50d445['prototype']['constructor'] = _0x50d445, _0x50d445['superClass'] = _0x1e3c43, _0x50d445['prototype']['getSpeciesPath'] = function (_0x29cc1c) {
return 'forest/' + _0x29cc1c + '/' + this['animalSpecies'];
}, _0x50d445['prototype']['animalInfo'] = function () {
var _0xfc5c23 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0xfc5c23['aniName'] = 'Chukar!';
    break;
}
return _0xfc5c23['skinName'] = this['getSkinName'](), _0xfc5c23['aniDesc'] = '', _0xfc5c23['upgradeText'] = 'UPGRADED to ' + _0xfc5c23['aniName'] + '!\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!', _0xfc5c23['aniCol'] = '#FF9D43', _0xfc5c23;
}, _0x50d445['prototype']['getSkinName'] = function () {
return this['getSpeciesPath']() + this['getSubSpecies']() + '/chukar' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x50d445['prototype']['getSpeciesPath'] = function () {
return 'forest/chukar/' + this['animalSpecies'];
}, _0x50d445['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x50d445['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) return; {
    var _0x663585 = 0x1f4 / 0x154;
    if (this['flag_flying'] && !this['flag_isGrabbed']) {
        _0x1d2dab['save']();
        var _0x114213 = _0x1170c4('bird', this['spawnTime']);
        _0x114213 !== undefined && _0x114213 != null && (this['theFrame'] = _0x114213);
        var _0x27c013 = !(_0x31f3fc == 0x2 || _0x44408d) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'],
            _0x5e6748 = this['getSkinImageObj'](this['getAsset']('wing1'));
        if (_0x5e6748) {
            _0x1d2dab['save']();
            var _0x4bc6f1 = -(-0.2 + _0x27c013) * _0xa0b20a,
                _0x262aa9 = this['rad'] * 0.8;
            _0x1d2dab['rotate'](_0x42e6da + _0x4bc6f1);
            var _0x1bc146 = 0x0,
                _0x3a9f91 = this['rad'],
                _0x598f9b = _0x262aa9 * 0x2 * 0.62,
                _0x2955cb = _0x262aa9 * 2.5,
                _0xb1f68 = 0.2,
                _0x29b94a = 1.7;
            _0x1d2dab['drawImage'](_0x5e6748, _0x1bc146 + _0x598f9b * -_0xb1f68, _0x3a9f91 + _0x2955cb * -_0x29b94a, _0x598f9b, _0x2955cb), _0x1d2dab['restore']();
        }
        var _0x5e6748 = this['getSkinImageObj'](this['getAsset']('wing2'));
        if (_0x5e6748) {
            _0x1d2dab['save']();
            var _0x4bc6f1 = -(-0.2 + _0x27c013) * _0x2bcbaa(-0x5a),
                _0x262aa9 = this['rad'] * 0.8;
            _0x1d2dab['rotate'](_0x2bcbaa(-0x2d) + _0x4bc6f1);
            var _0x1bc146 = 0x0,
                _0x3a9f91 = this['rad'],
                _0x598f9b = _0x262aa9 * 0x2 * 0.62,
                _0x2955cb = _0x262aa9 * 2.5,
                _0xb1f68 = 0.8,
                _0x29b94a = 1.7;
            _0x1d2dab['drawImage'](_0x5e6748, _0x1bc146 + _0x598f9b * -_0xb1f68, _0x3a9f91 + _0x2955cb * -_0x29b94a, _0x598f9b, _0x2955cb), _0x1d2dab['restore']();
        }
        _0x1d2dab['restore']();
    }
    if (this['specType'] != 0x0 && this['specType'] != undefined) {
        var _0x1adc5d = this['getSkinImageObj'](this['getAsset']('head'));
        if (_0x1adc5d) {
            _0x1d2dab['save']();
            var _0x262aa9 = this['rad'];
            _0x1d2dab['drawImage'](_0x1adc5d, -_0x262aa9 * _0x663585, (-_0x262aa9 + _0x262aa9 * 0.1) * _0x663585, 0x2 * _0x262aa9 * _0x663585, 0x2 * _0x262aa9 * _0x663585), _0x1d2dab['restore']();
        }
    }
}
}, _0x50d445['prototype']['getAsset'] = function (_0x297d3c) {
var _0x1a8b15 = 'skins/' + this['getSpeciesPath']() + '/chukar';
return _0x1a8b15 += '_' + _0x297d3c + '.png', _0x1a8b15;
};

function _0x50d445() {
_0x50d445['superClass']['call'](this, _0x4ad968);
}
const _0x4a4bdf = 0x72;
window['Chukar'] = _0x50d445, _0x13dc56['setCustomClassForGameObjType'](_0x50d445, _0x4ad968, _0x4a4bdf);
var _0x1e3c43 = _0x131218;
_0x31ab94['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x31ab94['prototype']['constructor'] = _0x31ab94, _0x31ab94['superClass'] = _0x1e3c43, _0x31ab94['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x31ab94['prototype']['customDraw'] = function (_0x17763e) {
var _0x3f3a28 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + this['oType'] + '_' + this['speciesType'] + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
if (_0x3f3a28) {
    var _0x3156d3 = this['rad'];
    _0x1d2dab['drawImage'](_0x3f3a28, -_0x3156d3, -_0x3156d3, 0x2 * _0x3156d3, 0x2 * _0x3156d3);
}
};
var _0x9f1a48 = 0x9f;
_0x31ab94['prototype']['readCustomData_onNewlyVisible'] = function (_0x36661a) {
_0x31ab94['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x36661a), this['speciesType'] = _0x36661a['readUInt16'](), this['speciesSubType'] = _0x36661a['readUInt16']();
};

function _0x31ab94() {
_0x31ab94['superClass']['call'](this, _0x9f1a48);
}
window['ThanksgivingFood'] = _0x31ab94, _0x13dc56['setCustomClassForGameObjType'](_0x31ab94, _0x9f1a48);
var _0x1e3c43 = _0x131218;
_0x386a0f['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x386a0f['prototype']['constructor'] = _0x386a0f, _0x386a0f['prototype']['rAngle'] = 0x0, _0x386a0f['prototype']['rAngleF'] = 0.005, _0x386a0f['prototype']['rAngleDirection'] = 0x1, _0x386a0f['superClass'] = _0x1e3c43, _0x386a0f['prototype']['updateZ'] = function () {
if (this['isSnowFlake']) this['z'] = 0x2af8;
else {
    if (this['isStickingOnObject']) this['z'] = 0x1 + this['stickingOnObjectZIndex'];
    else this['z'] = this['rad'];
}
}, _0x386a0f['prototype']['customDraw'] = function (_0x4a2274) {
if (this['isSnowFlake']) {
    _0x1d2dab['globalAlpha'] = 0.9, _0x1d2dab['globalAlpha'] = 0x1;
    var _0x493583 = 'gameobj/' + this['oType'] + '/snow-flake.png',
        _0x24b33f = this['getSkinImageObj'](_0x493583);
    if (_0x24b33f) {
        _0x1d2dab['save']();
        var _0x5077cf = this['rad'] * 0x1;
        this['rAngle'] += this['rAngleF'] * this['rAngleDirection'], _0x1d2dab['rotate'](this['rAngle']), _0x1d2dab['drawImage'](_0x24b33f, -_0x5077cf, -_0x5077cf, _0x5077cf * 0x2, _0x5077cf * 0x2), _0x1d2dab['restore']();
    }
} else {
    _0x1d2dab['globalAlpha'] = 0x1;
    var _0x493583 = 'gameobj/' + this['oType'] + '/' + this['oType'] + '.png',
        _0x24b33f = this['getSkinImageObj'](_0x493583);
    if (_0x24b33f) {
        _0x1d2dab['save']();
        var _0x5077cf = this['rad'] * 0x1;
        _0x1d2dab['rotate'](this['rPer'] * 0x2 * Math['PI']), _0x1d2dab['drawImage'](_0x24b33f, -_0x5077cf, -_0x5077cf, _0x5077cf * 0x2, _0x5077cf * 0x2), _0x1d2dab['restore']();
    }
}
}, _0x386a0f['prototype']['isSnowFlake'] = !![], _0x386a0f['prototype']['isStickingOnObject'] = ![], _0x386a0f['prototype']['stickingOnObjectZIndex'] = 0x0, _0x386a0f['prototype']['readUpdatedProperty'] = function (_0xc6dd75, _0x321626) {
_0x386a0f['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x321626);
if (_0xc6dd75 == _0x5cdfbf) this['isSnowFlake'] = _0x321626['readUInt8']() == 0x1;
else {
    if (_0xc6dd75 == _0x424c8d) this['isStickingOnObject'] = _0x321626['readUInt8']() == 0x1;
    else {
        if (_0xc6dd75 == _0x563d4a) {
            let _0x57ab1b = _0x321626['readUInt32'](),
                _0x519675 = _0x3c55ea[_0x57ab1b];
            if (_0x519675) this['stickingOnObjectZIndex'] = _0x519675['z'];
        }
    }
}
}, _0x386a0f['prototype']['readCustomData_onNewlyVisible'] = function (_0xef7cb4) {
this['readUpdatedProperty'](_0x5cdfbf, _0xef7cb4), this['readUpdatedProperty'](_0x424c8d, _0xef7cb4), this['readUpdatedProperty'](_0x563d4a, _0xef7cb4);
};

function _0x386a0f() {
_0x386a0f['superClass']['call'](this, _0x265e5d), this['rAngleDirection'] = _0x5e22a2(0x0, 0x1) == 0x0 ? 0x1 : -0x1;
}
window['Snow'] = _0x386a0f, _0x13dc56['setCustomClassForGameObjType'](_0x386a0f, _0x265e5d);
class _0x1cbeca {
constructor() {
    this['ENDPOINTS'] = {
        'GET_INCENTIVIZED_AD_SKINS': '/getIncentivizedAdSkins',
        'REDEEM_INCENTIVIZED_AD_REWARD': '/redeemIncentivizedAdReward'
    }, this['url'] = _0x285caa && $config['useDevAccountServer'] ? $config['devAccountServerUrl'] : 'https://mope-accountserver-do.mope.io';
}
async ['getIncentivizedAdSkins']({
    sessionId: _0x482a51,
    serverId: _0x15716d,
    userId: _0x1a64f8,
    passwordToken: _0x391136
}) {
    try {
        const _0x5789e0 = await fetch('' + this['url'] + this['ENDPOINTS']['GET_INCENTIVIZED_AD_SKINS'], {
                'method': 'POST',
                'headers': {
                    'Content-Type': 'application/json'
                },
                'body': JSON['stringify']({
                    'sessionId': _0x482a51,
                    'serverId': _0x15716d,
                    'userId': _0x1a64f8,
                    'passwordToken': _0x391136
                })
            }),
            _0x1b0abe = await _0x5789e0['json']();
        return _0x1b0abe;
    } catch (_0x2ffd9d) {
        return console['log']('::: AccountServerService - getIncentivzedAdSkins() ::: ERROR', _0x2ffd9d), {
            'success': ![],
            'error': _0x2ffd9d
        };
    }
}
async ['redeemIncentivizedAdReward']({
    sessionId: _0x37a72e,
    serverId: _0x4a17b1,
    userId: _0x1668ae,
    passwordToken: _0x58156f
}) {
    try {
        const _0x56b6e8 = {
                'sessionId': _0x37a72e,
                'serverId': _0x4a17b1,
                'userId': _0x1668ae,
                'passwordToken': _0x58156f
            },
            _0x15bb4a = await fetch('' + this['url'] + this['ENDPOINTS']['REDEEM_INCENTIVIZED_AD_REWARD'], {
                'method': 'POST',
                'headers': {
                    'Content-Type': 'application/json'
                },
                'body': JSON['stringify'](_0x56b6e8)
            }),
            _0x37f649 = await _0x15bb4a['json']();
        return _0x37f649;
    } catch (_0x58622b) {
        return console['log']('::: AccountServerService - redeemIncentivizedAdReward() ::: ERROR', _0x58622b), {
            'success': ![],
            'error': _0x58622b
        };
    }
}
}
const _0x885096 = new _0x1cbeca();
class _0x4815ed {
static['localStorageKeyName'] = 'totalSessionsSinceLastAd';
static['incrementSessionCount']() {
    const _0x1a5ec8 = window['localStorage']['getItem'](_0x4815ed['localStorageKeyName']);
    if (_0x1a5ec8) {
        let _0xb55aed = parseInt(_0x1a5ec8);
        !isNaN(_0xb55aed) && (_0xb55aed === 0x3 ? _0xb55aed = 0x0 : _0xb55aed += 0x1, window['localStorage']['setItem'](_0x4815ed['localStorageKeyName'], _0xb55aed));
    }
}
static async ['shouldShowIncentivzedAdPopup']({
    sessionCount: _0x9c1036,
    userClickedButton: _0x525323
}) {
    return _0x9c1036 === 0x3 && _0x56fe31 || _0x525323;
}
static async ['handleShowIncentivizedAdPopup']({
    userClickedButton: _0x4c9c00
}) {
    const _0x3f8c45 = window['localStorage']['getItem'](_0x4815ed['localStorageKeyName']);
    if (_0x3f8c45) {
        const _0x277ef3 = parseInt(_0x3f8c45);
        if (!isNaN(_0x277ef3) || _0x4c9c00) {
            const _0x15b715 = await _0x4815ed['shouldShowIncentivzedAdPopup']({
                'sessionCount': _0x277ef3,
                'userClickedButton': _0x4c9c00
            });
            if (_0x15b715) {
                const _0x3a8b65 = {
                    'sessionId': _0x3eeb91['serverInfo']['sessionId'],
                    'serverId': _0x3eeb91['serverInfo']['serverId'],
                    'userId': _0x5dcedd,
                    'passwordToken': _0x268546
                };
                _0x885096['getIncentivizedAdSkins'](_0x3a8b65)['then'](_0x5fb2d6 => {
                    const {
                        success: _0x239f05
                    } = _0x5fb2d6;
                    if (_0x239f05) {
                        console['log']('::: iandev :::', _0x5fb2d6);
                        const {
                            skinData: _0x309b67
                        } = _0x5fb2d6, _0x46a763 = _0x309b67['map'](_0x54725c => {
                            const _0x7d3c8b = _0x5e4984['prototype']['getAnimalInfo'](_0x54725c['itemName']);
                            return [..._0x7d3c8b, _0x54725c['season']];
                        });
                        $bus['emit']($bus['EVENTS']['SHOW_INCENTIVIZED_AD_POPUP'], {
                            'skins': _0x46a763
                        });
                    } else {
                        const {
                            error: _0x160f45
                        } = _0x5fb2d6;
                        _0x13b3b1(_0x160f45, 'error', 0xbb8);
                    }
                });
            }
            _0x4815ed['incrementSessionCount']();
        }
    } else window['localStorage']['setItem'](_0x4815ed['localStorageKeyName'], 0x1);
}
static async ['playIncentivizedVideoAd']() {
    const _0x554afd = await _0x325762();
    if (_0x554afd) return _0x13b3b1('Disable Ad Block to get a free skin for 24 hours!', 'success', 0xbb8);
    console['log']('::: ad-tech ::: Attempting to play Incentivized Ad');
    let _0xbaa8e6 = null;
    setTimeout(() => {
        !_0xbaa8e6 && (_0x4815ed['handleFinishedWatchingAd'](), console['log']('::: ad-tech ::: Failed to play Incentivized Ads.'), gtag('event', 'incentivized_ad', {
            'event_category': 'incentivized_ads',
            'event_label': 'failed_to_play',
            'value': 'failed_to_play'
        }));
    }, 0x2710), _0x5f0a10['playIncentivizedVideoAd'](_0xc082f8 => {
        _0xbaa8e6 = _0xc082f8, console['log']('::: ad-tech ::: playIncentivizedVideoAd callback hit! ', _0xc082f8);
        if (_0xc082f8['event'] === 'start') gtag('event', 'incentivized_ad', {
            'event_category': 'incentivized_ads',
            'event_label': 'started',
            'value': 'started'
        });
        else {
            if (_0xc082f8['event'] === 'finished') console['log']('::: ad-tech ::: Incentivized Ad Finished Playing'), _0x4815ed['handleFinishedWatchingAd'](), gtag('event', 'incentivzed_ad', {
                'event_category': 'incentivized_ads',
                'event_label': 'ad_finished',
                'value': 'ad_finished'
            });
            else {
                if (_0xc082f8['event'] === 'empty') console['log']('::: ad-tech ::: Incentivized Ad Queue is Empty'), _0x4815ed['handleFinishedWatchingAd'](), gtag('event', 'incentivized_ad', {
                    'event_category': 'incentivized_ads',
                    'event_label': 'ad_queue_empty',
                    'value': 'ad_queue_empty'
                });
                else _0xc082f8['event'] === 'skipped' && (console['log']('::: ad-tech ::: Incentivized Ad Skipped'), _0x4815ed['handleFinishedWatchingAd'](), gtag('event', 'incentivized_ad', {
                    'event_category': 'incentivized_ads',
                    'event_label': 'ad_skipped',
                    'value': 'ad_skipped'
                }));
            }
        }
    });
}
static async ['playIncentivizedVideoAd']() {
    const _0x426561 = await _0x325762();
    if (_0x426561) return _0x13b3b1('Disable Ad Block to get a free skin for 24 hours!', 'success', 0xbb8);
    console['log']('::: ad-tech ::: Attempting to play Incentivized Ad');
    let _0x409e70 = null;
    setTimeout(() => {
        !_0x409e70 && (_0x4815ed['handleFinishedWatchingAd'](), console['log']('::: ad-tech ::: Failed to play Incentivized Ads.'), gtag('event', 'incentivized_ad', {
            'event_category': 'incentivized_ads',
            'event_label': 'failed_to_play',
            'value': 'failed_to_play'
        }));
    }, 0x2710), _0x5f0a10['playIncentivizedVideoAd'](_0x366667 => {
        _0x409e70 = _0x366667, console['log']('::: ad-tech ::: playIncentivizedVideoAd callback hit! ', _0x366667);
        if (_0x366667['event'] === 'start') gtag('event', 'incentivized_ad', {
            'event_category': 'incentivized_ads',
            'event_label': 'started',
            'value': 'started'
        });
        else {
            if (_0x366667['event'] === 'finished') console['log']('::: ad-tech ::: Incentivized Ad Finished Playing'), _0x4815ed['handleFinishedWatchingAd'](), gtag('event', 'incentivzed_ad', {
                'event_category': 'incentivized_ads',
                'event_label': 'ad_finished',
                'value': 'ad_finished'
            });
            else _0x366667['event'] === 'empty' && (console['log']('::: ad-tech ::: Incentivized Ad Queue is Empty'), _0x4815ed['handleFinishedWatchingAd'](), gtag('event', 'incentivized_ad', {
                'event_category': 'incentivized_ads',
                'event_label': 'ad_queue_empty',
                'value': 'ad_queue_empty'
            }));
        }
    });
}
static['handleFinishedWatchingAd']() {
    _0x885096['redeemIncentivizedAdReward']({
        'sessionId': _0x3eeb91['serverInfo']['sessionId'],
        'serverId': _0x3eeb91['serverInfo']['serverId'],
        'userId': _0x5dcedd,
        'passwordToken': _0x268546
    })['then'](_0x5a6615 => {
        const {
            success: _0x38711a,
            reward: _0x4e1857
        } = _0x5a6615;
        if (!_0x38711a) return _0x13b3b1(_0x5a6615['error'], 'error', 0xfa0);
        gtag('event', 'incentivized_ad', {
            'event_category': 'incentivized_ads',
            'event_label': 'reward_awarded',
            'value': 'reward_awarded'
        });
        const _0x61a69a = new _0x45e0ed(null, _0x4e1857['animalType']),
            _0x5b79fe = _0x5e4984['prototype']['getAnimalInfo'](_0x4e1857['itemName']),
            _0x4bb689 = _0x30409f({
                'animalType': _0x4e1857['animalType']
            }),
            _0x47fda3 = [{
                'name': _0x4bb689['abilityName'],
                'img': _0x4bb689['abilityImage'],
                'desc': 'Left click to ' + _0x4bb689['abilityName']
            }];
        _0x61a69a && _0x5b79fe && _0x4bb689 && ($bus['emit']($bus['EVENTS']['ADD_SHOP_ITEM'], {
            'isNew': !![],
            'skinName': _0x5b79fe[0x2],
            'itemName': _0x4e1857['itemName'],
            'tier': _0x4e1857['tier'],
            'shopImage': '/assets/s/' + _0x4e1857['season'] + '/skins/' + _0x5b79fe[0x3] + '.png',
            'data': {
                'info': 'Unlocked for 24 hours.'
            },
            'isOnSale': ![],
            'isFree': ![],
            'finalPrice': -0x1,
            'purchasedByPlayer': !![],
            'itemType': 'skin',
            'isTemporary': !![]
        }), $bus['emit']($bus['EVENTS']['FINISHED_INCENTIVIZED_AD'], {
            'rewardType': 'skin',
            'tier': _0x4e1857['tier'],
            'season': _0x4e1857['season'],
            'biome': _0x61a69a['biomeName'],
            'name': _0x5b79fe[0x2],
            'img': _0x5b79fe[0x3],
            'abilities': _0x47fda3
        }));
    });
}
}
$bus['on']($bus['EVENTS']['HANDLE_INCENTIVIZED_AD'], () => _0x4815ed['handleShowIncentivizedAdPopup']({
'userClickedButton': !![]
}));
var _0x1e3c43 = _0x131218;
_0x5d053c['prototype'] = Object['create'](_0x1e3c43['prototype']), _0x5d053c['prototype']['constructor'] = _0x5d053c, _0x5d053c['superClass'] = _0x1e3c43, _0x5d053c['prototype']['foodType'] = 0x0, _0x5d053c['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x5d053c['prototype']['customDraw'] = function (_0x53a512) {
_0x1d2dab['save']();
var _0x287c54 = 'gameobj/' + this['oType'] + '/' + this['oType'] + '_' + this['foodType'] + '' + (this['isEdibleOutlined']() ? '_e' : '') + '.png',
    _0x3dc90f = this['getSkinImageObj'](_0x287c54);
if (_0x3dc90f) {
    var _0x3c00b7 = this['rad'];
    _0x1d2dab['save'](), _0x1d2dab['rotate'](this['rPer'] * 0.5 * Math['PI'] * 0x2), _0x1d2dab['drawImage'](_0x3dc90f, -_0x3c00b7, -_0x3c00b7, 0x2 * _0x3c00b7, 0x2 * _0x3c00b7), _0x1d2dab['restore']();
}
_0x1d2dab['restore']();
}, _0x5d053c['prototype']['readCustomData_onNewlyVisible'] = function (_0xd0c6ff) {
this['foodType'] = _0xd0c6ff['readUInt8']();
};
var _0x3e0c7e = 0xa0;

function _0x5d053c() {
_0x5d053c['superClass']['call'](this, _0x3e0c7e), this['doesDrawEffectScale'] = !![];
}
window['ValentineFood'] = _0x5d053c, _0x13dc56['setCustomClassForGameObjType'](_0x5d053c, _0x3e0c7e), _0x3aac52['preloadImages']();
var _0x376cb2 = 0x0;

function _0x28fd9e() {
var _0xb3e54d = _0x719b30('audio/click.mp3');
if (_0xb3e54d) try {
    _0xb3e54d['play']();
} catch (_0x4c752b) {}
}
_0x719b30('audio/click.mp3'), _0x3b6313(), _0x18f8e7();
var _0x5571fa = [];

function _0x52c85d(_0x57f129) {
switch (_0x57f129) {
case _0x3319d3:
case _0x3ab87a:
case _0x2bcc5d:
case _0x5e7af4:
case _0x40ef1a:
case _0x51b980:
case _0x13556a:
case _0x570684:
case _0x141bf4:
case _0x5ddad8:
case _0x3fcd3a:
    return !![];
}
return ![];
}
var _0x2c016e = null,
_0x340a7d = null;
const _0x376e3a = function (_0x19ea47) {
    var _0x143f69 = _0x19ea47['readBitGroup'](),
        _0x40cf39 = _0x143f69['getBool']();
    if (_0x40cf39) {
        var _0x3c41d2 = _0x143f69['getBool']();
        if (_0x3c41d2) {
            vID = _0x19ea47['readUInt32']();
            _0x340a7d == null && (_0x340a7d = {
                'id': vID
            }, _0x340a7d['_ox'] = _0x340a7d['X'] = _0x340a7d['_nx'] = 0x0, _0x340a7d['_oy'] = _0x340a7d['Y'] = _0x340a7d['_ny'] = 0x0);
            var _0x13dde0 = _0x19ea47['readUInt32']() / 0x64,
                _0x39d9ee = _0x19ea47['readUInt32']() / 0x64;
            _0x340a7d['_ox'] = _0x340a7d['X'], _0x340a7d['_oy'] = _0x340a7d['Y'], _0x340a7d['_nx'] = _0x13dde0, _0x340a7d['_ny'] = _0x39d9ee;
        } else _0x340a7d = null;
    } else _0x340a7d = null;
},
_0x588090 = function () {
    var _0x4d7b23 = _0x3c55ea[_0x2fc9ba];
    if (_0x340a7d == null || !_0x4d7b23) return;
    _0x2f02a8(), _0x1d2dab['save'](), _0x1d2dab['strokeStyle'] = 'white', _0x1d2dab['globalAlpha'] = 0x1, _0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](_0x4d7b23['x'], _0x4d7b23['y']), _0x1d2dab['lineTo'](_0x340a7d['X'], _0x340a7d['Y']), _0x1d2dab['stroke'](), _0x1d2dab['restore']();
},
_0x2f02a8 = function () {
    var _0x202d75 = 0.1;
    _0x340a7d['X'] = _0x202d75 * (_0x340a7d['_nx'] - _0x340a7d['_ox']) + _0x340a7d['_ox'], _0x340a7d['Y'] = _0x202d75 * (_0x340a7d['_ny'] - _0x340a7d['_oy']) + _0x340a7d['_oy'];
};
var _0x2b468b = new Array();
const _0x378915 = function (_0x3b6f3c) {
    var _0x46beef = _0x3b6f3c['readUInt8']();
    _0x2b468b = new Array();
    for (i = 0x0; i < _0x46beef; i++) {
        var _0xe594ce = _0x3b6f3c['readUInt16'](),
            _0x17163d = _0x3b6f3c['readUInt8']();
        if (_0x17163d > 0x0)
            for (s = 0x0; s < _0x17163d; s++) {
                var _0x5bd451 = _0x3b6f3c['readUInt16']() / 0x4,
                    _0x4d3f8d = _0x3b6f3c['readUInt16']() / 0x4;
                if (_0xe594ce == _0x4341d1) {
                    var _0x2bfeb9 = _0x3b6f3c['readUInt8']() == 0x1,
                        _0x15f547 = _0x3b6f3c['readUInt8']();
                    _0x2b468b['push']({
                        'oType': _0xe594ce,
                        'specType': _0x15f547,
                        'x': _0x5bd451,
                        'y': _0x4d3f8d,
                        'rad': 0x2,
                        'droppedInHole': _0x2bfeb9
                    });
                } else {
                    if (_0xe594ce == _0x22ccdc) {
                        var _0x15f547 = _0x3b6f3c['readUInt8']();
                        _0x2b468b['push']({
                            'oType': _0xe594ce,
                            'specType': _0x15f547,
                            'x': _0x5bd451,
                            'y': _0x4d3f8d,
                            'rad': 0x2
                        });
                    } else _0x2b468b['push']({
                        'oType': _0xe594ce,
                        'x': _0x5bd451,
                        'y': _0x4d3f8d,
                        'rad': 0x2
                    });
                }
            }
    }
    var _0x17163d = _0x3b6f3c['readUInt8']();
    for (s = 0x0; s < _0x17163d; s++) {
        var _0x542314 = _0x3b6f3c['readUInt16'](),
            _0x1ea470 = _0x3b6f3c['readUInt16']() / 0x4,
            _0x5bd451 = _0x3b6f3c['readUInt16']() / 0x4,
            _0x4d3f8d = _0x3b6f3c['readUInt16']() / 0x4;
        _0x2b468b['push']({
            'oType': _0x2c5edd,
            'abil': _0x542314,
            'x': _0x5bd451,
            'y': _0x4d3f8d,
            'angle': _0x1ea470,
            'rad': 0x2
        });
    }
},
_0x2e87ef = function (_0x3b74f0) {
    _0x4f8e9d = {};
    var _0x29ad60 = _0x3b74f0['readUInt8']() == 0x1;
    if (_0x29ad60) {
        var _0x1f72a2 = _0x3b74f0['readUInt8']();
        _0x4f8e9d = {}, _0x4f8e9d['treesCount'] = _0x1f72a2;
        for (i = 0x0; i < _0x1f72a2; i++) _0x4f8e9d[_0x3b74f0['readUInt32']()] = 0x1;
    }
};
var _0x159fb6 = [];
const _0x43c754 = function (_0x2ffea3) {
_0x159fb6 = [];
var _0xeb77f4 = _0x2ffea3['readUInt8']() == 0x1;
if (_0xeb77f4) {
    var _0x153905 = _0x2ffea3['readUInt8']();
    for (i = 0x0; i < _0x153905; i++) _0x159fb6[_0x2ffea3['readUInt32']()] = !![];
    _0x159fb6[_0x2fc9ba] = !![];
}
};

function _0x289d59(_0x37c55c) {
var _0x199f64 = [];
return _0x199f64['rank'] = _0x37c55c['readUInt16'](), _0x199f64['topRank'] = _0x37c55c['readUInt16'](), _0x199f64['timeAlive'] = _0x37c55c['readUInt16'](), _0x199f64['totalKills'] = _0x37c55c['readUInt16'](), _0x199f64['maxXP'] = _0x37c55c['readUInt32'](), _0x199f64;
}
var _0x3c9669 = null,
_0x34aa73 = 0x0;

function _0x56a32d(_0x310beb) {
_0x34aa73 = _0x157802 * 0.6;
if (_0x3c9669 == null) _0x3c9669 = document['createElement']('canvas');
var _0xcb7d50 = _0x3c9669['getContext']('2d'),
    _0x5080d8 = 0x37,
    _0x5dcd97 = 0x28,
    _0x4e7762 = 0x5,
    _0x4a21ec = 0xc8,
    _0x450d5f = 0x1a4;
_0x5080d8 = _0x4a21ec + _0x4e7762 * 0x2, _0x3c9669['width'] = _0x450d5f + _0x4e7762 * 0x2, _0x3c9669['height'] = _0x5080d8, _0xcb7d50['globalAlpha'] = 0.2, _0xcb7d50['fillStyle'] = '#000000', _0xcb7d50['fillRect'](0x0, 0x0, _0x3c9669['width'], _0x3c9669['height']), _0xcb7d50['fillStyle'] = '#000000', _0xcb7d50['fillRect'](_0x4e7762, _0x4e7762, _0x3c9669['width'] - _0x4e7762 * 0x2, _0x3c9669['height'] - _0x4e7762 * 0x2);
var _0x3bcdde = 0x37 + _0x4e7762;
_0xcb7d50['globalAlpha'] = 0x1, _0xcb7d50['fillStyle'] = '#FFFFFF', _0xcb7d50['font'] = '30px Arial';
var _0x40cd7a = 'YOU DIED!';
_0xcb7d50['font'] = '30px Arial', _0xcb7d50['fillText'](_0x40cd7a, _0x3c9669['width'] / 0x2 - _0xcb7d50['measureText'](_0x40cd7a)['width'] / 0x2, _0x3bcdde), _0xcb7d50['font'] = '20px Arial', _0x3bcdde += 0x2d, _0x40cd7a = 'You were #' + _0x310beb['rank'], _0xcb7d50['fillText'](_0x40cd7a, _0x3c9669['width'] / 0x2 - _0xcb7d50['measureText'](_0x40cd7a)['width'] / 0x2, _0x3bcdde), _0x3bcdde += 0x28;
var _0x2d5bee = _0x1a2910(_0x310beb['timeAlive']),
    _0x46630d = _0x4e7762 + 0xf;
_0x50cdc3(_0xcb7d50, 'Time Alive', _0x2d5bee, _0x46630d, _0x3bcdde), _0x46630d += 0xd2, _0x50cdc3(_0xcb7d50, 'Total Kills', _0x310beb['totalKills'], _0x46630d, _0x3bcdde), _0x3bcdde += 0x28, _0x46630d = _0x4e7762 + 0xf, _0x50cdc3(_0xcb7d50, 'Top rank', _0x310beb['topRank'], _0x46630d, _0x3bcdde), _0x46630d += 0xd2, _0x50cdc3(_0xcb7d50, 'Max XP', _0x33bfab(_0x310beb['maxXP']), _0x46630d, _0x3bcdde);
}

function _0x5c6fe2(_0x3bd720, _0x597808, _0xa3dc6f, _0x1f0b06, _0x6f500b, _0x2635dc) {
if (_0x31f3fc == 0x2) return;
_0x1d2dab['save']();
var _0x4b3e5e = _0xa3dc6f - _0x3bd720,
    _0x3cfd08 = _0x1f0b06 - _0x597808,
    _0x2f69a0 = 0x0,
    _0x100ac6 = _0x1bcf68 / 0x2 / _0x3655c9,
    _0x580da = _0x157802 / 0x2 / _0x3655c9;
_0x3bd720 = Math['max'](_0x3bd720, _0x552b0d - _0x100ac6 - _0x6f500b + _0x2f69a0), _0x597808 = Math['max'](_0x597808, _0x1a453f - _0x580da - _0x2635dc + _0x2f69a0), _0xa3dc6f = Math['min'](_0xa3dc6f, _0x552b0d + _0x100ac6 - _0x6f500b - _0x2f69a0), _0x1f0b06 = Math['min'](_0x1f0b06, _0x1a453f + _0x580da - _0x2635dc - _0x2f69a0), _0x1d2dab['strokeStyle'] = 'black', _0x1d2dab['globalAlpha'] = 0.055;
var _0x4b6726 = 0x1e,
    _0x2a37b9 = _0xa3dc6f - _0x3bd720;
fillH = _0x1f0b06 - _0x597808;
for (var _0x374858 = -0.5 + _0x3bd720 + (_0x4b3e5e - _0x3bd720) % _0x4b6726; _0x374858 < _0x3bd720 + _0x2a37b9; _0x374858 += _0x4b6726) {
    _0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](_0x374858, _0x597808), _0x1d2dab['lineTo'](_0x374858, _0x597808 + fillH), _0x1d2dab['stroke']();
}
for (dy = -0.5 + _0x597808 + (_0x3cfd08 - _0x597808) % _0x4b6726; dy < _0x597808 + fillH; dy += _0x4b6726) {
    _0x1d2dab['beginPath'](), _0x1d2dab['moveTo'](_0x3bd720, dy), _0x1d2dab['lineTo'](_0x3bd720 + _0x2a37b9, dy), _0x1d2dab['stroke']();
}
_0x1d2dab['restore']();
}
const _0x58eeb1 = function () {
_0x316be0 = ![], _0x1b40ba = ![];
if (_0xfd0710) return;
_0x4a8d9c();
if (_0x4ab633 || !_0x58e44c) return;
_0x2be865(![]);
};
$bus['on']($bus['EVENTS']['START_GAME'], _0x58eeb1), $bus['on']($bus['EVENTS']['UI_SPECTATE'], () => {
_0xc56c66();
});
const _0xc56c66 = function () {
if (!_0xfd0710) {
    var _0x4f269e = new _0x5768c5(0x1);
    _0x4f269e['writeUInt8'](_0x458eab), _0x485a35(_0x4f269e);
}
};
var _0x2d53d5 = ![],
_0x47fe47 = ![];
let _0x2b8a2b = ![];
$bus['on']($bus['EVENTS']['UI_PRESSED_ENTER'], () => {
_0x2b8a2b = !![], setTimeout(() => {
    _0x2b8a2b = ![];
}, 0x1f4);
});

function _0x4bb02c(_0x138970) {
var _0x465eeb = document['getElementById']('chatinput');
switch (_0x138970['key']) {
case 'ArrowLeft':
    if (_0x138970['ctrlKey']) {
        var _0x342df3 = _0x465eeb['style']['width'];
        _0x342df3 = _0x342df3['replace']('px', ''), _0x342df3 = Number(_0x342df3) - 0x5, _0x465eeb['style']['width'] = _0x342df3 + 'px';
    } else {
        var _0x342df3 = _0x465eeb['style']['left'];
        _0x342df3 = _0x342df3['replace']('px', ''), _0x342df3 = Number(_0x342df3) - 0x5, _0x465eeb['style']['left'] = _0x342df3 + 'px';
    }
    break;
case 'ArrowRight':
    if (_0x138970['ctrlKey']) {
        var _0x342df3 = _0x465eeb['style']['width'];
        _0x342df3 = _0x342df3['replace']('px', ''), _0x342df3 = Number(_0x342df3) + 0x5, _0x465eeb['style']['width'] = _0x342df3 + 'px';
    } else {
        var _0x342df3 = _0x465eeb['style']['left'];
        _0x342df3 = _0x342df3['replace']('px', ''), _0x342df3 = Number(_0x342df3) + 0x5, _0x465eeb['style']['left'] = _0x342df3 + 'px';
    }
    break;
case 'ArrowUp':
    var _0x342df3 = _0x465eeb['style']['top'];
    _0x342df3 = _0x342df3['replace']('px', ''), _0x342df3 = Number(_0x342df3) - 0x5, _0x465eeb['style']['top'] = _0x342df3 + 'px';
    break;
case 'ArrowDown':
    var _0x342df3 = _0x465eeb['style']['top'];
    _0x342df3 = _0x342df3['replace']('px', ''), _0x342df3 = Number(_0x342df3) + 0x5, _0x465eeb['style']['top'] = _0x342df3 + 'px';
    break;
}
}
var _0x31039c = ![],
_0x144def = !![];

function _0x3fa69d(_0x19bbbd) {
if (_0x19bbbd['indexOf']('/anim-switch:') != -0x1) {
    var _0x3e1c20 = _0x19bbbd['replace']('/anim-switch:', '');
    switch (_0x3e1c20) {
    case 'honeybee':
        _0x47849 = !_0x47849;
        return !![];
    case 'phoenix':
        _0x59c105 = !_0x59c105;
        return !![];
    }
}
return _0x447423(_0x19bbbd);
}
var _0x346a79 = ![];
const _0x447423 = function (_0x1dbd31) {
if (!_0x285caa && !_0x205acb) return ![];
if (_0x1dbd31['indexOf']('chatbox:') != -0x1) {
    var _0x476888 = _0x1dbd31['replace']('chatbox:', '');
    switch (_0x476888) {
    case 'edit:start':
        _0x31039c = !![];
        break;
    case 'edit:end':
        var _0x55b7a2 = document['getElementById']('chatinput'),
            _0x5ef20e = {
                'autoLoad': _0x144def,
                'left': _0x55b7a2['style']['left'],
                'top': _0x55b7a2['style']['top'],
                'width': _0x55b7a2['style']['width']
            };
        localStorage['setItem']('chatbox', JSON['stringify'](_0x5ef20e)), _0x31039c = ![];
        break;
    case 'set:autoload':
        _0x144def = !![];
        break;
    case 'load':
        var _0x55b7a2 = document['getElementById']('chatinput'),
            _0x5ef20e = JSON['parse'](localStorage['getItem']('chatbox'));
        _0x55b7a2['style']['left'] = _0x5ef20e['left'], _0x55b7a2['style']['top'] = _0x5ef20e['top'], _0x55b7a2['style']['width'] = _0x5ef20e['width'];
        break;
    case 'reset':
        var _0x55b7a2 = document['getElementById']('chatinput');
        _0x55b7a2['style']['left'] = '', _0x55b7a2['style']['right'] = '', _0x55b7a2['style']['width'] = '';
        break;
    }
    return;
}
switch (_0x1dbd31) {
case 'show:interface':
    _0x285800 = !![], _0x22bf93 = !![], _0x5c60f3 = !![], _0x31d269 = !![], _0x5d6eed = !![], _0x5b3018 = !![], _0x346a79 = ![];
    return !![];
case 'hide:interface':
    _0x285800 = ![], _0x22bf93 = ![], _0x5c60f3 = ![], _0x31d269 = ![], _0x5d6eed = ![], _0x5b3018 = ![], _0x346a79 = !![];
    return !![];
case 'show:map':
    _0x285800 = !![];
    return !![];
case 'show:xpbar':
    _0x5c60f3 = !![];
    return !![];
case 'show:board':
    _0x22bf93 = !![];
    return !![];
case 'show:waterbar':
    _0x31d269 = !![];
    return !![];
case 'show:1v1':
    _0x5b3018 = !![];
    return !![];
case 'show:ability':
    _0x5d6eed = !![];
    return !![];
case 'hide:map':
    _0x285800 = ![];
    return !![];
case 'hide:xpbar':
    _0x5c60f3 = ![];
    return !![];
case 'hide:board':
    _0x22bf93 = ![];
    return !![];
case 'hide:waterbar':
    _0x31d269 = ![];
    return !![];
case 'hide:1v1':
    _0x5b3018 = ![];
    return !![];
case 'hide:ability':
    _0x5d6eed = ![];
    return !![];
}
return ![];
};

function _0x41b7d7(_0x41217e) {
if (_0xa67a42) {
    var _0x233d1a = JSON['parse'](localStorage['getItem']('chatbox'));
    if (_0x41217e && _0x233d1a && _0x233d1a['autoLoad']) {
        var _0x4b940c = document['getElementById']('chatinput');
        _0x4b940c['style']['left'] = _0x233d1a['left'], _0x4b940c['style']['top'] = _0x233d1a['top'], _0x4b940c['style']['width'] = _0x233d1a['width'];
    }
}
}
_0x41b7d7(!![]);
const _0x35add7 = function () {
if (!_0x56fe31 && _0x1b64fa) return;
var _0x32e3b0 = document['getElementById']('chatinput');
if (!_0x2d53d5 && _0x3c6c95) {
    _0x32e3b0['style']['visibility'] = 'visible', _0x32e3b0['focus'](), _0x2d53d5 = !![];
    if (_0x205acb) _0x32e3b0['maxLength'] = 0x64;
    _0x32e3b0['onblur'] = function () {
        if (_0x2d53d5) _0x35add7();
    };
} else {
    if (_0x2d53d5) {
        var _0x23414e = _0x32e3b0['value'] + '';
        _0x2d53d5 = ![], _0x32e3b0['style']['visibility'] = 'hidden', _0x23414e['length'] > 0x0 && _0x3c6c95 && (!_0x3fa69d(_0x23414e) && (newMsg = new _0x5768c5(0x3 + _0x365a9c(_0x23414e)['length']), newMsg['writeUInt8'](0x13), newMsg['writeString'](_0x23414e), _0x485a35(newMsg))), _0x32e3b0['value'] = '';
    }
}
};
window['onresize'] = _0x3b6313;
var _0x4358b4 = 0x3e8,
_0xcfc086 = 0x3e8;

function _0x4a15c4() {
var _0x2a2aa6 = window['innerWidth'] * 0.15;
if (_0x2a2aa6 > 0xc8) _0x161cf1 = 0xc8;
else {
    if (_0x2a2aa6 < 0x96) _0x161cf1 = 0x96;
    else _0x161cf1 = _0x2a2aa6;
}
console['log'](_0x161cf1);
}

function _0x3b6313() {
_0x4358b4 = window['innerWidth'], _0xcfc086 = window['innerHeight'], _0x533b0b = null;
_0x197353 && (_0x4358b4 = document['body']['clientWidth'], _0xcfc086 = document['body']['clientHeight']);
switch (_0x31f3fc) {
case 0x1:
case 0x2:
case 0x3:
    _0x4ffcf2 = window['devicePixelRatio'];
    break;
default:
    console['log']('Unknown graphics level ' + _0x31f3fc);
}
_0x1bcf68 = _0x4358b4 * _0x4ffcf2, _0x157802 = _0xcfc086 * _0x4ffcf2, _0x50791a['width'] = _0x1bcf68, _0x50791a['height'] = _0x157802, _0x50791a['style']['width'] = _0x4358b4 + 'px', _0x50791a['style']['height'] = _0xcfc086 + 'px', _0x32b8d4 = 0.85 * _0x4ffcf2 * Math['max'](_0x4358b4 / 0x780, _0xcfc086 / 0x438);
var _0x513e1e = document['getElementById']('chatinput');
_0x513e1e['style']['marginTop'] = _0xcfc086 / 0x2 - 0x32 + 'px', _0x17b389();
_0x26f437() && (mes = new _0x5768c5(0x7), mes['writeUInt8'](0x11), mes['writeUInt16'](_0x1bcf68), mes['writeUInt16'](_0x157802), _0x4a15c4(), mes['writeUInt16'](_0x161cf1), _0x485a35(mes));
if (_0xefeaf8 != null) _0xefeaf8['onResize']();
}
var _0x270894 = 0x1,
_0x3560e8 = 0x2,
_0x3ef597 = 0x3,
_0x3f0153 = 0x4,
_0x5e8656 = 0x5,
_0x27d65c = 0x6,
_0x2dfddc = 0x7;

function _0x551e32(_0x1a9b8c, _0x22a8a7) {
switch (_0x1a9b8c) {
case _0x270894: {
    if (_0x5242eb != _0x22a8a7) {
        if (_0x26f437() && _0x3c6c95) {
            if (_0x22a8a7) _0x353df5();
            var _0x454926 = new _0x5768c5(0x2);
            _0x454926['writeUInt8'](0x15), _0x454926['writeUInt8'](_0x22a8a7 ? 0x1 : 0x0), _0x485a35(_0x454926);
            if (_0x1a2c52 > 0x0) {
                var _0x454926 = new _0x5768c5(0x5);
                _0x454926['writeUInt8'](_0x1a434e), _0x454926['writeUInt32'](_0x1a2c52), _0x485a35(_0x454926), _0x1a2c52 = 0x0;
            }
        }
    }
    _0x5242eb = _0x22a8a7;
}
break;
case _0x3560e8: {
    if (_0x5b4d8b != _0x22a8a7) {
        if (_0x26f437() && _0x3c6c95) {
            if (_0x22a8a7) _0x353df5();
            var _0x454926 = new _0x5768c5(0x2);
            _0x454926['writeUInt8'](0x14), _0x454926['writeUInt8'](_0x22a8a7 ? 0x1 : 0x0), _0x485a35(_0x454926);
        }
    }
    _0x5b4d8b = _0x22a8a7;
}
break;
case _0x3ef597: {
    if ((_0x285caa || _0x205acb) && _0x3c6c95) {
        var _0x454926 = new _0x5768c5(0x1);
        _0x454926['writeUInt8'](0x1a), _0x485a35(_0x454926);
    }
}
break;
case _0x3f0153: {
    if ((_0x285caa || _0x205acb) && _0x3c6c95) {
        var _0x454926 = new _0x5768c5(0x1);
        _0x454926['writeUInt8'](0x1b), _0x485a35(_0x454926);
    }
}
break;
case _0x5e8656: {
    if (_0x3c6c95) {
        var _0x454926 = new _0x5768c5(0x2);
        _0x454926['writeUInt8'](0x1c), _0x454926['writeUInt8'](_0x22a8a7 ? 0x1 : 0x0), _0x485a35(_0x454926);
    }
}
break;
case _0x27d65c: {
    if (_0x3c6c95 && _0x205acb) {
        var _0x454926 = new _0x5768c5(0x2);
        _0x454926['writeUInt8'](0x1e), _0x454926['writeUInt8'](_0x22a8a7 ? 0x1 : 0x0), _0x485a35(_0x454926);
    }
}
break;
case _0x2dfddc: {
    if (_0x3c6c95 && _0x205acb) {
        var _0x454926 = new _0x5768c5(0x2);
        _0x454926['writeUInt8'](0x1d), _0x454926['writeUInt8'](_0x22a8a7 ? 0x1 : 0x0), _0x485a35(_0x454926);
    }
}
break;
}
}

function _0xd317c0() {
if (!_0x2d53d5 && _0x3c6c95) {
    if (document['activeElement'] && document['activeElement'] != _0x50791a) _0x50791a && (console['log']('canvas is focused now!'), _0x50791a['focus']());
    else {}
}
}
_0x50791a['onblur'] = function (_0x23be5a) {
_0x1cb4d1(_0x23be5a);
}, window['onfocus'] = function (_0x3c9a72) {
_0x1cf1ae(_0x3c9a72);
};

function _0x1cb4d1(_0x42788e) {
if (_0x5b4d8b || _0x5242eb) return;
_0x551e32(_0x270894, ![]), _0x551e32(_0x3560e8, ![]);
}

function _0x1cf1ae(_0x2671ed) {
_0x4a8d9c();
}
document['oncontextmenu'] = document['body']['oncontextmenu'] = function () {
return !_0x3c6c95;
};

function _0x368165() {
var _0x4e391b = _0x1bcf68 / 0x2,
    _0xf8ed25 = _0x157802 / 0x2;
_0x500d8e = (_0x324b2a - (_0x4e391b - _0x552b0d * _0x3655c9)) / _0x3655c9, _0x2a7c03 = (_0x344a08 - (_0xf8ed25 - _0x1a453f * _0x3655c9)) / _0x3655c9;
}

function _0x3fc5f8(_0x27ea82) {
return _0x27ea82 * _0x3655c9 + (_0x1bcf68 / 0x2 - _0x552b0d * _0x3655c9);
}

function _0x4b3515(_0x27e005) {
return _0x27e005 * _0x3655c9 + (_0x157802 / 0x2 - _0x1a453f * _0x3655c9);
}

function _0x3215e9(_0x300735) {
return (_0x300735 - (_0x1bcf68 / 0x2 - _0x552b0d * _0x3655c9)) / _0x3655c9;
}

function _0x5a9941(_0x8124c0) {
return (_0x8124c0 - (_0x157802 / 0x2 - _0x1a453f * _0x3655c9)) / _0x3655c9;
}

function _0x353df5() {
if (_0x47fe47) {
    var _0x28cf91 = _0x3c55ea[_0x2fc9ba];
    if (_0x28cf91) _0x500d8e = _0x28cf91['x'], _0x2a7c03 = _0x28cf91['y'] + 0x2;
    else return;
}
if (_0x26f437() && (_0x3c6c95 || _0x3727a5)) {
    if (Math['abs'](_0x236e1e - _0x500d8e) > 0.1 || Math['abs'](_0x1d3d07 - _0x2a7c03) > 0.1) {
        _0x236e1e = _0x500d8e, _0x1d3d07 = _0x2a7c03, mes = new _0x5768c5(_0x56ae6f + 0x2), mes['writeUInt8'](0x5), mes['writeInt16'](_0x500d8e), mes['writeInt16'](_0x2a7c03);
        if (_0x2691a8) console['log']('::: iandev ::: sent dev testing mouse coords');
        _0x485a35(mes);
    }
}
}
setInterval(_0x353df5, 0xa), setInterval(_0x1668d2, 0x1388);

function _0x18f8e7() {
_0x3b6313(), _0xd3db61 = 0x0, _0x3c55ea = {}, _0xf458cf = [], _0x29c845 = [], _0x47970c = 0x19, _0x9cd38f = _0x26338c = 0x0, _0xc97cb(_0x9cd38f), curBarPerc_n = _0x4c41f4 = 0x64, _0x2dfc88 = _0xb03d03 = _0x3b010f = 0x0, _0xe35f4e(_0x3b010f), _0x49b3ea = null, _0xfd0710 = ![], _0x1cf3f1 = null, _0x241811 = '', _0x3a7cdd(), _0x2790d1 = ![], _0xdb682c = 0x0, _0x2a6397 = [], _0x4f3785 = ![], _0x37f689 = [], _0xd1fe10 = 0x0, _0x5db317 = 0x0, isInfected = _0x44408d = ![], _0x3dbb56 = 0x0, _0x512c37 = ![], _0x4db9ef = 0x0, _0x13caf0 = [], _0x462117 = null, _0x4e1363 = ![], _0x2c5700 = 0x0, _0x4ab620 = 0x0, _0x205acb = ![], _0x3727a5 = ![], _0x3c9669 = null, $bus['emit']($bus['EVENTS']['RESET_GAME']);
}
$bus['on']($bus['EVENTS']['UI_UPDATED_PLAYERNAME'], _0x5c33da => {
if (typeof _0x4218e0 !== 'undefined') {
    _0x4218e0 = _0x5c33da;
    if (window['localStorage']) try {
        window['localStorage']['setItem']('nick', _0x5c33da);
    } catch (_0x91ec08) {}
}
}), window['onload'] = function () {
_0x3b6313();
if (window['localStorage']) {
    var _0x5118c6 = window['localStorage']['getItem']('nick');
    _0x5118c6 && (typeof _0x4218e0 !== 'undefined' && (_0x4218e0 = _0x5118c6), $bus['emit']($bus['EVENTS']['CLIENT_UPDATED_PLAYERNAME'], {
        'name': _0x5118c6,
        'focusInput': !_0x3abb4d,
        'setInputRangeToEnd': !![]
    }));
}
};
if (_0x50791a['addEventListener']) _0x50791a['addEventListener']('mousewheel', _0x47b1d4), _0x50791a['addEventListener']('DOMMouseScroll', _0x47b1d4);
else _0x50791a['attachEvent']('onmousewheel', _0x47b1d4);
var _0x5471ad = 0x0,
_0x1e22df = 0x1;

function _0x47b1d4(_0x19c74e) {
var _0x19c74e = window['event'] || _0x19c74e,
    _0x11b993 = Math['max'](-0x1, Math['min'](0x1, _0x19c74e['wheelDelta'] || -_0x19c74e['detail']));
if (_0x11b993 == 0x1) _0x5471ad += 0x1;
else _0x5471ad -= 0.1;
_0x5471ad = Math['max'](0x0, _0x5471ad), _0x5471ad = Math['min'](0xa, _0x5471ad);
if (_0x5633da) {
    var _0x11a00e = Math['abs'](_0x5471ad) * 0x64,
        _0x1c6da1 = new _0x5768c5(0x4);
    _0x1c6da1['writeUInt8'](_0x142f4f), _0x1c6da1['writeUInt8'](_0x11b993 == -0x1 ? 0x0 : 0x1), _0x1c6da1['writeInt16'](_0x11a00e), _0x485a35(_0x1c6da1);
}
}
var _0xefeaf8 = null;

function _0x4b3787() {
_0x1f005b();
if (_0xefeaf8 != null) _0xefeaf8['interfaceReset']();
_0xefeaf8 = null, console['log']('setting game mode interface:' + _0x5dd9a5);
if (_0x5dd9a5 == _0x30ec4b) _0xefeaf8 = new _0x4ca308(_0x5dd9a5), _0xefeaf8['state'] = _0x3f40a3;
else {
    if (_0x5dd9a5 == _0x216779) _0xefeaf8 = new _0x343a4a(_0x5dd9a5), _0xefeaf8['state'] = _0x3f40a3;
    else {
        if (_0x5dd9a5 == _0x31cada) _0xefeaf8 = new _0x30eedb(_0x5dd9a5), _0xefeaf8['state'] = _0x3f40a3;
        else {
            if (_0x5dd9a5 == _0x1292d4) _0xefeaf8 = new _0x29d61e(), _0xefeaf8['state'] = _0x3f40a3;
            else _0x5dd9a5 == _0x347b40 && (_0xefeaf8 = new _0x469fc2(_0x5dd9a5), _0xefeaf8['state'] = _0x3f40a3);
        }
    }
}
console['log'](_0xefeaf8);
}

function _0x559867(_0x54ace8, _0x4459b1, _0x1c1795) {
var _0x3fd897 = _0x54ace8['x'] + _0x4459b1 * Math['cos'](_0x1c1795),
    _0x266826 = _0x54ace8['y'] + _0x4459b1 * Math['sin'](_0x1c1795);
return {
    'x': _0x3fd897,
    'y': _0x266826
};
}

function _0x3bee00(_0x5423f7, _0x389a82, _0x2e05be, _0x2c2315, _0xe04dc5) {
_0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = _0xe04dc5, _0x1d2dab['beginPath'](), _0x1d2dab['translate'](_0x5423f7, _0x389a82), _0x1d2dab['rotate'](_0x2e05be), _0x1d2dab['moveTo'](-0x5, -0x5), _0x1d2dab['lineTo'](-0x5, 0x5), _0x1d2dab['lineTo'](0x5, 0x5), _0x1d2dab['lineWidth'] = 1.5, _0x1d2dab['strokeStyle'] = _0x2c2315, _0x1d2dab['fillStyle'] = _0x2c2315, _0x1d2dab['stroke'](), _0x1d2dab['restore']();
}

function _0x596ecf() {
var _0x1b0624 = _0x3c55ea[_0x2fc9ba];
if (_0x1b0624)
    for (d = 0x0; d < _0xf458cf['length']; d++) {
        var _0x387480 = _0xf458cf[d];
        if (_0x1b0624['id'] != _0x387480['id']) {
            if (_0x387480['oType'] === _0x4ad968) {
                var _0x7b2e63 = _0x387480['getOutlineColor'](),
                    _0x56e038 = ![];
                if (_0x7b2e63 == _0x4fab5f || _0x7b2e63 == _0x4c4d1f) _0x56e038 = !![];
                if (_0x56e038) _0x9ca1b6(_0x1b0624, _0x387480, _0x7b2e63);
            }
        }
    }
}

function _0x52eba0(_0x470a39, _0x12a92e) {
var _0x5e64b7 = _0x470a39['x'] - _0x12a92e['x'],
    _0x29a110 = _0x470a39['y'] - _0x12a92e['y'],
    _0x597ce6 = Math['sqrt'](_0x5e64b7 * _0x5e64b7 + _0x29a110 * _0x29a110);
return _0x597ce6;
}

function _0x9ca1b6(_0xc2567f, _0x2fe609, _0x30f05e) {
var _0x1e17b6 = _0x1bcf68 / 0x2,
    _0x5ad576 = _0x157802 / 0x2,
    _0x3cfa4f = _0x33d550(_0x2fe609['x'], _0x2fe609['y'], _0xc2567f['x'], _0xc2567f['y']),
    _0x402623 = _0x3fc5f8(_0x2fe609['x']),
    _0x4c07be = _0x4b3515(_0x2fe609['y']),
    _0x193404 = _0x2fe609['rad'] * _0x3655c9,
    _0x640b49 = Math['min'](Math['abs'](_0x402623 - _0x193404 - 0x0), Math['abs'](_0x402623 + _0x193404 - _0x1bcf68)),
    _0x1ef630 = Math['min'](Math['abs'](_0x4c07be - _0x193404 - 0x0), Math['abs'](_0x4c07be + _0x193404 - _0x157802)),
    _0x1e3f7a = -0x32 - _0xc2567f['rad'],
    _0x5c82f7 = _0x559867({
        'x': _0xc2567f['x'],
        'y': _0xc2567f['y']
    }, _0x1e3f7a, _0x3cfa4f),
    _0x2d561a = _0x52eba0({
        'x': _0x5c82f7['x'],
        'y': _0x5c82f7['y']
    }, {
        'x': _0x2fe609['x'],
        'y': _0x2fe609['y']
    });
if (_0x2fe609['rad'] < 0x64 && _0x2d561a < _0x2fe609['rad'] * 0.5 || _0x2d561a < 0xc8) return;
_0x3cfa4f += _0x2bcbaa(0x2d);
var _0x1a9df9 = 0x1,
    _0x1e6992 = 0x14;
_0x3bee00(_0x5c82f7['x'], _0x5c82f7['y'], _0x3cfa4f, _0x30f05e, _0x1a9df9);
}

function _0x1f005b() {
_0x36e784(!![]);
}

function _0x44ea5a() {
if (_0x2960fc == _0x5b6f26) {
    if (_0x221b08 == null) {
        var _0x3e8f36 = new _0x5768c5(0x2);
        _0x3e8f36['writeUInt8'](_0x13163e), _0x485a35(_0x3e8f36);
    } else {
        var _0x3e8f36 = new _0x5768c5(0x2);
        _0x3e8f36['writeUInt8'](_0x13163e), _0x485a35(_0x3e8f36), _0x221b08['updateExpiry']();
    }
}
}
var _0x46784c = 0x5,
_0x5396f9 = 0x5,
_0x1b8295 = 0xa,
_0x400f69 = 0x0,
_0x34d2b3 = 0x0,
_0x92fe5c = null,
_0x3e0558 = 0x0,
_0x126aa4 = null,
_0x251b04 = 0x0,
_0x297f29 = 0xf,
_0x29cf3a = 0x0,
_0x221b08 = null;

function _0x3d0358() {
_0x221b08 != null && _0x221b08['display']();
}

function _0x2e7e4f() {
if (_0x126aa4 == null) {
    _0x29cf3a = 0x0, _0x92fe5c = null;
    return;
}
if (_0x92fe5c == null) _0x92fe5c = document['createElement']('canvas');
if (_0x92fe5c == null) return;
if (_0x29cf3a == 0x0) _0x29cf3a = _0x740c5b;
var _0x36d73c = _0x92fe5c['getContext']('2d'),
    _0x2392b6 = 0x37,
    _0x493938 = 0x5,
    _0x46118b = 0x0,
    _0x341db4 = 0x50 * _0x32b8d4,
    _0x3812ad = 0x82 + 0x5 * (_0x341db4 + 0xa),
    _0x3812ad = 0x2bc * _0x32b8d4,
    _0x289ccf = 0x2bc * _0x32b8d4;
console['log']('inferface scale ' + _0x32b8d4 + ' borad_height ' + _0x3812ad), _0x2392b6 = _0x3812ad + _0x493938 * 0x2, _0x92fe5c['width'] = _0x289ccf + _0x493938 * 0x2, _0x92fe5c['height'] = _0x2392b6;
var _0x2a92d4 = 0xc8;
_0x3e0558 = _0x2a92d4, _0x36d73c['globalAlpha'] = 0.1;
var _0x5bd47e = _0x493938;
_0x36d73c['globalAlpha'] = 0x1, _0x36d73c['fillStyle'] = '#FFFFFF', _0x36d73c['font'] = '30px Arial', _0x5bd47e += 0x2d;
var _0x454d89 = 'APEX KILLS';
_0x36d73c['font'] = '30px Arial', _0x36d73c['fillText'](_0x454d89, _0x92fe5c['width'] / 0x2 - _0x36d73c['measureText'](_0x454d89)['width'] / 0x2, _0x5bd47e), _0x2a92d4 = 0x64, _0x5bd47e += _0x341db4;
var _0x3284f6 = 0x168 / _0x126aa4['anis']['length'],
    _0x3394b2 = 0xfa * _0x32b8d4,
    _0x1fc8f8 = _0x92fe5c['width'] / 0x2,
    _0x53644b = _0x92fe5c['height'] / 0x2;
_0x36d73c['fillStyle'] = 'black', _0x36d73c['globalAlpha'] = 0.1, _0x36d73c['beginPath'](), _0x36d73c['arc'](_0x1fc8f8, _0x1fc8f8, _0x3394b2 - _0x341db4 / 0x2, 0x0, Math['PI'] * 0x2, ![]), _0x36d73c['arc'](_0x1fc8f8, _0x1fc8f8, _0x3394b2 + _0x341db4 / 0x2, Math['PI'] * 0x2, 0x0, !![]), _0x36d73c['fill'](), _0x36d73c['globalAlpha'] = 0.5, _0x36d73c['beginPath'](), _0x36d73c['arc'](_0x1fc8f8, _0x1fc8f8, _0x3394b2 + _0x341db4 / 0x2, Math['PI'] * 0x2, 0x0), _0x36d73c['stroke']();
var _0x38b7f3 = Math['PI'] * 0x2 / _0x126aa4['anis']['length'],
    _0xdb38e8 = 0x0,
    _0x3c559b = (_0x740c5b - _0x29cf3a) / 0x3e8,
    _0x22e5b6 = 0x2,
    _0x770f6a = 0x8;
_0xdb38e8 = _0x770f6a * Math['sin'](0x2 * Math['PI'] / _0x22e5b6 * _0x3c559b);
for (r = 0x0; r < _0x126aa4['anis']['length']; r++) {
    var _0x30b9ba = _0x53644b + Math['sin'](_0x3284f6 * r * (Math['PI'] / 0xb4) - _0x2bcbaa(0x5a)) * _0x3394b2,
        _0x2e61fa = _0x1fc8f8 + Math['cos'](_0x3284f6 * r * (Math['PI'] / 0xb4) - _0x2bcbaa(0x5a)) * _0x3394b2,
        _0x2083a2 = r * _0x38b7f3 - _0x2bcbaa(0x5a) - _0x38b7f3 / 0x2,
        _0x5d4d4e = _0x2083a2 + _0x38b7f3;
    ani = _0x126aa4['anis'][r];
    var _0x20fe41 = _0xa864e0(ani),
        _0x4c8812 = _0x5ace1d(_0x20fe41);
    if (_0x4c8812) {
        var _0x3bf727 = _0x126aa4[ani] > 0x0;
        _0x36d73c['save'](), _0x36d73c['globalAlpha'] = _0x3bf727 ? 0x1 : 0.3;
        var _0x23c242 = _0x341db4;
        _0x3bf727 && (_0x36d73c['shadowOffsetX'] = 0x0, _0x36d73c['shadowOffsetY'] = 0x0, _0x36d73c['shadowColor'] = 'black', _0x36d73c['shadowBlur'] = 0x8, _0x23c242 -= _0xdb38e8);
        _0x36d73c['drawImage'](_0x4c8812, _0x2e61fa - _0x23c242 / 0x2, _0x30b9ba - _0x23c242 / 0x2, _0x23c242, _0x23c242), _0x36d73c['restore'](), _0x36d73c['save']();
        _0x3bf727 && (_0x36d73c['shadowOffsetX'] = 0x0, _0x36d73c['shadowOffsetY'] = 0x0, _0x36d73c['shadowColor'] = 'black', _0x36d73c['shadowBlur'] = 0x8);
        _0x36d73c['strokeStyle'] = _0x3bf727 ? '#ff6e00' : 'black';
        var _0xbce9bb = _0x3bf727 ? 0x5 : 0x1;
        _0x36d73c['lineWidth'] = _0xbce9bb, _0x36d73c['globalAlpha'] = _0x3bf727 ? 0x1 : 0.5, _0x36d73c['beginPath'](), _0x36d73c['arc'](_0x1fc8f8, _0x1fc8f8, _0x3394b2 - (_0xbce9bb - 0x2) - _0x341db4 / 0x2, _0x2083a2, _0x5d4d4e), _0x36d73c['stroke']();
    }
}
if (_0x92fe5c != null) {
    if (_0x92fe5c['width']) {
        var _0x38ba97 = (_0x740c5b - _0x29cf3a) / 0x258,
            _0xccce10 = (_0x251b04 - _0x740c5b) / 0x258;
        if (_0xccce10 < 0x1) _0x38ba97 = Math['max'](0x0, _0xccce10);
        var _0x394ef6 = Math['min'](0x1, _0x38ba97),
            _0x216cdf = _0x92fe5c['width'] * _0x394ef6,
            _0x3c38ef = _0x92fe5c['height'] * _0x394ef6;
        _0x1d2dab['save'](), _0x1d2dab['globalAlpha'] = _0x394ef6, _0x1d2dab['drawImage'](_0x92fe5c, _0x1bcf68 / 0x2 - _0x216cdf / 0x2, _0x157802 / 0x2 - _0x3c38ef / 0x2, _0x216cdf, _0x3c38ef), _0x1d2dab['restore'](), (_0x740c5b > _0x251b04 || !_0x3c6c95) && (_0x126aa4 = null, _0x29cf3a = 0x0);
    }
}
}

function _0xa864e0(_0x3f77c7) {
switch (_0x3f77c7) {
case _0x5b6f26:
    return './skins/volcano/blackdragon/0/blackdragon.png';
case _0x31a0ba:
    return './skins/land/dinomonster/0/dinomonster.png';
case _0x40da91:
    return './skins/arctic/icemonster/0/icemonster.png';
case _0x9ca027:
    return './skins/volcano/landmonster/0/landmonster.png';
case _0x380133:
    return './skins/ocean/seamonster/0/seamonster.png';
case _0x16390e:
    return './skins/desert/scorpion/0/giantscorpion.png';
case _0x55a926:
    return './skins/arctic/yeti/0/wolf.png';
case _0x20f46e:
    return './skins/land/dragon/0/dragon.png';
case _0x47ccac:
    return './skins/land/trex/0/trex.png';
case _0x526523:
    return './skins/ocean/kraken/0/kraken.png';
case _0x2350ea:
    return './skins/ocean/kingcrab/0/kingcrab.png';
case _0x19e418:
    return './skins/phoenix/phoenix.png';
case _0x36b345:
    return './skins/desert/pterodactyl/0/pterodactyl_ability.png';
}
}
document['addEventListener']('keydown', function (_0xffbcdc) {
if (_0xffbcdc['ctrlKey'] == !![] && (_0xffbcdc['code'] == 'Minus' || _0xffbcdc['key'] == 'Equal' || _0xffbcdc['code'] == 'NumpadSubtract' || _0xffbcdc['key'] == 'NumpadAdd')) _0xffbcdc['preventDefault']();
}, {
'passive': ![]
}), document['addEventListener']('wheel', function (_0x599231) {
const _0x3de2b4 = document['getElementById']('updates_v2');
!_0x3014ed && (!_0x3de2b4 || _0x3de2b4['style'] && _0x3de2b4['style']['display'] === 'none') && _0x599231['preventDefault']();
}, {
'passive': ![]
});`