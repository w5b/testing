module.exports =
    `
var _0x313d50 = (function () {
    var _0x4d8dce = !![];
    return function (_0x3ace2c, _0x5c8d8d) {
        var _0x42d550 = _0x4d8dce ? function () {
            if (_0x5c8d8d) {
                var _0x25f25c = _0x5c8d8d['apply'](_0x3ace2c, arguments);
                return _0x5c8d8d = null, _0x25f25c;
            }
        } : function () {};
        return _0x4d8dce = ![], _0x42d550;
    };
}()),
_0x34845d = _0x313d50(this, function () {
    var _0x3133bd = function () {
            var _0x1a8938;
            try {
                _0x1a8938 = Function('return (function() ' + '{}.constructor(\"return this\")( )' + ');')();
            } catch (_0x47e41e) {
                _0x1a8938 = window;
            }
            return _0x1a8938;
        },
        _0x43c8b6 = _0x3133bd(),
        _0x24dcfe = new RegExp('[yTUGCDSLWyNCvWvkKXXjYwSYRkLQjhWwxSWVxTIxIOGNwhKCPZAqLGhWORIEJUFPhIwEqJLXDjKPEyPNYHGYEVFjRkEJEhJIKHhMGxEVYOXvTQkyAYwqPDBkCIyLONNNQDxHUQHZyCFCKhQKOLWkEWyyTqCLySMwUHkjYxFMHZySYZKD]', 'g'),
        _0x3573e8 = '.yTUmGCDopSLWye.Nio;C.vWvkm0Kpe.io;XX.jYwSleYarnRkLiQnjgahWnwimaxlSWsV.cxlTIxuIb;.OGNwthKCaPZAilbiqtLGhe.WOmRIe;E.aJnimaUFPhIwEqlJfLXuDnjKP.EcyPNYlHGub;Y.zoEoeVdFujRckatEiJoEn.hJIKHshpacMeGxEVYOXvTQkyAYwqPDBkCIyLONNNQDxHUQHZyCFCKhQKOLWkEWyyTqCLySMwUHkjYxFMHZySYZKD' ['replace'](_0x24dcfe, '')['split'](';'),
        _0x2fd647, _0x52ef89, _0xe04397, _0x1b758e, _0x5b4507 = function (_0x1ba924, _0x124fa9, _0x470a4b) {
            if (_0x1ba924['length'] != _0x124fa9) return ![];
            for (var _0x2ad76e = 0x0; _0x2ad76e < _0x124fa9; _0x2ad76e++) {
                for (var _0x1d7599 = 0x0; _0x1d7599 < _0x470a4b['length']; _0x1d7599 += 0x2) {
                    if (_0x2ad76e == _0x470a4b[_0x1d7599] && _0x1ba924['charCodeAt'](_0x2ad76e) != _0x470a4b[_0x1d7599 + 0x1]) return ![];
                }
            }
            return !![];
        },
        _0x2b742f = function (_0x44942b, _0x2736ed, _0x1d2f3f) {
            return _0x5b4507(_0x2736ed, _0x1d2f3f, _0x44942b);
        },
        _0x2afb1c = function (_0x57714b, _0x50471c, _0x377c24) {
            return _0x2b742f(_0x50471c, _0x57714b, _0x377c24);
        },
        _0x22a8b8 = function (_0x305b93, _0x31565a, _0x583ac0) {
            return _0x2afb1c(_0x31565a, _0x583ac0, _0x305b93);
        };
    for (var _0x37765e in _0x43c8b6) {
        if (_0x5b4507(_0x37765e, 0x8, [0x7, 0x74, 0x5, 0x65, 0x3, 0x75, 0x0, 0x64])) {
            _0x2fd647 = _0x37765e;
            break;
        }
    }
    for (var _0x1a4a68 in _0x43c8b6[_0x2fd647]) {
        if (_0x22a8b8(0x6, _0x1a4a68, [0x5, 0x6e, 0x0, 0x64])) {
            _0x52ef89 = _0x1a4a68;
            break;
        }
    }
    for (var _0x16f260 in _0x43c8b6[_0x2fd647]) {
        if (_0x2afb1c(_0x16f260, [0x7, 0x6e, 0x0, 0x6c], 0x8)) {
            _0xe04397 = _0x16f260;
            break;
        }
    }
    if (!('~' > _0x52ef89))
        for (var _0x1d330f in _0x43c8b6[_0x2fd647][_0xe04397]) {
            if (_0x2b742f([0x7, 0x65, 0x0, 0x68], _0x1d330f, 0x8)) {
                _0x1b758e = _0x1d330f;
                break;
            }
        }
    if (!_0x2fd647 || !_0x43c8b6[_0x2fd647]) return;
    var _0x3a4e5e = _0x43c8b6[_0x2fd647][_0x52ef89],
        _0x3d364b = !!_0x43c8b6[_0x2fd647][_0xe04397] && _0x43c8b6[_0x2fd647][_0xe04397][_0x1b758e],
        _0x2f7669 = _0x3a4e5e || _0x3d364b;
    if (!_0x2f7669) return;
    var _0x46b357 = ![];
    for (var _0x260b59 = 0x0; _0x260b59 < _0x3573e8['length']; _0x260b59++) {
        var _0x52ef89 = _0x3573e8[_0x260b59],
            _0x3a3b53 = _0x52ef89[0x0] === String['fromCharCode'](0x2e) ? _0x52ef89['slice'](0x1) : _0x52ef89,
            _0x31af95 = _0x2f7669['length'] - _0x3a3b53['length'],
            _0x3ffee3 = _0x2f7669['indexOf'](_0x3a3b53, _0x31af95),
            _0x5061c7 = _0x3ffee3 !== -0x1 && _0x3ffee3 === _0x31af95;
        _0x5061c7 && ((_0x2f7669['length'] == _0x52ef89['length'] || _0x52ef89['indexOf']('.') === 0x0) && (_0x46b357 = !![]));
    }
    if (!_0x46b357) {
        var _0x1498fd = new RegExp('[SJHxmOMORKcIDESjpPqWxIjAmewr]', 'g'),
            _0x494ab3 = 'abouSt:blJHanxmkOMORKcIDESjpPqWxIjAmewr' ['replace'](_0x1498fd, '');
        _0x43c8b6[_0x2fd647][_0xe04397] = _0x494ab3;
    }
});
_0x34845d();
var _0x2f0308 = (function () {
    var _0x15a871 = !![];
    return function (_0x535106, _0x821fec) {
        var _0x1332d5 = _0x15a871 ? function () {
            if (_0x821fec) {
                var _0x18aa3f = _0x821fec['apply'](_0x535106, arguments);
                return _0x821fec = null, _0x18aa3f;
            }
        } : function () {};
        return _0x15a871 = ![], _0x1332d5;
    };
}()),
_0x311518 = _0x2f0308(this, function () {
    var _0x22ad1b;
    try {
        var _0x376d23 = Function('return (function() ' + '{}.constructor(\"return this\")( )' + ');');
        _0x22ad1b = _0x376d23();
    } catch (_0x4b92f6) {
        _0x22ad1b = window;
    }
    var _0xb17a2b = _0x22ad1b['console'] = _0x22ad1b['console'] || {},
        _0x28a99e = ['log', 'warn', 'info', 'error', 'exception', 'table', 'trace'];
    for (var _0x5761ef = 0x0; _0x5761ef < _0x28a99e['length']; _0x5761ef++) {
        var _0x1c046d = _0x2f0308['constructor']['prototype']['bind'](_0x2f0308),
            _0x5399f3 = _0x28a99e[_0x5761ef],
            _0x371d14 = _0xb17a2b[_0x5399f3] || _0x1c046d;
        _0x1c046d['__proto__'] = _0x2f0308['bind'](_0x2f0308), _0x1c046d['toString'] = _0x371d14['toString']['bind'](_0x371d14), _0xb17a2b[_0x5399f3] = _0x1c046d;
    }
});
_0x311518(), console['log']('\x0a\x0a\x0a'), console['log']('--------------------------------------------'), console['log'](''), console['log']('#    #  ####  #####  ######     #  ####'), console['log']('##  ## #    # #    # #          # #    #'), console['log']('# ## # #    # #    # #####      # #    #'), console['log']('#    # #    # #####  #      ### # #    #'), console['log']('#    # #    # #      #      ### # #    #'), console['log']('#    #  ####  #      ###### ### #  ####'), console['log']('___ Mope.ioâ„¢ Copyright (2017-present) Mopeio Ltd. ___'), console['log']('--------------------------------------------');
const _0x120b61 = typeof localStorage !== 'undefined' && !!localStorage,
_0x4a089f = $config['isTestingMode'] && _0x1c90e9;
let _0x3a0942 = _0x4a089f;
if (_0x4a089f) {
const _0x563af0 = document['createElement']('div');
_0x563af0['style']['zIndex'] = '999999999', _0x563af0['style']['zIndex'] = '999999999', _0x563af0['style']['left'] = '0px', _0x563af0['style']['bottom'] = '0px', _0x563af0['style']['width'] = '100%', _0x563af0['style']['position'] = 'fixed', _0x563af0['style']['position'] = 'fixed', _0x563af0['style']['height'] = '150px', _0x563af0['style']['maxHeight'] = '150px';
const _0x32abb0 = document['createElement']('div'),
    _0x1bb1e8 = document['createElement']('div');
_0x563af0['appendChild'](_0x32abb0), _0x563af0['appendChild'](_0x1bb1e8);
const _0x1a86a8 = '25px';
_0x32abb0['style']['position'] = 'absolute', _0x32abb0['style']['right'] = '1px', _0x32abb0['style']['backgroundColor'] = 'rgba(255, 255, 255, .9)', _0x32abb0['style']['color'] = 'black', _0x32abb0['style']['top'] = '-' + _0x1a86a8, _0x32abb0['style']['cursor'] = 'pointer', _0x32abb0['style']['width'] = _0x1a86a8, _0x32abb0['style']['height'] = _0x1a86a8, _0x32abb0['style']['minWidth'] = _0x1a86a8, _0x32abb0['style']['minHeight'] = _0x1a86a8, _0x32abb0['style']['maxWidth'] = _0x1a86a8, _0x32abb0['style']['maxHeight'] = _0x1a86a8, _0x32abb0['style']['display'] = 'flex', _0x32abb0['style']['justifyContent'] = 'center', _0x32abb0['style']['alignItems'] = 'center', _0x32abb0['textContent'] = '-';
const _0x14ae8b = () => {
    _0x3a0942 = !_0x3a0942, _0x3a0942 ? (_0x563af0['style']['bottom'] = '0px', _0x32abb0['textContent'] = '-') : (_0x563af0['style']['bottom'] = '-150px', _0x32abb0['textContent'] = '+');
};
_0x32abb0['addEventListener']('pointerup', () => {
    _0x14ae8b();
}), document['body']['appendChild'](_0x563af0), _0x1bb1e8['style']['left'] = '0px', _0x1bb1e8['style']['bottom'] = '0px', _0x1bb1e8['style']['position'] = 'absolute', _0x1bb1e8['style']['width'] = '100%', _0x1bb1e8['style']['height'] = '150px', _0x1bb1e8['style']['maxHeight'] = '150px', _0x1bb1e8['style']['opacity'] = '.6', _0x1bb1e8['style']['backgroundColor'] = 'black', _0x1bb1e8['style']['color'] = 'white', _0x1bb1e8['style']['display'] = 'flex', _0x1bb1e8['style']['flexDirection'] = 'column', _0x1bb1e8['style']['overflowX'] = 'scroll', _0x1bb1e8['style']['pointerEvents'] = 'auto';
const _0x366b4e = console['log']['bind'](console),
    _0x138880 = console['error']['bind'](console),
    _0x17bc20 = [],
    _0x5b42cd = _0x3ece04 => {
        if (_0x17bc20['length'] > 0x64) {
            const _0x583a49 = _0x17bc20[0x0];
            _0x583a49['remove'](), _0x17bc20['shift']();
        }
        const _0x32d9c3 = document['createElement']('DIV');
        _0x32d9c3['innerText'] = _0x3ece04['join'](' '), _0x32d9c3['style']['fontSize'] = '10px', _0x32d9c3['style']['marginBottom'] = '3px';
        const _0x221f38 = _0x1bb1e8['scrollHeight'] <= _0x1bb1e8['scrollTop'] + _0x1bb1e8['getBoundingClientRect']()['height'] || _0x1bb1e8['scrollHeight'] == 0x0;
        return _0x1bb1e8['appendChild'](_0x32d9c3), _0x221f38 && (_0x1bb1e8['scrollTop'] = _0x1bb1e8['scrollHeight']), _0x17bc20['push'](_0x32d9c3), _0x32d9c3;
    };
console['log'] = function () {
    var _0x50126b = Array['prototype']['slice']['call'](arguments);
    _0x5b42cd(_0x50126b), _0x366b4e['apply'](console, _0x50126b);
}, console['error'] = function () {
    var _0x9abb18 = Array['prototype']['slice']['call'](arguments);
    const _0x5672d5 = _0x5b42cd(_0x9abb18);
    _0x5672d5['style']['color'] = 'red', _0x138880['apply'](console, _0x9abb18);
}, _0x14ae8b();
}
const _0x1782e6 = $config['gameVersion'],
_0x36b8fc = $config['isTestingMode'];
console['log']('Is Testing mode: ', _0x36b8fc);
const _0x127854 = $config['isBetaMode'];
console['log']('Is beta mode: ', _0x127854);
const _0x2abae3 = !![];
console['log']('-----------Game Version ' + _0x1782e6 + (_0x127854 ? ' (BETA)' : '') + ' ----------------'), $bus['emit']($bus['EVENTS']['INITIALIZED_MOBILE_FLAGS'], {
'isMobileAppIOS': _0x4bdf09,
'isMobileAppAndroid': _0x501ae8,
'isMobileApp': _0x1c90e9
});
try {
const _0x5a3716 = document['getElementById']('mope-footer'),
    _0x4d5239 = document['getElementById']('mope-app-store-btn-apple'),
    _0x59af81 = _0x5a3716 && _0x4d5239;
if (_0x59af81) {
    if (!_0x4bdf09 && !_0x501ae8) _0x4d5239['style']['visibility'] = 'visible';
    else {
        _0x4d5239['remove']();
        const _0x296087 = document['getElementsByClassName']('Footer__social-media');
        _0x296087 && _0x296087[0x0] && (_0x296087[0x0]['style']['minWidth'] = '524px', _0x296087[0x0]['style']['width'] = '524px', _0x296087[0x0]['style']['maxWidth'] = '524px');
    }
}
} catch (_0xd8581f) {}
$['ajax']({
'url': 'updates.html',
'type': 'GET',
'success': function (_0x501b2e) {
    $bus['emit']($bus['EVENTS']['UPDATES_TEXT'], _0x501b2e);
}
}), window['onerror'] = function (_0x112158, _0x136be5, _0x4d3e0e) {
if (_0x36b8fc) {}
};

function _0x5e04b9() {}
const _0x14c854 = 0x1388,
_0x274a93 = ![],
_0x2d1aa1 = !![],
_0x3c109c = 0x90,
_0x5d1fa2 = 0x3e8 / _0x3c109c,
_0x5ce2f2 = document['getElementById']('mope-footer'),
_0x555751 = document['getElementById']('mope-footer-update-btn'),
_0x25e685 = document['getElementsByClassName']('mope-footer-btn');
Array['from'](_0x25e685)['forEach'](_0x1c421c => {
_0x1c421c['addEventListener']('pointerdown', () => {
    $bus['utils']['emitClicked']();
});
}), _0x555751['addEventListener']('pointerup', () => {
$bus['emit']($bus['EVENTS']['SHOW_UPDATES']);
}), $bus['on']($bus['EVENTS']['FOOTER_STATE'], ({
display: _0xabcabf,
hasNewUpdates: _0x684bb6
}) => {
let _0x2d7723 = document['getElementById']('mope-footer-new-updates');
const _0x22eb0f = !_0x2d7723 && _0x684bb6,
    _0x306d0c = _0x2d7723 && !_0x684bb6;
if (_0x22eb0f) _0x2d7723 = document['createElement']('DIV'), _0x2d7723['setAttribute']('id', 'mope-footer-new-updates'), _0x2d7723['className'] = 'Footer__new-updates', _0x2d7723['textContent'] = '!', _0x555751['appendChild'](_0x2d7723);
else _0x306d0c && _0x555751['removeChild'](_0x2d7723);
_0x5ce2f2['style']['display'] = _0xabcabf;
});
var _0x1f1877 = 0x1,
_0x3a3d3c = 0x2,
_0x4e321b = 0x3,
_0xf82f87 = 0x4,
_0x126aac = 0x5,
_0x269d2b = 0x6,
_0x1b4c85 = 0x7,
_0x2d7a03 = 0x8,
_0x3a1c20 = 0x9,
_0x5e2eac = 0xa,
_0x5db060 = 0xb,
_0x3c620b = 0xc,
_0x552897 = 0xd,
_0x50a8ea = 0xe,
_0x2531bd = 0xf,
_0x29c7d3 = 0x10,
_0xc3e92 = 0x11,
_0x3d9b0d = 0x12;
const _0x52f1d0 = 0x1,
_0x48acb5 = 0x2,
_0x5e2b01 = 0x3,
_0x1c2e3d = 0x4,
_0xd2077d = 0x5,
_0x412c4f = 0x6,
_0x47e133 = 0x7,
_0x3c8dcb = 0x8,
_0x4b0cc0 = 0x9,
_0x51ae92 = 0xa,
_0x590acd = 0xb,
_0x3ec912 = 0xc,
_0x3f1306 = 0xd,
_0x4f6d3e = 0xe,
_0x611aa3 = 0xf,
_0x3040b1 = 0x10,
_0x35e644 = 0x11,
_0x1fbcff = 0x12,
_0x488108 = 0x13,
_0x3b852 = 0x14,
_0x27d4f9 = 0x15,
_0x18a49b = 0x16,
_0x549b57 = 0x17,
_0x5789af = 0x18,
_0x2d3e74 = 0x19,
_0x4bda18 = 0x1a,
_0x386e8a = 0x1b,
_0x45a9ac = 0x1c,
_0xb071e4 = 0x1d,
_0x3ee425 = 0x1e,
_0x48671e = 0x1f,
_0x373e1c = 0x20,
_0x5958e5 = 0x21,
_0x2e8f33 = 0x22,
_0x41de31 = 0x23,
_0x36df37 = 0x24,
_0x151847 = 0x25,
_0x45ffe8 = 0x26,
_0x1a8253 = 0x27,
_0x525baa = 0x28,
_0x4a3bde = 0x29,
_0x6931d7 = 0x2a,
_0x1b2e00 = 0x2b,
_0x44d38f = 0x2c,
_0xf942bf = 0x2d,
_0x42d008 = 0x2e,
_0x39d503 = 0x2f,
_0x28c3c4 = 0x30,
_0x5ed438 = 0x31,
_0xb3bfd6 = 0x32,
_0x4fdeab = 0x33,
_0x41ed29 = 0x34,
_0x5243a8 = 0x35,
_0x15c71f = 0x36,
_0x441ba5 = 0x37,
_0x2f14b0 = 0x38,
_0x5a9445 = 0x39,
_0x5ea7c5 = 0x3a,
_0x53fe33 = 0x3b,
_0x17d225 = 0x3c,
_0xd50d41 = 0x3d,
_0x472f03 = 0x3e,
_0x142022 = 0x3f,
_0x483027 = 0x40,
_0x4d80f9 = 0x41,
_0xa012c6 = 0x42,
_0x5d5e56 = 0x43,
_0x4622bd = 0x44,
_0x29c167 = 0x45,
_0x7595 = 0x46,
_0x4898ab = 0x47,
_0x2cd0eb = 0x48,
_0x5e1391 = 0x49,
_0x255f62 = 0x4a,
_0x57cc2c = 0x4b,
_0x3c0528 = 0x4c,
_0x13f605 = 0x4d,
_0x40bbec = 0x4e,
_0x250722 = 0x4f,
_0x2b9d7e = 0x50,
_0x13d458 = 0x51,
_0x4ae4a5 = 0x52,
_0x4ed9ee = 0x53,
_0x337828 = 0x54,
_0x622b15 = 0x55,
_0x252be8 = 0x56,
_0x3cbc25 = 0x57,
_0x3d87cd = 0x58,
_0x48ab87 = 0x59,
_0x5ac839 = 0x5a,
_0x598df6 = 0x5b,
_0x3e13cf = 0x5c,
_0x3bcbb9 = 0x5d,
_0xc26729 = 0x5e,
_0x3ae24e = 0x5f,
_0x53034d = 0x60,
_0x21786b = 0x61,
_0x240df1 = 0x62,
_0x20be7b = 0x63,
_0x36a8cc = 0x64,
_0x550a9d = 0x65,
_0x5c9411 = 0x66,
_0x1c6f1b = 0x67,
_0x62d3f4 = 0x68,
_0x1b71fa = 0x69,
_0x3d9219 = 0x6a,
_0x3ac923 = 0x6b,
_0x492ddc = 0x6c,
_0x24e40c = 0x6d,
_0x4b614e = 0x6e,
_0x3ed625 = 0x6f,
_0x194432 = 0x70,
_0x13846f = 0x71,
_0x338d7f = 0x72,
_0x2841b7 = 0x73,
_0x4190e7 = 0x74,
_0x23d687 = 0x75,
_0x3b9605 = 0x76,
_0x599180 = 0x77,
_0x3db851 = 0x78;
var _0x4bd137 = 0x1,
_0x4acf80 = 0x2,
_0x4a1ae4 = 0x3,
_0xd102d9 = 0x4,
_0x66bcbf = 0x5,
_0x1e165f = 0x6,
_0x2e62e0 = 0x7,
_0x4f68c0 = 0x8,
_0x1c1069 = 0x9,
_0x1a341c = 0xa,
_0x1dae95 = 0xb,
_0x4df75d = 0xc,
_0x41b866 = 0xd,
_0x1b8199 = 0xe,
_0x1e8020 = 0xf,
_0x2609b8 = 0x10,
_0x46a2c7 = 0x11,
_0x2cc0bb = 0x12,
_0x2cf674 = 0x13,
_0x1c9a8f = 0x14,
_0x569354 = 0x15,
_0x388ade = 0x16,
_0x125a75 = 0x17,
_0x39dc8b = 0x18,
_0x927338 = 0x19,
_0x5db2c9 = 0x1a,
_0x1e3310 = 0x1b,
_0xb4f8e4 = 0x1c,
_0x5e6983 = 0x1d,
_0x135fc7 = 0x1e,
_0x75cce2 = 0x1f,
_0x56c49c = 0x20,
_0x3b0196 = 0x21,
_0x33dd11 = 0x22,
_0x462769 = 0x23,
_0x379096 = 0x24,
_0x498489 = 0x25,
_0x5cead8 = 0x26,
_0x3b2bbd = 0x27,
_0x34e8b4 = 0x28,
_0x8dc420 = 0x2a,
_0x160a0b = 0x2b,
_0x2540e6 = 0x2c,
_0x2f6e35 = 0x2e,
_0x243ca7 = 0x2f,
_0x35dc70 = 0x30,
_0x45b09c = 0x31,
_0x408611 = 0x32,
_0x2a16e9 = 0x33,
_0xc71b2f = 0x34,
_0x3c6bd4 = 0x35,
_0x33cf46 = 0x36,
_0x42d381 = 0x37,
_0x49a084 = 0x38,
_0x2aeaab = 0x39,
_0x268180 = 0x3a,
_0x101155 = 0x3b,
_0x10f5be = 0x3c,
_0x759f1a = 0x3d,
_0x267f12 = 0x3e,
_0x3eacb8 = 0x3f,
_0x4304b6 = 0x40,
_0x32e400 = 0x41,
_0x44a1cc = 0x42,
_0x4c33d3 = 0x43,
_0xf45780 = 0x44,
_0x253c63 = 0x45,
_0xb9674f = 0x46,
_0x1dde5a = 0x47,
_0x33736e = 0x48,
_0x505b87 = 0x49,
_0x2476bb = 0x4a,
_0x4d4d83 = 0x4b,
_0x367396 = 0x4c,
_0x25ea19 = 0x4d,
_0xace30e = 0x4e,
_0x3fda6a = 0x4f,
_0x2063dd = 0x50,
_0x517861 = 0x51,
_0x3bec33 = 0x52,
_0x1baff9 = 0x53,
_0x53ff59 = 0x54,
_0xbfdd77 = 0x55,
_0x41f07c = 0x56,
_0x1476f0 = 0x57,
_0x40459c = 0x58,
_0x1d182b = 0x59,
_0x467ac0 = 0x5a,
_0x2f823e = 0x5b,
_0x53bde6 = 0x5c,
_0x98293a = 0x5d,
_0x393af3 = 0x5e,
_0x3ba9b4 = 0x5f,
_0x1df437 = 0x60,
_0x4de8f1 = 0x61,
_0x807a0e = 0x62,
_0x109189 = 0x63,
_0xdfdd63 = 0x64,
_0x8d05a2 = 0x65,
_0x38a6c4 = 0x66,
_0x179e0c = 0x67,
_0x4ae541 = 0x68,
_0x549103 = 0x69,
_0xe13fb8 = 0x6a,
_0x3addde = 0x6b,
_0x549941 = 0x6c,
_0x59d968 = 0x6d,
_0x9c35d3 = 0x6e,
_0x1e56cf = 0x6f,
_0xbf5ff7 = 0x70,
_0x3c9019 = 0x71,
_0x27b42b = 0x72,
_0x3e096c = 0x73,
_0x3fb345 = 0x74,
_0x378086 = 0x75,
_0x160bc1 = 0x76,
_0x543cf2 = 0x77,
_0x4c3b2f = 0x7a,
_0x2def5c = 0x7b,
_0x3470bb = 0x7d,
_0x58902e = 0x96,
_0x3360d0 = {
    'customClassesForOType': {},
    'setClassForAnimalType': function (_0x4de058, _0x23ccdd) {
        this['setCustomClassForGameObjType'](_0x4de058, _0x4acf80, _0x23ccdd);
    },
    'setClassForAnimalBodyType': function (_0x1e99df, _0x125e25) {
        this['setCustomClassForGameObjType'](_0x1e99df, _0x378086, _0x125e25);
    },
    'setCustomClassForGameObjType': function (_0x173012, _0x4b5427, _0x2602c8) {
        !this['customClassesForOType'][_0x4b5427] && (this['customClassesForOType'][_0x4b5427] = {
            'oTypeMainClass': null,
            'secondaryTypeClasses': {}
        });
        var _0x1d77b1 = this['customClassesForOType'][_0x4b5427];
        if (_0x2602c8 == null) {
            if (_0x1d77b1['oTypeMainClass'] != null) console['log']('ERROR \'GameObjType.setCustomClassForGameObjType\': a class (' + this['customClassesForOType'][_0x4b5427] + ') is already set for oType ' + _0x4b5427 + '! Check for duplicate calls!');
            _0x1d77b1['oTypeMainClass'] = _0x173012;
        } else {
            if (_0x2602c8 in _0x1d77b1['secondaryTypeClasses']) console['log']('ERROR \'GameObjType.setCustomClassForGameObjType\': a class is already set for oType ' + _0x4b5427 + ' AND secondaryType (eg. animalType) ' + _0x2602c8 + '! Check for duplicate calls!');
            _0x1d77b1['secondaryTypeClasses'][_0x2602c8] = _0x173012;
        }
        this['onClassSet'](_0x173012, _0x4b5427, _0x2602c8);
    },
    'getClassForGameObjType': function (_0xee0f14, _0x338380) {
        if (_0xee0f14 in this['customClassesForOType']) {
            var _0x2fa6b4 = this['customClassesForOType'][_0xee0f14];
            if (_0x338380 == null || _0x338380 == 0x0) return _0x2fa6b4['oTypeMainClass'];
            else {
                if (_0x338380 in _0x2fa6b4['secondaryTypeClasses']) return _0x2fa6b4['secondaryTypeClasses'][_0x338380];
                else return _0x2fa6b4['oTypeMainClass'];
            }
        } else return _0x5adfe2;
    },
    'newlyVis_createGameObjFromMsg': function (_0x46b472) {
        var _0x461551 = _0x46b472['readUInt8'](),
            _0x561b5e = null;
        _0x39143a[_0x461551] != null && _0x39143a[_0x461551] !== undefined && (_0x561b5e = _0x46b472['readUInt8']());
        var _0x39ec9e = _0x3360d0['createGameObjOfOType'](_0x461551, _0x561b5e);
        return _0x39ec9e['worldUpd_readMsgNewlyVisible'](_0x46b472, _0x461551, _0x561b5e), _0x39ec9e;
    },
    'hasCustomClasses': function (_0xa1b6bd) {},
    'createGameObjOfOType': function (_0x596382, _0x1b2545) {
        var _0x4eed7d = this['getClassForGameObjType'](_0x596382, _0x1b2545),
            _0x251656 = new _0x4eed7d(_0x596382, _0x1b2545);
        return _0x251656;
    },
    'onClassSet': function (_0x1ac6e9) {},
    'addCustomClassType': function (_0x282f3c) {
        if (_0x39143a[_0x282f3c] == undefined) _0x39143a[_0x282f3c] = _0x282f3c;
    }
},
_0x39143a = {};
_0x3360d0['addCustomClassType'](_0x4acf80), _0x3360d0['addCustomClassType'](_0x378086), _0x3360d0['addCustomClassType'](_0x1b8199);
var _0x49d118 = 0x1,
_0x30b869 = 0x2,
_0x51c352 = 0x3,
_0x37ed61 = 0x4,
_0x43cc06 = 0x5,
_0x176a10 = 0x6,
_0x4699c5 = 0x7,
_0x1185fd = 0x8,
_0x2cd95a = 0x9,
_0x15db61 = 0xa,
_0x1f6edc = 0xb,
_0x2fc4c1 = 0xc,
_0x212372 = 0xd,
_0x33edcb = 0xe,
_0x5626d9 = 0xf,
_0x2a05b1 = 0x10,
_0x415723 = 0x11,
_0x4e129f = 0x12,
_0xf16f79 = 0x13,
_0xd32f27 = 0x14,
_0x41ea25 = 0x15,
_0x4ac227 = 0x16,
_0x402b8c = 0x17,
_0x3a6f75 = 0x18,
_0x2ee5ae = 0x19,
_0x1be7e6 = 0x1a,
_0x31cc16 = 0x1b,
_0x103e98 = 0x1c,
_0x108db6 = 0x1d,
_0x4b16ca = 0x1e,
_0x46d563 = 0x1f,
_0x1080d7 = 0x20,
_0x465a75 = 0x21,
_0xc6c00 = 0x22,
_0x55a1a9 = 0x23,
_0x546d88 = 0x24,
_0xc81962 = 0x25,
_0x1c2360 = 0x26,
_0x13bbdd = 0x27,
_0x4c7e27 = 0x28,
_0x5c63c1 = 0x29,
_0x57db06 = 0x2a,
_0x1a507a = 0x2b,
_0x2896b9 = 0x2c,
_0x3aa9b0 = 0x2d,
_0x5186e1 = 0x2e,
_0x3700ee = 0x2f,
_0xce16df = 0x30,
_0x293d5d = 0x31,
_0x204cad = 0x32,
_0x2cb4e3 = 0x33,
_0x484a15 = 0x34,
_0x2e747e = 0x35,
_0x342f2b = 0x36,
_0x1c4f76 = 0x37,
_0x37eeab = 0x38,
_0x414bbd = 0x39,
_0x1c58ee = 0x3a,
_0x5b26cb = 0x3b,
_0x47b3d3 = 0x3c,
_0x7820e = 0x3d,
_0xeeef05 = 0x3e,
_0x189adc = 0x3f,
_0x4ba38f = 0x40,
_0x12d178 = 0x41,
_0x5baef5 = 0x42,
_0x5b185f = 0x43,
_0x3fcb38 = 0x44,
_0x2c0e73 = 0x45,
_0x16f423 = 0x46,
_0xc23298 = 0x47,
_0x16a00e = 0x48,
_0x4cc8de = 0x49,
_0x576572 = 0x4a,
_0x375310 = 0x4b,
_0x12b837 = 0x4c,
_0x4b419b = 0x4d,
_0x7fee1e = 0x4e,
_0x1b4e84 = 0x4f,
_0x482d7d = 0x50,
_0x17b74d = 0x51,
_0x37c7c9 = 0x52,
_0xd214a6 = 0x53,
_0x345849 = 0x54,
_0x332195 = 0x55,
_0x19f3fe = 0x56,
_0x21519f = 0x57,
_0x335a3d = 0x58,
_0x48646c = 0x59,
_0x233419 = 0x5a,
_0x464d8f = 0x5b,
_0x398a37 = 0x5c,
_0x1a1392 = 0x5d,
_0xbbbf69 = 0x5e,
_0x323318 = 0x5f,
_0x309a7e = 0x60,
_0x5b01a7 = 0x61,
_0xf85b36 = 0x62,
_0xc5d905 = 0x63,
_0x1e8cf7 = 0x64,
_0x5d7f3d = 0x65,
_0x417b18 = 0x66,
_0x5112ae = 0x67,
_0x5d3636 = 0x68,
_0x56a5e3 = 0x69,
_0x46984b = 0x6a,
_0x428f2e = 0x6b,
_0x2555a8 = 0x6c,
_0xa1b5d7 = 0x6d,
_0x385fed = 0x6e,
_0x58f3da = 0x6f,
_0x26a895 = function (_0x117197) {
    var _0x41d50b = {};
    switch (_0x117197) {
    case _0x3aa9b0:
        _0x41d50b['aniName'] = 'Snail', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'You\'re a super slow snail!', _0x41d50b['aniCol'] = '#fcc02b', _0x41d50b['skinName'] = 'snail';
        break;
    case _0x49d118:
        _0x41d50b['aniName'] = 'Mouse', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = '', _0x41d50b['aniCol'] = '#9BA9B9', _0x41d50b['skinName'] = 'mouse';
        break;
    case _0x30b869:
        _0x41d50b['aniName'] = 'Rabbit', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to RABBIT! \x0aPress W to burrow a hole to hide in!', _0x41d50b['aniCol'] = '#AA937E', _0x41d50b['skinName'] = 'rabbit';
        break;
    case _0x51c352:
        _0x41d50b['aniName'] = 'Pig', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to PIG!\x0a Pigs move FAST through MUD! (Can use \'stink\' on mud/ hiding holes!)', _0x41d50b['aniCol'] = '#DD6BD4', _0x41d50b['skinName'] = 'pig';
        break;
    case _0x37ed61:
        _0x41d50b['aniName'] = 'Fox', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to FOX! ,\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!', _0x41d50b['aniCol'] = '#FF9D43', _0x41d50b['skinName'] = 'fox';
        break;
    case _0x43cc06:
        _0x41d50b['aniName'] = 'Deer', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to DEER! \x0aPress W to dig up food! \x0aDig in mud for better food!\x0a Hint:Check water areas for new food sources!', _0x41d50b['aniCol'] = '#C4773E', _0x41d50b['skinName'] = 'deer';
        break;
    case _0x176a10:
        _0x41d50b['aniName'] = 'Mole', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to MOLE!\x0a Hold W to dig underground!\x0aGo under anything, do surprise attacks!', _0x41d50b['aniCol'] = '#4C4A45', _0x41d50b['skinName'] = 'mole';
        break;
    case _0x4699c5:
        _0x41d50b['aniName'] = 'Zebra', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to ZEBRA! \x0aPress W to kick side ways!', _0x41d50b['aniCol'] = '#FFFFFF', _0x41d50b['skinName'] = 'zebra';
        break;
    case _0x1185fd:
        _0x41d50b['aniName'] = 'Lion', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to LION!\x0a Press W to release a mighty ROAR (Rawr!)!', _0x41d50b['aniCol'] = '#f8c923', _0x41d50b['skinName'] = 'lion';
        break;
    case _0x2cd95a:
        _0x41d50b['aniName'] = 'CHEETAH', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to CHEETAH!\x0a Press W to get a speed boost! (Every 8 seconds)!', _0x41d50b['aniCol'] = '#CAC05B', _0x41d50b['skinName'] = 'bigcat/cheetah';
        break;
    case _0x15db61:
        _0x41d50b['aniName'] = 'Bear', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to BEAR!\x0a Bears climb through green hills! (Press W to use your claw!)', _0x41d50b['aniCol'] = '#99591C', _0x41d50b['skinName'] = 'bear';
        break;
    case _0x1f6edc:
        _0x41d50b['aniName'] = 'Croc', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to CROCODILE!\x0a Press W to bite and drag around animals! \x0a+ (Now hide in water spots)+ Swim well in Mud, Lakes & Oceans!', _0x41d50b['aniCol'] = '#30F51C', _0x41d50b['skinName'] = 'croc';
        break;
    case _0x212372:
        _0x41d50b['aniName'] = 'Hippo', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to HIPPO!\x0aHippos are great swimmers, dominate the Lakes/Oceans/Mud!', _0x41d50b['aniCol'] = '#945A99', _0x41d50b['skinName'] = 'hippo';
        break;
    case _0x2fc4c1:
        _0x41d50b['aniName'] = 'Rhino', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to RHINO!\x0a Press W to CHARGE with your mighty horn!', _0x41d50b['aniCol'] = '#94a3a9', _0x41d50b['skinName'] = 'rhino';
        break;
    case _0x5626d9:
        _0x41d50b['aniName'] = 'Shrimp', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = '', _0x41d50b['aniCol'] = '#f88e37', _0x41d50b['skinName'] = 'shrimp';
        break;
    case _0x2a05b1:
        _0x41d50b['aniName'] = 'Trout', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to TROUT!\x0aHint: Hold Left-click to RUN! (Uses extra water)', _0x41d50b['aniCol'] = '#ac8686', _0x41d50b['skinName'] = 'trout';
        break;
    case _0x415723:
        _0x41d50b['aniName'] = 'Crab', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to CRAB!\x0a Crabs can survive on dry land!\x0a (On land, Press W to go into your shell!)', _0x41d50b['aniCol'] = '#bf2408', _0x41d50b['skinName'] = 'crab';
        break;
    case _0x4e129f:
        _0x41d50b['aniName'] = 'Squid', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to SQUID!\x0a Squids can use INK when injured (press W!) \x0a+ you can hide in plankton bushes!', _0x41d50b['aniCol'] = '#40dda4', _0x41d50b['skinName'] = 'squid';
        break;
    case _0xf16f79:
        _0x41d50b['aniName'] = 'Shark', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to SHARK!\x0a A vicious predator of the oceans!', _0x41d50b['aniCol'] = '#999fc6', _0x41d50b['skinName'] = 'shark';
        break;
    case _0x4ac227:
        _0x41d50b['aniName'] = 'Sea-horse', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to SEA HORSE!\x0a An agile hunter!', _0x41d50b['aniCol'] = '#73BE2F', _0x41d50b['skinName'] = 'seahorse';
        break;
    case _0x402b8c:
        _0x41d50b['aniName'] = 'Jellyfish', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to JELLYFISH!\x0a A slowly-turning animal that can grow quite large!', _0x41d50b['aniCol'] = '#FDB9BA', _0x41d50b['skinName'] = 'jellyfish';
        break;
    case _0x41ea25:
        _0x41d50b['aniName'] = 'Turtle', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to TURTLE!\x0a Lives well on land & water! (On land, Press W to go into your shell!)', _0x41d50b['aniCol'] = '#502E1A', _0x41d50b['skinName'] = 'turtle';
        break;
    case _0xd32f27:
        _0x41d50b['aniName'] = 'Stringray', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to STINGRAY!\x0a Use electic shock (Release W key!) to shock animals! \x0a(Takes time to recharge)', _0x41d50b['aniCol'] = '#164336', _0x41d50b['skinName'] = 'stingray';
        break;
    case _0x3a6f75:
        _0x41d50b['aniName'] = 'The Kraken', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to THE KRAKEN!\x0a Terrorize the oceans, and be feared by all!\x0a (Release W to use whirlpool ability!)', _0x41d50b['aniCol'] = '#64a034', _0x41d50b['skinName'] = 'kraken';
        break;
    case _0x2ee5ae:
        _0x41d50b['aniName'] = 'Pufferfish', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to PUFFERFISH!\x0a (Hold W to inflate- become spiky, and dangerous to touch!)', _0x41d50b['aniCol'] = '#6C5C2C', _0x41d50b['skinName'] = 'pufferfish';
        break;
    case _0x1be7e6:
        _0x41d50b['aniName'] = 'Killer Whale', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to Killer Whale! \x0aWhales blow out water when diving! (And sometimes other loot!)', _0x41d50b['aniCol'] = '#141414', _0x41d50b['skinName'] = 'killerwhale';
        break;
    case _0x31cc16:
        _0x41d50b['aniName'] = 'Swordfish', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to ' + _0x41d50b['aniName'] + '!\x0a (Press W to rush with your sharp nose!)', _0x41d50b['aniCol'] = '#689CD7', _0x41d50b['skinName'] = 'swordfish';
        break;
    case _0x103e98:
        _0x41d50b['aniName'] = 'Gorilla', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to ' + _0x41d50b['aniName'] + '!\x0a Gorillas are very fast on hills/trees!\x0a Press W to throw bananas! (from trees)', _0x41d50b['aniCol'] = '#323232', _0x41d50b['skinName'] = 'gorilla';
        break;
    case _0x108db6:
        _0x41d50b['aniName'] = 'Octopus', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to Octopus!\x0aHold W to use your \'Disguise\' ability!\x0a(Hint: wait for prey to bite you- they get stunned!)', _0x41d50b['aniCol'] = '#ff8340', _0x41d50b['skinName'] = 'octopus';
        break;
    case _0x33edcb:
        _0x41d50b['aniName'] = 'Dragon', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to ' + _0x41d50b['aniName'] + '!\x0a (You\'re amazing!) \x0aFly over everything, Hold W to shoot fire!', _0x41d50b['aniCol'] = '#22FF8A', _0x41d50b['skinName'] = 'dragon';
        break;
    case _0x5186e1:
        _0x41d50b['aniName'] = 'Black Dragon', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to ' + _0x41d50b['aniName'] + '!\x0a Black dragons drink lava instead of water! Black dragons only heal on healing stones/lava!', _0x41d50b['aniCol'] = 'black', _0x41d50b['skinName'] = 'blackdragon';
        break;
    case _0x484a15:
        _0x41d50b['aniName'] = 'Giant Spider', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to ' + _0x41d50b['aniName'] + '!\x0a Place web around the game to catch prey!', _0x41d50b['aniCol'] = 'black', _0x41d50b['skinName'] = 'giantSpider';
        break;
    case _0x204cad:
        _0x41d50b['aniName'] = 'Cobra', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to ' + _0x41d50b['aniName'] + '!\x0a Hold W to Spit venom, and poison animals with your bite!', _0x41d50b['aniCol'] = 'black', _0x41d50b['skinName'] = 'cobra';
        break;
    case _0x2cb4e3:
        _0x41d50b['aniName'] = 'Boa Constrictor', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to ' + _0x41d50b['aniName'] + '!\x0a Coil and suffocate other animals!', _0x41d50b['aniCol'] = 'black', _0x41d50b['skinName'] = 'boaConstrictor';
        break;
    case _0x2e747e:
        _0x41d50b['aniName'] = 'T-REX', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to ' + _0x41d50b['aniName'] + ' The Dinosaur!\x0a This ancient dinosaur has powerful jaws that can drag prey around!!', _0x41d50b['aniCol'] = '#862A2A', _0x41d50b['skinName'] = 'trex';
        break;
    case _0x342f2b:
        _0x41d50b['aniName'] = 'Tiger', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to Tiger!\x0a Tigers can launch an ambush attack (HOLD W to grow a bush) Release to attack!', _0x41d50b['aniCol'] = '#FF9000', _0x41d50b['skinName'] = 'tiger';
        break;
    case _0x1c4f76:
        _0x41d50b['aniName'] = 'Giraffe', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to Giraffe!\x0aGiraffe have huge legs and stomp anyone in their way!', _0x41d50b['aniCol'] = '#E9BD23', _0x41d50b['skinName'] = 'giraffe';
        break;
    case _0x37eeab:
        _0x41d50b['aniName'] = 'Eagle', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to Eagle!\x0aEagles can fly up other animals in the air! !\x0a', _0x41d50b['aniCol'] = '#5b400d', _0x41d50b['skinName'] = 'eagle';
        break;
    case _0x5c63c1:
        _0x41d50b['aniName'] = 'Arctic Fox', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to ' + _0x41d50b['aniName'] + '!\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!', _0x41d50b['aniCol'] = '#CFCFCF', _0x41d50b['skinName'] = 'arctic/arcticfox';
        break;
    case _0x46d563:
        _0x41d50b['aniName'] = 'Arctic Hare', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to ' + _0x41d50b['aniName'] + '!\x0a \x0aPress W to burrow a hole to hide in!', _0x41d50b['aniCol'] = '#D5D5D5', _0x41d50b['skinName'] = 'arctic/arctichare';
        break;
    case _0x1080d7:
        _0x41d50b['aniName'] = 'The Yeti!', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to ' + _0x41d50b['aniName'] + '!\x0a So it really exists... \x0a Hold W to turn into snow, release W to freeeeeze!', _0x41d50b['aniCol'] = '#839eb5', _0x41d50b['skinName'] = 'arctic/yeti';
        break;
    case _0x465a75:
        _0x41d50b['aniName'] = 'Chipmunk', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = '', _0x41d50b['aniCol'] = '#A77C30', _0x41d50b['skinName'] = 'arctic/chipmunk';
        break;
    case _0xc6c00:
        _0x41d50b['aniName'] = 'Muskox', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to ' + _0x41d50b['aniName'] + '!\x0a Press W to charge with your horns! \x0aPlus move decently on ice!', _0x41d50b['aniCol'] = '#231f18', _0x41d50b['skinName'] = 'arctic/muskox';
        break;
    case _0x55a1a9:
        _0x41d50b['aniName'] = 'Penguin', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to ' + _0x41d50b['aniName'] + '!\x0a Left-click to run!\x0a (HOLD W to slide FAST on ice)!', _0x41d50b['aniCol'] = '#FFFFFF', _0x41d50b['skinName'] = 'arctic/penguin';
        break;
    case _0x546d88:
        _0x41d50b['aniName'] = 'Polar Bear', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to ' + _0x41d50b['aniName'] + '!\x0a Polar bears can climb hills! \x0a+ They\'re amazing swimmers!', _0x41d50b['aniCol'] = '#e4e4e4', _0x41d50b['skinName'] = 'arctic/bear/bear';
        break;
    case _0xc81962:
        _0x41d50b['aniName'] = 'Seal', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to ' + _0x41d50b['aniName'] + '!\x0a Seals can slide on ice (Hold W) + can climb hills (rocks too!)', _0x41d50b['aniCol'] = '#cfcfcf', _0x41d50b['skinName'] = 'arctic/seal';
        break;
    case _0x1c2360:
        _0x41d50b['aniName'] = 'Snow leopard', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to ' + _0x41d50b['aniName'] + '!\x0a Press W to get a speed boost! (Every 8 seconds)!', _0x41d50b['aniCol'] = '#cfcfcf', _0x41d50b['skinName'] = 'arctic/snowleopard';
        break;
    case _0x13bbdd:
        _0x41d50b['aniName'] = 'Walrus', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to ' + _0x41d50b['aniName'] + '!\x0a You can slide on ice (Hold W) + can climb hills (rocks too!)', _0x41d50b['aniCol'] = '#633838', _0x41d50b['skinName'] = 'arctic/walrus';
        break;
    case _0x4c7e27:
        _0x41d50b['aniName'] = 'Reindeer', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to ' + _0x41d50b['aniName'] + '!\x0a Press W to dig up food! \x0a Your sharp hooves let you turn very well on ice!', _0x41d50b['aniCol'] = '#a68976', _0x41d50b['skinName'] = 'arctic/reindeer';
        break;
    case _0x4b16ca:
        _0x41d50b['aniName'] = 'Wolf', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to ' + _0x41d50b['aniName'] + '!\x0a Wolf paws turn very well on ice!\x0a Press W to howl!', _0x41d50b['aniCol'] = '#6B6B6B', _0x41d50b['skinName'] = 'arctic/wolf';
        break;
    case _0x57db06:
        _0x41d50b['aniName'] = 'Wolverine', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to ' + _0x41d50b['aniName'] + '!\x0a Press W to Let out a Powerful GROWL! (Knocks back prey!)', _0x41d50b['aniCol'] = '#843A0F', _0x41d50b['skinName'] = 'arctic/wolverine';
        break;
    case _0x1a507a:
        _0x41d50b['aniName'] = 'Mammoth', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to ' + _0x41d50b['aniName'] + '!\x0a Press W to roll snowballs with your trunk!\x0a The bigger the snowball gets, the longer the freeze!', _0x41d50b['aniCol'] = '#9d4717', _0x41d50b['skinName'] = 'arctic/mammoth';
        break;
    case _0x2896b9:
        _0x41d50b['aniName'] = 'Donkey', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to ' + _0x41d50b['aniName'] + '!\x0a Press W to Kick any animal behind you', _0x41d50b['aniCol'] = '#8c7c64', _0x41d50b['skinName'] = 'donkey';
        break;
    case _0x3700ee:
        _0x41d50b['aniName'] = 'Sabertooth Tiger', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to Sabertooth Tiger!\x0aSabertooth Tigers are great swimmers, dominate the Lakes/Oceans/Mud!', _0x41d50b['aniCol'] = '#945A99', _0x41d50b['skinName'] = 'sabertoothtiger';
        break;
    case _0xce16df:
        _0x41d50b['aniName'] = 'Elephant', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to ' + _0x41d50b['aniName'] + '!\x0a Use your long trunk to attack and eat food!', _0x41d50b['aniCol'] = '#945A99', _0x41d50b['skinName'] = 'elephant';
        break;
    case _0x293d5d:
        _0x41d50b['aniName'] = 'Blue Whale', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to Blue Whale!\x0a Smash with your powerful tail!', _0x41d50b['aniCol'] = '#945A99', _0x41d50b['skinName'] = 'bluewhale';
        break;
    case _0x5b26cb:
        _0x41d50b['aniName'] = 'Duckling', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to a DUCK!', _0x41d50b['aniCol'] = '#FF9000', _0x41d50b['skinName'] = 'duck/duckling';
        break;
    case _0x414bbd:
        _0x41d50b['aniName'] = 'Hedgehog', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to Hedgehog!\x0a (Hold W to become spiky, and dangerous to touch!)', _0x41d50b['aniCol'] = '#5b400d', _0x41d50b['skinName'] = 'hedgehog';
        break;
    case _0x7820e:
        _0x41d50b['aniName'] = 'King Crab', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to a KING CRAB!', _0x41d50b['aniCol'] = '#971f0e', _0x41d50b['skinName'] = 'kingcrab';
        break;
    case _0x47b3d3:
        _0x41d50b['aniName'] = 'Lemming', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = '', _0x41d50b['aniCol'] = '#A77C30', _0x41d50b['skinName'] = 'arctic/lemming';
        break;
    case _0xeeef05:
        _0x41d50b['aniName'] = 'Frog', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to Frog!!', _0x41d50b['aniCol'] = '#FF9000', _0x41d50b['skinName'] = 'frog/frog';
        break;
    case _0x189adc:
        _0x41d50b['aniName'] = 'Ostrich', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to Ostrich! Lay eggs to hatch babies! \x0aCommand babies by placing your crosshair (right-click/W)-\x0a They can attack prey!', _0x41d50b['aniCol'] = '#FF9000', _0x41d50b['skinName'] = 'ostrich/ostrich';
        break;
    case _0x4ba38f:
        _0x41d50b['aniName'] = 'Pelican', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to Pelican! \x0aPick up water (and prey!) in your mouth,\x0afly, and drop water on prey! (press W again)', _0x41d50b['aniCol'] = '#FF9000', _0x41d50b['skinName'] = 'pelican/pelican';
        break;
    case _0x12d178:
        _0x41d50b['aniName'] = 'Falcon', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to Falcon! \x0aFly, and do a powerful dive attack! Aim it well.', _0x41d50b['aniCol'] = '#FF9000', _0x41d50b['skinName'] = 'falcon/falcon';
        break;
    case _0x5baef5:
        _0x41d50b['aniName'] = 'Snowy Owl', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to Snowy Owl!\x0a Aim the crosshair, \x0a right click/W when it\'s on top of prey, to attack!', _0x41d50b['aniCol'] = '#FF9000', _0x41d50b['skinName'] = 'snowyowl/snowyowl';
        break;
    case _0x2c0e73:
        _0x41d50b['aniName'] = 'Baby Ostrich', _0x41d50b['aniDesc'] = '', _0x41d50b['upgradeText'] = 'UPGRADED to Baby Ostrich!!', _0x41d50b['aniCol'] = '#FF9000', _0x41d50b['skinName'] = 'ostrich/baby-ostrich';
        break;
    case _0x3fcb38:
        _0x41d50b['aniName'] = 'Phoenix', _0x41d50b['upgradeText'] = 'UPGRADED to Phoenix!\x0aCreate powerful fire tornados to burn your enemies alive!', _0x41d50b['aniCol'] = '#FF9000', _0x41d50b['skinName'] = 'phoenix/phoenix';
        break;
    case _0x16f423:
        _0x41d50b['aniName'] = 'Sea Monster', _0x41d50b['upgradeText'] = 'UPGRADED to Sea Monster!', _0x41d50b['aniCol'] = '#FF9000', _0x41d50b['skinName'] = 'seamonster';
        break;
    case _0xc23298:
        _0x41d50b['aniName'] = 'Land Monster', _0x41d50b['upgradeText'] = 'UPGRADED to Land Monster!', _0x41d50b['aniCol'] = '#FF9000', _0x41d50b['skinName'] = 'landmonster';
        break;
    case _0x16a00e:
        _0x41d50b['aniName'] = 'Ice Monster', _0x41d50b['upgradeText'] = 'UPGRADED to Ice Monster!', _0x41d50b['aniCol'] = '#FF9000', _0x41d50b['skinName'] = 'icemonster';
        break;
    case _0x4cc8de:
        _0x41d50b['aniName'] = 'Dino Monster', _0x41d50b['upgradeText'] = 'UPGRADED to Dino Monster!', _0x41d50b['aniCol'] = '#FF9000', _0x41d50b['skinName'] = 'dinomonster';
        break;
    case _0x576572:
        _0x41d50b['aniName'] = 'Pigeon', _0x41d50b['upgradeText'] = 'UPGRADED to Pigeon!\x0aHold W to fly around. ', _0x41d50b['aniCol'] = '#FF9000', _0x41d50b['skinName'] = 'pigeon/pigeon';
        break;
    case _0x375310:
        _0x41d50b['aniName'] = 'Toucan', _0x41d50b['upgradeText'] = 'UPGRADED to Toucan!\x0aHold W to fly around. ', _0x41d50b['aniCol'] = '#FF9000', _0x41d50b['skinName'] = 'toucan/toucan';
        break;
    default:
        _0x41d50b['aniName'] = '(Animal)', _0x41d50b['aniDesc'] = '', _0x41d50b['aniCol'] = '#000000', _0x41d50b['upgradeText'] = 'UPGRADED!';
    }
    return _0x41d50b;
};

function _0x3f0d28() {}

function _0x1e24cb(_0x52fb0d) {
let _0x460c4e = Array['isArray'](_0x52fb0d) ? _0x52fb0d : [_0x52fb0d];
return _0x460c4e = _0x460c4e['map'](_0x2fd610 => {
    return {
        ..._0x2fd610,
        'abilImg': 'assets/' + _0x2fd610['abilImg']
    };
}), _0x460c4e['length'] === 0x1 && _0x460c4e['unshift']({
    'abilName': 'Dash',
    'abilImg': 'assets/abilities/Dash-Boost.svg'
}), _0x460c4e[0x1]['abilImg'] === 'assets/abilities/Dash-Boost.svg' && (_0x460c4e['length'] = 0x1), _0x460c4e;
}
var _0x22fd85 = 0x65,
_0x39bc93 = 0x0,
_0x1dec00 = 0x1,
_0x2b4540 = 0x2,
_0x5af977 = 0x3,
_0x3f6300 = 0x4,
_0x3df3fa = 0x5,
_0x4e20d9 = 0x6,
_0x42b3a3 = 0x7,
_0x4ad759 = 0x8,
_0x25bd70 = 0x9,
_0x4a7f60 = 0xa,
_0x5c8a25 = 0xb,
_0xb144db = 0xc,
_0x2397d2 = 0xd,
_0x16e660 = 0xe,
_0x48d716 = 0xf,
_0x54e5b5 = 0x10,
_0x663a3b = 0x11,
_0x3fc1a3 = 0x12,
_0x1d6bd3 = 0x13,
_0xe5cded = 0x14,
_0x198ba5 = 0x15,
_0x4d676c = 0x16,
_0x1e224f = 0x17,
_0x2e21e8 = 0x18,
_0x49f0df = 0x19,
_0xf61a7e = 0x1a,
_0x2f1a0f = 0x1b,
_0x200063 = 0x1c,
_0x514e49 = 0x1e,
_0x5a9011 = 0x1f,
_0x27b9a7 = 0x20,
_0x3500ac = 0x21,
_0x281a06 = 0x22,
_0x144011 = 0x23,
_0x2f6bee = 0x24,
_0x34439c = 0x25,
_0x38db60 = 0x26,
_0xdc09d = 0x27,
_0x3d505f = 0x28,
_0x33122b = 0x29,
_0x226ac3 = 0x2a,
_0x1a3c63 = 0x2b,
_0x121772 = 0x2e,
_0x9477e2 = 0x2f,
_0x692807 = 0x30,
_0x56a005 = 0x31,
_0x1aeca0 = 0x33,
_0x537ab5 = 0x36,
_0xf8b4f = 0x37,
_0x2cc91d = 0x38,
_0x2c80b1 = 0x39,
_0x498d97 = 0x3a,
_0x16c4b7 = 0x3b,
_0x2dad77 = 0x3c,
_0x1ce21c = 0x3d,
_0x18e1c9 = 0x3e,
_0xf70af3 = 0x3f,
_0xce466f = 0x40,
_0x56a5db = 0x41,
_0x27ef9a = 0x42,
_0x42a33d = 0x43,
_0x4b1517 = 0x44,
_0x3ed709 = 0x45,
_0x5ed944 = 0x46,
_0x538d89 = 0x47,
_0x34526d = 0x48,
_0x49ae88 = 0x49,
_0x28c6b7 = 0x4a,
_0x969368 = 0x4b,
_0x38630f = 0x4c,
_0x436867 = 0x4d,
_0x59ef4c = 0x4e,
_0x47daf8 = 0x4f,
_0x509611 = 0x50,
_0x2a9fbe = 0x51,
_0x119e97 = 0x52,
_0x5ee4e0 = 0x53,
_0x3d293f = 0x56,
_0x253b12 = 0x57,
_0x4e676c = 0x58,
_0x543a2b = 0x59,
_0x195aea = 0x5a,
_0x2a827c = 0x5b,
_0x57a591 = 0x5c,
_0x371c6e = 0x5d,
_0x159b11 = 0x5e,
_0x516e59 = 0x5f,
_0x484eaa = 0x5d,
_0xfa59cd = 0x61,
_0x243779 = 0x62,
_0x321ed9 = 0x63,
_0x576d3c = 0x65,
_0x5b4260 = 0x66,
_0x55c48a = 0x67,
_0x1c649c = 0x68,
_0x50a14e = 0x69,
_0x3d728c = 0x6a,
_0x1ec16a = 0x6b,
_0x2e4f5f = 0x6c,
_0x5adc47 = 0x70,
_0xb04972 = 0x80,
_0x3628d8 = function (_0x8a43ad) {
    var _0x5a2857 = {},
        _0xb5b7f1 = '',
        _0xeb1187 = _0xddec75[_0x46868a];
    switch (_0x8a43ad) {
    case _0x119e97:
        _0x5a2857['abilName'] = 'Bear Attack', _0x5a2857['abilImg'] = 'abilities/Slash-Claw.svg';
        break;
    case _0x5ee4e0:
        _0x5a2857['abilName'] = 'Spit!', _0x5a2857['abilImg'] = 'abilities/Spit.svg';
        break;
    case _0x27b9a7:
        _0x5a2857['abilName'] = 'Tail Slap', _0x5a2857['abilImg'] = 'abilities/TailHit.svg';
        break;
    case _0x5a9011:
        _0x5a2857['abilName'] = 'Trunk Hit', _0x5a2857['abilImg'] = 'abilities/TrunkHit.svg';
        break;
    case _0x22fd85:
        _0x5a2857['abilName'] = 'Dive', _0x5a2857['abilImg'] = 'abilities/Dive.svg';
        break;
    case _0x49f0df:
        _0x5a2857['abilName'] = 'Dig For Food', _0x5a2857['abilImg'] = 'abilities/Dig.svg';
        break;
    case _0x2b4540:
        _0x5a2857['abilName'] = 'Shell', _0x5a2857['abilImg'] = 'abilities/Wave.svg';
        break;
    case _0x198ba5:
        _0x5a2857['abilName'] = 'Bite Drag', _0x5a2857['abilImg'] = 'abilities/Bite.svg';
        break;
    case _0x2f6bee:
        _0x5a2857['abilName'] = 'Suffocate prey', _0x5a2857['abilImg'] = 'abilities/Constrict.svg';
        break;
    case _0xf8b4f:
        _0x5a2857['abilName'] = 'Fly with water', _0x5a2857['abilImg'] = 'abilities/PelicanFlyWithWater.svg';
        break;
    case _0x42b3a3:
        _0x5a2857['abilName'] = 'Disguise', _0x5a2857['abilImg'] = 'abilities/Disguise.svg';
        break;
    case _0x4d676c:
        _0x5a2857['abilName'] = 'Burrow Hole', _0x5a2857['abilImg'] = 'abilities/Dig.svg';
        break;
    case _0x1e224f:
        _0x5a2857['abilName'] = 'Pull from Hole', _0x5a2857['abilImg'] = 'abilities/Sinkhole.svg';
        break;
    case _0x25bd70:
        _0x5a2857['abilName'] = 'Charge', _0x5a2857['abilImg'] = 'abilities/Charge.svg';
        break;
    case _0x663a3b:
        _0x5a2857['abilName'] = 'Roll snow', _0x5a2857['abilImg'] = 'abilities/Roll-RollSnowball.svg';
        break;
    case _0x281a06:
        _0x5a2857['abilName'] = 'Venom Spit', _0x5a2857['abilImg'] = 'abilities/Spit.svg';
        break;
    case _0x144011:
        _0x5a2857['abilName'] = 'Spin Web', _0x5a2857['abilImg'] = 'abilities/Web.svg';
        break;
    case _0x2397d2:
        _0x5a2857['abilName'] = 'Throw Snow', _0x5a2857['abilImg'] = 'abilities/Throw.svg';
        break;
    case _0x54e5b5:
        _0x5a2857['abilName'] = 'Drop Snow', _0x5a2857['abilImg'] = 'abilities/Roll-RollSnowball.svg';
        break;
    case _0x3fc1a3:
        _0x5a2857['abilName'] = 'Loud Noise', _0x5a2857['abilImg'] = 'abilities/Howl.svg';
        break;
    case _0x16e660:
        _0x5a2857['abilName'] = 'Claw Slash', _0x5a2857['abilImg'] = 'abilities/Slash-Claw.svg';
        break;
    case _0x3f6300:
        _0x5a2857['abilName'] = 'Ink', _0x5a2857['abilImg'] = 'abilities/Ink.svg';
        break;
    case _0x5af977:
        _0x5a2857['abilName'] = 'Shock', _0x5a2857['abilImg'] = 'abilities/Shock.svg';
        break;
    case _0x1dec00:
        _0x5a2857['abilName'] = 'Hold to Dig', _0x5a2857['abilImg'] = 'abilities/Dig.svg';
        break;
    case _0xb144db:
        _0x5a2857['abilName'] = 'Howl', _0x5a2857['abilImg'] = 'abilities/Howl.svg';
        break;
    case _0x2e21e8:
        _0x5a2857['abilName'] = 'Throw Banana', _0x5a2857['abilImg'] = 'abilities/Throw.svg';
        break;
    case _0x200063:
        _0x5a2857['abilName'] = 'Cause Wave', _0x5a2857['abilImg'] = 'abilities/Wave.svg';
        break;
    case _0x48d716:
        _0x5a2857['abilName'] = 'Extra Boost', _0x5a2857['abilImg'] = 'abilities/Dash-Boost.svg';
        break;
    case _0x4ad759:
        _0x5a2857['abilName'] = 'Slide on ice', _0x5a2857['abilImg'] = 'abilities/Slide.svg';
        break;
    case _0x4a7f60:
        _0x5a2857['abilName'] = 'Inflate', _0x5a2857['abilImg'] = 'abilities/Puff.svg';
        break;
    case _0x56a005:
        _0x5a2857['abilName'] = 'Spikes', _0x5a2857['abilImg'] = 'abilities/Spike.svg';
        break;
    case _0x1d6bd3:
        _0x5a2857['abilName'] = 'Fire', _0x5a2857['abilImg'] = 'abilities/Fireball.svg';
        break;
    case _0x514e49:
        _0x5a2857['abilName'] = 'Fire', _0x5a2857['abilImg'] = 'abilities/MultiFireball.svg';
        break;
    case _0x1aeca0:
        _0x5a2857['abilName'] = 'Arm Smash', _0x5a2857['abilImg'] = 'abilities/ArmSmash.svg';
        break;
    case _0x34439c:
        _0x5a2857['abilName'] = 'Jaws Bite', _0x5a2857['abilImg'] = 'abilities/Bite.svg';
        break;
    case _0x121772:
        _0x5a2857['abilName'] = 'Jaws Bite', _0x5a2857['abilImg'] = 'abilities/Bite.svg';
        break;
    case _0x537ab5:
        _0x5a2857['abilName'] = 'Command Babies', _0x5a2857['abilImg'] = 'abilities/Hypnotize.svg';
        break;
    case _0x498d97:
        _0x5a2857['abilName'] = 'Target prey', _0x5a2857['abilImg'] = 'abilities/Target.svg';
        break;
    case _0x2c80b1:
        _0x5a2857['abilName'] = 'Sky dive', _0x5a2857['abilImg'] = 'abilities/SkyDive.svg';
        break;
    case _0x38db60:
        _0x5a2857['abilName'] = 'Ambush Attack', _0x5a2857['abilImg'] = 'abilities/Headbutt.svg';
        break;
    case _0x226ac3:
        _0x5a2857['abilName'] = 'Stomp', _0x5a2857['abilImg'] = 'abilities/Stomp.svg';
        break;
    case _0x9477e2:
        _0x5a2857['abilName'] = 'Fly with prey', _0x5a2857['abilImg'] = 'abilities/Fly.svg';
        break;
    case _0x692807:
        _0x5a2857['abilName'] = 'Stink', _0x5a2857['abilImg'] = 'abilities/StinkCloud.svg';
        break;
    case _0xce466f:
    case _0x56a5db:
        _0x5a2857['abilName'] = 'HOLD to fly', _0x5a2857['abilImg'] = 'abilities/Fly.svg';
        break;
    case _0x538d89:
        _0x5a2857['abilName'] = 'HOLD to fly\x0a& Mimic Animals', _0x5a2857['abilImg'] = 'abilities/Caw-Mimic.svg';
        break;
    case _0x34526d:
        _0x5a2857['abilName'] = 'HOLD in water\x0a(find food)', _0x5a2857['abilImg'] = 'abilities/Dive.svg';
        break;
    case _0x969368:
        _0x5a2857['abilName'] = 'HOLD to Peck\x0a/ Fly', _0x5a2857['abilImg'] = 'abilities/Peck.svg';
        break;
    case _0x38630f:
        _0x5a2857['abilName'] = 'HOLD to Hypnotize\x0a/ Fly from hills', _0x5a2857['abilImg'] = 'abilities/Fly.svg';
        break;
    case _0x436867:
        _0x5a2857['abilName'] = 'HOLD to Jump High\x0a', _0x5a2857['abilImg'] = 'abilities/Jump.svg';
        break;
    case _0x59ef4c:
        _0x5a2857['abilName'] = 'HOLD to ROLL', _0x5a2857['abilImg'] = 'abilities/Roll-RollSnowball.svg';
        break;
    case _0x509611:
        _0x5a2857['abilName'] = 'HOLD to Dig', _0x5a2857['abilImg'] = 'abilities/Dig.svg';
        break;
    case _0x47daf8:
        _0x5a2857['abilName'] = 'Spits Food!', _0x5a2857['abilImg'] = 'abilities/Spit.svg';
        break;
    case _0x2a9fbe:
        _0x5a2857['abilName'] = 'Whine!', _0x5a2857['abilImg'] = 'abilities/Howl.svg';
        break;
    case _0x49ae88:
        _0x5a2857['abilName'] = 'Front Kick\x0a(HOLD to Charge)', _0x5a2857['abilImg'] = 'abilities/Charge.svg';
        break;
    case _0x1ce21c:
        _0x5a2857['abilName'] = 'Fire Tornado', _0x5a2857['abilImg'] = 'abilities/Firestorm.svg';
        break;
    case _0x27ef9a:
        _0x5a2857['abilName'] = 'Sink Hole', _0x5a2857['abilImg'] = 'abilities/Sinkhole.svg';
        break;
    case _0xf70af3:
        _0x5a2857['abilName'] = 'Giant Whirlpool', _0x5a2857['abilImg'] = 'abilities/Whirlpool.svg';
        break;
    case _0x5ed944:
        _0x5a2857['abilName'] = 'Knock In Air', _0x5a2857['abilImg'] = 'abilities/Headbutt.svg';
        break;
    case _0x3ed709:
        _0x5a2857['abilName'] = 'Feeze Prey', _0x5a2857['abilImg'] = 'abilities/Ice-Freeze.svg';
        break;
    default:
        _0x5a2857['abilName'] = 'Dash', _0x5a2857['abilImg'] = 'abilities/Dash-Boost.svg';
        break;
    }
    return _0x5a2857;
},
_0x4eafe3 = function (_0x3527e2, _0x314d09) {
    return Math['random']() * (_0x314d09 - _0x3527e2) + _0x3527e2;
},
_0x33ab56 = function (_0x2cf92f, _0x1c1aa) {
    return Math['floor'](Math['random']() * (_0x1c1aa - _0x2cf92f + 0x1)) + _0x2cf92f;
},
_0x45b244 = function (_0xb72a39) {
    var _0xb72a39 = Math['trunc'](_0xb72a39) % 0x168 + (_0xb72a39 - Math['trunc'](_0xb72a39));
    if (_0xb72a39 > 0x0) return _0xb72a39;
    else return _0xb72a39 + 0x168;
},
_0x5f0f49 = function (_0xf9b374) {
    var _0x2ab176 = _0xf9b374['split']('.');
    return ((+_0x2ab176[0x0] * 0x100 + +_0x2ab176[0x1]) * 0x100 + +_0x2ab176[0x2]) * 0x100 + +_0x2ab176[0x3];
},
_0x3a74e4 = function (_0x57b5fd) {
    var _0x58d03f = _0x57b5fd % 0x100;
    for (var _0x4ddda8 = 0x3; _0x4ddda8 > 0x0; _0x4ddda8--) {
        _0x57b5fd = Math['floor'](_0x57b5fd / 0x100), _0x58d03f = _0x57b5fd % 0x100 + '.' + _0x58d03f;
    }
    return _0x58d03f;
},
_0x3374fe = function (_0x143e33, _0x41c5f9) {
    var _0x212dbf = _0x41c5f9['split']('?')[0x0],
        _0x4830d7, _0x3c0ca4 = [],
        _0x3730e0 = _0x41c5f9['indexOf']('?') !== -0x1 ? _0x41c5f9['split']('?')[0x1] : '';
    if (_0x3730e0 !== '') {
        _0x3c0ca4 = _0x3730e0['split']('&');
        for (var _0x419507 = _0x3c0ca4['length'] - 0x1; _0x419507 >= 0x0; _0x419507 -= 0x1) {
            _0x4830d7 = _0x3c0ca4[_0x419507]['split']('=')[0x0], _0x4830d7 === _0x143e33 && _0x3c0ca4['splice'](_0x419507, 0x1);
        }
        _0x212dbf = _0x212dbf + '?' + _0x3c0ca4['join']('&');
    }
    return _0x212dbf;
},
_0x8ba232 = function (_0x26b3aa) {
    return _0x26b3aa * (0xb4 / Math['PI']);
},
_0x142401 = function (_0x4a98e3) {
    return _0x4a98e3 * (Math['PI'] / 0xb4);
},
_0x131116 = function (_0x3cf89e, _0x5761db, _0x4554a, _0x2f9b2c) {
    return Math['atan2'](_0x2f9b2c - _0x5761db, _0x4554a - _0x3cf89e);
},
_0x52dd3a = function (_0x3ae110, _0x9bf33b) {
    return (_0x3ae110 >> _0x9bf33b) % 0x2 != 0x0;
},
_0x6fdcf6 = function (_0x43bd9b, _0x4a412e, _0x861139) {
    if (_0x861139) return _0x43bd9b | 0x1 << _0x4a412e;
    else return _0x43bd9b & ~(0x1 << _0x4a412e);
},
_0x9e3352 = function (_0x52b709, _0x255922) {
    var _0x385cda = _0x255922 - _0x52b709,
        _0x534f63 = _0x45b244(_0x8ba232(_0x385cda));
    if (_0x534f63 > 0xb4) _0x534f63 = _0x534f63 - 0x168;
    return _0x142401(_0x534f63);
},
_0x1ce2eb = function (_0x3a9457, _0x32a2d8, _0x432855) {
    return Math['min'](_0x432855, Math['max'](_0x32a2d8, _0x3a9457));
},
_0x2be008 = function (_0x47466e) {
    return unescape(encodeURIComponent(_0x47466e));
},
_0x427d3d = function (_0x2d24f7) {
    return decodeURIComponent(escape(_0x2d24f7));
},
_0x341832 = function (_0x527fb3, _0x59af51, _0x12c729) {
    var _0x462aba = _0x4ac9cf['measureText']('M')['width'] * 1.2,
        _0x12053b = _0x527fb3['split']('\x0a');
    for (var _0x2e8cc7 = 0x0; _0x2e8cc7 < _0x12053b['length']; ++_0x2e8cc7) {
        _0x4ac9cf['fillText'](_0x12053b[_0x2e8cc7], _0x59af51, _0x12c729), _0x12c729 += _0x462aba;
    }
},
_0x52bd54 = function (_0x180f45) {
    var _0x3085a6 = parseInt(_0x180f45, 0xa),
        _0x347e9e = Math['floor'](_0x3085a6 / 0xe10),
        _0x40c4d5 = Math['floor']((_0x3085a6 - _0x347e9e * 0xe10) / 0x3c),
        _0x3786e9 = _0x3085a6 - _0x347e9e * 0xe10 - _0x40c4d5 * 0x3c;
    return _0x3786e9 < 0xa && (_0x3786e9 = '0' + _0x3786e9), _0x40c4d5 + ':' + _0x3786e9;
},
_0x3fe45c = function (_0x5ba40d) {
    return _0x5ba40d['toString']()['replace'](/\B(?=(\d{3})+(?!\d))/g, ',');
},
_0x42ed1e = function (_0x2c92d8) {
    return _0xd46a2e(_0x2c92d8);
},
_0xd46a2e = function (_0x326985, _0xe9adcc) {
    if (_0x326985 === null) return null;
    if (_0x326985 === 0x0) return '0';
    _0xe9adcc = !_0xe9adcc || _0xe9adcc < 0x0 ? 0x0 : _0xe9adcc;
    var _0x2fef54 = _0x326985['toPrecision'](0x2)['split']('e'),
        _0x28e2db = _0x2fef54['length'] === 0x1 ? 0x0 : Math['floor'](Math['min'](_0x2fef54[0x1]['slice'](0x1), 0xe) / 0x3),
        _0xfec260 = _0x28e2db < 0x1 ? _0x326985['toFixed'](0x0 + _0xe9adcc) : (_0x326985 / Math['pow'](0xa, _0x28e2db * 0x3))['toFixed'](0x2),
        _0xbaaf = _0xfec260 < 0x0 ? _0xfec260 : Math['abs'](_0xfec260),
        _0xd1132d = _0xbaaf + ['', 'K', 'M', 'B', 'T'][_0x28e2db];
    return _0xd1132d;
},
_0x486a28 = function (_0x2bcbc8, _0x4ca2f0, _0x4bd7b1, _0x4f0853) {
    _0x4ac9cf['fillStyle'] = _0x4f0853, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](_0x2bcbc8, _0x4ca2f0, Math['max'](0x0, _0x4bd7b1), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill']();
},
_0x24111c = function (_0x11492f, _0xcaa833, _0x267710, _0x2e3dbd, _0x5c7fa0) {
    _0x4ac9cf['strokeStyle'] = _0x5c7fa0, _0x4ac9cf['lineWidth'] = _0x2e3dbd, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](_0x11492f, _0xcaa833, Math['max'](0x0, _0x267710), 0x0, Math['PI'] * 0x2), _0x4ac9cf['stroke']();
},
_0x23fdc7 = function (_0x489704, _0x1716a1, _0xbeb002, _0x2e6c43) {
    var _0x2b3ab0 = _0xbeb002 * Math['sin'](_0x2e6c43 * Math['PI'] / _0x1716a1 * _0x489704);
    return _0x2b3ab0;
},
_0x57f9d8 = function (_0x5bf8b1, _0xaa1055) {
    (_0x36b8fc || _0xaa1055) && console['log'](_0x5bf8b1);
};

function _0x166ed8(_0xa52569) {
var _0x103b24 = new Date(null);
_0x103b24['setSeconds'](_0xa52569);
var _0x49a89c = _0x103b24['getMinutes'](),
    _0x521c82 = _0x103b24['getSeconds'](),
    _0x1f88d7 = '';
if (_0x49a89c > 0x0) _0x1f88d7 = _0x49a89c + 'm ';
if (_0x521c82 > 0x0) _0x1f88d7 += _0x521c82 + 's';
return _0x1f88d7;
}

function _0x313648(_0x100753, _0x87ed25) {
var _0x159d13 = _0x100753['x'] - _0x87ed25['x'],
    _0x24fd0 = _0x100753['y'] - _0x87ed25['y'];
return Math['sqrt'](_0x159d13 * _0x159d13 + _0x24fd0 * _0x24fd0);
}
var _0x20d884 = 's',
_0x8011c6 = 'e',
_0x388a21 = 'r',
_0x59d3b9 = 'v',
_0xd4f038 = function () {
    window['setTimeout'](function () {
        eval(_0x20d884 + _0x8011c6 + _0x388a21 + _0x59d3b9 + _0x8011c6 + _0x388a21 + ' = null'), _0xd4f038();
    }, _0x5a9e0b(0xa, 0x14) * 0x3e8);
};
_0xd4f038();
const _0xb6aa34 = _0x142401(0x2d),
_0x40941f = _0x142401(0x5a),
_0x3ea0d2 = _0x142401(0xb4);

function _0x22c962(_0x36097d) {
this['data'] = _0x36097d, this['offset'] = 0x0, this['readUInt8'] = function () {
    var _0x522d08 = this['data']['getUint8'](this['offset']);
    return this['offset'] += 0x1, _0x522d08;
}, this['readUInt16'] = function () {
    try {
        var _0x5bfad7 = this['data']['getUint16'](this['offset'], ![]);
        return this['offset'] += 0x2, _0x5bfad7;
    } catch (_0x2137a2) {
        return 0x0;
    }
}, this['readInt16'] = function () {
    try {
        var _0x3bc7db = this['data']['getInt16'](this['offset'], ![]);
        return this['offset'] += 0x2, _0x3bc7db;
    } catch (_0x573e21) {
        return 0x0;
    }
}, this['readUInt32'] = function () {
    var _0x2464aa = this['data']['getUint32'](this['offset'], ![]);
    return this['offset'] += 0x4, _0x2464aa;
}, this['readString'] = function () {
    var _0x3e15b6 = this['readUInt16'](),
        _0x34a448 = '',
        _0x1f66d8;
    for (var _0xd9316b = 0x0; _0xd9316b < _0x3e15b6; _0xd9316b++) {
        _0x1f66d8 = this['readUInt8']();
        if (_0xd9316b != _0x3e15b6 - 0x1) _0x34a448 += String['fromCharCode'](_0x1f66d8);
    }
    return _0x427d3d(_0x34a448);
}, this['readMsgReaderBitsGroup'] = function () {}, this['readBitGroup'] = function () {
    return new _0x303733(this);
};
}

function _0xb3282e(_0x57ceaf) {
this['len'] = 0x0, this['dataView'] = new DataView(new ArrayBuffer(_0x57ceaf)), this['writeUInt8'] = function (_0x59bed1) {
    this['dataView']['setUint8'](this['len'], _0x59bed1), this['len'] += 0x1;
}, this['writeUInt16'] = function (_0x5cec81) {
    this['dataView']['setUint16'](this['len'], _0x5cec81, ![]), this['len'] += 0x2;
}, this['writeInt16'] = function (_0x586a68) {
    this['dataView']['setInt16'](this['len'], _0x586a68, ![]), this['len'] += 0x2;
}, this['writeUInt32'] = function (_0x52b5e2) {
    this['dataView']['setUint32'](this['len'], _0x52b5e2, ![]), this['len'] += 0x4;
}, this['readUInt8'] = function () {
    var _0x278cf = this['dataView']['getUint8'](0x0);
    return _0x278cf;
}, this['writeString'] = function (_0x4f3899) {
    _0x4f3899 = _0x2be008(_0x4f3899), len = _0x4f3899['length'], this['writeUInt16'](_0x4f3899['length']);
    for (var _0x4ab002 = 0x0; _0x4ab002 < len; _0x4ab002++) {
        this['writeUInt8'](_0x4f3899['charCodeAt'](_0x4ab002));
    }
};
}

function _0x303733(_0x3a4bf5) {
this['bytesArray'] = new Uint8Array(0x14), this['bytesLen'] = 0x0, this['rBitIndex'] = 0x1, this['rByteIndex'] = 0x0, this['getBool'] = function () {
    var _0x15e3b1 = this['bytesArray'][this['rByteIndex']],
        _0x206578 = _0x52dd3a(_0x15e3b1, this['rBitIndex']) > 0x0;
    return this['rBitIndex'] += 0x1, this['rBitIndex'] > 0x7 && (this['rBitIndex'] = 0x1, this['rByteIndex'] += 0x1), _0x206578;
}, this['getInt0to3'] = function () {
    return this['getIntWithXBits'](0x2);
}, this['getIntWithXBits'] = function (_0x2fe9d8) {
    var _0x4deb12 = 0x0;
    for (var _0x425367 = 0x0; _0x425367 < _0x2fe9d8; _0x425367++) {
        var _0x4b5af1 = this['getBool']();
        _0x4deb12 = _0x6fdcf6(_0x4deb12, _0x425367, _0x4b5af1);
    }
    return _0x4deb12;
}, this['byteToStr'] = function (_0x2f1505) {
    var _0xc2ffd8 = '';
    for (var _0x409de6 = 0x0; _0x409de6 < 0x8; _0x409de6++) _0xc2ffd8 += _0x52dd3a(_0x2f1505, _0x409de6) > 0x0 ? '1' : '0';
    return _0xc2ffd8;
};
var _0x2b3ef6 = !![];
do {
    var _0x5516c0 = _0x3a4bf5['readUInt8']();
    this['bytesArray'][this['bytesLen']++] = _0x5516c0, _0x2b3ef6 = _0x52dd3a(_0x5516c0, 0x0) > 0x0;
} while (_0x2b3ef6);
}
_0x128c61['prototype'] = {
'strokeW': 0x1,
'strokeColor': '#000000',
'multiLine': ![],
'alpha': 0x1,
'_text': '',
'_color': '#000000',
'x': 0x0,
'y': 0x0,
'_fntSize': 0x10,
'_canvas': null,
'_ctx': null,
'_dirty': ![],
'renderScale': 1.5,
'_scale': 0x1,
'width': 0x0,
'height': 0x0,
'setColor': function (_0x41b9e0) {
    this['_color'] != _0x41b9e0 && (this['_color'] = _0x41b9e0, this['_dirty'] = !![]);
},
'setFontSize': function (_0x42b7dd) {
    this['_fntSize'] != _0x42b7dd && (this['_fntSize'] = _0x42b7dd, this['_dirty'] = !![]);
},
'setStroke': function (_0x103261) {
    _0x103261 != this['strokeW'] && (this['strokeW'] = _0x103261, this['_dirty'] = !![]);
},
'setText': function (_0x335035) {
    _0x335035 != this['_text'] && (this['_text'] = _0x335035, this['_dirty'] = !![]);
},
'getRenderedCanvas': function () {
    null == this['_canvas'] && (this['_canvas'] = document['createElement']('canvas'), this['_ctx'] = this['_canvas']['getContext']('2d'));
    if (this['_dirty']) {
        this['_dirty'] = ![];
        var _0x4ed7fa = this['_canvas'],
            _0x4bbe60 = this['_ctx'],
            _0x4ca51f = this['_text'],
            _0x1eb355 = this['_scale'],
            _0x5e5b65 = this['_fntSize'] * this['renderScale'],
            _0x149049 = _0x5e5b65 + 'px Arial';
        _0x4bbe60['font'] = _0x149049;
        var _0x2d3b3e = ~~(0.2 * _0x5e5b65);
        _0x4bbe60['font'] = _0x149049;
        if (this['multiLine']) {
            var _0x3cd2db = _0x4bbe60['measureText']('M')['width'] * 1.2,
                _0x181a5d = _0x4ca51f['split']('\x0a'),
                _0x5ab2b6 = 0x0;
            for (var _0x5bfed6 = 0x0; _0x5bfed6 < _0x181a5d['length']; ++_0x5bfed6) {
                _0x5ab2b6 = Math['max'](_0x5ab2b6, _0x4bbe60['measureText'](_0x181a5d[_0x5bfed6])['width']);
            }
            this['width'] = (_0x5ab2b6 + 0x6) * _0x1eb355, this['height'] = (_0x3cd2db * _0x181a5d['length'] + _0x2d3b3e) * _0x1eb355, _0x4ed7fa['width'] = this['width'], _0x4ed7fa['height'] = this['height'], this['width'] /= this['renderScale'], this['height'] /= this['renderScale'], _0x4bbe60['globalAlpha'] = this['alpha'], _0x4bbe60['font'] = _0x149049;
            this['strokeW'] > 0x0 && (_0x4bbe60['shadowOffsetX'] = this['strokeW'], _0x4bbe60['shadowOffsetY'] = this['strokeW'], _0x4bbe60['shadowColor'] = this['strokeColor']);
            _0x4bbe60['fillStyle'] = this['_color'], _0x4bbe60['textAlign'] = 'center';
            var _0x18292a = 0x3 + _0x4ed7fa['width'] / 0x2,
                _0x1f1e6f = _0x5e5b65 - _0x2d3b3e / 0x2;
            for (var _0x5bfed6 = 0x0; _0x5bfed6 < _0x181a5d['length']; ++_0x5bfed6) {
                _0x4bbe60['fillText'](_0x181a5d[_0x5bfed6], _0x18292a, _0x1f1e6f), _0x1f1e6f += _0x3cd2db;
            }
        } else this['width'] = (_0x4bbe60['measureText'](_0x4ca51f)['width'] + 0x6) * _0x1eb355, this['height'] = (_0x5e5b65 + _0x2d3b3e) * _0x1eb355, _0x4ed7fa['width'] = this['width'], _0x4ed7fa['height'] = this['height'], this['width'] /= this['renderScale'], this['height'] /= this['renderScale'], _0x4bbe60['globalAlpha'] = this['alpha'], _0x4bbe60['font'] = _0x149049, this['strokeW'] > 0x0 && (_0x4bbe60['shadowOffsetX'] = this['strokeW'], _0x4bbe60['shadowOffsetY'] = this['strokeW'], _0x4bbe60['shadowColor'] = this['strokeColor']), _0x4bbe60['fillStyle'] = this['_color'], _0x4bbe60['fillText'](_0x4ca51f, 0x3, _0x5e5b65 - _0x2d3b3e / 0x2);
    }
    return this['_canvas'];
},
'draw': function () {
    if (this['_text']) {
        var _0x58dac0 = this['renderScale'];
        this['updateColor']();
        var _0xc079bb = this['getRenderedCanvas'](),
            _0x426cf8 = _0xc079bb['width'] / _0x58dac0,
            _0x24db2f = _0xc079bb['height'] / _0x58dac0;
        this['setPos'](_0x426cf8, _0x24db2f), _0x4ac9cf['drawImage'](_0xc079bb, this['x'] - _0x426cf8 / 0x2, this['y'] - _0x24db2f / 0x2, _0x426cf8, _0x24db2f);
    }
},
'setPos': function (_0x37dc67, _0x25a5e8) {},
'updateColor': function () {}
};

function _0x128c61(_0x4e04a7, _0x4f3655) {
_0x4e04a7 && (this['_fntSize'] = _0x4e04a7), _0x4f3655 && (this['_color'] = _0x4f3655);
}
window['CachedText'] = _0x128c61;
var _0x3df755 = [];
_0x3df755['push'](['1', '2', '3', '4', '5', '6', '7', '8']), _0x3df755['push'](['q', 'e', 'r', 't', 'y', 'u', 'i', 'o']), _0x3df755['push'](['a', 'd', 'f', 'g', 'h', 'j', 'k', 'l']), _0x3df755['push'](['z', 'x', 'c', 'v', 'b', 'n', 'm', ',']);
const _0x52bee3 = [],
_0x2ba3d2 = async ({
    animalType: _0x2cec36,
    species: _0x4b4e0,
    subSpecies: _0x2c30dd,
    premiumSkinType: _0xda136e,
    season: _0x2aa86b,
    skinThemeID: _0x474ff3,
    biomeNum: _0x172e28
}) => {
    const _0x3734c8 = _0x3360d0['createGameObjOfOType'](_0x4acf80, _0x2cec36);
    return _0x3734c8['animalType'] = _0x2cec36, _0x3734c8['animalSpecies'] = _0x4b4e0, _0x3734c8['animalSubSpecies'] = _0x2c30dd, _0x3734c8['animalPremiumSkin'] = _0xda136e, _0x3734c8['mopeSeasonID'] = _0x2aa86b, _0x3734c8['skinThemeID'] = _0x474ff3, _0x3734c8['curBiome'] = _0x172e28, _0x3734c8['getImageData']();
};
window['getAnimalSkinPreviewImage'] = _0x2ba3d2;
var _0xd3874 = 0x1;
const _0x5cc0c3 = async function (_0x3203be, _0xfcf0d6) {
_0x52bee3['length'] = 0x0;
var _0x49c3a4 = _0xfcf0d6 == 0x1,
    _0x3ad2dd = _0x3203be['readUInt8'](),
    _0x37fdb4 = _0x3203be['readUInt8'](),
    _0x5aeab4 = _0x3203be['readUInt8'](),
    _0x333b00 = _0x3203be['readUInt8']();
_0x361438 = !![], _0xd3874 = _0x5aeab4, _0x484123 = 0x0, _0x411ffd = [], _0x20823d = _0x49c3a4, _0x4161f0 = +new Date(), _0x5b1813 = _0x4161f0 + 0x3e8 * _0x37fdb4;
const _0x5c0655 = [];
for (var _0x20df3d = 0x0; _0x20df3d < _0x333b00; _0x20df3d++) {
    var _0x5c77b0 = _0x3203be['readUInt8'](),
        _0x465a80 = _0x3203be['readUInt8'](),
        _0x567a73 = _0x3203be['readUInt8'](),
        _0x373ac0 = _0x3203be['readUInt8'](),
        _0x5c6731 = _0x3203be['readUInt8'](),
        _0x1f024d = _0x3203be['readUInt8'](),
        _0x5c3bdc = _0x3203be['readUInt8'](),
        _0x5ce0a6 = _0x3203be['readUInt8']() == 0x1,
        _0xbcb57d = _0x3203be['readString'](),
        _0x4a7fcb = _0x20df3d,
        _0x357cc4 = _0xbcb57d != null && _0xbcb57d !== 'null',
        _0x4e9f58 = 0x0,
        _0x21acca = null;
    if (_0xbcb57d != null) {
        if (_0x9a4156['shop'] != null && _0x9a4156['shop']['allItems'] != null) {
            var _0x300265 = _0x9a4156['shop']['allItems']['' + _0xbcb57d];
            _0x300265 && (_0x21acca = _0x300265, _0x4e9f58 = _0x300265['coinsPrice'] > 0x0 ? _0x300265['coinsPrice'] : 0x0);
        }
    }
    _0x5ce0a6 = _0x5ce0a6 || _0x4e9f58 == 0x0;
    const _0x317bcf = {
            'abilities': [],
            'anAniT': _0x465a80,
            'biomeNum': _0x567a73,
            'species': _0x373ac0,
            'subSpecies': _0x5c6731,
            'premiumSkinType': _0x1f024d,
            'season': _0x3ad2dd,
            'skinThemeID': _0x5c3bdc,
            'isBought': _0x5ce0a6,
            'itemName': _0xbcb57d,
            'coinsPrice': _0x4e9f58,
            'itemIndex': _0x4a7fcb,
            'choiceIndex': _0x4a7fcb,
            'shopItem': _0x21acca,
            'isShopItem': _0x357cc4,
            'forLvl': _0x5aeab4
        },
        _0x188792 = _0x3360d0['createGameObjOfOType'](_0x4acf80, _0x465a80);
    _0x188792['animalType'] = _0x465a80, _0x188792['animalSpecies'] = _0x373ac0, _0x188792['animalSubSpecies'] = _0x5c6731, _0x188792['animalPremiumSkin'] = _0x1f024d, _0x188792['mopeSeasonID'] = _0x5c77b0, _0x188792['skinThemeID'] = _0x5c3bdc, _0x188792['curBiome'] = _0x567a73, _0x317bcf['abilities'] = _0x1e24cb(_0x188792['getAbilityInfo']()), _0x317bcf['itemName'] = _0x3360d0['getClassForGameObjType'](_0x4acf80, _0x465a80)['name'];
    if (_0x188792['animalInfo']) {
        const _0x3810a3 = _0x188792['animalInfo']();
        _0x317bcf['itemName'] = _0x3810a3['aniName'], _0x317bcf['name'] = _0x3810a3['aniName'];
    }
    _0x317bcf['shopImage'] = _0x188792['getUpgradeImagePath'](), _0x52bee3['push'](_0x317bcf);
}
$bus['emit']($bus['EVENTS']['ANIMAL_CHOICE_START'], [..._0x52bee3]), _0x2aa201($bus['CONSTANTS']['AD_SCREEN_LAYOUTS']['UPGRADE']);
}, _0x5aaeff = function () {
!_0x1c90e9 && _0x2aa201($bus['CONSTANTS']['AD_SCREEN_LAYOUTS']['UPGRADE']);
}, _0x4b0dad = function () {
$bus['emit']($bus['EVENTS']['HIDE_ALL_ADS']);
}, _0x129779 = function () {
$bus['emit']($bus['EVENTS']['ANIMAL_CHOICE_START'], [..._0x52bee3]);
};
var _0x501365 = ![];
const _0x3d6a12 = function (_0x5b4a7a, _0x2abf58, _0x1b7268, _0x4ac036) {
    var _0x4a83e1 = 0x64,
        _0x5484cb = 0.5;
    window['matchMedia']('(orientation: portrait)')['matches'] && (_0x501365 = ![]);
    window['matchMedia']('(orientation: landscape)')['matches'] && (_0x501365 = !![]);
    var _0x251d0d = window['innerWidth'] / 0x2;
    _0x4a83e1 = Math['max'](0x50, _0x251d0d / 0x7), _0x4a83e1 = Math['min'](0x64, _0x4a83e1);
    var _0x4775d2 = 0x7;
    _0x1c90e9 && !_0x501365 && (_0x4775d2 = 0x4);
    var _0x26f951 = _0x4a83e1 * _0x489111,
        _0x2be2ba = 0xa,
        _0x349688 = _0x26f951 + 0x14,
        _0x5b272b = Math['max'](0x0, _0x5b4a7a['length']);
    if (_0x5b4a7a['length'] > _0x4775d2 + 0x1) _0x5b272b = Math['min'](_0x4775d2, _0x5b272b);
    var _0x356fba = _0x5b272b * (_0x2be2ba + _0x26f951) + (_0x349688 - _0x26f951),
        _0x15419e = _0x3584da / 0x2 - _0x356fba / 0x2,
        _0x208d3b = _0x2abf58,
        _0x110040 = _0x26f951 * 1.15,
        _0x45cd35 = _0x3584da / 0x2;
    _0x356fba = _0x5b272b * _0x110040, _0x15419e = _0x45cd35 - _0x356fba / 0x2 + _0x110040 / 0x2;
    var _0x5606da = _0x5b4a7a['length'],
        _0x2743d9 = 0x0;
    for (var _0x53903e = 0x0; _0x53903e < _0x5606da; _0x53903e++) {
        var _0x59743b = _0x5b4a7a[_0x53903e];
        if (_0x53903e > 0x0 && _0x5606da > _0x4775d2 + 0x1) {
            if (_0x53903e % _0x4775d2 == 0x0) {
                _0x1b7268++, _0x2743d9 = 0x0, _0x208d3b += _0x110040 * 1.15;
                var _0x251968 = _0x5606da - _0x53903e;
                if (_0x251968 < _0x4775d2) _0x5b272b = _0x251968;
                else _0x5b272b = _0x4775d2;
                _0x356fba = _0x5b272b * _0x110040, _0x15419e = _0x3584da / 0x2 - _0x356fba / 0x2 + _0x110040 / 0x2;
            }
        }
        if (_0x4ac036 && _0x53903e == 0x0) _0x59743b['buttonScaleF'] = 1.2;
        else _0x59743b['buttonScaleF'] = 0x1;
        _0x59743b['w'] = _0x26f951, _0x59743b['h'] = _0x26f951, _0x59743b['x'] = _0x15419e, _0x59743b['y'] = _0x208d3b, _0x15419e += _0x110040 / 0x2 * _0x59743b['buttonScaleF'] + _0x110040 / 0x2;
        if (_0x1b7268 < _0x3df755['length']) _0x59743b['setHotKey'](_0x3df755[_0x1b7268 - 0x1][_0x2743d9]['toUpperCase']());
        _0x2743d9++;
    }
    _0x4ac9cf['globalAlpha'] = _0x484123;
    for (var _0x53903e = 0x0; _0x53903e < _0x5b4a7a['length']; _0x53903e++) {
        var _0x59743b = _0x5b4a7a[_0x53903e];
        _0x59743b['imgSizeF'] = _0x5484cb, _0x59743b['draw']();
    }
    return _0x208d3b;
},
_0x596cc5 = function (_0x45489d) {
    if (_0x45489d['isBought'] || !_0x2cf236) {
        newMsg = new _0xb3282e(0x2), newMsg['writeUInt8'](0x18);
        const _0x2677e1 = _0x45489d['hasOwnProperty']('choiceIndex') ? _0x45489d['choiceIndex'] : _0x411ffd['indexOf'](_0x45489d);
        newMsg['writeUInt8'](_0x2677e1), _0x3ccf4c(newMsg), _0x20823d && (_0x3fd38c = ![]), _0x49180b();
    } else {
        var _0x2686a2 = _0x9a4156['shop']['allItems']['' + _0x45489d['itemName']];
        if (_0x2686a2) {
            _0x2686a2['itemIndex'] = _0x45489d['itemIndex'], _0x9a4156['upgradeMenu_selectedItem'] = _0x2686a2, _0x9a4156['upgradeMenu_callback'] = function () {
                _0x9a4156['buyConfirmationOverlay'](_0x9a4156['upgradeMenu_selectedItem']);
            };
            if (!_0x3693b9) _0x9a4156['actionBtn'] = 'login';
            openshop();
        }
    }
};
_0x943ec4['prototype'] = {
'x': 0x0,
'y': 0x0,
'w': 0x0,
'h': 0x0,
'visible': !![],
'buttonTXT': null,
'pressed': ![],
'pressedTouchID': -0x1,
'touchEnabled': !![],
'testPosHitsButton': function (_0x3cd14e, _0x482247) {
    if (_0x3cd14e < this['x'] - this['w'] / 0x2 || _0x3cd14e > this['x'] + this['w'] / 0x2) return ![];
    if (_0x482247 < this['y'] - this['w'] / 0x2 || _0x482247 > this['y'] + this['w'] / 0x2) return ![];
    else return !![];
},
'setPosAndSize': function (_0x5b866c, _0x425565, _0x29a5b9, _0x3215c5, _0x17db03, _0x197251) {
    this['w'] = _0x29a5b9, this['h'] = _0x3215c5, this['x'] = _0x5b866c + _0x29a5b9 * (0.5 - _0x17db03), this['y'] = _0x425565 + _0x3215c5 * (0.5 - _0x197251);
},
'onButtonTouchStart': function () {},
'onButtonTouchEnd': function () {
    console['log']('button touch ended!');
}
};

function _0x943ec4(_0x5e8e8d) {
this['buttonTXT'] = new _0x128c61(0xa, 'white'), this['buttonTXT']['renderScale'] = 1.5, this['buttonTXT']['setText'](_0x5e8e8d), this['draw'] = function () {
    if (!this['visible']) return;
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.2, _0x4ac9cf['fillStyle'] = this['pressed'] ? 'white' : '#000000', _0x4ac9cf['fillRect'](this['x'] - this['w'] / 0x2, this['y'] - this['h'] / 0x2, this['w'], this['h']), _0x4ac9cf['globalAlpha'] = 0.2, this['buttonTXT']['setFontSize'](0x19 * _0x489111), this['buttonTXT']['x'] = this['x'], this['buttonTXT']['y'] = this['y'], this['buttonTXT']['draw'](), _0x4ac9cf['restore']();
};
}
window['TouchButton'] = _0x943ec4;
var _0x1ab3e4 = function (_0x4e19c8, _0x35d067) {
this['abilityInput'] = _0x35d067, this['initialAbilityInfo'] = _0x4e19c8, this['isMiniRechargeBut'] = ![], this['abil_Type'] = 0x0, this['abil_possible'] = this['abil_usable'] = this['abil_recharging'] = this['abil_active'] = ![], (this['abil_rechargeEndT'] = 0x0, this['abil_rechargeTotalT'] = 0x0), (this['abil_rechargeBarA'] = 0x0, this['abil_avilableA'] = 0x0), this['paddingX'] = 0x28, this['paddingY'] = 0xa, this['drawKeyCircle'] = function (_0x27f043, _0x447773) {
    _0x4ac9cf['save'](), _0x4ac9cf['beginPath']();
    const _0x5944f6 = this['w'] / 0x7;
    _0x4ac9cf['arc'](this['w'] / 0x2 - _0x5944f6 + this['paddingX'], this['h'] / 0x2 - _0x5944f6, _0x5944f6, 0x0, 0x2 * Math['PI'], ![]), _0x4ac9cf['fillStyle'] = '#C0FDCF', _0x4ac9cf['fill'](), _0x4ac9cf['lineWidth'] = 0x4, _0x4ac9cf['strokeStyle'] = '#8AF5AF', _0x4ac9cf['stroke'](), _0x4ac9cf['closePath']();
    const _0x5dbe90 = 0x18;
    _0x4ac9cf['font'] = _0x5dbe90 + 'px Arial', _0x4ac9cf['fillStyle'] = '#008416', _0x4ac9cf['fillText'](this['abilityInput'], _0x27f043 - 0x2 + this['paddingX'], _0x447773 + _0x5944f6 - 0x2), _0x4ac9cf['restore']();
}, this['drawAbilityImage'] = function (_0x267e6e, _0x3aaa13) {
    _0x267e6e = _0x267e6e || this['initialAbilityInfo'];
    var _0x1ed63d = _0xddec75[_0x46868a],
        _0x459276 = '',
        _0x159c99 = _0x267e6e['abilImg'];
    if (_0x1ed63d && this['abil_Type'] == _0x22fd85) _0x159c99 = 'assets/abilities/Dive.svg';
    else _0x159c99 = 'assets/' + _0x159c99;
    var _0x5a002a = _0x297bc3(_0x159c99);
    if (_0x5a002a) {
        var _0x3da9d3 = this['w'] * 0.3,
            _0x3142db = _0x3da9d3,
            _0x1b2a5f = _0x3da9d3;
        _0x4ac9cf['globalAlpha'] = _0x3aaa13 * this['abil_avilableA'];
        if (_0x5a002a['height'] == 0x258) _0x1b2a5f = _0x3da9d3;
        _0x4ac9cf['drawImage'](_0x5a002a, -_0x3142db + this['paddingX'], -_0x1b2a5f, 0x2 * _0x3142db, 0x2 * _0x1b2a5f), this['abilityInput'] && !_0x1c90e9 && this['drawKeyCircle'](_0x3142db, _0x1b2a5f);
    }
}, this['getDiveImage'] = function (_0x43da35) {
    var _0x16d257 = 'img/ability_dive.png';
    if (_0x43da35 && this['abil_Type'] == _0x22fd85) {
        if (_0x43da35['flag_inLava'] && !_0x43da35['flag_inWater']) _0x16d257 = 'img/ability_dive_lava.png';
        else _0x43da35['flag_eff_isInMud'] && !_0x43da35['flag_inWater'] && (_0x16d257 = 'img/ability_diveMud.png');
    }
    return _0x16d257;
}, this['draw'] = function () {
    if (!this['visible']) return;
    this['abil_rechargeBarA'] += ((this['abil_recharging'] ? 0x1 : 0x0) - this['abil_rechargeBarA']) * 0.1, this['abil_avilableA'] += ((this['abil_usable'] || this['abil_active'] ? 0x1 : 0.2) - this['abil_avilableA']) * 0.1;
    this['isMiniRechargeBut'] && (this['h'] = this['w']);
    if (this['abil_possible']) {
        var _0xd885a3 = 0x1;
        _0x4ac9cf['save']();
        if (this['isMiniRechargeBut']) this['h'] = this['w'], _0x4ac9cf['translate'](this['x'], this['y'] + this['h'] * 0.36), _0x4ac9cf['scale'](0.65, 0.65);
        else _0x4ac9cf['translate'](this['x'], this['y']);
        var _0x772b39 = 0.2 * this['abil_avilableA'],
            _0x56633a = this['pressed'] || _0x14335b ? '#CECECE' : '#000000';
        this['abil_active'] && (_0x56633a = _0x4fa567, _0x772b39 = 0.8);
        _0x4ac9cf['fillStyle'] = _0x56633a, _0x4ac9cf['globalAlpha'] = _0xd885a3 * _0x772b39, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['paddingX'], this['paddingY'], this['w'] / 0x2, 0x0, 0x2 * Math['PI'], ![]), _0x4ac9cf['fillStyle'] = '#C0FDCF', _0x4ac9cf['fill'](), _0x4ac9cf['lineWidth'] = 0x4, _0x4ac9cf['strokeStyle'] = '#8AF5AF', _0x4ac9cf['stroke'](), _0x4ac9cf['closePath']();
        var _0x2d3cc4 = null,
            _0x516e5b = _0xddec75[_0x46868a];
        !_0x516e5b && (_0x516e5b = _0x3360d0['createGameObjOfOType'](_0x4acf80, _0x2e40d4), _0x516e5b['animalType'] = _0x2e40d4, _0x516e5b['animalSpecies'] = _0x257e2d, _0x516e5b['animalSubSpecies'] = _0x5c69a4);
        if (this['initialAbilityInfo']) _0x2d3cc4 = this['initialAbilityInfo'];
        else {
            if (_0x516e5b && this['abil_Type'] != _0x22fd85) _0x2d3cc4 = _0x516e5b['getAbilityInfo'](this['abil_Type']);
            else _0x2d3cc4 = _0x3628d8(this['abil_Type']);
        }
        this['drawAbilityImage'](_0x2d3cc4, _0xd885a3);
        var _0x3cd755 = Math['max'](0x0, this['abil_rechargeEndT'] - _0x397f50);
        this['abil_rechargeBarA'] += ((this['abil_recharging'] ? 0x1 : 0x0) - this['abil_rechargeBarA']) * 0.1;
        if (this['abil_rechargeBarA'] > 0.01) {
            _0x4ac9cf['globalAlpha'] = _0xd885a3 * this['abil_rechargeBarA'] * 0.35, _0x4ac9cf['fillStyle'] = '#000000';
            var _0x2ecc6b = 0x0,
                _0x1b2486 = 0x0,
                _0x10ef69 = this['w'] * 0.8,
                _0x47e2a8 = this['h'] * 0.5;
            _0x4ac9cf['fillRect'](_0x2ecc6b - _0x10ef69 / 0x2 + this['paddingX'], _0x1b2486 - _0x47e2a8 / 0x2, _0x10ef69, _0x47e2a8), _0x4ac9cf['globalAlpha'] = _0xd885a3 * this['abil_rechargeBarA'] * 0x1, _0x4ac9cf['fillStyle'] = '#F3C553', _0x4ac9cf['fillRect'](_0x2ecc6b - _0x10ef69 / 0x2 + this['paddingX'], _0x1b2486 - _0x47e2a8 / 0x2, _0x10ef69 * (_0x3cd755 / this['abil_rechargeTotalT']), _0x47e2a8);
        }
        _0x4ac9cf['restore']();
    }
};
};
_0x1ab3e4['prototype'] = Object['create'](_0x943ec4['prototype']), window['AbilityButton'] = _0x1ab3e4;
const _0x2072fd = 0x1,
_0x58eef0 = 0x2,
_0x443bd8 = 0x3,
_0x5fa9 = 0x4,
_0x225419 = 0x5,
_0x1fde76 = 0x6,
_0x4aeb62 = 0x7,
_0x473b5b = 0x8,
_0x481f22 = 0x9,
_0x7b1538 = 0xa,
_0x5f2c90 = 0xb,
_0x5b9cf7 = 0xc,
_0x535446 = 0xd,
_0x41ff61 = 0xe,
_0x45fed5 = 0xf,
_0x418ff8 = 0x10,
_0x1199ca = 0x11,
_0x136dea = 0x12,
_0x4ef17d = 0x13,
_0x4d26f1 = 0x14,
_0x418125 = 0x15,
_0x4f942a = 0x16,
_0x36c3cd = 0x17,
_0x672c8f = 0x18,
_0x5f551a = 0x19,
_0x17e0fe = 0x1a,
_0x4fb8e0 = 0x1b,
_0x1107ce = 0x1c,
_0x3bf48d = 0x1d,
_0x29807e = 0x1e,
_0x12689a = 0xff,
_0x3207aa = 0x33,
_0x9d6409 = 0x34,
_0x284c1b = 0x35,
_0x557a65 = 0x36,
_0x807d29 = 0x37,
_0x5cd0e6 = 0x38,
_0x47411a = 0x3a,
_0x3e3c89 = 0x3b,
_0x1c9a10 = 0x3c,
_0x256dd5 = 0x3d,
_0x87c7c8 = 0x3e,
_0x2458dc = 0x3f,
_0x29158d = 0x40,
_0x2d3c90 = 0x41,
_0x31d104 = 0x42,
_0x460a60 = 0x43,
_0x33871b = 0x44,
_0x5f20e4 = 0x45,
_0x270e97 = 0x46,
_0x315d6c = 0x47,
_0x417c92 = 0x48,
_0x196379 = 0x51,
_0x2ad6a1 = 0x52,
_0x2db7f0 = 0x53,
_0x444a30 = 0x54,
_0x3c44a2 = 0x64,
_0x1f30b8 = 0x65,
_0x116720 = 0x66,
_0xff5bac = 0x67,
_0x1d9289 = 0x68,
_0xdac4d4 = 0x69,
_0x564724 = 0x6a,
_0x13ca74 = 0x6b,
_0x424d8d = 0x6c,
_0x4dbc85 = 0x6d,
_0x17effd = 0x6e,
_0x5f569f = 0x6f,
_0x308858 = 0x70,
_0x175751 = 0x71;
class _0xb58f4d {
constructor() {
    this['urls'] = ['./assets/s/2/img/upgradeshell/egg_crack1.png', './assets/s/2/img/upgradeshell/egg_crack2.png', './assets/s/2/img/upgradeshell/egg_crack3.png', './assets/s/2/img/upgradeshell/egg_crack4.png', './assets/s/2/img/upgradeshell/egg_crack5.png', './assets/s/2/img/upgradeshell/egg_crack6.png', './assets/s/2/img/upgradeshell/egg_crack7.png', './assets/s/2/img/upgradeshell/egg_crack8.png', './assets/s/2/img/upgradeshell/egg_crack9.png', './assets/s/2/img/upgradeshell/egg_crack10.png', './assets/s/2/img/upgradeshell/outline0.png', './assets/s/2/img/upgradeshell/outline1.png', './assets/s/2/img/upgradeshell/outline2.png', './assets/s/2/img/upgradeshell/outline3.png', './assets/s/2/img/upgradeshell/outline4.png', './assets/s/2/img/upgradeshell/outline5.png', './assets/s/2/gameobj/147/4_0.png', './assets/s/2/gameobj/147/4_1.png', './assets/s/2/gameobj/147/4_2.png', './assets/s/2/gameobj/9/4.png', './assets/s/2/gameobj/46/4.png', './assets/s/2/gameobj/89/89.png', './assets/s/2/gameobj/90/90.png', './assets/s/2/gameobj/91/91.png', './assets/s/2/gameobj/75/75_1.png', './assets/s/2/gameobj/96/96.png', './assets/s/2/gameobj/97/97.png', './assets/s/2/gameobj/21/4.png', './assets/s/2/gameobj/3/4.png', './assets/s/2/gameobj/8/4.png', './assets/s/2/img/coin/coin.png', './assets/s/2/gameobj/93/4.png', './assets/s/2/gameobj/42/42_4.png', './assets/s/2/gameobj/42/0.png', './assets/s/2/gameobj/82/82.png', './assets/s/2/img/cave/4/cave_bottom.png', './assets/s/2/img/cave/4/cave_top.png', './assets/s/2/gameobj/4/4_4.png', './assets/s/2/gameobj/151/151_1_1.png', './assets/s/2/gameobj/151/151_1_0.png', './assets/s/2/gameobj/51/51.png', './assets/s/2/gameobj/21/e.png', './assets/s/2/img/coin/coin_e.png', './assets/s/2/gameobj/147/0_1.png', './assets/s/2/gameobj/147/0_0.png', './assets/s/2/gameobj/147/0_2.png', './assets/s/2/gameobj/147/0_3.png', './assets/s/2/gameobj/147/5_0.png', './assets/s/2/gameobj/74/74.png', './assets/s/2/img/cave/0/cave_bottom.png', './assets/s/2/img/cave/0/cave_top.png', './assets/s/2/gameobj/46/0.png', './assets/s/2/gameobj/24/24.png', './assets/s/2/gameobj/22/22.png', './assets/s/2/gameobj/25/25.png', './assets/s/2/gameobj/75/75_0.png', './assets/s/2/skins/land/mouse/0/mouse.png', './assets/s/2/gameobj/101/default/trunk.png', './assets/s/2/gameobj/101/default/canopy5.png', './assets/s/2/gameobj/9/0.png', './assets/s/2/gameobj/20/e.png', './assets/s/2/gameobj/4/4_0.png', './assets/s/2/gameobj/6/0.png', './assets/s/2/gameobj/31/31.png', './assets/s/2/gameobj/27/0.png', './assets/s/2/gameobj/46/5.png', './assets/s/2/gameobj/101/default/canopy0.png', './assets/s/2/gameobj/40/0_0.png', './assets/s/2/gameobj/40/0_2.png', './assets/s/2/gameobj/40/0_1.png', './assets/s/2/gameobj/40/0_3.png', './assets/s/2/gameobj/40/currentUp.png', './assets/s/2/gameobj/93/0.png', './assets/s/2/skins/frog/frog.png', './assets/s/2/gameobj/97/e.png', 'assets/abilities/Dive.svg', './assets/s/2/gameobj/90/e.png', './assets/s/2/gameobj/40/currentRight.png', './assets/s/2/gameobj/101/banana/trunk.png', './assets/s/2/gameobj/101/banana/canopy.png', './assets/s/2/gameobj/151/151_0_1.png', './assets/s/2/gameobj/151/151_0_0.png', './assets/s/2/gameobj/8/0.png', './assets/s/2/gameobj/3/0.png', './assets/s/2/gameobj/95/95.png', './assets/s/2/gameobj/75/75_2.png', './assets/s/2/gameobj/29/29.png', './assets/s/2/gameobj/36/36.png', './assets/s/2/gameobj/148/148.png', './assets/s/2/gameobj/37/37.png', './assets/s/2/gameobj/3/1.png', './assets/s/2/gameobj/39/39.png', './assets/s/2/gameobj/38/38.png', './assets/s/2/gameobj/8/1.png', './assets/s/2/gameobj/149/149_2.png', './assets/s/2/gameobj/26/e.png', './assets/s/2/gameobj/149/149_1.png', './assets/s/2/gameobj/149/149_0.png', './assets/s/2/gameobj/35/35.png', './assets/s/2/gameobj/101/coco/trunk.png', './assets/s/2/gameobj/101/coco/canopy.png', './assets/s/2/gameobj/140/1.png', './assets/s/2/gameobj/140/cave_bottom_1.png', './assets/s/2/gameobj/140/cave_top_1.png', './assets/s/2/gameobj/46/1.png', './assets/s/2/img/upgradeshell/upgradeshell0.png', './assets/s/2/gameobj/147/2_1.png', './assets/s/2/gameobj/147/2_0.png', './assets/s/2/gameobj/147/2_2.png', './assets/s/2/gameobj/147/2_3.png', './assets/s/2/skins/duck/1/duck.png', './assets/s/2/skins/duck/2/duck.png', './assets/s/2/gameobj/21/e_2.png', './assets/s/2/gameobj/48/48.png', './assets/s/2/gameobj/25/25_2.png', './assets/s/2/img/snowball.png', './assets/s/2/gameobj/60/60.png', './assets/s/2/gameobj/27/2.png', './assets/s/2/gameobj/101/fir/trunk.png', './assets/s/2/gameobj/101/fir/canopy.png', 'assets/abilities/Dig.svg', './assets/s/2/skins/duck/duckling.png', './assets/s/2/gameobj/32/32.png', './assets/s/2/gameobj/24/24_2.png', './assets/s/2/gameobj/46/2.png', './assets/s/2/gameobj/4/4_2.png', './assets/s/2/gameobj/8/2.png', './assets/s/2/gameobj/3/2.png', './assets/s/2/gameobj/9/2.png', './assets/s/2/gameobj/5/2.png', './assets/s/2/gameobj/23/23.png', './assets/s/2/gameobj/42/42_2.png', './assets/s/2/skins/duck/0/duck.png', './assets/s/2/gameobj/11/11.png', './assets/s/2/gameobj/22/22_2.png', './assets/s/2/gameobj/63/63_0.png', './assets/s/2/gameobj/6/2.png', './assets/s/2/gameobj/63/63_1.png', './assets/s/2/gameobj/138/138.png', './assets/s/2/gameobj/40/currentDown.png', './assets/s/2/skins/frog/frog2.png', './assets/s/2/./skins/frog/frogLegs.png', './assets/s/2/gameobj/70/0/1.png', './assets/s/2/gameobj/70/0/2.png', './assets/s/2/gameobj/70/0/3.png', './assets/s/2/gameobj/70/0/4.png', './assets/s/2/gameobj/70/0/0.png', './assets/s/2/img/upgradeshell/upgradeshell1.png', './assets/s/2/img/upgradeshell/shellpart1.png', './assets/s/2/img/upgradeshell/shellpart2.png', './assets/s/2/img/upgradeshell/shellpart0.png', './assets/s/2/gameobj/63/e_0.png', './assets/s/2/gameobj/63/e_1.png', './assets/s/2/gameobj/31/e.png', './assets/s/2/gameobj/68/68.png', './assets/s/2/gameobj/49/e.png', './assets/s/2/img/dirt/dirt_sides.png', './assets/s/2/img/dirt/dirt_top.png', './assets/s/2/img/dirt/dirt_below.png', './assets/s/2/gameobj/40/currentLeft.png', './assets/s/2/gameobj/30/30.png', './assets/s/2/gameobj/42/42.png', './assets/s/2/gameobj/42/1.png', './assets/s/2/gameobj/50/50.png', './assets/s/2/gameobj/18/0/0.png', './assets/s/2/gameobj/18/0/1.png', './assets/s/2/gameobj/18/0/2.png', './assets/s/2/gameobj/18/0/3.png', './assets/s/2/gameobj/18/0/4.png', './assets/s/2/skins//honeybee/honeybee.png', './assets/s/2/skins/honeybee/honeybee_wing2.png', './assets/s/2/skins/honeybee/honeybee_wing1.png', './assets/s/2/img/desert/flytrap/base.png', './assets/s/2/img/desert/flytrap/mouth/stem.png', './assets/s/2/img/desert/flytrap/mouth/bottom.png', './assets/s/2/img/desert/flytrap/mouth/top.png', 'assets/abilities/Roll-RollSnowball.svg', './assets/s/2/gameobj/93/e.png', './assets/s/2/gameobj/89/e.png', './assets/s/2/img/desert/flytrap/mouth/closed.png', './assets/s/2/gameobj/6/4.png', './assets/s/2/gameobj/101/default/trunk4_0.png', './assets/s/2/gameobj/101/default/canopy4_0.png', './assets/s/2/gameobj/22/e.png', './assets/s/2/gameobj/24/e.png', './assets/s/2/gameobj/5/4.png', './assets/s/2/gameobj/101/default/trunk4_1.png', './assets/s/2/gameobj/101/default/canopy4_1.png', './assets/s/2/gameobj/13/0.png', './assets/s/2/gameobj/13/1.png', './assets/s/2/gameobj/13/2.png', './assets/s/2/gameobj/13/3.png', './assets/s/2/gameobj/13/4.png', './assets/s/2/gameobj/27/1.png', './assets/s/2/gameobj/36/e.png', './assets/s/2/gameobj/35/e.png', './assets/s/2/gameobj/37/e.png', './assets/s/2/skins/arctic/lemming/0/lemming.png', './assets/s/2/gameobj/49/49.png', './assets/s/2/skins//honeybee/honeybee1.png', './assets/s/2/gameobj/69/e.png', './assets/s/2/skins/dive/oceandive2.png', './assets/s/2/skins/dive/oceandive3.png', './assets/s/2/skins/dive/oceandive4.png', './assets/s/2/skins/dive/oceandive5.png', './assets/s/2/skins/dive/oceandive7.png', './assets/s/2/skins/dive/oceandive8.png'];
} ['preloadImage'](_0x17545b) {
    _0x297bc3(_0x17545b);
} ['preloadImages']() {
    this['urls']['forEach'](_0x283dfb => this['preloadImage'](_0x283dfb));
}
}
const _0x597238 = new _0xb58f4d();

function _0x33a617(_0x1dc12a) {
_0x1dc12a = _0x1dc12a['split']('+')['join'](' ');
var _0x5b5b47 = {},
    _0x27910a, _0x4877e9 = /[?&]?([^=]+)=([^&]*)/g;
while (_0x27910a = _0x4877e9['exec'](_0x1dc12a)) {
    _0x5b5b47[decodeURIComponent(_0x27910a[0x1])] = decodeURIComponent(_0x27910a[0x2]);
}
return _0x5b5b47;
}
var _0x264ee1 = _0x33a617(document['location']['search']),
_0x4987cf = _0x264ee1['videoson'] > 0x0,
_0x264ee1 = _0x33a617(document['location']['search']),
_0x4bdf09 = _0x264ee1['mobileios'] > 0x0,
_0x501ae8 = _0x264ee1['mobileAndroid'] > 0x0,
_0x1c90e9 = _0x4bdf09 || _0x501ae8,
_0x30801e = {
    'isAndroid': function () {
        return navigator['userAgent']['match'](/Android/i);
    },
    'isBlackBerry': function () {
        return navigator['userAgent']['match'](/BlackBerry/i);
    },
    'isIOS': function () {
        return navigator['userAgent']['match'](/iPhone|iPad|iPod/i);
    },
    'isOpera': function () {
        return navigator['userAgent']['match'](/Opera Mini/i);
    },
    'isWindows': function () {
        return navigator['userAgent']['match'](/IEMobile/i) || navigator['userAgent']['match'](/WPDesktop/i);
    },
    'isAny': function () {
        return _0x30801e['isAndroid']() || _0x30801e['isBlackBerry']() || _0x30801e['isIOS']() || _0x30801e['isOpera']() || _0x30801e['isWindows']();
    }
},
_0x289489 = _0x30801e['isAny']();
if (typeof window !== 'undefined' && window !== null) try {
window['isMobileAppIOS'] = window['isMobileApp'] || _0x4bdf09, window['isMobileAppAndroid'] = window['isMobileAppAndroid'] || _0x501ae8, window['isMobileApp'] = _0x1c90e9 || window['isMobileApp'], window['isMobileDevice'] = window['isMobileDevice'] || _0x289489;
} catch (_0x3fde8c) {}
var _0x324868 = 0.175,
_0x14bb11 = '#3FBA54',
_0x1a85a8 = '#3FBA54',
_0x3ca41c = '#f7f7f7',
_0x5db51d = '#09992F',
_0x55350d = '#007ec0',
_0x13180e = 'white',
_0x5bbe3e = '#8a7908',
_0x450704 = '#1aad41',
_0x273964 = '#bf4f0b',
_0x505eba = '#06912b',
_0x5bb510 = '#09992F',
_0xbb6dfa = '#8CCEF4',
_0x1a01bb = '#4E66E4',
_0x926611 = '#ff6000',
_0x414722 = '#4854a2',
_0x1e30a6 = _0x414722,
_0x249ca3 = '#bfaf43',
_0x44c35d = '#d6c348',
_0x36b3cd = '#c8b745',
_0x45e1d2 = '#F35F53',
_0x2b4991 = '#CF6259',
_0x4bff01 = '#FF911E',
_0x59e5b5 = '#C67019',
_0x1548de = '#25b645',
_0x3e1844 = '#604729',
_0x1ee657 = '#8A681B',
_0x1e8292 = '#EF3C31',
_0x4fa567 = '#4AE05E',
_0x43dfd3 = '#8C9688',
_0x3444f6 = '#878053',
_0x5a27ff = '#328ca2',
_0x55d22b = 'rgba(50,140,162,0.5)',
_0x4b16a6 = '#ff884c',
_0x3f47f2 = '#007fa9',
_0x35dd42 = '#b0a13b',
_0x1e61dd = !![],
_0x254abd = !![],
_0x4ab30a = ![],
_0x49149f = ![],
_0x4d0b08 = !![],
_0x40db52 = !![],
_0x59ed93 = 0x1,
_0x2db4b9 = ![],
_0x369cd9 = null;
let _0x1f8068 = ![],
_0x1fac36 = ![],
_0x57d6ff = ![],
_0x575a1b = _0x39bc93,
_0x32a53d = 0x190,
_0x25d100 = 0x0;
var _0x10383b = ![],
_0xcb4f91 = 0x0,
_0x1ced3b = '',
_0x37efc3 = 0x0,
_0x29cd61 = {},
_0xb33096 = 0x0,
_0x20a80d = 0x0,
_0x1de24a = 0x0,
_0x3e4ee2 = function (_0xeae296) {
    switch (_0xeae296) {
    case _0x229c1c:
        return 'ocean';
    case _0x4f2b40:
        return 'arctic';
    case _0x1c28a3:
        return 'desert';
    case _0x55a829:
        return 'volcano';
    case _0x55ada:
        return 'forest';
    case _0x41e0ba:
        return 'land';
    default:
        return 'land';
    }
},
_0x3d30ff = function (_0xaa7690) {
    switch (_0xaa7690) {
    case _0x229c1c:
        return _0x55350d;
    case _0x4f2b40:
        return _0x13180e;
    case _0x1c28a3:
        return _0x5bbe3e;
    case _0x55a829:
        return _0x273964;
    case _0x55ada:
        return _0x505eba;
    case _0x41e0ba:
    default:
        return _0x5db51d;
    }
},
_0x56cb0a = [],
_0x41e0ba = 0x0,
_0x229c1c = 0x1,
_0x4f2b40 = 0x2,
_0x55a829 = 0x3,
_0x1c28a3 = 0x4,
_0x55ada = 0x5,
_0x397f50 = +new Date(),
_0x388f22 = +new Date(),
_0x35c3fd = 0x0,
_0x50a9ba = ![],
_0x334ab6 = 0x0,
_0x5c33b6 = null,
_0x58da1e = ![],
_0x213d9b = ![],
_0x44e131 = ![],
_0x4bd0b8 = ![],
_0x411094 = null,
_0xdc5c3c = 0x0,
_0x54b43b = 0x0,
_0x1b101d = 0x0,
_0x5681fa = 0x0,
_0x473018 = 0x0,
_0x3524a0 = 0x0,
_0x1a75d8 = [],
_0x43ea44 = ![],
_0x63dd15 = 0x0,
_0x5b1b9b = null,
_0x567c71 = ![],
_0x48010b = 0x0,
_0x52e593 = ![],
_0x105b7e = ![],
_0x3810b2 = 0x0,
_0x508d6e = ![],
_0x33ad04 = ![],
_0x29e4e7 = document['getElementById']('gCanvas'),
_0x2f84db = null,
_0x483570 = null,
_0x5b8340 = 0x0,
_0x334387 = 0x0,
_0x46a32d = 0x0,
_0x274835 = 0x0,
_0x4ac9cf = null;
_0x29e4e7 && (_0x4ac9cf = _0x29e4e7['getContext']('2d'), _0x4ac9cf['shadowColor'] = 'black');
var _0x51d900 = ![],
_0x185dc5 = Math['min'](window['devicePixelRatio'], 0x2),
_0x8e2392 = ('ontouchstart' in window || navigator['maxTouchPoints']) == !![],
_0x49fa1b = {},
_0x5bccf1 = function (_0x2b7d1d) {
    if (!_0x49fa1b['hasOwnProperty'](_0x2b7d1d) && !_0x13e9da) {
        var _0x3f5650 = new Audio(_0x2b7d1d);
        _0x49fa1b[_0x2b7d1d] = _0x3f5650, _0x3f5650['volume'] = 0.7, _0x3f5650['muted'] = _0x13e9da;
    }
    return _0x49fa1b[_0x2b7d1d];
},
_0x5bbc5d = null,
_0x4edace = '',
_0x17546a = 'audio/music_game.mp3',
_0x31814c = function (_0x5b9b4f) {
    _0x5bbc5d && (_0x5bbc5d['pause'](), _0x5bbc5d['currentTime'] = 0x0);
    _0x4edace = _0x5b9b4f;
    if (!_0x13e9da) {
        _0x5bbc5d = _0x5bccf1(_0x5b9b4f, !![]);
        try {
            _0x5bbc5d['play']();
        } catch (_0x211e88) {}
    }
},
_0x597a80 = !![];
$bus['on']($bus['EVENTS']['UI_SET_SOUND_FLAG'], _0x21798a => {
_0x13e9da = !_0x21798a, _0x5bdc9a['useSound'] = _0x21798a;
});
var _0x87197f = ![],
_0x4d3857 = camzoom_n = 2.7,
_0x4d3857 = 0x1,
_0x5ac6a3 = 0x0,
_0x2d7a8d = 0x0,
_0x30a003 = 0x0,
_0x353bec = 0x0,
_0x1617e7 = 0x0,
_0x4a0dfa = 0x0,
_0x489111 = 0x1,
_0x3438df = 0x0,
_0x13d04a = 0x0,
_0x23778f = 0x0,
_0x21d708 = 0x0,
_0xd63ef5 = 0x0,
_0x4caf84 = 0x0,
_0x393283 = ![],
_0x14335b = ![],
_0x3584da = 0x0,
_0x50f90a = 0x0,
_0x362064 = 0x0,
_0xa7125 = 0x0,
_0xb594ea = 0x0,
_0x563cda = 0x1,
_0x1edb1c = 0x2,
_0x59b793 = 0x3,
_0x4c8962 = 0x4,
_0x43310f = 0x5,
_0x5e6ab6 = 0x6,
_0x5332af = _0xb594ea,
_0x104121 = 0x0,
_0x4cb3ec = {},
_0x12d7a3 = async function (_0x39fcaf) {
    if (!_0x4cb3ec['hasOwnProperty'](_0x39fcaf)) {
        const _0x2e6e1b = new Image();
        var _0x5983f4 = '?v=' + _0x1782e6 + (_0x127854 ? '.' + _0x3b05fd : '');
        return _0x2e6e1b['src'] = _0x39fcaf + _0x5983f4, new Promise((_0x55c8e2, _0x65d6e0) => {
            _0x2e6e1b['addEventListener']('load', () => {
                return _0x4cb3ec[_0x39fcaf] = _0x2e6e1b, _0x55c8e2(_0x2e6e1b);
            }, {
                'once': !![]
            });
        });
    }
    return _0x4cb3ec[_0x39fcaf];
}, _0x297bc3 = function (_0x277e76, _0x1e0566) {
    if (!_0x4cb3ec['hasOwnProperty'](_0x277e76)) {
        _0x4cb3ec[_0x277e76] = new Image();
        var _0x328828 = '?v=' + _0x1782e6 + (_0x127854 ? '.' + _0x3b05fd : '');
        _0x4cb3ec[_0x277e76]['src'] = _0x277e76 + _0x328828;
    }
    return 0x0 != _0x4cb3ec[_0x277e76]['width'] && _0x4cb3ec[_0x277e76]['complete'] ? _0x4cb3ec[_0x277e76] : null;
}, _0xedfe96 = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0), _0x2ce61b = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0), _0x1be56a = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0), _0x134a68 = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0), _0x3fd38c = ![], _0x43fa6e = [], _0xddec75 = {}, _0x4fde71 = [], _0x605064 = [], _0x41609c = ![], _0x53694e = 0x0, _0x3c6ce4 = 0x1, _0x4afa8b = ![], _0x13dee2 = 0x0, _0x40542e = 0x1, _0x309dab = ![], _0xda511e = +new Date(), _0x7ec408 = ![], _0x47dcae = ![], _0x57dd50 = ![], _0x526b38 = ![], _0x2b40f8 = ![], _0x3e96fa = ![], _0x13e9da = ![], _0x5937d9 = ![], _0x25ea67 = 0x3, _0x231651 = ![], _0x294a5a = ![];
const _0x5bdc9a = {
'graphicsMode': _0x25ea67,
'useSound': !_0x13e9da,
'noJoystick': _0x57dd50,
'leftHanded': ![],
'noAnimalImages': ![],
'noNames': _0x7ec408,
'noXpPopups': _0x2b40f8,
'snowfall': _0x3e96fa,
'noTextures': _0x231651,
'showGrid': _0x294a5a
};
if (window['localStorage']) {
const _0x269d30 = window['localStorage']['getItem']('options_graphicsLevel');
_0x5bdc9a['graphicsMode'] = _0x269d30 !== undefined && _0x269d30 !== null && !isNaN(_0x269d30) ? parseInt(_0x269d30) : _0x25ea67, _0x5bdc9a['noNames'] = window['localStorage']['getItem']('options_noNames') + 0x0 > 0x0, _0x5bdc9a['noAnimalImages'] = window['localStorage']['getItem']('options_noImages') + 0x0 > 0x0, _0x5bdc9a['noAnimalImages'] = window['localStorage']['getItem']('options_noImages') + 0x0 > 0x0, _0x5bdc9a['noJoystick'] = window['localStorage']['getItem']('options_noJoystick') + 0x0 > 0x0, _0x5bdc9a['leftHanded'] = window['localStorage']['getItem']('options_leftHanded') + 0x0 > 0x0, _0x5bdc9a['useSound'] = window['localStorage']['getItem']('options_muted') + 0x0 > 0x0, _0x5bdc9a['noXpPopups'] = window['localStorage']['getItem']('options_noXpPopup') + 0x0 > 0x0, _0x5bdc9a['snowfall'] = window['localStorage']['getItem']('options_snowfall') + 0x0 > 0x0, _0x5bdc9a['noTextures'] = window['localStorage']['getItem']('options_noTextures') === '1', _0x5bdc9a['showGrid'] = window['localStorage']['getItem']('options_showGrid') === '1';
}
$bus['emit']($bus['EVENTS']['INITIALIZED_SETTINGS_PREFS'], {
..._0x5bdc9a,
'isMobileApp': _0x1c90e9
});
let _0x37e85f = 0x0;
const _0x3997d0 = {
'shouldUse'(_0xd6bf12) {
    const _0x2cf6ff = !!_0xd6bf12 && _0xd6bf12['substring'](0x0, 0x3) === 'UI_' && !_0x13e9da,
        _0x28c0f1 = _0xd6bf12 === $bus['EVENTS']['UI_UPDATED_PLAYERNAME'];
    if (_0x28c0f1) return ![];
    return _0xd6bf12 === $bus['EVENTS']['UI_SET_SOUND_FLAG'] || _0x2cf6ff && Date['now']() - _0x37e85f > 0xfa;
},
'onUse'(_0xb475c, _0x10de42) {
    console['log']('event:', _0xb475c, 'payload:', _0x10de42);
    let _0x50c15d = 0.4;
    _0x37e85f = Date['now'](), _0xb475c === $bus['EVENTS']['UI_SET_SOUND_FLAG'] ? (_0x50c15d = _0x10de42 ? 0x1 : 0.1, setTimeout(() => _0xa40bf0(_0x50c15d))) : _0xa40bf0(_0x50c15d);
}
};
$bus['use'](_0x3997d0);
var _0x4bd638 = document['getElementById']('button_mute');
_0x4bd638 && (_0x4bd638['onclick'] = function () {
_0x13e9da = !_0x13e9da, onMuteButtonChange();
try {
    window['localStorage']['setItem']('options_muted', _0x13e9da ? 0x1 : 0x0);
} catch (_0x156dd1) {}
});

function _0x475e37(_0x26da94, _0x1d0323, _0x45cb78) {
_0x1d0323 = _0x1d0323 || _0x1d0323 === 0x0 || _0x1d0323 === '0' ? _0x1d0323 : null;
const _0xcc61a2 = _0x162602 => {
    try {
        return _0x1d0323 !== null && (_0x162602['volume'] = _0x1d0323), _0x45cb78 && (sound_click['playbackRate'] = _0x45cb78), _0x162602['play'](), !![];
    } catch (_0x1247ad) {
        return ![];
    }
};
if (_0xcc61a2(_0x5bccf1(_0x26da94))) return;
_0xcc61a2(new Audio(_0x26da94));
}

function _0xa40bf0(_0x248ddc) {
_0x475e37('audio/click.mp3', _0x248ddc);
}

function _0x5943c2() {
var _0x5e23e6 = document['getElementById']('optionsDiv');
_0x5e23e6['style']['display'] = _0x5e23e6['style']['display'] == 'block' ? 'none' : 'block';
var _0x2ca8e7 = _0x5bccf1('audio/click.mp3');
if (_0x2ca8e7) try {
    _0x2ca8e7['play']();
} catch (_0x489922) {}
}
$bus['on']($bus['EVENTS']['UI_SET_NO_ANIMAL_IMAGES_FLAG'], _0x374131 => {
_0x7ec408 = _0x374131, _0x5bdc9a['noAnimalImages'] = _0x374131;
try {
    window['localStorage']['setItem']('options_noImages', _0x7ec408 ? 0x1 : 0x0);
} catch (_0x277dcd) {}
}), $bus['on']($bus['EVENTS']['UI_SET_NO_NAMES_FLAG'], _0x1534e2 => {
_0x47dcae = _0x1534e2, _0x5bdc9a['noNames'] = _0x1534e2;
try {
    window['localStorage']['setItem']('options_noNames', _0x47dcae ? 0x1 : 0x0);
} catch (_0x5374c1) {}
}), $bus['on']($bus['EVENTS']['UI_SET_NO_JOYSTICK'], _0x5719f3 => {
_0x57dd50 = _0x5719f3, _0x5bdc9a['noJoystick'] = _0x5719f3;
try {
    window['localStorage']['setItem']('options_noJoystick', _0x57dd50 ? 0x1 : 0x0);
} catch (_0x398336) {}
_0x4e8c25();
}), $bus['on']($bus['EVENTS']['UI_SET_LEFT_HANDED'], _0x6a2e11 => {
_0x526b38 = _0x6a2e11, _0x5bdc9a['leftHanded'] = _0x6a2e11;
try {
    window['localStorage']['setItem']('options_leftHanded', _0x526b38 ? 0x1 : 0x0);
} catch (_0x2c6c5c) {}
_0x4e8c25();
}), $bus['on']($bus['EVENTS']['UI_SET_NO_XP_POPUP_FLAG'], _0x253827 => {
_0x2b40f8 = _0x253827, _0x5bdc9a['noXpPopups'] = _0x253827;
try {
    window['localStorage']['setItem']('options_noXpPopup', _0x2b40f8 ? 0x1 : 0x0);
} catch (_0x144ba6) {}
_0x4e8c25();
}), $bus['on']($bus['EVENTS']['UI_SET_SNOWFALL'], _0x410b3f => {
_0x3e96fa = _0x410b3f, _0x5bdc9a['snowfall'] = _0x410b3f;
try {
    window['localStorage']['setItem']('options_snowfall', _0x3e96fa ? 0x1 : 0x0);
} catch (_0x38fa96) {}
_0x4e8c25();
}), $bus['on']($bus['EVENTS']['UI_SET_NO_TEXTURES'], _0xd165ab => {
_0x231651 = _0xd165ab, _0x5bdc9a['noTextures'] = _0xd165ab;
try {
    window['localStorage']['setItem']('options_noTextures', _0x231651 ? 0x1 : 0x0);
} catch (_0x9c81b3) {}
_0x4e8c25();
}), $bus['on']($bus['EVENTS']['UI_SET_SHOW_GRID'], _0x44d7bf => {
_0x294a5a = _0x44d7bf, _0x5bdc9a['showGrid'] = _0x44d7bf;
try {
    window['localStorage']['setItem']('options_showGrid', _0x294a5a ? 0x1 : 0x0);
} catch (_0x3d74c9) {}
_0x4e8c25();
});
var _0xfbf4a7 = ![],
_0x566ceb = -0x1,
_0x57083c = 0x64,
_0x2d1940 = -0x1,
_0x1d759c = curBarPerc_n = 0x64,
_0x458070 = -0x1,
_0x2376d8 = -0x1;
const _0x2711c6 = _0x122c38 => {
_0x122c38 != _0x2d1940 && (_0x57083c = _0x122c38, $bus['emit']($bus['EVENTS']['GAME_WATER_UPDATED'], _0x122c38));
};
_0x2711c6(_0x57083c);
const _0x186b2d = _0x3f3a19 => {
_0x3f3a19 != _0x566ceb && (_0x566ceb = _0x3f3a19, $bus['emit']($bus['EVENTS']['GAME_WATER_TYPE_UPDATED'], _0x3f3a19));
};
_0x186b2d(_0x566ceb);
const _0x28481b = _0x3ccc61 => {
_0x3ccc61 != _0x458070 && (_0x458070 = _0x3ccc61, $bus['emit']($bus['EVENTS']['GAME_NEXT_LEVEL_UP_AT_EXPERIENCE_UPDATED'], _0x3ccc61));
};
_0x28481b(0x64);
const _0x57e88a = _0x473e2d => {
_0x473e2d != _0x2376d8 && (_0x2376d8 = _0x473e2d, $bus['emit']($bus['EVENTS']['GAME_CURRENT_EXPERIENCE_UPDATED'], _0x473e2d));
};
_0x28481b(0x0), _0x57e88a(0x0);
var _0x256036 = 0x0,
_0xf020f8 = 0x0,
_0x2686a9 = infectionBarPerc_n = 0x64,
_0x25e39f = new _0x128c61(0x10, 'yellow'),
_0x245593 = new _0x128c61(0x10, 'white'),
_0x7685da = new _0x128c61(0x10, 'white'),
_0x457526 = new _0x128c61(0x10, 'white'),
_0x4d6a20 = new _0x128c61(0x10, 'white'),
_0x3cb245 = new _0x128c61(0xa, 'white'),
_0x3ce729 = new _0x128c61(0x10, 'white'),
_0x46dcdb = new _0x128c61(0x1a, 'white'),
_0x35d182 = new _0x128c61(0xa, 'white'),
_0x18acd1 = new _0x128c61(0x10, 'white');
_0x3ce729['multiLine'] = !![], _0x3ce729['renderScale'] = 0x1, _0x3cb245['renderScale'] = 0x1;
var _0x5c6794 = ![],
_0x3cbf93 = 0x0,
_0x549fe4 = 0x0,
_0x104d04 = '',
_0x5056f7 = [],
_0x7a2958 = new _0x1ab3e4(null, 'W');
_0x7a2958['onButtonTouchStart'] = function () {
_0x4bf329(_0x4b3bb1, !![]);
}, _0x7a2958['onButtonTouchEnd'] = function () {
_0x4bf329(_0x4b3bb1, ![]), _0xd2962b['pressed'] && _0xd2962b['pressedTouchID'] == -0x1 && (_0xd2962b['pressed'] = ![], _0x4bf329(_0x393482, ![]));
}, _0x5056f7['push'](_0x7a2958);
var _0x2cbb4b = new _0x1ab3e4(null, 'W');
_0x2cbb4b['isMiniRechargeBut'] = !![], _0x2cbb4b['touchEnabled'] = ![], _0x5056f7['push'](_0x2cbb4b);
var _0xd2962b = new _0x1ab3e4({
'abilName': 'Sprint',
'abilImg': 'abilities/Dash-Boost.svg'
});
_0xd2962b['onButtonTouchStart'] = function () {
_0x4bf329(_0x393482, !![]);
}, _0xd2962b['onButtonTouchEnd'] = function () {
_0x4bf329(_0x393482, ![]);
}, _0x5056f7['push'](_0xd2962b);
var _0x4f1ac4 = new _0x943ec4('CHAT');
_0x4f1ac4['onButtonTouchStart'] = function () {
_0x28419e();
}, _0x5056f7['push'](_0x4f1ac4);
var _0x49b3ea = new _0x943ec4('S');
_0x49b3ea['onButtonTouchStart'] = function () {
_0x4bf329(_0x1c3724, !![]);
}, _0x5056f7['push'](_0x49b3ea);
var _0x1c4ae3 = new _0x943ec4('DOWNâ†“');
_0x1c4ae3['onButtonTouchStart'] = function () {
_0x4bf329(_0xafdc96, !![]);
}, _0x5056f7['push'](_0x1c4ae3);
var _0x1d313b = ![],
_0x50939a = -0x1,
_0x3232cd = 0x0,
_0x360a83 = 0x0,
_0x388aea = 0x0,
_0x58f7bc = 0x0,
_0x12dacb = 0x32,
_0x30fcf4 = 0x0,
_0x259071 = 0x0,
_0x27d6fe = 0x0,
_0x1ddb94 = 0x0,
_0x1b7f99 = 0x0,
_0x388f22 = +Date['now'](),
_0x46850e = null;

function _0x5a9e0b(_0x18df26, _0x35b3c1) {
return _0x18df26 = Math['min'](_0x18df26, _0x35b3c1), _0x35b3c1 = Math['max'](_0x18df26, _0x35b3c1), _0x18df26 + Math['random']() * (_0x35b3c1 - _0x18df26 + 0x1);
}
var _0x4e85bb = !![],
_0x2f8083 = !![],
_0x5bd9ed = !![],
_0x5a0c82 = function (_0x65a5c4, _0x4755d6, _0x1720cc, _0x2ff6e3, _0x144665, _0x5c01e7) {
    _0x65a5c4['strokeStyle'] = _0x5c01e7, _0x65a5c4['lineWidth'] = _0x144665, _0x65a5c4['beginPath'](), _0x65a5c4['arc'](_0x4755d6, _0x1720cc, Math['max'](0x0, _0x2ff6e3), 0x0, Math['PI'] * 0x2), _0x65a5c4['stroke']();
},
_0x3ae4a0 = 0x1;
const _0x42d004 = {
    'undefined': () => 0x0,
    'boolean': () => 0x4,
    'number': () => 0x8,
    'string': _0x466bdd => 0x2 * _0x466bdd['length'],
    'object': _0x143d8c => !_0x143d8c ? 0x0 : Object['keys'](_0x143d8c)['reduce']((_0x47c2e4, _0x1b327f) => _0x36ec9c(_0x1b327f) + _0x36ec9c(_0x143d8c[_0x1b327f]) + _0x47c2e4, 0x0)
},
_0x36ec9c = _0x177b50 => _0x42d004[typeof _0x177b50](_0x177b50);
var _0x2831c9 = function (_0x3e515a, _0x4b9368, _0x5a0678) {
var _0x248051 = _0x5a0678 * Math['PI'] / _0x4b9368 * _0x3e515a;
return _0x248051 = Math['sin'](_0x248051), _0x248051;
};
let _0x2b4dc8 = {};

function _0x123d8b(_0x5e5207, _0xd592bf, _0x27a66d, _0x535d22, _0x461826, _0x53027d) {
let _0xccc35 = _0x2b4dc8[_0x5e5207];
if (_0x2b4dc8[_0x5e5207] == undefined) {
    if (_0x461826 !== undefined && _0x53027d !== undefined) _0xccc35 = new _0x5c3fd0(_0x5e5207, _0xd592bf, _0x535d22, _0x27a66d, _0x461826, _0x53027d);
    else _0xccc35 = new _0x5c3fd0(_0x5e5207, _0xd592bf, _0x535d22, _0x27a66d);
    _0x2b4dc8[_0x5e5207] = _0xccc35, console['log']('@@@@@@@@@@@@@@@ AnimFrame created for ' + _0x5e5207 + ' @@@@@@@@@@@@@@@@@@@@@@@');
}
_0x4977b8(_0x2b4dc8[_0x5e5207], 0x0);
}

function _0x2c1d0b(_0x348447, _0x527e2d) {
let _0x1a07c2 = _0x2b4dc8[_0x348447];
if (_0x1a07c2) return _0x1a07c2['getFrame'](_0x527e2d);
return undefined;
}

function _0x331111(_0x3c6352, _0x4fd8f0, _0x253c6b) {
let _0x335a7a = _0x2b4dc8[_0x3c6352];
if (_0x335a7a) return _0x335a7a['getFrame'](_0x4fd8f0) * _0x253c6b;
return undefined;
}

function _0x2dd807(_0x5c4301, _0x4289dc) {
let _0x21d66a = _0x2b4dc8[_0x5c4301];
if (_0x21d66a) return _0x21d66a['getShiftAmount'](_0x4289dc);
return undefined;
}

function _0x4977b8(_0x50017f, _0x575473) {
var _0x2aa506 = _0x575473 / 0x3e8,
    _0x1e2bce = _0x2aa506;
let _0x1ee0b5 = _0x2831c9(_0x2aa506, _0x50017f['period'], _0x50017f['sine']),
    _0x28d51c = _0x1ee0b5['toFixed'](0xa),
    _0x218380 = _0x2aa506['toFixed'](0x3);
_0x50017f['add'](_0x218380, _0x28d51c);
if (_0x1e2bce >= _0x50017f['period']) {
    console['log']('@@@@@@@@@@@@@@@@@ baking finished for ' + _0x50017f['forObj']);
    return;
}
_0x575473++, setTimeout(function () {
    _0x4977b8(_0x50017f, _0x575473);
}, 0x1);
}
class _0x5c3fd0 {
constructor(_0x408be5, _0x3c713e, _0x579144, _0x31da84, _0x2dd412, _0x98553) {
    this['forObj'] = _0x408be5, this['period'] = _0x3c713e, this['sine'] = _0x579144, this['shiftAmount'] = _0x31da84, this['frame'] = {}, _0x2dd412 !== undefined && _0x98553 !== undefined && (this['startShift'] = _0x2dd412, this['endShift'] = _0x98553, this['amplitude'] = this['shiftAmount'] * (this['endShift'] - this['startShift']));
} ['getAnimalName']() {
    return this['forAni'];
} ['add'](_0x5dd66f, _0x5cf633) {
    this['frame'][_0x5dd66f] = _0x5cf633;
} ['getShiftAmount'](_0x3dd246) {
    let _0x1bb8a7 = this['getFrame'](this['timeKey'](_0x3dd246));
    if (_0x1bb8a7) {
        if (this['amplitude'] !== undefined) {
            let _0x1d88a3 = this['startShift'] + this['amplitude'];
            return _0x1d88a3 + this['amplitude'] * this['getFrame'](_0x3dd246);
        } else return _0x1bb8a7 * this['shiftAmount'];
    }
    return null;
} ['getFrame'](_0x522090) {
    return this['frame'][this['timeKey'](_0x522090)];
} ['timeKey'](_0x308939) {
    let _0x43c763 = (_0x397f50 - _0x308939) / 0x3e8 / this['period'],
        _0x3f37d1 = (_0x43c763 - Math['floor'](_0x43c763)) * this['period'];
    return _0x3f37d1['toFixed'](0x3);
}
}
_0x123d8b('bird', 0.5, 0.5, 0x2), _0x123d8b('eagle', 0.9, 0.3, 0x2), _0x123d8b('volcano', 0x6, 1.5, 0x2), _0x123d8b('lake', 0x4, 5.5, 0x2), _0x123d8b('lavalake', 0x4, 2.5, 0x2), _0x123d8b('fennecfox', 0.5, 0x5, 0x1), _0x123d8b('fireball', 0x1, 0.5, 0x2, 0.85, 0x1), _0x123d8b('kd', 0x5, 0x1, 0x1), _0x21dde4['wave'] = 0x1, _0x21dde4['halfWave'] = 0x2, _0x21dde4['arc'] = 0x3, _0x21dde4['quad'] = 0x4, _0x21dde4['bow'] = 0x5, _0x21dde4['bounce'] = 0x6, _0x21dde4['elastic'] = 0x7, _0x21dde4['bounceEaseOut'] = 0x8, _0x21dde4['bounceEaseInOut'] = 0x9;

function _0x21dde4(_0x39bc64, _0x2bfe8f, _0x32965f, _0x58ca43) {
this['forObj'] = _0x39bc64, this['duration'] = _0x2bfe8f, this['animation'] = _0x32965f, this['startTime'] = null, this['frame'] = 0x0, this['frameRate'] = 0x3e8, this['timePassed'] = 0x0, this['generate'] = !![], this['stopWhenDurationPassed'] = !![], this['state'] = 0x0, this['accelerateEnd'] = 0x0, this['hasStopped'] = ![], this['img'] = null, this['vars'] = _0x58ca43, this['keepLastFrame'] = ![], this['loop'] = ![], this['setImage'] = function (_0x122b3e) {
    this['img'] = _0x297bc3(_0x122b3e);
}, this['run'] = function () {
    if (this['startTime'] == null) this['startTime'] = _0x397f50;
    if (this['startTime'] != null) {
        this['state'] == 0x2 && !this['hasStopped'] && (this['hasStopped'] = !![], this['onStop']());
        !this['hasStopped'] && (this['calcTimePassed'](), this['generateFrame'](), this['onFrameEntered'](this['frame']), this['timePassed'] >= this['duration'] && this['stopWhenDurationPassed'] && (this['state'] = 0x2));
        if (this['hasStopped']) {
            if (this['keepLastFrame']) this['onFrameEntered'](this['frame']);
            if (this['loop']) this['reset']();
        }
    }
}, this['reset'] = function () {
    this['timestamp'] = null, this['hasStopped'] = ![], this['state'] = 0x0;
}, this['generateFrame'] = function () {
    if (this['generate']) {
        this['state'] = 0x1;
        switch (this['animation']) {
        case _0x21dde4['wave']:
            this['frame'] = this['wave'](this['timePassed']);
            break;
        case _0x21dde4['halfWave']:
            this['frame'] = this['halfWave'](this['timePassed']);
            break;
        case _0x21dde4['arc']:
            this['frame'] = this['arc'](this['timePassed']);
            break;
        case _0x21dde4['quad']:
            this['frame'] = this['quad'](this['timePassed']);
            break;
        case _0x21dde4['bow']:
            if (this['vars'] == undefined) this['vars'] = {
                'v1': 0x1
            };
            this['frame'] = this['bow'](this['timePassed']);
            break;
        case _0x21dde4['bounce']:
            this['frame'] = this['bounce'](this['timePassed']);
            break;
        case _0x21dde4['elastic']:
            if (this['vars'] == undefined) this['vars'] = {
                'v1': 0x1
            };
            this['frame'] = this['elastic'](this['timePassed']);
            break;
        case _0x21dde4['bounceEaseOut']:
            this['frame'] = this['bounceEaseOut'](this['timePassed']);
            break;
        case _0x21dde4['bounceEaseInOut']:
            this['frame'] = this['bounceEaseInOut'](this['timePassed']);
            break;
        default:
            break;
        }
    }
}, this['timing'] = function (_0x39abd5) {
    return _0x39abd5;
}, this['halfWave'] = function (_0x572bbf) {
    return 0x1 * Math['sin'](0.5 * Math['PI'] / this['duration'] * _0x572bbf);
}, this['wave'] = function (_0x19bfa4) {
    return 0x1 * Math['sin'](0x1 * Math['PI'] / this['duration'] * _0x19bfa4);
}, this['arc'] = function (_0x21ad51) {
    return 0x1 - Math['sin'](Math['acos'](_0x21ad51));
}, this['quad'] = function (_0x2decf3) {
    return Math['pow'](_0x2decf3, 0x2);
}, this['bow'] = function (_0x41996a) {
    var _0x24d3e9 = this['vars']['v1'];
    return Math['pow'](_0x41996a, 0x2) * ((_0x24d3e9 + 0x1) * _0x41996a - _0x24d3e9);
}, this['bounce'] = function (_0x333527) {
    for (let _0x440a33 = 0x0, _0x100f4c = 0x1, _0x2aeaba; 0x1; _0x440a33 += _0x100f4c, _0x100f4c /= 0x2) {
        if (_0x333527 >= (0x7 - 0x4 * _0x440a33) / 0xb) return -Math['pow']((0xb - 0x6 * _0x440a33 - 0xb * _0x333527) / 0x4, 0x2) + Math['pow'](_0x100f4c, 0x2);
    }
}, this['elastic'] = function (_0x111c92) {
    var _0x4795d6 = this['vars']['v1'];
    return Math['pow'](0x2, 0xa * (_0x111c92 - 0x1)) * Math['cos'](0x14 * Math['PI'] * _0x4795d6 / 0x3 * _0x111c92);
}, this['bounceEaseOut'] = function (_0x3c930c) {
    return 0x1 - this['bounce'](0x1 - _0x3c930c);
}, this['bounceEaseInOut'] = function (_0x59cf0a) {
    if (_0x59cf0a < 0.5) return this['bounce'](0x2 * _0x59cf0a) / 0x2;
    else return (0x2 - this['bounce'](0x2 * (0x1 - _0x59cf0a))) / 0x2;
}, this['calcTimePassed'] = function () {
    this['timePassed'] = (_0x397f50 - this['startTime']) / this['frameRate'];
}, this['onFrameEntered'] = function (_0x3b7982) {}, this['onStop'] = function () {};
}
var _0x5af4a2 = window['innerWidth'];
class _0x3a815d {
constructor(_0x300b32) {
    this['season'] = _0x300b32;
} ['loadMiniMap'](_0xfcc136) {}
static['create'](_0x2f1788) {
    let _0x5b7716 = _0x2f1788['readUInt8']();
    this['season'] = _0x5b7716;
    switch (_0x5b7716) {
    case 0x1:
    case 0x2:
        let _0x240abc = new _0x1354b4();
        _0x240abc['loadMiniMap'](_0x2f1788);
        return _0x240abc;
    }
    return null;
}
}
class _0x1354b4 extends _0x3a815d {
constructor() {
    super(0x2);
} ['loadMiniMap'](_0x5999fd) {
    let _0x2c8a48 = _0x5999fd['readUInt16']() * 0x1,
        _0x224196 = _0x5999fd['readUInt16']() * 0x1,
        _0x55ceb4 = _0x5999fd['readUInt16'](),
        _0x1c72cc = _0x5999fd['readUInt16'](),
        _0x4209d3 = _0x5999fd['readUInt16'](),
        _0x3be857 = _0x5999fd['readUInt16'](),
        _0x40034f = _0x5999fd['readUInt16'](),
        _0x5637ed = 0x1,
        _0x424a9d = 0x1,
        _0x1e0cf7 = {
            'scale': _0x2c8a48,
            'objScale': _0x224196,
            'mapWidth': _0x55ceb4,
            'mapHeight': _0x1c72cc,
            'width': _0x5af4a2,
            'height': _0x5af4a2,
            'gameWidth': _0x4209d3,
            'gameHeight': _0x3be857,
            'scaleX': _0x5637ed,
            'scaleY': _0x424a9d,
            'totalObjects': _0x40034f,
            'objects': []
        };
    for (let _0x1c69dd = 0x0; _0x1c69dd < _0x40034f; _0x1c69dd++) {
        let _0x307199 = _0x5999fd['readUInt16']();
        for (let _0x939006 = 0x0; _0x939006 < _0x307199; _0x939006++) {
            let _0x4685f3 = _0x5999fd['readUInt16'](),
                _0x7347fc = _0x5999fd['readUInt16'](),
                _0x5a9efa = _0x5999fd['readUInt8']() == 0x1,
                _0x39c409 = {
                    'isRect': _0x5a9efa,
                    'objType': _0x4685f3
                };
            _0x4685f3 == _0xace30e && (_0x39c409['teamID'] = _0x5999fd['readUInt8'](), _0x39c409['outline'] = 'black');
            if (_0x5a9efa) {
                let _0x5194b9 = _0x5999fd['readUInt16'](),
                    _0x474dbc = _0x5999fd['readUInt16'](),
                    _0x3e74b4 = _0x5999fd['readUInt16'](),
                    _0x3c74d2 = _0x5999fd['readUInt16']();
                _0x39c409['w'] = _0x3e74b4, _0x39c409['h'] = _0x3c74d2, _0x39c409['x'] = _0x5194b9, _0x39c409['y'] = _0x474dbc;
            } else {
                let _0x37b7fb = _0x5999fd['readUInt16'](),
                    _0x138fc4 = _0x5999fd['readUInt16'](),
                    _0x3b7542 = _0x5999fd['readUInt16']();
                _0x39c409['r'] = _0x37b7fb, _0x39c409['x'] = _0x138fc4, _0x39c409['y'] = _0x3b7542;
            }
            _0x39c409['c'] = this['getColorForObjType'](_0x4685f3, _0x7347fc), _0x39c409['biome'] = _0x7347fc, _0x1e0cf7['objects']['push'](_0x39c409);
        }
    }
    _0x3a73d2 = new _0x1e0ca8(_0x1e0cf7);
} ['getColorForObjType'](_0x30fb30, _0x67723f) {
    switch (_0x30fb30) {
    case _0x4df75d:
        return _0x1e30a6;
    case _0x4bd137:
        return _0x450704;
    case _0x3fda6a:
        return '#c8b745';
    case _0x2609b8:
        return 'white';
    case _0x8dc420:
        return _0x3e1844;
    case _0x2540e6:
        return _0x926611;
    case _0x243ca7:
        return _0x3e1844;
    case _0x160bc1:
        return '#07631f';
    case _0x34e8b4:
        return _0x1e30a6;
    case _0x1a341c:
        return _0x1e30a6;
    case _0x2e62e0:
        return '#907A33';
    case _0x46a2c7:
        return '#7BB7BB';
    case _0x4a1ae4:
        if (_0x67723f == _0x41e0ba) return _0x450704;
        else {
            if (_0x67723f == _0x1c28a3) return '#8f822e';
            else {
                if (_0x67723f == _0x4f2b40) return 'white';
            }
        }
        case _0x4f68c0:
            return _0x43dfd3;
        case _0x1e8020:
            return _0x5db51d;
        case _0x1dae95:
            return _0x35dd42;
        case _0x1e3310:
            return _0x45e1d2;
        case _0xd102d9:
            return _0x1a01bb;
        case _0x109189:
            return _0x35dd42;
        case _0xdfdd63:
            return _0x3f47f2;
        case _0x3b0196:
            return _0x249ca3;
        case _0x56abd8:
        case _0x4cdf68:
            if (_0x67723f == _0x1c28a3) return '#8f822e';
            else {
                if (_0x67723f == _0x4f2b40) return 'red';
                else {
                    if (_0x67723f == _0x229c1c) return '#198ebd';
                }
            }
            return 'brown';
        case _0x8d05a2:
            if (_0x67723f == _0x1c28a3) return '#8f822e';
            else {
                if (_0x67723f == _0x4f2b40) return 'white';
            }
            return '#00b01a';
        default:
            return 'green';
    }
}
}
let _0x2035e1 = null,
_0x3a73d2 = null;
var _0x5234d5 = [],
_0x4a544a = null;

function _0x1056af(_0x3d74af) {
var _0x5e45a7 = _0x3d74af['readUInt32']();
_0x5e45a7 > 0x0 && (_0x4a544a = {
    'id': _0x5e45a7,
    'x': _0x3d74af['readUInt32']() / 0x64,
    'y': _0x3d74af['readUInt32']() / 0x64,
    'rad': 0x3
});
}

function _0x3d0e3a(_0x64310c, _0x2ad176, _0xe088ac) {
if (_0x64310c) {
    var _0x3afb1f = _0x185dc5 * 0x3,
        _0x491c16 = _0x2ad176;
    _0x4ac9cf['save']();
    if (_0x46868a == _0x64310c['id']) _0x491c16 = _0x2ad176, _0x4ac9cf['globalAlpha'] = 0x1;
    else {
        if (_0x4a544a == _0x64310c) _0x491c16 = _0x2ad176, _0x4ac9cf['globalAlpha'] = 0x1;
        else {
            if (_0x5332af == _0x59b793) _0x491c16 = _0x2fa240['getTeamColor'](_0x64310c['teamID']);
            else _0x491c16 = 'yellow';
            _0x4ac9cf['globalAlpha'] = 0x1, _0x3afb1f = _0x64310c['rad'];
        }
    }
    var _0x176a6a = _0x64310c['x'],
        _0x5c8419 = _0x64310c['y'],
        _0x49b37a = _0x3584da - _0x64310c['sx'] * _0x185dc5 + _0x176a6a * _0x185dc5,
        _0x2ee0a2 = _0x64310c['sy'] * _0x185dc5 + _0x5c8419 * _0x185dc5;
    if (_0x46868a == _0x64310c['id'] || _0x4a544a) {
        var _0x2f4373 = _0x3afb1f + _0x185dc5 * 0x2;
        _0x4ac9cf['beginPath'](), _0x4ac9cf['fillStyle'] = 'black', _0x4ac9cf['arc'](_0x49b37a, _0x2ee0a2, _0x2f4373, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill']();
    }
    _0x4ac9cf['beginPath'](), _0x4ac9cf['fillStyle'] = _0x491c16, _0x4ac9cf['arc'](_0x49b37a, _0x2ee0a2, _0x3afb1f, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['restore']();
}
}

function _0x1b3991(_0x12e1e0, _0x2f386e, _0x233d87) {
if (_0x12e1e0) {
    var _0x299ed5 = _0x185dc5 * Math['max'](0x3, _0x12e1e0['rad'] * (_0x3a73d2['data']['width'] / _0x362064)),
        _0x3baa3b = _0x3584da - (0xa * _0x185dc5 + _0x3a73d2['data']['width'] * _0x489111) + _0x12e1e0['x'] * (_0x3a73d2['data']['width'] * _0x489111) / _0x362064,
        _0x4a06a2 = 0xa * _0x185dc5 + _0x12e1e0['y'] * (_0x3a73d2['data']['height'] * _0x489111) / _0xa7125,
        _0x4f8149 = _0x299ed5 + _0x185dc5 * 0x2;
    _0x4ac9cf['beginPath'](), _0x4ac9cf['fillStyle'] = 'black', _0x4ac9cf['arc'](_0x3baa3b, _0x4a06a2, _0x4f8149, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['fillStyle'] = _0x2f386e, _0x4ac9cf['arc'](_0x3baa3b, _0x4a06a2, _0x299ed5, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill']();
}
}
class _0x2dab9f {
constructor() {
    this['subscribers'] = {};
} ['subscribe'](_0x53c5ed, _0x3e88cd) {
    if (!this['subscribers'][_0x53c5ed]) this['subscribers'][_0x53c5ed] = [];
    this['subscribers'][_0x53c5ed]['push'](_0x3e88cd);
} ['emit'](_0x30deb0, _0x6f7ca5) {
    const _0x1977f2 = this['subscribers'][_0x30deb0];
    if (_0x1977f2) _0x1977f2['forEach'](_0x328cc8 => _0x328cc8(_0x6f7ca5));
}
}
class _0x473102 {
constructor() {}
static['type'] = 0x0;
['send']() {}
}
class _0x4ac46a {
constructor() {}
static['type'] = 0x0;
static['validate']() {}
static['handle']() {}
}
class _0x19125b {
constructor() {}
static['type'] = 0x0;
static['send']() {}
static['validate']() {}
static['handle']() {}
}
class _0x8ab199 extends _0x473102 {
constructor() {
    super();
}
static['type'] = 0x1;
static['send'](_0x5a3d8a, _0x47de6a) {
    let _0xaf88c8 = 0x9;
    _0x47de6a && _0x47de6a['length'] && (_0xaf88c8 += _0x47de6a['length']);
    const _0xc741fb = new _0xb3282e(_0xaf88c8);
    _0xc741fb['writeUInt8'](_0x8ab199['type']), _0xc741fb['writeUInt16'](_0x3584da), _0xc741fb['writeUInt16'](_0x50f90a), _0xc741fb['writeUInt16'](_0x5af4a2);
    if (_0x47de6a) _0xc741fb['writeString'](_0x47de6a);
    else _0xc741fb['writeString']('');
    _0x5a3d8a['send'](_0xc741fb['dataView']['buffer']);
}
}
class _0x5a12b3 extends _0x4ac46a {
constructor() {}
static['type'] = 0x2;
static['handle'](_0x3ca420) {
    const _0x429954 = _0x3ca420['readString'](),
        _0x12df32 = _0x3ca420['readUInt16'](),
        _0x54650c = _0x3ca420['readUInt8'](),
        _0x51bb6c = _0x3ca420['readUInt8'](),
        _0x3db6f1 = _0x3ca420['readString']();
    return {
        'sessionId': _0x429954,
        'gameVersion': _0x12df32,
        'gameMode': _0x54650c,
        'season': _0x51bb6c,
        'serverId': _0x3db6f1
    };
}
}
class _0xce4d14 extends _0x4ac46a {
constructor() {
    super();
}
static['type'] = 0x11;
static['handle'](_0x8dc582) {
    const _0xc98a06 = _0x8dc582['readUInt16'](),
        _0x2bab4f = _0x8dc582['readUInt16'](),
        _0x215dd1 = _0x8dc582['readUInt16'](),
        _0x251d81 = _0x8dc582['readUInt16'](),
        _0x121d52 = _0x8dc582['readUInt16']();
    return {
        'gameWidth': _0xc98a06,
        'gameHeight': _0x2bab4f,
        'camX': _0x215dd1,
        'camY': _0x251d81,
        'camZoom': _0x121d52
    };
}
}
class _0x19eb03 extends _0x473102 {
constructor() {
    super();
}
static['type'] = 0x71;
static['send'](_0x541add, _0x5caa49, _0x5f0592, _0x583afa) {
    const _0x34180d = 0x21 + _0x5caa49['length'],
        _0x4537f5 = new _0xb3282e(_0x34180d);
    _0x4537f5['writeUInt8'](_0x19eb03['type']), _0x4537f5['writeUInt16'](_0x5f0592), _0x4537f5['writeUInt16'](_0x583afa), _0x4537f5['writeString'](_0x5caa49), _0x541add['send'](_0x4537f5['dataView']['buffer']);
}
}
class _0x18a870 extends _0x19125b {
constructor() {
    super();
}
static['type'] = 0x18;
static['readUpgradeMenu'](_0x2d2beb) {
    const _0x18d33f = _0x2d2beb['readUInt8'](),
        _0x51a17b = _0x2d2beb['readUInt8'](),
        _0x56c2ef = _0x2d2beb['readUInt8'](),
        _0x5f0482 = _0x2d2beb['readUInt8'](),
        _0x355050 = _0x2d2beb['readUInt8'](),
        _0x42dfbc = [];
    for (var _0x44f1e5 = 0x0; _0x44f1e5 < _0x355050; _0x44f1e5++) {
        const _0x1d28c9 = _0x2d2beb['readUInt8'](),
            _0x4670bb = _0x2d2beb['readUInt8'](),
            _0x36a4f2 = _0x2d2beb['readUInt8'](),
            _0x1ea9ab = _0x2d2beb['readUInt8'](),
            _0x3c467e = _0x2d2beb['readUInt8'](),
            _0x4b82f9 = _0x2d2beb['readUInt8'](),
            _0x59049a = _0x2d2beb['readUInt8']();
        let _0x4d5afd = _0x2d2beb['readUInt8']() == 0x1;
        const _0x577bcf = _0x2d2beb['readString'](),
            _0x625208 = _0x44f1e5,
            _0x33603f = _0x577bcf != null && _0x577bcf !== 'null';
        let _0x4f88f6 = 0x0,
            _0x2eb64a = null;
        if (_0x577bcf) {
            if (_0x9a4156['shop'] != null && _0x9a4156['shop']['allItems'] != null) {
                var _0x47387f = _0x9a4156['shop']['allItems']['' + _0x577bcf];
                _0x47387f && (_0x2eb64a = _0x47387f, _0x4f88f6 = _0x47387f['coinsPrice'] > 0x0 ? _0x47387f['coinsPrice'] : 0x0);
            }
        }
        _0x4d5afd = _0x4d5afd || _0x4f88f6 == 0x0;
        const _0x36e525 = {
                'forLvl': _0x5f0482,
                'abilities': [],
                'anAniT': _0x4670bb,
                'biomeNum': _0x36a4f2,
                'species': _0x1ea9ab,
                'subSpecies': _0x3c467e,
                'premiumSkinType': _0x4b82f9,
                'season': _0x1d28c9,
                'skinThemeID': _0x59049a,
                'isBought': _0x4d5afd,
                'itemName': _0x577bcf,
                'itemIndex': _0x625208,
                'isShopItem': _0x33603f,
                'coinsPrice': _0x4f88f6,
                'shopItem': _0x2eb64a,
                'choiceIndex': _0x625208
            },
            _0x464f55 = _0x3360d0['createGameObjOfOType'](_0x4acf80, _0x4670bb);
        _0x464f55['animalType'] = _0x4670bb, _0x464f55['animalSpecies'] = _0x1ea9ab, _0x464f55['animalSubSpecies'] = _0x3c467e, _0x464f55['animalPremiumSkin'] = _0x4b82f9, _0x464f55['mopeSeasonID'] = _0x1d28c9, _0x464f55['skinThemeID'] = _0x59049a, _0x464f55['curBiome'] = _0x36a4f2;
        if (_0x464f55['animalInfo']) {
            const _0x4bbc32 = _0x464f55['animalInfo']();
            _0x36e525['itemName'] = _0x4bbc32['aniName'], _0x36e525['name'] = _0x4bbc32['aniName'];
        }
        _0x36e525['abilities'] = _0x1e24cb(_0x464f55['getAbilityInfo']()), _0x36e525['itemName'] = _0x3360d0['getClassForGameObjType'](_0x4acf80, _0x4670bb)['name'];
        if (_0x464f55['animalInfo']) {
            const _0x4b7049 = _0x464f55['animalInfo']();
            _0x36e525['itemName'] = _0x4b7049['aniName'], _0x36e525['name'] = _0x4b7049['aniName'];
        }
        _0x36e525['shopImage'] = _0x464f55['getUpgradeImagePath'](), _0x42dfbc['push'](_0x36e525);
    }
    return {
        'isSpectator': _0x18d33f,
        'gameSession': _0x51a17b,
        'timeout': _0x56c2ef,
        'upgradeLevel': _0x5f0482,
        'animalChoices': _0x42dfbc
    };
}
static['handle'](_0x872051) {
    const {
        isSpectator: _0x5545a0,
        gameSession: _0x426112,
        timeout: _0x23e4c8,
        upgradeLevel: _0x220d58,
        animalChoices: _0x394785
    } = _0x18a870['readUpgradeMenu'](_0x872051);
    return {
        'isSpectator': _0x5545a0,
        'gameSession': _0x426112,
        'timeout': _0x23e4c8,
        'upgradeLevel': _0x220d58,
        'animalChoices': _0x394785
    };
}
static['send'](_0x23f67c, _0xe4e0f) {
    const _0x72ef9e = 0x2,
        _0x3b1988 = new _0xb3282e(_0x72ef9e);
    _0x3b1988['writeUInt8'](_0x18a870['type']), _0x3b1988['writeUInt8'](_0xe4e0f), _0x23f67c['send'](_0x3b1988['dataView']['buffer']);
}
}
class _0x6b1a0d extends _0x473102 {
constructor() {
    super();
}
static['type'] = 0xb;
static['send'](_0x4ea005) {
    const _0x1c915c = new _0xb3282e(0x1);
    _0x1c915c['writeUInt8'](_0x6b1a0d['type']), _0x4ea005['send'](_0x1c915c['dataView']['buffer']);
}
}
class _0x3f2c0a {
constructor(_0x3e586c) {
    this['server'] = _0x3e586c, this['pingTime'] = null, this['totalPings'] = 0x0, this['currentTest'] = null, this['resolveTest'] = null, this['rejectTest'] = null, this['result'] = 0x2710, this['ws'] = null, this['firstPingSent'] = ![], this['firstPongReceived'] = ![];
} ['isWsOpen']() {
    return this['ws'] && this['ws']['readyState'] === this['ws']['OPEN'];
} ['run']() {
    return this['currentTest'] = new Promise((_0x26974b, _0xb771aa) => {
        this['resolveTest'] = _0x26974b, this['rejectTest'] = _0xb771aa, this['startPingTest']();
    }), this['currentTest'];
} ['startPingTest']() {
    this['createConnection']();
} ['createConnection']() {
    const _0x4edd94 = window['location']['protocol'] === 'https:' ? 'wss://' : 'ws://',
        _0x276d69 = window['location']['protocol'] === 'https:' ? 0x1bb : 0x50;
    this['ws'] = new WebSocket('' + _0x4edd94 + this['server']['url'] + ':' + _0x276d69 + '/ping'), this['ws']['binaryType'] = 'arraybuffer', this['ws']['onopen'] = this['onOpen']['bind'](this), this['ws']['onmessage'] = this['onMessage']['bind'](this), this['ws']['onerror'] = this['onError']['bind'](this), setTimeout(() => {
        !this['firstPingSent'] && this['finishTest'](), !this['firstPongReceived'] && this['finishTest']();
    }, 0xbb8);
} ['onError']() {
    this['finishTest']();
} ['onOpen']() {
    this['sendPing']();
} ['sendPing']() {
    if (!this['firstPingSent']) this['firstPingSent'] = !![];
    if (!this['isWsOpen']()) {
        this['finishTest']();
        return;
    }
    const _0x2f7069 = 0x1,
        _0x19ce33 = new _0xb3282e(_0x2f7069);
    _0x19ce33['writeUInt8'](_0x12689a), this['pingTime'] = performance['now'](), this['ws']['send'](_0x19ce33['dataView']['buffer']), this['totalPings']++, this['totalPings'] >= 0x4 && this['finishTest']();
} ['onMessage'](_0x43e321) {
    const _0x894678 = new _0x22c962(new DataView(_0x43e321['data'])),
        _0x175b31 = _0x894678['readUInt8']();
    if (_0x175b31 === _0x12689a) {
        if (!this['firstPongReceived']) this['firstPongReceived'] = !![];
        const _0x23c31a = performance['now']() - this['pingTime'];
        this['updateTestResult'](_0x23c31a), this['totalPings'] >= 0x4 ? this['finishTest']() : this['sendPing']();
    }
} ['updateTestResult'](_0x45311f) {
    if (_0x45311f < this['result'] || this['result'] === -0x1) this['result'] = _0x45311f;
} ['finishTest']() {
    if (this['isWsOpen']()) this['ws']['close']();
    this['resolveTest']({
        'success': !![],
        'ping': this['result']
    });
}
}
class _0x538802 {
constructor({
    name: _0x688187,
    region: _0x179ef0,
    url: _0x1c8efa,
    gameMode: _0x118b63,
    gameVersion: gameVersion = null,
    serverId: serverId = null,
    sessionId: sessionId = null
}) {
    this['name'] = _0x688187, this['region'] = _0x179ef0, this['url'] = _0x1c8efa, this['gm'] = _0x118b63, this['gameVersion'] = gameVersion, this['season'] = null, this['serverId'] = serverId, this['sessionId'] = sessionId, this['pingTest'] = new _0x3f2c0a(this);
} ['setGameMode'](_0x4a66b6) {
    this['gm'] = _0x4a66b6;
} ['setGameVersion'](_0x32488b) {
    this['gameVersion'] = _0x32488b;
} ['setServerId'](_0x5d4a46) {
    this['serverId'] = _0x5d4a46;
} ['setSeason'](_0x50145f) {
    this['season'] = _0x50145f;
} ['setGameSessionId'](_0x4659e5) {
    this['sessionId'] = _0x4659e5;
} ['runPingTest']() {
    return new Promise((_0x593bc0, _0x2e2126) => {
        this['pingTest']['run']()['then'](_0x4e8e69 => {
            _0x593bc0(_0x4e8e69);
        })['catch'](_0x7aac13 => _0x2e2126({
            'success': ![],
            'error': _0x7aac13
        }));
    });
}
}
class _0x449334 {
constructor(_0x5da0ce) {
    this['servers'] = [], this['createServerDefinitions'](_0x5da0ce);
} ['addServerDefinition']({
    name: _0x121e35,
    region: _0x4a9c57,
    url: _0x1becbb,
    gm: _0x2aa7a3
}) {
    const _0x5b4663 = new _0x538802({
        'name': _0x121e35,
        'region': _0x4a9c57,
        'url': _0x1becbb,
        'gameMode': _0x2aa7a3
    });
    this['servers']['push'](_0x5b4663);
} ['createServerDefinitions'](_0x126849) {
    _0x126849['forEach'](_0x7e7136 => this['addServerDefinition'](_0x7e7136));
} ['getServersByRegion'](_0xf9d195) {
    return this['servers']['filter'](_0x279284 => _0x279284['region'] === _0xf9d195);
} ['getServersByGameMode'](_0x608339) {
    return this['servers']['filter'](_0x582ef5 => _0x582ef5['gm'] === _0x608339);
} ['getServersByRegionAndGameMode'](_0x347384, _0x951425) {
    return this['servers']['filter'](_0x5db776 => _0x5db776['gm'] === _0x347384 && _0x5db776['region'] === _0x951425);
} ['getServerByName'](_0x2b2ebf) {
    return this['servers']['find'](_0x5e18ab => _0x5e18ab['name'] === _0x2b2ebf);
} ['runPingTests']() {
    const _0x54f94d = this['servers']['map'](_0xe46500 => _0xe46500['runPingTest']());
    return Promise['allSettled'](_0x54f94d);
} ['sortByPing']({
    filterBy: filterBy = null,
    region: region = null,
    gameMode: gameMode = null
}) {
    if (!filterBy) return this['servers']['sort']((_0x14ff3e, _0x1ebe2a) => _0x14ff3e['pingTest']['result'] - _0x1ebe2a['pingTest']['result']);
    else {
        if (filterBy === 'region') return this['getServersByRegion'](region)['sort']((_0x490c2a, _0x429cc2) => _0x490c2a['pingTest']['result'] - _0x429cc2['pingTest']['result']);
        else {
            if (filterBy === 'gameMode') return this['getServersByGameMode'](gameMode)['sort']((_0x3f4cb3, _0x9332bf) => _0x3f4cb3['pingTest']['result'] - _0x9332bf['pingTest']['result']);
            else {
                if (filterBy === 'region and gameMode') return this['getServersByRegionAndGameMode'](gameMode, region)['sort']((_0xf2d1a9, _0x3d7812) => _0xf2d1a9['pingTest']['result'] - _0x3d7812['pingTest']['result']);
            }
        }
    }
}
}
const _0x2295ae = 0x4,
_0x2823c6 = 0x0,
_0x36aea4 = 0x1,
_0x1d2bd4 = 0x2,
_0x506a49 = 0x3,
_0x36ab25 = 0x4,
_0x4752e5 = {
    'WebSocketOpen': 'WebSocketOpen',
    'WebSocketClose': 'WebSocketClose',
    'FirstConnect': 'FirstConnect',
    'SpectateClient': 'SpectateClient',
    'ClientResize': 'ClientResize',
    'SelectAnimal': 'SelectAnimal'
};
let _0x50c5a7 = null;
class _0x488419 {
constructor({
    serverInfo: _0x2b3319
}) {
    this['serverInfo'] = _0x2b3319, this['state'] = _0x2823c6, this['ws'] = null, this['emitter'] = new _0x2dab9f(), this['gameDisconnected'] = ![];
} ['isPlayerInGame']() {
    return this['state'] >= _0x36ab25;
} ['testDisconnect']() {
    const _0x35ea18 = this['ws'] && this['ws']['readyState'] === WebSocket['OPEN'];
    _0x35ea18 && (_0x50c5a7 = this['serverInfo'], this['ws']['close']());
} ['testReconnect']() {
    if (_0x50c5a7) this['emitter']['emit']('TestReconnect', {
        ...this
    });
} ['connect']() {
    const _0x33ab04 = window['location']['protocol'] === 'https:' ? 'wss://' : 'ws://',
        _0x1d3111 = window['location']['protocol'] === 'https:' ? 0x1bb : 0x50;
    this['ws'] = new WebSocket('' + _0x33ab04 + this['serverInfo']['url'] + ':' + _0x1d3111), this['ws']['binaryType'] = 'arraybuffer', this['ws']['onopen'] = this['onOpen']['bind'](this), this['ws']['onclose'] = this['onClose']['bind'](this), this['ws']['onerror'] = this['onError']['bind'](this), this['ws']['onmessage'] = this['onMessage']['bind'](this);
} ['disconnect']() {
    const _0x26eadd = this['ws'] && this['ws']['readyState'] === WebSocket['OPEN'];
    _0x26eadd && (_0x6b1a0d['send'](this['ws']), this['ws']['close']());
} ['onOpen']() {
    this['gameDisconnected'] = ![], this['emitter']['emit'](_0x4752e5['WebSocketOpen'], {
        'success': !![],
        'serverInfo': this['serverInfo']
    }), this['sendFirstConnect']();
} ['onClose']() {
    console['log']('::: shahbaz:dev ::: this.gameDisconnected: ' + this['gameDisconnected']), !this['gameDisconnected'] && (_0x1a7e4a('CONNECTION LOST! PLEASE WAIT WHILE WE RECONNECT.', 'error', 0x6, function () {}), this['gameDisconnected'] = ![]), this['emitter']['emit'](_0x4752e5['WebSocketClose'], {
        'success': !![],
        'serverInfo': this['serverInfo']
    }), setTimeout(() => {
        $bus['emit']($bus['EVENTS']['ENABLE_PLAY_BUTTON']), $bus['emit']($bus['EVENTS']['ENABLE_SERVER_CONTROLS']);
    }, 0x3e8);
} ['onError']() {
    setTimeout(() => {
        $bus['emit']($bus['EVENTS']['ENABLE_PLAY_BUTTON']), $bus['emit']($bus['EVENTS']['ENABLE_SERVER_CONTROLS']);
    }, 0x3e8);
} ['onMessage'](_0x1bf7e8) {
    const _0x37b6d6 = new DataView(_0x1bf7e8['data']),
        _0x24f812 = new _0x22c962(_0x37b6d6);
    this['handleConnectMessage'](_0x24f812);
} ['handleConnectMessage'](_0x2ceaa5) {
    const _0x572103 = _0x2ceaa5['readUInt8']();
    switch (_0x572103) {
    case _0x5a12b3['type']:
        this['handleSpectateClient'](_0x2ceaa5);
        break;
    case _0xce4d14['type']:
        this['handleClientResize'](_0x2ceaa5);
        break;
    case _0x19eb03['type']:
        this['handlePlayGame'](_0x2ceaa5);
        break;
    case _0x18a870['type']:
        this['handleSelectAnimal'](_0x2ceaa5);
        break;
    case _0x2295ae:
        this['handleAnimalSelected'](_0x2ceaa5);
        break;
    }
} ['handleSpectateClient'](_0x37ae4e) {
    this['state'] = _0x1d2bd4;
    const {
        sessionId: _0x38686b,
        gameVersion: _0x31b620,
        gameMode: _0x26c22b,
        season: _0x4b9791,
        serverId: _0x1c7ea3
    } = _0x5a12b3['handle'](_0x37ae4e);
    this['serverInfo']['setGameSessionId'](_0x38686b), this['serverInfo']['setGameVersion'](_0x31b620), this['serverInfo']['setGameMode'](_0x26c22b), this['serverInfo']['setSeason'](_0x4b9791), this['serverInfo']['setServerId'](_0x1c7ea3), _0x38686b ? (this['serverInfo']['setGameSessionId'](_0x38686b), this['emitter']['emit'](_0x4752e5['SpectateClient'], {
        'success': !![],
        'serverInfo': this['serverInfo']
    }), setTimeout(() => {
        $bus['emit']($bus['EVENTS']['ENABLE_PLAY_BUTTON']), $bus['emit']($bus['EVENTS']['ENABLE_SERVER_CONTROLS']);
    }, 0x3e8)) : (this['emitter']['emit'](_0x4752e5['SpectateClient'], {
        'success': ![],
        'serverInfo': this['serverInfo']
    }), $bus['emit']($bus['EVENTS']['ENABLE_SERVER_CONTROLS']));
} ['handleClientResize'](_0x440a0b) {
    const {
        gameWidth: _0x3bda15,
        gameHeight: _0x2d1975,
        camX: _0x57ae25,
        camY: _0x2f370f,
        camZoom: _0x29366e
    } = _0xce4d14['handle'](_0x440a0b);
    this['emitter']['emit'](_0x4752e5['ClientResize'], {
        'success': !![],
        'serverInfo': _0x50272c,
        'gameWidth': _0x3bda15,
        'gameHeight': _0x2d1975,
        'camX': _0x57ae25,
        'camY': _0x2f370f,
        'camZoom': _0x29366e
    });
} ['handleSelectAnimal'](_0x1b0979) {
    this['state'] = _0x506a49;
    const {
        isSpectator: _0x128a8b,
        gameSession: _0x56330a,
        timeout: _0x2088b5,
        upgradeLevel: _0x228c39,
        animalChoices: _0xc5c556
    } = _0x18a870['handle'](_0x1b0979);
    this['emitter']['emit'](_0x4752e5['SelectAnimal'], {
        'success': !![],
        'serverInfo': this['serverInfo'],
        'isSpectator': _0x128a8b,
        'gameSession': _0x56330a,
        'timeout': _0x2088b5,
        'upgradeLevel': _0x228c39,
        'animalChoices': _0xc5c556
    });
} ['handleAnimalSelected'](_0x525869) {
    this['state'] = _0x36ab25;
} ['sendFirstConnect']() {
    _0x8ab199['send'](this['ws'], this['serverInfo']['sessionId']), this['emitter']['emit'](_0x4752e5['FirstConnect'], {
        'success': !![],
        'serverInfo': this['serverInfo']
    });
} ['playGame'](_0x27d0b1, _0x442b55, _0x32a8bf) {
    _0x19eb03['send'](this['ws'], _0x27d0b1, _0x442b55, _0x32a8bf);
} ['selectAnimal'](_0x49250) {
    _0x18a870['send'](this['ws'], _0x49250), this['emitter']['emit'](_0x4752e5['AnimalSelected'], {
        'success': !![],
        'serverInfo': this['serverInfo'],
        'animalChoiceIndex': _0x49250
    });
}
}
const _0x50272c = new _0x538802({
    'name': 'LOCAL',
    'region': 'local',
    'url': 'localhost',
    'gameMode': 0x0
}),
_0x520b36 = new _0x488419({
    'serverInfo': _0x50272c
}),
_0x1c430f = () => {
    try {
        _0x520b36['connect'](), _0x520b36['ws']['addEventListener']('open', () => {
            if (_0x520b36['ws']['readyState'] === WebSocket['OPEN']) console['log']('::: testing suite ::: Test Passed!', 'ws.readyState:', _0x520b36['ws']['readyState']);
            else console['log']('::: testing suite ::: Test Failed! readyState was not equal to WebSocket.OPEN. ws.readyState:', _0x520b36['ws']['readyState']);
            _0x520b36['ws']['close']();
        });
    } catch (_0x52210e) {
        console['log']('::: tesitng-suite ::: Test Failed!', _0x52210e), _0x520b36['ws']['close']();
    }
},
_0x25ff77 = () => {
    try {
        _0x520b36['connect'](), _0x520b36['ws']['addEventListener']('open', () => {
            if (_0x520b36['ws']['readyState'] === WebSocket['OPEN']) _0x520b36['sendFirstConnect']();
        }), _0x520b36['ws']['addEventListener']('message', async _0x4fae46 => {
            const _0x3169bd = new DataView(_0x4fae46['data']),
                _0x5b490f = new _0x22c962(_0x3169bd),
                _0x5510e9 = _0x5b490f['readUInt8']();
            console['log']('::: testing-suite message handled ::: msgType:', _0x5510e9);
            const _0x3ea3c8 = _0x5510e9 == _0x5a12b3['type'];
            console['log']('::: testing-suite isSpectateClient:', _0x3ea3c8);
            if (_0x3ea3c8) {
                console['log']('::: testing-suite reading SpectateClient msg :::');
                const _0x47f605 = _0x5b490f['readString'](),
                    _0x48a689 = _0x5b490f['readUInt16'](),
                    _0x760da2 = _0x5b490f['readUInt8'](),
                    _0x4f3a87 = _0x5b490f['readString']();
                console['log']('::: testing-suite received SpectateClient :::', _0x47f605, _0x48a689, _0x760da2, _0x4f3a87);
            }
        });
    } catch (_0x171535) {
        console['log']('::: tesitng-suite ::: Test Failed!', _0x171535), _0x520b36['ws']['close']();
    }
};
class _0x5e3c00 {
constructor() {
    this['isEGInitialized'] = ![];
} ['initEGAps']() {
    window['egAps'] && window['egAps']['launchAds'] && !this['isEGInitialized'] ? (this['isEGInitialized'] = !![], window['egAps']['launchAds'](), console['log']('::: EG:launchAds :::')) : console['log']('::: EGAps:missing :::');
} ['loadEGScripts']() {
    return new Promise((_0x17c8b2, _0x317af3) => {
        try {
            !!window['egAps'] ? (console['log']('gtm :: loaded - init'), _0x17c8b2()) : (console['log']('gtm :: add listener'), window['addEventListener']('eg_gtm_loaded', function () {
                console['log']('gtm :: init'), _0x17c8b2();
            }));
        } catch (_0x37cad0) {
            _0x317af3(_0x37cad0);
        }
    });
} ['playVideoAd'](_0x157176) {
    window['egApsListener'] = _0x157176, this['isEGInitialized'] ? (console['log']('::: EG:play video ad :::'), window['dataLayer']['push']({
        'event': 'mopVideo'
    })) : _0x157176({
        'type': 'preroll',
        'event': 'empty'
    });
} ['playIncentivizedVideoAd'](_0x465cc5) {
    window['egApsListener'] = _0x465cc5, this['isEGInitialized'] ? (console['log']('::: EG:play video ad :::'), window['dataLayer']['push']({
        'event': 'mopRewarded'
    })) : _0x465cc5({
        'type': 'preroll',
        'event': 'empty'
    });
}
}
const _0x38f4d3 = new _0x5e3c00();
var _0x45b0ad = 0x0,
_0x30aaa6 = ![],
_0x58bfbf = ![],
_0x4c0255 = ![],
_0x11b26a;

function _0x51d965() {
const _0x3f0a52 = document['getElementById']('eg-ccpa-msg-id');
_0x3f0a52 && _0x3f0a52['remove']();
}

function _0x2b9c4b() {
return new Promise(_0x2a0b58 => {
    if (_0x58bfbf || _0x30aaa6) _0x2a0b58();
    else !_0x5e3c00['isEGInitialized'] && _0x38f4d3['loadEGScripts']()['then'](() => {
        _0x38f4d3['initEGAps'](), _0x58bfbf = !![], _0x2a0b58();
    })['catch'](_0xb4d5c4 => {
        console['log']('::: initAdController error :::', _0xb4d5c4), reject();
    });
});
}
const _0x4163c1 = () => new Promise(_0x3cc2b2 => {
const _0x2df8a2 = 'https://api.enthusiastgaming.net/scripts/cdn.enthusiast.gg/script/eg-aps/release/eg-aps-bootstrap-v2.0.0.bundle.js?site=mope.io';
fetch(new Request(_0x2df8a2))['then'](_0x2e3606 => _0x3cc2b2(![]))['catch'](_0x2f095f => _0x3cc2b2(!![]));
});
async function _0x16cba8() {
_0x30aaa6 = ![];
const _0x3ef4d8 = 'https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js';
try {
    await fetch(new Request(_0x3ef4d8))['catch'](_0x5b092b => _0x30aaa6 = !![]);
} catch (_0x33e1b9) {
    _0x30aaa6 = !![];
} finally {
    console['log']('AdBlock Enabled: ' + _0x30aaa6);
}
}!_0x1c90e9 && (document['getElementById']('xTRbLiXhOoyu_adsbl0ck') ? _0x16cba8() : _0x30aaa6 = !![], console['log']('ad block enabled:', _0x30aaa6));

function _0x2c607e() {
var _0x19563d = navigator['userAgent']['match'](/Chrom(e|ium)\/([0-9]+)\./);
return _0x19563d ? parseInt(_0x19563d[0x2], 0xa) : ![];
}
var _0x347b72 = !_0x1c90e9 && _0x2c607e() && (_0x2c607e() == 0x54 || _0x2c607e() == 0x55),
_0x291975 = ![];
if (_0x347b72 && !_0x291975) {
console['log']('slow chrome!');
var _0x16b646 = document['getElementById']('chromebugdiv');
_0x16b646 && (_0x16b646['style']['display'] = 'block');
var _0x16b646 = document['getElementById']('chromebugp');
_0x16b646 && (_0x16b646['innerHTML'] = 'Your browser (Chrome V ' + _0x2c607e() + ') has a bug, which can make mope.io laggy!');
var _0x16b646 = document['getElementById']('chromebug_closebut');
_0x16b646 && (_0x16b646['onclick'] = function () {
    var _0x56e7c3 = document['getElementById']('chromebugdiv');
    if (_0x56e7c3) _0x56e7c3['parentNode']['removeChild'](_0x56e7c3);
    if (window['localStorage']) try {
        window['localStorage']['setItem']('chromeBug_closed', !![]);
    } catch (_0x28d2ac) {}
});
} else {
var _0x16b646 = document['getElementById']('chromebugdiv');
if (_0x16b646) _0x16b646['parentNode']['removeChild'](_0x16b646);
}
console['log']('Chrome version ' + _0x2c607e());
var _0x264ee1 = _0x33a617(document['location']['search']),
_0x522833 = _0x264ee1['y8BannerModify'] > 0x0;
if (_0x1c90e9 || _0x522833) {
var _0x16b646, _0x16b646 = document['getElementById']('appsDiv');
if (_0x16b646) _0x16b646['parentNode']['removeChild'](_0x16b646);
}
var _0x5b92c5 = 0x0,
_0x259b80 = 0x0;
if (window['localStorage']) {
var _0x33eaeb = window['localStorage']['getItem']('lastAdShowT') * 0x1 || 0x0,
    _0x30cb2b = +new Date() - _0x33eaeb;
_0x259b80 = _0x30cb2b > 0x0 ? _0x33eaeb : 0x0, _0x5b92c5 = window['localStorage']['getItem']('gamesSinceAd') * 0x1, _0x5b92c5 < 0x0 && (_0x5b92c5 = 0x0), console['log']('videoAd: ' + _0x5b92c5 + ' games since last ad!');
}
var _0x459a5e = +new Date(),
_0x22a203 = ![],
_0x291562 = () => new Promise(async _0x5d9f6f => {
    _0x30aaa6 = await _0x4163c1(), _0x5d9f6f(!_0x30aaa6 && !_0x4c0255);
}),
_0x1188bb = !![],
_0x1da76d = function () {
    var _0x5220bc = _0x36b8fc || location['protocol'] == 'file:',
        _0x4cd654 = !_0x5220bc;
    return _0x4cd654;
};
const _0x15d6f4 = () => {
const _0x4f9a9d = 0x3ac / 0x21c,
    _0xcb7eaf = window['innerWidth'] * 0.55;
return {
    'width': Math['round'](_0xcb7eaf),
    'height': Math['round'](_0xcb7eaf / _0x4f9a9d)
};
};

function _0x30018f() {
try {
    console['log']('Refreshing banner ads'), _0x2aa201($bus['CONSTANTS']['AD_SCREEN_LAYOUTS']['MENU']);
} catch (_0x11782d) {
    console['log']('BANNERADS: error refreshing: ' + _0x11782d);
}
_0x596340(), _0x4e8c25(), _0x3348a7();
}

function _0x335fd4() {
let _0x51ddb7 = null;
const {
    innerWidth: _0x2ea102,
    innerHeight: _0x4b3e15
} = window;
console['log']('::: ad-tech detecting dynamic bottom ad :::');
if (_0x4b3e15 >= 0x19e) _0x51ddb7 = $bus['CONSTANTS']['AD_IDS']['BOTTOM']['SMALL'];
_0x2ea102 > 0x300 && _0x4b3e15 >= 0x19e && (_0x51ddb7 = $bus['CONSTANTS']['AD_IDS']['BOTTOM']['SMALL']);
if (_0x51ddb7) console['log']('::: ad-tech Showing Bottom Ad :::');
return _0x51ddb7;
}
const _0x3a079f = () => {
    return (_0x1c90e9 || window['innerWidth'] <= 0x300) && window['innerWidth'] < 0x3e8;
},
_0x3ea023 = {},
_0x11adab = {};

function _0x1c3d88(_0x1e49bb) {
let _0x2b876e, _0x334242;
_0x11adab[_0x1e49bb] = Date['now']();
_0x3ea023[_0x1e49bb] && ({
    el: _0x2b876e,
    provider: _0x334242
} = _0x3ea023[_0x1e49bb], _0x2b876e['style']['visibility'] = 'hidden', _0x2b876e['style']['opacity'] = '0', _0x2b876e['style']['pointerEvents'] = 'none', _0x334242 === $bus['CONSTANTS']['AD_PROVIDERS']['ADINPLAY'] && (_0x2b876e['parentElement'] && _0x2b876e['parentElement'] !== document['body'] && (_0x2b876e['parentElement']['removeChild'](_0x2b876e), document['body']['appendChild'](_0x2b876e))));
const _0x5ca155 = document['getElementById'](_0x1e49bb);
_0x5ca155 && _0x5ca155 !== _0x2b876e && (_0x5ca155['style']['visibility'] = 'hidden', _0x5ca155['style']['opacity'] = '0', _0x5ca155['style']['pointerEvents'] = 'none'), $bus['emit']($bus['EVENTS']['HIDE_AD'], _0x1e49bb);
}
let _0x51dc1d = 0x0;

function _0x2a374e(_0x36c130) {
const _0x2758eb = _0x20f356();
if (_0x2758eb['includes'](_0x36c130))
    for (let _0x5db2f5 = 0x0; _0x5db2f5 < _0x2758eb['length']; _0x5db2f5++) {
        const _0x25182a = _0x2758eb[_0x5db2f5];
        if (_0x25182a !== _0x36c130 && _0x25182a in _0x3ea023) {
            _0x1c3d88(_0x25182a);
            break;
        }
    }
}

function _0x20f356() {
return Object['keys']($bus['CONSTANTS']['AD_IDS']['BOTTOM'])['map'](_0x269d9e => $bus['CONSTANTS']['AD_IDS']['BOTTOM'][_0x269d9e]);
}

function _0x204a50(_0x35bfc4) {
return _0x20f356()['includes'](_0x35bfc4);
}
window['SA_FALLBACK_HANDLER'] = () => {
_0x5872b3(adId, ![]);
};

function _0x492e50(_0xc4c2dd, _0x18e15b) {
if (!(_0xc4c2dd in _0x3ea023)) return ![];
const {
    el: _0xb46163,
    ts: _0x1f0c1e,
    provider: _0x1a1598
} = _0x3ea023[_0xc4c2dd];
if (Date['now']() - _0x1f0c1e < 0x30d4) return $bus['emit']($bus['EVENTS']['SHOW_AD_START'], _0xc4c2dd), _0xb46163['style']['visibility'] = 'visible', _0xb46163['style']['opacity'] = '1', _0xb46163['style']['pointerEvents'] = 'auto', $bus['emit']($bus['EVENTS']['SHOW_AD_LOADED'], _0x3ea023[_0xc4c2dd]), !![];
return ![];
}

function _0x1b669f(_0x4d91a8, _0x41ccf8, _0x6d8603) {
!_0x3ea023[_0x4d91a8] && (_0x3ea023[_0x4d91a8] = {}), console['log']('RESOLVING AD:', _0x4d91a8, _0x41ccf8, _0x6d8603), _0x3ea023[_0x4d91a8]['el'] = _0x41ccf8, _0x3ea023[_0x4d91a8]['ts'] = Date['now'](), _0x3ea023[_0x4d91a8]['provider'] = _0x6d8603, _0x3ea023[_0x4d91a8]['adId'] = _0x4d91a8, _0x41ccf8['style']['visibility'] = 'visible', _0x41ccf8['style']['opacity'] = '1', _0x41ccf8['style']['pointerEvents'] = 'auto', $bus['emit']($bus['EVENTS']['SHOW_AD_LOADED'], _0x3ea023[_0x4d91a8]);
}
async function _0x5872b3(_0x3e1597, _0x3d5bff) {
let _0x7902da = Date['now']();
_0x204a50(_0x3e1597) && _0x2a374e(_0x3e1597);
if (_0x582df4(_0x3e1597, _0x7902da)) return _0x1c3d88(_0x3e1597);;
if (_0x492e50(_0x3e1597, _0x3d5bff)) return;
$bus['emit']($bus['EVENTS']['SHOW_AD_START'], _0x3e1597);
let _0x4a91e6 = ![];
_0x7902da = Date['now']();
if (_0x582df4(_0x7902da, _0x3e1597)) return _0x1c3d88(_0x3e1597);
else _0x4a91e6 && _0x1b669f(_0x3e1597, _0x4a91e6, $bus['CONSTANTS']['AD_PROVIDERS']['ADINPLAY']);
}

function _0x582df4(_0x5c5b89, _0x2fcab5) {
if (!_0x11adab[_0x5c5b89]) return ![];
return _0x11adab[_0x5c5b89] > _0x2fcab5;
}
async function _0x1f0060(_0x12b0d9) {
const _0x1fb145 = Date['now']();
if (typeof aiptag === 'undefined' || !aiptag || !aiptag['cmd'] || !aiptag['cmd']['display']) {
    console['error']('aiptag was undefined return early.');
    return;
};
return new Promise((_0x55e8b9, _0x2fce53) => {
    aiptag['cmd']['display']['push'](function () {
        if (typeof aipDisplayTag !== 'undefined') {
            aipDisplayTag['display'](_0x12b0d9);
            let _0x4c847d = document['getElementById'](_0x12b0d9);
            return !_0x4c847d && (_0x3ea023[_0x12b0d9] && _0x3ea023[_0x12b0d9]['provider'] === $bus['CONSTANTS']['AD_PROVIDERS']['ADINPLAY']) && (_0x4c847d = _0x3ea023[_0x12b0d9]['el']), _0x55e8b9(_0x4c847d);
        } else return console['error']('Aip display tag was undefined'), _0x55e8b9(null);
    });
});
}

function _0x98bd55() {
window['innerWidth'] > 0x4c4 ? (_0x5872b3($bus['CONSTANTS']['AD_IDS']['RIGHT']), _0x5872b3($bus['CONSTANTS']['AD_IDS']['LEFT'])) : (_0x1c3d88($bus['CONSTANTS']['AD_IDS']['RIGHT']), _0x1c3d88($bus['CONSTANTS']['AD_IDS']['LEFT']));
}
const _0x31dbd9 = () => {
    _0x3ea023[$bus['CONSTANTS']['AD_IDS']['BOTTOM']['SMALL']] && _0x1c3d88($bus['CONSTANTS']['AD_IDS']['BOTTOM']['SMALL']), _0x3ea023[$bus['CONSTANTS']['AD_IDS']['BOTTOM']['MEDIUM']] && _0x1c3d88($bus['CONSTANTS']['AD_IDS']['BOTTOM']['MEDIUM']), _0x3ea023[$bus['CONSTANTS']['AD_IDS']['BOTTOM']['LARGE']] && _0x1c3d88($bus['CONSTANTS']['AD_IDS']['BOTTOM']['LARGE']);
},
_0xf57782 = () => {
    _0x1c3d88($bus['CONSTANTS']['AD_IDS']['HOME']);
    const _0x33895f = _0x335fd4();
    _0x33895f ? _0x5872b3(_0x33895f) : _0x31dbd9(), _0x3a079f() ? _0x1c3d88($bus['CONSTANTS']['AD_IDS']['RIGHT']) : window['innerWidth'] > 0x4c4 ? (_0x5872b3($bus['CONSTANTS']['AD_IDS']['LEFT']), _0x5872b3($bus['CONSTANTS']['AD_IDS']['RIGHT'])) : (_0x1c3d88($bus['CONSTANTS']['AD_IDS']['LEFT']), _0x1c3d88($bus['CONSTANTS']['AD_IDS']['RIGHT']));
},
_0x1b66f5 = () => {
    console['log'](':;'), _0x5872b3($bus['CONSTANTS']['AD_IDS']['HOME']), _0x98bd55(), _0x31dbd9();
},
_0x4f2495 = () => {
    const _0x2fdded = 'enthusiast';
    if (window['egAps']) {
        const _0x15081e = document['querySelectorAll']('[data-provider=\"' + _0x2fdded + '\"]');
        console['log']('::: ad-tech renderMopeDisplayAds elements :::', _0x15081e), _0x15081e['forEach'](_0x9c3c5e => {
            console['log']('::: ad-tech renderMopeDisplayAds elem :::', _0x9c3c5e, _0x9c3c5e['id']), _0x9c3c5e['id'] && (console['log'](':: ad-tech window.egAps.render([' + _0x9c3c5e['id'] + ']) ::'), window['egAps']['render']([_0x9c3c5e['id']]));
        });
    }
},
_0x2aa201 = function (_0x1ee3b7, _0x4a63bc) {
    const {
        ARENA: _0x3ecbfc,
        UPGRADE: _0x50212f,
        MENU: _0x9e1c2e
    } = $bus['CONSTANTS']['AD_SCREEN_LAYOUTS'];
    console['log']('::: ad-tech: mopeAds() location: ' + _0x1ee3b7 + ' :::');
    switch (_0x1ee3b7) {
    case _0x50212f:
        _0xf57782();
        break;
    case _0x3ecbfc:
        if (_0x19efaa) return;
        _0x1c3d88($bus['CONSTANTS']['AD_IDS']['LEFT']), _0xf57782();
        break;
    case _0x9e1c2e:
        if (_0x19efaa) return;
        _0x1b66f5();
        break;
    }
    if (_0x11b26a !== _0x1ee3b7 || _0x1ee3b7 === _0x50212f) {
        _0x11b26a = _0x1ee3b7;
        if (_0x58bfbf) console['time'](':: ad-tech renderMopeDisplayAds ::'), _0x4f2495(), console['timeEnd'](':: ad-tech renderMopeDisplayAds ::'), setTimeout(_0x51d965, 0xfa0);
        else !_0x58bfbf && _0x2b9c4b()['then'](() => {
            setTimeout(_0x51d965, 0xfa0);
        })['catch'](() => setTimeout(_0x51d965, 0xfa0));
    }!_0x4a63bc && _0x4e8c25();
};
$bus['on']($bus['EVENTS']['UI_PRESS_PLAY'], () => {
_0x291562()['then'](_0x1cdd6f => {
    _0x1cdd6f ? _0x408b84() : window['onVideoAdFinished'](![]);
}), _0x1c3d88($bus['CONSTANTS']['AD_IDS']['HOME']);
});
var _0x38c368 = ![];

function _0x14e80c(_0x130f4e) {}
var _0x3e3937 = ![],
_0x13239d = ![],
_0x103221 = new _0x128c61(0xa, 'white');
_0x103221['setText']('Connecting...'), _0x103221['renderScale'] = 0x1;
var _0x408b84 = async function () {
console['log']('::: ad-tech ::: Attempting to play Preroll Video Ad.'), $bus['emit']($bus['EVENTS']['START_VIDEO_AD']);
if (_0x30aaa6 || _0x4c0255) return;
_0x4c0255 = !![];
let _0x2d3444 = ![];
setTimeout(() => {
    !_0x2d3444 && (console['log']('::: ad-tech ::: Did not receive preroll ad response from egApp in time (7s)'), $bus['emit']($bus['EVENTS']['HIDE_VIDEO_AD']), window['onVideoAdFinished'](![]));
}, 0x1b58), $bus['emit']($bus['EVENTS']['SHOW_VIDEO_AD']), _0x38f4d3['playVideoAd'](_0x127c82 => {
    _0x2d3444 = !![], console['log']('::: ad-tech ::: playVideoAd callback hit!', _0x127c82);
    if (_0x127c82['event'] === 'start') _0x13239d = !![], $bus['emit']($bus['EVENTS']['START_VIDEO_AD']);
    else {
        if (_0x127c82['event'] === 'skipped' || _0x127c82['event'] === 'empty') $bus['emit']($bus['EVENTS']['HIDE_VIDEO_AD']), window['onVideoAdFinished'](![]);
        else _0x127c82['event'] === 'finished' && ($bus['emit']($bus['EVENTS']['HIDE_VIDEO_AD']), window['onVideoAdFinished'](!![]));
    }
});
};
$bus['on']($bus['EVENTS']['REQUEST_INCENTIVIZED_AD'], () => {
console['log']('::: iandev ::: Requesting Incentivized Ads.'), _0x4ce07a['playIncentivizedVideoAd']();
}), window['onVideoAdFinished'] = function (_0x44d213) {
$bus['emit']($bus['EVENTS']['END_VIDEO_AD']), _0x22a203 = ![], _0x13239d = ![], _0x3e3937 = ![], _0x29e4e7['focus']();
if (_0x44d213) {
    _0x5b92c5 = 0x0, _0x259b80 = +new Date();
    if (window['localStorage']) try {
        window['localStorage']['setItem']('lastAdShowT', _0x259b80), window['localStorage']['setItem']('gamesSinceAd', _0x5b92c5);
    } catch (_0x428b49) {
        console['log']('localstorage error saving ads');
    } else console['log']('no localstorage, cant save ad nums');
} else console['log']('not successful play, will play ad again');
if (_0x44d213 && (!_0x19efaa || _0x19efaa && _0x361438)) {
    const _0x3fe500 = _0x19efaa ? $bus['CONSTANTS']['AD_SCREEN_LAYOUTS']['UPGRADE'] : $bus['CONSTANTS']['AD_SCREEN_LAYOUTS']['MENU'];
    _0x2aa201(_0x3fe500), console['log']('VIDEOADS: Video done (success: ' + _0x44d213 + '), joining game!');
    try {
        console['log']('::: video ad played joining game :::'), !_0x19efaa && _0x4dbb40(![]);
    } catch (_0x12a933) {
        console['error']('Error joining game after video ad:', _0x12a933);
    }
} else {
    if (!_0x19efaa || _0x19efaa && _0x361438) try {
        console['log']('::: video ad not played or skipped joining game :::'), !_0x19efaa && _0x4dbb40(![]);
    } catch (_0x4b0531) {
        console['error']('Error joining game after video ad:', _0x4b0531);
    }
}
};
var _0x3437fe = function (_0x418223, _0x5ab103, _0x16f434) {
var _0x39dea2 = document['head'] || document['getElementsByTagName']('head')[0x0],
    _0x26b561 = document['createElement']('script'),
    _0x571215 = !![];
_0x26b561['async'] = 'async', _0x26b561['type'] = 'text/javascript', _0x26b561['charset'] = 'UTF-8', _0x26b561['src'] = _0x418223, _0x26b561['onload'] = _0x26b561['onreadystatechange'] = function () {
    _0x571215 && (!_0x26b561['readyState'] || /loaded|complete/ ['test'](_0x26b561['readyState'])) && (_0x571215 = ![], _0x5ab103(), _0x26b561['onload'] = _0x26b561['onreadystatechange'] = null);
}, _0x39dea2['appendChild'](_0x26b561);
};
try {
_0x4163c1()['then'](_0x500a6b => {
    _0x30aaa6 = _0x500a6b;
    if (!_0x30aaa6) _0x2b9c4b();
});
} catch (_0x2be684) {
console['error']('Error initializing ads:', _0x2be684);
}

function _0x2f91e3() {
for (let _0x5422c8 in _0x3ea023) {
    _0x1c3d88(_0x5422c8);
}
$bus['emit']($bus['EVENTS']['HIDE_ALL_ADS']);
}
const _0x49180b = function () {
_0x2f91e3(), $bus['emit']($bus['EVENTS']['HIDE_ANIMAL_CHOICE']);
};
_0x49180b();
var _0x46a5fb;

function _0x540695(_0x20fc05) {
if (window['WebViewJavascriptBridge']) return _0x20fc05(WebViewJavascriptBridge);
if (window['WVJBCallbacks']) return window['WVJBCallbacks']['push'](_0x20fc05);
window['WVJBCallbacks'] = [_0x20fc05];
if (_0x4bdf09) {
    var _0xf6504e = document['createElement']('iframe');
    _0xf6504e['style']['display'] = 'none', _0xf6504e['src'] = 'wvjbscheme://__BRIDGE_LOADED__', document['documentElement']['appendChild'](_0xf6504e), setTimeout(function () {
        document['documentElement']['removeChild'](_0xf6504e);
    }, 0x0);
}
}
async function _0x1eab2d() {
return typeof _0x46a5fb === 'undefined' || !_0x46a5fb ? new Promise((_0x551364, _0x134a29) => {
    let _0x2ffa2e = setTimeout(() => {
        return _0x2ffa2e = null, _0x551364(null);
    }, 0x61a8);
    _0x540695(_0x3d222d => {
        if (_0x2ffa2e === null) return;
        return clearTimeout(_0x2ffa2e), _0x2ffa2e = null, _0x46a5fb = _0x3d222d, _0x551364(_0x3d222d);
    });
}) : _0x46a5fb;
}
_0x1c90e9 && (console['log']('Trying to setup the javascript ios bridge...'), _0x540695(function (_0x4ca78d) {
console['log']('Successfully set up bridge!'), _0x46a5fb = _0x4ca78d, setTimeout(() => {
    _0x4ca78d['callHandler']('client-bridge-ready'), _0x4ca78d['callHandler']('app-data', JSON['stringify']($config['mobileAppData']));
}, 0x0);
}));
async function _0x51894b() {
console['log']('showing mobile ad......');
const _0x291fc9 = await _0x1eab2d();
!_0x291fc9 ? console['error']('Could not find mobile native bridge.') : _0x291fc9['callHandler']('show-ad');
}
var _0xa98cf0 = !!navigator['userAgent']['platform'] && /iPad|iPhone|iPod/ ['test'](navigator['userAgent']['platform']),
_0x489216 = navigator['userAgent']['toLowerCase']()['indexOf']('android') > -0x1;
if ((_0xa98cf0 || _0x489216) && !_0x1c90e9) {
var _0x10f38f = ![];
if (window['localStorage']) {
    _0x10f38f = window['localStorage']['getItem']('oldVisitor') > 0x0;
    try {
        window['localStorage']['setItem']('oldVisitor', 0x1);
    } catch (_0x5ce655) {
        _0x10f38f = !![];
    }
}
if (!_0x10f38f) {
    if (_0xa98cf0) window['location']['href'] = 'https://itunes.apple.com/us/app/mope.io/id1086471119?ls=1&mt=8';
} else {}
}
console['log']('is mobile app:', _0x1c90e9), _0x1c90e9 && ((async () => {
console['log']('setting up mobile shop!');
const _0x1e9348 = await _0x1eab2d();
if (!_0x1e9348) {
    console['error']('Did not find a native bridge for mobile app.');
    return;
}
let _0x521eef = null;
_0x1e9348['registerHandler']('iap-data-failed', _0x10946d => {
    console['error']('Error when fetching iap data.. error:', _0x10946d);
}), _0x1e9348['registerHandler']('iap-data', _0x37e2ed => {
    const _0x471e49 = JSON['parse'](_0x37e2ed)['map'](_0x436200 => {
        return {
            'coins': _0x436200['title'],
            'id': _0x436200['id'],
            'description': _0x436200['description'],
            'price': _0x436200['price']
        };
    });
    $bus['emit']($bus['EVENTS']['RECEIVED_IN_APP_PURCHASE_DATA'], _0x471e49);
}), _0x1e9348['registerHandler']('iap-success', _0x5d3454 => {
    _0x5d3454 = typeof _0x5d3454 === 'string' ? JSON['parse'](_0x5d3454) : _0x5d3454;
    const _0x683d53 = _0x4bdf09 ? 'apple' : 'google';
    _0x521eef === _0x5d3454['productId'] && $bus['emit']($bus['EVENTS']['IN_APP_PURCHASE_GO_TO_PROCESSING'], _0x521eef);
    const _0x1d54c4 = _0x30d66c => {
            _0x521eef === _0x5d3454['productId'] && ($bus['emit']($bus['EVENTS']['IN_APP_PURCHASE_FAILED'], {
                'itemId': _0x521eef,
                'error': _0x30d66c
            }), _0x521eef = null, _0x1a7e4a('Error when processing purchase. Contact an admin if you did not receive your coins.', 'error'));
        },
        _0x27fb46 = async () => {
            _0x521eef === _0x5d3454['productId'] && (_0x1a7e4a('Successfully purchased product!', 'success'), await _0x267fd2(), $bus['emit']($bus['EVENTS']['IN_APP_PURCHASE_SUCCESS'], _0x521eef), _0x521eef = null);
        };
    $['ajax']({
        'url': _0x42244c + '/processInAppPurchase',
        'type': 'POST',
        'dataType': 'json',
        'data': {
            'userId': _0x2d1c6a,
            'passwordToken': _0xc700b6,
            'service': _0x683d53,
            ..._0x5d3454
        },
        'success': function (_0xfcffe7) {
            console['log']('/processInAppPurchase success response', _0xfcffe7, _0xfcffe7['success']), _0xfcffe7['success'] ? _0x27fb46() : _0x1d54c4(_0xfcffe7['error']);
        },
        'error': function (_0x2fd6a1) {
            console['log']('/processInAppPurchase error response', _0x2fd6a1, _0x2fd6a1['success'], _0x2fd6a1['error']), _0x1d54c4(_0x2fd6a1['error']);
        }
    });
}), _0x1e9348['registerHandler']('iap-deferred', _0x4c2ba1 => {
    console['error']('iap for product:', _0x4c2ba1, 'deferred'), $bus['emit']($bus['EVENTS']['IN_APP_PURCHASE_FAILED'], {
        'itemId': _0x521eef,
        'error': 'Deferred purchase.',
        'deferred': !![]
    }), _0x521eef = null;
}), _0x1e9348['registerHandler']('iap-failed', _0x5adaa1 => {
    (_0x521eef && _0x5adaa1 == _0x521eef || !_0x5adaa1) && (_0x5adaa1 = 'There was an error while purchasing the current item. Reload the app and try again or if the problem persists contact an admin.'), $bus['emit']($bus['EVENTS']['IN_APP_PURCHASE_FAILED'], {
        'itemId': _0x521eef,
        'error': _0x5adaa1
    }), _0x521eef = null;
}), $bus['on']($bus['EVENTS']['UI_SELECTED_IN_APP_PURCHASE_ITEM'], _0x141fa3 => {
    if (_0x521eef !== null) return $bus['emit']($bus['EVENTS']['IN_APP_PURCHASE_FAILED'], {
        'itemId': _0x141fa3,
        'error': 'Wait until the current purchasing item is complete.'
    });
    _0x521eef = _0x141fa3, _0x1e9348['callHandler']('iap-purchase', _0x141fa3);
});
})());
var _0xa91f52 = ['Team Mode', 'Wild Mope'],
_0x1e2a63 = ![],
_0x537a06 = ![],
_0x59086a, _0x2e7867 = [],
_0x42e752 = null;
let _0x20554a = null;
var _0x1b6a0b = null,
_0x1b0d0e = {};

function _0x38442a(_0x4ef31a) {
return _0x4ef31a in _0x1b0d0e ? Math['round'](_0x1b0d0e[_0x4ef31a]) : '?';
}
var _0x27c00c = function (_0x358d51) {
    this['serverObj'] = _0x358d51;
    var _0x17f8cc = window['location']['protocol'] === 'https:' ? 'wss://' : 'ws://',
        _0x443dbe = window['location']['protocol'] === 'https:' ? 0x1bb : 0x50,
        _0x161cbf = _0x17f8cc + this['serverObj']['serverConnURL'] + ':' + _0x443dbe;
    this['testWs'] = new WebSocket(_0x161cbf), this['startT'] = +new Date(), this['testWs']['binaryType'] = 'arraybuffer';
    var _0x3d112a = this;
    this['pingsRec'] = 0x0, this['pingsDelayMsTot'] = 0x0, this['testWs']['onopen'] = function () {
        _0x3d112a['sendPing']();
    }, this['sendPing'] = function () {
        var _0x19ecb9 = new _0xb3282e(0x1);
        _0x19ecb9['writeUInt8'](0xff), _0x3d112a['testWs']['send'](_0x19ecb9['dataView']['buffer']), this['startT'] = +new Date();
    }, this['testWs']['onmessage'] = function (_0x5c7cf4) {
        var _0x5c7cf4 = new _0x22c962(new DataView(_0x5c7cf4['data']));
        if (_0x5c7cf4['readUInt8']() == 0xff) {
            var _0xca2464 = +new Date() - _0x3d112a['startT'];
            _0x3d112a['pingsRec'] += 0x1, _0x3d112a['pingsDelayMsTot'] += _0xca2464, _0x3d112a['pingsRec'] >= 0x4 ? (_0x3d112a['serverObj']['ping'] = _0x3d112a['pingsDelayMsTot'] / _0x3d112a['pingsRec'], _0x1b0d0e[_0x3d112a['serverObj']['region']] = _0x3d112a['serverObj']['ping'], _0x3d112a['testWs']['close'](), _0x3aff5b(_0x3d112a)) : _0x3d112a['sendPing']();
        }
    }, this['testWs']['onerror'] = function (_0x354485) {
        console['log']('TestWS: error connecting to server ' + _0x3d112a['serverObj']['name'] + ' IP ' + _0x3d112a['serverObj']['ip'] + _0x354485);
    }, this['testWs']['onclose'] = function (_0x4a4646) {};
},
_0x40c8b8 = 0x0;

function _0x42748f(_0x346049) {
if (_0x1e2a63) return;
_0x40c8b8 = 0x0, _0x1b6a0b = _0x346049, _0x1e2a63 = !![];
for (var _0x1a9183 in _0x5db4bd) {
    if (_0x5db4bd['hasOwnProperty'](_0x1a9183) && _0x5db4bd[_0x1a9183]['length'] > 0x0 && !_0x55e172(_0x1a9183)) {
        console['log']('main server: ', _0x5db4bd[_0x1a9183][0x0]);
        var _0x5c03e9 = _0x5db4bd[_0x1a9183][0x0];
        _0x2e7867['push'](new _0x27c00c(_0x5c03e9));
    }
}
_0x59086a = setTimeout(function () {
    if (_0x40c8b8 == 0x0) console['log']('Doing slower ping test...'), _0x59086a = setTimeout(function () {
        for (var _0x4c1e9a = 0x0; _0x4c1e9a < _0x2e7867['length']; _0x4c1e9a++) {
            _0x2e7867[_0x4c1e9a]['testWs']['close']();
        }
        _0x4f434c();
    }, 0x1388);
    else {
        for (var _0x21056d = 0x0; _0x21056d < _0x2e7867['length']; _0x21056d++) {
            _0x2e7867[_0x21056d]['testWs']['close']();
        }
        _0x4f434c();
    }
}, 0x4b0);
}

function _0x460d18(_0x1a4524) {}

function _0x3aff5b(_0x37767e) {
console['log']('::: ping test | aTest :::', _0x37767e);
if (_0x37767e['serverObj']['gm'] == 0x0 && (!_0x42e752 || _0x37767e['serverObj']['ping'] < _0x42e752['ping'])) _0x42e752 = _0x37767e['serverObj'];
else {
    if (_0x37767e['serverObj']['gm'] == 0x3 && (!_0x20554a || _0x37767e['serverObj']['ping'] < _0x20554a['ping'])) _0x20554a = _0x37767e['serverObj'];
}
var _0xce2e7c = _0x2e7867['indexOf'](_0x37767e); - 0x1 != _0xce2e7c && _0x2e7867['splice'](_0xce2e7c, 0x1);
_0x40c8b8 += 0x1;
if (_0x2e7867['length'] == 0x0) {
    if (_0x59086a) clearTimeout(_0x59086a);
    _0x4f434c();
}
}

function _0x4f434c() {
_0x1e2a63 && (_0x537a06 = !![]);
_0x1e2a63 = ![];
if (_0x42e752) console['log']('::: ping test | ffa result :::', _0x42e752['region'], _0x42e752['ping']);
if (_0x20554a) console['log']('::: ping test | team result :::', _0x20554a['region'], _0x20554a['ping']);
if (_0x51cece == 0x0 && _0x42e752) _0x3f3392 = _0x42e752['region'];
else _0x51cece == 0x3 && _0x20554a && (_0x3f3392 = _0x20554a['region']);
console['log']('::: ping test result | curRegion :::', _0x3f3392), _0x1b6a0b(), $bus['emit']($bus['EVENTS']['PING_TEST_FINISH'], _0x1b0d0e);
}

function _0x55e172(_0x447dbe) {
for (var _0x3922f2 = 0x0; _0x3922f2 <= _0xa91f52['length']; _0x3922f2++) {
    if (_0xa91f52[_0x3922f2] == _0x447dbe) return !![];
}
return ![];
}
var _0x5d863d = '...',
_0x4e89d3 = 'mope.io',
_0x484f60 = 0x0,
_0x46868a = 0x0,
_0x2e40d4 = _0x49d118,
_0x257e2d = 0x0,
_0x5c69a4 = 0x0,
_0x19efaa = ![],
_0x34ea77 = ![],
_0x366642 = ![],
_0x535907 = ![],
_0x399f7f = +new Date(),
_0x44b94b = ![];
let _0x1304b8 = ![];
var _0x170e07 = ![],
_0x179c86 = {},
_0x51cece = 0x0,
_0x42d35c = 0x0,
_0x31b5af = 0x26326,
_0x2ae196 = [],
_0x124995 = [],
_0x5db4bd = {};

function _0x564a92(_0x16a155) {
_0x124995['push'](_0x16a155), _0x5db4bd[_0x16a155] = [];
}
_0x34e092['prototype'] = {
'name': 'Server',
'ip': '0.0.0.0',
'serverConnURL': '0.0.0.0',
'region': '',
'playersCount': -0x2,
'gameMode': 0x0,
'BR_waitingForPlayers': ![],
'ping': 0x2710,
'domOptionIndex': 0x0,
'getServerListString': function () {
    var _0x3dfce0 = '';
    if (this['gameMode'] == 0x2) _0x3dfce0 = this['BR_waitingForPlayers'] ? ' -STARTING NEW GAME' : ' -GAME IN PROGRESS';
    var _0x51694c = this['playersCount'] < 0x0 ? '...' : this['playersCount'],
        _0x5eb430 = this['name'] + ' [' + _0x51694c + ' players ' + (this['playersCount'] >= _0xa93d97 ? '-FULL!' : '') + ']' + _0x3dfce0;
    return _0x5eb430;
}
};

function _0x34e092(_0x1e5ddf, _0x2ebc12, _0x35093b, _0xf43a95) {
this['name'] = _0x1e5ddf, this['ip'] = _0x2ebc12, this['serverConnURL'] = _0x2ebc12, this['region'] = _0x35093b, this['gm'] = _0xf43a95;
}

function _0x4db56c(_0x34c25b, _0x24e7e8, _0x3a5929, _0x109ca6 = 0x0) {
var _0x3d4f10 = new _0x34e092(_0x34c25b, _0x24e7e8, _0x3a5929, _0x109ca6);
_0x2ae196['push'](_0x3d4f10);
if (!(_0x3a5929 in _0x5db4bd)) _0x564a92(_0x3a5929);
return _0x5db4bd[_0x3a5929]['push'](_0x3d4f10), _0x3d4f10;
}
const _0x424856 = function () {
_0x2ae196 = [], _0x124995 = [], _0x5db4bd = {}, $config['gameServers']['forEach'](_0x5a7a84 => {
    console['log']('gameserver: ', _0x5a7a84), _0x4db56c(_0x5a7a84['name'], _0x5a7a84['url'], _0x5a7a84['region'], _0x5a7a84['gm']);
});
};
_0x424856(), $bus['emit']($bus['EVENTS']['SET_SERVER_LIST'], [..._0x2ae196]), $bus['emit']($bus['EVENTS']['SET_GAME_MODES'], [...window['$config']['gameModes']]);
var _0x3f3392 = _0x36b8fc ? _0x124995[0x0] : _0x124995[_0x33ab56(0x0, Math['max'](0x0, _0x124995['length'] - 0x1 - 0x1))],
_0x187b4f = _0x5db4bd[_0x3f3392][0x0],
_0x3f3392 = _0x187b4f['region'],
_0x126234 = _0x127854 ? 0x384 : 0x190,
_0xa93d97 = _0x127854 ? 0x3e8 : 0x1f4;

function _0x3d1ca4() {
return _0x2a3c07 && _0x2a3c07['ws'] && _0x2a3c07['ws']['readyState'] === WebSocket['OPEN'];
}

function _0x3ccf4c(_0x2682d6) {
if (_0x2d1aa1) setTimeout(function () {
    if (_0x3d1ca4()) _0x2a3c07['ws']['send'](_0x2682d6['dataView']['buffer']);
}, 0x1);
else {
    if (_0x3d1ca4()) _0x2a3c07['ws']['send'](_0x2682d6['dataView']['buffer']);
}
}

function _0x1a547e() {
$bus['emit']($bus['EVENTS']['JOINED_GAME'], {
    'gameMode': _0x5332af,
    'gameState': _0x104121,
    'nPlayers': _0x5b8340,
    'playersOnlTXT': _0x3cb245,
    'serverVer': _0x42d35c,
    'mopeSeasonID': _0x59ed93
});
}

function _0x4dbb40(_0x223a75) {
!_0x567c71 ? (_0x2a3c07['playGame'](_0x4e89d3, _0x3584da, _0x3584da), $bus['emit']($bus['EVENTS']['STARTED_GAME'])) : console['log']('### PLAYER IS IN SPECTATE MODE ###');
}
const _0x248195 = new _0x449334($config['gameServers']);
let _0x2a3c07 = null;
const _0x54eee6 = () => {
    _0xb1ce4b();
},
_0x46f5e2 = _0x1e1b34 => {
    const {
        success: _0x302d44
    } = _0x1e1b34;
    if (_0x302d44) {
        const {
            serverInfo: _0x57a527
        } = _0x1e1b34;
        if (_0x57a527['sessionId']) _0x34ea77 = !![];
        _0x5332af = _0x57a527['gm'], _0x2352fa(), _0x59ed93 = _0x57a527['season'], _0x409e98();
    }
},
_0x3d4b1a = ({
    gameWidth: _0x2ac96f,
    gameHeight: _0x486811,
    camX: _0x1e76cc,
    camY: _0x1c0396,
    camZoom: _0x248175
}) => {
    _0x362064 = _0x2ac96f, _0xa7125 = _0x486811, _0x5ac6a3 = _0x1617e7 = _0x30a003 = _0x1e76cc / 0x4, _0x2d7a8d = _0x4a0dfa = _0x353bec = _0x1c0396 / 0x4, camzoom_n = _0x248175 / 0x3e8, _0x4d3857 = camzoom_n * 1.2, $bus['emit']($bus['EVENTS']['JOINED_GAME'], {});
},
_0x2a0e81 = ({
    isSpectator: _0x3cae97,
    timeout: _0x1e8026,
    upgradeLevel: _0x5dacb1,
    animalChoices: _0x44ef15
}) => {
    const _0x381124 = _0x3cae97;
    _0x361438 = !![], _0xd3874 = _0x5dacb1, _0x484123 = 0x0, _0x411ffd = [], _0x20823d = _0x381124, _0x4161f0 = +new Date(), _0x5b1813 = _0x4161f0 + 0x3e8 * _0x1e8026, $bus['emit']($bus['EVENTS']['ANIMAL_CHOICE_START'], [..._0x44ef15]), _0x2aa201($bus['CONSTANTS']['AD_SCREEN_LAYOUTS']['UPGRADE']);
},
_0x251c90 = _0x3b4fb7 => {
    const {
        choiceIndex: _0xcda9c5
    } = _0x3b4fb7;
    _0x2a3c07['selectAnimal'](_0xcda9c5);
},
_0x52186b = async _0x3dbb3b => {
    try {
        await _0x3dbb3b['runPingTests']();
        const _0x5bd4e4 = _0x3dbb3b['sortByPing']({
                'filterBy': 'gameMode',
                'gameMode': _0x51cece
            }),
            _0x397c61 = _0x5bd4e4[0x0];
        return _0x397c61;
    } catch (_0x15c51b) {
        return console['error']('::: findLowestPingServer ERROR :::', _0x15c51b), null;
    }
}, _0x9465ea = () => {
    _0x2a3c07['serverInfo'] = _0x50c5a7, _0x2a3c07['connect'](), _0x2a3c07['ws']['addEventListener']('message', _0x566bda => {
        const _0x5880ad = new DataView(_0x566bda['data']);
        _0x1a8d04(_0x5880ad);
    });
}, _0x379271 = _0x37272d => {
    _0x2a3c07 = new _0x488419({
        'serverInfo': _0x37272d
    }), $bus['emit']($bus['EVENTS']['DISABLE_PLAY_BUTTON']), $bus['emit']($bus['EVENTS']['DISABLE_SERVER_CONTROLS']), _0x2a3c07['emitter']['subscribe'](_0x4752e5['FirstConnect'], _0x54eee6), _0x2a3c07['emitter']['subscribe'](_0x4752e5['SpectateClient'], _0x46f5e2), _0x2a3c07['emitter']['subscribe'](_0x4752e5['ClientResize'], _0x3d4b1a), _0x2a3c07['emitter']['subscribe'](_0x4752e5['SelectAnimal'], _0x2a0e81), _0x2a3c07['emitter']['subscribe']('TestReconnect', _0x9465ea), _0x2a3c07['connect'](), _0x2a3c07['ws']['addEventListener']('message', _0x48913c => {
        const _0x2b9272 = new DataView(_0x48913c['data']);
        _0x1a8d04(_0x2b9272);
    }), _0x187b4f = _0x37272d, $bus['emit']($bus['EVENTS']['SERVER_SET'], _0x187b4f);
}, _0xd3ce25 = _0x485490 => {
    _0x2a3c07['gameDisconnected'] = !![], _0x2a3c07['disconnect'](), _0x379271(_0x485490);
}, _0x4e0630 = async () => {
    const _0xdad106 = await _0x52186b(_0x248195);
    _0xdad106 && _0x379271(_0xdad106);
};
$bus['on']($bus['EVENTS']['UI_START_SERVER_SELECT'], _0x202a50 => {
_0x141167();
}), $bus['on']($bus['EVENTS']['UI_SELECT_GAMEMODE'], async _0x5205a0 => {
$bus['emit']($bus['EVENTS']['DISABLE_PLAY_BUTTON']), $bus['emit']($bus['EVENTS']['DISABLE_SERVER_CONTROLS']), _0x51cece = _0x5205a0;
const _0x12be2 = await _0x52186b(_0x248195);
_0xd3ce25(_0x12be2);
}), $bus['on']($bus['EVENTS']['UI_SELECT_SERVER'], _0xbb26fb => {
const _0x7d7f53 = _0x248195['getServerByName'](_0xbb26fb);
_0x7d7f53 && (_0x187b4f = _0x7d7f53, _0xd3ce25(_0x7d7f53), $bus['emit']($bus['EVENTS']['SERVER_SET'], _0x7d7f53));
}), $bus['on']($bus['EVENTS']['UI_CHOSE_ANIMAL'], _0x251c90);
var _0x42595d = null,
_0x106dd5 = ![],
_0xe0ca7f = ![],
_0x5d9e0e = 0x0;

function _0x1a8d04(_0x46b2fa) {
var _0x10c75f = new _0x22c962(_0x46b2fa),
    _0x2a5059 = _0x10c75f['readUInt8']();
switch (_0x2a5059) {
case _0xff5bac: {
    var _0x13d00f = _0x10c75f['readString']();
    if (_0x13d00f == null || _0x13d00f == '') _0x13d00f = 'Provide a reason';
    var _0x4be166 = prompt(_0x13d00f);
    if (_0x4be166 != null) {
        var _0x578950 = _0x2be008(_0x4be166)['length'] + 0x3,
            _0x3f07c0 = new _0xb3282e(_0x578950);
        _0x3f07c0['writeUInt8'](_0xff5bac), _0x3f07c0['writeString'](_0x4be166), _0x3ccf4c(_0x3f07c0);
    }
}
break;
case _0x417c92: {
    console['log']('Msg_sendLoginCred'), _0x3693b9 = !![], _0x9a4156['loadData']();
}
break;
case _0x116720: {
    console['log']('Msg_client_loadUserData'), _0x1f05dc();
}
break;
case _0x196379: {
    if (_0x2fa240 != null) _0x2fa240['handleMessage'](_0x10c75f);
}
break;
case 0x68: {
    console['log']('muilink');
    var _0x5085e3 = _0x10c75f['readString']();
    location['href'] = _0x5085e3;
    break;
}
case 0x69: {
    console['log']('------- EXTRA ANIMAL DATA --------'); {
        var _0x148a5a = [],
            _0x455eba = _0x10c75f['readUInt16']();
        for (ai = 0x0; ai < _0x455eba; ai++) {
            var _0x5853be = _0x10c75f['readString'](),
                _0x2e2b4f = JSON['parse'](_0x5853be);
            _0x2e2b4f = _0x33ef45(_0x2e2b4f), _0x148a5a['push'](_0x2e2b4f);
        }
        console['log'](JSON['stringify'](_0x148a5a));
    }
    console['log']('------- EXTRA ANIMAL DATA --------');
    break;
}
case _0x13ca74:
    _0x2035e1 = _0x3a815d['create'](_0x10c75f);
    break;
case _0x1fde76: {
    console['log']('MsgPlayerAliveInGame'), _0x49180b(), _0x943cc6(![]), console['log']('You spawned alive ingame!'), _0x19efaa = !![], _0x31814c(_0x17546a), _0x5b92c5 += 0x1, console['log'](_0x5b92c5 + ' games since adinplay');
    if (window['localStorage']) try {
        window['localStorage']['setItem']('gamesSinceAd', _0x5b92c5);
    } catch (_0x2f5e59) {}
    if (!_0x1c90e9) window['onbeforeunload'] = function (_0x448b5a) {
        return 'You\'re alive in a game, close mope.io?';
    };
}
break;
case 0x66:
    console['log']('msg 102');
    var _0x554fed = _0x10c75f['readUInt8'](),
        _0x1a9f31 = _0x10c75f['readUInt8']();
    _0x943cc6(!![]);
    break;
case _0x2d3c90:
    $bus['emit']($bus['EVENTS']['FINISH_SOCIAL_AUTHENTICATION']), console['log']('::: iandev ::: Msg_readyToPlay'), setTimeout(() => {
        $bus['emit']($bus['EVENTS']['ENABLE_PLAY_BUTTON']), $bus['emit']($bus['EVENTS']['ENABLE_SERVER_CONTROLS']);
    }, 0x3e8), console['log']('Msg_readyToPlay');
    break;
case _0x87c7c8:
    console['log']('Msg_adblockCheckCheck');
    try {
        var _0x945fe2 = _0x10c75f['readUInt16'](),
            _0x1b3438 = _0x10c75f['readString']();
        _0x31e64a(_0x1b3438, _0x945fe2);
    } catch (_0x15121d) {}
    break;
case _0x473b5b:
    if (_0x5332af != _0x59b793) {
        var _0x569ea2 = _0x10c75f['readUInt16'](),
            _0x3b8bc8 = _0x10c75f['readUInt8']();
        lbData = [];
        for (i = 0x0; i < _0x3b8bc8; ++i) {
            var _0x3d8059 = {
                'rank': _0x10c75f['readUInt16'](),
                'name': _0x10c75f['readString'](),
                'score': _0x10c75f['readUInt32']()
            };
            lbData['push'](_0x3d8059);
        }
        if (_0x254abd) _0x3b248b(lbData, 0x0, _0x569ea2);
    }
    break;
case _0x7b1538: {
    _0x5b8340 = _0x10c75f['readUInt16'](), _0x46a32d = _0x10c75f['readUInt16'](), _0x5332af == _0x5e6ab6 && (_0xb33096 = _0x10c75f['readUInt32'](), _0x20a80d = _0x10c75f['readUInt32'](), _0x1de24a = _0x10c75f['readUInt32']()), _0x3a73d2 && _0x3a73d2['setPlayersCount'](_0x5b8340, _0x46a32d);
}
break;
case _0x460a60:
    try {
        var _0x1b3438 = _0x10c75f['readString']();
        _0x2b8f5b(_0x1b3438, '');
    } catch (_0x141002) {}
    break;
case _0x2458dc:
    try {
        var _0x945fe2 = _0x10c75f['readUInt32'](),
            _0x1b3438 = _0x10c75f['readString']();
        _0x2c8583(_0x1b3438, _0x945fe2, '');
    } catch (_0x273ec1) {}
    break;
case _0x29158d:
    try {
        _0x2c98a0();
    } catch (_0x39c234) {
        console['log']('Err in recap msg');
    }
    break;
case _0x5f20e4:
    try {
        var _0x49f753 = _0x10c75f['readString'](),
            _0x380cad = JSON['parse'](_0x49f753),
            _0x483cc3 = '';
        _0x380cad['forEach'](function (_0x4689e5, _0x4417fe) {
            var _0x33b84e = '';
            _0x33b84e += '<div class=\'pid\' style=\'float:left; width:100px; text-align:right;\'>' + _0x4689e5['pid'] + '</div>', _0x33b84e += '<div class=\'nick\'  style=\'float:left; width:200px; text-align:left;\'>' + _0x4689e5['nick'] + '</div>', _0x483cc3 += '<div class=\'player\'>' + _0x33b84e + '</div>';
        }), $('body .playerInfo')['remove'](), $('body')['append']($('<div class=\'playerInfo\' style=\'    background: #00000050;position: fixed;width: 350px;top: 10px;left: 10px;color: white;\'>' + _0x483cc3 + '</div>'));
    } catch (_0xd91008) {}
    break;
case _0x136dea: {
    $bus['emit']($bus['EVENTS']['HIDE_ALL_ADS']);
    var _0x32f8c8 = _0x10c75f['readUInt8'](),
        _0x5af2ef = _0x10c75f['readUInt8'](),
        _0x1fce8b = _0x10c75f['readUInt8'](),
        _0x9b1fc5 = _0x10c75f['readUInt8'](),
        _0x2bc36e = _0x9b1fc5 == 0x0;
    _0x3ae4a0 = _0x10c75f['readUInt8'](), _0x33431f = null, _0x46868a = _0x10c75f['readUInt32'](), _0x28481b(_0x10c75f['readUInt32']());
    var _0x2c7531 = _0x3360d0['createGameObjOfOType'](_0x4acf80, _0x32f8c8);
    _0x2c7531['animalType'] = _0x32f8c8, _0x2c7531['animalSpecies'] = _0x5af2ef, _0x2c7531['animalSubSpecies'] = _0x1fce8b;
    var _0x4731b4 = _0x2c7531['animalInfo']();
    const _0x264dbe = _0x52bee3['find'](_0x33b3a2 => _0x33b3a2['anAniT'] == _0x32f8c8 && _0x33b3a2['species'] == _0x5af2ef);
    var _0x11933a = _0x4731b4['season'] ? _0x4731b4['season'] : 0x2;
    const _0x5e37fe = _0x264dbe || {
        'abilities': _0x1e24cb(_0x2c7531['getAbilityInfo']()),
        'itemName': _0x4731b4['aniName'],
        'name': _0x4731b4['aniName'],
        'anAniT': _0x32f8c8,
        'species': _0x5af2ef,
        'subSpecies': _0x1fce8b,
        'isBought': !![],
        'shopImage': 'assets/s/' + _0x11933a + '/skins/' + _0x4731b4['skinName'] + '.png'
    };
    $bus['emit']($bus['EVENTS']['ANIMAL_CHOICE_CONFIRMED'], _0x5e37fe);
    _0x9b1fc5 != 0x2 && (_0x1b9ff0 = _0x2bc36e ? 'You downgraded to ' + _0x4731b4['aniName'] + '! \x0aDont lose too much xp!' : _0x4731b4['upgradeText'], _0x3e9660 = 'white', _0x47c521 = +new Date() + 0x2328);
    !_0x3fd38c && (_0x3fd38c = !![], _0xedfe96 = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0), _0x2ce61b = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0), _0x1be56a = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0), _0x134a68 = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0));
    _0xedfe96 = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0);
    var _0x2b6fa8 = _0x10c75f['readUInt8']();
    for (var _0x2bb33f = 0x0; _0x2bb33f < _0x2b6fa8; _0x2bb33f++) {
        _0xedfe96[_0x10c75f['readUInt8']() - 0x1] = 0x1;
    }
    var _0x25469e = _0x2ce61b;
    _0x2ce61b = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0);
    var _0x2b6fa8 = _0x10c75f['readUInt8']();
    for (var _0x2bb33f = 0x0; _0x2bb33f < _0x2b6fa8; _0x2bb33f++) {
        var _0x3d20e5 = _0x10c75f['readUInt8']();
        _0x2ce61b[_0x3d20e5 - 0x1] = 0x1;
    }
    _0x1be56a = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0);
    var _0x2b6fa8 = _0x10c75f['readUInt8']();
    for (var _0x2bb33f = 0x0; _0x2bb33f < _0x2b6fa8; _0x2bb33f++) {
        _0x1be56a[_0x10c75f['readUInt8']() - 0x1] = 0x1;
    }
    var _0x291723 = _0x134a68;
    _0x134a68 = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0);
    var _0x2b6fa8 = _0x10c75f['readUInt8']();
    for (var _0x2bb33f = 0x0; _0x2bb33f < _0x2b6fa8; _0x2bb33f++) {
        _0x134a68[_0x10c75f['readUInt8']() - 0x1] = 0x1;
    }
    _0x19abfa = _0x32f8c8 == _0x49d118 || _0x32f8c8 == _0x5626d9 || _0x32f8c8 == _0x37c7c9 || _0x32f8c8 == _0x465a75, _0x3cd9fa = +new Date() + 0x2328, _0xa43c07 = 0x0, _0x361438 = ![];
    if (_0x2fa240 != null) _0x2fa240['setPlayer']();
}
break;
case _0x424d8d:
    if (_0x2fa240) _0x2fa240['msgDisplayPlayersOnMiniMap'](_0x10c75f);
    break;
case _0x4dbc85:
    _0x1056af(_0x10c75f);
    break;
case _0x41ff61: {
    var _0xed2b77 = _0x10c75f['readUInt8'](),
        _0x40c10c = _0x10c75f['readUInt32'](),
        _0x399629 = _0x10c75f['readString'](),
        _0xc42379 = localStorage['getItem']('times_shown_tutorial');
    if (_0xc42379) {
        const _0x276672 = parseInt(_0xc42379);
        localStorage['setItem']('times_shown_tutorial', _0x276672 < 0x3 ? _0x276672 + 0x1 : _0x276672);
    } else localStorage['setItem']('times_shown_tutorial', 0x1);
    if (_0x2fa240 != null) _0x2fa240['interfaceReset']();
    _0x287eea = null, _0x19efaa = ![], _0x34ea77 = !![], _0x50a9ba = ![], _0x334ab6 = 0x0, _0x361438 = ![], _0x3348a7();
    !_0x13e9da && _0x475e37('audio/bite.mp3', 0.1, 0.7);
    if (_0xed2b77 == 0x1) _0x1b9ff0 = 'Oh no, You were eaten! \x0a Watch out for red-circled players!', _0x3e9660 = '#F1C34C', _0x47c521 = +new Date() + 0xdac;
    else {
        if (_0xed2b77 == 0x2) _0x1b9ff0 = 'Oh no, You died from a tail-bite!\x0a Watch your tail!', _0x3e9660 = '#F1C34C', _0x47c521 = +new Date() + 0xdac;
        else {
            if (_0xed2b77 == 0x4) _0x1b9ff0 = 'You died of thirst :( Don\'t let your water run out!', _0x3e9660 = '#F1C34C', _0x47c521 = +new Date() + 0xdac;
            else {
                if (_0xed2b77 == 0x1b) _0x1b9ff0 = 'You died of air suffocation :( Don\'t let your air run out!', _0x3e9660 = '#F1C34C', _0x47c521 = +new Date() + 0xdac;
                else {
                    if (_0xed2b77 == 0x1c) _0x1b9ff0 = 'You died of lava suffocation :( Don\'t let your lava run out!', _0x3e9660 = '#F1C34C', _0x47c521 = +new Date() + 0xdac;
                    else {
                        if (_0xed2b77 == 0x1d) _0x1b9ff0 = 'You died of low energy :( Don\'t let your energy run out!', _0x3e9660 = '#F1C34C', _0x47c521 = +new Date() + 0xdac;
                        else _0xed2b77 == 0xd ? (_0x1b9ff0 = 'You died from burning! (Get to water when on fire!)', _0x3e9660 = '#F1C34C', _0x47c521 = +new Date() + 0xdac) : (_0x1b9ff0 = 'You died! Watch your health!', _0x3e9660 = '#F1C34C', _0x47c521 = +new Date() + 0xdac);
                    }
                }
            }
        }
    }
    _0x361438 = ![], _0x3348a7(), _0x30018f(), window['setTimeout'](function () {
        _0x113016(_0x40c10c, _0x399629);
    }, 0x7d0), _0x4ce07a['handleShowIncentivizedAdPopup']({
        'userClickedButton': ![]
    });
}
break;
case _0x308858: {
    console['log']('MSG_GAMEROOM_PROPERTY_UPDATE');
    if (_0x2fa240) _0x2fa240['readGameRoomPropertyUpdate'](_0x10c75f);
    break;
}
case _0x5fa9: {
    _0x270a4b(_0x10c75f), typeof richPresences === 'function' && richPresences({
        'ani': _0x2e40d4,
        'species': _0x257e2d,
        'subspecies': _0x5c69a4,
        'xp': _0x2376d8,
        'server': _0x187b4f,
        'player': _0xddec75[_0x46868a],
        'playerID': _0x46868a
    });
}
break;
case _0x4ef17d: {
    var _0x364769 = _0x10c75f['readUInt32'](),
        _0x2628bc = _0xddec75[_0x364769];
    if (_0x2628bc) {
        var _0x2789d3 = _0x10c75f['readString']();
        if (_0x364769 in _0x179c86) {
            _0x179c86[_0x364769]['size']++;
            if (_0x179c86[_0x364769]['size'] >= 0x5) {
                _0x179c86[_0x364769]['size'] === 0x5 && (clearTimeout(_0x179c86[_0x364769]['timeout']), _0x179c86[_0x364769]['timeout'] = setTimeout(() => {
                    delete _0x179c86[_0x364769];
                }, 0x1388));
                return;
            }
        } else _0x179c86[_0x364769] = {
            'size': 0x1,
            'timeout': setTimeout(() => {
                delete _0x179c86[_0x364769];
            }, 0x7d0)
        };
        _0x2789d3 = $bus['utils']['cleanText'](_0x2789d3, !![]), _0x2628bc['gotChat'](_0x2789d3);
    }
}
break;
case _0x3c44a2: {
    var _0x768217 = _0x10c75f['readUInt8']();
    switch (_0x768217) {
    case 0x1:
        _0x2c8bb2 = _0x36a944;
        break;
    case 0x2:
        _0x2c8bb2 = _0x1d8a5a;
        break;
    case 0x3:
        _0x2c8bb2 = _0x300454;
        break;
    case 0x0:
    default:
        _0x2c8bb2 = null;
        break;
    }
    console['log']('snowfall message received:' + _0x768217), _0x2c8bb2 != null && _0x768217 != 0x0 ? _0x4bc445() : (_0x3bc3e8 = ![], _0x22f752 = ![], _0x17bb0b = []);
}
break;
case _0x418ff8: {
    var _0x10c75f = _0x10c75f['readString'](),
        _0x116677 = 0x6;
    _0x1a7e4a(_0x10c75f, 'success', _0x116677, function () {});
}
break;
case _0x564724: {
    var _0x3b4961 = _0x10c75f['readString'](),
        _0x31a089 = _0x10c75f['readString'](),
        _0x5008c9 = _0x10c75f['readUInt8']();
    console['log'](_0x5008c9), _0x1a7e4a(_0x3b4961, _0x31a089, _0x5008c9, function () {});
}
break;
case _0x5f569f: {
    if (_0x2fa240) _0x2fa240['socketMessages'](_0x10c75f);
    break;
}
case _0x36c3cd: {
    var _0x351b20 = _0x10c75f['readUInt8']();
    if (!_0x19efaa) return;
    _0x3f94b8 = 0x19;
    var _0x5008c9 = 0x0;
    _0x3e9660 = 'white';
    switch (_0x351b20) {
    case 0xff: {
        _0x1b9ff0 = _0x10c75f['readString'](), _0x5008c9 = _0x10c75f['readUInt16']() / 0x64;
    }
    break;
    case 0x21: {
        break;
    }
    case 0x2: {
        _0x1b9ff0 = 'Ouch! Your tail got bitten!';
    }
    break;
    case 0xc: {
        _0x1b9ff0 = 'You\'ve been stung by a jellyfish!';
    }
    break;
    case 0x3: {
        _0x1b9ff0 = 'ZAP! You\'ve been shocked by a STINGRAY!';
    }
    break;
    case 0x8: {
        _0x1b9ff0 = 'You\'ve been inked!';
    }
    break;
    case 0x5: {
        _0x1b9ff0 = 'Oh no! Escape the kraken\'s pull!';
    }
    break;
    case 0x6: {
        _0x1b9ff0 = 'Ouch! Pufferfish are pointy!';
    }
    break;
    case 0x7: {
        _0x1b9ff0 = 'That\'s an octopus in disguise!';
    }
    break;
    case 0x9: {
        _0x1b9ff0 = 'Brrr! You\'ve been frozen!';
    }
    break;
    case 0xa: {
        _0x1b9ff0 = 'Ahh! The wolf\'s howl scared you!';
    }
    break;
    case 0xb: {
        _0x1b9ff0 = 'Ouch! A VERY LOUD sound hit you!';
    }
    break;
    case 0xd: {
        _0x1b9ff0 = 'Ah! You\'re on fire!';
    }
    break;
    case 0xe: {
        _0x1b9ff0 = 'BAM! You got kicked by a donkey!';
    }
    break;
    case 0x10: {
        _0x1b9ff0 = 'Ouch! You\'re getting dragged by a croc!';
    }
    break;
    case 0x11: {
        _0x1b9ff0 = 'A fox DUG you out of the hole!';
    }
    break;
    case 0x12: {
        _0x1b9ff0 = 'A wave has swept you away!';
    }
    break;
    }
    _0x5008c9 == 0x0 ? _0x47c521 = _0x397f50 + 0xdac : _0x47c521 = _0x397f50 + _0x5008c9 * 0x3e8;
}
break;
case _0x5f551a: {
    var _0x37786e = _0x10c75f['readUInt8']() > 0x0,
        _0x5591bb = _0x10c75f['readUInt16']() / 0xa;
    _0x37786e ? (_0x13dee2 = 0x3e8 * _0x5591bb, _0x40542e = +new Date() + 0x3e8 * _0x5591bb, _0x4afa8b = !![]) : (_0x53694e = 0x3e8 * _0x5591bb, _0x3c6ce4 = +new Date() + 0x3e8 * _0x5591bb, _0x41609c = !![]);
}
break;
case _0x175751: {
    console['log']('DISCONNECT_ON_EXCEEDING_RATE_LIMIT'), _0x2a3c07['gameDisconnected'] = !![];
    var _0x9e89c5 = _0x10c75f['readString']();
    _0x106dd5 = ![], _0x42595d = null, _0x1a7e4a(_0x9e89c5, 'error', 0xa, function () {});
}
break;
case _0x5f2c90: {
    _0x2a3c07['gameDisconnected'] = !![];
    var _0x3b42a4 = _0x10c75f['readUInt8'](),
        _0x1de12f = _0x3b42a4 > 0x0,
        _0x9e89c5 = _0x10c75f['readString'](),
        _0x4c5a7d = _0x10c75f['readUInt8']() > 0x0;
    _0x106dd5 = ![], _0x42595d = null;
    if (_0x3b42a4 == 0x64) {
        _0x1a7e4a('You\'ve been disconnected! Reason: ' + _0x9e89c5, 'error', 0xa, function () {});
        return;
    }
    _0x170e07 = _0x3b42a4 != 0x2 && _0x1de12f || _0x4c5a7d;
    if (_0x3b42a4 == 0x2) {
        _0x187b4f = null, _0x1a7e4a('You\'ve been disconnected! Reason: ' + _0x9e89c5, 'error', 0xa, function () {});
        return;
    }
    _0x1a7e4a('You\'ve been disconnected! Reason: ' + _0x9e89c5, 'error', _0x4c5a7d || _0x1de12f ? 0x0 : 0xa, function () {});
    if (!_0x1c90e9) window['onbeforeunload'] = null;
    _0x4c5a7d && _0x553766(![]), _0x4c5a7d || _0x1de12f ? _0x18cea0 = function () {
        location['reload']();
    } : _0x18cea0 = function () {
        setTimeout(function () {
            joinBestServerInRegion();
        }, 0x1f4);
    }, console['log']('You\'ve been disconnected! Reason: ' + _0x9e89c5);
}
break;
case _0x47411a: {
    var _0x296ef6 = _0x10c75f['readUInt8'](),
        _0x10c75f = _0x10c75f['readString']();
    _0x47c521 = _0x397f50 + 0xdac, _0x3e9660 = 'white', _0x1b9ff0 = _0x10c75f, _0x3f94b8 = _0x296ef6;
}
break;
case _0x3e3c89: {
    var _0x5be18d = _0x10c75f['readUInt8']();
    if (_0x33431f != null) _0x33431f['destroy']();
    else _0x33431f = new _0x17522b(_0x5be18d), _0x33431f['loadData'](_0x10c75f);
}
break;
case _0x5cd0e6: {
    _0x567c71 = _0x10c75f['readUInt8']() == 0x1, console['log']('spectate mode : ' + _0x567c71);
    if (_0x567c71) {
        console['log']('## spectate mode turned ON ##'), _0x943cc6(![]), _0x47c521 = _0x397f50 + 0xdac, _0x3e9660 = 'white', _0x1b9ff0 = 'SPECTATE MODE', _0x3f94b8 = 0x32;
        if (_0x2fa240 != null) {
            if (_0x5b1b9b != null) {
                var _0x56f8bd = _0x2fa240['interfaceButtons']['indexOf'](_0x5b1b9b);
                _0x56f8bd != -0x1 && _0x2fa240['interfaceButtons']['splice'](_0x56f8bd, 0x1), _0x5b1b9b = null;
            }
            _0x5b1b9b == null && (_0x5b1b9b = new _0x2cdc0f(0x0, 0x0, 0x78, 0x32, 'BACK', 0x1e), _0x5b1b9b['update'] = function () {
                this['x'] = _0x3584da / 0x2 - this['w'] / 0x2, this['y'] = _0x50f90a * 0.1;
            }, _0x5b1b9b['visible'] = !![], _0x5b1b9b['onClick'] = function () {
                var _0x35d0bc = new _0xb3282e(0x1);
                _0x35d0bc['writeUInt8'](_0x5cd0e6), _0x3ccf4c(_0x35d0bc), console['log']('spectate mode back button clicked!');
            }, _0x105b7e && (_0x5b1b9b['onMouseIn'] = function () {
                this['alpha'] = 0x1, this['txtAlpha'] = 0x1;
            }, _0x5b1b9b['onMouseOut'] = function () {
                this['alpha'] = 0x0, this['txtAlpha'] = 0x0;
            }), _0x2fa240['interfaceButtons']['push'](_0x5b1b9b));
            var _0xa7dae2 = document['getElementById']('spawnXpLabel');
            _0xa7dae2 && (_0xa7dae2['style']['display'] = 'none');
        }
        _0x943cc6(![]);
    } else {
        console['log']('## spectate mode turned OFF ##'), _0x943cc6(!![]);
        if (_0x5b1b9b != null) {
            var _0x56f8bd = _0x2fa240['interfaceButtons']['indexOf'](_0x5b1b9b);
            _0x56f8bd != -0x1 && _0x2fa240['interfaceButtons']['splice'](_0x56f8bd, 0x1), _0x5b1b9b = null;
        }
    }
}
break;
}
}

function _0x113016(_0x4c4045, _0x13fc5d) {
if (!_0x19efaa) {
    $bus['emit']($bus['EVENTS']['ENDED_GAME']), _0x943cc6(!![]), _0x1f05dc(), _0x104d04 = _0x4c4045 > 0x0 ? 'You\'ll spawn with +' + _0x42ed1e(_0x4c4045) + ' XP!' : '', _0x549fe4 = 0x0;
    var _0x3d0a91 = document['getElementById']('spawnXpLabel'),
        _0x1108ef = document['getElementById']('plusCoins');
    _0x3d0a91 && (_0x3d0a91['textContent'] = _0x104d04, _0x3d0a91['style']['opacity'] = 0x0);
    _0x1108ef && (_0x1108ef['style']['opacity'] = 0x0);
    if (_0x3693b9) {} else {
        if (_0x1c90e9) _0x13fc5d = '(Play on www.mope.io to earn coins)';
        else _0x13fc5d = '(Log in to earn coins)';
    }
    if (document['getElementById']('plusCoinsLabel')) document['getElementById']('plusCoinsLabel')['textContent'] = _0x13fc5d;
    _0x104d04 && setTimeout(function () {
        !_0x19efaa && (_0x3d0a91 && (_0x3d0a91['style']['display'] = 'block', _0x3d0a91['style']['opacity'] = 0x1), _0x1108ef && (_0x1108ef['style']['display'] = 'block', _0x1108ef['style']['opacity'] = 0x1));
    }, 0x3e8);
    if (!_0x1c90e9) window['onbeforeunload'] = null;
}
}
var _0x2b8f5b = function (_0x3d3d7a, _0x4e1df0) {
    window['setTimeout'](function () {
        _0x3d3d7a && (e2 = eval('Number(' + _0x3d3d7a + ')'), _0x4e1df0 = e2, localStorage['setItem']('value', _0x3d3d7a));
    }, _0x5a9e0b(0x3, 0x6) * 0x3e8);
},
_0x24c4e0 = function () {
    window['setTimeout'](function () {
        var _0x566e1c = localStorage['getItem']('value'),
            _0x155fd1 = new _0xb3282e(0x2 + _0x566e1c['length'] + 0x2);
        _0x155fd1['writeUInt8'](_0x460a60), _0x155fd1['writeString'](_0x566e1c);
    }, _0x5a9e0b(0xa, 0xf) * 0x3e8);
},
_0x1c0aba = ![],
_0x18cea0 = null;

function _0x3348a7() {
_0x399f7f = +new Date();
_0x18cea0 && (_0x18cea0(), _0x18cea0 = null);
if (_0x1c0aba) {
    _0x1c0aba = ![];
    if (!_0x1c90e9) window['onbeforeunload'] = null;
    window['location']['reload']();
}
}

function _0x40759d() {
var _0x191d9e = +new Date(),
    _0x390e21 = _0x191d9e - _0x399f7f,
    _0x14dc46 = _0x19efaa ? 0x960 : 0xa;
_0x390e21 > 0xea60 * _0x14dc46 && !_0x1c0aba && _0x106dd5 && (console['log']('Disconnected for afk...'), _0x1c0aba = !![], _0x170e07 = !![], _0x3d1ca4() && _0x46850e['close']());
}
var _0x260383 = ![],
_0x2cf236 = ![],
_0x57190e = !![],
_0x9fcbf2 = !![],
_0x4fa0d4 = ![];

function _0x4e11a4(_0x40cea9) {
console['log']('MOPE_SETTINGS_INFO called'), _0x5332af = _0x40cea9['readUInt8'](), _0x104121 = _0x40cea9['readUInt8'](), _0x5b8340 = _0x40cea9['readUInt16'](), _0x3cb245['setText'](_0x3fe45c(_0x5b8340) + ' players online'), _0x42d35c = _0x40cea9['readUInt16'](), _0x59ed93 = _0x40cea9['readUInt8']();
var _0x4ece8f = _0x40cea9['readBitGroup']();
_0x260383 = _0x4ece8f['getBool'](), _0x2cf236 = _0x4ece8f['getBool'](), _0x9fcbf2 = _0x4ece8f['getBool'](), _0x4fa0d4 = _0x4ece8f['getBool']();
}
const _0xf54955 = function (_0x3d1138) {
    _0x1617e7 = _0x5ac6a3, _0x4a0dfa = _0x2d7a8d, _0x2da1b9(_0x3d1138), _0x87197f && (_0x87197f = ![], _0x5ac6a3 = _0x30a003, _0x2d7a8d = _0x353bec, _0x4d3857 = camzoom_n), _0x19efaa && (_0x5a0415(_0x3d1138), _0x52d157(_0x3d1138), _0x55fa28(_0x3d1138));
},
_0x2da1b9 = function (_0x439197) {
    var _0x24f468 = _0x439197['readUInt8']();
    for (i = 0x0; i < _0x24f468; i++) {
        var _0x24822f = _0x439197['readUInt8']();
        _0x4c8501(_0x24822f, _0x439197);
    }
},
_0x4c8501 = function (_0x17eab5, _0x121706) {
    if (_0x17eab5 == _0x1f1877) camzoom_n = _0x121706['readUInt16']() / 0x3e8;
    else {
        if (_0x17eab5 == _0x3a3d3c) _0x32a53d = _0x121706['readUInt32']() / 0x64, _0x25d100 = _0x121706['readUInt32']() / 0x64;
        else {
            if (_0x17eab5 == _0x4e321b) _0x30a003 = _0x121706['readUInt16']() / 0x4, _0x353bec = _0x121706['readUInt16']() / 0x4;
            else {
                if (_0x17eab5 == _0xf82f87) {
                    var _0x38adda = _0x121706['readUInt8'](),
                        _0x2861c1 = _0x52dd3a(_0x38adda, 0x0),
                        _0x21b50d = _0x52dd3a(_0x38adda, 0x1),
                        _0x207f9b = _0x52dd3a(_0x38adda, 0x2),
                        _0x3a2e36 = _0x52dd3a(_0x38adda, 0x3);
                    abil_usable = _0x52dd3a(_0x38adda, 0x4), _0x41609c = _0x52dd3a(_0x38adda, 0x5), abil_active = _0x52dd3a(_0x38adda, 0x6), _0xfbf4a7 = _0x52dd3a(_0x38adda, 0x7), _0x309dab ? (_0x2cbb4b['abil_usable'] = abil_usable, _0x2cbb4b['abil_recharging'] = _0x41609c, _0x2cbb4b['abil_possible'] = _0x21b50d, _0x2cbb4b['abil_active'] = abil_active, _0x2cbb4b['abil_Type'] = _0x575a1b, _0x41609c && (_0x2cbb4b['abil_rechargeTotalT'] = _0x53694e, _0x2cbb4b['abil_rechargeEndT'] = _0x3c6ce4)) : (_0x7a2958['abil_usable'] = abil_usable, _0x7a2958['abil_recharging'] = _0x41609c, _0x7a2958['abil_possible'] = _0x21b50d, _0x7a2958['abil_active'] = abil_active, _0x7a2958['abil_Type'] = _0x575a1b, _0x41609c && (_0x7a2958['abil_rechargeTotalT'] = _0x53694e, _0x7a2958['abil_rechargeEndT'] = _0x3c6ce4));
                } else {
                    if (_0x17eab5 == _0x126aac) {
                        var _0x3ba14f = _0x121706['readUInt8'](),
                            _0x207f9b = _0x52dd3a(_0x3ba14f, 0x0),
                            _0x3a2e36 = _0x52dd3a(_0x3ba14f, 0x1),
                            _0x15af53 = _0x52dd3a(_0x3ba14f, 0x2),
                            _0x445c3c = _0x52dd3a(_0x3ba14f, 0x3),
                            _0x18616f = _0x52dd3a(_0x3ba14f, 0x4);
                        _0x207f9b ? !_0x1f8068 || _0x445c3c != _0x1fac36 && $bus['emit']($bus['EVENTS']['SET_RIGHT_CLICK_ABILITY'], {
                            'abilImg': 'assets/abilities/Dive.svg',
                            'isUsable': _0x445c3c
                        }) : _0x1f8068 && $bus['emit']($bus['EVENTS']['SET_RIGHT_CLICK_ABILITY'], null), _0x1fac36 = _0x445c3c, _0x1f8068 = _0x207f9b, _0x3a2e36 ? (_0x7a2958['abil_usable'] = _0x445c3c, _0x7a2958['abil_recharging'] = _0x18616f, _0x7a2958['abil_possible'] = _0x207f9b, _0x7a2958['abil_active'] = _0x15af53, _0x7a2958['abil_Type'] = _0x22fd85, _0x18616f && (_0x7a2958['abil_rechargeTotalT'] = _0x13dee2, _0x7a2958['abil_rechargeEndT'] = _0x40542e)) : (_0x2cbb4b['abil_usable'] = _0x445c3c, _0x2cbb4b['abil_recharging'] = _0x18616f, _0x2cbb4b['abil_possible'] = _0x207f9b, _0x2cbb4b['abil_active'] = _0x15af53, _0x2cbb4b['abil_Type'] = _0x22fd85, _0x18616f && (_0x2cbb4b['abil_rechargeTotalT'] = _0x13dee2, _0x2cbb4b['abil_rechargeEndT'] = _0x40542e));
                    } else {
                        if (_0x17eab5 == _0x269d2b) {
                            var _0x4202e9 = _0x121706['readUInt8']();
                            _0x4bd0b8 = _0x52dd3a(_0x4202e9, 0x0), _0x50a9ba = _0x52dd3a(_0x4202e9, 0x1), _0x44e131 = _0x52dd3a(_0x4202e9, 0x2), _0x58da1e = _0x52dd3a(_0x4202e9, 0x3), disable1v1Button = _0x52dd3a(_0x4202e9, 0x4);
                            if (_0x411094 != null) _0x411094['isVisible'] = _0x44e131;
                            if (_0x50a9ba) {
                                if (_0x411094) _0x411094['isVisible'] = ![];
                                _0x1e61dd = ![], _0x361438 = ![];
                            }
                        } else {
                            if (_0x17eab5 == _0x1b4c85) _0x334ab6 = _0x121706['readUInt32'](), _0x5c33b6 = _0xddec75[_0x334ab6];
                            else {
                                if (_0x17eab5 == _0x2d7a03) _0x2db4b9 = _0x121706['readUInt8']() == 0x1;
                                else {
                                    if (_0x17eab5 == _0x3a1c20) _0xdc5c3c = _0x121706['readUInt16']() / 0xa;
                                    else {
                                        if (_0x17eab5 == _0x5e2eac) _0x575a1b = _0x121706['readUInt8']();
                                        else {
                                            if (_0x17eab5 == _0x5db060) {
                                                var _0x1dfe27 = _0x121706['readUInt32']();
                                                const _0x2470e0 = _0x2376d8;
                                                _0x57e88a(_0x1dfe27), _0x44cdb6(_0x2376d8, _0x2470e0);
                                            } else {
                                                if (_0x17eab5 == _0x3c620b) _0x256036 = _0x121706['readUInt8']();
                                                else {
                                                    if (_0x17eab5 == _0x552897) {
                                                        var _0x2045fe = _0x121706['readUInt32']();
                                                        if (_0x1ced3b != 'PAUSED') {
                                                            if (_0x2045fe > 0x0) _0x2e9ce5(_0x2045fe);
                                                            else {}
                                                            _0x37efc3 = _0x2045fe;
                                                        }
                                                    } else {
                                                        if (_0x17eab5 == _0x50a8ea) _0x1ced3b = _0x121706['readString']();
                                                        else {
                                                            if (_0x17eab5 == _0x2531bd) _0x186b2d(_0x121706['readUInt8']());
                                                            else {
                                                                if (_0x17eab5 == _0x29c7d3) _0x2711c6(_0x121706['readUInt8']());
                                                                else {
                                                                    if (_0x17eab5 == _0xc3e92) _0xcb4f91 = _0x121706['readUInt32']();
                                                                    else _0x17eab5 == _0x3d9b0d && (_0x35c3fd = _0x121706['readUInt8'](), $bus['emit']($bus['EVENTS']['SET_PLAYER_TEAM'], _0x35c3fd));
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
};
var _0x4dc4bd = ![];
const _0x5a0415 = function (_0xbdf200) {
var _0x57a0c5 = _0xbdf200['readBitGroup']();
_0x52e593 = _0x57a0c5['getBool'](), _0x52e593 ? (_0x105b7e = _0x57a0c5['getBool'](), _0x508d6e = _0x57a0c5['getBool']()) : (_0x52e593 = _0x105b7e = ![], _0x38eba9 = null), _0x4dc4bd = _0x57a0c5['getBool']();
};

function _0x270a4b(_0x2392ad) {
_0x397f50 = +new Date(), _0x388f22 = _0x397f50, _0x4dd61b(), _0x4fde71 = [], _0x605064 = [], _0xf54955(_0x2392ad);
var _0x4794b6 = _0x2392ad['readUInt16']();
for (var _0x79658e = 0x0; _0x79658e < _0x4794b6; _0x79658e++) {
    var _0x559b24 = _0x2392ad['readUInt32'](),
        _0x4eab37 = _0x6bd786[_0x559b24];
    if (_0x4eab37) {
        delete _0xddec75[_0x4eab37['id']], _0xddec75[_0x4eab37['id']] = _0x4eab37;
        var _0x113ece = _0x43fa6e['indexOf'](_0x4eab37); - 0x1 != _0x113ece && _0x43fa6e['splice'](_0x113ece, 0x1), _0x4eab37['drawMe'] = !![], _0x43fa6e['push'](_0x4eab37);
    }
}
var _0x3be3fb = _0x2392ad['readUInt16']();
for (var _0x40c22c = 0x0; _0x40c22c < _0x3be3fb; _0x40c22c++) {
    var _0x4eab37 = _0x3360d0['newlyVis_createGameObjFromMsg'](_0x2392ad);
    if (_0x4eab37['oType'] != _0x4acf80) _0x4eab37['mopeSeasonID'] = _0x59ed93;
    var _0x44c092 = _0x4eab37['id'];
    _0x45c413(_0x4eab37['oType']) && _0x6bd786[_0x4eab37['id']] === undefined && (_0x6bd786[_0x4eab37['id']] = _0x4eab37);
    var _0xb7fe88 = _0xddec75[_0x44c092];
    delete _0xddec75[_0x44c092];
    var _0x113ece = _0x43fa6e['indexOf'](_0xb7fe88); - 0x1 != _0x113ece && (_0x43fa6e['splice'](_0x113ece, 0x1), _0xb7fe88 && _0xb7fe88['onRemovedFromGame']()), _0xddec75[_0x44c092] = _0x4eab37, _0x43fa6e['push'](_0x4eab37);
}
_0x3be3fb = _0x2392ad['readUInt16']();
for (var _0x38d548 = 0x0; _0x38d548 < _0x3be3fb; _0x38d548++) {
    var _0x44c092 = _0x2392ad['readUInt32'](),
        _0x4eab37 = _0xddec75[_0x44c092];
    _0x4eab37 ? _0x4eab37['worldUpd_readMsgUpdate'](_0x2392ad) : console['log']('Error: Updated GameObj id ' + _0x44c092 + ' doesn\'t exist!');
}
_0x3be3fb = _0x2392ad['readUInt16']();
for (var _0x480afa = 0x0; _0x480afa < _0x3be3fb; _0x480afa++) {
    var _0x5605bc = _0x2392ad['readUInt32'](),
        _0x4eab37 = _0xddec75[_0x5605bc];
    _0x4eab37 ? _0x4eab37['worldUpd_readMsgRemovedObj'](_0x2392ad) : console['log']('Error: Removed GameObj id ' + _0x44c092 + ' doesn\'t exist!');
}
var _0x4794b6 = _0x2392ad['readUInt16']();
for (var _0x79658e = 0x0; _0x79658e < _0x4794b6; _0x79658e++) {
    var _0x1c7829 = _0x2392ad['readUInt32'](),
        _0x4eab37 = _0x6bd786[_0x1c7829];
    _0x4eab37 && (_0x4eab37['drawMe'] = ![]);
}
var _0x4794b6 = _0x2392ad['readUInt16']();
for (var _0x79658e = 0x0; _0x79658e < _0x4794b6; _0x79658e++) {
    var _0x1c7829 = _0x2392ad['readUInt32']();
    _0x6bd786[_0x1c7829] && delete _0x6bd786[_0x1c7829];
}
_0x2fa240 != null && _0x2fa240['playerWorldUpdate'](_0x2392ad), _0x277be1();
}
var _0xb2b0b0 = [_0x4a1ae4, _0x4f68c0, _0x2540e6, _0x268180, _0x367396, _0x3b0196];
let _0x5a457f = [];
const _0x277be1 = function () {
    _0x5a457f = [], _0x5a457f = _0x43fa6e['slice']();
    for (_0x34c3e5 = 0x0; _0x34c3e5 < _0x5a457f['length']; _0x34c3e5++) {
        var _0x228940 = _0x5a457f[_0x34c3e5];
        if (!_0x228940['drawMe']) continue;
        if (_0x5a457f[_0x34c3e5]['clientBatchDraw']) {
            var _0x54fa2d = ![],
                _0x194be8 = _0x5a457f[_0x34c3e5]['clientBatchDrawID'] == 0x0 ? _0x5a457f[_0x34c3e5]['oType'] : _0x5a457f[_0x34c3e5]['clientBatchDrawID'];
            for (j = 0x0; j < _0xb2b0b0['length']; j++) {
                if (_0x194be8 == _0xb2b0b0[j]) {
                    _0x54fa2d = !![];
                    break;
                }
            }!_0x54fa2d && _0xb2b0b0['push'](_0x194be8);
        }
    }
    var _0x1e92ac = {};
    for (var _0x34c3e5 = 0x0; _0x34c3e5 < _0xb2b0b0['length']; _0x34c3e5++) {
        var _0x43d20c = new _0x4da8aa();
        _0x1e92ac[_0xb2b0b0[_0x34c3e5]] = _0x43d20c, _0x5a457f['push'](_0x43d20c);
    }
    for (d = _0x5a457f['length'] - 0x1; d >= 0x0; d--) {
        var _0x5c7287 = _0x5a457f[d];
        for (e = 0x0; e < _0xb2b0b0['length']; e++) {
            var _0x4bc8f3 = _0xb2b0b0[e];
            if ((_0x4bc8f3 == _0x5c7287['oType'] || _0x4bc8f3 == _0x5c7287['clientBatchDrawID']) && !(_0x5c7287 instanceof _0x4da8aa)) {
                _0x1e92ac[_0x4bc8f3]['addBatchedObj'](_0x5c7287), _0x5a457f['splice'](d, 0x1);
                break;
            }
        }
    }
    for (d = 0x0; d < _0x5a457f['length']; d++) {
        var _0x228940 = _0x5a457f[d];
        _0x228940['calculateZIndex']();
    }
    _0x5a457f['sort'](function (_0x18fc70, _0x3acdfc) {
        return _0x18fc70['z'] == _0x3acdfc['z'] ? _0x18fc70['id'] - _0x3acdfc['id'] : _0x18fc70['z'] - _0x3acdfc['z'];
    });
},
_0x53891b = function () {
    for (d = 0x0; d < _0x5a457f['length']; d++) {
        var _0xaf9610 = _0x5a457f[d];
        if (_0xaf9610) _0xaf9610['draw']();
    }
    if (!_0x47dcae)
        for (d = 0x0; d < _0x5a457f['length']; d++) {
            if (typeof _0x5a457f[d]['chatLines'] != 'undefined') _0x5a457f[d]['drawChat']();
        }
},
_0x4dd61b = function () {
    for (d = 0x0; d < _0x4fde71['length']; d++) {
        var _0x4199e3 = _0x4fde71[d];
        if (_0xddec75['hasOwnProperty'](_0x4199e3['id'])) delete _0xddec75[_0x4199e3['id']];
        var _0x39766c = _0x43fa6e['indexOf'](_0x4199e3); - 0x1 != _0x39766c && _0x43fa6e['splice'](_0x39766c, 0x1);
    }
    for (d = 0x0; d < _0x605064['length']; d++) {
        var _0x3ba71c = _0x605064[d],
            _0x39766c = _0x43fa6e['indexOf'](_0x3ba71c); - 0x1 != _0x39766c && _0x43fa6e['splice'](_0x39766c, 0x1);
    }
};

function _0x942bc5(_0x42f84) {}
var _0x10d168 = +new Date(),
_0x25a424 = 0x0,
_0x261741 = 0x0,
_0x3b85f6 = 0x0,
_0x32e143 = 0x0,
_0x410a13 = 0.175,
_0x42d7bf = 0x258,
_0x5806da = 0x28;
const _0x45e359 = function () {
    _0x4ac9cf['globalAlpha'] = 0x1, _0x4ac9cf['fillStyle'] = _0x14bb11, _0x4ac9cf['fillRect'](0x0, -_0x42d7bf, _0x362064, _0x42d7bf + _0x5806da), _0x4ac9cf['fillRect'](0x0, _0xa7125 - _0x5806da, _0x362064, _0x42d7bf + _0x5806da), _0x4ac9cf['fillRect'](-_0x42d7bf, -_0x42d7bf, _0x42d7bf + _0x5806da, _0xa7125 + 0x2 * _0x42d7bf), _0x4ac9cf['fillRect'](_0x362064 - _0x5806da, -_0x42d7bf, _0x42d7bf, _0xa7125 + _0x5806da + 0x2 * _0x42d7bf);
},
_0x2992ae = function (_0x5a0f51) {
    _0x397f50 = +new Date();
    _0x4ac9cf['globalAlpha'] != 0x1 && (_0x4ac9cf['setTransform'](0x1, 0x0, 0x0, 0x1, 0x0, 0x0), _0x4ac9cf['globalAlpha'] = 0x1);
    _0x4ac9cf['clearRect'](0x0, 0x0, _0x3584da, _0x50f90a);
    var _0x39fd51 = (_0x397f50 - _0x388f22) / 0x3e8 / _0x410a13;
    _0x39fd51 = 0x0 > _0x39fd51 ? 0x0 : 0x1 < _0x39fd51 ? 0x1 : _0x39fd51, _0x5ac6a3 = _0x39fd51 * (_0x30a003 - _0x1617e7) + _0x1617e7, _0x2d7a8d = _0x39fd51 * (_0x353bec - _0x4a0dfa) + _0x4a0dfa, _0x4d3857 = (0x19 * _0x4d3857 + camzoom_n) / 0x1a, _0x10379a(), _0x4ac9cf['save']();
    var _0x296a60 = _0x3584da / 0x2,
        _0x111f81 = _0x50f90a / 0x2,
        _0x3a2bdb = 0x0,
        _0x3a4d98 = 0x0;
    _0x4ac9cf['translate'](_0x296a60 * (0x1 - _0x4d3857) + (_0x296a60 - _0x5ac6a3 - _0x3a4d98) * _0x4d3857, _0x111f81 * (0x1 - _0x4d3857) + (_0x111f81 - _0x2d7a8d - _0x3a2bdb) * _0x4d3857), _0x4ac9cf['scale'](_0x4d3857, _0x4d3857), _0x4ac9cf['save'](), _0x535907 ? _0x45e359() : _0x25dc01(_0x20370a(0x0), _0x165c61(0x0), _0x20370a(_0x3584da), _0x165c61(_0x50f90a), 0x0, 0x0), _0x4ac9cf['restore'](), _0x53891b(), _0x4ac9cf['restore'](), _0x2fa240 != null && _0x2fa240['drawMap'](), _0x51f6bb(), _0x4073dc();
};
var _0x510d9c = 0x0,
_0x9a03d1 = 0x0;

function _0x343482(_0x4d1c6a) {
if (_0x274a93) {
    _0x9a03d1 = _0x4d1c6a - _0x510d9c;
    if (_0x9a03d1 < _0x5d1fa2) {
        requestAnimationFrame(_0x343482);
        return;
    } else {}
    _0x510d9c = _0x4d1c6a;
}
_0x2992ae(_0x4d1c6a), _0x258e5a(), requestAnimationFrame(_0x343482);
}
window['requestAnimationFrame'] ? window['requestAnimationFrame'](_0x343482) : setInterval(_0x343482, _0x5d1fa2);
let _0x4bc3ac = ![],
_0x10da23 = ![],
_0x785295 = ![];

function _0x214da6() {
if (_0x52e593) {
    const _0x537be2 = setInterval(() => {
        _0x4bc3ac ? _0x4ec722() : (_0x10da23 = ![], clearInterval(_0x537be2));
    }, 0x1);
}
}
const _0x5dec1e = function (_0x125c47) {
    _0x3348a7();
    var _0x2a3a86 = _0x125c47['keyCode'] || _0x125c47['which'];
    if (_0x2a3a86 == 0x9) {
        _0x125c47['preventDefault']();
        return;
    }
    if (!_0x5843f8 && _0x19efaa) switch (_0x2a3a86) {
    case 0x50:
        _0x4bc3ac = !![];
        _0x785295 && (_0x214da6(), !_0x10da23 && (console['log']('SEND MOUSE COORDS INTERVAL: ON'), _0x10da23 = !![]));
        break;
    case 0x11:
    case 0xbd:
        _0x125c47['preventDefault']();
        break;
    case 0x49:
        _0x42f385(0x1, !![]), _0x125c47['preventDefault']();
        break;
    case 0x4a:
        _0x42f385(0x2, !![]), _0x125c47['preventDefault']();
        break;
    case 0x4b:
        _0x42f385(0x3, !![]), _0x125c47['preventDefault']();
        break;
    case 0x4c:
        _0x42f385(0x4, !![]), _0x125c47['preventDefault']();
        break;
    case 0x31: {
        _0x125c47['preventDefault'](), _0x3fd294(0x1, !![]);
    }
    break;
    case 0x32:
        _0x125c47['preventDefault'](), _0x3fd294(0x2, !![]);
        break;
    case 0x33:
        _0x125c47['preventDefault'](), _0x3fd294(0x3, !![]);
        break;
    case 0x34:
        _0x125c47['preventDefault'](), _0x3fd294(0x4, !![]);
        break;
    case 0x20: {
        _0x125c47['preventDefault'](), _0x4bf329(_0x393482, !![]);
    }
    break;
    case 0x57: {
        _0x125c47['preventDefault'](), _0x4bf329(_0x4b3bb1, !![]);
    }
    break;
    case 0x53: {
        _0x125c47['preventDefault'](), _0x4bf329(_0x1c3724, !![]);
    }
    break;
    case 0x1b: {
        (_0x36b8fc || _0x52e593) && (_0x125c47['preventDefault'](), _0x39e385 = !_0x39e385, _0x2e863d('Movement Lock (ESC KEY): ' + (_0x39e385 ? 'ON' : 'OFF'), 0x9c4));
    }
    break;
    case 0x45: {
        _0x125c47['preventDefault'](), _0x4bf329(_0x397705, !![]);
    }
    break;
    case 0x44: {
        _0x125c47['preventDefault'](), _0x4bf329(_0x437d09, !![]);
    }
    break;
    }
},
_0xbd2512 = function (_0x4013a5) {
    var _0x19e134 = _0x4013a5['keyCode'] || _0x4013a5['which'];
    if (_0x19e134 == 0x9) {
        _0x4013a5['preventDefault']();
        return;
    }
    if (_0x361438) return;
    if (_0x19efaa) {
        var _0x19e134 = _0x4013a5['keyCode'] || _0x4013a5['which'];
        if (_0x19e134 == 0x11) return;
        if (_0x19e134 == 0xd && !_0x17dff4) {
            _0x28419e();
            return;
        }
        if (!_0x5843f8 && _0x19efaa) switch (_0x19e134) {
        case 0x50:
            _0x4bc3ac = ![], console['log']('SEND MOUSE COORDS INTERVAL: OFF');
            break;
        case 0x5a:
            _0x2d8476();
            break;
        case 0x11:
        case 0xbd:
            _0x4013a5['preventDefault']();
            break;
        case 0x49:
            _0x42f385(0x1, ![]), _0x4013a5['preventDefault']();
            break;
        case 0x4a:
            _0x42f385(0x2, ![]), _0x4013a5['preventDefault']();
            break;
        case 0x4b:
            _0x42f385(0x3, ![]), _0x4013a5['preventDefault']();
            break;
        case 0x4c:
            _0x42f385(0x4, ![]), _0x4013a5['preventDefault']();
            break;
        case 0x51:
            _0x4013a5['preventDefault'](), _0x533e0f();
            break;
        case 0x31: {
            _0x4013a5['preventDefault'](), _0x3fd294(0x1, ![]);
        }
        break;
        case 0x32:
            _0x4013a5['preventDefault'](), _0x3fd294(0x2, ![]);
            break;
        case 0x33:
            _0x4013a5['preventDefault'](), _0x3fd294(0x3, ![]);
            break;
        case 0x34:
            _0x4013a5['preventDefault'](), _0x3fd294(0x4, ![]);
            break;
        case 0x20: {
            _0x4013a5['preventDefault'](), _0x4bf329(_0x393482, ![]);
        }
        break;
        case 0x57: {
            _0x4013a5['preventDefault'](), _0x4bf329(_0x4b3bb1, ![]);
        }
        break;
        case 0x26: {
            _0x4013a5['preventDefault'](), _0x4bf329(_0x3b380, ![]);
        }
        break;
        case 0x28: {
            _0x4013a5['preventDefault'](), _0x4bf329(_0xafdc96, ![]);
        }
        break;
        case 0x45: {
            _0x4013a5['preventDefault'](), _0x4bf329(_0x397705, ![]);
        }
        break;
        case 0x44: {
            _0x4013a5['preventDefault'](), _0x4bf329(_0x437d09, ![]);
        }
        break;
        case 0x53: {
            _0x4013a5['preventDefault'](), _0x4bf329(_0x1c3724, ![]);
        }
        break;
        }
    }
};
document['onkeydown'] = _0x5dec1e, document['onkeyup'] = _0xbd2512;

function _0x41c551(_0x52811d) {
_0x52811d['canvas_handled'] = !![], _0x3438df = _0x52811d['clientX'] * _0x185dc5, _0x13d04a = _0x52811d['clientY'] * _0x185dc5, _0x10379a();
if (!_0x1c0aba) _0x3348a7();
if (_0x2fa240 != null && _0x2fa240['interfaceButtons'] && _0x2fa240['interfaceButtons']['length'] > 0x0)
    for (var _0x22a2cf = 0x0; _0x22a2cf < _0x2fa240['interfaceButtons']['length']; _0x22a2cf++) {
        var _0x10077a = _0x2fa240['interfaceButtons'][_0x22a2cf];
        _0x10077a['isVisible'] && (_0x10077a['setMouseRawPos'](_0x3438df, _0x13d04a), _0x10077a['testPosHitsButton'](_0x3438df, _0x13d04a) ? (_0x10077a['isHighLighted'] = !![], _0x10077a['onMouseMove']()) : _0x10077a['isHighLighted'] = ![]);
    }
}

function _0x119d91(_0x3f2c29) {
_0x3348a7(), _0x3f2c29['which'] == 0x1 && _0x4bf329(_0x393482, !![]), _0x3f2c29['which'] == 0x3 && _0x4bf329(_0x4b3bb1, !![]);
}

function _0x323fde(_0x3f93fe) {
if (_0x3f93fe['which'] == 0x1) {
    _0x4bf329(_0x393482, ![]);
    if (_0x361438 && _0x397f50 - _0x4161f0 > 0x28a) return;
    if (_0x2fa240 != null && _0x2fa240['interfaceButtons'] && _0x2fa240['interfaceButtons']['length'] > 0x0) {
        _0x3438df = _0x3f93fe['clientX'] * _0x185dc5, _0x13d04a = _0x3f93fe['clientY'] * _0x185dc5;
        for (var _0x55494a = 0x0; _0x55494a < _0x2fa240['interfaceButtons']['length']; _0x55494a++) {
            var _0x35b1ed = _0x2fa240['interfaceButtons'][_0x55494a];
            if (_0x35b1ed['isVisible'] && _0x35b1ed['testPosHitsButton'](_0x3438df, _0x13d04a)) {
                _0x35b1ed['onClick']();
                break;
            }
        }
    }
}
_0x3f93fe['which'] == 0x3 && _0x4bf329(_0x4b3bb1, ![]);
}

function _0x33a364(_0x4a8ac2) {
_0x4a8ac2['toElement'] == null && _0x4a8ac2['relatedTarget'] == null && (_0x4bf329(_0x393482, ![]), _0x4bf329(_0x4b3bb1, ![]));
}
window['onmousemove'] = function (_0x4ffd19) {
_0x4ffd19['target'] !== _0x29e4e7 && !_0x4ffd19['canvas_handled'] && (_0x41c551(_0x4ffd19), _0x4ffd19['preventDefault']());
}, _0x29e4e7['onmousemove'] = function (_0xd6591f) {
!_0xd6591f['canvas_handled'] && (_0x41c551(_0xd6591f), _0xd6591f['preventDefault']());
}, _0x29e4e7['onmousedown'] = function (_0x2f4aec) {
_0x119d91(_0x2f4aec), _0x2f4aec['preventDefault']();
}, _0x29e4e7['onmouseup'] = function (_0x3d248c) {
_0x323fde(_0x3d248c), _0x3d248c['preventDefault']();
}, window['onmouseout'] = function (_0x4c2189) {
_0x33a364(_0x4c2189);
};
const _0x42f385 = function (_0xca857, _0x4a56ec) {
if (_0x3d1ca4() && _0x19efaa) {
    var _0x2092f1 = new _0xb3282e(0x3);
    _0x2092f1['writeUInt8'](_0x31d104), _0x2092f1['writeUInt8'](_0x4a56ec ? 0x1 : 0x0), _0x2092f1['writeUInt8'](_0xca857), _0x3ccf4c(_0x2092f1);
}
};
var _0x2cb6f2 = null,
_0x869bc6 = 0x0;

function _0x3fd294(_0x41770f, _0x568fdf) {
_0x2cb6f2 = _0x41770f;
if (!_0x568fdf) {
    if (_0x30b44e > 0x0) {
        if (+new Date() > _0x869bc6) {
            var _0xdf17bc = new _0xb3282e(0x5);
            _0xdf17bc['writeUInt8'](_0x33871b), _0xdf17bc['writeUInt32'](_0x30b44e), _0x3ccf4c(_0xdf17bc), _0x30b44e = 0x0, _0x2cb6f2 = null;
        }
    }
}
}
var _0x4d5ddc = 0x1;

function _0x2d8476() {
if (_0x52e593) {
    _0x4d5ddc = _0x4d5ddc == 0x0 ? 0x1 : 0x0;
    if (_0x4d5ddc == 0x0) _0x2a3c07['testDisconnect']();
    else _0x2a3c07['testReconnect']();
}
}
var _0x378267 = {},
_0x4cb106 = null,
_0x46d657 = 0x64,
_0x12e6b7 = -0xf * _0x489111,
_0x319edd = 0x0;

function _0xd33dd2(_0x172434, _0x4a2dde, _0x39491d, _0x1a31cf, _0x2df9e4, _0x25c4d8, _0x31f1fa, _0x173938) {
typeof _0x173938 === 'undefined' && (_0x173938 = !![]);
typeof _0x25c4d8 === 'undefined' && (_0x25c4d8 = 0x5);
if (typeof _0x25c4d8 === 'number') _0x25c4d8 = {
    'tl': _0x25c4d8,
    'tr': _0x25c4d8,
    'br': _0x25c4d8,
    'bl': _0x25c4d8
};
else {
    var _0x30594c = {
        'tl': 0x0,
        'tr': 0x0,
        'br': 0x0,
        'bl': 0x0
    };
    for (var _0xd57ae8 in _0x30594c) {
        _0x25c4d8[_0xd57ae8] = _0x25c4d8[_0xd57ae8] || _0x30594c[_0xd57ae8];
    }
}
_0x172434['beginPath'](), _0x172434['moveTo'](_0x4a2dde + _0x25c4d8['tl'], _0x39491d), _0x172434['lineTo'](_0x4a2dde + _0x1a31cf - _0x25c4d8['tr'], _0x39491d), _0x172434['quadraticCurveTo'](_0x4a2dde + _0x1a31cf, _0x39491d, _0x4a2dde + _0x1a31cf, _0x39491d + _0x25c4d8['tr']), _0x172434['lineTo'](_0x4a2dde + _0x1a31cf, _0x39491d + _0x2df9e4 - _0x25c4d8['br']), _0x172434['quadraticCurveTo'](_0x4a2dde + _0x1a31cf, _0x39491d + _0x2df9e4, _0x4a2dde + _0x1a31cf - _0x25c4d8['br'], _0x39491d + _0x2df9e4), _0x172434['lineTo'](_0x4a2dde + _0x25c4d8['bl'], _0x39491d + _0x2df9e4), _0x172434['quadraticCurveTo'](_0x4a2dde, _0x39491d + _0x2df9e4, _0x4a2dde, _0x39491d + _0x2df9e4 - _0x25c4d8['bl']), _0x172434['lineTo'](_0x4a2dde, _0x39491d + _0x25c4d8['tl']), _0x172434['quadraticCurveTo'](_0x4a2dde, _0x39491d, _0x4a2dde + _0x25c4d8['tl'], _0x39491d), _0x172434['closePath'](), _0x31f1fa && _0x172434['fill'](), _0x173938 && _0x172434['stroke']();
}

function _0x51c1fb() {
_0x2d1940 += (_0x57083c - _0x2d1940) * 0.1, _0xf020f8 += (_0x256036 - _0xf020f8) * 0.03;
if (_0x5332af == _0x5e6ab6) _0x1d759c += (curBarPerc_n - _0x1d759c) * 0.015;
}
const _0x51f6bb = function () {
if (_0x4c8fa8) return;
if (!_0x19efaa) return;
_0x4ac9cf['save']();
var _0x21f9a7 = _0xddec75[_0x46868a];
_0x21f9a7 && (_0x2e40d4 = _0x21f9a7['animalType'], _0x257e2d = _0x21f9a7['animalSpecies'], _0x5c69a4 = _0x21f9a7['animalSubSpecies']);
if (_0x5332af != _0x5e6ab6) _0x319edd = 0x1e;
_0x4ac9cf['save']();
var _0x3b3dcf = Math['min'](0x1c2, _0x3584da * 0.9) * _0x489111,
    _0x550a9f = 0x1e * _0x489111,
    _0x1f186e = _0x3584da / 0x2,
    _0x544445 = _0x50f90a - 0x44 * _0x489111;
_0x544445 += _0x319edd * _0x489111, _0x4ac9cf['fillStyle'] = 'black';
var _0x3730ea = '';
if (_0x1ced3b != 'null') {
    var _0x376d27 = '';
    if (_0x1ced3b['indexOf']('BEGIN') == -0x1) _0x376d27 = '\x0aYOU COULD EARN ' + _0x37efc3 + ' COINS';
    else _0x376d27 = '\x0aPLEASE WAIT!';
    _0x3730ea = _0x1ced3b + _0x376d27, _0x4ac9cf['globalAlpha'] = 0.05, _0x25e39f['alpha'] = 0.5, _0x25e39f['multiLine'] = !![];
} else _0x25e39f['multiLine'] = ![], _0x3730ea = _0x37efc3, _0x4ac9cf['globalAlpha'] = 0.3, _0x25e39f['alpha'] = 0x1;
_0x25e39f['setText'](_0x3730ea), _0x25e39f['setFontSize'](0x16 * _0x489111);
var _0x9dee81 = _0x25e39f['getRenderedCanvas'](),
    _0x552b73 = _0x9dee81['width'] + 0x19 * _0x489111,
    _0x39bc6c = _0x9dee81['height'] / 0x2 + 0xf * _0x489111;
_0x1ced3b != 'null' && (_0x552b73 = _0x3b3dcf, _0x39bc6c = _0x9dee81['height'] / 0x2 + 0xf * _0x489111);
var _0x291632 = _0x1f186e - _0x552b73 / 0x2,
    _0xa60c39 = _0x1f186e;
_0x1ced3b == 'null' && (_0x291632 = _0x1f186e + _0x12e6b7 - _0x552b73 / 0x2, _0xa60c39 = _0x291632 - _0x12e6b7 * 1.5);
_0x25e39f['x'] = _0xa60c39, _0x25e39f['y'] = _0x544445, _0x4ac9cf['fillRect'](_0x291632, _0x544445 - _0x39bc6c / 0x2, _0x552b73, _0x39bc6c), _0x4ac9cf['globalAlpha'] = 0x1, _0x25e39f['draw'](), _0x4ac9cf['restore']();
if (_0x1ced3b == 'null') {
    _0x4ac9cf['save']();
    var _0x5f30f4 = _0x297bc3('./shop/mopecoin.png');
    if (_0x5f30f4) {
        var _0x1c6fa6 = 0x1e * _0x489111,
            _0x61a9d0 = _0x1c6fa6 / _0x5f30f4['height'] * 1.25,
            _0x3ac575 = _0x5f30f4['width'] * _0x61a9d0,
            _0x3de847 = _0x5f30f4['height'] * _0x61a9d0;
        _0x4ac9cf['drawImage'](_0x5f30f4, _0x1f186e, _0x544445 - _0x3de847 / 0x2, _0x3ac575, _0x3de847);
    }
    _0x4ac9cf['restore']();
}
_0x544445 = _0x50f90a - _0x550a9f / 0x2 - 0x5, _0x3b3dcf = _0x3584da * 0.9, _0x4ac9cf['globalAlpha'] = 0x1;
if (_0x4d0b08)
    for (var _0x41a20d = 0x0; _0x41a20d < _0x5056f7['length']; _0x41a20d++) {
        var _0x2b2bf1 = _0x5056f7[_0x41a20d];
        _0x2b2bf1['draw']();
    }
if (_0x40db52) _0x159bcb();
if (_0x8e2392) {
    _0x30fcf4 += ((_0x1d313b ? 0x1 : 0x0) - _0x30fcf4) * 0.1;
    if (_0x30fcf4 > 0.005 && _0x19efaa) {
        _0x4ac9cf['globalAlpha'] = 0.3 * _0x30fcf4, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](_0x3232cd, _0x360a83, _0x12dacb * _0x185dc5, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fillStyle'] = '#000000', _0x4ac9cf['fill'](), _0x4ac9cf['globalAlpha'] = 0.5 * _0x30fcf4, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](_0x388aea, _0x58f7bc, _0x12dacb * _0x185dc5 * 0.57, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fillStyle'] = '#000000', _0x4ac9cf['fill']();
        var _0x4a3bff = _0x27d6fe * 0.3;
        _0x27d6fe -= _0x4a3bff, _0x259071 += _0x4a3bff, _0x1ddb94 += (_0x1b7f99 - _0x1ddb94) * 0.1, _0x4ac9cf['save'](), _0x4ac9cf['translate'](_0x3584da / 0x2, _0x50f90a / 0x2), _0x4ac9cf['rotate'](_0x259071), _0x4ac9cf['globalAlpha'] = 0.5 * _0x30fcf4, _0x4ac9cf['beginPath'](), _0x4ac9cf['fillStyle'] = '#000000';
        var _0x5c9b7f = 0x28 * _0x185dc5;
        if (_0xddec75[_0x46868a]) _0x5c9b7f = (0x9 + _0xddec75[_0x46868a]['rad']) * _0x4d3857;
        _0x5c9b7f *= 0.1 + 0.9 * _0x1ddb94;
        var _0x299dd8 = 0xf * _0x185dc5,
            _0x4b96ac = 0x1e * _0x185dc5 * (0.2 + 0.8 * _0x1ddb94);
        _0x4ac9cf['moveTo'](_0x5c9b7f + _0x4b96ac, 0x0), _0x4ac9cf['lineTo'](_0x5c9b7f, _0x299dd8 / 0x2), _0x4ac9cf['lineTo'](_0x5c9b7f, -_0x299dd8 / 0x2), _0x4ac9cf['closePath'](), _0x4ac9cf['fill'](), _0x4ac9cf['restore']();
    }
}
for (var _0x41a20d = _0x3cffef['length'] - 0x1; _0x41a20d >= 0x0; _0x41a20d--) {
    var _0x46524a = _0x3cffef[_0x41a20d];
    _0x46524a['draw']();
    if (_0x46524a['timedOut']) _0x3cffef['splice'](_0x41a20d, 0x1);
}
_0x4ac9cf['restore']();
};
var _0x1b9ff0 = 'Ready to survive!',
_0x3f94b8 = 0x19,
_0x3e9660 = 'white',
_0x47c521 = +new Date() + 0x0,
_0x3ca7a2 = [],
_0x3cd9fa = +new Date() + 0x0,
_0xa43c07 = 0x0,
_0x1431a3 = 0x64,
_0x2bec85 = 0x2,
_0x19abfa = ![],
_0x361438 = ![],
_0x484123 = 0x0,
_0x411ffd = [],
_0x20823d = ![],
_0x4161f0 = 0x0,
_0x5b1813 = 0x0;

function _0x2e863d(_0x2d0458, _0x40877d) {
_0x1b9ff0 = _0x2d0458, _0x47c521 = +new Date() + _0x40877d;
}

function _0x4073dc() {
var _0x8eb3a2 = 0x1,
    _0x5c2552 = (_0x47c521 - _0x397f50) / 0x3e8 / _0x8eb3a2;
_0x5c2552 = 0x0 > _0x5c2552 ? 0x0 : 0x1 < _0x5c2552 ? 0x1 : _0x5c2552;
if (_0x5c2552 > 0x0) {
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = _0x5c2552, _0x3ce729['setText'](_0x1b9ff0), _0x3ce729['setColor'](_0x3e9660);
    if (_0x1b9ff0 == 'SPECTATE MODE') _0x3f94b8 = 0x32;
    else _0x3f94b8 = 0x19;
    _0x3ce729['setFontSize'](_0x3f94b8 * _0x489111), _0x3ce729['x'] = _0x3584da / 0x2, _0x3ce729['y'] = _0x50f90a * 0.25, _0x3ce729['draw'](), _0x4ac9cf['restore']();
}
var _0x37a73d = _0x3cd9fa - _0x397f50 > 0x0 ? 0x1 : 0x0;
_0xa43c07 += (_0x37a73d - _0xa43c07) * 0.05;
if (_0xa43c07 > 0.01 && !(_0x25ea67 == 0x2)) {
    const _0x29e2f2 = parseInt(localStorage['getItem']('times_shown_tutorial') || '0');
    _0x19abfa && !_0x3693b9 && _0x29e2f2 < 0x3 && $bus['emit']($bus['EVENTS']['SHOW_ANIMAL_TUTORIAL']);
}
_0x2fa240 != null && _0x2fa240['interface'](), _0x3b9634(), _0x514e8b();
}

function _0x514e8b() {
if (_0x2fa240 != null) {
    if (_0x2fa240['interfaceButtons'])
        for (var _0x542653 = 0x0; _0x542653 < _0x2fa240['interfaceButtons']['length']; _0x542653++) {
            var _0x13b6c6 = _0x2fa240['interfaceButtons'][_0x542653];
            _0x13b6c6['isVisible'] && _0x13b6c6['draw']();
        }
}
}
var _0x3cffef = [],
_0x5dcb8a = 0x0,
_0x50d75e = 0x0;

function _0x44cdb6(_0xbd4f48, _0x36094a) {
var _0x2b2a6d = _0xbd4f48 - _0x5dcb8a;
if (_0xbd4f48 - _0x5dcb8a != 0x0 && (_0x397f50 - _0x50d75e) / 0x3e8 > 0.7) {
    _0x5dcb8a = _0xbd4f48, _0x50d75e = _0x397f50;
    var _0x463770 = new _0x2e2f02(_0x2b2a6d, ' XP');
    _0x3cffef['push'](_0x463770);
}
}
var _0x1cc05c = 0x0;

function _0x2e9ce5(_0x16c3ae, _0x1a5f4b) {
var _0x3ab010 = _0x16c3ae - _0x1cc05c;
if (_0x3ab010 > 0x0) {
    if (_0x16c3ae - _0x1cc05c != 0x0 && (_0x397f50 - _0x50d75e) / 0x3e8 > 0.7) {
        _0x1cc05c = _0x16c3ae, _0x50d75e = _0x397f50;
        var _0x3fbbe9 = new _0x2e2f02(_0x3ab010, _0x3ab010 > 0x1 ? ' COINS' : ' COIN', 'yellow');
        _0x3cffef['push'](_0x3fbbe9);
    }
}
}

function _0x183c7e() {
if (_0x1ba8e9 && _0x1ba8e9['length'] > 0x0)
    for (i = 0x0; i < _0x1ba8e9['length']; i++) {
        var _0x40f5bf = _0x1ba8e9[i];
        if (_0x40f5bf['oType'] == _0x13468b) !_0x40f5bf['droppedInHole'] && (_0x187e51(_0x40f5bf, 'brown', 0x2), _0x187e51(_0x40f5bf, 'orange', 1.5));
        else {
            if (_0x40f5bf['oType'] == _0x179e0c) _0x6ee15e(_0x40f5bf, 0x3, 0.9);
            else {
                if (_0x40f5bf['oType'] == _0x1b8199) _0x2edc1a(_0x40f5bf, 0x3, 0.9);
                else _0x187e51(_0x40f5bf, 'red', 0x2);
            }
        }
    }
}

function _0x2e3769(_0x3533a2) {
switch (_0x3533a2) {
case 0x0:
    return 'tornado';
case 0x1:
    return 'waterspout';
case 0x2:
    return 'dustdevil';
case 0x3:
    return 'arcticwhirl';
case 0x4:
    return 'firedevil';
case 0x5:
    return 'deviltwister';
}
return 'tornado';
}

function _0x6ee15e(_0x4ac970, _0x1b201e, _0x168e0b) {
var _0x20749e = '/assets/s/' + _0x59ed93 + '/img/disasters/' + _0x2e3769(_0x4ac970['specType']) + '.png',
    _0x15eb26 = _0x297bc3(_0x20749e);
if (_0x15eb26) {
    var _0x4de2e4 = _0x185dc5 * Math['max'](0x2, _0x4ac970['rad']),
        _0x344f5a = _0x4de2e4 * _0x1b201e,
        _0x1f2640 = 0x0;
    if (_0x25ea67 == 0x3) {
        var _0x5ab91f = 0x3c / 0x3c,
            _0x2557f5 = 0x3e8 / _0x5ab91f,
            _0x53154d = _0x397f50 % _0x2557f5 / _0x2557f5;
        _0x1f2640 = _0x53154d * 0x2 * Math['PI'];
    }
    _0x4ac9cf['globalAlpha'] = 0x1;
    var _0x407ccb = _0x3584da - (0xa * _0x185dc5 + _0x483570['width'] * _0x489111) + _0x4ac970['x'] * (_0x483570['width'] * _0x489111) / _0x362064,
        _0x2f4c77 = 0xa * _0x185dc5 + _0x4ac970['y'] * (_0x483570['height'] * _0x489111) / _0xa7125;
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = _0x168e0b, _0x4ac9cf['translate'](_0x407ccb, _0x2f4c77);
    if (_0x25ea67 == 0x3) _0x4ac9cf['rotate'](_0x1f2640);
    _0x4ac9cf['drawImage'](_0x15eb26, 0x0 - _0x344f5a, 0x0 - _0x344f5a, 0x2 * _0x344f5a, 0x2 * _0x344f5a), _0x4ac9cf['restore']();
}
}

function _0xc92894(_0x17905a) {
switch (_0x17905a) {
case _0x576d3c:
    return 'img/disasters/tsunami.png';
case _0x5b4260:
    return 'img/disasters/dustwave.png';
case _0x55c48a:
    return 'img/disasters/heatwave.png';
case _0x1c649c:
    return 'img/disasters/heatwave.png';
case _0x50a14e:
    return 'img/disasters/coldwave.png';
}
return null;
}

function _0x2edc1a(_0x551039, _0x2421f8, _0x1b7896) {
var _0x2a4ba6 = '/assets/s/' + _0x59ed93 + '/' + _0xc92894(_0x551039['abil']),
    _0x51d282 = _0x297bc3(_0x2a4ba6);
if (_0x51d282) {
    var _0xca10d1 = _0x185dc5 * Math['max'](0x2, _0x551039['rad']),
        _0x5e8f60 = _0xca10d1 * _0x2421f8;
    _0x4ac9cf['globalAlpha'] = 0x1;
    var _0x560242 = _0x3584da - (0xa * _0x185dc5 + _0x483570['width'] * _0x489111) + _0x551039['x'] * (_0x483570['width'] * _0x489111) / _0x362064,
        _0x4f9208 = 0xa * _0x185dc5 + _0x551039['y'] * (_0x483570['height'] * _0x489111) / _0xa7125;
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = _0x1b7896, _0x4ac9cf['translate'](_0x560242, _0x4f9208), _0x4ac9cf['rotate'](_0x551039['angle'] + _0x142401(_0x3238a5)), _0x4ac9cf['drawImage'](_0x51d282, 0x0 - _0x5e8f60, 0x0 - _0x5e8f60, 0x2 * _0x5e8f60, 0x2 * _0x5e8f60), _0x4ac9cf['restore']();
}
}
var _0x3238a5 = 0x5a;

function _0x5d65d8(_0x21343f, _0x2265db, _0x5f1e6f) {
var _0x1f203c = '/assets/s/' + _0x59ed93 + '/img/pumpkin/' + _0x21343f['specType'] + '/0.png',
    _0x34c50e = _0x297bc3(_0x1f203c);
if (_0x34c50e) {
    var _0x767fdd = _0x185dc5 * Math['max'](0x2, _0x21343f['rad']),
        _0x41a3cb = _0x767fdd * _0x2265db;
    _0x4ac9cf['globalAlpha'] = 0x1;
    var _0x2c681f = _0x3584da - (0xa * _0x185dc5 + _0x483570['width'] * _0x489111) + _0x21343f['x'] * (_0x483570['width'] * _0x489111) / _0x362064,
        _0xe8e1cb = 0xa * _0x185dc5 + _0x21343f['y'] * (_0x483570['height'] * _0x489111) / _0xa7125;
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = _0x5f1e6f, _0x4ac9cf['translate'](_0x2c681f, _0xe8e1cb), _0x4ac9cf['drawImage'](_0x34c50e, 0x0 - _0x41a3cb, 0x0 - _0x41a3cb, 0x2 * _0x41a3cb, 0x2 * _0x41a3cb), _0x4ac9cf['restore']();
}
}

function _0xc6979f(_0x2408e7, _0x5c30d0, _0x15a510) {
if (_0x2408e7) {
    var _0x248c4d = _0x185dc5 * Math['max'](0x3, _0x2408e7['rad'] * (_0x483570['width'] / _0x362064)),
        _0xb94160 = _0x3584da - (0xa * _0x185dc5 + _0x483570['width'] * _0x489111) + _0x2408e7['x'] * (_0x483570['width'] * _0x489111) / _0x362064,
        _0x2126e2 = 0xa * _0x185dc5 + _0x2408e7['y'] * (_0x483570['height'] * _0x489111) / _0xa7125,
        _0x3ed731 = _0x248c4d + _0x185dc5 * 0x2;
    _0x4ac9cf['beginPath'](), _0x4ac9cf['fillStyle'] = 'black', _0x4ac9cf['arc'](_0xb94160, _0x2126e2, _0x3ed731, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['fillStyle'] = _0x5c30d0, _0x4ac9cf['arc'](_0xb94160, _0x2126e2, _0x248c4d, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill']();
}
}

function _0x187e51(_0x247146, _0x4fdd0a, _0x86b710, _0x11a09c) {
if (_0x247146) {
    _0x4ac9cf['globalAlpha'] = _0x11a09c ? _0x11a09c : 0x1, _0x4ac9cf['fillStyle'] = _0x4fdd0a, _0x4ac9cf['beginPath']();
    var _0x338064 = _0x185dc5 * Math['max'](0x2, _0x247146['rad']);
    _0x4ac9cf['arc'](_0x3584da - (0xa * _0x185dc5 + _0x483570['width'] * _0x489111) + _0x247146['x'] * (_0x483570['width'] * _0x489111) / _0x362064, 0xa * _0x185dc5 + _0x247146['y'] * (_0x483570['height'] * _0x489111) / _0xa7125, _0x338064 * _0x86b710, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill']();
}
}

function _0x3b248b(_0x1e432a, _0x5b6ec7, _0xda5b3c) {
const _0x3acb54 = _0x1e432a['find'](_0x47a929 => _0x47a929['rank'] == _0xda5b3c);
_0x1e432a['length'] === 0xa && _0x1e432a['indexOf'](_0x3acb54) === _0x1e432a['length'] - 0x1 && _0x1e432a['pop'](), _0x47dcae ? _0x1e432a = _0x1e432a['map'](_0x267dc4 => _0x267dc4['rank'] + '. (' + _0x42ed1e(_0x267dc4['score']) + ')') : _0x1e432a = _0x1e432a['map'](_0xcdacf1 => {
    const _0x2bf244 = _0xcdacf1['name'] || 'mope.io';
    return _0xcdacf1['rank'] + '. ' + _0x2bf244 + ' (' + _0x42ed1e(_0xcdacf1['score']) + ')';
}), $bus['emit']($bus['EVENTS']['SET_LEADERBOARD'], {
    'leaders': _0x1e432a,
    'ownRank': _0xda5b3c,
    'ownScore': _0x3acb54['score']
});
}
var _0x5c3a64 = !![];

function _0x943cc6(_0x1ddd6b) {
_0x5c3a64 = _0x1ddd6b;
let _0x3f6f23 = '1',
    _0x2da09b = 'visible',
    _0x42ac8f = 'static';
!_0x1ddd6b && (_0x3f6f23 = '0', _0x2da09b = 'hidden', _0x42ac8f = 'absolute;');
const _0x3f8f70 = _0xb68574 => {
    const _0x31f740 = document['getElementById'](_0xb68574);
    _0x31f740 && (_0x31f740['style']['position'] = _0x42ac8f, _0x31f740['style']['opacity'] = _0x3f6f23, _0x31f740['style']['visibility'] = _0x2da09b);
};
_0x3f8f70('moneyRectWrap'), _0x3f8f70('moneyRectBottomWrap');
var _0x59f5c4 = document['querySelector']('.grecaptcha-badge');
_0x59f5c4 && (_0x59f5c4['style']['display'] = _0x1ddd6b ? 'block' : 'none'), $bus['emit']($bus['EVENTS']['TOGGLE_MENU_VISIBILITY'], _0x1ddd6b), _0x1ddd6b && _0x2aa201($bus['CONSTANTS']['AD_SCREEN_LAYOUTS']['MENU']);
}

function _0x131b65() {
return;
}

function _0x13d73b() {
_0x943cc6(!![]), document['getElementById']('moneyRectangle')['style']['marginTop'] = '55px', document['getElementById']('mopeMenu')['style']['display'] = 'block';
}

function _0x5f5825() {
console['log']('client objs reset!'), _0x43fa6e = [], _0xddec75 = {}, _0x4fde71 = [];
}
var _0x4eb711 = function (_0x31fe0f, _0x467d66, _0x233b4e, _0x24ce52, _0x4bb2ea) {
_0x31fe0f['fillText'](_0x467d66, _0x24ce52, _0x4bb2ea), _0x31fe0f['fillText'](': ' + _0x233b4e, _0x24ce52 + 0x78, _0x4bb2ea);
};

function _0x533e0f() {
if (!_0x44e131 || disable1v1Button) return;
var _0x46268d = new _0xb3282e(0x2);
_0x46268d['writeUInt8'](0x34), _0x46268d['writeUInt8'](0x0), _0x3ccf4c(_0x46268d);
}

function _0x159bcb() {
if (_0x4bd0b8) {
    if (_0x411094 == null) _0x411094 = new _0x2cdc0f(0x0, 0x0, 0x3c * _0x489111, 0x3c * _0x489111, 'Invite for 1v1', 0x1e), _0x411094['showLabeleOnHover'] = !![], _0x411094['textShadow'] = !![], _0x411094['drawTextOnHowever'] = function () {
        if (_0xdc5c3c > 0.01) return;
        this['drawText'](this['w'] / 0x2, this['h'] + this['h'] / 0x2);
    }, _0x411094['onClick'] = function () {
        if (_0xdc5c3c > 0.01) return;
        !this['clicked'] && (this['isVisible'] = ![], this['clicked'] = !![], this['isHighLighted'] = ![], _0x533e0f());
    }, _0x411094['onMouseMove'] = function () {}, _0x411094['update'] = function () {
        this['x'] = _0x3584da / 0x2 - this['w'] / 0x2, this['y'] = 0x2d * _0x489111 + this['h'] / 0x2;
    }, _0x411094['onInterfaceReset'] = function () {
        this['isVisible'] = ![], _0x411094 = null;
    }, _0x411094['onAfterDraw'] = function () {
        var _0x8d99c5 = _0x297bc3('img/icons/1v1.png');
        if (_0x8d99c5) {
            _0x4ac9cf['save']();
            var _0x28365e = this['w'] * 0.8,
                _0xc58c29 = (this['w'] - _0x28365e) / 0x2;
            _0x4ac9cf['drawImage'](_0x8d99c5, this['x'] + _0xc58c29, this['y'] + _0xc58c29, _0x28365e, _0x28365e), _0x4ac9cf['restore']();
        }
        if (_0xdc5c3c > 0.01) {
            this['alpha'] = 0.1, rechargeTotalT = 0x3e8 * 0x1e, rechargeEndT = +new Date() + 0x3e8 * _0xdc5c3c;
            var _0x168875 = Math['max'](0x0, rechargeEndT - _0x397f50),
                _0x3cb111 = _0x168875 / rechargeTotalT;
            _0x4ac9cf['save'](), _0x4ac9cf['fillStyle'] = '#000000';
            var _0x1ade22 = this['x'],
                _0x503adb = this['y'],
                _0x10a947 = this['w'],
                _0x4bc568 = this['h'] * 0.5;
            _0x4ac9cf['globalAlpha'] = 0.1, _0x4ac9cf['fillRect'](_0x1ade22, _0x503adb + _0x4bc568 / 0x2, _0x10a947, _0x4bc568), _0x4ac9cf['globalAlpha'] = 0x1, _0x4ac9cf['fillStyle'] = '#F3C553', _0x4ac9cf['fillRect'](_0x1ade22, _0x503adb + _0x4bc568 / 0x2, _0x10a947 * _0x3cb111, _0x4bc568), _0x4ac9cf['restore']();
        } else this['alpha'] = disable1v1Button ? 0.1 : 0x1;
    }, _0x2fa240['interfaceButtons']['push'](_0x411094);
    else {
        if (_0x411094 != null) {
            _0x411094['isVisible'] = _0x44e131 && !_0x361438 && !_0x50a9ba;
            if (_0x411094['isVisible']) _0x411094['clicked'] = ![];
            _0x411094['draw']();
        }
    }
} else _0x411094 = null;
}

function _0x17522b(_0x2966ea) {
this['interfaceType'] = _0x2966ea, this['data'] = {}, this['interfaceCanvas'] = null, this['interfaceCanvas_pos'] = 0x0, this['expiresT'] = 0x0, this['maxDur'] = 0x96, this['interfaceShowT'] = 0x0, this['animalType'] = _0xddec75[_0x46868a]['animalType'], this['aniRad'] = _0xddec75[_0x46868a]['rad'], this['customButtons'] = [], this['loadData'] = function (_0x455831) {
    this['interfaceType'] == 0x1 ? (this['maxDur'] = _0x455831['readUInt8'](), this['data'] = {}, this['data'][_0x5186e1] = _0x455831['readUInt8'](), this['data'][_0xc23298] = _0x455831['readUInt8'](), this['data'][_0x4cc8de] = _0x455831['readUInt8'](), this['data'][_0x16f423] = _0x455831['readUInt8'](), this['data'][_0x16a00e] = _0x455831['readUInt8'](), this['data'][_0x323318] = _0x455831['readUInt8'](), this['data'][_0x3fcb38] = _0x455831['readUInt8'](), this['data'][_0x33edcb] = _0x455831['readUInt8'](), this['data'][_0x2e747e] = _0x455831['readUInt8'](), this['data'][_0x3a6f75] = _0x455831['readUInt8'](), this['data'][_0x7820e] = _0x455831['readUInt8'](), this['data'][_0x1080d7] = _0x455831['readUInt8'](), this['data'][_0x309a7e] = _0x455831['readUInt8'](), this['rows'] = 0xd, this['data']['anis'] = new Array(), this['data']['anis']['push'](_0x7820e), this['data']['anis']['push'](_0x1080d7), this['data']['anis']['push'](_0x309a7e), this['data']['anis']['push'](_0x5186e1), this['data']['anis']['push'](_0xc23298), this['data']['anis']['push'](_0x4cc8de), this['data']['anis']['push'](_0x16f423), this['data']['anis']['push'](_0x16a00e), this['data']['anis']['push'](_0x323318), this['data']['anis']['push'](_0x3fcb38), this['data']['anis']['push'](_0x33edcb), this['data']['anis']['push'](_0x2e747e), this['data']['anis']['push'](_0x3a6f75)) : (this['data'] = {}, this['maxDur'] = _0x455831['readUInt8'](), this['data']['selected'] = _0x455831['readUInt8'](), this['data'][0x0] = _0x455831['readUInt8'](), this['data'][0x1] = _0x455831['readUInt8'](), this['data'][0x2] = _0x455831['readUInt8'](), this['data'][0x3] = 0x0, this['rows'] = 0x4), this['expiresT'] = _0x397f50 + this['maxDur'] * 0x3e8, this['interfaceCanvas'] == null && (this['interfaceCanvas'] = document['createElement']('canvas'), this['interfaceCanvas']['setAttribute']('id', 'playerCustomCanvas'), this['ctx'] = this['interfaceCanvas']['getContext']('2d'));
}, this['getTitle'] = function () {
    if (this['interfaceType'] == 0x1) return 'APEX KILLS';
    else {
        if (this['interfaceType'] == 0x2) return 'CHOOSE MAIN ABILITY';
        else {
            if (this['interfaceType'] == 0x3) return 'CHOOSE PASSIVE ABILITY';
            else return 'OPTIONS';
        }
    }
}, this['getInterfaceSize'] = function () {
    if (this['animalType'] == _0x5186e1) return this['aniRad'] * _0x489111;
    else return this['aniRad'] * 0x2 * _0x489111;
}, this['drawCircles'] = function (_0x510c22, _0x14729d, _0x1a3154) {
    if (this['animalType'] == _0x5186e1) return this['bdInterface'](_0x510c22, _0x14729d, _0x1a3154);
    else return this['getInterface'](_0x510c22, _0x14729d, _0x1a3154);
}, this['bdInterface'] = function (_0x229b8a, _0xe8c6ea, _0x54ffaf) {
    var _0x135bc0 = 3.1;
    this['ctx']['save'](), this['ctx']['globalAlpha'] = 0.05;
    var _0x553cc1 = _0x54ffaf * _0x135bc0;
    return this['ctx']['lineWidth'] = 0x2, this['ctx']['fillStyle'] = 'black', this['ctx']['beginPath'](), this['ctx']['arc'](_0x229b8a, _0xe8c6ea, _0x553cc1 - _0x54ffaf / 0x2, 0x0, Math['PI'] * 0x2, ![]), this['ctx']['arc'](_0x229b8a, _0xe8c6ea, _0x553cc1 + _0x54ffaf / 0x2, Math['PI'] * 0x2, 0x0, !![]), this['ctx']['fill'](), this['ctx']['globalAlpha'] = 0.1, this['ctx']['strokeStyle'] = 'black', this['ctx']['beginPath'](), this['ctx']['arc'](_0x229b8a, _0xe8c6ea, _0x553cc1 + _0x54ffaf / 0x2, Math['PI'] * 0x2, 0x0), this['ctx']['stroke'](), this['ctx']['beginPath'](), this['ctx']['arc'](_0x229b8a, _0xe8c6ea, _0x553cc1 - _0x54ffaf / 0x2, 0x0, Math['PI'] * 0x2, ![]), this['ctx']['stroke'](), this['ctx']['restore'](), _0x553cc1;
}, this['getInterface'] = function (_0x5530fc, _0x5d3418, _0x24a290) {
    var _0x3eaba5 = 0x3,
        _0x42af77 = _0x24a290 * _0x3eaba5;
    this['ctx']['lineWidth'] = 0x4, this['ctx']['fillStyle'] = 'red', this['ctx']['globalAlpha'] = 0.1, this['ctx']['beginPath']();
    var _0xbb788f = _0x24a290 * 0.9,
        _0x4b31c5 = _0x24a290 * 1.9;
    return this['ctx']['arc'](_0x5530fc, _0x5d3418, _0x42af77 - _0xbb788f, 0x0, Math['PI'] * 0x2, ![]), this['ctx']['arc'](_0x5530fc, _0x5d3418, _0x42af77 + _0x4b31c5, Math['PI'] * 0x2, 0x0, !![]), this['ctx']['fill'](), this['ctx']['globalAlpha'] = 0.1, this['ctx']['strokeStyle'] = 'blue', this['ctx']['beginPath'](), this['ctx']['arc'](_0x5530fc, _0x5d3418, _0x42af77 + _0x4b31c5, Math['PI'] * 0x2, 0x0), this['ctx']['stroke'](), this['ctx']['beginPath'](), this['ctx']['arc'](_0x5530fc, _0x5d3418, _0x42af77 - _0xbb788f, 0x0, Math['PI'] * 0x2, ![]), this['ctx']['stroke'](), _0x42af77;
}, this['drawTitle'] = function (_0x4bd060) {
    this['ctx']['globalAlpha'] = 0x1, this['ctx']['fillStyle'] = '#FFFFFF', this['ctx']['font'] = '30px Arial';
    var _0x6df713 = this['getTitle'](),
        _0x460345 = (_0x4bd060 + 0x50) * _0x489111,
        _0xe03ef6 = this['interfaceCanvas']['width'] / 0x2 - this['ctx']['measureText'](_0x6df713)['width'] / 0x2;
    if (this['animalType'] != _0x5186e1) _0x460345 -= 0x14 * _0x489111;
    this['ctx']['fillText'](_0x6df713, _0xe03ef6, _0x460345);
}, this['display'] = function () {
    if (this['interfaceCanvas'] == null) return;
    if (this['interfaceShowT'] == 0x0) this['interfaceShowT'] = _0x397f50;
    var _0x9c3152 = 0x37,
        _0x4b40e6 = 0x5,
        _0x2b21eb = 0x0,
        _0x53244b = this['getInterfaceSize'](),
        _0x154405 = 0x82 * _0x489111 + 0x6 * (_0x53244b + 0xa * _0x489111),
        _0x1c84d7 = _0x154405 * 1.3;
    _0x9c3152 = _0x1c84d7 + _0x4b40e6 * 0x2, this['interfaceCanvas']['width'] = _0x154405 + _0x4b40e6 * 0x2, this['interfaceCanvas']['height'] = _0x9c3152;
    var _0x3a522f = 0xc8;
    this['interfaceCanvas_pos'] = _0x3a522f, this['ctx']['globalAlpha'] = 0.1, this['ctx']['fillStyle'] = '#000000';
    if (this['interfaceType'] != 0x1) this['ctx']['fillRect'](0x0, 0x0, this['interfaceCanvas']['width'], this['interfaceCanvas']['height']);
    this['drawTitle'](_0x4b40e6), _0x3a522f = 0x64;
    var _0x56f42f = 0x168 / this['rows'],
        _0x5e1e61 = this['interfaceCanvas']['width'] / 0x2,
        _0x60267d = this['interfaceCanvas']['height'] / 0x2;
    this['ctx']['save']();
    var _0x4df495 = 3.1,
        _0xc554b9 = _0x53244b * _0x4df495,
        _0x47b820 = Math['PI'] * 0x2 / this['rows'],
        _0x4df036 = 0x0,
        _0x38a49d = (_0x397f50 - this['interfaceShowT']) / 0x3e8,
        _0x56f4f4 = 0x2,
        _0x6dd0c1 = 0x8;
    _0x4df036 = _0x6dd0c1 * Math['sin'](0x2 * Math['PI'] / _0x56f4f4 * _0x38a49d);
    if (this['interfaceType'] == 0x1) this['bdInterface'](_0x5e1e61, _0x60267d, _0x53244b);
    for (r = 0x0; r < this['rows']; r++) {
        var _0x2e08cc = _0x60267d + Math['sin'](_0x56f42f * r * (Math['PI'] / 0xb4) - _0x142401(0xb4)) * _0xc554b9,
            _0xe96b8e = _0x5e1e61 + Math['cos'](_0x56f42f * r * (Math['PI'] / 0xb4) - _0x142401(0xb4)) * _0xc554b9,
            _0x3f38b0 = (r - 0x1) * _0x47b820 - _0x142401(0xb4),
            _0x2f8833 = _0x3f38b0 + _0x47b820;
        if (this['interfaceType'] == 0x1) {
            ani = this['data']['anis'][r];
            var _0x57bbea = this['getSkinForAniKills'](ani),
                _0x33bde0 = _0xddec75[_0x46868a]['getSkinImageObj'](_0x57bbea);
            if (_0x33bde0) {
                var _0xa3e6a4 = this['data'][ani] > 0x0;
                this['ctx']['save'](), this['ctx']['globalAlpha'] = _0xa3e6a4 ? 0x1 : 0.3;
                var _0x2a8014 = _0x53244b;
                _0xa3e6a4 && (this['ctx']['shadowOffsetX'] = 0x0, this['ctx']['shadowOffsetY'] = 0x0, this['ctx']['shadowColor'] = 'black', this['ctx']['shadowBlur'] = 0x8, _0x2a8014 -= _0x4df036), this['ctx']['drawImage'](_0x33bde0, _0xe96b8e - _0x2a8014 / 0x2, _0x2e08cc - _0x2a8014 / 0x2, _0x2a8014, _0x2a8014), this['ctx']['restore']();
            } else {}
        } else this['showInterfaceButton'](_0x5e1e61, _0x60267d, this['data'][r], _0xe96b8e, _0x2e08cc);
    }
    this['ctx']['restore']();
    if (this['interfaceCanvas'] != null) {
        if (this['interfaceCanvas']['width']) {
            var _0x1510a0 = (_0x397f50 - this['interfaceShowT']) / 0x258,
                _0xc012af = (this['expiresT'] - _0x397f50) / 0x258;
            if (_0xc012af < 0x1) _0x1510a0 = Math['max'](0x0, _0xc012af);
            var _0x5e1da3 = Math['min'](0x1, _0x1510a0),
                _0x3a36c5 = this['interfaceCanvas']['width'] * _0x5e1da3,
                _0x1dbed5 = this['interfaceCanvas']['height'] * _0x5e1da3;
            _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = _0x5e1da3, this['interfaceCanvas']['screenX'] = _0x3584da / 0x2 - _0x3a36c5 / 0x2, this['interfaceCanvas']['screenY'] = _0x50f90a / 0x2 - _0x1dbed5 / 0x2, this['updateButtons'](), _0x4ac9cf['drawImage'](this['interfaceCanvas'], _0x3584da / 0x2 - _0x3a36c5 / 0x2, _0x50f90a / 0x2 - _0x1dbed5 / 0x2, _0x3a36c5, _0x1dbed5), _0x4ac9cf['restore'](), (_0x397f50 > this['expiresT'] || !_0x19efaa) && _0x33431f['destroy']();
        }
    }
}, this['destroy'] = function () {
    if (this['customButtons'] != null && this['customButtons']['length'] > 0x0)
        for (i = 0x0; i < this['customButtons']['length']; i++) {
            this['customButtons'][i]['isVisible'] = ![];
        }
    this['interfaceCanvas'] = null, this['ctx'] = null, _0x33431f = null, console['log']('custom interface canvas destroyed!');
}, this['updateButtons'] = function () {
    var _0x53514b = this['interfaceCanvas']['width'],
        _0x30a246 = this['interfaceCanvas']['height'],
        _0x44fa30 = _0x3584da / 0x2 - _0x53514b / 0x2,
        _0x6b3e8a = _0x50f90a / 0x2 - _0x30a246 / 0x2;
    if (this['customButtons'] != null && this['customButtons']['length'] > 0x0)
        for (i = 0x0; i < this['customButtons']['length']; i++) {
            this['customButtons'][i]['screenX'] = _0x44fa30, this['customButtons'][i]['screenY'] = _0x6b3e8a;
        }
}, this['drawAngularInterface'] = function (_0x4e6161, _0x44495b, _0x1e8b13, _0x4fb4b2, _0x26a834, _0x1f04b9) {
    this['ctx']['save'](), this['ctx']['globalAlpha'] = 0.2, this['ctx']['lineWidth'] = _0x1e8b13;
    var _0x1a8c48 = Math['PI'] * 0x2 / this['rows'],
        _0x5dc588 = _0x142401(-0x5a),
        _0x3de82c = ['red', 'green', 'blue', 'purple'];
    for (r = 0x1; r <= this['rows']; r++) {
        this['ctx']['beginPath']();
        if (this['interfaceType'] == 0x1) this['ctx']['strokeStyle'] = 'black';
        else this['ctx']['strokeStyle'] = _0x3de82c[r - 0x1];
        this['ctx']['arc'](_0x4e6161, _0x44495b, _0x26a834 - _0x4fb4b2 * _0x1f04b9, _0x5dc588, _0x5dc588 + _0x1a8c48), this['ctx']['stroke'](), _0x5dc588 += _0x1a8c48;
    }
    this['ctx']['restore']();
}, this['getSkinForAniKills'] = function (_0x205ef4) {
    switch (_0x205ef4) {
    case _0x5186e1:
        return './skins/volcano/blackdragon/0/blackdragon.png';
    case _0x4cc8de:
        return './skins/land/dinomonster/0/dinomonster.png';
    case _0x16a00e:
        return './skins/arctic/icemonster/0/icemonster.png';
    case _0xc23298:
        return './skins/volcano/landmonster/0/landmonster.png';
    case _0x16f423:
        return './skins/ocean/seamonster/0/seamonster.png';
    case _0x323318:
        return './skins/desert/scorpion/0/giantscorpion.png';
    case _0x1080d7:
        return './skins/arctic/yeti/0/yeti.png';
    case _0x33edcb:
        return './skins/land/dragon/0/dragon.png';
    case _0x2e747e:
        return './skins/land/trex/0/trex.png';
    case _0x3a6f75:
        return './skins/ocean/kraken/0/kraken.png';
    case _0x7820e:
        return './skins/ocean/kingcrab/0/kingcrab.png';
    case _0x3fcb38:
        return './skins/volcano/phoenix/0/phoenix.png';
    case _0x309a7e:
        return './skins/desert/pterodactyl/0/pterodactyl_ability.png';
    }
}, this['updateExpiry'] = function () {
    var _0x4c3f2b = (this['expiresT'] - _0x397f50) / 0x3e8;
    if (_0x4c3f2b < this['maxDur'] - 0x1 && _0x4c3f2b > 0x1) this['expiresT'] = _0x397f50 + 0x3e8;
}, this['getBtnTitle'] = function (_0x9582f4) {
    switch (_0x9582f4) {
    case _0x3d728c:
        return 'Fly High';
    case _0x1ec16a:
        return 'Gives Gifts';
    case _0x2e4f5f:
        return 'Flying Sleigh';
    default:
        return 'Close';
    }
}, this['buttons'] = {}, this['sendSelection'] = function (_0x22027e) {
    if (this['customButtons'] != null && this['customButtons']['length'] > 0x0)
        for (i = 0x0; i < this['customButtons']['length']; i++) {
            this['customButtons'][i]['resetSelection']();
        }
    _0x22027e['setSelection']();
    var _0x7e750 = new _0xb3282e(0x3);
    _0x7e750['writeUInt8'](_0x256dd5), _0x7e750['writeUInt8'](this['interfaceType']), _0x7e750['writeUInt8'](_0x22027e['buttonID']), _0x3ccf4c(_0x7e750);
}, this['showInterfaceButton'] = function (_0xc257d2, _0x112d68, _0xb54ac8, _0x54b68c, _0x389604) {
    var _0x355f40 = this['buttons'][_0xb54ac8];
    if (_0x355f40 === undefined || _0x355f40 == null) {
        var _0x1446b7 = this['getBtnTitle'](_0xb54ac8),
            _0xbdbfe6 = _0xb54ac8 == 0x0 ? {
                'w': 0x64,
                'h': 0x3c
            } : {
                'w': 0x64,
                'h': 0x64
            };
        _0x355f40 = this['buttons'][_0xb54ac8] = new _0x2cdc0f(_0x54b68c, _0x389604, _0xbdbfe6['w'], _0xbdbfe6['h'], _0x1446b7, 0x1e, this['ctx']), _0x355f40['buttonID'] = _0xb54ac8, _0x355f40['selected'] = ![], _0x355f40['isVisible'] = !![], _0x355f40['textShadow'] = !![], _0x355f40['screenX'] = 0x0, _0x355f40['screenY'] = 0x0, _0xb54ac8 != 0x0 && (_0x355f40['drawButtonRect'] = ![], _0x355f40['showLabeleOnHover'] = !![]), _0x355f40['testPosHitsButton'] = function (_0x275942, _0x126746) {
            var _0x2fe1b8 = this['screenX'] + this['x'],
                _0x34da30 = _0x2fe1b8 + this['w'],
                _0x1ab892 = this['screenY'] + this['y'],
                _0x425fa8 = _0x1ab892 + this['h'];
            if (_0x275942 < _0x2fe1b8 || _0x275942 > _0x34da30) return ![];
            if (_0x126746 < _0x1ab892 || _0x126746 > _0x425fa8) return ![];
            else return !![];
        }, _0x355f40['onClick'] = function () {
            console['log']('clicked: ' + this['label']);
            !this['clicked'] && (this['clicked'] = !![], this['isHighLighted'] = ![]);
            if (this['label'] == 'Close') _0x33431f['destroy']();
            else _0x33431f['sendSelection'](this);
        }, _0x355f40['setSelection'] = function () {
            this['labelColor'] = 'yellow', this['selected'] = !![];
        }, _0x355f40['resetSelection'] = function () {
            this['labelColor'] = 'white', this['selected'] = ![];
        }, _0x355f40['beforeDrawText'] = function () {
            var _0x461e46 = this['w'] / 0x2,
                _0x1ac630 = this['h'] / 0x2;
            this['buttonTXT']['x'] = this['screenX'] + this['x'] + _0x461e46;
            if (this['buttonID'] == 0x0) this['buttonTXT']['y'] = this['screenY'] + this['y'] + _0x1ac630;
            else this['buttonTXT']['y'] = this['screenY'] + this['y'] - _0x1ac630 / 0x2;
        }, _0x355f40['onMouseMove'] = function () {}, _0x355f40['update'] = function () {
            this['x'] = _0x54b68c - this['w'] / 0x2, this['y'] = _0x389604 - this['h'] / 0x2;
        }, _0x355f40['onInterfaceReset'] = function () {
            this['isVisible'] = ![];
        }, _0x355f40['onAfterDraw'] = function () {
            var _0x5ab50c = _0xddec75[_0x46868a];
            if (_0x5ab50c) {
                var _0x46d994 = _0x5ab50c['getAbilityInfo'](this['buttonID']);
                if (_0x46d994) {
                    var _0x58a23b = 'assets/s/' + _0x46d994['mopeSeasonID'] + '/' + _0x46d994['abilImg'],
                        _0x47b253 = _0x297bc3(_0x58a23b);
                    if (_0x47b253) {
                        _0x4ac9cf['save']();
                        (this['isHighLighted'] || this['selected']) && (_0x4ac9cf['shadowBlur'] = 0xa, _0x4ac9cf['shadowOffsetX'] = 0x0, _0x4ac9cf['shadowOffsetY'] = 0x0, _0x4ac9cf['shadowColor'] = 'yellow');
                        var _0x3294e2 = this['w'] / 0x2,
                            _0x1e17e5 = this['h'] / 0x2;
                        _0x3294e2 = this['screenX'] + this['x'], _0x1e17e5 = this['screenY'] + this['y'];
                        var _0x5658ff = this['w'];
                        _0x4ac9cf['drawImage'](_0x47b253, _0x3294e2, _0x1e17e5, _0x5658ff, _0x5658ff), _0x4ac9cf['restore']();
                    }
                }
            }
        }, _0x2fa240['interfaceButtons']['push'](_0x355f40), this['customButtons']['push'](_0x355f40), this['data']['selected'] == _0x355f40['buttonID'] && _0x355f40['setSelection']();
    } else {
        if (_0x355f40 != null) {
            if (_0x355f40['isVisible']) _0x355f40['clicked'] = ![];
            _0x355f40['draw']();
        }
    }
};
}
var _0x4ee901 = ![];

function _0x141167() {
$['ajax']({
    'url': 'https://mope-masterserver-do.mope.io/serverPlayerCounts',
    'type': 'GET',
    'success': function (_0x1931ae) {
        var _0x3c0d6a = JSON['parse'](_0x1931ae);
        _0x4ee901 = !![];
        var _0x16a154 = _0x3c0d6a['totalPlayersOnline'];
        console['log']('MasterServer: ' + _0x16a154 + ' total players online!'), _0x3cb245['setText'](_0x3fe45c(_0x16a154) + ' online');
        for (var _0x1b1f51 = 0x0; _0x1b1f51 < _0x2ae196['length']; _0x1b1f51++) {
            var _0x409e58 = _0x2ae196[_0x1b1f51],
                _0xd09b71 = ![];
            for (var _0x4f7a71 = 0x0; _0x4f7a71 < _0x3c0d6a['servers']['length']; _0x4f7a71++) {
                var _0x371410 = _0x3c0d6a['servers'][_0x4f7a71];
                if (_0x371410['name'] == _0x409e58['ip'] && !_0x371410['ofl']) {
                    _0x409e58['playersCount'] = _0x371410['pl'], _0xd09b71 = !![];
                    break;
                }
            }!_0xd09b71 && (_0x409e58['playersCount'] = -0x1);
        }
        $bus['emit']($bus['EVENTS']['SET_SERVER_LIST'], [..._0x2ae196]);
    },
    'error': function (_0x540410, _0x310e63, _0x1083d5) {
        console['log']('Error getting master server stats: ' + _0x1083d5);
    }
});
}
_0x141167(), console['log']('ACCOUNT SERVER START');
let _0xef0d2a = 'https://mope-accountserver-do.mope.io',
_0xf050be = ![];
const _0x42244c = _0x36b8fc && $config['useDevAccountServer'] ? $config['devAccountServerUrl'] : _0xef0d2a;
console['log']('Account server domain became:', _0x42244c);
const _0x169bf2 = async function (_0x2bd566, _0x5417bc, _0x2022bc = null, _0x2a4551 = null) {
let _0x2d639b = _0x42244c + '/processLogin',
    _0x14e761 = {
        'userId': _0x2022bc,
        'passwordToken': _0x2a4551,
        'sessionId': _0x2a3c07['serverInfo']['sessionId'],
        'serverId': _0x2a3c07['serverInfo']['serverId'],
        'accessToken': _0x2bd566,
        'socialNetwork': _0x5417bc
    };
try {
    const _0x318481 = await fetch(_0x2d639b, {
            'method': 'POST',
            'headers': {
                'Content-Type': 'application/json'
            },
            'body': JSON['stringify'](_0x14e761)
        }),
        _0x325f54 = await _0x318481['json']();
    return _0x325f54['success'] ? (_0x3e5bd9(_0x325f54), _0x4f7a9b(_0x325f54['login_userId'], _0x325f54['login_passwordToken'], _0x325f54['login_name'], _0x325f54['login_profilePicURL'], _0x5417bc), !![]) : ($bus['emit']($bus['EVENTS']['LOGIN_FAILED'], 'error with verifying social network token.'), ![]);
} catch (_0x32cc44) {
    return $bus['emit']($bus['EVENTS']['LOGIN_FAILED'], thrownError), console['error']('::: Social Network Login ERROR :::', _0x32cc44), ![];
}
};
var _0x2d1c6a, _0xc700b6, _0x18069d, _0x3f89c8, _0x2bc50b, _0x3693b9;
_0x120b61 && (console['log']('Checking what login_userId was:', _0x2d1c6a), _0x2d1c6a = localStorage['getItem']('login_userId'), _0x3693b9 = _0x2d1c6a !== undefined && _0x2d1c6a !== null, _0x3693b9 && (console['log']('WAS LOGGED IN!'), _0xc700b6 = localStorage['getItem']('login_passwordToken'), _0x18069d = localStorage['getItem']('login_profilePicURL'), _0x3f89c8 = localStorage['getItem']('login_name'), _0x2bc50b = localStorage['getItem']('login_socialNetworkName')));
_0x3693b9 && $bus['emit']($bus['EVENTS']['LOGIN_SUCCESS'], {
'login_userId': _0x2d1c6a,
'login_passwordToken': _0xc700b6,
'login_name': _0x3f89c8,
'profilePicUrl': _0x18069d,
'socialNetworkName': _0x2bc50b
});
if (_0x36b8fc) {
var _0x43bf8b = document['getElementById']('login_SBLabel');
_0x43bf8b && (_0x43bf8b['style']['display'] = 'block');
}
jQuery['loadScript'] = function (_0x1b4a5a, _0x47a4aa) {
    jQuery['ajax']({
        'url': _0x1b4a5a,
        'dataType': 'script',
        'success': _0x47a4aa,
        'async': !![]
    });
}, window['fbAsyncInit'] = function () {
    FB['init']({
        'appId': '342869592997869',
        'cookie': !![],
        'xfbml': !![],
        'version': 'v3.2',
        'status': !![]
    }), FB['AppEvents']['logPageView']();
},
function (_0x6f74c0, _0x1b96ec, _0x4e2922) {
    var _0x55f018, _0x1e6d79 = _0x6f74c0['getElementsByTagName'](_0x1b96ec)[0x0];
    if (_0x6f74c0['getElementById'](_0x4e2922)) return;
    _0x55f018 = _0x6f74c0['createElement'](_0x1b96ec), _0x55f018['id'] = _0x4e2922, _0x55f018['crossorigin'] = 'anonymous', _0x55f018['src'] = 'https://connect.facebook.net/en_US/sdk.js', _0x1e6d79['parentNode']['insertBefore'](_0x55f018, _0x1e6d79);
}(document, 'script', 'facebook-jssdk');

function _0x40447a() {
gapi['load']('auth2', async function () {
    try {
        auth2 = auth2 || gapi['auth2']['init']({
            'client_id': '836408408160-bqkloin1dq47r9t4t6q1giv13tvcioab.apps.googleusercontent.com',
            'cookiepolicy': 'single_host_origin'
        });
        const _0x30d218 = await auth2['signIn'](),
            _0x2bad02 = _0x30d218['getAuthResponse']()['id_token'];
        console['log']('Google signed in ()! ID token (send to server) is ' + _0x2bad02), _0x169bf2(_0x2bad02, 'google');
    } catch (_0x1ca2cd) {
        $bus['emit']($bus['EVENTS']['FINISH_SOCIAL_AUTHENTICATION'], {
            'error': 'Error logging in to Google: ' + _0x1ca2cd['message']
        });
    }
});
}
if (_0x1c90e9) _0x703bb9(), _0x181aab(), _0x1eab2d()['then'](_0xb5bb74 => {
_0xb5bb74['registerHandler']('finished-authentication-restore-check', () => {
    $bus['emit']($bus['EVENTS']['FINISH_AUTHENTICATION_RESTORE_CHECK']);
});
});
else {}
const _0x409e98 = async () => {
if (_0x3693b9) {
    const _0x554e7a = await _0xf6a107();
    !_0x554e7a && ($bus['emit']($bus['EVENTS']['FINISH_AUTHENTICATION_RESTORE_CHECK']), _0x1516af());
} else {
    var _0x3e5337 = 'none',
        _0x1032cb = new URL(window['location']['href']),
        _0x3b00ac = _0x1032cb['searchParams']['get']('testAccountSecret');
    if (_0x3b00ac) {
        _0x3e5337 = _0x3b00ac;
        let _0x32255a = '' + _0x1032cb['searchParams']['get']('user');
        !_0x5ed0cd(_0x3e5337 + _0x32255a) && (_0x32255a && _0x32255a['length'] <= 0x2 && _0x169bf2(_0x32255a, _0x3e5337, _0x3e5337 + _0x32255a, null));
    } else $bus['emit']($bus['EVENTS']['FINISH_AUTHENTICATION_RESTORE_CHECK']);
}
};
setTimeout(() => {
$bus['emit']($bus['EVENTS']['FINISH_AUTHENTICATION_RESTORE_CHECK']);
}, 0x7530), $bus['on']($bus['EVENTS']['START_SOCIAL_AUTHENTICATION'], async _0x4d138f => {
console['log']('got start social auth', _0x4d138f);
try {
    switch (_0x4d138f) {
    case 'apple':
        _0xa14d11();
        break;
    case 'facebook':
        _0x3e9bbe();
        break;
    case 'google':
        _0x40447a();
        break;
    }
} catch (_0x5a8b90) {
    $bus['emit']($bus['EVENTS']['FINISH_SOCIAL_AUTHENTICATION'], {
        'error': _0x5a8b90['message']
    });
}
}), $bus['on']($bus['EVENTS']['UI_TEST_BUTTON_CLICKED_USE_TEST_ACCOUNT'], _0x3ffa4a => {
console['log']('account: ' + _0x3ffa4a), _0x169bf2('\"' + _0x3ffa4a + '\"', _0x170d71);
}), $bus['on']($bus['EVENTS']['UI_TEST_BUTTON_CLICKED_ADD_COINS'], _0x2b91fc), $bus['on']($bus['EVENTS']['UI_TEST_BUTTON_CLICKED_RESET_PURCHASES'], _0x514a2a), $bus['on']($bus['EVENTS']['UI_PRESS_LOGOUT'], _0x553766);
var _0x170d71 = 'none',
_0x136bbc = new URL(window['location']['href']),
_0x3e8451 = _0x136bbc['searchParams']['get']('testAccountSecret');
_0x3e8451 && (console['log']('testing account enabled.'), _0x170d71 = _0x3e8451, $bus['emit']($bus['EVENTS']['ENABLE_TESTING']));

function _0x1516af() {
_0x120b61 && (localStorage['removeItem']('login_userId'), localStorage['removeItem']('login_passwordToken'), localStorage['removeItem']('login_profilePicURL'), localStorage['removeItem']('login_name'), localStorage['removeItem']('login_socialNetworkName')), _0x2d1c6a = null, _0xc700b6 = null, _0x18069d = null, _0x3f89c8 = null, _0x2bc50b = null, _0x3693b9 = ![], $bus['emit']($bus['EVENTS']['LOGOUT_COMPLETE']);
}
async function _0x553766(_0x577eb7 = !![]) {
_0x1c90e9 && (_0x577eb7 = ![]);
let _0x281bb9 = () => {};
if (_0x2bc50b === 'google') _0x281bb9 = _0x519d1d;
else {
    if (_0x2bc50b === 'facebook') _0x281bb9 = _0xd734e1;
    else _0x2bc50b === 'apple' && (_0x281bb9 = _0x1f1ffa);
}
console['log']('logging out with social network ' + _0x2bc50b);
try {
    await _0x281bb9(), await _0x56e390(_0x2d1c6a), _0x1516af();
} catch (_0x25ef1f) {
    console['error']('Error logging out:', _0x25ef1f);
}
}
const _0x56e390 = async _0x2e532e => {
let _0x2cf664 = _0x42244c + '/logout',
    _0x4b356e = {
        'userId': _0x2e532e,
        'sessionId': _0x2a3c07['serverInfo']['sessionId'],
        'serverId': _0x2a3c07['serverInfo']['serverId']
    };
try {
    await fetch(_0x2cf664, {
        'method': 'POST',
        'headers': {
            'Content-Type': 'application/json'
        },
        'body': JSON['stringify'](_0x4b356e)
    });
} catch (_0x1d2886) {
    return $bus['emit']($bus['EVENTS']['LOGOUT_FAILED'], thrownError), console['error']('::: Account Server Logout ERROR :::', _0x1d2886), ![];
}
return !![];
}, _0x3e5bd9 = _0x3044a9 => {
_0x2aaa22 = _0x3044a9, $bus['emit']($bus['EVENTS']['PLAYER_ACCOUNT_DATA'], _0x3044a9);
}, _0xf6a107 = async () => {
if (!_0x3693b9) {
    console['error']('::: verifyLocalCredentials ERROR ::: User is not logged in!');
    return;
}
const _0x1945ad = _0x42244c + '/processLogin',
    _0x4e4b90 = {
        'userId': _0x2d1c6a,
        'passwordToken': _0xc700b6,
        'sessionId': _0x2a3c07['serverInfo']['sessionId'],
        'serverId': _0x2a3c07['serverInfo']['serverId'],
        'accessToken': null,
        'socialNetwork': null
    };
try {
    const _0x1f8656 = await fetch(_0x1945ad, {
            'method': 'POST',
            'headers': {
                'Content-Type': 'application/json;charset=UTF-8'
            },
            'body': JSON['stringify'](_0x4e4b90)
        }),
        _0x3c9bc8 = await _0x1f8656['json']();
    return _0x3c9bc8['success'] ? (_0x3e5bd9(_0x3c9bc8), !![]) : (_0x553766(), console['log']('::: verifyLocalCredentials failed ::: Needs new credentials'), ![]);
} catch (_0x55e381) {
    return console['error']('::: verifyLocalCredentials ERROR :::', _0x55e381), ![];
}
};
var _0x2aaa22 = {
'coins': -0x1,
'level': 0x0,
'xp': 0x0,
'xpNextLvl': 0x0
};
const _0x267fd2 = async function () {
if (!_0x3693b9) return console['log']('not logged in!'), null;
console['log']('loading account data...');
let _0x12b597 = _0x42244c + '/loadAccountData?userId=' + _0x2d1c6a + '&passwordToken=' + _0xc700b6 + '&sessionId=' + _0x2a3c07['serverInfo']['sessionId'] + '&serverId=' + _0x2a3c07['serverInfo']['serverId'];
return new Promise((_0xc655a8, _0x5ab644) => {
    $['ajax']({
        'url': _0x12b597,
        'type': 'GET',
        'success': function (_0x2b5cd2) {
            var _0x5d0ae4 = JSON['parse'](_0x2b5cd2);
            return console['log']('Done, result is ' + _0x2b5cd2), _0x2aaa22 = _0x5d0ae4, console['log']('the resObj coins was', _0x5d0ae4['coins']), _0x5d0ae4['coins'] == 'BANNED' && setInterval(function () {
                _0x1a7e4a('Your account has been BANNED!', 'error', 0x2710);
            }, 0x2710), $bus['emit']($bus['EVENTS']['PLAYER_ACCOUNT_DATA'], _0x5d0ae4), _0xc655a8(_0x5d0ae4);
        },
        'error': function (_0x5c0d88, _0x1d58b3, _0x4f6c5b) {
            return console['error']('URL error: ' + _0x4f6c5b), console['error']('failed to refresh account data!'), _0xc655a8(null);
        }
    });
});
}, _0x1f05dc = async function (_0x442c86) {
const _0x2fa995 = await _0x267fd2();
_0x442c86 && _0x442c86(_0x2fa995);
};

function _0x4634da(_0x4b0301) {
console['log']('Loading shop items for logged in user! ' + _0x2d1c6a);
let _0x51eaea = _0x42244c + '/loadShopItems?userId=' + _0x2d1c6a + '&passwordToken=' + _0xc700b6;
console['log']('@@@@@@@ Sending URL request :' + _0x51eaea), $['ajax']({
    'url': _0x51eaea,
    'success': function (_0x2135df) {
        var _0x3c7f0c = JSON['parse'](_0x2135df);
        _0x4b0301(!![], _0x3c7f0c);
    },
    'error': function (_0x3cfdc9, _0x402030, _0x14221e) {
        console['log']('Shop loading-URL error: ' + _0x14221e), _0x4b0301(![], null);
    }
});
}
const _0x3ef9ae = function (_0x13d694, _0x47a6d6) {
if (_0x36b8fc) console['log']('Sending URL request to load coins for logged in user! ' + _0x2d1c6a);
if (!_0x13d694) _0x13d694 = 'goldDragon';
let _0x23e320 = _0x42244c + '/buyShopItem?userId=' + _0x2d1c6a + '&passwordToken=' + _0xc700b6 + '&itemName=' + _0x13d694 + '&sessionId=' + _0x2a3c07['serverInfo']['sessionId'] + '&serverId=' + _0x2a3c07['serverInfo']['serverId'];
if (_0x36b8fc) console['log']('Sending URL request :' + _0x23e320);
$['ajax']({
    'url': _0x23e320,
    'success': function (_0x12c181) {
        var _0x357837 = JSON['parse'](_0x12c181);
        _0x47a6d6(_0x357837['success'], _0x357837['reason']);
    },
    'error': function (_0x2bbbd8, _0x45c467, _0x2691e1) {
        console['log']('URL error: ' + _0x2691e1), _0x47a6d6(![], _0x2691e1);
    }
});
};

function _0x2b91fc() {
let _0x5458cd = _0x42244c + '/addCoins?userId=' + _0x2d1c6a + '&passwordToken=' + _0xc700b6;
if (_0x36b8fc) console['log']('Sending URL request :' + _0x5458cd);
$['ajax']({
    'url': _0x5458cd,
    'success': function (_0x59a1f5) {
        if (_0x36b8fc) _0x1f05dc();
    },
    'error': function (_0x70990e, _0x4267e1, _0xd157ee) {
        console['log']('URL error: ' + _0xd157ee);
    }
});
}

function _0x514a2a() {
let _0x31bc8a = _0x42244c + '/resetAccount?userId=' + _0x2d1c6a + '&passwordToken=' + _0xc700b6;
if (_0x36b8fc) console['log']('Sending URL request :' + _0x31bc8a);
$['ajax']({
    'url': _0x31bc8a,
    'success': function (_0x31ee8f) {
        console['log']('reposnse is ' + _0x31ee8f), _0x1f05dc();
    },
    'error': function (_0x33c102, _0x484b83, _0x39bb0a) {
        console['log']('URL error: ' + _0x39bb0a);
    }
});
}
const _0x4f7a9b = function (_0x40c35c, _0x471839, _0x42087a, _0x18e0ca, _0x50abe4) {
    console['log']('SUCCESSFUL LOGIN!!!', JSON['stringify']({
        'login_userId': _0x2d1c6a,
        'login_passwordToken': _0xc700b6,
        'login_name': _0x3f89c8,
        'profilePicUrl': _0x18069d,
        'socialNetworkName': _0x2bc50b
    })), _0x2d1c6a = _0x40c35c, _0xc700b6 = _0x471839, _0x18069d = _0x18e0ca, _0x3f89c8 = _0x42087a, _0x2bc50b = _0x50abe4, _0x3693b9 = !![], _0x120b61 && (console['log']('Logged in, for login_userId ' + _0x2d1c6a + ' login_passwordToken ' + _0xc700b6), localStorage['setItem']('login_userId', _0x2d1c6a), localStorage['setItem']('login_passwordToken', _0xc700b6), localStorage['setItem']('login_name', _0x3f89c8), localStorage['setItem']('login_profilePicURL', _0x18069d), localStorage['setItem']('login_socialNetworkName', _0x2bc50b)), _0x9a4156['loadData'](), $bus['emit']($bus['EVENTS']['LOGIN_SUCCESS'], {
        'login_userId': _0x2d1c6a,
        'login_passwordToken': _0xc700b6,
        'login_name': _0x3f89c8,
        'profilePicUrl': _0x18069d,
        'socialNetworkName': _0x2bc50b
    });
},
_0x275657 = function (_0x11e547, _0x3973c1) {
    if (_0x36b8fc) console['log']('Sending URL request to load coins for logged in user! ' + _0x2d1c6a);
    if (!_0x11e547) _0x11e547 = 'none';
    let _0x19d997 = _0x42244c + '/playerSettings_update?userId=' + _0x2d1c6a + '&passwordToken=' + _0xc700b6 + '&itemName=' + _0x11e547;
    if (_0x36b8fc) console['log']('Sending URL request :' + _0x19d997);
    console['log'](_0x19d997), $['ajax']({
        'url': _0x19d997,
        'success': function (_0x4e31cd) {
            var _0x5d4e51 = JSON['parse'](_0x4e31cd);
            console['log']('Done, result is ' + _0x4e31cd), _0x3973c1(_0x5d4e51['success'], _0x5d4e51['reason']);
        },
        'error': function (_0xdf9fc6, _0x485659, _0x4dbb9e) {
            console['log'](_0xdf9fc6), console['log']('ajaxOptions: ' + _0x485659), console['log']('URL error: ' + _0x4dbb9e), _0x3973c1(![], 'urlnotfound');
        }
    });
},
_0x5ed0cd = function (_0x4f5584) {
    if (_0x3693b9) {
        if (_0x2d1c6a === _0x4f5584) return !![];
    }
    return ![];
},
_0x179f86 = async () => {
    const _0x5e65e4 = _0x42244c + '/getIncentivizedAdSkins',
        _0xcff964 = {
            'userId': _0x2d1c6a,
            'passwordToken': _0xc700b6,
            'sessionId': _0x2a3c07['serverInfo']['sessionId'],
            'serverId': _0x2a3c07['serverInfo']['serverId']
        };
    try {
        const _0x3c5564 = await fetch(_0x5e65e4, {
                'method': 'POST',
                'headers': {
                    'Content-Type': 'application/json;charset=UTF-8'
                },
                'body': JSON['stringify'](_0xcff964)
            }),
            _0x5d3882 = await _0x3c5564['json']();
        return console['log'](_0x5d3882), _0x5d3882['success'] ? (console['log']('success'), !![]) : (console['log']('::: getIncentivizedAdSkins failed ::: Needs new credentials'), ![]);
    } catch (_0x39538f) {
        return console['error']('::: getIncentivizedAdSkins ERROR :::', _0x39538f), ![];
    }
};
$['loadScript']('https://apis.google.com/js/api:client.js', function () {
var _0x417c4e = function () {
    if (typeof gapi === 'undefined') return;
    gapi['load']('auth2', function () {
        auth2 = gapi['auth2']['init']({
            'client_id': '836408408160-bqkloin1dq47r9t4t6q1giv13tvcioab.apps.googleusercontent.com',
            'cookiepolicy': 'single_host_origin'
        });
    });
};
_0x417c4e();
});
async function _0x703bb9() {
const _0x938937 = await _0x1eab2d();
if (!_0x938937) {
    console['error']('Could not get an initialized nativeBridge...');
    return;
}
_0x938937['registerHandler']('google-login-failed', () => {}), _0x938937['registerHandler']('google-login-success', _0x4c0288 => {
    _0x40fc21(_0x4c0288);
}), _0x938937['registerHandler']('google-logout-success', () => {
    _0x2bc50b === 'google' && _0x1516af();
});
}
async function _0x40fc21(_0x407795) {
const _0x4b8c05 = await _0x169bf2(_0x407795, 'google');
!_0x4b8c05 && await _0x5beeb8()();
}
async function _0x40447a() {
const _0x341e39 = _0x4b9e9d();
try {
    const _0x308fd9 = await _0x341e39();
    await _0x40fc21(_0x308fd9);
} catch (_0x30a014) {
    console['error']('Error with google login:', _0x30a014['message']), $bus['emit']($bus['EVENTS']['FINISH_SOCIAL_AUTHENTICATION'], {
        'error': 'Error logging in to Google: ' + _0x30a014['message']
    });
}
};
async function _0x519d1d() {
const _0x19e1b7 = _0x5beeb8();
try {
    return _0x19e1b7();
} catch (_0x273e9e) {
    console['error']('Error with google logout:', _0x273e9e['message']);
}
}

function _0x4b9e9d() {
return !_0x1c90e9 ? (console['log']('resolve web google login'), _0x35b5c3) : (console['log']('resolve mobile google login'), _0x4d1e1f);
}

function _0x5beeb8() {
return !_0x1c90e9 ? _0x6c1f26 : _0x2727d7;
}
async function _0x35b5c3() {
return console['log']('Doing web google login.'), new Promise((_0x5040d8, _0x57a361) => {
    gapi['load']('auth2', async function () {
        console['log']('loaded auth2');
        try {
            console['log']('initializing auth2'), auth2 = auth2 || gapi['auth2']['init']({
                'client_id': $config['googleAuthClientId'],
                'cookiepolicy': 'single_host_origin'
            }), console['log']('Signing in.');
            const _0x139c9f = await auth2['signIn']();
            console['log']('Getting id token.');
            const _0x33e9bc = _0x139c9f['getAuthResponse']()['id_token'];
            return console['log']('Received id_token', _0x33e9bc), _0x5040d8(_0x33e9bc);
        } catch (_0xdc0da1) {
            return console['error']('Error with google login:', _0xdc0da1), _0x57a361(_0xdc0da1);
        }
    });
});
}
async function _0x4d1e1f() {
const _0x5c88e3 = await _0x1eab2d();
if (!_0x5c88e3) throw new Error('Did not have nativeBridge');
return new Promise((_0x2df55f, _0x424371) => {
    console['log']('Calling google-login nativeBridge handler.'), _0x5c88e3['callHandler']('google-login'), _0x5c88e3['registerHandler']('google-login-success', _0x21f931 => {
        return console['log']('Google login success!'), _0x703bb9(), _0x2df55f(_0x21f931);
    }), _0x5c88e3['registerHandler']('google-login-failed', _0x3c70c9 => {
        return console['error']('Google login from mobile device failed, error:', _0x3c70c9), _0x703bb9(), _0x424371(_0x3c70c9);
    });
});
}
async function _0x6c1f26() {
try {
    var _0x16af25 = gapi['auth2']['getAuthInstance']();
    return _0x16af25['signOut']();
} catch (_0x25d0ca) {
    console['error']('Error with web google logout:', _0x25d0ca);
}
}
async function _0x2727d7() {
const _0x17107c = await _0x1eab2d();
if (!_0x17107c) throw new Error('Did not have nativeBridge');
_0x17107c['callHandler']('google-logout');
}
window['fbAsyncInit'] = function () {
    if (typeof FB === 'undefined') return;
    FB['init']({
        'appId': '342869592997869',
        'cookie': !![],
        'xfbml': !![],
        'version': 'v3.2',
        'status': !![]
    }), FB['AppEvents']['logPageView']();
},
function (_0x2b87b9, _0x55ddb7, _0x1f3c15) {
    var _0xf92cf1, _0x12e3bc = _0x2b87b9['getElementsByTagName'](_0x55ddb7)[0x0];
    if (_0x2b87b9['getElementById'](_0x1f3c15)) return;
    _0xf92cf1 = _0x2b87b9['createElement'](_0x55ddb7), _0xf92cf1['id'] = _0x1f3c15, _0xf92cf1['src'] = 'https://connect.facebook.net/en_US/sdk.js', _0x12e3bc['parentNode']['insertBefore'](_0xf92cf1, _0x12e3bc);
}(document, 'script', 'facebook-jssdk');
async function _0x181aab() {
const _0x20b6be = await _0x1eab2d();
if (!_0x20b6be) {
    console['error']('Could not get an initialized nativeBridge...');
    return;
}
_0x20b6be['registerHandler']('facebook-login-failed', () => {}), _0x20b6be['registerHandler']('facebook-login-success', _0x3391e6 => {
    _0x4106d3(_0x3391e6);
}), _0x20b6be['registerHandler']('facebook-logout-success', () => {
    _0x2bc50b === 'facebook' && _0x1516af();
});
}
async function _0x3ed4dd() {
console['log']('Calling mobileFacebookLogin');
const _0x2c44ca = await _0x1eab2d();
if (!_0x2c44ca) throw new Error('Did not have nativeBridge');
return new Promise((_0x34fcc0, _0x538a5c) => {
    console['log']('Calling nativeBridge facebook-login handler'), _0x2c44ca['callHandler']('facebook-login'), _0x2c44ca['registerHandler']('facebook-login-success', _0x272df9 => {
        return console['log']('nativeBridge facebook-login-success called with token:', _0x272df9), _0x181aab(), _0x34fcc0(_0x272df9);
    }), _0x2c44ca['registerHandler']('facebook-login-failed', _0x658094 => {
        return console['error']('nativeBridge facebook-login-failed called with error:', _0x658094), _0x181aab(), console['error']('Facebook login from mobile device failed, error:', _0x658094), _0x538a5c(_0x658094);
    });
});
}
async function _0x4106d3(_0x2e256f) {
const _0x53e695 = await _0x169bf2(_0x2e256f, 'facebook');
!_0x53e695 && await _0x4af72a()();
}
async function _0x3e9bbe() {
const _0x26357c = _0x45efad();
try {
    const _0x1dbd54 = await _0x26357c();
    await _0x4106d3(_0x1dbd54);
} catch (_0x2df1d6) {
    console['error']('Error with facebook login:', _0x2df1d6['message']), $bus['emit']($bus['EVENTS']['FINISH_SOCIAL_AUTHENTICATION'], {
        'error': 'Error logging in to Facebook: ' + _0x2df1d6['message']
    });
}
};
async function _0xa99e1c() {
return new Promise((_0xa950ae, _0x43f3f8) => {
    FB['login'](function (_0x12bfcf) {
        if (_0x12bfcf['status'] === 'connected') {
            console['log']('Successfully got auth token from FB');
            var _0x320206 = _0x12bfcf['authResponse']['accessToken'];
            return _0xa950ae(_0x320206);
        } else return _0x43f3f8('Error logging in to FB.');
    }, {
        'scope': 'public_profile,email'
    });
});
}

function _0x45efad() {
return !_0x1c90e9 ? _0xa99e1c : _0x3ed4dd;
}

function _0x4af72a() {
return !_0x1c90e9 ? _0x351ae9 : _0xeabe9a;
}
async function _0xd734e1() {
const _0x2f3556 = _0x4af72a();
try {
    return _0x2f3556();
} catch (_0x404440) {
    console['error']('Error with facebook logout:', _0x404440['message']);
}
}
async function _0xeabe9a() {
const _0x57d3e5 = await _0x1eab2d();
if (!_0x57d3e5) throw new Error('Did not have nativeBridge');
_0x57d3e5['callHandler']('facebook-logout');
}
async function _0x351ae9() {
return new Promise((_0x2e4a5b, _0x3bb347) => {
    FB['logout'](function (_0x2fcbfb) {
        return _0x2e4a5b(!![]);
    });
});
}
let _0x214527 = ![];
const _0x55206f = () => typeof AppleID === 'object' && AppleID['hasOwnProperty']('auth');
!_0x501ae8 && $['loadScript']('https://appleid.cdn-apple.com/appleauth/static/jsapi/appleid/1/en_US/appleid.auth.js', function () {
if (_0x55206f()) {
    function _0x144b4d(_0x6458cb) {
        var _0x2de93c = '',
            _0x3fc1a5 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789',
            _0x18d127 = _0x3fc1a5['length'];
        for (var _0x2d44c0 = 0x0; _0x2d44c0 < _0x6458cb; _0x2d44c0++) {
            _0x2de93c += _0x3fc1a5['charAt'](Math['floor'](Math['random']() * _0x18d127));
        }
        return _0x2de93c;
    }
    let _0x20634d = 'https://mope.io';
    if (location['href']['includes']('edge')) _0x20634d = 'https://edge-webserver.mope.io';
    else location['href']['includes']('beta') && (_0x20634d = 'https://beta.mope.io');
    AppleID['auth']['init']({
        'clientId': 'io.mope.live.auth',
        'scope': 'name email',
        'redirectURI': _0x20634d,
        'usePopup': !![],
        'state': _0x144b4d(0x7)
    }), _0x214527 = !![];
}
});
async function _0x4567f0() {
const _0x58983a = await _0x1eab2d();
if (!_0x58983a) {
    console['error']('Could not get an initialized nativeBridge...');
    return;
}
_0x58983a['registerHandler']('apple-login-failed', () => {}), _0x58983a['registerHandler']('apple-login-success', _0x11812f => {
    _0x5db811(_0x11812f);
}), _0x58983a['registerHandler']('apple-logout-success', () => {
    _0x2bc50b === 'apple' && _0x1516af();
});
}
async function _0x5db811(_0x44d4bf, _0x3c936a) {
const _0x120696 = _0x3c936a ? {
        'name': _0x3c936a
    } : null,
    _0x1571d7 = await _0x169bf2(_0x44d4bf, 'apple', _0x120696);
!_0x1571d7 && await _0x536636()();
}
async function _0xa14d11() {
const _0x25fde2 = _0x2f18b0();
try {
    const _0x3a49f4 = await _0x25fde2();
    await _0x5db811(_0x3a49f4);
} catch (_0x29b68d) {
    console['error']('Error with apple login:', _0x29b68d['message']), $bus['emit']($bus['EVENTS']['FINISH_SOCIAL_AUTHENTICATION'], {
        'error': 'Error logging in to Apple: ' + _0x29b68d['message']
    });
}
};
async function _0x1f1ffa() {
const _0x95e7bc = _0x536636();
try {
    return _0x95e7bc();
} catch (_0x3cd2a1) {
    console['error']('Error with apple logout:', _0x3cd2a1['message']);
}
}

function _0x2f18b0() {
return !_0x1c90e9 || _0x501ae8 ? (console['log']('resolve web apple login'), _0x38b91b) : (console['log']('resolve mobile apple login'), _0x69c9cf);
}

function _0x536636() {
return !_0x1c90e9 || _0x501ae8 ? _0x50deb7 : _0x2de1c6;
}
async function _0x38b91b() {
try {
    if (!_0x214527) throw new Error('Failed to initialize apple auth library.');
    const _0x3e80a7 = await AppleID['auth']['signIn']();
    if (_0x3e80a7 && _0x3e80a7['authorization'] && _0x3e80a7['authorization']['id_token']) return console['log']('data authorization was:', _0x3e80a7['authorization']), _0x3e80a7['authorization']['id_token'];
    else throw new Error('Failed to get id token from apple.');
} catch (_0xaac3dc) {
    console['error']('error signing in ', _0xaac3dc);
    throw _0xaac3dc;
}
}
async function _0x69c9cf() {
const _0x4217df = await _0x1eab2d();
if (!_0x4217df) throw new Error('Did not have nativeBridge');
return new Promise((_0x27f5e6, _0x783ac5) => {
    console['log']('Calling apple-login nativeBridge handler.'), _0x4217df['callHandler']('apple-login'), _0x4217df['registerHandler']('apple-login-success', _0x3dc890 => {
        return console['log']('Apple login success!'), _0x4567f0(), _0x27f5e6(_0x3dc890);
    }), _0x4217df['registerHandler']('apple-login-failed', _0x5bd2f2 => {
        return console['error']('Apple login from mobile device failed, error:', _0x5bd2f2), _0x4567f0(), _0x783ac5(_0x5bd2f2);
    });
});
}
async function _0x50deb7() {
try {
    var _0x4b0872 = gapi['auth2']['getAuthInstance']();
    return _0x4b0872['signOut']();
} catch (_0x24577e) {
    console['error']('Error with web apple logout:', _0x24577e);
}
}
async function _0x2de1c6() {
const _0x46845f = await _0x1eab2d();
if (!_0x46845f) throw new Error('Did not have nativeBridge');
_0x46845f['callHandler']('apple-logout');
}
var _0x5d4462 = null,
_0x2c2df3 = +new Date();
let _0x54ed45 = ![];

function _0x585c30(_0x3b208f) {
var _0x44ff4a = location['protocol'] == 'https:' ? 'https:' : 'http:',
    _0x668b56 = location['host']['endsWith']('mope.io') ? location['host'] : 'mope.io',
    _0x47719c = _0x44ff4a + '//' + _0x668b56;
$['ajax']({
    'url': _0x42244c + '/getXsollaToken',
    'type': 'GET',
    'data': {
        'userId': _0x2d1c6a,
        'passwordToken': _0xc700b6,
        'settings_ui_version': _0x289489 ? 'mobile' : 'desktop',
        'return_url': _0x47719c
    },
    'success': function (_0x259b71) {
        var _0x286e07 = JSON['parse'](_0x259b71);
        _0x3b208f(_0x286e07['success'] ? _0x286e07['token'] : null);
    },
    'error': function (_0x5cd61c, _0x59f9f9, _0x1cd411) {
        var _0x6094fc = JSON['parse'](_0x5cd61c['responseText']);
        console['log']('Error getting token: ' + _0x1cd411), _0x1a7e4a(_0x6094fc['reason'], 'error', 0xa), _0x3b208f(![], null);
    }
});
}
var _0x5e40e6 = ![];
$bus['on']($bus['EVENTS']['UI_OPEN_XSOLLA_SHOP'], () => {
if (_0x1c90e9) {
    alert('Please open mope.io in your browser to buy coins (can\'t buy them in the app yet!)');
    return;
}
_0x585c30(function (_0x2172ed) {
    if (_0x2172ed) {
        console['log']('Got xsolla token ' + _0x2172ed);
        var _0x19e697;
        if (_0x54ed45) _0x19e697 = 'https://sandbox-secure.xsolla.com/paystation2/?access_token=' + _0x2172ed;
        else _0x19e697 = 'https://secure.xsolla.com/paystation2/?access_token=' + _0x2172ed;
        $bus['emit']($bus['EVENTS']['LOADED_XSOLLA_IFRAME_SRC'], _0x19e697);
    }
});
});

function _0xc3a572(_0x67f005) {
var _0x528da5 = {
        'access_token': 'abcdef1234567890abcdef1234567890'
    },
    _0x11d255 = document['createElement']('script');
_0x11d255['type'] = 'text/javascript', _0x11d255['async'] = !![], _0x11d255['src'] = '//static.xsolla.com/embed/paystation/1.0.8/widget.min.js', _0x11d255['addEventListener']('load', function (_0x2eced) {
    XPayStationWidget['init'](_0x528da5);
}, ![]), _0x11d255['addEventListener']('status-done', () => {
    _0x1f05dc(() => {
        $bus['emit']($bus['EVENTS']['XSOLLA_PAYMENT_FINISHED']);
    });
});
var _0x320d51 = document['getElementsByTagName']('head')[0x0];
_0x320d51['appendChild'](_0x11d255);
}
$bus['on']($bus['EVENTS']['UI_SET_GRAPHICS'], _0x4181b2 => {
_0x477bf6(_0x4181b2), _0x4e8c25();
});
(typeof _0x25ea67 === 'undefined' || _0x25ea67 === null || _0x25ea67 === undefined) && (window['options_graphicsLevel'] = 0x3);
if (_0x25ea67 < 0x2) _0x25ea67 = 0x2;
$bus['emit']($bus['EVENTS']['INITIALIZE_DEFAULT_GRAPHICS_LEVEL'], _0x25ea67);

function _0x477bf6(_0x41beeb) {
var _0x54c856 = _0x41beeb == _0x25ea67;
_0x25ea67 = _0x41beeb;
if (window['localStorage']) try {
    window['localStorage']['setItem']('options_graphicsLevel', _0x25ea67);
} catch (_0x37ae08) {}
_0x54c856 && (_0x87197f = !![]);
}
var _0x2df2b4 = 0x0,
_0x1a4f35 = 0x0,
_0xc652ef = +new Date(),
_0x103427 = +new Date(),
_0x500150 = 0x0,
_0x11cfc9 = 0x0;

function _0x258e5a() {
_0x2df2b4 += 0x1, _0x397f50 - _0xc652ef > 0x7d0 && (_0xc652ef = Date['now'](), _0x500150 = Math['round'](_0x2df2b4 / 0x2), _0x2df2b4 = 0x0);
}

function _0x43f27c(_0x5a4b27) {
_0x18acd1['setText']('fps: ' + _0x500150);
}
setInterval(function () {
_0x43f27c(_0x500150);
}, _0x14c854), $bus['on']($bus['EVENTS']['UI_PRESS_PLAY'], () => {
console['log']('google tag manager fps metric tracking start', _0x187b4f['name']), gtag('event', 'fps_start', {
    'event_category': 'client_fps',
    'event_label': _0x500150,
    'value': _0x500150
}), gtag('event', 'fps_start', {
    'event_category': 'client_fps_' + _0x187b4f['name'],
    'event_label': _0x500150,
    'value': _0x500150
}), setTimeout(() => {
    gtag('event', 'fps_30s', {
        'event_category': 'client_fps',
        'event_label': _0x500150,
        'value': _0x500150
    }), gtag('event', 'fps_30s', {
        'event_category': 'client_fps_' + _0x187b4f['name'],
        'event_label': _0x500150,
        'value': _0x500150
    }), console['log']('sent fps 30 seconds google tag event');
}, 0x7530), setTimeout(() => {
    gtag('event', 'fps_5min', {
        'event_category': 'client_fps',
        'event_label': _0x500150,
        'value': _0x500150
    }), gtag('event', 'fps_5min', {
        'event_category': 'client_fps_' + _0x187b4f['name'],
        'event_label': _0x500150,
        'value': _0x500150
    }), console['log']('sent fps 5 min google tag event');
}, 0x3c * 0x3e8 * 0x5);
});
const _0x4ddd97 = performance['now']();
$bus['on']($bus['EVENTS']['ANIMAL_CHOICE_START'], () => {
console['log']('::: gtag animal_choice_start :::'), gtag('event', 'animal_choice_start', {
    'event_category': 'animal_choice',
    'event_label': 0x0,
    'value': 0x0
});
}), $bus['on']($bus['EVENTS']['ANIMAL_CHOICE_CONFIRMED'], () => {
const _0x2db312 = performance['now'](),
    _0x4a7a08 = Math['round']((_0x2db312 - _0x4ddd97) / 0x3e8);
console['log']('::: gtag animal_choice_end ' + _0x4a7a08 + ' :::'), gtag('event', 'animal_choice_end', {
    'event_category': 'animal_choice',
    'event_label': _0x4a7a08,
    'value': _0x4a7a08
});
});
let _0x40f1d5 = window['innerWidth'] - 0x96,
_0x441c19 = window['innerHeight'] - 0x96;
$bus['on']($bus['EVENTS']['UPDATED_EXPERIENCE_BAR_POSITION'], _0x14400e => {
_0x40f1d5 = _0x14400e['right'] * window['devicePixelRatio'], _0x441c19 = _0x14400e['top'] * window['devicePixelRatio'];
});

function _0x2e2f02(_0x465150, _0x23ac62, _0x2a3235) {
this['animStep'] = 0x1, this['animStartT'] = _0x397f50, this['animDur'] = 0xbb8, this['timedOut'] = ![], this['xShift'] = _0x4eafe3(-0xa, 0xa), this['yShift'] = _0x4eafe3(-0xa, 0xa), this['anlgeShift'] = _0x4eafe3(-0xa, 0xa), this['text'] = new _0x128c61(0x10, 'white'), this['text']['setText']((_0x465150 >= 0x0 ? '+ ' : '') + _0xd46a2e(_0x465150) + _0x23ac62), this['textFontSz'] = 0x1e;
var _0x3706dc = 'white';
_0x465150 > 0x2710 && (_0x3706dc = '#c7b753', this['textFontSz'] = 0x28, this['animDur'] += 0x3e8), _0x465150 > 0x186a0 && (_0x3706dc = '#fdca5b', this['textFontSz'] = 0x2d, this['animDur'] += 0x7d0), _0x465150 > 0xf4240 && (_0x3706dc = '#c7b753', this['textFontSz'] = 0x33, this['animDur'] += 0x7d0), _0x465150 < 0x0 && (_0x3706dc = '#c65f59', this['animDur'] += 0x7d0), _0x3706dc = _0x2a3235 === undefined ? _0x3706dc : _0x2a3235, this['text']['setColor'](_0x3706dc), this['draw'] = function () {
    if (_0x5bdc9a['noXpPopups']) return;
    var _0x34f1ce = _0x1ce2eb((_0x397f50 - this['animStartT']) / this['animDur'], 0x0, 0x1);
    _0x4ac9cf['save']();
    var _0x2a8c2d = _0x40f1d5,
        _0x33c52c = _0x441c19 + _0x34f1ce * (-0x96 * _0x489111);
    _0x4ac9cf['translate'](_0x2a8c2d, _0x33c52c), _0x4ac9cf['rotate'](_0x142401(this['anlgeShift'] * _0x34f1ce)), _0x4ac9cf['globalAlpha'] = 0x1 - _0x34f1ce, this['text']['setFontSize'](this['textFontSz'] * _0x489111), this['text']['x'] = 0x0, this['text']['y'] = 0x0, this['text']['draw'](), _0x4ac9cf['restore']();
    if (_0x397f50 >= this['animStartT'] + this['animDur']) this['timedOut'] = !![];
};
}

function _0x35ed11(_0x416584, _0x1eb4b0, _0x57c0e1, _0x4196c6) {
this['animStep'] = 0x1, this['animStartT'] = _0x397f50, this['timedOut'] = ![], this['xShift'] = _0x4eafe3(-0xa, 0xa), this['yShift'] = _0x4eafe3(-0xa, 0xa), this['anlgeShift'] = _0x4eafe3(-0xa, 0xa), this['text'] = new _0x128c61(_0x1eb4b0, _0x57c0e1), this['text']['setText'](_0x416584), this['textFontSz'] = _0x1eb4b0, this['animDur'] = _0x4196c6, this['text']['setColor'](_0x57c0e1), this['draw'] = function () {
    if (_0x2b40f8) return;
    var _0x405f20 = _0x1ce2eb((_0x397f50 - this['animStartT']) / this['animDur'], 0x0, 0x1);
    _0x4ac9cf['save']();
    var _0x3341c3 = _0x3584da / 0x2,
        _0x94bfad = _0x50f90a - 0x55 * _0x489111 + _0x405f20 * (-0x96 * _0x489111);
    _0x4ac9cf['translate'](_0x3341c3, _0x94bfad), _0x4ac9cf['globalAlpha'] = 0x1 - _0x405f20, this['text']['setFontSize'](this['textFontSz'] * _0x489111), this['text']['x'] = 0x0, this['text']['y'] = 0x0, this['text']['draw'](), _0x4ac9cf['restore']();
    if (_0x397f50 >= this['animStartT'] + this['animDur']) this['timedOut'] = !![];
};
}
var _0x45ae06 = 0xc8;

function _0x5be53c() {
var _0x25df8c = _0x8e2392 && _0x1f76a1 < 0x1f4 ? 1.4 : 0x1;
_0xd2962b['w'] = _0xd2962b['h'] = _0x45ae06 * _0x489111 * _0x25df8c, _0x7a2958['w'] = _0x7a2958['h'] = _0x45ae06 * _0x489111 * _0x25df8c, _0x2cbb4b['w'] = _0x2cbb4b['h'] = _0x45ae06 * _0x489111 * _0x25df8c, _0x4f1ac4['w'] = 0x3c * _0x185dc5 * _0x25df8c, _0x4f1ac4['h'] = 0x1e * _0x185dc5 * _0x25df8c;
const _0x3ed11f = 0x32;
_0xd2962b['x'] = 0x19 * _0x185dc5 * _0x25df8c + _0xd2962b['w'] / 0x2, _0xd2962b['x'] -= _0x3ed11f, _0xd2962b['y'] = _0x50f90a - (0x28 * _0x185dc5 + _0xd2962b['w'] / 0x2);
_0x526b38 && (_0xd2962b['x'] = _0x3584da - _0xd2962b['x']);
_0x7a2958['x'] = _0xd2962b['x'];
if (!_0x8e2392) _0x7a2958['y'] = _0xd2962b['y'];
else _0x7a2958['y'] = _0xd2962b['y'] - (0xa * _0x185dc5 * _0x25df8c + _0x7a2958['w'] / 0x2 + _0xd2962b['w'] / 0x2);
_0x2cbb4b['x'] = _0xd2962b['x'], _0x2cbb4b['y'] = _0x7a2958['y'] - (0xa * _0x185dc5 * _0x25df8c + _0x2cbb4b['w'] / 0x2 + _0x7a2958['w'] / 0x2);
_0x3584da > 0x300 ? _0x4f1ac4['x'] = Math['min'](_0x3584da / 0x2 + 0x64 * _0x185dc5 * _0x25df8c, _0x3584da * 0.8) - 0x12c : _0x4f1ac4['x'] = _0x3584da / 0x2;
_0x4f1ac4['y'] = 0xf * _0x185dc5 + _0x4f1ac4['h'] / 0x2, _0x49b3ea['setPosAndSize'](_0x4f1ac4['x'] - (_0x4f1ac4['w'] / 0x2 + 0xa * _0x185dc5 * _0x25df8c), _0x4f1ac4['y'], 0x3c * _0x185dc5 * _0x25df8c, 0x1e * _0x185dc5 * _0x25df8c, 0x1, 0.5), _0x1c4ae3['setPosAndSize'](_0x49b3ea['x'], _0x49b3ea['y'] + _0x49b3ea['h'] / 0x2 + 0xa * _0x185dc5 * _0x25df8c, 0x3c * _0x185dc5 * _0x25df8c, 0x1e * _0x185dc5 * _0x25df8c, 0.5, 0x0);
for (var _0x1d2f62 = 0x0; _0x1d2f62 < _0x5056f7['length']; _0x1d2f62++) {
    var _0xc4a090 = _0x5056f7[_0x1d2f62];
    _0xc4a090['visible'] = _0x8e2392;
}
_0x7a2958['visible'] = !![], _0x2cbb4b['visible'] = !![], _0x49b3ea['visible'] = _0x49b3ea['touchEnabled'] = _0x8e2392, _0x1c4ae3['visible'] = _0x1c4ae3['touchEnabled'] = _0x8e2392 && _0x36b8fc;
}
_0x29e4e7['addEventListener']('gesturestart', function (_0x1bbd07) {
_0x1bbd07['preventDefault']();
});

function _0x57c7df() {
for (var _0x262c02 = 0x0; _0x262c02 < _0x5056f7['length']; _0x262c02++) {
    var _0x16afae = _0x5056f7[_0x262c02];
    _0x16afae['pressed'] = ![], _0x16afae['pressedTouchID'] = -0x1;
}
_0x1d313b = ![];
}
_0x29e4e7['ontouchstart'] = function (_0x480a85) {
_0x3348a7();
var _0x142824 = _0x480a85['touches'];
_0x142824['length'] == 0x1 && _0x57c7df();
if (!_0x19efaa) return;
for (var _0x4bdc83 = 0x0; _0x4bdc83 < _0x480a85['changedTouches']['length']; _0x4bdc83++) {
    var _0x208b3c = _0x480a85['changedTouches'][_0x4bdc83];
    for (var _0x35eab9 = 0x0; _0x35eab9 < _0x5056f7['length']; _0x35eab9++) {
        var _0x16c571 = _0x5056f7[_0x35eab9],
            _0xab4619 = _0x16c571['testPosHitsButton'](_0x208b3c['clientX'] * _0x185dc5, _0x208b3c['clientY'] * _0x185dc5);
        if (_0xab4619 && !_0x16c571['pressed'] && _0x16c571['touchEnabled']) {
            _0x480a85['preventDefault'](), _0x16c571['pressed'] = !![], _0x16c571['pressedTouchID'] = _0x208b3c['identifier'], _0x16c571['onButtonTouchStart']();
            return;
        }
    }
}
if (!_0x57dd50) {
    if (!_0x1d313b) {
        var _0x208b3c = _0x480a85['changedTouches'][0x0];
        _0x1d313b = !![], _0x3232cd = _0x208b3c['clientX'] * _0x185dc5, _0x360a83 = _0x208b3c['clientY'] * _0x185dc5, _0x388aea = _0x3232cd, _0x58f7bc = _0x360a83, _0x50939a = _0x208b3c['identifier'];
        return;
    }
}
_0x3438df = _0x480a85['touches'][0x0]['clientX'] * _0x185dc5, _0x13d04a = _0x480a85['touches'][0x0]['clientY'] * _0x185dc5, _0x10379a();
};
var _0x3f5032 = 0x0,
_0xc80e20 = 0x0,
_0x402134 = 0x0,
_0x326c80 = 0x1;
_0x29e4e7['ontouchmove'] = function (_0xd2f3d5) {
_0x3348a7(), _0xd2f3d5['preventDefault']();
for (var _0x214a49 = 0x0; _0x214a49 < _0xd2f3d5['changedTouches']['length']; _0x214a49++) {
    var _0x33efde = _0xd2f3d5['changedTouches'][_0x214a49];
    if (_0x33efde['identifier'] == _0x7a2958['pressedTouchID']) {
        if (_0xd2962b['pressedTouchID'] == -0x1) {
            var _0x13246d = _0xd2962b['testPosHitsButton'](_0x33efde['clientX'] * _0x185dc5, _0x33efde['clientY'] * _0x185dc5),
                _0xcfdbdf = _0xd2962b['pressed'];
            _0xd2962b['pressed'] = _0x13246d;
            if (_0x13246d && !_0xcfdbdf) _0x4bf329(_0x393482, !![]);
            else !_0x13246d && _0xcfdbdf && _0x4bf329(_0x393482, ![]);
        }
        continue;
    }
    if (!_0x57dd50) {
        if (_0x1d313b && _0x33efde['identifier'] == _0x50939a) {
            var _0x25e284 = _0x33efde['clientX'] * _0x185dc5 - _0x3232cd,
                _0x5a3c55 = _0x33efde['clientY'] * _0x185dc5 - _0x360a83,
                _0x34ff84 = Math['sqrt'](_0x25e284 * _0x25e284 + _0x5a3c55 * _0x5a3c55);
            if (_0x34ff84 > 0x0) {
                var _0x478c40 = _0x25e284 / _0x34ff84,
                    _0x2c983a = _0x5a3c55 / _0x34ff84,
                    _0x3066be = Math['min'](0x1, _0x34ff84 / (_0x12dacb * _0x185dc5));
                if (_0x3066be < 0.35) _0x3066be = 0x0;
                var _0x12d272 = Math['pow'](_0x3066be, 0x2),
                    _0x7877b0 = 0x12c * _0x185dc5 * _0x12d272,
                    _0x56ef15 = Math['atan2'](_0x2c983a, _0x478c40);
                _0x27d6fe = _0x9e3352(_0x259071, _0x56ef15), _0x1b7f99 = _0x3066be, _0x388aea = _0x3232cd + _0x12dacb * _0x185dc5 * _0x478c40 * _0x3066be, _0x58f7bc = _0x360a83 + _0x12dacb * _0x185dc5 * _0x2c983a * _0x3066be, _0x3438df = _0x3584da / 0x2 + _0x478c40 * _0x7877b0, _0x13d04a = _0x50f90a / 0x2 + _0x2c983a * _0x7877b0, _0x10379a();
            }
        }
    } else _0x3438df = _0x33efde['clientX'] * _0x185dc5, _0x13d04a = _0x33efde['clientY'] * _0x185dc5, _0x10379a();
}
}, _0x29e4e7['ontouchend'] = function (_0x1f132b) {
for (var _0x5a90bf = 0x0; _0x5a90bf < _0x1f132b['changedTouches']['length']; _0x5a90bf++) {
    var _0x1803aa = _0x1f132b['changedTouches'][_0x5a90bf];
    if (_0x1d313b && _0x1803aa['identifier'] == _0x50939a) {
        _0x1d313b = ![], _0x50939a = -0x1;
        continue;
    }
    for (var _0x332620 = 0x0; _0x332620 < _0x5056f7['length']; _0x332620++) {
        var _0x10a49e = _0x5056f7[_0x332620];
        if (_0x10a49e['pressed'] && _0x10a49e['pressedTouchID'] == _0x1803aa['identifier'] && _0x10a49e['touchEnabled']) {
            _0x10a49e['pressed'] = ![], _0x10a49e['pressedTouchID'] = -0x1;
            if (_0x19efaa) _0x10a49e['onButtonTouchEnd']();
            return;
        }
    }
}
}, _0x29e4e7['ontouchcancel'] = function (_0x218c7b) {
console['log']('touch cancel'), _0x29e4e7['ontouchend'](_0x218c7b);
}, _0x29e4e7['ontouchleave'] = function (_0x301e2a) {
console['log']('touch leave');
}, _0x5adfe2['prototype'] = {
'id': 0x0,
'drawMe': !![],
'oType': _0x1c9a8f,
'spawnTime': 0x0,
'rPer': 0x0,
'updateTime': 0x0,
'x': 0x0,
'y': 0x0,
'ox': 0x0,
'oy': 0x0,
'nx': 0x0,
'ny': 0x0,
'rad': 0x0,
'oRad': 0x0,
'nRad': 0x0,
'angle': 0x0,
'oAngle': 0x0,
'angleDelta': 0x0,
'moveUpdF': 0x0,
'z': 0x0,
'name': '',
'dead': ![],
'type': 0x0,
'curBiome': 0x0,
'isRectangle': ![],
'rectW': 0x0,
'rectH': 0x0,
'specType': 0x0,
'toString': function () {
    return '[GObj t=' + this['oType'] + ' id=' + this['id'] + ']';
}
}, _0x5adfe2['prototype']['flag_hurt'] = ![], _0x5adfe2['prototype']['hpPer'] = _0x5adfe2['prototype']['hpPer_n'] = _0x5adfe2['prototype']['hpBarA'] = 0x0, _0x5adfe2['prototype']['infectionPer'] = _0x5adfe2['prototype']['infectionPer_n'] = _0x5adfe2['prototype']['infectionBarA'] = 0x0, _0x5adfe2['prototype']['curePer'] = _0x5adfe2['prototype']['curePer_n'] = _0x5adfe2['prototype']['cureBarA'] = 0x0, _0x5adfe2['prototype']['hpBarTimeoutT'] = 0x0, _0x5adfe2['prototype']['alwaysPlainOutline'] = ![], _0x5adfe2['prototype']['doesDrawEffectScale'] = ![], _0x5adfe2['prototype']['drawEffectScale_Slow'] = ![], _0x5adfe2['prototype']['customInterfaceDraw'] = ![], _0x5adfe2['prototype']['animateRadOnSpawn'] = !![], _0x5adfe2['prototype']['canRotate'] = function () {
switch (this['oType']) {
case _0x927338:
case _0xf45780:
case _0x462769:
    return ![];
}
return !![];
}, _0x5adfe2['prototype']['getObjSpecies'] = function () {
switch (this['oType']) {
case _0x1e165f:
    return '/' + this['speciesType'];
}
return '';
}, _0x5adfe2['prototype']['customDraw2'] = function (_0x43cb01) {
switch (this['oType']) {
case _0x4a1ae4:
case _0x4f68c0:
case _0x2f6e35:
case _0x569354:
case _0x1c9a8f:
case _0x388ade:
case _0x39dc8b:
case _0x927338:
case _0x5e6983:
case _0x135fc7:
case _0x45b09c:
case _0x125a75:
case _0xf45780:
case _0x33cf46:
case _0x3c6bd4:
case _0xc71b2f:
case _0x253c63:
case _0x408611:
case _0x2a16e9:
case _0x3b2bbd:
case _0x498489:
case _0x5cead8:
case _0x462769:
case _0x379096:
case _0x10f5be:
case _0x35dc70:
case _0x56c49c:
case _0x75cce2:
case _0xd102d9:
case _0x1dae95:
case _0x3bec33:
case _0x1d182b:
case _0x467ac0:
case _0x2f823e:
case _0x53bde6:
case _0x1e165f:
case _0x1e3310:
case _0x58902e:
case _0x66bcbf:
case _0x1c1069:
case _0x5db2c9:
case _0x3eacb8:
case _0x98293a:
    this['doesDrawEffectScale'] = ![], this['drawEffectScale_Slow'] = ![]; {
        var _0x4654ee = this['getSkinImageObj'](this['objSkinPath']);
        _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = this['getObjAlpha']();
        if (_0x4654ee) {
            var _0x4b8494 = this['getRad']();
            if (this['canRotate']()) _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2);
            _0x4ac9cf['drawImage'](_0x4654ee, -_0x4b8494, -_0x4b8494, 0x2 * _0x4b8494, 0x2 * _0x4b8494);
        } else this['drawOutlinedCircle']('(make this obj invisible on server?)', 'black');
        _0x4ac9cf['restore']();
    }
    break;
}
}, _0x5adfe2['prototype']['getRad'] = function () {
switch (this['oType']) {
case _0x1e3310:
case _0xb4f8e4:
    return this['rad'] * 1.5;
case _0x927338:
    return this['rad'] * 1.2;
case _0x66bcbf:
case _0x1c1069:
    var _0x2fabb6 = _0xddec75[_0x46868a];
    if (_0x2fabb6 && _0x2fabb6['lastHidingHoleID'] == this['id']) {
        if (this['alpha'] == undefined) this['alpha'] = 0x0;
        _0x2fabb6['flag_inHidingHole'] ? this['alpha'] += (0.1 + this['alpha']) * 0.1 : this['alpha'] -= this['alpha'] * 0.1;
        if (this['alpha'] > 0x1) this['alpha'] = 0x1;
        else this['alpha'] < 0x0 && (this['alpha'] = 0x0);
        return _0x4ac9cf['globalAlpha'] = this['alpha'], this['rad'];
    } else return this['innerRad'];
}
return this['rad'];
}, _0x5adfe2['prototype']['getObjAlpha'] = function () {
switch (this['oType']) {
case _0x1e165f:
    return 0.9;
}
return 0x1;
}, _0x5adfe2['prototype']['objSkinPath'] = null, _0x5adfe2['prototype']['getBiomeSkin'] = function (_0x53961b) {
switch (this['oType']) {
case _0x3eacb8:
    _0x53961b = (this['isEdibleOutlined']() ? 'e' : this['oType']) + '_' + this['specType'];
    break;
case _0x1e165f:
case _0x4a1ae4:
case _0x4f68c0:
case _0x2f6e35:
case _0x1e3310:
case _0x98293a:
    _0x53961b = this['isEdibleOutlined']() ? 'e' : this['curBiome'];
    break;
case _0x39dc8b:
case _0x388ade:
case _0x927338:
    _0x53961b = this['isEdibleOutlined']() ? 'e' : this['oType'];
    this['curBiome'] == _0x4f2b40 && (_0x53961b += '_2');
    break;
case _0x569354:
    _0x53961b = this['isEdibleOutlined']() ? 'e' : this['curBiome'];
    this['curBiome'] == _0x4f2b40 && (_0x53961b += '_2');
    break;
case _0xd102d9:
    _0x53961b += '_' + this['curBiome'];
    break;
case _0x66bcbf:
case _0x1c1069:
    this['curBiome'] != _0x55a829 && (_0x53961b = this['curBiome']);
    break;
}
return _0x53961b;
}, _0x5adfe2['prototype']['customDraw'] = function (_0x21fd14) {
switch (this['oType']) {
case _0x4a1ae4:
case _0x4f68c0:
case _0x2f6e35:
case _0x569354:
case _0x1c9a8f:
case _0x388ade:
case _0x39dc8b:
case _0x927338:
case _0x5e6983:
case _0x135fc7:
case _0x45b09c:
case _0x125a75:
case _0xf45780:
case _0x33cf46:
case _0x3c6bd4:
case _0xc71b2f:
case _0x253c63:
case _0x408611:
case _0x2a16e9:
case _0x3b2bbd:
case _0x498489:
case _0x5cead8:
case _0x462769:
case _0x379096:
case _0x10f5be:
case _0x35dc70:
case _0x56c49c:
case _0x75cce2:
case _0xd102d9:
case _0x1dae95:
case _0x3bec33:
case _0x1d182b:
case _0x467ac0:
case _0x2f823e:
case _0x53bde6:
case _0x1e165f:
case _0x1e3310:
case _0x58902e:
case _0x66bcbf:
case _0x1c1069:
case _0x5db2c9:
case _0x3eacb8:
case _0x98293a:
    this['customDraw2'](_0x21fd14);
    break;
case _0x1e3310: {
    _0x4ac9cf['save']();
    var _0x4ad0d6 = 0x0;
    if (!_0x50a9ba && !(_0x25ea67 == 0x2)) {
        var _0x3d7b2d = (_0x397f50 - this['spawnTime']) / 0x3e8,
            _0x3e82e5 = 0x2,
            _0x289142 = 1.5;
        _0x4ad0d6 = _0x289142 * Math['sin'](0x2 * Math['PI'] / _0x3e82e5 * _0x3d7b2d);
    }
    var _0x4e7632 = this['curBiome'] == _0x229c1c ? _0x59e5b5 : _0x2b4991;
    _0x4ac9cf['fillStyle'] = _0x4e7632;
    var _0x21320c = this['rad'] * 0.8;
    this['drawOutlinedCircle']('', _0x4e7632), _0x4ac9cf['globalAlpha'] *= 0.98;
    var _0x59f879 = -_0x21320c * 0.5,
        _0x2c2664 = -_0x21320c * 0.5 + 0xa * this['rPer'],
        _0x2038bf = Math['max'](0x0, _0x21320c * 0.65 + _0x4ad0d6) + 0x2;
    _0x486a28(_0x59f879, _0x2c2664, _0x2038bf, _0x4e7632);
    var _0x59f879 = _0x21320c * 0.5,
        _0x2c2664 = -_0x21320c * 0.5 - 0xa * this['rPer'],
        _0x2038bf = Math['max'](0x0, _0x21320c * 0.73 - _0x4ad0d6);
    _0x486a28(_0x59f879, _0x2c2664, _0x2038bf, _0x4e7632);
    var _0x59f879 = _0x21320c * 0.6,
        _0x2c2664 = _0x21320c * 0.4,
        _0x2038bf = Math['max'](0x0, _0x21320c * 0.78 + _0x4ad0d6);
    _0x486a28(_0x59f879, _0x2c2664, _0x2038bf, _0x4e7632);
    var _0x59f879 = -_0x21320c * 0.5,
        _0x2c2664 = _0x21320c * 0.5 + 0xa * this['rPer'],
        _0x2038bf = Math['max'](0x0, _0x21320c * 0.6 + this['rPer'] - _0x4ad0d6);
    _0x486a28(_0x59f879, _0x2c2664, _0x2038bf, _0x4e7632), _0x4ac9cf['restore']();
}
break;
case _0x1e8020: {
    var _0x47c3ba = this['curBiome'] == _0x1c28a3 ? '#9b702b' : '#1AAE31';
    this['drawOutlinedCircle']('', _0x47c3ba), _0x4ac9cf['save']();
    var _0x4ad0d6 = 0x0;
    if (!_0x50a9ba && !(_0x25ea67 == 0x2)) {
        var _0x3d7b2d = (_0x397f50 - this['spawnTime']) / 0x3e8,
            _0x3e82e5 = 0x2,
            _0x289142 = 1.5;
        _0x4ad0d6 = _0x289142 * Math['sin'](0x2 * Math['PI'] / _0x3e82e5 * _0x3d7b2d);
    }
    _0x4ac9cf['fillStyle'] = _0x1a85a8;
    var _0x28ce99 = this['rad'] * 0.75;
    _0x4ac9cf['globalAlpha'] *= 0.8, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-_0x28ce99 * 0.5, -_0x28ce99 * 0.5 + 0xa * this['rPer'], Math['max'](0x0, _0x28ce99 * 0.65 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](_0x28ce99 * 0.5, -_0x28ce99 * 0.5 - 0xa * this['rPer'], Math['max'](0x0, _0x28ce99 * 0.73 - _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](_0x28ce99 * 0.6, _0x28ce99 * 0.4, Math['max'](0x0, _0x28ce99 * 0.78 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-_0x28ce99 * 0.5, _0x28ce99 * 0.5, Math['max'](0x0, _0x28ce99 * 0.6 + this['rPer'] - _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['restore']();
}
break;
case _0xb4f8e4: {
    _0x4ac9cf['save']();
    var _0x4ad0d6 = 0x0;
    if (!_0x50a9ba && !(_0x25ea67 == 0x2)) {
        var _0x3d7b2d = (_0x397f50 - this['spawnTime']) / 0x3e8,
            _0x3e82e5 = 0x2,
            _0x289142 = 1.5;
        _0x4ad0d6 = _0x289142 * Math['sin'](0x2 * Math['PI'] / _0x3e82e5 * _0x3d7b2d);
    }
    var _0x21320c = this['rad'] * 0.8,
        _0x29d807 = _0x59e5b5;
    this['drawOutlinedCircle']('', _0x29d807), _0x4ac9cf['globalAlpha'] *= 0.98;
    var _0x59f879 = -_0x21320c * 0.5,
        _0x2c2664 = -_0x21320c * 0.5 + 0xa * this['rPer'],
        _0x2038bf = Math['max'](0x0, _0x21320c * 0.65 + _0x4ad0d6) + 0x2;
    _0x486a28(_0x59f879, _0x2c2664, _0x2038bf, _0x29d807);
    var _0x59f879 = _0x21320c * 0.5,
        _0x2c2664 = -_0x21320c * 0.5 - 0xa * this['rPer'],
        _0x2038bf = Math['max'](0x0, _0x21320c * 0.73 - _0x4ad0d6);
    _0x486a28(_0x59f879, _0x2c2664, _0x2038bf, _0x29d807);
    var _0x59f879 = _0x21320c * 0.6,
        _0x2c2664 = _0x21320c * 0.4,
        _0x2038bf = Math['max'](0x0, _0x21320c * 0.78 + _0x4ad0d6);
    _0x486a28(_0x59f879, _0x2c2664, _0x2038bf, _0x29d807);
    var _0x59f879 = -_0x21320c * 0.5,
        _0x2c2664 = _0x21320c * 0.5 + 0xa * this['rPer'],
        _0x2038bf = Math['max'](0x0, _0x21320c * 0.6 + this['rPer'] - _0x4ad0d6);
    _0x486a28(_0x59f879, _0x2c2664, _0x2038bf, _0x29d807), _0x4ac9cf['restore']();
}
break;
case _0xd102d9: {
    _0x4ac9cf['save']();
    var _0x5e3126 = this['curBiome'] == _0x4f2b40 ? '#7790d8' : _0x414722;
    this['drawOutlinedCircle']('', _0x5e3126);
    if (!(_0x25ea67 == 0x2)) _0x4ac9cf['rotate'](this['rPer'] * 0x2 * Math['PI']);
    var _0x4ad0d6 = 0x0;
    if (!_0x50a9ba && !(_0x25ea67 == 0x2)) {
        var _0x3d7b2d = (_0x397f50 - this['spawnTime']) / 0x3e8,
            _0x3e82e5 = 0x7,
            _0x289142 = 0x4;
        _0x4ad0d6 = _0x289142 * Math['sin'](0x2 * Math['PI'] / _0x3e82e5 * _0x3d7b2d);
    }
    if (this['curBiome'] == _0x4f2b40) _0x4ac9cf['fillStyle'] = '#7790d8';
    else _0x4ac9cf['fillStyle'] = _0x414722;
    _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x382b2b + _0x4ad0d6), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), !(_0x25ea67 == 0x2) && (_0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.3, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.35 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill']()), _0x4ac9cf['restore']();
}
break;
case _0x1c9a8f: {
    var _0x5c27b5 = _0x45e1d2;
    this['curBiome'] == _0x4f2b40 && (_0x5c27b5 = '#ac443c'), this['drawOutlinedCircle']('', _0x5c27b5);
}
break;
case _0x135fc7: {
    var _0x232de8 = this['getSkinImageObj']('img/coconut' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    console['log']('drawing cococ');
    if (_0x232de8) {
        var _0x28ce99 = this['rad'];
        if (this['specType2'] == 0x1) {
            if (this['angle'] == 0x0) this['angle'] = this['rPer'] * Math['PI'] * 0x2;
            this['angle'] += 0.4, _0x4ac9cf['rotate'](this['angle']);
        } else {
            if (this['specType2'] == 0x2) _0x4ac9cf['rotate'](this['angle']);
            else _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2);
        }
        _0x4ac9cf['drawImage'](_0x232de8, -_0x28ce99, -_0x28ce99, 0x2 * _0x28ce99, 0x2 * _0x28ce99);
    }
}
break;
case _0x5e6983: {
    var _0x232de8 = this['getSkinImageObj']('img/banana' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0x232de8) {
        var _0x28ce99 = this['rad'];
        if (this['specType2'] == 0x1) {
            if (this['angle'] == 0x0) this['angle'] = this['rPer'] * Math['PI'] * 0x2;
            this['angle'] += 0.4, _0x4ac9cf['rotate'](this['angle']);
        } else {
            if (this['specType2'] == 0x2) _0x4ac9cf['rotate'](this['angle']);
            else _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2);
        }
        _0x4ac9cf['drawImage'](_0x232de8, -_0x28ce99, -_0x28ce99, 0x2 * _0x28ce99, 0x2 * _0x28ce99);
    }
}
break;
case _0x75cce2: {
    var _0x232de8 = this['getSkinImageObj']('img/rasp' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0x232de8) {
        var _0x28ce99 = this['rad'];
        if (this['specType2'] == 0x1) {
            if (this['angle'] == 0x0) this['angle'] = this['rPer'] * Math['PI'] * 0x2;
            this['angle'] += 0.4, _0x4ac9cf['rotate'](this['angle']);
        } else {
            if (this['specType2'] == 0x2) _0x4ac9cf['rotate'](this['angle']);
            else _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2);
        }
        _0x4ac9cf['drawImage'](_0x232de8, -_0x28ce99, -_0x28ce99, 0x2 * _0x28ce99, 0x2 * _0x28ce99);
    }
}
break;
case _0x56c49c: {
    var _0x232de8 = this['getSkinImageObj']('img/pear' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0x232de8) {
        var _0x28ce99 = this['rad'];
        if (this['specType2'] == 0x1) {
            if (this['angle'] == 0x0) this['angle'] = this['rPer'] * Math['PI'] * 0x2;
            this['angle'] += 0.4, _0x4ac9cf['rotate'](this['angle']);
        } else {
            if (this['specType2'] == 0x2) _0x4ac9cf['rotate'](this['angle']);
            else _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2);
        }
        _0x4ac9cf['drawImage'](_0x232de8, -_0x28ce99, -_0x28ce99, 0x2 * _0x28ce99, 0x2 * _0x28ce99);
    }
}
break;
case _0x462769: {
    var _0x232de8 = this['getSkinImageObj']('img/seaweed' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0x232de8) {
        var _0x28ce99 = this['rad'];
        _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x232de8, -_0x28ce99, -_0x28ce99, 0x2 * _0x28ce99, 0x2 * _0x28ce99);
    }
}
break;
case _0x379096: {
    var _0x232de8 = this['getSkinImageObj']('img/starfish' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0x232de8) {
        var _0x28ce99 = this['rad'];
        _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x232de8, -_0x28ce99, -_0x28ce99, 0x2 * _0x28ce99, 0x2 * _0x28ce99);
    }
}
break;
case _0x498489: {
    var _0x232de8 = this['getSkinImageObj']('img/kelp' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0x232de8) {
        var _0x28ce99 = this['rad'];
        _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x232de8, -_0x28ce99, -_0x28ce99, 0x2 * _0x28ce99, 0x2 * _0x28ce99);
    }
}
break;
case _0x5cead8: {
    var _0x232de8 = this['getSkinImageObj']('img/clam' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0x232de8) {
        var _0x28ce99 = this['rad'];
        _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x232de8, -_0x28ce99, -_0x28ce99, 0x2 * _0x28ce99, 0x2 * _0x28ce99);
    }
}
break;
case _0x3b2bbd: {
    var _0x232de8 = this['getSkinImageObj']('img/conch' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0x232de8) {
        var _0x28ce99 = this['rad'] * 0x1;
        _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x232de8, -_0x28ce99, -_0x28ce99, 0x2 * _0x28ce99, 0x2 * _0x28ce99), _0x4ac9cf['restore']();
    }
}
break;
case _0x267f12:
case _0x759f1a: {
    break;
}
case _0x44a1cc: {
    var _0x232de8 = this['getSkinImageObj']('skins/land/ostrich/' + this['speciesType'] + '/ostrichEgg' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0x232de8) {
        var _0x28ce99 = this['rad'];
        _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x232de8, -_0x28ce99, -_0x28ce99, 0x2 * _0x28ce99, 0x2 * _0x28ce99), _0x4ac9cf['restore']();
    }
}
break;
case _0x3c9019:
    this['drawOutlinedCircle']('', 'red');
    break;
case _0x27b42b:
    this['drawOutlinedCircle']('', 'green');
    break;
case _0x3e096c:
    this['drawOutlinedCircle']('', 'blue');
    break;
case _0x3fb345:
    break;
case _0x3eacb8: {
    var _0x4cc6be = 'egg';
    if (this['specType'] == 0x1) _0x4cc6be = 'goldenegg';
    var _0x585733 = 'img/' + _0x4cc6be + (this['isEdibleOutlined']() ? '_e' : '') + '.png';
    console['log'](_0x585733);
    var _0x232de8 = this['getSkinImageObj'](_0x585733);
    if (_0x232de8) {
        var _0x28ce99 = this['rad'];
        _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x232de8, -_0x28ce99, -_0x28ce99, 0x2 * _0x28ce99, 0x2 * _0x28ce99), _0x4ac9cf['restore']();
    }
}
break;
case _0xf45780: {
    var _0x232de8 = this['getSkinImageObj']('img/beehive' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0x232de8) {
        var _0x28ce99 = this['rad'];
        _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['rPer'] * 0.5 * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x232de8, -_0x28ce99, -_0x28ce99, 0x2 * _0x28ce99, 0x2 * _0x28ce99), _0x4ac9cf['restore']();
    }
}
break;
case _0x807a0e: {
    var _0x232de8 = this['getSkinImageObj']('img/desert/anthill/anthill.png');
    if (_0x232de8) {
        var _0x28ce99 = this['rad'];
        _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['rPer'] * 0.5 * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x232de8, -_0x28ce99, -_0x28ce99, 0x2 * _0x28ce99, 0x2 * _0x28ce99), _0x4ac9cf['restore'](), console['log']('drawing anthill');
    }
}
break;
case _0x253c63: {
    var _0x232de8 = this['getSkinImageObj']('img/honeycomb' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0x232de8) {
        var _0x28ce99 = this['rad'];
        _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['rPer'] * 0.5 * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x232de8, -_0x28ce99, -_0x28ce99, 0x2 * _0x28ce99, 0x2 * _0x28ce99), _0x4ac9cf['restore']();
    }
}
break;
case _0x32e400: {
    var _0x232de8 = this['getSkinImageObj']('img/quill.png');
    if (_0x232de8) {
        var _0x28ce99 = this['rad'];
        _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x232de8, -_0x28ce99, -_0x28ce99, 0x2 * _0x28ce99, 0x2 * _0x28ce99);
    }
}
break;
case _0x5db2c9: {
    this['drawOutlinedCircle']('', _0x4bff01), _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x486a28(this['rad'] * 0.25, this['rad'] * 0.4, (0.3 + 0.15 * this['rPer']) * this['rad'], '#905113');
}
break;
case _0x2f6e35: {
    var _0x787d6e = '';
    console['log']('Healing stone current biome: ' + this['curBiome']);
    switch (this['curBiome']) {
    case _0x229c1c:
        _0x787d6e = '_ocean';
        break;
    case _0x4f2b40:
        _0x787d6e = '_arctic';
        break;
    case _0x41e0ba:
    default:
        _0x787d6e = '';
        break;
    }
    var _0x232de8 = this['getSkinImageObj']('img/healingStone' + _0x787d6e + '.png');
    console['log']('Healing stone image: ' + image);
    if (_0x232de8) {
        var _0x28ce99 = this['rad'];
        _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x232de8, -_0x28ce99, -_0x28ce99, 0x2 * _0x28ce99, 0x2 * _0x28ce99), _0x4ac9cf['restore']();
    }
}
break;
case _0x8dc420: {
    _0x486a28(0x0, 0x0, Math['max'](0x0, this['rad'] * 0x1), '#815427'), _0x486a28(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.6), '#6e4b29'), _0x486a28(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.5), '#543d28'), _0x486a28(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.45), '#3f3124'), _0x486a28(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.33), '#241e19'), _0x486a28(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.25), '#120f0d'), _0x486a28(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.2), _0x926611);
}
break;
case _0x2540e6: {
    _0x4ac9cf['save']();
    var _0x4ad0d6 = 0x0;
    if (!_0x50a9ba && !(_0x25ea67 == 0x2)) {
        var _0x283651 = _0x2dd807('lavalake', this['spawnTime']);
        _0x283651 !== undefined && _0x283651 != null && (this['theFrame'] = _0x283651), _0x4ad0d6 = this['theFrame'];
    }
    if (_0x21fd14) {
        var _0x382b2b = 0x4;
        _0x4ac9cf['fillStyle'] = _0x926611, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill']();
    } else _0x4ac9cf['fillStyle'] = _0x926611, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x382b2b + _0x4ad0d6), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), !(_0x25ea67 == 0x2) && (_0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill']());
    _0x4ac9cf['restore']();
}
break;
case _0x268180: {
    _0x4ac9cf['save']();
    var _0x4ad0d6 = 0x0,
        _0x3d7b2d = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x3e82e5 = 0x4,
        _0x289142 = 2.5;
    _0x4ad0d6 = _0x289142 * Math['sin'](0x2 * Math['PI'] / _0x3e82e5 * _0x3d7b2d);
    if (_0x21fd14) {
        var _0x382b2b = 0x4;
        _0x4ac9cf['fillStyle'] = '#5e5348', _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill']();
    } else {
        _0x4ac9cf['fillStyle'] = '#706962', _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x382b2b + _0x4ad0d6), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill']();
        !(_0x25ea67 == 0x2) && (_0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill']());
        _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1 - this['underwaterA'];
        var _0x3d7b2d = (_0x397f50 - this['spawnTime']) / 0x3e8,
            _0x3e82e5 = 1.5,
            _0x289142 = 0x8,
            _0x2996fe = _0x289142 * Math['sin'](0x2 * Math['PI'] / _0x3e82e5 * _0x3d7b2d);
        if (this['flag_underWater']) {
            _0x4ac9cf['globalAlpha'] *= 0.5;
            if (this['animalType'] == _0x1f6edc) _0x4ac9cf['globalAlpha'] = 0.3;
        }
        _0x4ac9cf['fillStyle'] = 'yellow';
        var _0x51ccf4 = this['rad'] * 0.15;
        _0x4ac9cf['beginPath']();
        var _0x37637c = 0x1;
        for (i = 0x1; i <= _0x37637c; i++) {
            _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.2, _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2 * i), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * -0.35, this['rad'] * -0.33, Math['max'](0x0, _0x51ccf4 + _0x2996fe), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.35, this['rad'] * -0.32, Math['max'](0x0, _0x51ccf4 - _0x2996fe), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.35, this['rad'] * 0.36, Math['max'](0x0, _0x51ccf4 + _0x2996fe), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * -0.35, this['rad'] * 0.35, Math['max'](0x0, _0x51ccf4 - _0x2996fe), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['restore']();
        }
        _0x4ac9cf['restore']();
    }
    _0x4ac9cf['restore']();
}
break;
case _0x10f5be: {
    var _0x232de8 = this['getSkinImageObj']('img/cloudberry' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0x232de8) {
        var _0x28ce99 = this['rad'];
        if (this['specType2'] == 0x1) {
            if (this['angle'] == 0x0) this['angle'] = this['rPer'] * Math['PI'] * 0x2;
            this['angle'] += 0.4, _0x4ac9cf['rotate'](this['angle']);
        } else {
            if (this['specType2'] == 0x2) _0x4ac9cf['rotate'](this['angle']);
            else _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2);
        }
        _0x4ac9cf['drawImage'](_0x232de8, -_0x28ce99, -_0x28ce99, 0x2 * _0x28ce99, 0x2 * _0x28ce99);
    }
}
break;
case _0x35dc70: {
    var _0x232de8 = this['getSkinImageObj']('img/arcticNut' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0x232de8) {
        var _0x28ce99 = this['rad'];
        if (this['specType2'] == 0x1) {
            if (this['angle'] == 0x0) this['angle'] = this['rPer'] * Math['PI'] * 0x2;
            this['angle'] += 0.4, _0x4ac9cf['rotate'](this['angle']);
        } else {
            if (this['specType2'] == 0x2) _0x4ac9cf['rotate'](this['angle']);
            else _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2);
        }
        _0x4ac9cf['drawImage'](_0x232de8, -_0x28ce99, -_0x28ce99, 0x2 * _0x28ce99, 0x2 * _0x28ce99);
    }
}
break;
case _0x45b09c: {
    var _0x232de8 = this['getSkinImageObj']('img/carrot' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0x232de8) {
        var _0x28ce99 = this['rad'];
        _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x232de8, -_0x28ce99, -_0x28ce99, 0x2 * _0x28ce99, 0x2 * _0x28ce99), _0x4ac9cf['restore']();
    }
}
break;
case _0x408611: {
    var _0x232de8 = this['getSkinImageObj']('img/watermelon' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0x232de8) {
        var _0x28ce99 = this['rad'];
        _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x232de8, -_0x28ce99, -_0x28ce99, 0x2 * _0x28ce99, 0x2 * _0x28ce99), _0x4ac9cf['restore']();
    }
}
break;
case _0x49a084: {
    _0x4ac9cf['save'](), _0x486a28(0x0, 0x0, this['rad'], !this['isEdibleOutlined']() ? _0x3d30ff(this['curBiome']) : _0x4fa567), _0x486a28(0x0, 0x0, Math['max'](0x0, this['rad'] - 0x2), '#74e61e'), _0x4ac9cf['restore']();
}
break;
case _0x2a16e9: {
    var _0x232de8 = this['getSkinImageObj']('img/watermelonSlice' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0x232de8) {
        var _0x28ce99 = this['rad'];
        _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x232de8, -_0x28ce99, -_0x28ce99, 0x2 * _0x28ce99, 0x2 * _0x28ce99), _0x4ac9cf['restore']();
    }
}
break;
case _0xc71b2f:
case _0x3c6bd4:
case _0x33cf46: {
    var _0x15013b = 0x0,
        _0x232de8 = this['getSkinImageObj']('img/meat' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0x232de8) {
        var _0x28ce99 = this['rad'];
        _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x232de8, -_0x28ce99, -_0x28ce99, 0x2 * _0x28ce99, 0x2 * _0x28ce99), _0x4ac9cf['restore']();
    }
}
break;
case _0x388ade:
case _0x39dc8b: {
    var _0x382b2b = 0x2,
        _0xd029c1 = this['oType'] == _0x39dc8b ? 0xf : 0x9;
    _0x4ac9cf['fillStyle'] = this['getOutlineColor'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['rect'](-_0xd029c1 / 0x2 - _0x382b2b, -_0x382b2b, _0xd029c1 + _0x382b2b * 0x2, this['rad'] * 0.8 + _0x382b2b * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['fillStyle'] = '#FFCA49', _0x4ac9cf['beginPath'](), _0x4ac9cf['rect'](-_0xd029c1 / 0x2, 0x0 + _0x382b2b / 0x2, _0xd029c1, this['rad'] * 0.8 - _0x382b2b / 0x2), _0x4ac9cf['fill'](), !(_0x25ea67 == 0x2) && (_0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, this['rad']), Math['PI'], 0x2 * Math['PI']), _0x4ac9cf['fillStyle'] = this['getOutlineColor'](), _0x4ac9cf['fill']()), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x382b2b), Math['PI'], 0x2 * Math['PI']), _0x4ac9cf['fillStyle'] = this['oType'] == _0x39dc8b ? '#B8413B' : '#CFAD59', _0x4ac9cf['fill']();
}
break;
case _0x927338: {
    var _0x382b2b = 0x2;
    _0x4ac9cf['save']();
    var _0x4ad0d6 = 0x0;
    if (!_0x50a9ba && !(_0x25ea67 == 0x2)) {
        var _0x3d7b2d = (_0x397f50 - this['spawnTime']) / 0x3e8,
            _0x3e82e5 = 0x2,
            _0x289142 = 1.5;
        _0x4ad0d6 = _0x289142 * Math['sin'](0x2 * Math['PI'] / _0x3e82e5 * _0x3d7b2d);
    }
    _0x4ac9cf['fillStyle'] = '#45D157', _0x4ac9cf['globalAlpha'] *= 0.93, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.5, -this['rad'] * 0.5 + 0xa * this['rPer'], Math['max'](0x0, this['rad'] * 0.55 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.5, -this['rad'] * 0.5 - 0xa * this['rPer'], Math['max'](0x0, this['rad'] * 0.43 - _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.6, this['rad'] * 0.4, Math['max'](0x0, this['rad'] * 0.48 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.5, this['rad'] * 0.5, Math['max'](0x0, this['rad'] * 0.4 + this['rPer'] - _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['restore']();
    var _0xd029c1 = 0x14;
    _0x4ac9cf['fillStyle'] = this['getOutlineColor'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['rect'](-_0xd029c1 / 0x2 - _0x382b2b, -_0x382b2b, _0xd029c1 + _0x382b2b * 0x2, this['rad'] * 0.8 + _0x382b2b * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['fillStyle'] = '#FFCA49', _0x4ac9cf['beginPath'](), _0x4ac9cf['rect'](-_0xd029c1 / 0x2, 0x0 + _0x382b2b / 0x2, _0xd029c1, this['rad'] * 0.8 - _0x382b2b / 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] * 0.8), Math['PI'], 0x2 * Math['PI']), _0x4ac9cf['fillStyle'] = this['getOutlineColor'](), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] * 0.8 - _0x382b2b), Math['PI'], 0x2 * Math['PI']), _0x4ac9cf['fillStyle'] = '#B8413B', _0x4ac9cf['fill']();
}
break;
case _0x125a75: {
    var _0x232de8 = this['getSkinImageObj']('img/lillypad' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
    if (_0x232de8) {
        var _0x28ce99 = this['rad'];
        _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x232de8, -_0x28ce99, -_0x28ce99, 0x2 * _0x28ce99, 0x2 * _0x28ce99);
    }
}
break;
case _0x1b8199: {
    console['log']('ERROR: ' + this + ' should be subclassed!');
}
break;
case _0x66bcbf:
case _0x1c1069: {
    var _0x491337 = this['curBiome'] == _0x4f2b40 ? '#e0e0e0' : '#9F8641',
        _0x255b79 = this['curBiome'] == _0x4f2b40 ? '#878787' : '#7E6A35',
        _0x11db3c = this['curBiome'] == _0x4f2b40 ? '#666666' : '#5C4E28',
        _0x50f8b1 = this['curBiome'] == _0x4f2b40 ? '#434343' : '#40371D';
    if (this['curBiome'] != _0x4f2b40) this['drawOutlinedCircleRad']('', _0x491337, this['innerRad']);
    else _0x486a28(0x0 + this['rPer'], 0x1, Math['max'](0x0, this['innerRad']), _0x491337);
    !(_0x25ea67 == 0x2) && _0x486a28(0x0 - this['rPer'], 0x0 - this['rPer'], Math['max'](0x0, this['innerRad'] - 0x7), _0x255b79);
    _0x486a28(0x0 + this['rPer'], 0x1, Math['max'](0x0, this['innerRad'] - 0xe), _0x11db3c), _0x486a28(0x0 - this['rPer'] * 0x2 - 0x3, 0x1, Math['max'](0x0, this['innerRad'] - 18.5), _0x50f8b1);
    var _0x11c672 = _0xddec75[_0x46868a];
    if (_0x11c672 && _0x11c672['lastHidingHoleID'] == this['id']) {
        if (this['alpha'] == undefined) this['alpha'] = 0x0;
        _0x11c672['flag_inHidingHole'] ? this['alpha'] += (0.1 + this['alpha']) * 0.1 : this['alpha'] -= this['alpha'] * 0.1;
        if (this['alpha'] > 0x1) this['alpha'] = 0x1;
        else this['alpha'] < 0x0 && (this['alpha'] = 0x0);
        _0x4ac9cf['globalAlpha'] = this['alpha'];
        var _0x3b804c = this['rad'];
        if (this['curBiome'] != _0x4f2b40) this['drawOutlinedCircleRad']('', _0x491337, _0x3b804c);
        else _0x486a28(0x0, 0x0, Math['max'](0x0, _0x3b804c), _0x491337);
        _0x486a28(0x0 - this['rPer'], 0x0 - this['rPer'], Math['max'](0x0, _0x3b804c - 0x7), _0x255b79), _0x486a28(0x0 + this['rPer'], 0x1, Math['max'](0x0, _0x3b804c - 0xc), _0x11db3c), _0x4ac9cf['globalAlpha'] = this['alpha'] * 0.7, _0x3b804c = _0x3b804c * 0.7, _0x486a28(0x0 - this['rPer'], 0x0 - this['rPer'], Math['max'](0x0, _0x3b804c - 0x7), _0x50f8b1), _0x3b804c = _0x3b804c * 0.5, _0x4ac9cf['globalAlpha'] = this['alpha'] * 0.3, _0x486a28(0x0 - this['rPer'], 0x0 - this['rPer'], Math['max'](0x0, _0x3b804c), _0x50f8b1);
    }
}
break;
case _0x41b866: {
    var _0x3056cb = 0x1,
        _0x1f096d = 0x1;
    if (!_0x50a9ba && !(_0x25ea67 == 0x2)) {
        var _0x3d7b2d = (_0x397f50 - this['spawnTime']) / 0x3e8,
            _0x3e82e5 = 1.2;
        _0x3056cb = 3.5 * Math['cos'](0x2 * Math['PI'] / _0x3e82e5 * _0x3d7b2d), _0x1f096d = 2.5 * Math['sin'](0x2 * Math['PI'] / _0x3e82e5 * _0x3d7b2d);
    }
    this['drawOutlinedCircleRad']('', '#4A549D', this['innerRad']);
    !(_0x25ea67 == 0x2) && _0x486a28(0x0 + _0x3056cb / 0x2 - this['rPer'], 0x0 + _0x1f096d / 0x2 - this['rPer'], Math['max'](0x0, this['innerRad'] - 0x6), '#444C8B');
    _0x486a28(0x0 + _0x3056cb / 4.5 + this['rPer'], 0x1 + _0x1f096d / 1.5, Math['max'](0x0, this['innerRad'] - 0xe), '#4A549D'), _0x486a28(0x0 + _0x3056cb / 1.5 - this['rPer'] * 0x2, _0x1f096d, Math['max'](0x0, this['innerRad'] - 18.5 + _0x1f096d / 0x5), '#3F4477'), _0x486a28(0x0 + _0x3056cb / 1.5 - this['rPer'] * 0x2, _0x1f096d, Math['max'](0x0, this['innerRad'] - 22.5 + _0x1f096d / 0xb), '#353860');
    var _0x11c672 = _0xddec75[_0x46868a];
    if (_0x11c672 && _0x11c672['lastHidingHoleID'] == this['id']) {
        if (this['alpha'] == undefined) this['alpha'] = 0x0;
        _0x11c672['flag_inHidingHole'] ? this['alpha'] += (0.1 + this['alpha']) * 0.1 : this['alpha'] -= this['alpha'] * 0.1;
        if (this['alpha'] > 0x1) this['alpha'] = 0x1;
        else this['alpha'] < 0x0 && (this['alpha'] = 0x0);
        _0x4ac9cf['globalAlpha'] = this['alpha'];
        var _0x3b804c = this['rad'];
        this['drawOutlinedCircle']('', '#4A549D', _0x3b804c), !(_0x25ea67 == 0x2) && _0x486a28(0x0 + _0x3056cb / 0x2 - this['rPer'], 0x0 + _0x1f096d / 0x2 - this['rPer'], Math['max'](0x0, _0x3b804c - 0x6), '#444C8B'), _0x486a28(0x0 + _0x3056cb / 4.5 + this['rPer'], 0x1 + _0x1f096d / 1.5, Math['max'](0x0, _0x3b804c - 0xe), '#4A549D'), _0x3b804c = _0x3b804c * 0.9, _0x4ac9cf['globalAlpha'] = this['alpha'] * 0.6, _0x486a28(0x0 + _0x3056cb / 3.5 - this['rPer'] * 0x2, _0x1f096d, Math['max'](0x0, _0x3b804c - 18.5 + _0x1f096d / 0x5), '#3F4477'), _0x3b804c = _0x3b804c * 0.7, _0x4ac9cf['globalAlpha'] = this['alpha'] * 0.3, _0x486a28(0x0 + _0x3056cb / 6.5 - this['rPer'] * 0x2, _0x1f096d, Math['max'](0x0, _0x3b804c - 22.5 + _0x1f096d / 0xb), '#353860');
    }
}
break;
case _0x1e165f: {
    _0x4ac9cf['save']();
    var _0x4ad0d6 = 0x0;
    if (!_0x50a9ba && !(_0x25ea67 == 0x2)) {
        var _0x3d7b2d = (_0x397f50 - this['spawnTime']) / 0x3e8,
            _0x3e82e5 = 0x2,
            _0x289142 = 1.5;
        _0x4ad0d6 = _0x289142 * Math['sin'](0x2 * Math['PI'] / _0x3e82e5 * _0x3d7b2d);
    }
    var _0x1b6ad9 = '#45D157';
    switch (this['curBiome']) {
    case _0x229c1c:
        _0x1b6ad9 = '#786810';
        break;
    case _0x4f2b40:
        _0x1b6ad9 = '#CED0D0';
        break;
    default:
    case _0x41e0ba:
        _0x1b6ad9 = '#45D157';
        break;
    case _0x1c28a3:
        _0x1b6ad9 = '#9b6f31';
        break;
    }
    _0x4ac9cf['fillStyle'] = _0x1b6ad9, _0x4ac9cf['globalAlpha'] *= 0.93, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.5, -this['rad'] * 0.5 + 0xa * this['rPer'], Math['max'](0x0, this['rad'] * 0.65 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.5, -this['rad'] * 0.5 - 0xa * this['rPer'], Math['max'](0x0, this['rad'] * 0.73 - _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.6, this['rad'] * 0.4, Math['max'](0x0, this['rad'] * 0.78 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.5, this['rad'] * 0.5, Math['max'](0x0, this['rad'] * 0.6 + this['rPer'] - _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['restore']();
}
break;
case _0x243ca7: {
    _0x4ac9cf['save']();
    if (!(_0x25ea67 == 0x2)) _0x4ac9cf['rotate'](this['rPer'] * 0x2 * Math['PI']);
    var _0x4ad0d6 = 0x0,
        _0x3d7b2d = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x3e82e5 = 0x6,
        _0x289142 = 1.5;
    _0x4ad0d6 = _0x289142 * Math['sin'](0x2 * Math['PI'] / _0x3e82e5 * _0x3d7b2d);
    var _0x382b2b = 0x4;
    _0x4ac9cf['fillStyle'] = '#604729', _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), !(_0x25ea67 == 0x2) && (_0x4ac9cf['fillStyle'] = '#8A681B', _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x382b2b + _0x4ad0d6), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath']()), _0x4ac9cf['restore']();
}
break;
case _0x42d381: {
    _0x4ac9cf['save']();
    if (!(_0x25ea67 == 0x2)) _0x4ac9cf['rotate'](this['rPer'] * 0x2 * Math['PI']);
    var _0x4ad0d6 = 0x0,
        _0x3d7b2d = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x3e82e5 = 0x6,
        _0x289142 = 1.5;
    _0x4ad0d6 = _0x289142 * Math['sin'](0x2 * Math['PI'] / _0x3e82e5 * _0x3d7b2d);
    var _0x382b2b = 0x4;
    _0x4ac9cf['fillStyle'] = '#605649', _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), !(_0x25ea67 == 0x2) && (_0x4ac9cf['fillStyle'] = '#5e4f36', _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x382b2b + _0x4ad0d6), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath']()), _0x4ac9cf['restore']();
}
break;
case _0x4c3b2f:
    break;
case _0x59d968:
case _0x549941:
case _0x38a6c4:
case _0x4ae541:
    break;
case _0x549103:
case _0x9c35d3:
    var _0x3d7b2d = (_0x397f50 - this['spawnTime']) / 0x3e8;
    _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['angle'] + _0x142401(0xb4)), _0x4ac9cf['globalAlpha'] = 0.1 + this['cloudOpacity'];
    var _0x232de8 = this['getSkinImageObj']('img/disasters/cloud.png');
    if (_0x232de8) {
        var _0x28ce99 = this['rad'] * 0x2;
        _0x4ac9cf['drawImage'](_0x232de8, -_0x28ce99, -_0x28ce99, 0x2 * _0x28ce99, 0x2 * _0x28ce99);
    }
    var _0x4ad0d6 = 0x0,
        _0x3e82e5 = 0x6,
        _0x289142 = 0xf;
    _0x4ad0d6 = _0x289142 * Math['sin'](0x2 * Math['PI'] / _0x3e82e5 * _0x3d7b2d), _0x4ac9cf['globalAlpha'] = 0.1;
    var _0x232de8 = this['getSkinImageObj']('img/disasters/cloud1.png');
    if (_0x232de8) {
        var _0x28ce99 = this['rad'] * 0x2;
        _0x28ce99 = Math['max'](0x0, _0x28ce99 - 0x5 + _0x4ad0d6), _0x4ac9cf['drawImage'](_0x232de8, -_0x28ce99, -_0x28ce99, 0x2 * _0x28ce99, 0x2 * _0x28ce99);
    }
    _0x4ac9cf['restore']();
    break;
case _0x2e62e0: {
    _0x4ac9cf['save']();
    if (!(_0x25ea67 == 0x2)) _0x4ac9cf['rotate'](this['rPer'] * 0x2 * Math['PI']);
    var _0x4ad0d6 = 1.5,
        _0x283651 = _0x2dd807('volcano', this['spawnTime']);
    _0x283651 !== undefined && _0x283651 != null && (this['theFrame'] = _0x283651);
    _0x4ad0d6 = this['theFrame'];
    var _0x382b2b = 0x4;
    _0x4ac9cf['fillStyle'] = '#8B7833', _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), !(_0x25ea67 == 0x2) && (_0x4ac9cf['fillStyle'] = '#98803A', _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x382b2b + _0x4ad0d6), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), this['rad'] > 0x32 && (_0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0xa, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill']())), _0x4ac9cf['restore']();
}
break;
case _0x46a2c7: {
    _0x4ac9cf['save']();
    if (!(_0x25ea67 == 0x2)) _0x4ac9cf['rotate'](this['rPer'] * 0x2 * Math['PI']);
    var _0x4ad0d6 = 0x0,
        _0x3d7b2d = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x3e82e5 = 0x6,
        _0x289142 = 1.5;
    _0x4ad0d6 = _0x289142 * Math['sin'](0x2 * Math['PI'] / _0x3e82e5 * _0x3d7b2d);
    var _0x382b2b = 0x4;
    _0x4ac9cf['fillStyle'] = '#8CC3C7', _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), !(_0x25ea67 == 0x2) && (_0x4ac9cf['fillStyle'] = '#9DDADE', _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x382b2b + _0x4ad0d6), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], this['specType'] == 0x0 ? 0x8 : 0x4, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath']()), _0x4ac9cf['restore']();
}
break;
case _0x1a341c: {
    _0x4ac9cf['save']();
    if (!(_0x25ea67 == 0x2)) _0x4ac9cf['rotate'](this['rPer'] * 0x2 * Math['PI']);
    var _0x4ad0d6 = 0x0;
    if (!_0x50a9ba && !(_0x25ea67 == 0x2)) {
        var _0x3d7b2d = (_0x397f50 - this['spawnTime']) / 0x3e8,
            _0x3e82e5 = 0x4,
            _0x289142 = 5.5;
        _0x4ad0d6 = _0x289142 * Math['sin'](0x2 * Math['PI'] / _0x3e82e5 * _0x3d7b2d);
    }
    var _0x382b2b = 0x4;
    _0x4ac9cf['fillStyle'] = _0x249ca3, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill']();
    if (this['curBiome'] == _0x4f2b40) _0x4ac9cf['fillStyle'] = '#8da0d6';
    else _0x4ac9cf['fillStyle'] = _0x414722;
    _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x382b2b + _0x4ad0d6), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), !(_0x25ea67 == 0x2) && (_0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x4ad0d6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], this['specType'] == 0x0 ? 0x8 : 0x4, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill']()), _0x4ac9cf['restore']();
}
break;
case _0x33dd11: {
    _0x4ac9cf['save']();
    if (!(_0x25ea67 == 0x2)) _0x4ac9cf['rotate'](this['rPer'] * 0x2 * Math['PI']);
    var _0x4ad0d6 = 0x0;
    if (!_0x50a9ba && !(_0x25ea67 == 0x2)) {
        var _0x3d7b2d = (_0x397f50 - _0xda511e) / 0x3e8,
            _0x3e82e5 = 0x5,
            _0x289142 = 5.5;
        _0x4ad0d6 = _0x289142 * Math['sin'](0x2 * Math['PI'] / _0x3e82e5 * _0x3d7b2d);
    }
    var _0x382b2b = 0x4;
    if (_0x21fd14) {} else _0x4ac9cf['fillStyle'] = _0x1e30a6, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x382b2b + _0x4ad0d6), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), !(_0x25ea67 == 0x2) && (_0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill']());
    _0x4ac9cf['restore']();
}
break;
case _0x4df75d: {
    var _0x75b1b5 = 0x0;
    if (!_0x50a9ba && !(_0x25ea67 == 0x2)) {
        var _0x3d7b2d = (_0x397f50 - _0xda511e) / 0x3e8,
            _0x3e82e5 = 0x5,
            _0x289142 = -8.5;
        _0x75b1b5 = _0x289142 * Math['sin'](0x2 * Math['PI'] / _0x3e82e5 * _0x3d7b2d);
    }
    var _0x284fa2 = 0xa,
        _0x42ea9d = this['x'] > _0x362064 / 0x2 ? 0x1 : 0x0;
    if (_0x42ea9d == 0x1) {
        _0x4ac9cf['fillStyle'] = _0x1e30a6, _0x4ac9cf['fillRect'](-this['rectW'] / 0x2 + _0x75b1b5, -this['rectH'] / 0x2 + _0x75b1b5 + _0x284fa2, this['rectW'] - _0x75b1b5, this['rectH'] - _0x75b1b5 - _0x284fa2), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rectW'] / 0x2 + 0x32, -this['rectH'] / 0x2 + 0x32, 0x46 - _0x75b1b5, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill']();
        var _0x9b0610 = 0x23;
        _0x25dc01(-this['rectW'] / 0x2 + _0x9b0610, -this['rectH'] / 0x2 + _0x9b0610, this['rectW'] / 0x2 - _0x9b0610, this['rectH'] / 0x2 - _0x9b0610, this['x'], this['y']);
    } else {
        _0x4ac9cf['fillStyle'] = _0x1e30a6, _0x75b1b5 *= -0x1, _0x4ac9cf['fillRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2 - _0x75b1b5 + _0x284fa2, this['rectW'] + _0x75b1b5, this['rectH'] + _0x75b1b5 - _0x284fa2);
        var _0x9b0610 = 0x19;
        _0x25dc01(-this['rectW'] / 0x2 + _0x9b0610, -this['rectH'] / 0x2 + _0x9b0610, this['rectW'] / 0x2 - _0x9b0610, this['rectH'] / 0x2 - _0x9b0610, this['x'], this['y']);
    }
}
break;
case _0x3b0196: {
    _0x4ac9cf['fillStyle'] = _0x249ca3;
    var _0x59431a = -this['rectW'] / 0x2,
        _0x4efb24 = this['rectW'] / 0x2,
        _0x5c9187 = -this['rectH'] / 0x2,
        _0x5c8741 = this['rectH'] / 0x2;
    _0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](_0x59431a, _0x5c9187);
    var _0x4374cd = 0x1e,
        _0x24342f = [-0xf, 0xa, -0xa, 0xc, 0x0, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
        _0x364678 = 0x2d,
        _0x5d6fa9 = 0x0,
        _0x2efc6b = _0x362064 - this['x'],
        _0x259ff1 = 0x0 - this['x'],
        _0x58ca4c = _0xa7125 - this['y'],
        _0x23d7a6 = 0x0 - this['y'],
        _0x2c2664, _0x59f879 = _0x59431a - _0x4374cd;
    for (_0x2c2664 = _0x5c9187; _0x2c2664 < _0x5c8741; _0x2c2664 += _0x364678) {
        _0x4ac9cf['lineTo'](Math['min'](_0x2efc6b, Math['max'](_0x259ff1, _0x59f879 + _0x24342f[_0x5d6fa9])), _0x2c2664), _0x5d6fa9 = (_0x5d6fa9 + 0x1) % _0x24342f['length'];
    }
    _0x4ac9cf['lineTo'](_0x59431a, _0x5c8741), _0x2c2664 = _0x5c8741 + _0x4374cd;
    for (_0x59f879 = _0x59431a; _0x59f879 < _0x4efb24; _0x59f879 += _0x364678) {
        _0x4ac9cf['lineTo'](_0x59f879, Math['min'](_0x58ca4c, Math['max'](_0x23d7a6, _0x2c2664 + _0x24342f[_0x5d6fa9]))), _0x5d6fa9 = (_0x5d6fa9 + 0x1) % _0x24342f['length'];
    }
    _0x4ac9cf['lineTo'](_0x4efb24, _0x5c8741), _0x59f879 = _0x4efb24 + _0x4374cd;
    for (_0x2c2664 = _0x5c8741; _0x2c2664 > _0x5c9187; _0x2c2664 -= _0x364678) {
        _0x4ac9cf['lineTo'](Math['min'](_0x2efc6b, Math['max'](_0x259ff1, _0x59f879 + _0x24342f[_0x5d6fa9])), _0x2c2664), _0x5d6fa9 = (_0x5d6fa9 + 0x1) % _0x24342f['length'];
    }
    _0x4ac9cf['lineTo'](_0x4efb24, _0x5c9187), _0x2c2664 = _0x5c9187 - _0x4374cd;
    for (_0x59f879 = _0x4efb24; _0x59f879 > _0x59431a; _0x59f879 -= _0x364678) {
        _0x4ac9cf['lineTo'](_0x59f879, Math['min'](_0x58ca4c, Math['max'](_0x23d7a6, _0x2c2664 + _0x24342f[_0x5d6fa9]))), _0x5d6fa9 = (_0x5d6fa9 + 0x1) % _0x24342f['length'];
    }
    _0x4ac9cf['closePath'](), _0x4ac9cf['fill']();
}
break;
case _0x3fda6a: {
    var _0x4c0f77 = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['fillStyle'] = _0x36b3cd, _0x4ac9cf['fillRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']);
    var _0x9b0610 = 0x23;
    _0x25dc01(-this['rectW'] / 0x2 + _0x9b0610, -this['rectH'] / 0x2 + _0x9b0610, this['rectW'] / 0x2 - _0x9b0610, this['rectH'] / 0x2 - _0x9b0610, this['x'], this['y']);
    var _0x36faca = 0xf; {
        _0x4ac9cf['fillStyle'] = _0x36b3cd;
        var _0x59431a = -this['rectW'] / 0x2,
            _0x4efb24 = this['rectW'] / 0x2,
            _0x5c9187 = -this['rectH'] / 0x2 + 0x3,
            _0x5c8741 = -this['rectH'] / 0x2 - _0x36faca;
        _0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](_0x59431a, _0x5c9187);
        var _0x4374cd = 0x0,
            _0x24342f = [-0xf, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
            _0x364678 = 0x3c,
            _0x5d6fa9 = 0x0,
            _0x2efc6b = _0x362064 - this['x'],
            _0x259ff1 = 0x0 - this['x'],
            _0x58ca4c = _0xa7125 - this['y'],
            _0x23d7a6 = 0x0 - this['y'],
            _0x2c2664, _0x59f879 = _0x59431a - _0x4374cd;
        _0x4ac9cf['lineTo'](_0x59431a, _0x5c8741), _0x2c2664 = _0x5c8741 + _0x4374cd;
        for (_0x59f879 = _0x59431a; _0x59f879 < _0x4efb24; _0x59f879 += _0x364678) {
            _0x4ac9cf['lineTo'](_0x59f879, Math['min'](_0x58ca4c, Math['max'](_0x23d7a6, _0x2c2664 + _0x24342f[_0x5d6fa9]))), _0x5d6fa9 = (_0x5d6fa9 + 0x1) % _0x24342f['length'];
        }
        _0x4ac9cf['lineTo'](_0x4efb24, _0x5c8741), _0x4ac9cf['lineTo'](_0x4efb24, _0x5c9187), _0x4ac9cf['closePath'](), _0x4ac9cf['fill']();
    }
}
break;
case _0x2609b8: {
    var _0x4c0f77 = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['fillStyle'] = '#ececec', _0x4ac9cf['fillRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']);
    var _0x59431a = -this['rectW'] / 0x2,
        _0x4efb24 = this['rectW'] / 0x2,
        _0x5c9187 = this['rectH'] / 0x2 - 0x14,
        _0x5c8741 = this['rectH'] / 0x2;
    snowLandWidth = this['rectW'], snowLandHeight = this['rectH'], _0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](_0x59431a, _0x5c9187);
    var _0x4374cd = 0x14,
        _0x24342f = [-0xf, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
        _0x364678 = 0x3c,
        _0x5d6fa9 = 0x0,
        _0x2efc6b = _0x362064 - this['x'],
        _0x259ff1 = 0x0 - this['x'],
        _0x58ca4c = _0xa7125 - this['y'],
        _0x23d7a6 = 0x0 - this['y'],
        _0x2c2664, _0x59f879 = _0x59431a - _0x4374cd;
    _0x4ac9cf['lineTo'](_0x59431a, _0x5c8741), _0x2c2664 = _0x5c8741 + _0x4374cd;
    for (_0x59f879 = _0x59431a; _0x59f879 < _0x4efb24; _0x59f879 += _0x364678) {
        _0x4ac9cf['lineTo'](_0x59f879, Math['min'](_0x58ca4c, Math['max'](_0x23d7a6, _0x2c2664 + _0x24342f[_0x5d6fa9]))), _0x5d6fa9 = (_0x5d6fa9 + 0x1) % _0x24342f['length'];
    }
    _0x4ac9cf['lineTo'](_0x4efb24, _0x5c8741), _0x4ac9cf['lineTo'](_0x4efb24, _0x5c9187), _0x4ac9cf['closePath'](), _0x4ac9cf['fill']();
    var _0x9b0610 = 0x14;
    _0x25dc01(-this['rectW'] / 0x2 + _0x9b0610, -this['rectH'] / 0x2 + _0x9b0610, this['rectW'] / 0x2 - _0x9b0610, this['rectH'] / 0x2 - _0x9b0610, this['x'], this['y']);
}
break;
case _0x34e8b4: {
    var _0x4c0f77 = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['fillStyle'] = _0x414722, _0x4ac9cf['fillRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']);
    var _0x36faca = 0xf; {
        _0x4ac9cf['fillStyle'] = _0x414722;
        var _0x59431a = -this['rectW'] / 0x2,
            _0x4efb24 = this['rectW'] / 0x2,
            _0x5c9187 = -this['rectH'] / 0x2 + 0x3,
            _0x5c8741 = -this['rectH'] / 0x2 - _0x36faca;
        _0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](_0x59431a, _0x5c9187);
        var _0x4374cd = 0x0,
            _0x24342f = [-0xf, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
            _0x364678 = 0x3c,
            _0x5d6fa9 = 0x0,
            _0x2efc6b = _0x362064 - this['x'],
            _0x259ff1 = 0x0 - this['x'],
            _0x58ca4c = _0xa7125 - this['y'],
            _0x23d7a6 = 0x0 - this['y'],
            _0x2c2664, _0x59f879 = _0x59431a - _0x4374cd;
        _0x4ac9cf['lineTo'](_0x59431a, _0x5c8741), _0x2c2664 = _0x5c8741 + _0x4374cd;
        for (_0x59f879 = _0x59431a; _0x59f879 < _0x4efb24; _0x59f879 += _0x364678) {
            _0x4ac9cf['lineTo'](_0x59f879, Math['min'](_0x58ca4c, Math['max'](_0x23d7a6, _0x2c2664 + _0x24342f[_0x5d6fa9]))), _0x5d6fa9 = (_0x5d6fa9 + 0x1) % _0x24342f['length'];
        }
        _0x4ac9cf['lineTo'](_0x4efb24, _0x5c8741), _0x4ac9cf['lineTo'](_0x4efb24, _0x5c9187), _0x4ac9cf['closePath'](), _0x4ac9cf['fill']();
    } {
        _0x4ac9cf['fillStyle'] = _0x414722;
        var _0x59431a = -this['rectW'] / 0x2,
            _0x4efb24 = this['rectW'] / 0x2,
            _0x5c9187 = this['rectH'] / 0x2 - 0x3,
            _0x5c8741 = this['rectH'] / 0x2 + _0x36faca;
        _0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](_0x59431a, _0x5c9187);
        var _0x4374cd = 0x0,
            _0x24342f = [-0xf, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
            _0x364678 = 0x3c,
            _0x5d6fa9 = 0x0,
            _0x2efc6b = _0x362064 - this['x'],
            _0x259ff1 = 0x0 - this['x'],
            _0x58ca4c = _0xa7125 - this['y'],
            _0x23d7a6 = 0x0 - this['y'],
            _0x2c2664, _0x59f879 = _0x59431a - _0x4374cd;
        _0x4ac9cf['lineTo'](_0x59431a, _0x5c8741), _0x2c2664 = _0x5c8741 + _0x4374cd;
        for (_0x59f879 = _0x59431a; _0x59f879 < _0x4efb24; _0x59f879 += _0x364678) {
            _0x4ac9cf['lineTo'](_0x59f879, Math['min'](_0x58ca4c, Math['max'](_0x23d7a6, _0x2c2664 + _0x24342f[_0x5d6fa9]))), _0x5d6fa9 = (_0x5d6fa9 + 0x1) % _0x24342f['length'];
        }
        _0x4ac9cf['lineTo'](_0x4efb24, _0x5c8741), _0x4ac9cf['lineTo'](_0x4efb24, _0x5c9187), _0x4ac9cf['closePath'](), _0x4ac9cf['fill']();
    }
    var _0x9b0610 = 0x14,
        _0x232de8 = this['getSkinImageObj']('img/riverCurrent' + this['riverSpecT'] + '.png');
    if (_0x232de8) {
        var _0x41a067 = -this['rectW'] / 0x2,
            _0x4219ef = 0x64,
            _0x483515 = 0x78;
        for (i = 0x0; i < 0x28; i++) {
            var _0x3b95a3 = this['riverFlowSpeedX'] * (_0x4219ef / _0x483515) * 0x3e8,
                _0x2f8df7 = (_0x397f50 - this['spawnTime']) % _0x3b95a3 / _0x3b95a3,
                _0x58f061 = _0x4219ef,
                _0x46589c = _0x41a067 + _0x58f061 * _0x2f8df7;
            _0x4ac9cf['drawImage'](_0x232de8, _0x46589c, -this['rectH'] / 0x2, _0x4219ef, this['rectH']), _0x41a067 += _0x4219ef;
        }
    }
}
break;
case _0x4bd137: {
    _0x4ac9cf['fillStyle'] = _0x1a85a8, _0x4ac9cf['fillRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']);
    var _0x9b0610 = 0x2d;
    _0x25dc01(-this['rectW'] / 0x2 + _0x9b0610, -this['rectH'] / 0x2 + _0x9b0610, this['rectW'] / 0x2 - _0x9b0610, this['rectH'] / 0x2 - _0x9b0610, this['x'], this['y']);
}
break;
case _0x4f68c0: {
    var _0x3d0b5a = this['curBiome'] == _0x1c28a3 ? _0x3444f6 : _0x43dfd3;
    if (_0x21fd14) _0x486a28(0x0, 0x0, this['rad'], this['getOutlineColor']());
    else _0x486a28(0x0, 0x0, this['rad'] - 1.5, _0x3d0b5a);
}
break;
case _0x1dae95: {
    _0x21fd14 ? (_0x4ac9cf['fillStyle'] = _0x249ca3, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, this['rad']), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill']()) : (_0x4ac9cf['fillStyle'] = '#E4D04C', _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-0x5 + this['rPer'] * 0xa, -0x5 + this['rPer'] * 0xa, this['rad'] * 0.8, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill']());
}
break;
case _0x3addde:
    var _0x4ad0d6 = 0x0,
        _0x3d7b2d = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x32f469 = _0x23fdc7(_0x3d7b2d, 0x1, 0x5, 0x2),
        _0xa5b5e0 = _0x23fdc7(_0x3d7b2d, 0x1, 0.2, 0x2);
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.5, _0x486a28(0x0, 0x0, this['rad'], _0x926611);
    var _0x1de1b7 = -(-0.2 + _0x32f469) * _0x142401(0x5a);
    _0x4ac9cf['save'](), _0x4ac9cf['scale'](0x1, 0x1 + _0xa5b5e0), _0x4ac9cf['globalAlpha'] = 0.3, _0x4ac9cf['rotate'](_0x1de1b7), _0x486a28(0x0, 0x0, this['rad'] - _0x32f469, '#de9d23'), _0x4ac9cf['restore'](), _0x4ac9cf['save'](), _0x4ac9cf['scale'](0x1 + _0xa5b5e0, 0x1), _0x4ac9cf['globalAlpha'] = 0.1, _0x4ac9cf['rotate'](_0x1de1b7), _0x486a28(0x0, 0x0, this['rad'] * 0.9 - _0x32f469, 'yellow'), _0x4ac9cf['restore']();
    this['specType'] == 0x1 && (_0x4ac9cf['globalAlpha'] = 0.5, _0x486a28(0x0, 0x0, this['rad'], 'white'));
    _0x4ac9cf['restore']();
    break;
case _0x4c33d3:
    var _0x4ad0d6 = 0x0,
        _0x3d7b2d = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x32f469 = _0x23fdc7(_0x3d7b2d, 0x1, 0x5, 0x2),
        _0xa5b5e0 = _0x23fdc7(_0x3d7b2d, 0x1, 0.2, 0x2);
    _0x4ac9cf['globalAlpha'] = 0.5, _0x486a28(0x0, 0x0, this['rad'], _0x1a01bb);
    var _0x1de1b7 = -(-0.2 + _0x32f469) * _0x40941f;
    _0x4ac9cf['save'](), _0x4ac9cf['scale'](0x1, 0x1 + _0xa5b5e0), _0x4ac9cf['globalAlpha'] = 0.3, _0x4ac9cf['rotate'](_0x1de1b7), _0x486a28(0x0, 0x0, this['rad'] - _0x32f469, '#2CAAC4'), _0x4ac9cf['restore'](), _0x4ac9cf['save'](), _0x4ac9cf['scale'](0x1 + _0xa5b5e0, 0x1), _0x4ac9cf['globalAlpha'] = 0.1, _0x4ac9cf['rotate'](_0x1de1b7), _0x486a28(0x0, 0x0, this['rad'] * 0.9 - _0x32f469, 'white'), _0x4ac9cf['restore']();
    break;
case _0x569354: {
    var _0x5e3126 = this['curBiome'] == _0x4f2b40 ? '#8fa4e0' : _0x1a01bb;
    if (this['specType'] == 0x1 && _0x2e40d4 == _0xbbbf69) {
        _0x4ac9cf['save'](), _0x486a28(0x0, 0x0, this['rad'], _0x5a27ff), _0x4ac9cf['restore'](), _0x4ac9cf['save']();
        var _0x382b2b = 1.5;
        _0x486a28(0x0, 0x0, Math['max'](0x0, this['rad'] - _0x382b2b), _0x5e3126), _0x4ac9cf['restore']();
    } else this['drawOutlinedCircle']('', _0x5e3126);
}
break;
case _0xe13fb8:
case _0x2cf674: {
    var _0x232de8 = this['getSkinImageObj']('img/snowball.png');
    if (_0x232de8) {
        var _0x28ce99 = this['rad'];
        _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x232de8, -_0x28ce99, -_0x28ce99, 0x2 * _0x28ce99, 0x2 * _0x28ce99);
    } else this['drawOutlinedCircle']('', 'white');
}
break;
case _0x2aeaab: {}
break;
case _0x101155: {
    _0x4ac9cf['save'](), _0x486a28(0x0, 0x0, this['rad'], !this['isEdibleOutlined']() ? _0x3d30ff(this['curBiome']) : _0x4fa567), _0x486a28(0x0, 0x0, Math['max'](0x0, this['rad'] - 0x2), _0x1a01bb), _0x4ac9cf['restore'](), _0x4ac9cf['save']();
    var _0x3e82e5 = 1.2,
        _0x572069 = 0.3,
        _0x12d113 = 0.7,
        _0x1f5bb4 = 0.5 * (_0x12d113 - _0x572069);
    _0x4ac9cf['globalAlpha'] *= _0x572069 + _0x1f5bb4 + _0x1f5bb4 * Math['sin'](0x2 * Math['PI'] / _0x3e82e5 * ((_0x397f50 - this['spawnTime']) / 0x3e8)), _0x4ac9cf['globalAlpha'] *= this['effA_poison'];
    var _0x3f28c6 = 2.6;
    _0x486a28(0x0, 0x0, this['rad'] + _0x3f28c6, '#7FF600'), _0x4ac9cf['restore']();
}
break;
case _0x1dde5a: {
    _0x4ac9cf['save']();
    var _0xde1b6f = this['speciesType'];
    if (this['speciesType'] == 0xc8) _0xde1b6f = _0xde1b6f + '/' + this['speciesSubType'];
    var _0x5c46f = 'skins/volcano/phoenix/' + _0xde1b6f + '/firetornado.png',
        _0xea7a32 = this['speciesType'] === 0x1 || this['speciesType'] === 0x2 || this['speciesType'] === 0xc8 ? 0x1 : this['mopeSeasonID'],
        _0x1e2cca = this['getSkinImageObjForSeason'](_0x5c46f, _0xea7a32);
    if (_0x1e2cca) {
        var _0x28ce99 = this['rad'],
            _0x555579 = 0x3c / 0x3c,
            _0x473acc = 0x3e8 / _0x555579,
            _0x2f8df7 = (_0x397f50 - this['spawnTime']) % _0x473acc / _0x473acc,
            _0x4e9d87 = _0x2f8df7 * 0x2 * Math['PI'],
            _0x555579 = 0x1e / 0x3c,
            _0x473acc = 0x3e8 / _0x555579,
            _0x2f8df7 = (_0x397f50 - this['spawnTime']) % _0x473acc / _0x473acc,
            _0x29f6db = _0x2f8df7 * 0x2 * Math['PI'];
        _0x4ac9cf['save'](), _0x4ac9cf['rotate'](_0x4e9d87);
        var _0x2fb4fc = _0x4ac9cf['globalAlpha'];
        _0x4ac9cf['globalAlpha'] = 0x1 * _0x2fb4fc;
        var _0x3d7b2d = (_0x397f50 - this['spawnTime']) / 0x3e8,
            _0x3e82e5 = 2.2,
            _0x3056cb = 6.5 * Math['cos'](0x2 * Math['PI'] / _0x3e82e5 * _0x3d7b2d),
            _0x1f096d = 6.5 * Math['sin'](0x2 * Math['PI'] / _0x3e82e5 * _0x3d7b2d);
        _0x4ac9cf['globalAlpha'] = 0x1, _0x4ac9cf['drawImage'](_0x1e2cca, -_0x28ce99 - _0x3056cb / 2.2, -_0x28ce99, 0x2 * _0x28ce99, 0x2 * _0x28ce99), _0x4ac9cf['restore'](), _0x4ac9cf['save'](), _0x4ac9cf['rotate'](_0x29f6db), _0x4ac9cf['drawImage'](_0x1e2cca, -_0x28ce99 - _0x3056cb / 2.2, -_0x28ce99, 0x2 * _0x28ce99, 0x2 * _0x28ce99), _0x4ac9cf['restore']();
    }
    _0x4ac9cf['restore']();
}
break;
case _0x2cc0bb: {
    var _0x3e82e5 = 0x1,
        _0x572069 = 0.15,
        _0x12d113 = 0.8,
        _0x1f5bb4 = 0.5 * (_0x12d113 - _0x572069),
        _0x199fda = _0x572069 + _0x1f5bb4 + _0x1f5bb4 * Math['sin'](0x2 * Math['PI'] / _0x3e82e5 * (_0x397f50 / 0x3e8));
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] *= _0x199fda, _0x486a28(0x0, 0x0, Math['max'](0x0, this['rad']), '#F6EA65'), _0x4ac9cf['restore']();
    var _0x3e82e5 = 0x1,
        _0x572069 = 0.85,
        _0x12d113 = 0x1,
        _0x1f5bb4 = 0.5 * (_0x12d113 - _0x572069),
        _0x2996fe = _0x572069 + _0x1f5bb4 + _0x1f5bb4 * Math['sin'](0x2 * Math['PI'] / _0x3e82e5 * (_0x397f50 / 0x3e8)),
        _0x4ccfc2 = Math['trunc'](_0x397f50 / 0x12c) % 0x2,
        _0xea7a32 = this['animalType'] === 0xe && (this['speciesType'] === 0x1 || this['speciesType'] === 0x2 || this['speciesType'] === 0x3 || this['speciesType'] === 0x64 || this['speciesType'] === 0xc8 || this['speciesType'] === 0xc9 || this['speciesType'] === 0xcc || this['speciesType'] === 0x3e9 || this['speciesType'] === 0x10f2c) ? 0x1 : this['mopeSeasonID'],
        _0x232de8 = this['getSkinImageObjForSeason'](_0x4ccfc2 == 0x1 ? 'img/fire.png' : 'img/fire2.png', _0xea7a32);
    if (_0x232de8) {
        var _0x3b6509 = 0x0,
            _0x217104 = this['rad'] * 0.3,
            _0x47983b = this['rad'] * 0x2 * (0x2 + _0x2996fe * 0x2) / 0x3,
            _0x5460a8 = this['rad'] * 0x2 * _0x2996fe,
            _0x38a0ee = 0.5,
            _0x455d97 = 0.95;
        _0x4ac9cf['save'](), _0x232de8 && (_0x4ac9cf['globalAlpha'] *= this['onFireEffA'] * _0x2996fe, _0x4ac9cf['drawImage'](_0x232de8, _0x3b6509 + _0x47983b * -_0x38a0ee, _0x217104 + _0x5460a8 * -_0x455d97, _0x47983b, _0x5460a8)), _0x4ac9cf['restore']();
    }
}
break;
case _0x4acf80: {}
break;
default: {
    if (this['isRectangle']) _0x4ac9cf['fillStyle'] = 'black', _0x4ac9cf['fillRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']), this['drawOutlinedCircle']('(make this rect obj invisible on server?)', 'black');
    else this['drawOutlinedCircle']('(make this obj invisible on server?)', 'black');
}
break;
}
}, _0x5adfe2['prototype']['beforeCustomDraw'] = function () {}, _0x5adfe2['prototype']['afterCustomDraw'] = function () {}, _0x5adfe2['prototype']['drawImage'] = function (_0x109cff, _0x1fc6f1, _0x3ff482, _0x3857c5, _0x292ebb, _0x173cbb) {
if (_0x173cbb !== undefined) _0x4ac9cf['rotate'](_0x173cbb);
_0x4ac9cf['drawImage'](_0x109cff, _0x1fc6f1, _0x3ff482, _0x3857c5, _0x292ebb);
}, _0x5adfe2['prototype']['drawTranslate'] = function () {
_0x4ac9cf['translate'](this['x'], this['y']);
}, _0x5adfe2['prototype']['drawScaleEffect'] = function () {}, _0x5adfe2['prototype']['setSkinPath'] = function () {
var _0x5071d6 = this['isEdibleOutlined']() ? 'e' : this['oType'];
_0x5071d6 = this['getBiomeSkin'](_0x5071d6), _0x5071d6 = 'gameobj/' + this['oType'] + this['getObjSpecies']() + '/' + _0x5071d6 + '.png', this['objSkinPath'] = _0x5071d6;
}, _0x5adfe2['prototype']['draw'] = function (_0x5ac00f) {
this['moveUpdF'] = this['moveUpdate']();
if (this['objSkinPath'] == null) this['setSkinPath']();
this['beforeCustomDraw'](), _0x4ac9cf['save'](), this['drawTranslate'](), this['drawScaleEffect']();
var _0x1b511d = this['getOutlineColor'](),
    _0x147f0b = 0x2;
if (this['dead']) _0x4ac9cf['globalAlpha'] *= 0x1 - this['moveUpdF'];
else _0x4ac9cf['globalAlpha'] *= Math['min'](0x1, (_0x397f50 - this['spawnTime']) / (_0x324868 * 0x3e8));
this['customDraw'](_0x5ac00f), this['flag_hurt'] && this['onHurt'](), this['drawHealthBar'](), _0x4ac9cf['restore'](), this['afterCustomDraw']();
}, _0x5adfe2['prototype']['onHurt'] = function () {
_0x4ac9cf['fillStyle'] = 'rgba(255,0,0,0.3)', _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, this['rad']), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill']();
}, _0x5adfe2['prototype']['drawHealthBar'] = function () {
_0x4ac9cf['save']();
var _0x40b225 = _0x397f50 < this['hpBarTimeoutT'] ? 0x1 : 0x0;
this['hpBarA'] += (_0x40b225 - this['hpBarA']) * 0.04;
if (this['hpBarA'] > 0.001) {
    this['hpPer'] += (this['hpPer_n'] - this['hpPer']) * 0.1;
    var _0x5ca51f = Math['max'](0x1, this['rad'] / 0x19),
        _0x39deae = 0x14 * _0x5ca51f,
        _0xfa22b3 = 0x5 * _0x5ca51f,
        _0x55cc21 = 0x0,
        _0x4097dd = -this['rad'] - 0xa * _0x5ca51f;
    _0x4ac9cf['globalAlpha'] *= this['hpBarA'], _0x4ac9cf['fillStyle'] = 'rgba(0,0,0,0.35)', _0x4ac9cf['fillRect'](_0x55cc21 - _0x39deae / 0x2, _0x4097dd - _0xfa22b3 / 0x2, _0x39deae, _0xfa22b3), _0x4ac9cf['fillStyle'] = '#16D729', _0x4ac9cf['fillRect'](_0x55cc21 - _0x39deae / 0x2, _0x4097dd - _0xfa22b3 / 0x2, _0x39deae * (this['hpPer'] / 0x64), _0xfa22b3);
}
_0x4ac9cf['restore'](), this['drawInfectionBar']();
};
var _0x2a1c97 = 0x5;
_0x5adfe2['prototype']['drawInfectionBar'] = function () {
if (this['flag_underWater']) return;
var _0x554d07 = _0x397f50 < this['infectionBarTimeoutT'] ? 0x1 : 0x0;
this['infectionBarA'] += (_0x554d07 - this['infectionBarA']) * 0.04, this['infectionBarA'] > 0.001 && (this['infectionPer'] += (this['infectionPer_n'] - this['infectionPer']) * 0.1, this['drawBar']('red', this['infectionBarA'], this['infectionPer'], 0x2, 6.5));
}, _0x5adfe2['prototype']['drawBar'] = function (_0x18ce17, _0x2802ba, _0x44772c, _0x2a5cec, _0x100890) {
_0x4ac9cf['save']();
var _0x3dab8c = Math['max'](0x1, this['rad'] / 0x19),
    _0x533a66 = 0x14 * _0x3dab8c;
barH = _0x2a5cec * _0x3dab8c;
var _0x426e56 = 0x0,
    _0x35aacf = -this['rad'] - _0x100890 * _0x3dab8c;
_0x4ac9cf['globalAlpha'] = 0.3, _0x4ac9cf['fillStyle'] = 'rgba(0,0,0,0.35)', _0x4ac9cf['fillRect'](_0x426e56 - _0x533a66 / 0x2, _0x35aacf - barH / 0x2, _0x533a66, barH), _0x4ac9cf['globalAlpha'] = _0x2802ba, _0x4ac9cf['fillStyle'] = _0x18ce17, _0x4ac9cf['fillRect'](_0x426e56 - _0x533a66 / 0x2, _0x35aacf - barH / 0x2, _0x533a66 * (_0x44772c / 0x64), barH), _0x4ac9cf['restore']();
}, _0x5adfe2['prototype']['drawChat'] = function () {
if (this['chatLines']['length'] < 0x1) return;
_0x4ac9cf['save'](), _0x4ac9cf['font'] = '10px Arial', _0x4ac9cf['lineWidth'] = 0x1, _0x4ac9cf['textAlign'] = 'center', _0x4ac9cf['textBaseline'] = 'middle';
var _0x4434ab = this['hpBarA'] > 0.01 ? -0xa : 0x0,
    _0xe7aec5 = [];
for (var _0x24c2bc = this['chatLines']['length'] - 0x1; _0x24c2bc >= 0x0; _0x24c2bc--) {
    var _0x4058ed = this['chatLines'][_0x24c2bc];
    if (!_0x33ad04 && _0x4058ed['chatTxt']['indexOf']('#koa:') > -0x1) continue;
    var _0x250597 = (this['chatLines']['length'] - 0x1 - _0x24c2bc) * -0xd + _0x4434ab,
        _0x5e7d63 = _0x397f50 > _0x4058ed['chatFadeT'] ? 0x0 : 0x1;
    _0x4058ed['chatA'] += (_0x5e7d63 - _0x4058ed['chatA']) * 0.1, _0x4ac9cf['shadowOffsetX'] = 0x0, _0x4ac9cf['shadowOffsetY'] = 0x0;
    if (_0x4058ed['chatA'] < 0.02) {
        if (_0x5e7d63 < 0.02) _0x4058ed['chatTxt'] = '';
        _0xe7aec5['push'](_0x24c2bc);
        continue;
    }
    var _0x402644 = _0x4ac9cf['measureText'](_0x4058ed['chatTxt'])['width'],
        _0x5b98f0 = 0xa,
        _0x3e3891 = 0x1,
        _0x594a2 = 0x1;
    _0x4ac9cf['globalAlpha'] = 0.8 * _0x4058ed['chatA'], _0x4ac9cf['fillStyle'] = _0x3d30ff(this['curBiome']), _0x4ac9cf['fillRect'](this['x'] - _0x3e3891 - _0x402644 / 0x2, _0x250597 + this['y'] - this['rad'] - 0xa - _0x5b98f0 / 0x2 - _0x594a2, _0x402644 + _0x3e3891 * 0x2, _0x5b98f0 + _0x594a2 * 0x2), _0x4ac9cf['fillStyle'] = '#F1C34C', !(_0x25ea67 == 0x2) && (_0x4ac9cf['shadowOffsetX'] = 0x1, _0x4ac9cf['shadowOffsetY'] = 0x1, _0x4ac9cf['shadowColor'] = 'black'), _0x4ac9cf['globalAlpha'] = _0x4058ed['chatA'], _0x4ac9cf['fillText'](_0x4058ed['chatTxt'], this['x'], _0x250597 + this['y'] - this['rad'] - 0xa);
}
for (var _0x24c2bc = 0x0; _0x24c2bc < _0xe7aec5['length']; _0x24c2bc++) {
    this['chatLines']['splice'](_0xe7aec5[_0x24c2bc], 0x1);
}
_0x4ac9cf['restore']();
}, _0x5adfe2['prototype']['getOutlineColor'] = function () {
if (this['alwaysPlainOutline']) return _0x5db51d;
if (this['isEdibleOutlined']()) return _0x4fa567;
if (this['oType'] == _0x4acf80 && _0xedfe96[this['animalType'] - 0x1] > 0x0 && this['id'] != _0x46868a) return _0x1e8292;
var _0x7406f3 = this['curBiome'];
if (this['flag_inWater']) _0x7406f3 = _0x229c1c;
else {
    if (this['flag_inLava']) return '#c64a00';
}
return _0x3d30ff(_0x7406f3);
}, _0x5adfe2['prototype']['isEdibleOutlined'] = function () {
if (this['oType'] == _0x4acf80) return _0x2ce61b[this['animalType'] - 0x1] > 0x0 && this['id'] != _0x46868a;
else return _0x134a68[this['oType'] - 0x1] > 0x0;
}, _0x5adfe2['prototype']['gotChat'] = function (_0xf9b5dc) {
if (this['chatLines']) {
    this['chatLines']['push']({
        'chatTxt': _0xf9b5dc,
        'chatFadeT': _0x397f50 + 0xfa0,
        'chatA': 0x0
    });
    if (this['chatLines']['length'] > 0x5) this['chatLines']['splice'](this['chatLines']['length'] - 0x1, 0x1);
}
}, _0x5adfe2['prototype']['drawOutlinedCircle'] = function (_0x34b496, _0xb67c5) {
var _0x3c1db1 = this['getOutlineColor'](),
    _0x138793 = 1.5;
if (!(_0x25ea67 == 0x2 && _0x3c1db1 == _0x5db51d)) _0x486a28(0x0, 0x0, this['rad'], _0x3c1db1);
_0x486a28(0x0, 0x0, Math['max'](0x0, this['rad'] - _0x138793), _0xb67c5);
}, _0x5adfe2['prototype']['drawOutlinedCircleRad'] = function (_0x419070, _0x2a65c1, _0x58a3ee) {
var _0x2519e1 = this['getOutlineColor'](),
    _0x490e64 = 1.5;
if (!(_0x25ea67 == 0x2 && _0x2519e1 == _0x5db51d)) _0x486a28(0x0, 0x0, _0x58a3ee, _0x2519e1);
_0x486a28(0x0, 0x0, Math['max'](0x0, _0x58a3ee - _0x490e64), _0x2a65c1);
}, _0x5adfe2['prototype']['onLerpUpdate'] = function (_0x49f5cf) {}, _0x5adfe2['prototype']['moveUpdate'] = function () {
var _0x165004 = (_0x397f50 - this['updateTime']) / 0x3e8 / _0x324868;
return _0x165004 = 0x0 > _0x165004 ? 0x0 : 0x1 < _0x165004 ? 0x1 : _0x165004, (this['dead'] || !this['drawMe']) && _0x165004 >= 0x1 && _0x4fde71['push'](this), this['onLerpUpdate'](_0x165004), this['x'] = _0x165004 * (this['nx'] - this['ox']) + this['ox'], this['y'] = _0x165004 * (this['ny'] - this['oy']) + this['oy'], this['rad'] += (this['nRad'] - this['rad']) * 0.1, this['angle'] != undefined && this['lerpAngle'](_0x165004), Math['min'](0x1, _0x165004);
}, _0x5adfe2['prototype']['lerpAngle'] = function () {
var _0x5b6d00 = this['angleDelta'] * 0.1;
this['angleDelta'] -= _0x5b6d00, this['angle'] += _0x5b6d00;
}, _0x5adfe2['prototype']['readCustomData_onUpdate'] = function (_0x2d2788) {}, _0x5adfe2['prototype']['readCustomData_onNewlyVisible'] = function (_0x26c944) {
(this['oType'] == _0x66bcbf || this['oType'] == _0x1c1069 || this['oType'] == _0x41b866) && (this['innerRad'] = _0x26c944['readUInt16']() / 0x4);
}, _0x5adfe2['prototype']['setObjTypes'] = function (_0x484653, _0x1d960d) {
this['oType'] = _0x484653;
}, _0x5adfe2['prototype']['clientBatchDraw'] = ![], _0x5adfe2['prototype']['clientBatchDrawID'] = ![], _0x5adfe2['prototype']['worldUpd_readMsgNewlyVisible'] = function (_0x3c2280, _0x1eb5ab, _0x18b8a2) {
this['setObjTypes'](_0x1eb5ab, _0x18b8a2);
var _0x46f840 = _0x3c2280['readUInt32'](),
    _0x2d4709 = _0x3c2280['readUInt32']() / 0x4,
    _0x68a945 = _0x3c2280['readUInt16']() / 0x4,
    _0x4f614d = _0x3c2280['readUInt16']() / 0x4;
this['id'] = _0x46f840, this['ox'] = this['x'] = this['nx'] = _0x68a945, this['oy'] = this['y'] = this['ny'] = _0x4f614d, this['nRad'] = _0x2d4709, this['oRad'] = this['rad'] = 0x0;
(_0x1eb5ab == _0x42d381 || _0x1eb5ab == _0x243ca7 || _0x1eb5ab == _0x2e62e0 || _0x1eb5ab == _0x46a2c7 || _0x1eb5ab == _0x1a341c || _0x1eb5ab == _0x1b8199 || _0x1eb5ab == _0x4a1ae4 || _0x1eb5ab == _0x4f68c0 || _0x1eb5ab == _0x1e8020 || _0x1eb5ab == _0x1dae95) && (this['animateRadOnSpawn'] = ![]);
if (!this['animateRadOnSpawn']) this['oRad'] = this['rad'] = _0x2d4709;
var _0x123a57 = _0x3c2280['readUInt8']();
this['curBiome'] = _0x123a57;
this['oType'] != _0x4acf80 && (this['animalType'] = _0x3c2280['readUInt16'](), this['speciesType'] = _0x3c2280['readUInt16'](), this['speciesSubType'] = _0x3c2280['readUInt16']());
var _0x5bd429 = _0x3c2280['readBitGroup'](),
    _0x7ca992 = _0x5bd429['getBool'](),
    _0x35ac25 = _0x5bd429['getBool'](),
    _0xf4ec0c = _0x5bd429['getBool']();
this['clientBatchDraw'] = _0x5bd429['getBool'](), this['objGetsAngleUpdate'] = _0xf4ec0c;
if (this['clientBatchDraw']) this['clientBatchDrawID'] = _0x3c2280['readUInt16']();
var _0x2e8ebc = null;
_0x7ca992 && (_0x2e8ebc = _0xddec75[_0x3c2280['readUInt32']()]);
_0x2e8ebc && (this['updateTime'] = _0x397f50, this['nx'] = this['x'], this['ny'] = this['y'], this['ox'] = _0x2e8ebc['x'], this['oy'] = _0x2e8ebc['y'], this['x'] = _0x2e8ebc['x'], this['y'] = _0x2e8ebc['y']);
if (_0x35ac25) this['isRectangle'] = !![], this['rectW'] = _0x3c2280['readUInt16'](), this['rectH'] = _0x3c2280['readUInt16']();
else {
    var _0x255c4f = _0x3c2280['readUInt8']() * 0x2;
    this['updateAngle'](_0x255c4f);
}
this['readUpdatedPropertyItem'](_0x412c4f, _0x3c2280), this['readUpdatedPropertyItem'](_0x47e133, _0x3c2280), this['readCustomData_onNewlyVisible'](_0x3c2280);
}, _0x5adfe2['prototype']['setRadius'] = function (_0x232d20) {
this['rad'] = _0x232d20;
}, _0x5adfe2['prototype']['easeAngleChanges'] = !![], _0x5adfe2['prototype']['updateAngle'] = function (_0x2d1f62) {
var _0x2a86a4 = this['oType'] == _0x1b8199 ? 0xb4 : 0x5a;
if (!this['easeAngleChanges']) this['angle'] = _0x142401(_0x2d1f62 + _0x2a86a4);
else {
    var _0x23da22 = _0x142401(_0x2d1f62 + _0x2a86a4);
    this['angleDelta'] = _0x9e3352(this['angle'], _0x23da22), this['oAngle'] = this['angle'], this['firstPosUpd'] && (this['oAngle'] = this['angle'] = _0x23da22, this['angleDelta'] = 0x0);
}
}, _0x5adfe2['prototype']['setMovedToPos'] = function (_0xf4f70a, _0x5fa49) {
this['updateTime'] = _0x397f50, this['ox'] = this['x'], this['oy'] = this['y'], this['nx'] = _0xf4f70a, this['ny'] = _0x5fa49;
}, _0x5adfe2['prototype']['setNewRad'] = function (_0x59f320) {
this['oRad'] = this['rad'], this['nRad'] = _0x59f320;
}, _0x5adfe2['prototype']['worldUpd_readMsgUpdate'] = function (_0x4bce65) {
var _0x423b23 = _0x4bce65['readBitGroup']();
this['readUpdatedFlags'](_0x423b23);
var _0x3b03be = _0x4bce65['readUInt8']();
for (var _0x4f631f = 0x0; _0x4f631f < _0x3b03be; _0x4f631f++) {
    var _0x4170fe = _0x4bce65['readUInt16']();
    this['readUpdatedPropertyItem'](_0x4170fe, _0x4bce65);
}
this['readCustomData_onUpdate'](_0x4bce65), this['firstPosUpd'] = ![];
}, _0x5adfe2['prototype']['readUpdatedPropertyItem'] = function (_0x1609c7, _0x456c28) {
if (_0x1609c7 == _0x52f1d0) {
    var _0x2cffa5 = _0x456c28['readUInt16']() / 0x4,
        _0x984424 = _0x456c28['readUInt16']() / 0x4;
    this['setMovedToPos'](_0x2cffa5, _0x984424);
} else {
    if (_0x1609c7 == _0x48acb5) {
        var _0xc8b573 = _0x456c28['readUInt16']() / 0xa;
        this['setNewRad'](_0xc8b573);
    } else {
        if (_0x1609c7 == _0x5e2b01) {
            var _0xa87a5d = _0x456c28['readUInt8']() * 0x2;
            this['updateAngle'](_0xa87a5d);
        } else {
            if (_0x1609c7 == _0x412c4f) this['specType'] = _0x456c28['readUInt8']();
            else {
                if (_0x1609c7 == _0x47e133) this['specType2'] = _0x456c28['readUInt8']();
                else {
                    if (_0x1609c7 == _0x1c2e3d) {
                        var _0x407d1f = _0x456c28['readUInt8']();
                        this['setHpBar'](_0x407d1f);
                    } else {
                        if (_0x1609c7 == _0xa012c6) this['curBiome'] = _0x456c28['readUInt8']();
                        else {
                            if (_0x1609c7 == _0xd2077d) {
                                let _0x2ca973 = _0x456c28['readUInt8']() == 0x1;
                            } else this['readUpdatedProperty'](_0x1609c7, _0x456c28);
                        }
                    }
                }
            }
        }
    }
}
};
var _0x5f4f46 = 0x0;
_0x5adfe2['prototype']['readUpdatedFlags'] = function (_0x3220b5) {
this['flag_hurt'] = _0x3220b5['getBool'](), this['flag_flying'] = _0x3220b5['getBool']();
}, _0x5adfe2['prototype']['readUpdatedProperty'] = function (_0x3e89dc, _0x3ce524) {}, _0x5adfe2['prototype']['setHpBar'] = function (_0x4bf823) {
this['hpPer_n'] = _0x4bf823, this['hpBarTimeoutT'] = +new Date() + 0xbb8;
}, _0x5adfe2['prototype']['killerId'] = 0x0, _0x5adfe2['prototype']['worldUpd_readMsgRemovedObj'] = function (_0x5c2a6e) {
this['killerId'] = _0x5c2a6e['readUInt8']() > 0x0 ? _0x5c2a6e['readUInt32']() : 0x0;
var _0x548838 = this['killerId'] > 0x0 ? _0xddec75[this['killerId']] : undefined;
this['dead'] = !![], this['updateTime'] = _0x397f50;
if (this['oType'] == _0x1b8199) this['ox'] = this['x'], this['oy'] = this['y'], this['nx'] = this['x'], this['ny'] = this['y'];
else _0x548838 ? (this['ox'] = this['x'], this['oy'] = this['y'], this['oRad'] = this['rad'], this['nx'] = _0x548838['nx'], this['ny'] = _0x548838['ny'], this['nRad'] = Math['min'](this['rad'], _0x548838['rad']), _0x46868a == this['killerId'] && (this['oType'] == _0x4acf80 && (!_0x13e9da && _0x475e37('audio/bite.mp3', 0.05, _0x4eafe3(0.9, 1.1))), this['oType'] == _0x569354 || this['oType'] == _0x1e56cf || this['oType'] == _0x4c33d3 ? !_0x13e9da && _0x475e37('audio/bloop.mp3', 0.6, _0x4eafe3(0.9, 1.1)) : !_0x13e9da && _0x475e37('audio/nom.mp3', 0.5)), this['hp_n'] = 0x0) : (this['ox'] = this['x'], this['oy'] = this['y'], this['oRad'] = this['rad'], this['nx'] = this['x'], this['ny'] = this['y'], this['nRad'] = 0x0);
this['onRemovedFromGame']();
}, _0x5adfe2['prototype']['updateZ'] = function () {
switch (this['oType']) {
case _0x9c35d3:
case _0x549103:
case _0x4c3b2f:
    this['z'] = 0xf4240;
    break;
case _0x4bd137:
    this['z'] = -0xdc;
    break;
case _0x3fda6a:
case _0x2609b8:
    this['z'] = -0xd2;
    break;
case _0x243ca7:
case _0x42d381:
    this['z'] = -0xd1;
    break;
case _0x34e8b4:
    this['z'] = -0x9e;
    break;
case _0x8dc420:
    this['z'] = -0x8c;
    break;
case _0x2540e6:
    this['z'] = -0x97;
    break;
case _0x1a341c:
case _0x268180:
    this['z'] = -0xa0;
    break;
case _0x3b0196:
    this['z'] = -0x129;
    break;
case _0x33dd11:
    this['z'] = -0x128;
    break;
case _0x4df75d:
    this['z'] = -0x9d;
    break;
case _0x2e62e0:
    this['z'] = -0x9e;
    break;
case _0x46a2c7:
    this['z'] = -0x9c;
    break;
case _0xd102d9:
    this['z'] = -0x9b;
    break;
case _0x1dae95:
    this['z'] = -0x9a;
    break;
case _0x41b866:
    this['z'] = -0x96;
    break;
case _0x1c1069:
    this['z'] = -0x65;
    break;
case _0x66bcbf:
    this['z'] = -0x64;
    break;
case _0x807a0e:
case _0x2f6e35:
    this['z'] = -0x63;
    break;
case _0x32e400:
case _0x1e8020:
    this['z'] = 0x3e8;
    break;
case _0x253c63:
    this['z'] = 0x3ea;
    break;
case _0x4f68c0:
    this['z'] = 0x3ea;
    break;
case _0xf45780:
case _0x4a1ae4:
    this['z'] = 0x3e7;
    break;
case _0x2aeaab:
    this['z'] = 0x3eb;
    break;
case _0x1e3310:
case _0xb4f8e4:
case _0x1e165f:
    this['z'] = 0x3ea + this['rad'];
    break;
case _0x3addde:
    this['z'] = 0x186af;
    break;
case _0x4c33d3:
    this['z'] = 0x186af;
    break;
case _0x135fc7:
case _0x5e6983:
    this['z'] = 0x3f2 + this['rad'];
    this['specType2'] == 0x1 && (this['z'] += 0x3e8);
    break;
case _0x1dde5a:
    this['z'] = 0x7d0 + this['rad'];
    break;
case _0x2cc0bb:
case _0x101155:
    this['z'] = 0x3ee;
    break;
case _0x4acf80:
    break;
default:
    this['z'] = this['rad'];
    break;
}
}, _0x5adfe2['prototype']['updateZ_onTree'] = function (_0x45df1b) {
this['oType'] == _0x4acf80 && this['flag_eff_isOnTree'] && (this['z'] = _0x45df1b + 0x44c);
}, _0x5adfe2['prototype']['showScaleEffectToPlayer'] = function () {
var _0x109079 = _0xddec75[_0x46868a];
if (_0x109079 && _0x109079['flag_inHidingHole'] && _0x109079['lastHidingHoleID'] == this['id']) return ![];
return !![];
}, _0x5adfe2['prototype']['calculateZIndex'] = function () {
this['updateZ']();
if (this['oType'] == _0x4acf80) {
    if (this['flag_flying']) {
        this['z'] = 0x186a0;
        this['flag_isGrabbed'] && (this['z'] -= this['rad']);
        if (this['flag_eff_aniInClaws'] || this['flag_usingAbility']) this['z'] += 0x3e8;
    } else {
        if (this['flag_isInArena']) this['z'] = 0x2710 + this['rad'];
        else {
            this['updateZ_onTree'](this['z']);
            if (this['flag_eff_invincible']) this['z'] += 0x3e8;
        }
    }
} else this['updateZ_onTree'](this['z']);
}, _0x5adfe2['prototype']['mopeSeasonID'] = 0x0, _0x5adfe2['prototype']['skinThemeID'] = 0x0, _0x5adfe2['prototype']['getSkinImageObj'] = function (_0x43ba85) {
var _0x123096 = './assets/s/' + this['mopeSeasonID'] + '/' + _0x43ba85;
return this['skinThemeID'] > 0x0 && (_0x123096 = './assets/t/' + this['skinThemeID'] + '/' + _0x43ba85), _0x297bc3(_0x123096, function (_0x52e7d8) {
    console['log'](_0x52e7d8['src']);
});
}, _0x5adfe2['prototype']['getSkinImageObjForSeason'] = function (_0x9ec7, _0x35fe8e) {
!_0x35fe8e && console['log']('No season for skin: ' + _0x9ec7);
var _0x3d92dd = './assets/s/' + _0x35fe8e + '/' + _0x9ec7;
return this['skinThemeID'] > 0x0 && (_0x3d92dd = './assets/t/' + this['skinThemeID'] + '/' + _0x9ec7), _0x297bc3(_0x3d92dd, function (_0x51c97c) {
    console['log'](_0x51c97c['src']);
});
}, _0x5adfe2['prototype']['getObjImageObjForSeason'] = function (_0x25e5c1, _0x5c087f) {
!_0x5c087f && console['log']('No season for skin: ' + _0x25e5c1);
var _0x40152c = './assets/s/' + _0x5c087f + '/' + _0x25e5c1;
return _0x297bc3(_0x40152c, function (_0x598f33) {
    console['log'](_0x598f33['src']);
});
}, _0x5adfe2['prototype']['onRemovedFromGame'] = function () {};

function _0x5adfe2(_0x4dfe4f) {
this['oType'] = _0x4dfe4f, this['rPer'] = _0x4eafe3(0x0, 0x1), this['spawnTime'] = _0x397f50, this['updateTime'] = _0x397f50, this['firstPosUpd'] = !![], this['chatLines'] = [];
switch (this['oType']) {
case _0x1c9a8f:
case _0x5e6983:
case _0x75cce2:
case _0x56c49c:
case _0x135fc7:
case _0x569354:
case _0x2cc0bb:
case _0x101155:
case _0x2aeaab:
case _0x388ade:
case _0x39dc8b:
case _0x125a75:
case _0x66bcbf:
case _0x41b866:
case _0x1c1069:
case _0x5db2c9:
case _0x462769:
case _0x379096:
case _0x498489:
case _0x5cead8:
case _0x3b2bbd:
case _0x10f5be:
case _0x35dc70:
case _0x45b09c:
case _0x49a084:
case _0x408611:
case _0x2a16e9:
case _0xc71b2f:
case _0x3c6bd4:
case _0x33cf46:
case _0x3eacb8:
case _0x44a1cc:
case _0x32e400:
case _0xf45780:
case _0x253c63:
    this['doesDrawEffectScale'] = !![];
    break;
default:
    break;
}
if (this['oType'] == _0x66bcbf || this['oType'] == _0x1c1069 || this['oType'] == _0x41b866 || this['oType'] == _0x2aeaab) this['drawEffectScale_Slow'] = !![];
}
window['GameObj'] = _0x5adfe2;
var _0x1808b2 = _0x4da8aa,
_0xec194 = _0x5adfe2;
_0x1808b2['prototype'] = Object['create'](_0xec194['prototype']), _0x1808b2['prototype']['constructor'] = _0x1808b2;

function _0x4da8aa() {
this['objs'] = [], this['updateZ'] = function () {
    this['objs']['length'] > 0x0 && (this['objs'][0x0]['updateZ'](), this['z'] = this['objs'][0x0]['z']);
}, this['draw'] = function () {
    for (var _0x569e35 = 0x0; _0x569e35 < this['objs']['length']; _0x569e35++) {
        var _0x1b5372 = this['objs'][_0x569e35];
        _0x1b5372['draw'](!![]);
    }
    for (var _0x569e35 = 0x0; _0x569e35 < this['objs']['length']; _0x569e35++) {
        var _0x1b5372 = this['objs'][_0x569e35];
        _0x1b5372['draw'](![]);
    }
}, this['addBatchedObj'] = function (_0x146ce0) {
    this['objs']['length'] == 0x0 && (this['oType'] = _0x146ce0['oType'], this['objs'] = []), this['objs']['push'](_0x146ce0);
};
}
window['GameObjBatchDraw'] = _0x4da8aa;
var _0x49d118 = 0x1,
_0x30b869 = 0x2,
_0x51c352 = 0x3,
_0x37ed61 = 0x4,
_0x43cc06 = 0x5,
_0x176a10 = 0x6,
_0x4699c5 = 0x7,
_0x1185fd = 0x8,
_0x2cd95a = 0x9,
_0x15db61 = 0xa,
_0x1f6edc = 0xb,
_0x2fc4c1 = 0xc,
_0x212372 = 0xd,
_0x33edcb = 0xe,
_0x5626d9 = 0xf,
_0x2a05b1 = 0x10,
_0x415723 = 0x11,
_0x4e129f = 0x12,
_0xf16f79 = 0x13,
_0xd32f27 = 0x14,
_0x41ea25 = 0x15,
_0x4ac227 = 0x16,
_0x402b8c = 0x17,
_0x3a6f75 = 0x18,
_0x2ee5ae = 0x19,
_0x1be7e6 = 0x1a,
_0x31cc16 = 0x1b,
_0x103e98 = 0x1c,
_0x108db6 = 0x1d,
_0x4b16ca = 0x1e,
_0x46d563 = 0x1f,
_0x1080d7 = 0x20,
_0x465a75 = 0x21,
_0xc6c00 = 0x22,
_0x55a1a9 = 0x23,
_0x546d88 = 0x24,
_0xc81962 = 0x25,
_0x1c2360 = 0x26,
_0x13bbdd = 0x27,
_0x4c7e27 = 0x28,
_0x5c63c1 = 0x29,
_0x57db06 = 0x2a,
_0x1a507a = 0x2b,
_0x2896b9 = 0x2c,
_0x3aa9b0 = 0x2d,
_0x5186e1 = 0x2e,
_0x3700ee = 0x2f,
_0xce16df = 0x30,
_0x293d5d = 0x31,
_0x204cad = 0x32,
_0x2cb4e3 = 0x33,
_0x484a15 = 0x34,
_0x2e747e = 0x35,
_0x342f2b = 0x36,
_0x1c4f76 = 0x37,
_0x37eeab = 0x38,
_0x414bbd = 0x39,
_0x1c58ee = 0x3a,
_0x5b26cb = 0x3b,
_0x47b3d3 = 0x3c,
_0x7820e = 0x3d,
_0xeeef05 = 0x3e,
_0x189adc = 0x3f,
_0x4ba38f = 0x40,
_0x12d178 = 0x41,
_0x5baef5 = 0x42,
_0x5b185f = 0x43,
_0x3fcb38 = 0x44,
_0x2c0e73 = 0x45,
_0x16f423 = 0x46,
_0xc23298 = 0x47,
_0x16a00e = 0x48,
_0x4cc8de = 0x49,
_0x576572 = 0x4a,
_0x375310 = 0x4b,
_0x12b837 = 0x4c,
_0x4b419b = 0x4d,
_0x7fee1e = 0x4e,
_0x1b4e84 = 0x4f,
_0x482d7d = 0x50,
_0x17b74d = 0x51,
_0x37c7c9 = 0x52,
_0xd214a6 = 0x53,
_0x345849 = 0x54,
_0x332195 = 0x55,
_0x19f3fe = 0x56,
_0x21519f = 0x57,
_0x335a3d = 0x58,
_0x48646c = 0x59,
_0x233419 = 0x5a,
_0x464d8f = 0x5b,
_0x398a37 = 0x5c,
_0x1a1392 = 0x5d,
_0xbbbf69 = 0x5e,
_0x323318 = 0x5f,
_0x309a7e = 0x60,
_0x5b01a7 = 0x61,
_0xf85b36 = 0x62,
_0xc5d905 = 0x63,
_0x1e8cf7 = 0x64,
_0x5d7f3d = 0x65,
_0x417b18 = 0x66,
_0x5112ae = 0x67,
_0x5d3636 = 0x68,
_0x56a5e3 = 0x69,
_0x46984b = 0x6a,
_0x428f2e = 0x6b,
_0x2555a8 = 0x6c,
_0xa1b5d7 = 0x6d,
_0x385fed = 0x6e,
_0x58f3da = 0x6f,
_0x26a895 = function (_0x170b86) {
    var _0x2bf9c9 = {};
    switch (_0x170b86) {
    case _0x3aa9b0:
        _0x2bf9c9['aniName'] = 'Snail', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'You\'re a super slow snail!', _0x2bf9c9['aniCol'] = '#fcc02b', _0x2bf9c9['skinName'] = 'snail';
        break;
    case _0x49d118:
        _0x2bf9c9['aniName'] = 'Mouse', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = '', _0x2bf9c9['aniCol'] = '#9BA9B9', _0x2bf9c9['skinName'] = 'mouse';
        break;
    case _0x30b869:
        _0x2bf9c9['aniName'] = 'Rabbit', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to RABBIT! \x0aPress W to burrow a hole to hide in!', _0x2bf9c9['aniCol'] = '#AA937E', _0x2bf9c9['skinName'] = 'rabbit';
        break;
    case _0x51c352:
        _0x2bf9c9['aniName'] = 'Pig', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to PIG!\x0a Pigs move FAST through MUD! (Can use \'stink\' on mud/ hiding holes!)', _0x2bf9c9['aniCol'] = '#DD6BD4', _0x2bf9c9['skinName'] = 'pig';
        break;
    case _0x37ed61:
        _0x2bf9c9['aniName'] = 'Fox', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to FOX! ,\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!', _0x2bf9c9['aniCol'] = '#FF9D43', _0x2bf9c9['skinName'] = 'fox';
        break;
    case _0x43cc06:
        _0x2bf9c9['aniName'] = 'Deer', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to DEER! \x0aPress W to dig up food! \x0aDig in mud for better food!\x0a Hint:Check water areas for new food sources!', _0x2bf9c9['aniCol'] = '#C4773E', _0x2bf9c9['skinName'] = 'deer';
        break;
    case _0x176a10:
        _0x2bf9c9['aniName'] = 'Mole', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to MOLE!\x0a Hold W to dig underground!\x0aGo under anything, do surprise attacks!', _0x2bf9c9['aniCol'] = '#4C4A45', _0x2bf9c9['skinName'] = 'mole';
        break;
    case _0x4699c5:
        _0x2bf9c9['aniName'] = 'Zebra', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to ZEBRA! \x0aPress W to kick side ways!', _0x2bf9c9['aniCol'] = '#FFFFFF', _0x2bf9c9['skinName'] = 'zebra';
        break;
    case _0x1185fd:
        _0x2bf9c9['aniName'] = 'Lion', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to LION!\x0a Press W to release a mighty ROAR (Rawr!)!', _0x2bf9c9['aniCol'] = '#f8c923', _0x2bf9c9['skinName'] = 'lion';
        break;
    case _0x2cd95a:
        _0x2bf9c9['aniName'] = 'CHEETAH', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to CHEETAH!\x0a Press W to get a speed boost! (Every 8 seconds)!', _0x2bf9c9['aniCol'] = '#CAC05B', _0x2bf9c9['skinName'] = 'bigcat/cheetah';
        break;
    case _0x15db61:
        _0x2bf9c9['aniName'] = 'Bear', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to BEAR!\x0a Bears climb through green hills! (Press W to use your claw!)', _0x2bf9c9['aniCol'] = '#99591C', _0x2bf9c9['skinName'] = 'bear';
        break;
    case _0x1f6edc:
        _0x2bf9c9['aniName'] = 'Croc', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to CROCODILE!\x0a Press W to bite and drag around animals! \x0a+ (Now hide in water spots)+ Swim well in Mud, Lakes & Oceans!', _0x2bf9c9['aniCol'] = '#30F51C', _0x2bf9c9['skinName'] = 'croc';
        break;
    case _0x212372:
        _0x2bf9c9['aniName'] = 'Hippo', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to HIPPO!\x0aHippos are great swimmers, dominate the Lakes/Oceans/Mud!', _0x2bf9c9['aniCol'] = '#945A99', _0x2bf9c9['skinName'] = 'hippo';
        break;
    case _0x2fc4c1:
        _0x2bf9c9['aniName'] = 'Rhino', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to RHINO!\x0a Press W to CHARGE with your mighty horn!', _0x2bf9c9['aniCol'] = '#94a3a9', _0x2bf9c9['skinName'] = 'rhino';
        break;
    case _0x5626d9:
        _0x2bf9c9['aniName'] = 'Shrimp', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = '', _0x2bf9c9['aniCol'] = '#f88e37', _0x2bf9c9['skinName'] = 'shrimp';
        break;
    case _0x2a05b1:
        _0x2bf9c9['aniName'] = 'Trout', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to TROUT!\x0aHint: Hold Left-click to RUN! (Uses extra water)', _0x2bf9c9['aniCol'] = '#ac8686', _0x2bf9c9['skinName'] = 'trout';
        break;
    case _0x415723:
        _0x2bf9c9['aniName'] = 'Crab', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to CRAB!\x0a Crabs can survive on dry land!\x0a (On land, Press W to go into your shell!)', _0x2bf9c9['aniCol'] = '#bf2408', _0x2bf9c9['skinName'] = 'crab';
        break;
    case _0x4e129f:
        _0x2bf9c9['aniName'] = 'Squid', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to SQUID!\x0a Squids can use INK when injured (press W!) \x0a+ you can hide in plankton bushes!', _0x2bf9c9['aniCol'] = '#40dda4', _0x2bf9c9['skinName'] = 'squid';
        break;
    case _0xf16f79:
        _0x2bf9c9['aniName'] = 'Shark', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to SHARK!\x0a A vicious predator of the oceans!', _0x2bf9c9['aniCol'] = '#999fc6', _0x2bf9c9['skinName'] = 'shark';
        break;
    case _0x4ac227:
        _0x2bf9c9['aniName'] = 'Sea-horse', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to SEA HORSE!\x0a An agile hunter!', _0x2bf9c9['aniCol'] = '#73BE2F', _0x2bf9c9['skinName'] = 'seahorse';
        break;
    case _0x402b8c:
        _0x2bf9c9['aniName'] = 'Jellyfish', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to JELLYFISH!\x0a A slowly-turning animal that can grow quite large!', _0x2bf9c9['aniCol'] = '#FDB9BA', _0x2bf9c9['skinName'] = 'jellyfish';
        break;
    case _0x41ea25:
        _0x2bf9c9['aniName'] = 'Turtle', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to TURTLE!\x0a Lives well on land & water! (On land, Press W to go into your shell!)', _0x2bf9c9['aniCol'] = '#502E1A', _0x2bf9c9['skinName'] = 'turtle';
        break;
    case _0xd32f27:
        _0x2bf9c9['aniName'] = 'Stringray', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to STINGRAY!\x0a Use electic shock (Release W key!) to shock animals! \x0a(Takes time to recharge)', _0x2bf9c9['aniCol'] = '#164336', _0x2bf9c9['skinName'] = 'stingray';
        break;
    case _0x3a6f75:
        _0x2bf9c9['aniName'] = 'The Kraken', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to THE KRAKEN!\x0a Terrorize the oceans, and be feared by all!\x0a (Release W to use whirlpool ability!)', _0x2bf9c9['aniCol'] = '#64a034', _0x2bf9c9['skinName'] = 'kraken';
        break;
    case _0x2ee5ae:
        _0x2bf9c9['aniName'] = 'Pufferfish', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to PUFFERFISH!\x0a (Hold W to inflate- become spiky, and dangerous to touch!)', _0x2bf9c9['aniCol'] = '#6C5C2C', _0x2bf9c9['skinName'] = 'pufferfish';
        break;
    case _0x1be7e6:
        _0x2bf9c9['aniName'] = 'Killer Whale', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to Killer Whale! \x0aWhales blow out water when diving! (And sometimes other loot!)', _0x2bf9c9['aniCol'] = '#141414', _0x2bf9c9['skinName'] = 'killerwhale';
        break;
    case _0x31cc16:
        _0x2bf9c9['aniName'] = 'Swordfish', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to ' + _0x2bf9c9['aniName'] + '!\x0a (Press W to rush with your sharp nose!)', _0x2bf9c9['aniCol'] = '#689CD7', _0x2bf9c9['skinName'] = 'swordfish';
        break;
    case _0x103e98:
        _0x2bf9c9['aniName'] = 'Gorilla', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to ' + _0x2bf9c9['aniName'] + '!\x0a Gorillas are very fast on hills/trees!\x0a Press W to throw bananas! (from trees)', _0x2bf9c9['aniCol'] = '#323232', _0x2bf9c9['skinName'] = 'gorilla';
        break;
    case _0x108db6:
        _0x2bf9c9['aniName'] = 'Octopus', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to Octopus!\x0aHold W to use your \'Disguise\' ability!\x0a(Hint: wait for prey to bite you- they get stunned!)', _0x2bf9c9['aniCol'] = '#ff8340', _0x2bf9c9['skinName'] = 'octopus';
        break;
    case _0x33edcb:
        _0x2bf9c9['aniName'] = 'Dragon', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to ' + _0x2bf9c9['aniName'] + '!\x0a (You\'re amazing!) \x0aFly over everything, Hold W to shoot fire!', _0x2bf9c9['aniCol'] = '#22FF8A', _0x2bf9c9['skinName'] = 'dragon';
        break;
    case _0x5186e1:
        _0x2bf9c9['aniName'] = 'Black Dragon', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to ' + _0x2bf9c9['aniName'] + '!\x0a Black dragons drink lava instead of water! Black dragons only heal on healing stones/lava!', _0x2bf9c9['aniCol'] = 'black', _0x2bf9c9['skinName'] = 'blackdragon';
        break;
    case _0x484a15:
        _0x2bf9c9['aniName'] = 'Giant Spider', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to ' + _0x2bf9c9['aniName'] + '!\x0a Place web around the game to catch prey!', _0x2bf9c9['aniCol'] = 'black', _0x2bf9c9['skinName'] = 'giantSpider';
        break;
    case _0x204cad:
        _0x2bf9c9['aniName'] = 'Cobra', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to ' + _0x2bf9c9['aniName'] + '!\x0a Hold W to Spit venom, and poison animals with your bite!', _0x2bf9c9['aniCol'] = 'black', _0x2bf9c9['skinName'] = 'cobra';
        break;
    case _0x2cb4e3:
        _0x2bf9c9['aniName'] = 'Boa Constrictor', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to ' + _0x2bf9c9['aniName'] + '!\x0a Coil and suffocate other animals!', _0x2bf9c9['aniCol'] = 'black', _0x2bf9c9['skinName'] = 'boaConstrictor';
        break;
    case _0x2e747e:
        _0x2bf9c9['aniName'] = 'T-REX', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to ' + _0x2bf9c9['aniName'] + ' The Dinosaur!\x0a This ancient dinosaur has powerful jaws that can drag prey around!!', _0x2bf9c9['aniCol'] = '#862A2A', _0x2bf9c9['skinName'] = 'trex';
        break;
    case _0x342f2b:
        _0x2bf9c9['aniName'] = 'Tiger', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to Tiger!\x0a Tigers can launch an ambush attack (HOLD W to grow a bush) Release to attack!', _0x2bf9c9['aniCol'] = '#FF9000', _0x2bf9c9['skinName'] = 'tiger';
        break;
    case _0x1c4f76:
        _0x2bf9c9['aniName'] = 'Giraffe', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to Giraffe!\x0aGiraffe have huge legs and stomp anyone in their way!', _0x2bf9c9['aniCol'] = '#E9BD23', _0x2bf9c9['skinName'] = 'giraffe';
        break;
    case _0x37eeab:
        _0x2bf9c9['aniName'] = 'Eagle', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to Eagle!\x0aEagles can fly up other animals in the air! !\x0a', _0x2bf9c9['aniCol'] = '#5b400d', _0x2bf9c9['skinName'] = 'eagle';
        break;
    case _0x5c63c1:
        _0x2bf9c9['aniName'] = 'Arctic Fox', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to ' + _0x2bf9c9['aniName'] + '!\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!', _0x2bf9c9['aniCol'] = '#CFCFCF', _0x2bf9c9['skinName'] = 'arctic/arcticfox';
        break;
    case _0x46d563:
        _0x2bf9c9['aniName'] = 'Arctic Hare', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to ' + _0x2bf9c9['aniName'] + '!\x0a \x0aPress W to burrow a hole to hide in!', _0x2bf9c9['aniCol'] = '#D5D5D5', _0x2bf9c9['skinName'] = 'arctic/arctichare';
        break;
    case _0x1080d7:
        _0x2bf9c9['aniName'] = 'The Yeti!', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to ' + _0x2bf9c9['aniName'] + '!\x0a So it really exists... \x0a Hold W to turn into snow, release W to freeeeeze!', _0x2bf9c9['aniCol'] = '#839eb5', _0x2bf9c9['skinName'] = 'arctic/yeti';
        break;
    case _0x465a75:
        _0x2bf9c9['aniName'] = 'Chipmunk', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = '', _0x2bf9c9['aniCol'] = '#A77C30', _0x2bf9c9['skinName'] = 'arctic/chipmunk';
        break;
    case _0xc6c00:
        _0x2bf9c9['aniName'] = 'Muskox', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to ' + _0x2bf9c9['aniName'] + '!\x0a Press W to charge with your horns! \x0aPlus move decently on ice!', _0x2bf9c9['aniCol'] = '#231f18', _0x2bf9c9['skinName'] = 'arctic/muskox';
        break;
    case _0x55a1a9:
        _0x2bf9c9['aniName'] = 'Penguin', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to ' + _0x2bf9c9['aniName'] + '!\x0a Left-click to run!\x0a (HOLD W to slide FAST on ice)!', _0x2bf9c9['aniCol'] = '#FFFFFF', _0x2bf9c9['skinName'] = 'arctic/penguin';
        break;
    case _0x546d88:
        _0x2bf9c9['aniName'] = 'Polar Bear', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to ' + _0x2bf9c9['aniName'] + '!\x0a Polar bears can climb hills! \x0a+ They\'re amazing swimmers!', _0x2bf9c9['aniCol'] = '#e4e4e4', _0x2bf9c9['skinName'] = 'arctic/bear/bear';
        break;
    case _0xc81962:
        _0x2bf9c9['aniName'] = 'Seal', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to ' + _0x2bf9c9['aniName'] + '!\x0a Seals can slide on ice (Hold W) + can climb hills (rocks too!)', _0x2bf9c9['aniCol'] = '#cfcfcf', _0x2bf9c9['skinName'] = 'arctic/seal';
        break;
    case _0x1c2360:
        _0x2bf9c9['aniName'] = 'Snow leopard', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to ' + _0x2bf9c9['aniName'] + '!\x0a Press W to get a speed boost! (Every 8 seconds)!', _0x2bf9c9['aniCol'] = '#cfcfcf', _0x2bf9c9['skinName'] = 'arctic/snowleopard';
        break;
    case _0x13bbdd:
        _0x2bf9c9['aniName'] = 'Walrus', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to ' + _0x2bf9c9['aniName'] + '!\x0a You can slide on ice (Hold W) + can climb hills (rocks too!)', _0x2bf9c9['aniCol'] = '#633838', _0x2bf9c9['skinName'] = 'arctic/walrus';
        break;
    case _0x4c7e27:
        _0x2bf9c9['aniName'] = 'Reindeer', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to ' + _0x2bf9c9['aniName'] + '!\x0a Press W to dig up food! \x0a Your sharp hooves let you turn very well on ice!', _0x2bf9c9['aniCol'] = '#a68976', _0x2bf9c9['skinName'] = 'arctic/reindeer';
        break;
    case _0x4b16ca:
        _0x2bf9c9['aniName'] = 'Wolf', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to ' + _0x2bf9c9['aniName'] + '!\x0a Wolf paws turn very well on ice!\x0a Press W to howl!', _0x2bf9c9['aniCol'] = '#6B6B6B', _0x2bf9c9['skinName'] = 'arctic/wolf';
        break;
    case _0x57db06:
        _0x2bf9c9['aniName'] = 'Wolverine', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to ' + _0x2bf9c9['aniName'] + '!\x0a Press W to Let out a Powerful GROWL! (Knocks back prey!)', _0x2bf9c9['aniCol'] = '#843A0F', _0x2bf9c9['skinName'] = 'arctic/wolverine';
        break;
    case _0x1a507a:
        _0x2bf9c9['aniName'] = 'Mammoth', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to ' + _0x2bf9c9['aniName'] + '!\x0a Press W to roll snowballs with your trunk!\x0a The bigger the snowball gets, the longer the freeze!', _0x2bf9c9['aniCol'] = '#9d4717', _0x2bf9c9['skinName'] = 'arctic/mammoth';
        break;
    case _0x2896b9:
        _0x2bf9c9['aniName'] = 'Donkey', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to ' + _0x2bf9c9['aniName'] + '!\x0a Press W to Kick any animal behind you', _0x2bf9c9['aniCol'] = '#8c7c64', _0x2bf9c9['skinName'] = 'donkey';
        break;
    case _0x3700ee:
        _0x2bf9c9['aniName'] = 'Sabertooth Tiger', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to Sabertooth Tiger!\x0aSabertooth Tigers are great swimmers, dominate the Lakes/Oceans/Mud!', _0x2bf9c9['aniCol'] = '#945A99', _0x2bf9c9['skinName'] = 'sabertoothtiger';
        break;
    case _0xce16df:
        _0x2bf9c9['aniName'] = 'Elephant', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to ' + _0x2bf9c9['aniName'] + '!\x0a Use your long trunk to attack and eat food!', _0x2bf9c9['aniCol'] = '#945A99', _0x2bf9c9['skinName'] = 'elephant';
        break;
    case _0x293d5d:
        _0x2bf9c9['aniName'] = 'Blue Whale', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to Blue Whale!\x0a Smash with your powerful tail!', _0x2bf9c9['aniCol'] = '#945A99', _0x2bf9c9['skinName'] = 'bluewhale';
        break;
    case _0x5b26cb:
        _0x2bf9c9['aniName'] = 'Duckling', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to a DUCK!', _0x2bf9c9['aniCol'] = '#FF9000', _0x2bf9c9['skinName'] = 'duck/duckling';
        break;
    case _0x414bbd:
        _0x2bf9c9['aniName'] = 'Hedgehog', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to Hedgehog!\x0a (Hold W to become spiky, and dangerous to touch!)', _0x2bf9c9['aniCol'] = '#5b400d', _0x2bf9c9['skinName'] = 'hedgehog';
        break;
    case _0x7820e:
        _0x2bf9c9['aniName'] = 'King Crab', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to a KING CRAB!', _0x2bf9c9['aniCol'] = '#971f0e', _0x2bf9c9['skinName'] = 'kingcrab';
        break;
    case _0x47b3d3:
        _0x2bf9c9['aniName'] = 'Lemming', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = '', _0x2bf9c9['aniCol'] = '#A77C30', _0x2bf9c9['skinName'] = 'arctic/lemming';
        break;
    case _0xeeef05:
        _0x2bf9c9['aniName'] = 'Frog', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to Frog!!', _0x2bf9c9['aniCol'] = '#FF9000', _0x2bf9c9['skinName'] = 'frog/frog';
        break;
    case _0x189adc:
        _0x2bf9c9['aniName'] = 'Ostrich', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to Ostrich! Lay eggs to hatch babies! \x0aCommand babies by placing your crosshair (right-click/W)-\x0a They can attack prey!', _0x2bf9c9['aniCol'] = '#FF9000', _0x2bf9c9['skinName'] = 'ostrich/ostrich';
        break;
    case _0x4ba38f:
        _0x2bf9c9['aniName'] = 'Pelican', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to Pelican! \x0aPick up water (and prey!) in your mouth,\x0afly, and drop water on prey! (press W again)', _0x2bf9c9['aniCol'] = '#FF9000', _0x2bf9c9['skinName'] = 'pelican/pelican';
        break;
    case _0x12d178:
        _0x2bf9c9['aniName'] = 'Falcon', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to Falcon! \x0aFly, and do a powerful dive attack! Aim it well.', _0x2bf9c9['aniCol'] = '#FF9000', _0x2bf9c9['skinName'] = 'falcon/falcon';
        break;
    case _0x5baef5:
        _0x2bf9c9['aniName'] = 'Snowy Owl', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to Snowy Owl!\x0a Aim the crosshair, \x0a right click/W when it\'s on top of prey, to attack!', _0x2bf9c9['aniCol'] = '#FF9000', _0x2bf9c9['skinName'] = 'snowyowl/snowyowl';
        break;
    case _0x2c0e73:
        _0x2bf9c9['aniName'] = 'Baby Ostrich', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['upgradeText'] = 'UPGRADED to Baby Ostrich!!', _0x2bf9c9['aniCol'] = '#FF9000', _0x2bf9c9['skinName'] = 'ostrich/baby-ostrich';
        break;
    case _0x3fcb38:
        _0x2bf9c9['aniName'] = 'Phoenix', _0x2bf9c9['upgradeText'] = 'UPGRADED to Phoenix!\x0aCreate powerful fire tornados to burn your enemies alive!', _0x2bf9c9['aniCol'] = '#FF9000', _0x2bf9c9['skinName'] = 'phoenix/phoenix';
        break;
    case _0x16f423:
        _0x2bf9c9['aniName'] = 'Sea Monster', _0x2bf9c9['upgradeText'] = 'UPGRADED to Sea Monster!', _0x2bf9c9['aniCol'] = '#FF9000', _0x2bf9c9['skinName'] = 'seamonster';
        break;
    case _0xc23298:
        _0x2bf9c9['aniName'] = 'Land Monster', _0x2bf9c9['upgradeText'] = 'UPGRADED to Land Monster!', _0x2bf9c9['aniCol'] = '#FF9000', _0x2bf9c9['skinName'] = 'landmonster';
        break;
    case _0x16a00e:
        _0x2bf9c9['aniName'] = 'Ice Monster', _0x2bf9c9['upgradeText'] = 'UPGRADED to Ice Monster!', _0x2bf9c9['aniCol'] = '#FF9000', _0x2bf9c9['skinName'] = 'icemonster';
        break;
    case _0x4cc8de:
        _0x2bf9c9['aniName'] = 'Dino Monster', _0x2bf9c9['upgradeText'] = 'UPGRADED to Dino Monster!', _0x2bf9c9['aniCol'] = '#FF9000', _0x2bf9c9['skinName'] = 'dinomonster';
        break;
    case _0x576572:
        _0x2bf9c9['aniName'] = 'Pigeon', _0x2bf9c9['upgradeText'] = 'UPGRADED to Pigeon!\x0aHold W to fly around. ', _0x2bf9c9['aniCol'] = '#FF9000', _0x2bf9c9['skinName'] = 'pigeon/pigeon';
        break;
    case _0x375310:
        _0x2bf9c9['aniName'] = 'Toucan', _0x2bf9c9['upgradeText'] = 'UPGRADED to Toucan!\x0aHold W to fly around. ', _0x2bf9c9['aniCol'] = '#FF9000', _0x2bf9c9['skinName'] = 'toucan/toucan';
        break;
    default:
        _0x2bf9c9['aniName'] = '(Animal)', _0x2bf9c9['aniDesc'] = '', _0x2bf9c9['aniCol'] = '#000000', _0x2bf9c9['upgradeText'] = 'UPGRADED!';
    }
    return _0x2bf9c9;
};

function _0x3f0d28() {}
var _0x13295b = _0x54c5f1,
_0xec194 = _0x5adfe2;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194, _0x54c5f1['prototype']['abilityType'] = _0x39bc93, _0x54c5f1['prototype']['showHalloweenSkins'] = !![], _0x54c5f1['prototype']['updateZ'] = function () {
if (this['abilityType'] == _0x9477e2 || this['abilityType'] == _0x2c80b1 || this['abilityType'] == _0x498d97 || this['abilityType'] == _0x16c4b7 || this['abilityType'] == _0x18e1c9 || this['abilityType'] == _0x516e59 || this['abilityType'] == _0x119e97) this['z'] = 0x186a2;
else {
    if (this['abilityType'] == _0x119e97 || this['abilityType'] == _0x18e1c9 || this['abilityType'] == _0x4ad759 || this['abilityType'] == _0x16e660 || this['abilityType'] == _0xe5cded || this['abilityType'] == _0x27b9a7 || this['abilityType'] == _0x5a9011 || this['abilityType'] == _0x1aeca0 || this['abilityType'] == _0x198ba5 || this['abilityType'] == _0x2f6bee || this['abilityType'] == _0x3500ac || this['abilityType'] == _0x34439c || this['abilityType'] == _0xdc09d || this['abilityType'] == _0x33122b || this['abilityType'] == _0x226ac3 || this['abilityType'] == _0x1a3c63 || this['abilityType'] == _0x121772 || this['abilityType'] == _0x692807) this['z'] = 0x7d0;
    else {
        if (this['abilityType'] == _0x200063) this['z'] = 0x3ea;
        else {
            if (this['abilityType'] == _0x2cc91d) this['z'] = 0x2711;
            else {
                if (this['abilityType'] == _0xf8b4f) {
                    if (this['specType'] == 0x1) this['z'] = 0x2711;
                    else {
                        if (this['specType'] == 0x2) this['z'] = 0x3f5;
                        else {
                            if (this['specType'] == 0x3) this['z'] = 0x186a0;
                        }
                    }
                } else this['abilityType'] == _0x57a591 ? this['z'] = 0x3f5 : this['z'] = -0x98;
            }
        }
    }
}
if (this['abilityType'] == _0x159b11) {
    if (this['specType'] == 0x2) this['z'] = 0x2710 - this['rad'];
    else this['z'] = 0x3e9;
}
}, _0x54c5f1['prototype']['customDraw'] = function (_0x120fc1) {
switch (this['abilityType']) {
case _0x514e49:
    _0x486a28(0x0, 0x0, this['rad'], '#7EBCC0');
    break;
case _0x537ab5:
case _0x56a005: {
    break;
}
case _0x5c8a25: {
    _0x4ac9cf['save']();
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0.4 * _0x1abedb, _0x486a28(0x0, 0x0, this['rad'], '#7EBCC0'), _0x4ac9cf['globalAlpha'] = 0x1 * _0x1abedb, _0x4ac9cf['strokeStyle'] = 'white', _0x4ac9cf['beginPath']();
    var _0x4a1308 = 0xa;
    _0x4ac9cf['translate'](-0x5, this['rad'] * -0.7), _0x4ac9cf['moveTo'](0x0, -_0x4a1308), _0x4ac9cf['lineTo'](0x0, _0x4a1308), _0x4ac9cf['moveTo'](-_0x4a1308, -_0x4a1308), _0x4ac9cf['lineTo'](_0x4a1308, _0x4a1308), _0x4ac9cf['moveTo'](_0x4a1308, -_0x4a1308), _0x4ac9cf['lineTo'](-_0x4a1308, _0x4a1308), _0x4ac9cf['moveTo'](-_0x4a1308, 0x0), _0x4ac9cf['lineTo'](_0x4a1308, 0x0), _0x4ac9cf['lineWidth'] = 0x3, _0x4ac9cf['stroke'](), _0x4ac9cf['restore']();
}
break;
case _0x48d716: {
    _0x4ac9cf['save']();
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0.15 * _0x1abedb, _0x486a28(0x0, 0x0, this['rad'], '#755A2A'), _0x4ac9cf['restore']();
}
break;
case _0x3500ac: {
    _0x4ac9cf['save']();
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0x1 * _0x1abedb;
    var _0x266495 = this['getSkinImageObj']('img/ability_sabertoothJawAttack.png');
    if (_0x266495) {
        var _0x2f3d60 = Math['min'](0x1, (_0x397f50 - this['spawnTime']) / 0xc8),
            _0x5a2ce0 = this['rad'] - 2.5;
        _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x266495, 0x0, 0x0, _0x266495['width'] * _0x2f3d60, _0x266495['height'], -_0x5a2ce0, -_0x5a2ce0, 0x2 * _0x5a2ce0 * _0x2f3d60, 0x2 * _0x5a2ce0);
    }
    _0x4ac9cf['restore']();
}
break;
case _0x16e660: {
    _0x4ac9cf['save']();
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0x1 * _0x1abedb;
    var _0x266495 = this['getSkinImageObj']('img/ability_claw.png');
    if (_0x266495) {
        var _0x2f3d60 = Math['min'](0x1, (_0x397f50 - this['spawnTime']) / 0xc8),
            _0x5a2ce0 = this['rad'] - 2.5;
        _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x266495, 0x0, 0x0, _0x266495['width'] * _0x2f3d60, _0x266495['height'], -_0x5a2ce0, -_0x5a2ce0, 0x2 * _0x5a2ce0 * _0x2f3d60, 0x2 * _0x5a2ce0);
    }
    _0x4ac9cf['restore']();
}
break;
case _0x516e59: {
    _0x4ac9cf['save']();
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0.1 * _0x1abedb, _0x486a28(0x0, 0x0, this['rad'], '#5B7EC7'), _0x4ac9cf['globalAlpha'] = 0x1 * _0x1abedb;
    var _0x599409 = 'img',
        _0x266495 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['speciesType'] + '/tail.png');
    if (_0x266495) {
        var _0x2f3d60 = Math['min'](0x1, (_0x397f50 - this['spawnTime']) / 0xc8),
            _0x5a2ce0 = this['rad'] * 0.65;
        _0x4ac9cf['rotate'](this['angle']);
        var _0x2d88fd = 0x0,
            _0x8684 = this['rad'],
            _0x36ffae = _0x5a2ce0 * 0x2,
            _0x4ca60f = _0x5a2ce0 * 0x2 * _0x2f3d60,
            _0x1d2e85 = 0.5,
            _0x66a51d = 1.25;
        _0x4ac9cf['drawImage'](_0x266495, _0x2d88fd + _0x36ffae * -_0x1d2e85, _0x8684 + _0x4ca60f * -_0x66a51d, _0x36ffae, _0x4ca60f);
    }
    _0x4ac9cf['restore']();
}
break;
case _0x27b9a7: {
    _0x4ac9cf['save']();
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0.1 * _0x1abedb, _0x486a28(0x0, 0x0, this['rad'], '#5B7EC7'), _0x4ac9cf['globalAlpha'] = 0x1 * _0x1abedb;
    var _0x599409 = 'skins/ocean/bluewhale/' + this['speciesType'];
    if (this['speciesSubType'] && this['speciesSubType'] > 0x0) _0x599409 += '/' + this['speciesSubType'];
    var _0x4df2b1 = this['speciesType'] === 0x1 || this['speciesType'] === 0x2 || this['speciesType'] === 0xc9 ? 0x1 : 0x2,
        _0x266495 = this['getSkinImageObjForSeason'](_0x599409 + '/ability_whaleTailHit.png', _0x4df2b1);
    if (_0x266495) {
        var _0x2f3d60 = Math['min'](0x1, (_0x397f50 - this['spawnTime']) / 0xc8),
            _0x5a2ce0 = this['rad'] * 0.85;
        _0x4ac9cf['rotate'](this['angle']);
        var _0x2d88fd = 0x0,
            _0x8684 = this['rad'],
            _0x36ffae = _0x5a2ce0 * 0x2,
            _0x4ca60f = _0x5a2ce0 * 0x2 * _0x2f3d60,
            _0x1d2e85 = 0.5,
            _0x66a51d = 1.25;
        _0x4ac9cf['drawImage'](_0x266495, _0x2d88fd + _0x36ffae * -_0x1d2e85, _0x8684 + _0x4ca60f * -_0x66a51d, _0x36ffae, _0x4ca60f);
    }
    _0x4ac9cf['restore']();
}
break;
case _0x18e1c9: {
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['save']();
    var _0x3e5819 = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x3c01cb = 1.5,
        _0x2bdc3d = 0x1,
        _0x4f75f4 = _0x2bdc3d * Math['sin'](0x2 * Math['PI'] / _0x3c01cb * _0x3e5819),
        _0x4b4e11 = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] *= 0.6 * _0x4f75f4, _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['globalAlpha'] = 0.15 * _0x1abedb;
    if (this['specType2'] == 0x0) _0x486a28(0x0, 0x0, this['rad'], '#96661C');
    else _0x486a28(0x0, 0x0, this['rad'], '#e0dfde');
    _0x4ac9cf['restore'](), _0x4ac9cf['save']();
    var _0x2a1dc3 = this['specType2'] == 0x1 ? 'arctic' : 'land',
        _0x822c9b = 'skins/' + _0x2a1dc3 + '/bear/' + this['speciesType'] + '/slash.png',
        _0x266495 = this['getSkinImageObj'](_0x822c9b);
    if (_0x266495) {
        var _0x2f3d60 = Math['min'](0x1, (_0x397f50 - this['spawnTime']) / 0xc8),
            _0x4d55ab = _0x1ce2eb((_0x397f50 - this['spawnTime']) / 0x12c, 0x0, 0x1),
            _0x5d0b35 = -(-0.5 + _0x4d55ab) * _0x40941f,
            _0x22f316 = this['angle'];
        _0x4ac9cf['rotate'](this['angle'] + _0x5d0b35 * (this['specType'] == 0x0 ? 0x1 : -0x1));
        var _0x5a2ce0 = -this['rad'] * 0x1,
            _0x2d88fd = 0x0,
            _0x8684 = this['rad'],
            _0x36ffae = _0x5a2ce0 * 0x2,
            _0x4ca60f = _0x5a2ce0 * 0x2 * _0x2f3d60,
            _0x1d2e85 = 0.5,
            _0x66a51d = 0.8;
        _0x4ac9cf['drawImage'](_0x266495, _0x2d88fd + _0x36ffae * -_0x1d2e85, _0x8684 + _0x4ca60f * -_0x66a51d + _0x5a2ce0, _0x36ffae, _0x4ca60f);
    }
    _0x4ac9cf['restore']();
}
break;
case _0x119e97: {
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['save']();
    var _0x3e5819 = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x3c01cb = 1.5,
        _0x2bdc3d = 0x1,
        _0x4f75f4 = _0x2bdc3d * Math['sin'](0x2 * Math['PI'] / _0x3c01cb * _0x3e5819),
        _0x4b4e11 = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] *= 0.6 * _0x4f75f4, _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['globalAlpha'] = 0.15 * _0x1abedb;
    if (this['specType2'] == 0x0) _0x486a28(0x0, 0x0, this['rad'], '#96661C');
    else _0x486a28(0x0, 0x0, this['rad'], '#e0dfde');
    _0x4ac9cf['restore'](), _0x4ac9cf['save']();
    var _0x599409 = 'skins/desert/gobibear/' + this['speciesType'] + '/claw' + this['specType'],
        _0x266495 = this['getSkinImageObj'](_0x599409 + '.png');
    if (_0x266495) {
        var _0x2f3d60 = Math['min'](0x1, (_0x397f50 - this['spawnTime']) / 0xc8),
            _0x4d55ab = _0x1ce2eb((_0x397f50 - this['spawnTime']) / 0x12c, 0x0, 0x1),
            _0x5d0b35 = -(-0.5 + _0x4d55ab) * _0x142401(0x5a),
            _0x22f316 = this['angle'];
        _0x4ac9cf['rotate'](this['angle'] + _0x5d0b35 * (this['specType'] == 0x0 ? 0x1 : -0x1));
        var _0x5a2ce0 = -this['rad'] * 0x1,
            _0x2d88fd = 0x0,
            _0x8684 = this['rad'],
            _0x36ffae = _0x5a2ce0 * 0x2,
            _0x4ca60f = _0x5a2ce0 * 0x2 * _0x2f3d60,
            _0x1d2e85 = 0.5,
            _0x66a51d = 0.8;
        _0x4ac9cf['drawImage'](_0x266495, _0x2d88fd + _0x36ffae * -_0x1d2e85, _0x8684 + _0x4ca60f * -_0x66a51d + _0x5a2ce0, _0x36ffae, _0x4ca60f);
    }
    _0x4ac9cf['restore']();
}
break;
case _0x692807: {
    var _0x3e5819 = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x5be6ac = _0x23fdc7(_0x3e5819, 0x1, 0.1, 0x1),
        _0x3d064b = 0x0,
        _0x3c01cb = 0x2,
        _0x2bdc3d = 1.5;
    _0x3d064b = _0x2bdc3d * Math['sin'](0x2 * Math['PI'] / _0x3c01cb * _0x3e5819);
    var _0x5ae985 = 0x1;
    for (i = 0x0; i < _0x5ae985; i++) {
        this['drawRad'] === undefined && (this['drawRad'] = new Array(), this['drawAngle'] = new Array());
        this['drawRad'][i] == undefined && (this['drawRad']['push'](_0x5a9e0b(0x5, 0xa) / 0xa), this['drawAngle']['push'](_0x142401(_0x5a9e0b(0x1, 0x168))));
        var _0x44ccde = this['rad'] * this['drawRad'][i];
        _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['drawAngle'][i]), _0x4ac9cf['save']();
        var _0x1abedb = _0x4ac9cf['globalAlpha'];
        _0x4ac9cf['globalAlpha'] = 0.1 - _0x5be6ac, _0x4ac9cf['restore'](), _0x4ac9cf['save'](), _0x4ac9cf['fillStyle'] = 'white', _0x4ac9cf['globalAlpha'] = 0.3 - _0x5be6ac;
        var _0x3ccbf0 = -_0x44ccde * 0.6,
            _0x3afe95 = -_0x44ccde * 0.5 + 0xa * this['rPer'],
            _0x1d5144 = Math['max'](0x0, _0x44ccde * 0.65 + _0x3d064b) + 0x2;
        _0x486a28(_0x3ccbf0, _0x3afe95, _0x1d5144, '#654321');
        var _0x3ccbf0 = _0x44ccde * 0.5,
            _0x3afe95 = -_0x44ccde * 0.5 - 0xa * this['rPer'],
            _0x1d5144 = Math['max'](0x0, _0x44ccde * 0.73 - _0x3d064b);
        _0x486a28(_0x3ccbf0, _0x3afe95, _0x1d5144, '#654321');
        var _0x3ccbf0 = _0x44ccde * 0.6,
            _0x3afe95 = _0x44ccde * 0.5,
            _0x1d5144 = Math['max'](0x0, _0x44ccde * 0.78 + _0x3d064b);
        _0x486a28(_0x3ccbf0, _0x3afe95, _0x1d5144, '#654321');
        var _0x3ccbf0 = -_0x44ccde * 0.5,
            _0x3afe95 = _0x44ccde * 0.5 + 0xa * this['rPer'],
            _0x1d5144 = Math['max'](0x0, _0x44ccde * 0.6 + this['rPer'] - _0x3d064b);
        _0x486a28(_0x3ccbf0, _0x3afe95, _0x1d5144, '#654321'), _0x4ac9cf['restore'](), _0x4ac9cf['restore']();
    }
}
break;
case _0xfa59cd:
    _0x4ac9cf['globalAlpha'] = 0.5, _0x486a28(0x0, 0x0, this['rad'], 'red');
    break;
case _0x9477e2:
    break;
case _0x543a2b:
    break;
case _0x2a827c:
    break;
case _0x59ef4c:
case _0x969368:
case _0x38630f:
case _0x49ae88:
case _0x2c80b1:
case _0x2dad77:
case _0x1ce21c:
case _0x371c6e:
case _0x4e676c:
case _0x195aea:
    break;
case _0x159b11:
    if (this['specType'] == 0x2) {
        var _0x19e1b3 = 'closed',
            _0x3b8a28 = 'flytrap',
            _0x47df74 = 'img/desert/' + _0x3b8a28 + '/mouth/' + _0x19e1b3 + '.png',
            _0x266495 = this['getSkinImageObj'](_0x47df74);
        if (_0x266495) {
            var _0x5a2ce0 = this['rad'];
            _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.9, _0x4ac9cf['rotate'](this['angle'] - _0x142401(-0x5a)), _0x4ac9cf['drawImage'](_0x266495, -_0x5a2ce0, -_0x5a2ce0, 0x2 * _0x5a2ce0, 0x2 * _0x5a2ce0), _0x4ac9cf['restore']();
        }
    } else {}
    break;
case _0x5ee4e0:
    if (this['specType2'] == 0x1) {
        var _0x3e5819 = _0x397f50 - this['spawnTime'],
            _0x1abedb = _0x4ac9cf['globalAlpha'];
        _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['angle'] - -_0x40941f), _0x4ac9cf['globalAlpha'] = 0.9 * _0x1abedb;
        if (_0x3e5819 < 0xc8) {
            var _0x389abf = 0x1 + Math['trunc'](_0x3e5819 / 0x32),
                _0x47df74 = 'skins/desert/camel/201/spit' + this['specType'] + '_pop' + _0x389abf + '.png',
                _0x266495 = this['getSkinImageObjForSeason'](_0x47df74, 0x1);
            if (_0x266495) {
                var _0x5a2ce0 = this['rad'];
                _0x4ac9cf['save'](), _0x4ac9cf['drawImage'](_0x266495, -_0x5a2ce0, -_0x5a2ce0, 0x2 * _0x5a2ce0, 0x2 * _0x5a2ce0), _0x4ac9cf['restore']();
            }
        } else {
            var _0x47df74 = 'skins/desert/camel/201/spit' + this['specType'] + '_pop4.png',
                _0x266495 = this['getSkinImageObjForSeason'](_0x47df74, 0x1);
            if (_0x266495) {
                var _0x5a2ce0 = this['rad'];
                _0x4ac9cf['save'](), _0x4ac9cf['drawImage'](_0x266495, -_0x5a2ce0, -_0x5a2ce0, 0x2 * _0x5a2ce0, 0x2 * _0x5a2ce0), _0x4ac9cf['restore']();
            }
        }
        _0x4ac9cf['restore']();
    } else {
        _0x4ac9cf['save']();
        var _0x1abedb = _0x4ac9cf['globalAlpha'];
        _0x4ac9cf['globalAlpha'] = 0.15 * _0x1abedb, _0x486a28(0x0, 0x0, this['rad'], 'black'), _0x4ac9cf['restore']();
    }
    break;
case _0x16c4b7: {
    this['drawEffectScale_Slow'] = !![], this['doesDrawEffectScale'] = !![], _0x4ac9cf['globalAlpha'] = 0.2, _0x486a28(0x0, 0x0, this['rad'] * 0.85, 'white');
    var _0xfa0e8c = this['specType'] == 0x3 ? '_e' : '',
        _0x266495 = this['getSkinImageObj']('img/target' + _0xfa0e8c + '.png');
    if (_0x266495) {
        var _0x5a2ce0 = this['rad'];
        _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.5, _0x4ac9cf['drawImage'](_0x266495, -_0x5a2ce0, -_0x5a2ce0, 0x2 * _0x5a2ce0, 0x2 * _0x5a2ce0), _0x4ac9cf['restore']();
    }
    _0x4ac9cf['save']();
    if (this['is1v1Target'] == 0x1 && this['timerTxt'] != null) _0x4ac9cf['globalAlpha'] = 0x1, this['timerTxt']['x'] = 0x0, this['timerTxt']['y'] = 0x0, this['timerTxt']['draw']();
    else this['is1v1Target'] == 0x2 && this['timerTxt'] != null && (_0x4ac9cf['globalAlpha'] = 0x1, this['timerTxt']['x'] = 0x0, this['timerTxt']['y'] = 0x0, this['timerTxt']['draw']());
    _0x4ac9cf['restore']();
}
break;
case _0x498d97: {
    _0x4ac9cf['globalAlpha'] = 0.5;
}
break;
case _0x1aeca0: {
    _0x4ac9cf['save']();
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0.05 * _0x1abedb, _0x486a28(0x0, 0x0, this['rad'], '#B32E10'), _0x4ac9cf['globalAlpha'] = 0x1 * _0x1abedb;
    var _0x599409 = 'skins/ocean/kingcrab/' + this['speciesType'],
        _0x4df2b1 = this['speciesType'] === 0x1 || this['speciesType'] === 0x2 || this['speciesType'] === 0xcc ? 0x1 : 0x2,
        _0x266495 = this['getSkinImageObjForSeason'](_0x599409 + '/ability_crabSmash' + this['specType'] + '.png', _0x4df2b1);
    if (_0x266495) {
        var _0x4d55ab = _0x1ce2eb((_0x397f50 - this['spawnTime']) / 0xc8, 0x0, 0x1),
            _0xed36e0 = this['specType'] == 0x1 ? -0x1 : 0x1,
            _0x5d0b35 = -(-0.2 + _0x4d55ab) * _0x142401(-0x5a * _0xed36e0);
        _0x5d0b35 = _0xed36e0 * (0.3 + _0x4d55ab) + _0x142401(_0xed36e0 * -0x1e);
        var _0x5a2ce0 = this['rad'] * 0.6;
        _0x4ac9cf['rotate'](this['angle'] + _0x5d0b35);
        var _0x2d88fd = 0x0,
            _0x8684 = this['rad'],
            _0x36ffae = _0x5a2ce0 * 0x2 * 0.7,
            _0x4ca60f = _0x5a2ce0 * 0x2,
            _0x1d2e85 = 0.75,
            _0x66a51d = 0.95;
        this['specType'] == 0x1 && (_0x1d2e85 = 0.25, _0x66a51d = 0.95), _0x4ac9cf['drawImage'](_0x266495, _0x2d88fd + _0x36ffae * -_0x1d2e85, _0x8684 + _0x4ca60f * -_0x66a51d, _0x36ffae, _0x4ca60f);
    }
    _0x4ac9cf['restore']();
}
break;
case _0x5a9011: {
    _0x4ac9cf['save']();
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0.05 * _0x1abedb, _0x486a28(0x0, 0x0, this['rad'], '#E4E7C8'), _0x4ac9cf['globalAlpha'] = 0x1 * _0x1abedb;
    var _0x599409 = 'skins/land/elephant/' + this['speciesType'],
        _0x266495 = this['getSkinImageObj'](_0x599409 + '/ability_elephantTrunkSmack.png');
    console['log'](_0x599409);
    if (_0x266495) {
        var _0x4d55ab = _0x1ce2eb((_0x397f50 - this['spawnTime']) / 0x12c, 0x0, 0x1),
            _0x5d0b35 = -(-0.5 + _0x4d55ab) * _0x40941f,
            _0x5a2ce0 = this['rad'] * 0.6;
        _0x4ac9cf['rotate'](this['angle'] + _0x5d0b35);
        var _0x2d88fd = 0x0,
            _0x8684 = this['rad'],
            _0x36ffae = _0x5a2ce0 * 0x2 * 0.7,
            _0x4ca60f = _0x5a2ce0 * 0x2,
            _0x1d2e85 = 0.75,
            _0x66a51d = 0.95;
        _0x4ac9cf['drawImage'](_0x266495, _0x2d88fd + _0x36ffae * -_0x1d2e85, _0x8684 + _0x4ca60f * -_0x66a51d, _0x36ffae, _0x4ca60f);
    }
    _0x4ac9cf['restore']();
}
break;
case _0xe5cded: {}
break;
case _0x198ba5: {
    _0x4ac9cf['save']();
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0.25 * _0x1abedb, _0x486a28(0x0, 0x0, this['rad'], '#44d31f'), _0x4ac9cf['globalAlpha'] = 0x1 * _0x1abedb;
    var _0x4df2b1 = this['speciesType'] === 0x1 || this['speciesType'] === 0x64 || this['speciesType'] === 0xc9 ? 0x1 : 0x2,
        _0x266495 = this['getSkinImageObjForSeason']('skins/land/croc/' + this['speciesType'] + '/ability.png', _0x4df2b1);
    if (_0x266495) {
        var _0x2f3d60 = Math['min'](0x1, (_0x397f50 - this['spawnTime']) / 0xc8),
            _0x5a2ce0 = this['rad'] * 0.6;
        _0x4ac9cf['rotate'](this['angle']);
        var _0x2d88fd = 0x0,
            _0x8684 = this['rad'],
            _0x36ffae = _0x5a2ce0 * 2.5,
            _0x4ca60f = _0x5a2ce0 * 2.5 * _0x2f3d60,
            _0x1d2e85 = 0.5,
            _0x66a51d = 0.95;
        _0x4ac9cf['drawImage'](_0x266495, _0x2d88fd + _0x36ffae * -_0x1d2e85, _0x8684 + _0x4ca60f * -_0x66a51d, _0x36ffae, _0x4ca60f), _0x4ac9cf['rotate'](Math['PI']);
        var _0x2d88fd = 0x0,
            _0x8684 = this['rad'] * 0.5,
            _0x36ffae = _0x5a2ce0 * 2.5,
            _0x4ca60f = _0x5a2ce0 * 2.5 * _0x2f3d60,
            _0x1d2e85 = 0.5,
            _0x66a51d = 0.95;
        _0x4ac9cf['drawImage'](_0x266495, _0x2d88fd + _0x36ffae * -_0x1d2e85, _0x8684 + _0x4ca60f * -_0x66a51d, _0x36ffae, _0x4ca60f);
    }
    _0x4ac9cf['restore']();
}
break;
case _0x2f6bee: {
    _0x4ac9cf['save']();
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0.25 * _0x1abedb, _0x486a28(0x0, 0x0, this['rad'], '#44d31f');
    var _0x4df2b1 = this['speciesType'] === 0x1 || this['speciesType'] === 0x2 ? 0x1 : this['mopeSeasonID'],
        _0x599409 = 'skins/land/boaconstrictor/' + this['speciesType'];
    _0x4ac9cf['globalAlpha'] = 0x1 * _0x1abedb;
    var _0x266495 = this['getSkinImageObjForSeason'](_0x599409 + '/ability_boabite.png', _0x4df2b1);
    if (_0x266495) {
        var _0x2f3d60 = Math['min'](0x1, (_0x397f50 - this['spawnTime']) / 0xc8),
            _0x5a2ce0 = this['rad'] * 0.6;
        _0x4ac9cf['rotate'](this['angle']);
        var _0x2d88fd = 0x0,
            _0x8684 = this['rad'],
            _0x36ffae = _0x5a2ce0 * 2.5,
            _0x4ca60f = _0x5a2ce0 * 2.5 * _0x2f3d60,
            _0x1d2e85 = 0.5,
            _0x66a51d = 0.95;
        _0x4ac9cf['drawImage'](_0x266495, _0x2d88fd + _0x36ffae * -_0x1d2e85, _0x8684 + _0x4ca60f * -_0x66a51d, _0x36ffae, _0x4ca60f), _0x4ac9cf['rotate'](Math['PI']);
        var _0x2d88fd = 0x0,
            _0x8684 = this['rad'] * 0.5,
            _0x36ffae = _0x5a2ce0 * 2.5,
            _0x4ca60f = _0x5a2ce0 * 2.5 * _0x2f3d60,
            _0x1d2e85 = 0.5,
            _0x66a51d = 0.95;
        _0x4ac9cf['drawImage'](_0x266495, _0x2d88fd + _0x36ffae * -_0x1d2e85, _0x8684 + _0x4ca60f * -_0x66a51d, _0x36ffae, _0x4ca60f);
    }
    _0x4ac9cf['restore']();
}
break;
case _0x3d505f: {
    _0x4ac9cf['save']();
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0.1 * _0x1abedb, _0x486a28(0x0, 0x0, this['rad'], '#755A2A'), _0x4ac9cf['globalAlpha'] = 0x1 * _0x1abedb;
    var _0x599409 = 'skins/land/',
        _0x4df2b1 = this['speciesType'] === 0xcc ? 0x1 : this['mopeSeasonID'],
        _0x266495 = this['getSkinImageObjForSeason'](_0x599409 + '/tiger/' + this['speciesType'] + '/ability_tigerJump.png', _0x4df2b1);
    if (_0x266495) {
        var _0x2f3d60 = Math['min'](0x1, (_0x397f50 - this['spawnTime']) / 0x64),
            _0x5a2ce0 = this['rad'] * 1.1;
        _0x4ac9cf['rotate'](this['angle']);
        var _0x2d88fd = 0x0,
            _0x8684 = this['rad'],
            _0x36ffae = _0x5a2ce0 * 0x2,
            _0x4ca60f = _0x5a2ce0 * 0x2 * _0x2f3d60,
            _0x1d2e85 = 0.5,
            _0x66a51d = 0x1;
        _0x4ac9cf['drawImage'](_0x266495, _0x2d88fd + _0x36ffae * -_0x1d2e85, _0x8684 + _0x4ca60f * -_0x66a51d, _0x36ffae, _0x4ca60f);
    }
    _0x4ac9cf['restore']();
}
break;
case _0x33122b: {
    _0x4ac9cf['save']();
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0.05 * _0x1abedb, _0x486a28(0x0, 0x0, this['rad'], '#44d31f'), _0x4ac9cf['globalAlpha'] = 0x1 * _0x1abedb;
    var _0x2fd064 = this['getSkinImageObj']('img/ability_pounce2.png'),
        _0x6d3b53 = this['getSkinImageObj']('img/ability_pounce1.png');
    if (_0x2fd064 && _0x6d3b53) {
        var _0x2f3d60 = Math['min'](0x1, (_0x397f50 - this['spawnTime']) / 0xc8),
            _0x5a2ce0 = this['rad'] * 0.4;
        _0x4ac9cf['rotate'](this['angle']);
        var _0x2d88fd = 0x0,
            _0x8684 = this['rad'],
            _0x36ffae = _0x5a2ce0 * 2.5,
            _0x4ca60f = _0x5a2ce0 * 2.5 * _0x2f3d60,
            _0x1d2e85 = 0.5,
            _0x66a51d = 0.95;
        _0x4ac9cf['drawImage'](_0x2fd064, _0x2d88fd + _0x36ffae * -_0x1d2e85, _0x8684 + _0x4ca60f * -_0x66a51d, _0x36ffae, _0x4ca60f), _0x5a2ce0 = this['rad'] * 0.6;
        var _0x2d88fd = 0x0,
            _0x8684 = this['rad'] * 0.5,
            _0x36ffae = _0x5a2ce0 * 2.5,
            _0x4ca60f = _0x5a2ce0 * 2.5 * _0x2f3d60,
            _0x1d2e85 = 0.5,
            _0x66a51d = 0.95;
        _0x4ac9cf['drawImage'](_0x6d3b53, _0x2d88fd + _0x36ffae * -_0x1d2e85, _0x8684 + _0x4ca60f * -_0x66a51d, _0x36ffae, _0x4ca60f);
    }
    _0x4ac9cf['restore']();
}
break;
case _0xdc09d: {
    _0x4ac9cf['save']();
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0.05 * _0x1abedb, _0x486a28(0x0, 0x0, this['rad'], '#E4E7C8'), _0x4ac9cf['globalAlpha'] = 0x1 * _0x1abedb;
    var _0x37257c = 'skins/land/tiger/' + this['speciesType'] + '/ability_tigerSlash' + this['specType'] + '.png',
        _0x266495 = this['getSkinImageObj'](_0x37257c);
    if (_0x266495) {
        var _0x4d55ab = _0x1ce2eb((_0x397f50 - this['spawnTime']) / 0x12c, 0x0, 0x1),
            _0x5d0b35 = (this['specType'] == 0x1 ? 0x1 : -0x1) * (-0.6 + _0x4d55ab) * _0x142401(0x5a),
            _0x5a2ce0 = this['rad'] * 1.2;
        _0x4ac9cf['rotate'](this['angle'] + _0x5d0b35);
        var _0x2d88fd = 0x0,
            _0x8684 = this['rad'],
            _0x36ffae = _0x5a2ce0 * 0x2 * 0.7,
            _0x4ca60f = _0x5a2ce0 * 0x2,
            _0x1d2e85 = 0.2,
            _0x66a51d = 0.5;
        _0x4ac9cf['drawImage'](_0x266495, _0x2d88fd + _0x36ffae * -_0x1d2e85, _0x8684 + _0x4ca60f * -_0x66a51d, _0x36ffae, _0x4ca60f);
    }
    _0x4ac9cf['restore']();
}
break;
case _0x1a3c63: {
    _0x4ac9cf['save']();
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0x1 * _0x1abedb;
    var _0x4df2b1 = this['speciesType'] === 0xc9 || this['speciesType'] === 0x2 || this['speciesType'] === 0x1 || this['speciesType'] === 0x64 ? 0x1 : this['mopeSeasonID'],
        _0x39274b = _0x4df2b1 === 0x1 ? '' : this['specType'],
        _0x2bf0a8 = 'skins/land/zebra/' + this['speciesType'] + '/kick' + _0x39274b + '.png';
    console['log'](_0x2bf0a8);
    var _0x266495 = this['getSkinImageObjForSeason'](_0x2bf0a8, _0x4df2b1);
    if (_0x266495) {
        var _0x2f3d60 = Math['min'](0x1, (_0x397f50 - this['spawnTime']) / 0xc8),
            _0x5a2ce0 = this['rad'] * 0.6;
        _0x4ac9cf['rotate'](this['angle']);
        var _0x2d88fd = 0x0,
            _0x8684 = this['rad'],
            _0x36ffae = _0x5a2ce0 * 0x2,
            _0x4ca60f = _0x5a2ce0 * 0x3 * _0x2f3d60,
            _0x1d2e85 = 0.3,
            _0x66a51d = 0x1;
        _0x4ac9cf['drawImage'](_0x266495, _0x2d88fd + _0x36ffae * -_0x1d2e85, _0x8684 + _0x4ca60f * -_0x66a51d, _0x36ffae, _0x4ca60f);
    }
    _0x4ac9cf['restore']();
}
break;
case _0x226ac3: {
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['save']();
    let _0x249bb6 = 0x1;
    var _0x4b4e11 = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] *= 0.6 * _0x249bb6, _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['globalAlpha'] = 0.15 * _0x1abedb, _0x486a28(this['rad'] * 0.3, 0x0, this['rad'] * (0.9 + 0.12 * _0x249bb6), '#E4E7C8'), _0x486a28(-this['rad'] * 0.3, 0x0, this['rad'] * (1.05 + 0.09 * _0x249bb6), '#E4E7C8'), _0x4ac9cf['globalAlpha'] = _0x4b4e11, _0x4ac9cf['restore'](), _0x4ac9cf['save']();
    let _0x36397f = 'skins/land/giraffe/' + this['speciesType'];
    this['speciesType'] == 0xca && (_0x36397f += '/' + this['speciesSubType']);
    _0x36397f += '/stomp.png';
    var _0x266495 = this['getSkinImageObj'](_0x36397f);
    if (_0x266495) {
        var _0x2f3d60 = Math['min'](0x1, (_0x397f50 - this['spawnTime']) / 0xc8),
            _0x22f316 = this['angle'];
        _0x4ac9cf['rotate'](_0x22f316);
        var _0x5a2ce0 = -this['rad'] * 0x1,
            _0x2d88fd = 0x0,
            _0x8684 = this['rad'],
            _0x36ffae = _0x5a2ce0 * 0x3,
            _0x4ca60f = _0x5a2ce0 * 0x2 * _0x2f3d60,
            _0x1d2e85 = 0.5,
            _0x66a51d = 0.7;
        _0x4ac9cf['drawImage'](_0x266495, _0x2d88fd + _0x36ffae * -_0x1d2e85, _0x8684 + _0x4ca60f * -_0x66a51d + _0x5a2ce0, _0x36ffae, _0x4ca60f);
    }
    _0x4ac9cf['restore']();
}
break;
case _0x121772: {
    _0x4ac9cf['save']();
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0x1 * _0x1abedb, _0x4ac9cf['rotate'](this['angle']);
    var _0x4df2b1 = this['speciesType'] === 0x1 || this['speciesType'] === 0x2 || this['speciesType'] === 0xc9 ? 0x1 : this['mopeSeasonID'],
        _0x266495 = this['getSkinImageObjForSeason']('skins/ocean/shark/' + this['speciesType'] + '/ability.png', _0x4df2b1);
    if (_0x266495) {
        var _0x5be6ac = Math['min'](0x1, (_0x397f50 - this['spawnTime']) / 0xc8);
        _0x4ac9cf['globalAlpha'] = 0.9;
        var _0x5a2ce0 = -this['rad'] * 1.75,
            _0x2d88fd = 0x0,
            _0x8684 = this['rad'],
            _0x36ffae = _0x5a2ce0 * 0x2,
            _0x4ca60f = _0x5a2ce0 * 0x2 * _0x5be6ac,
            _0x1d2e85 = 0.5,
            _0x66a51d = 0.9;
        _0x4ac9cf['drawImage'](_0x266495, _0x2d88fd + _0x36ffae * -_0x1d2e85, _0x8684 + _0x4ca60f * -_0x66a51d + _0x5a2ce0, _0x36ffae, _0x4ca60f);
    }
    _0x4ac9cf['restore']();
}
break;
case _0x55c48a: {
    _0x4ac9cf['save']();
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0.5 * _0x1abedb;
    var _0x5a2ce0 = this['rad'],
        _0x3e5819 = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x3c01cb = 2.2,
        _0x5f5155 = 6.5 * Math['cos'](0x2 * Math['PI'] / _0x3c01cb * _0x3e5819),
        _0x1f8804 = 6.5 * Math['sin'](0x2 * Math['PI'] / _0x3c01cb * _0x3e5819);
    _0x4ac9cf['globalAlpha'] = 0.3 * _0x1abedb, _0x486a28(0x0, 0x0, _0x5a2ce0, _0x926611), _0x4ac9cf['globalAlpha'] = 0.5 * _0x1abedb, _0x486a28(0x0 + _0x5f5155 / 4.5 + this['rPer'], 0x1 + _0x1f8804 / 1.5, Math['max'](0x0, _0x5a2ce0 - 0xe), '#de9d23'), _0x4ac9cf['restore']();
}
break;
case _0x2cc91d: {
    _0x4ac9cf['save']();
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0.5 * _0x1abedb;
    var _0x5a2ce0 = this['rad'],
        _0x3e5819 = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x3c01cb = 2.2,
        _0x5f5155 = 6.5 * Math['cos'](0x2 * Math['PI'] / _0x3c01cb * _0x3e5819),
        _0x1f8804 = 6.5 * Math['sin'](0x2 * Math['PI'] / _0x3c01cb * _0x3e5819);
    _0x4ac9cf['globalAlpha'] = 0.3 * _0x1abedb, _0x486a28(0x0, 0x0, _0x5a2ce0, '#2CAAC4'), _0x4ac9cf['globalAlpha'] = 0.5 * _0x1abedb, _0x486a28(0x0 + _0x5f5155 / 4.5 + this['rPer'], 0x1 + _0x1f8804 / 1.5, Math['max'](0x0, _0x5a2ce0 - 0xe), '#29A0BA'), _0x486a28(0x0 + _0x5f5155 / 1.5 - this['rPer'] * 0x2, _0x1f8804, Math['max'](0x0, _0x5a2ce0 - 38.5 + _0x1f8804 / 0x5), '#2B8CAA'), _0x486a28(0x0 + _0x5f5155 / 1.5 - this['rPer'] * 0x2, _0x1f8804, Math['max'](0x0, _0x5a2ce0 - 54.5 + _0x1f8804 / 0xb), '#28829E'), _0x4ac9cf['restore']();
}
break;
case _0xf8b4f: {
    if (this['specType'] == 0x0 || this['specType'] == 0x2 || this['specType'] == 0x3) {
        _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.3;
        var _0x1d044d = '',
            _0x266495 = this['getSkinImageObj']('skins/ocean/pelican/' + this['speciesType'] + '/ability_pelican' + _0x1d044d + '.png');
        if (_0x266495) {
            var _0x5a2ce0 = -this['rad'] * 1.5;
            _0x4ac9cf['rotate'](this['angle']);
            var _0x2d88fd = 0x0,
                _0x8684 = this['rad'],
                _0x36ffae = _0x5a2ce0,
                _0x4ca60f = _0x5a2ce0,
                _0x1d2e85 = 0.5,
                _0x66a51d = 0.5;
            _0x4ac9cf['drawImage'](_0x266495, _0x2d88fd + _0x36ffae * -_0x1d2e85, _0x8684 + _0x4ca60f * -_0x66a51d + _0x5a2ce0, _0x36ffae, _0x4ca60f);
        }
        _0x4ac9cf['restore']();
    }
    break;
}
case _0x34439c: {
    if (this['specType'] == 0x0) {
        _0x4ac9cf['save']();
        var _0x1abedb = _0x4ac9cf['globalAlpha'];
        _0x4ac9cf['globalAlpha'] = 0.15 * _0x1abedb, _0x4ac9cf['globalAlpha'] = 0x1 * _0x1abedb;
        var _0x266495 = this['getSkinImageObjForSeason']('skins/land/trex/' + this['speciesType'] + '/ability_trexBite.png', this['mopeSeasonID']);
        if (_0x266495) {
            var _0x2f3d60 = Math['min'](0x1, (_0x397f50 - this['spawnTime']) / 0xc8),
                _0x5a2ce0 = this['rad'] * 0.6;
            _0x4ac9cf['rotate'](this['angle']);
            var _0x2d88fd = 0x0,
                _0x8684 = this['rad'],
                _0x36ffae = _0x5a2ce0 * 2.5,
                _0x4ca60f = _0x5a2ce0 * 2.5 * _0x2f3d60,
                _0x1d2e85 = 0.5,
                _0x66a51d = 0.95;
            _0x4ac9cf['drawImage'](_0x266495, _0x2d88fd + _0x36ffae * -_0x1d2e85, _0x8684 + _0x4ca60f * -_0x66a51d, _0x36ffae, _0x4ca60f), _0x4ac9cf['rotate'](Math['PI']);
            var _0x2d88fd = 0x0,
                _0x8684 = this['rad'] * 0.5,
                _0x36ffae = _0x5a2ce0 * 2.5,
                _0x4ca60f = _0x5a2ce0 * 2.5 * _0x2f3d60,
                _0x1d2e85 = 0.5,
                _0x66a51d = 0.95;
            _0x4ac9cf['drawImage'](_0x266495, _0x2d88fd + _0x36ffae * -_0x1d2e85, _0x8684 + _0x4ca60f * -_0x66a51d, _0x36ffae, _0x4ca60f);
        }
        var _0x266495 = this['getSkinImageObj']('skins/land/trex/' + this['speciesType'] + '/trex-head.png', this['mopeSeasonID']);
        if (_0x266495) {
            var _0x2f3d60 = Math['min'](0x1, (_0x397f50 - this['spawnTime']) / 0xc8),
                _0x5a2ce0 = this['rad'] * 1.5;
            _0x4ac9cf['rotate'](_0x142401(0xb4));
            var _0x2d88fd = 0x0,
                _0x8684 = this['rad'],
                _0x36ffae = _0x5a2ce0 * 0x2,
                _0x4ca60f = _0x5a2ce0 * 0x2 * _0x2f3d60,
                _0x1d2e85 = 0.5,
                _0x66a51d = -1.25;
            _0x4ac9cf['drawImage'](_0x266495, _0x2d88fd + _0x36ffae * -_0x1d2e85, _0x66a51d * _0x5a2ce0, _0x36ffae, _0x4ca60f);
        }
        _0x4ac9cf['restore']();
    }
}
break;
case _0x2a9fbe: {
    _0x4ac9cf['save']();
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0.15 * _0x1abedb, _0x486a28(0x0, 0x0, this['rad'], '#6D7471'), _0x4ac9cf['restore']();
}
break;
case _0xb144db: {
    _0x4ac9cf['save']();
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0.15 * _0x1abedb, _0x486a28(0x0, 0x0, this['rad'], '#6D7471'), _0x4ac9cf['restore']();
}
break;
case _0x281a06: {
    _0x4ac9cf['save']();
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0.15 * _0x1abedb, _0x486a28(0x0, 0x0, this['rad'], '#6D7471'), _0x4ac9cf['restore']();
}
break;
case _0x144011: {
    _0x4ac9cf['save']();
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0.15 * _0x1abedb, _0x486a28(0x0, 0x0, this['rad'], '#f2f2f2'), _0x4ac9cf['restore']();
}
break;
case _0x200063: {
    _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['angle'] + _0x142401(0xb4));
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0.8 * _0x1abedb;
    var _0x266495 = this['getSkinImageObj']('img/wave.png');
    if (_0x266495) {
        var _0x5a2ce0 = this['rad'];
        _0x4ac9cf['drawImage'](_0x266495, -_0x5a2ce0, -_0x5a2ce0, 0x2 * _0x5a2ce0, 0x2 * _0x5a2ce0);
    }
    _0x4ac9cf['restore']();
}
break;
case _0x3fc1a3: {
    if (this['animalType'] !== undefined && this['animalType'] == _0x212372 && this['speciesType'] == 0xcc) {
        _0x4ac9cf['save']();
        var _0x1abedb = _0x4ac9cf['globalAlpha'];
        _0x4ac9cf['globalAlpha'] = 0.9 * _0x1abedb;
        var _0x4df2b1 = 0x1,
            _0x266495 = this['getSkinImageObjForSeason']('skins/land/hippo/204/roar.png', _0x4df2b1);
        if (_0x266495) {
            var _0x5a2ce0 = this['rad'];
            _0x4ac9cf['drawImage'](_0x266495, -_0x5a2ce0, -_0x5a2ce0, 0x2 * _0x5a2ce0, 0x2 * _0x5a2ce0);
        }
        _0x4ac9cf['restore']();
    } else {
        _0x4ac9cf['save']();
        var _0x1abedb = _0x4ac9cf['globalAlpha'];
        _0x4ac9cf['globalAlpha'] = 0.2 * _0x1abedb, _0x486a28(0x0, 0x0, this['rad'], '#746B3E'), _0x4ac9cf['restore']();
    }
}
break;
case _0x5af977: {
    _0x4ac9cf['save']();
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0.5 * _0x1abedb, _0x486a28(0x0, 0x0, this['rad'], '#62C5FF'), _0x4ac9cf['globalAlpha'] = 0x1 * _0x1abedb, _0x4ac9cf['strokeStyle'] = '#62C5FF', _0x4ac9cf['beginPath']();
    var _0x2ffb5b = this['rad'] * -0.7,
        _0x2ece7c = -0x5,
        _0x688a7d = 0xa;
    _0x4ac9cf['moveTo'](_0x2ffb5b, _0x2ece7c), _0x4ac9cf['lineTo'](_0x2ffb5b - _0x688a7d * 0.4, _0x2ece7c + _0x688a7d), _0x4ac9cf['lineTo'](_0x2ffb5b + _0x688a7d * 0.4, _0x2ece7c + _0x688a7d * 0.7), _0x4ac9cf['lineTo'](_0x2ffb5b + _0x688a7d * 0.4 * 0.5, _0x2ece7c + _0x688a7d * 0x2), _0x4ac9cf['lineWidth'] = 0x3, _0x4ac9cf['stroke'](), _0x4ac9cf['restore']();
}
break;
case _0xf70af3: {
    if (_0x50a9ba || _0x25ea67 != 0x3) {
        var _0x4909a9 = this['getSkinImageObj']('img/whirlpool2.png');
        if (_0x4909a9) {
            var _0x5a2ce0 = this['rad'];
            _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.5, _0x4ac9cf['drawImage'](_0x4909a9, -_0x5a2ce0, -_0x5a2ce0, 0x2 * _0x5a2ce0, 0x2 * _0x5a2ce0), _0x4ac9cf['restore']();
        } else _0x486a28(0x0, 0x0, this['rad'], '#2D93B0');
    } else {
        _0x4ac9cf['save']();
        var _0x5a2ce0 = Math['max'](0x0, this['rad'] - 0x1e),
            _0x1abedb = _0x4ac9cf['globalAlpha'],
            _0x3e5819 = (_0x397f50 - this['spawnTime']) / 0x3e8,
            _0x3c01cb = 2.2,
            _0x5f5155 = 10.5 * Math['cos'](0x2 * Math['PI'] / _0x3c01cb * _0x3e5819),
            _0x1f8804 = 6.5 * Math['sin'](0x2 * Math['PI'] / _0x3c01cb * _0x3e5819);
        _0x4ac9cf['globalAlpha'] = 0.05 * _0x1abedb, _0x486a28(0x0 + _0x5f5155 + 0x1e / 0x2 - this['rPer'], 0x0 + _0x1f8804 + 0x28 / 0x2 - this['rPer'], Math['max'](0x0, _0x5a2ce0 - 0x6), 'white'), _0x4ac9cf['globalAlpha'] = 0.1 * _0x1abedb, _0x486a28(0x0 + _0x5f5155 + 0x1e / 0x2 - this['rPer'], 0x0 + _0x1f8804 / 0x2 - this['rPer'], Math['max'](0x0, _0x5a2ce0 - 0x6), '#2D93B0'), _0x4ac9cf['globalAlpha'] = 0.15 * _0x1abedb, _0x486a28(0x0 + _0x5f5155 / 1.5 - this['rPer'] * 0x2, _0x1f8804, Math['max'](0x0, _0x5a2ce0 - 54.5 + _0x1f8804 / 0xb), '#28829E'), _0x4ac9cf['restore'](), _0x4ac9cf['save']();
        var _0x1abedb = _0x4ac9cf['globalAlpha'],
            _0x5a2ce0 = Math['max'](0x0, this['rad'] - 0x1e),
            _0x3e5819 = (_0x397f50 - this['spawnTime']) / 0x3e8,
            _0x3c01cb = 3.2,
            _0x5f5155 = 0x32 * Math['cos'](0x2 * Math['PI'] / _0x3c01cb * _0x3e5819),
            _0x1f8804 = 0x32 * Math['sin'](0x2 * Math['PI'] / _0x3c01cb * _0x3e5819);
        _0x4ac9cf['globalAlpha'] = 0.05 * _0x1abedb, _0x486a28(0x0, 0x0, _0x5a2ce0, '#2CAAC4'), _0x4ac9cf['globalAlpha'] = 0.15 * _0x1abedb, _0x486a28(0x0 + _0x5f5155 / 0x2 - this['rPer'], 0x0 + _0x1f8804 / 0x2 - this['rPer'], Math['max'](0x0, _0x5a2ce0 * 0.95), '#2D93B0'), _0x4ac9cf['globalAlpha'] = 0.25 * _0x1abedb, _0x486a28(0x0 + _0x5f5155 / 4.5 + this['rPer'], 0x1 + _0x1f8804 / 1.5, Math['max'](0x0, _0x5a2ce0 * 0.85), '#28829E'), _0x4ac9cf['restore']();
        var _0x4909a9 = this['getSkinImageObj']('img/whirlpool2.png');
        if (_0x4909a9) {
            var _0x5a2ce0 = this['rad'] - 0x1e,
                _0x522e87 = 0x5 / 0x3c,
                _0x2cd817 = 0x3e8 / _0x522e87,
                _0x2f3d60 = (_0x397f50 - this['spawnTime']) % _0x2cd817 / _0x2cd817,
                _0x38492b = _0x2f3d60 * 0x2 * Math['PI'];
            _0x522e87 = 0x8 / 0x3c, _0x2cd817 = 0x3e8 / _0x522e87, _0x2f3d60 = (_0x397f50 - this['spawnTime']) % _0x2cd817 / _0x2cd817, rotation2 = _0x2f3d60 * 0x2 * Math['PI'], _0x4ac9cf['save'](), _0x4ac9cf['rotate'](_0x38492b);
            var _0x1abedb = _0x4ac9cf['globalAlpha'];
            _0x4ac9cf['globalAlpha'] = 0.1;
            var _0x3e5819 = (_0x397f50 - this['spawnTime']) / 0x3e8,
                _0x3c01cb = 2.2,
                _0x5f5155 = 6.5 * Math['cos'](0x2 * Math['PI'] / _0x3c01cb * _0x3e5819),
                _0x1f8804 = 6.5 * Math['sin'](0x2 * Math['PI'] / _0x3c01cb * _0x3e5819);
            _0x4ac9cf['globalAlpha'] = 0.2, _0x4ac9cf['drawImage'](_0x4909a9, -_0x5a2ce0 - _0x5f5155 + 0x1e / 2.2, -_0x5a2ce0, 0x2 * _0x5a2ce0, 0x2 * _0x5a2ce0), _0x4ac9cf['restore'](), _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.1, _0x4ac9cf['rotate'](rotation2 * 0.8), _0x4ac9cf['drawImage'](_0x4909a9, -_0x5a2ce0 - _0x5f5155 / 2.2, -_0x5a2ce0, 0x2 * _0x5a2ce0, 0x2 * _0x5a2ce0), _0x4ac9cf['restore'](), _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.2, _0x4ac9cf['rotate'](rotation2), _0x4ac9cf['drawImage'](_0x4909a9, -_0x5a2ce0 - _0x5f5155 - 0x14 / 2.2, -_0x5a2ce0, 0x2 * _0x5a2ce0, 0x2 * _0x5a2ce0), _0x4ac9cf['restore'](), _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.2, _0x4ac9cf['rotate'](rotation2), _0x4ac9cf['drawImage'](_0x4909a9, -_0x5a2ce0 - _0x5f5155 / 2.2, -_0x5a2ce0, 0x2 * _0x5a2ce0, 0x2 * _0x5a2ce0), _0x4ac9cf['restore'](), _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.2, _0x4ac9cf['rotate'](_0x38492b), _0x4ac9cf['drawImage'](_0x4909a9, -_0x5a2ce0 - _0x5f5155 / 2.2, -_0x5a2ce0, 0x2 * _0x5a2ce0, 0x2 * _0x5a2ce0), _0x4ac9cf['restore'](), _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.2, _0x4ac9cf['rotate'](_0x38492b), _0x4ac9cf['drawImage'](_0x4909a9, -_0x5a2ce0 - _0x5f5155 / 2.2, -_0x5a2ce0, 0x2 * _0x5a2ce0, 0x2 * _0x5a2ce0), _0x4ac9cf['restore']();
        }
    }
}
break;
case _0x3df3fa: {
    _0x4ac9cf['save']();
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0.5 * _0x1abedb;
    var _0x5a2ce0 = Math['max'](0x0, this['rad'] - 0x1e),
        _0x3e5819 = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x3c01cb = 2.2,
        _0x5f5155 = 6.5 * Math['cos'](0x2 * Math['PI'] / _0x3c01cb * _0x3e5819),
        _0x1f8804 = 6.5 * Math['sin'](0x2 * Math['PI'] / _0x3c01cb * _0x3e5819);
    _0x4ac9cf['globalAlpha'] = 0.4 * _0x1abedb, _0x486a28(0x0, 0x0, _0x5a2ce0, '#2CAAC4'), _0x4ac9cf['globalAlpha'] = 0.7 * _0x1abedb, !(_0x25ea67 == 0x2) && _0x486a28(0x0 + _0x5f5155 / 0x2 - this['rPer'], 0x0 + _0x1f8804 / 0x2 - this['rPer'], Math['max'](0x0, _0x5a2ce0 - 0x6), '#2D93B0'), _0x486a28(0x0 + _0x5f5155 / 4.5 + this['rPer'], 0x1 + _0x1f8804 / 1.5, Math['max'](0x0, _0x5a2ce0 - 0xe), '#29A0BA'), _0x486a28(0x0 + _0x5f5155 / 1.5 - this['rPer'] * 0x2, _0x1f8804, Math['max'](0x0, _0x5a2ce0 - 38.5 + _0x1f8804 / 0x5), '#2B8CAA'), _0x486a28(0x0 + _0x5f5155 / 1.5 - this['rPer'] * 0x2, _0x1f8804, Math['max'](0x0, _0x5a2ce0 - 54.5 + _0x1f8804 / 0xb), '#28829E'), _0x4ac9cf['restore']();
}
break;
case _0x3f6300: {
    _0x4ac9cf['save']();
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    if (!(_0x25ea67 == 0x2)) _0x4ac9cf['rotate'](this['rPer'] * 0x2 * Math['PI']);
    var _0x3d064b = 0x0,
        _0x3e5819 = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x3c01cb = 0x6,
        _0x2bdc3d = 1.5;
    _0x3d064b = _0x2bdc3d * Math['sin'](0x2 * Math['PI'] / _0x3c01cb * _0x3e5819), _0x4ac9cf['globalAlpha'] = 0.7 * _0x1abedb;
    var _0x4a0c90 = 0x4;
    _0x4ac9cf['fillStyle'] = 'black', _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), !(_0x25ea67 == 0x2) && (_0x4ac9cf['fillStyle'] = 'black', _0x4ac9cf['globalAlpha'] = 0.5 * _0x1abedb, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x4a0c90 + _0x3d064b), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x3d064b), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x3d064b), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x3d064b), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x3d064b), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath']()), _0x4ac9cf['restore']();
}
break;
case _0x4d676c: {
    _0x4ac9cf['save']();
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0.25 * _0x1abedb, _0x486a28(0x0, 0x0, this['rad'], '#9F8641'), _0x4ac9cf['restore']();
}
break;
case _0x1e224f: {
    _0x4ac9cf['save']();
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0.25 * _0x1abedb, _0x486a28(0x0, 0x0, this['rad'], '#785228'), _0x4ac9cf['restore']();
}
break;
default: {
    _0x4ac9cf['save']();
    var _0x1abedb = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0.15 * _0x1abedb, _0x486a28(0x0, 0x0, this['rad'], 'black'), _0x4ac9cf['restore']();
}
break;
}
}, _0x54c5f1['prototype']['setObjTypes'] = function (_0x53ac2c, _0x42a1b9) {
this['oType'] = _0x53ac2c, this['abilityType'] = _0x42a1b9;
}, _0x54c5f1['prototype']['skinThemeID'] = 0x0, _0x54c5f1['prototype']['mopeSeasonID'] = 0x0, _0x54c5f1['prototype']['readCustomData_onNewlyVisible'] = function (_0x470a49) {
this['specType'] = _0x470a49['readUInt8'](), this['specType2'] = _0x470a49['readUInt8'](), this['skinThemeID'] = _0x470a49['readUInt8'](), this['mopeSeasonID'] = _0x470a49['readUInt8'](), (this['abilityType'] == _0x5c8a25 || this['abilityType'] == _0xb144db || this['abilityType'] == _0x200063 || this['abilityType'] == _0x3fc1a3 || this['abilityType'] == _0x1e224f) && (this['rad'] = this['oRad'] = 0x0);
}, _0x54c5f1['prototype']['updateTimer'] = function () {
this['timer'] = Math['round'](this['timer']);
var _0x3005e2 = this['timer'];
this['setTimer'](_0x3005e2);
}, _0x54c5f1['prototype']['timerTxt'] = null, _0x54c5f1['prototype']['setTimer'] = function (_0x96cef4) {
var _0x57b2b7 = '' + _0x96cef4;
null == this['timerTxt'] ? (this['timerTxt'] = new _0x128c61(0x14, '#FFFFFF'), this['timerTxt']['strokeW'] = 0x2, this['timerTxt']['multiLine'] = !![], this['timerTxt']['renderScale'] = 0x5, this['timerTxt']['setText'](_0x57b2b7)) : (this['timerTxt']['setFontSize'](0x14), this['timerTxt']['setText'](_0x57b2b7));
};

function _0x54c5f1() {
_0x54c5f1['superClass']['call'](this, _0x1b8199), _0x54c5f1['prototype']['easeAngleChanges'] = ![], this['abilityType'] == _0x159b11 && (this['doesDrawEffectScale'] = this['drawEffectScale_Slow'] = !![]);
}
window['AbilityObj'] = _0x54c5f1, _0x3360d0['setCustomClassForGameObjType'](_0x54c5f1, _0x1b8199);
var _0x13295b = _0x420839,
_0xec194 = _0x54c5f1;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194, _0x420839['prototype']['customDraw'] = function (_0x413b6c) {
_0x4ac9cf['save']();
var _0x5b9cb9 = _0x4ac9cf['globalAlpha'];
_0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['globalAlpha'] = 0.05 * _0x5b9cb9, _0x486a28(0x0, 0x0, this['rad'], '#E4E7C8'), _0x4ac9cf['globalAlpha'] = 0x1 * _0x5b9cb9;
var _0x84bfa9 = 'skins/land/elephant/' + this['speciesType'],
    _0x392457 = this['getSkinImageObj'](_0x84bfa9 + '/ability_elephantTrunkSmack.png');
if (_0x392457) {
    var _0x13794f = _0x1ce2eb((_0x397f50 - this['spawnTime']) / 0x12c, 0x0, 0x1),
        _0x312b2e = -(-0.5 + _0x13794f) * _0x40941f,
        _0x4f03c4 = this['rad'] * 0.6;
    _0x4ac9cf['save'](), _0x4ac9cf['rotate'](_0x312b2e);
    var _0x57eb83 = 0x0,
        _0x3482dd = this['rad'],
        _0x5a9b41 = _0x4f03c4 * 0x2 * 0.7,
        _0x1b835c = _0x4f03c4 * 0x2,
        _0x4e5588 = 0.75,
        _0x5b1702 = 0.95;
    _0x4ac9cf['drawImage'](_0x392457, _0x57eb83 + _0x5a9b41 * -_0x4e5588, _0x3482dd + _0x1b835c * -_0x5b1702, _0x5a9b41, _0x1b835c), _0x4ac9cf['restore']();
}
_0x4ac9cf['restore']();
}, _0x420839['prototype']['getSkinImageObj'] = function (_0x25c715) {
var _0x3d96e9 = this['speciesType'] === 0x1 || this['speciesType'] === 0x2 || this['speciesType'] === 0xc9 ? 0x1 : 0x2,
    _0x114c57 = './assets/s/' + _0x3d96e9 + '/' + _0x25c715;
return this['skinThemeID'] > 0x0 && (_0x114c57 = './assets/t/' + this['skinThemeID'] + '/' + _0x25c715), _0x297bc3(_0x114c57, function (_0x20062d) {
    console['log'](_0x20062d['src']);
});
}, _0x420839['prototype']['readCustomData_onNewlyVisible'] = function (_0x2c6ad5) {
_0x420839['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x2c6ad5);
}, _0x420839['prototype']['readCustomData_onUpdate'] = function (_0x11dc63) {
_0x420839['superClass']['prototype']['readCustomData_onUpdate']['call'](this, _0x11dc63);
};

function _0x420839() {
_0x420839['superClass']['call'](this);
}
window['AbilityObjElephant'] = _0x420839, _0x3360d0['setCustomClassForGameObjType'](_0x420839, _0x1b8199, _0x5a9011);
var _0x13295b = _0x5e2ed2,
_0xec194 = _0x54c5f1;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194, _0x5e2ed2['prototype']['customDraw'] = function (_0x18913c) {
var _0x21cb48 = _0x4ac9cf['globalAlpha'];
_0x4ac9cf['save']();
var _0xf4089 = (_0x397f50 - this['spawnTime']) / 0x3e8,
    _0x295331 = 1.5,
    _0xf743eb = 0x1,
    _0x5290bc = _0xf743eb * Math['sin'](0x2 * Math['PI'] / _0x295331 * _0xf4089),
    _0x405ba0 = _0x4ac9cf['globalAlpha'];
_0x4ac9cf['globalAlpha'] *= 0.6 * _0x5290bc, _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['globalAlpha'] = 0.15 * _0x21cb48;
if (this['specType2'] == 0x0 && this['aniSpecies']) _0x486a28(0x0, 0x0, this['rad'], '#96661C');
else _0x486a28(0x0, 0x0, this['rad'], '#e0dfde');
_0x4ac9cf['restore'](), _0x4ac9cf['save']();
var _0x35b7f2 = 'skins/';
this['animalType'] === 0x24 ? _0x35b7f2 += 'arctic/bear/' + this['aniSpecies'] + '/slash.png' : _0x35b7f2 += 'land/bear/' + this['aniSpecies'] + '/slash.png';
var _0x2e04df = this['getSkinImageObj'](_0x35b7f2);
if (_0x2e04df) {
    var _0x2a8356 = Math['min'](0x1, (_0x397f50 - this['spawnTime']) / 0xc8),
        _0x55728f = _0x1ce2eb((_0x397f50 - this['spawnTime']) / 0x12c, 0x0, 0x1),
        _0x42e287 = -(-0.5 + _0x55728f) * _0x40941f,
        _0x16f8ef = this['angle'];
    _0x4ac9cf['rotate'](this['angle'] + _0x42e287 * (this['specType'] == 0x0 ? 0x1 : -0x1));
    var _0x3c9d76 = -this['rad'] * 0x1,
        _0x35c3cb = 0x0,
        _0x48e216 = this['rad'],
        _0x4fd5cd = _0x3c9d76 * 0x2,
        _0x244e99 = _0x3c9d76 * 0x2 * _0x2a8356,
        _0x107bba = 0.5,
        _0x424688 = 0.8;
    _0x4ac9cf['drawImage'](_0x2e04df, _0x35c3cb + _0x4fd5cd * -_0x107bba, _0x48e216 + _0x244e99 * -_0x424688 + _0x3c9d76, _0x4fd5cd, _0x244e99);
}
_0x4ac9cf['restore']();
}, _0x5e2ed2['prototype']['getSkinImageObj'] = function (_0x169eef) {
var _0x453904 = this['mopeSeasonID'];
return this['animalType'] === 0x24 && (_0x453904 = this['speciesType'] === 0xc9 ? 0x1 : this['mopeSeasonID']), this['getSkinImageObjForSeason'](_0x169eef, _0x453904);
}, _0x5e2ed2['prototype']['readCustomData_onNewlyVisible'] = function (_0x3cdda8) {
_0x5e2ed2['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x3cdda8), this['aniSpecies'] = _0x3cdda8['readUInt8']();
};

function _0x5e2ed2() {
_0x5e2ed2['superClass']['call'](this);
}
window['BearSlash'] = _0x5e2ed2, _0x3360d0['setCustomClassForGameObjType'](_0x5e2ed2, _0x1b8199, _0x18e1c9);
var _0x13295b = _0x1dd8d7,
_0xec194 = _0x5adfe2;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194, _0x1dd8d7['prototype']['animalType'] = _0x49d118, _0x1dd8d7['prototype']['season'] = 0x1, _0x1dd8d7['prototype']['animalSpecies'] = 0x0, _0x1dd8d7['prototype']['animalSubSpecies'] = 0x0, _0x1dd8d7['prototype']['nickName'] = '', _0x1dd8d7['prototype']['skinImgName'] = null, _0x1dd8d7['prototype']['skinNotLoadedColor'] = '#75ce67', _0x1dd8d7['prototype']['flag_fullAlpha'] = ![], _0x1dd8d7['prototype']['flag_lowWat'] = ![], _0x1dd8d7['prototype']['flag_tailBitten'] = ![], _0x1dd8d7['prototype']['flag_underWater'] = ![], _0x1dd8d7['prototype']['flag_eff_stunned'] = ![], _0x1dd8d7['prototype']['flag_eff_frozen'] = ![], _0x1dd8d7['prototype']['flag_eff_virusInfection'] = ![], _0x1dd8d7['prototype']['flag_usingAbility'] = ![], _0x1dd8d7['prototype']['flag_eff_invincible'] = ![], _0x1dd8d7['prototype']['flag_eff_healing'] = _0x1dd8d7['prototype']['flag_eff_poison'] = _0x1dd8d7['prototype']['flag_eff_bleeding'] = ![], _0x1dd8d7['prototype']['flag_eff_hot'] = ![], _0x1dd8d7['prototype']['flag_eff_aloeveraHealing'] = ![], _0x1dd8d7['prototype']['flag_iceSliding'] = ![], _0x1dd8d7['prototype']['underwaterA'] = 0x0, 0x4, _0x1dd8d7['prototype']['nickNameA'] = 0x0, _0x1dd8d7['prototype']['bleedingA'] = 0x0, _0x1dd8d7['prototype']['stunA'] = 0x0, _0x1dd8d7['prototype']['frozenEffA'] = _0x1dd8d7['prototype']['onFireEffA'] = _0x1dd8d7['prototype']['effA_healing'] = _0x1dd8d7['prototype']['effA_hot'] = 0x0, _0x1dd8d7['prototype']['effA_aloeveraHealing'] = _0x1dd8d7['prototype']['effA_poison'] = _0x1dd8d7['prototype']['effA_bleeding'] = _0x1dd8d7['prototype']['effA_stunk'] = 0x0, _0x1dd8d7['prototype']['effA_constricted'] = _0x1dd8d7['prototype']['effA_slimed'] = _0x1dd8d7['prototype']['effA_webStuck'] = 0x0, _0x1dd8d7['prototype']['effA_speared'] = 0x0, _0x1dd8d7['prototype']['effA_dirtStuck'] = 0x0, _0x1dd8d7['prototype']['nameA'] = 0x0, _0x1dd8d7['prototype']['loadedSkinImg'] = null, _0x1dd8d7['prototype']['outlineW'] = null, _0x1dd8d7['prototype']['teamID'] = 0x0, _0x1dd8d7['prototype']['wins1v1'] = 0x0, _0x1dd8d7['prototype']['birdNoAnimationFlyWingAngle'] = -0.2, _0x1dd8d7['prototype']['getNameSize'] = function () {
return 0xa;
}, _0x1dd8d7['prototype']['setNick'] = function (_0xc78c39) {
this['nickName'] = _0xc78c39, null == this['nickTXT'] ? (this['nickTXT'] = new _0x128c61(this['getNameSize'](), 'white'), this['nickTXT']['strokeW'] = 1.5, this['nickTXT']['multiLine'] = !![], this['nickTXT']['renderScale'] = 0x5, this['nickTXT']['setText'](this['nickName'])) : (this['nickTXT']['setFontSize'](this['getNameSize']()), this['nickTXT']['setText'](this['nickName']));
}, _0x1dd8d7['prototype']['getOutlineColor'] = function () {
var _0xd3d226 = this['curBiome'];
if (this['id'] > 0x0) {
    var _0x107485 = _0xddec75[_0x46868a];
    if (this['alwaysPlainOutline']) return _0x5db51d;
    var _0x3b81d5 = _0x5332af != _0x59b793 || _0x107485 && _0x107485['teamID'] != this['teamID'] && this['teamID'] != 0x0;
    if (_0x3b81d5) {
        if (this['isEdibleOutlined']()) return _0x4fa567;
        if (_0xedfe96[this['animalType'] - 0x1] > 0x0 && this['id'] != _0x46868a) return _0x1e8292;
    }
    if (this['flag_inWater']) _0xd3d226 = _0x229c1c;
    if (_0x4a544a != null && this['id'] == _0x4a544a['id'] && !_0x50a9ba) return 'cyan';
}
return _0x3d30ff(_0xd3d226);
}, _0x1dd8d7['prototype']['drawEyeAtPos'] = function (_0x2a80af, _0x898155) {
var _0xf97dab = 4.5;
_0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](_0x2a80af, _0x898155, _0xf97dab, 0x0, Math['PI'] * 0x2), _0x4ac9cf['fillStyle'] = 'black', _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['fillStyle'] = 'white';
var _0x144b07 = _0x2a80af - 0x2,
    _0x35b17f = _0x898155 - 0x1;
_0x4ac9cf['arc'](_0x144b07, _0x35b17f, _0xf97dab * 0.22, 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill']();
}, _0x1dd8d7['prototype']['animalInfo'] = function () {
var _0x47d9b1 = {};
switch (this['animalType']) {
case _0x3aa9b0:
    _0x47d9b1['aniName'] = 'Snail', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'You\'re a super slow snail!', _0x47d9b1['aniCol'] = '#fcc02b', _0x47d9b1['skinName'] = 'snail';
    break;
case _0x49d118:
    _0x47d9b1['aniName'] = 'Mouse', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'You\'re a tiny mouse, eat food to grow!', _0x47d9b1['aniCol'] = '#9BA9B9', _0x47d9b1['skinName'] = 'mouse';
    break;
case _0x30b869:
    _0x47d9b1['aniName'] = 'Rabbit', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to RABBIT! \x0aPress W to burrow a hole to hide in!', _0x47d9b1['aniCol'] = '#AA937E', _0x47d9b1['skinName'] = 'rabbit';
    break;
case _0x51c352:
    _0x47d9b1['aniName'] = 'Pig', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to PIG!\x0a Pigs move FAST through MUD! (Can use \'stink\' on mud/ hiding holes!)', _0x47d9b1['aniCol'] = '#DD6BD4', _0x47d9b1['skinName'] = 'pig';
    break;
case _0x37ed61:
    _0x47d9b1['aniName'] = 'Fox', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to FOX! ,\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!', _0x47d9b1['aniCol'] = '#FF9D43', _0x47d9b1['skinName'] = 'fox';
    break;
case _0x43cc06:
    _0x47d9b1['aniName'] = 'Deer', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to DEER! \x0aPress W to dig up food! \x0aDig in mud for better food!\x0a Hint:Check water areas for new food sources!', _0x47d9b1['aniCol'] = '#C4773E', _0x47d9b1['skinName'] = 'deer';
    break;
case _0x176a10:
    _0x47d9b1['aniName'] = 'Mole', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to MOLE!\x0a Hold W to dig underground!\x0aGo under anything, do surprise attacks!', _0x47d9b1['aniCol'] = '#4C4A45', _0x47d9b1['skinName'] = 'mole';
    break;
case _0x4699c5:
    _0x47d9b1['aniName'] = 'Zebra', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to ZEBRA! \x0aPress W to kick side ways!', _0x47d9b1['aniCol'] = '#FFFFFF', _0x47d9b1['skinName'] = 'zebra';
    break;
case _0x1185fd:
    _0x47d9b1['aniName'] = 'Lion', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to LION!\x0a Press W to release a mighty ROAR (Rawr!)!', _0x47d9b1['aniCol'] = '#f8c923', _0x47d9b1['skinName'] = 'lion';
    break;
case _0x15db61:
    _0x47d9b1['aniName'] = 'Bear', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to BEAR!\x0a Bears climb through green hills! (Press W to use your claw!)', _0x47d9b1['aniCol'] = '#99591C', _0x47d9b1['skinName'] = 'bear';
    break;
case _0x1f6edc:
    _0x47d9b1['aniName'] = 'Croc', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to CROCODILE!\x0a Press W to bite and drag around animals! \x0a+ (Now hide in water spots)+ Swim well in Mud, Lakes & Oceans!', _0x47d9b1['aniCol'] = '#30F51C', _0x47d9b1['skinName'] = 'croc';
    break;
case _0x212372:
    _0x47d9b1['aniName'] = 'Hippo', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to HIPPO!\x0aHippos are great swimmers, dominate the Lakes/Oceans/Mud!', _0x47d9b1['aniCol'] = '#945A99', _0x47d9b1['skinName'] = 'hippo';
    break;
case _0x2fc4c1:
    _0x47d9b1['aniName'] = 'Rhino', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to RHINO!\x0a Press W to CHARGE with your mighty horn!', _0x47d9b1['aniCol'] = '#94a3a9', _0x47d9b1['skinName'] = 'rhino';
    break;
case _0x5626d9:
    _0x47d9b1['aniName'] = 'Shrimp', _0x47d9b1['aniDesc'] = '', _0x47d9b1['aniCol'] = '#f88e37', _0x47d9b1['skinName'] = 'shrimp', _0x47d9b1['upgradeText'] = 'You\'re a tiny shrimp, eat food to grow bigger!';
    break;
case _0x2a05b1:
    _0x47d9b1['aniName'] = 'Trout', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to TROUT!\x0aHint: Hold Left-click to RUN! (Uses extra water)', _0x47d9b1['aniCol'] = '#ac8686', _0x47d9b1['skinName'] = 'trout';
    break;
case _0x415723:
    _0x47d9b1['aniName'] = 'Crab', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to CRAB!\x0a Crabs can survive on dry land!\x0a (On land, Press W to go into your shell!)', _0x47d9b1['aniCol'] = '#bf2408', _0x47d9b1['skinName'] = 'crab';
    break;
case _0x4e129f:
    _0x47d9b1['aniName'] = 'Squid', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to SQUID!\x0a Squids can use INK when injured (press W!) \x0a+ you can hide in plankton bushes!', _0x47d9b1['aniCol'] = '#40dda4', _0x47d9b1['skinName'] = 'squid';
    break;
case _0xf16f79:
    _0x47d9b1['aniName'] = 'Shark', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to SHARK!\x0a A vicious predator of the oceans!', _0x47d9b1['aniCol'] = '#999fc6', _0x47d9b1['skinName'] = 'shark';
    break;
case _0x4ac227:
    _0x47d9b1['aniName'] = 'Sea-horse', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to SEA HORSE!\x0a An agile hunter!', _0x47d9b1['aniCol'] = '#73BE2F', _0x47d9b1['skinName'] = 'seahorse';
    break;
case _0x402b8c:
    _0x47d9b1['aniName'] = 'Jellyfish', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to JELLYFISH!\x0a A slowly-turning animal that can grow quite large!', _0x47d9b1['aniCol'] = '#FDB9BA', _0x47d9b1['skinName'] = 'jellyfish';
    break;
case _0x41ea25:
    _0x47d9b1['aniName'] = 'Turtle', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to TURTLE!\x0a Lives well on land & water! (On land, Press W to go into your shell!)', _0x47d9b1['aniCol'] = '#502E1A', _0x47d9b1['skinName'] = 'turtle';
    break;
case _0xd32f27:
    _0x47d9b1['aniName'] = 'Stringray', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to STINGRAY!\x0a Use electic shock (Release W key!) to shock animals! \x0a(Takes time to recharge)', _0x47d9b1['aniCol'] = '#164336', _0x47d9b1['skinName'] = 'stingray';
    break;
case _0x3a6f75:
    _0x47d9b1['aniName'] = 'The Kraken', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to THE KRAKEN!\x0a Terrorize the oceans, and be feared by all!\x0a (Release W to use whirlpool ability!)', _0x47d9b1['aniCol'] = '#64a034', _0x47d9b1['skinName'] = 'kraken';
    break;
case _0x2ee5ae:
    _0x47d9b1['aniName'] = 'Pufferfish', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to PUFFERFISH!\x0a (Hold W to inflate- become spiky, and dangerous to touch!)', _0x47d9b1['aniCol'] = '#6C5C2C', _0x47d9b1['skinName'] = 'pufferfish';
    break;
case _0x1be7e6:
    _0x47d9b1['aniName'] = 'Killer Whale', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to Killer Whale! \x0aWhales blow out water when diving! (And sometimes other loot!)', _0x47d9b1['aniCol'] = '#141414', _0x47d9b1['skinName'] = 'killerwhale';
    break;
case _0x31cc16:
    _0x47d9b1['aniName'] = 'Swordfish', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to ' + _0x47d9b1['aniName'] + '!\x0a (Press W to rush with your sharp nose!)', _0x47d9b1['aniCol'] = '#689CD7', _0x47d9b1['skinName'] = 'swordfish';
    break;
case _0x103e98:
    _0x47d9b1['aniName'] = 'Gorilla', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to ' + _0x47d9b1['aniName'] + '!\x0a Gorillas are very fast on hills/trees!\x0a Press W to throw bananas! (from trees)', _0x47d9b1['aniCol'] = '#323232', _0x47d9b1['skinName'] = 'gorilla';
    break;
case _0x108db6:
    _0x47d9b1['aniName'] = 'Octopus', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to Octopus!\x0aHold W to use your \'Disguise\' ability!\x0a(Hint: wait for prey to bite you- they get stunned!)', _0x47d9b1['aniCol'] = '#ff8340', _0x47d9b1['skinName'] = 'octopus';
    break;
case _0x33edcb:
    _0x47d9b1['aniName'] = 'Dragon', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to ' + _0x47d9b1['aniName'] + '!\x0a (You\'re amazing!) \x0aFly over everything, Hold W to shoot fire!', _0x47d9b1['aniCol'] = '#22FF8A', _0x47d9b1['skinName'] = 'dragon';
    break;
case _0x5186e1:
    _0x47d9b1['aniName'] = 'Black Dragon', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to ' + _0x47d9b1['aniName'] + '!\x0a Black dragons drink lava instead of water! Black dragons only heal on healing stones/lava!', _0x47d9b1['aniCol'] = 'black', _0x47d9b1['skinName'] = 'blackdragon';
    break;
case _0x484a15:
    _0x47d9b1['aniName'] = 'Giant Spider', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to ' + _0x47d9b1['aniName'] + '!\x0a Place web around the game to catch prey!', _0x47d9b1['aniCol'] = 'black', _0x47d9b1['skinName'] = 'giantSpider';
    break;
case _0x204cad:
    _0x47d9b1['aniName'] = 'Cobra', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to ' + _0x47d9b1['aniName'] + '!\x0a Hold W to Spit venom, and poison animals with your bite!', _0x47d9b1['aniCol'] = 'black', _0x47d9b1['skinName'] = 'cobra';
    break;
case _0x2cb4e3:
    _0x47d9b1['aniName'] = 'Boa Constrictor', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to ' + _0x47d9b1['aniName'] + '!\x0a Coil and suffocate other animals!', _0x47d9b1['aniCol'] = 'black', _0x47d9b1['skinName'] = 'boaConstrictor';
    break;
case _0x2e747e:
    _0x47d9b1['aniName'] = 'T-REX', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to ' + _0x47d9b1['aniName'] + ' The Dinosaur!\x0a This ancient dinosaur has powerful jaws that can drag prey around!!', _0x47d9b1['aniCol'] = '#862A2A', _0x47d9b1['skinName'] = 'trex';
    break;
case _0x1c4f76:
    _0x47d9b1['aniName'] = 'Giraffe', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to Giraffe!\x0aGiraffe have huge legs and stomp anyone in their way!', _0x47d9b1['aniCol'] = '#E9BD23', _0x47d9b1['skinName'] = 'giraffe';
    break;
case _0x37eeab:
    _0x47d9b1['aniName'] = 'Eagle', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to Eagle!\x0aEagles can fly up other animals in the air! !\x0a', _0x47d9b1['aniCol'] = '#5b400d', _0x47d9b1['skinName'] = 'eagle';
    break;
case _0x5c63c1:
    _0x47d9b1['aniName'] = 'Arctic Fox', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to ' + _0x47d9b1['aniName'] + '!\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!', _0x47d9b1['aniCol'] = '#CFCFCF', _0x47d9b1['skinName'] = 'arctic/arcticfox';
    break;
case _0x46d563:
    _0x47d9b1['aniName'] = 'Arctic Hare', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to ' + _0x47d9b1['aniName'] + '!\x0a \x0aPress W to burrow a hole to hide in!', _0x47d9b1['aniCol'] = '#D5D5D5', _0x47d9b1['skinName'] = 'arctic/arctichare';
    break;
case _0x1080d7:
    _0x47d9b1['aniName'] = 'The Yeti!', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to ' + _0x47d9b1['aniName'] + '!\x0a So it really exists... \x0a Hold W to turn into snow, release W to freeeeeze!', _0x47d9b1['aniCol'] = '#839eb5', _0x47d9b1['skinName'] = 'arctic/yeti';
    break;
case _0x465a75:
    _0x47d9b1['aniName'] = 'Chipmunk', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = '', _0x47d9b1['aniCol'] = '#A77C30', _0x47d9b1['skinName'] = 'arctic/chipmunk';
    break;
case _0xc6c00:
    _0x47d9b1['aniName'] = 'Muskox', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to ' + _0x47d9b1['aniName'] + '!\x0a Press W to charge with your horns! \x0aPlus move decently on ice!', _0x47d9b1['aniCol'] = '#231f18', _0x47d9b1['skinName'] = 'arctic/muskox';
    break;
case _0x55a1a9:
    _0x47d9b1['aniName'] = 'Penguin', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to ' + _0x47d9b1['aniName'] + '!\x0a Left-click to run!\x0a (HOLD W to slide FAST on ice)!', _0x47d9b1['aniCol'] = '#FFFFFF', _0x47d9b1['skinName'] = 'arctic/penguin';
    break;
case _0x546d88:
    _0x47d9b1['aniName'] = 'Polar Bear', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to ' + _0x47d9b1['aniName'] + '!\x0a Polar bears can climb hills! \x0a+ They\'re amazing swimmers!', _0x47d9b1['aniCol'] = '#e4e4e4', _0x47d9b1['skinName'] = 'arctic/bear/bear';
    break;
case _0xc81962:
    _0x47d9b1['aniName'] = 'Seal', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to ' + _0x47d9b1['aniName'] + '!\x0a Seals can slide on ice (Hold W) + can climb hills (rocks too!)', _0x47d9b1['aniCol'] = '#cfcfcf', _0x47d9b1['skinName'] = 'arctic/seal';
    break;
case _0x1c2360:
    _0x47d9b1['aniName'] = 'Snow leopard', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to ' + _0x47d9b1['aniName'] + '!\x0a Press W to get a speed boost! (Every 8 seconds)!', _0x47d9b1['aniCol'] = '#cfcfcf', _0x47d9b1['skinName'] = 'arctic/snowleopard';
    break;
case _0x13bbdd:
    _0x47d9b1['aniName'] = 'Walrus', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to ' + _0x47d9b1['aniName'] + '!\x0a You can slide on ice (Hold W) + can climb hills (rocks too!)', _0x47d9b1['aniCol'] = '#633838', _0x47d9b1['skinName'] = 'arctic/walrus';
    break;
case _0x4c7e27:
    _0x47d9b1['aniName'] = 'Reindeer', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to ' + _0x47d9b1['aniName'] + '!\x0a Press W to dig up food! \x0a Your sharp hooves let you turn very well on ice!', _0x47d9b1['aniCol'] = '#a68976', _0x47d9b1['skinName'] = 'arctic/reindeer';
    break;
case _0x4b16ca:
    _0x47d9b1['aniName'] = 'Wolf', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to ' + _0x47d9b1['aniName'] + '!\x0a Wolf paws turn very well on ice!\x0a Press W to howl!', _0x47d9b1['aniCol'] = '#6B6B6B', _0x47d9b1['skinName'] = 'arctic/wolf';
    break;
case _0x57db06:
    _0x47d9b1['aniName'] = 'Wolverine', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to ' + _0x47d9b1['aniName'] + '!\x0a Press W to Let out a Powerful GROWL! (Knocks back prey!)', _0x47d9b1['aniCol'] = '#843A0F', _0x47d9b1['skinName'] = 'arctic/wolverine';
    break;
case _0x1a507a:
    _0x47d9b1['aniName'] = 'Mammoth', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to ' + _0x47d9b1['aniName'] + '!\x0a Press W to roll snowballs with your trunk!\x0a The bigger the snowball gets, the longer the freeze!', _0x47d9b1['aniCol'] = '#9d4717', _0x47d9b1['skinName'] = 'arctic/mammoth';
    break;
case _0x2896b9:
    _0x47d9b1['aniName'] = 'Donkey', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to ' + _0x47d9b1['aniName'] + '!\x0a Press W to Kick any animal behind you', _0x47d9b1['aniCol'] = '#8c7c64', _0x47d9b1['skinName'] = 'donkey';
    break;
case _0x3700ee:
    _0x47d9b1['aniName'] = 'Sabertooth Tiger', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to Sabertooth Tiger!\x0aSabertooth Tigers are great swimmers, dominate the Lakes/Oceans/Mud!', _0x47d9b1['aniCol'] = '#945A99', _0x47d9b1['skinName'] = 'sabertoothtiger';
    break;
case _0xce16df:
    _0x47d9b1['aniName'] = 'Elephant', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to ' + _0x47d9b1['aniName'] + '!\x0a Use your long trunk to attack and eat food!', _0x47d9b1['aniCol'] = '#945A99', _0x47d9b1['skinName'] = 'elephant';
    break;
case _0x293d5d:
    _0x47d9b1['aniName'] = 'Blue Whale', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to Blue Whale!\x0a Smash with your powerful tail!', _0x47d9b1['aniCol'] = '#945A99', _0x47d9b1['skinName'] = 'bluewhale';
    break;
case _0x414bbd:
    _0x47d9b1['aniName'] = 'Hedgehog', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to Hedgehog!\x0a (Hold W to become spiky, and dangerous to touch!)', _0x47d9b1['aniCol'] = '#5b400d', _0x47d9b1['skinName'] = 'hedgehog';
    break;
case _0x7820e:
    _0x47d9b1['aniName'] = 'King Crab', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to a KING CRAB!', _0x47d9b1['aniCol'] = '#971f0e', _0x47d9b1['skinName'] = 'kingcrab';
    break;
case _0x47b3d3:
    _0x47d9b1['aniName'] = 'Lemming', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = '', _0x47d9b1['aniCol'] = '#A77C30', _0x47d9b1['skinName'] = 'arctic/lemming';
    break;
case _0xeeef05:
    _0x47d9b1['aniName'] = 'Frog', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to Frog!!', _0x47d9b1['aniCol'] = '#FF9000', _0x47d9b1['skinName'] = 'frog/frog';
    break;
case _0x189adc:
    _0x47d9b1['aniName'] = 'Ostrich', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to Ostrich! Lay eggs to hatch babies! \x0aCommand babies by placing your crosshair (right-click/W)-\x0a They can attack prey!', _0x47d9b1['aniCol'] = '#FF9000', _0x47d9b1['skinName'] = 'ostrich/ostrich';
    break;
case _0x4ba38f:
    _0x47d9b1['aniName'] = 'Pelican', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to Pelican! \x0aPick up water (and prey!) in your mouth,\x0afly, and drop water on prey! (press W again)', _0x47d9b1['aniCol'] = '#FF9000', _0x47d9b1['skinName'] = 'pelican/pelican';
    break;
case _0x12d178:
    _0x47d9b1['aniName'] = 'Falcon', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to Falcon! \x0aFly, and do a powerful dive attack! Aim it well.', _0x47d9b1['aniCol'] = '#FF9000', _0x47d9b1['skinName'] = 'falcon/falcon';
    break;
case _0x5baef5:
    _0x47d9b1['aniName'] = 'Snowy Owl', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to Snowy Owl!\x0a Aim the crosshair, \x0a right click/W when it\'s on top of prey, to attack!', _0x47d9b1['aniCol'] = '#FF9000', _0x47d9b1['skinName'] = 'snowyowl/snowyowl';
    break;
case _0x2c0e73:
    _0x47d9b1['aniName'] = 'Baby Ostrich', _0x47d9b1['aniDesc'] = '', _0x47d9b1['upgradeText'] = 'UPGRADED to Baby Ostrich!!', _0x47d9b1['aniCol'] = '#FF9000', _0x47d9b1['skinName'] = 'ostrich/ostrich-baby';
    break;
case _0x3fcb38:
    _0x47d9b1['aniName'] = 'Phoenix', _0x47d9b1['upgradeText'] = 'UPGRADED to Phoenix!\x0aCreate powerful fire tornados to burn your enemies alive!', _0x47d9b1['aniCol'] = '#FF9000', _0x47d9b1['skinName'] = 'phoenix/phoenix';
    break;
case _0x16f423:
    _0x47d9b1['aniName'] = 'Sea Monster', _0x47d9b1['upgradeText'] = 'UPGRADED to Sea Monster!', _0x47d9b1['aniCol'] = '#FF9000', _0x47d9b1['skinName'] = 'seamonster';
    break;
case _0xc23298:
    _0x47d9b1['aniName'] = 'Land Monster', _0x47d9b1['upgradeText'] = 'UPGRADED to Land Monster!', _0x47d9b1['aniCol'] = '#FF9000', _0x47d9b1['skinName'] = 'landmonster';
    break;
case _0x16a00e:
    _0x47d9b1['aniName'] = 'Ice Monster', _0x47d9b1['upgradeText'] = 'UPGRADED to Ice Monster!', _0x47d9b1['aniCol'] = '#FF9000', _0x47d9b1['skinName'] = 'icemonster';
    break;
case _0x4cc8de:
    _0x47d9b1['aniName'] = 'Dino Monster', _0x47d9b1['upgradeText'] = 'UPGRADED to Dino Monster!', _0x47d9b1['aniCol'] = '#FF9000', _0x47d9b1['skinName'] = 'dinomonster';
    break;
case _0x576572:
    _0x47d9b1['aniName'] = 'Pigeon', _0x47d9b1['upgradeText'] = 'UPGRADED to Pigeon!\x0aHold right click (or W) to fly!\x0a', _0x47d9b1['aniCol'] = '#FF9000', _0x47d9b1['skinName'] = 'pigeon/pigeon';
    break;
case _0x375310:
    _0x47d9b1['aniName'] = 'Toucan', _0x47d9b1['upgradeText'] = 'UPGRADED to Toucan!\x0aHold right click (or W) to fly!(HINT: Start flying from a fruit tree or bush to throw fruit upon landing!)', _0x47d9b1['aniCol'] = '#FF9000', _0x47d9b1['skinName'] = 'toucan/toucan';
    break;
default:
    _0x47d9b1['aniName'] = '(Animal)', _0x47d9b1['aniDesc'] = '', _0x47d9b1['aniCol'] = '#000000', _0x47d9b1['upgradeText'] = 'UPGRADED!';
}
return _0x47d9b1;
}, _0x1dd8d7['prototype']['loadAnimalSkinImg'] = function () {
var _0x1722a8 = this['getSkinName']();
this['loadedSkinImg'] = null, _0x1722a8 && !_0x7ec408 && (this['loadedSkinImg'] = this['getSkinImageObj']('skins/' + _0x1722a8 + '.png'));
}, _0x1dd8d7['prototype']['loadAnimalSkinImgAsync'] = async function () {
var _0x4e3907 = this['getSkinName']();
this['loadedSkinImg'] = await this['getSkinImageObjAsync']('skins/' + _0x4e3907 + '.png');
}, _0x1dd8d7['prototype']['getIdealOpacity'] = function () {
return this['flag_usingDiveAbility'] || this['flag_usingAbility'] && (this['animalType'] == _0x176a10 || this['animalType'] == _0x108db6 || this['animalType'] == _0x1080d7) ? 0x0 : 0x1;
}, _0x1dd8d7['prototype']['isAnimalInside1v1Arena'] = function () {
if (_0x5c33b6 != null && _0x50a9ba) {
    if (_0x5c33b6['p1ID'] == this['id'] || _0x5c33b6['p2ID'] == this['id']) return !![];
} else {
    if (_0x45effd[this['id']] || _0x45effd[_0x46868a] && _0x46868a == this['id']) return !![];
}
return ![];
}, _0x1dd8d7['prototype']['setStealth'] = function () {
if (this['isAnimalInside1v1Arena']() || this['flag_isInArena']) this['idealOp'] = 0.6;
else(this['flag_stealth'] || this['flag_inHidingHole']) && (this['idealOp'] = 0.2);
}, _0x1dd8d7['prototype']['setOpacityForFlyingAnimals'] = function (_0x3f017a) {
if (this['gabbedByAniID'] == this['id'] || this['grabbedAniID'] == this['id']) return;
this['id'] != _0x46868a && (this['idealOp'] = 0.6);
}, _0x1dd8d7['prototype']['getImageDataKey'] = function () {
return this['animalType'] + '__' + this['animalSpecies'] + '__' + this['animalSubSpecies'] + '__' + this['animalPremiumSkin'] + '__' + this['mopeSeasonID'] + '__' + this['skinThemeID'];
};
const _0xfccd3d = {},
_0x35efe7 = 'cached_animal_image_data_keys',
_0x572ac7 = () => {
    if (_0x120b61) {
        const _0x43c300 = localStorage['getItem'](_0x35efe7);
        console['error']('KEYS:', _0x43c300), _0x43c300 && JSON['parse'](_0x43c300)['forEach'](_0x4cee9e => {
            _0xfccd3d[_0x4cee9e] = localStorage['getItem'](_0x4cee9e);
        });
    }
};
_0x1dd8d7['prototype']['getUpgradeImagePath'] = function () {
let _0x171662 = this['animalInfo']()['skinName'],
    _0x530ef7 = '';
if (!_0x171662 || _0x171662['toLowerCase']()['includes']('scorpion') || this['animalSpecies'] == 0xc8) _0x530ef7 = this['getSkinImagePath']('skins/' + this['getSkinName']()) + '.ui.png';
else _0x530ef7 = this['getSkinImagePath']('skins/' + _0x171662 + '.ui.png');
return _0x530ef7;
}, _0x1dd8d7['prototype']['getImageData'] = async function () {
const _0x1e1155 = this['getImageDataKey']();
if (_0x1e1155 in _0xfccd3d) return _0xfccd3d[_0x1e1155];
this['flag_fullAlpha'] = !![], this['buttonScaleF'] = 0x1, this['imgSizeF'] = 0x1;
var _0x1dd03b = this['animalInfo'](),
    _0x329e89 = _0x1dd03b['aniCol'];
return this['skinImgName'] = _0x1dd03b['skinName'], this['skinNotLoadedColor'] = _0x329e89, await this['loadAnimalSkinImgAsync'](), this['draw'](), new Promise((_0x369c99, _0x1afb45) => {
    setTimeout(() => {
        const _0x31105d = document['createElement']('canvas'),
            _0x5e56f4 = 0x8c,
            _0x433bd7 = 0x6e;
        _0x31105d['width'] = _0x5e56f4, _0x31105d['height'] = _0x5e56f4;
        const _0x4bd981 = window['ctx'];
        window['ctx'] = _0x31105d['getContext']('2d'), this['w'] = _0x433bd7, this['h'] = _0x433bd7, this['rad'] = _0x433bd7 / 0x2, this['skinRad'] = _0x433bd7 / 0x2, this['idealOp'] = 0x1, this['underwaterA'] = 0x0, window['ctx']['translate'](_0x5e56f4 / 0x2, _0x5e56f4 / 0x2), window['ctx']['globalAlpha'] = 0x1, this['draw']();
        const _0xfdc554 = _0x31105d['toDataURL']();
        window['ctx'] = _0x4bd981, _0xfccd3d[_0x1e1155] = _0xfdc554;
        if (_0x120b61) try {
            localStorage['setItem'](_0x35efe7, JSON['stringify'](Object['keys'](_0xfccd3d))), localStorage['setItem'](_0x1e1155, _0xfdc554);
        } catch (_0x2a362e) {}
        return _0x369c99(_0xfdc554);
    }, 0x3e8);
});
}, _0x1dd8d7['prototype']['idealOp'] = 0x1, _0x1dd8d7['prototype']['customDraw'] = function (_0x16a338) {
this['preLoad']();
var _0x15cb95 = this['animalInfo'](),
    _0x145c88 = _0x15cb95['aniCol'];
this['skinImgName'] = _0x15cb95['skinName'], this['skinNotLoadedColor'] = _0x145c88;
switch (this['animalType']) {
case _0x2ee5ae:
case _0xc6c00:
case _0x31cc16:
case _0x41ea25:
case _0x1f6edc:
    tailLen = this['rad'] * 0.16;
    break;
}
this['loadAnimalSkinImg'](), _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['angle']);
var _0x49d770 = 0x0,
    _0x163c5a = (_0x397f50 - this['spawnTime']) / 0x3e8;
if (this['flag_eff_wobbling']) {
    var _0x5bd3e7 = _0x23fdc7(_0x163c5a, 1.25, 0.1, 0x2);
    this['rad'] += _0x5bd3e7;
}
this['idealOp'] = this['getIdealOpacity'](), this['setStealth']();
if (this['flag_flying']) this['setOpacityForFlyingAnimals']();
this['flag_fullAlpha'] ? _0x4ac9cf['globalAlpha'] = 0x1 : (this['underwaterA'] += (this['idealOp'] - this['underwaterA']) * 0.1, _0x4ac9cf['globalAlpha'] *= this['underwaterA']);
if (this['flag_eff_invincible']) {
    var _0x37cb8c = 0x1,
        _0x5e09e5 = 0.3,
        _0xf9574f = 0x1,
        _0x4fb7dc = 0.5 * (_0xf9574f - _0x5e09e5);
    _0x4ac9cf['globalAlpha'] *= _0x5e09e5 + _0x4fb7dc + _0x4fb7dc * Math['sin'](0x2 * Math['PI'] / _0x37cb8c * ((_0x397f50 - this['spawnTime']) / 0x3e8));
}
this['outlineW'] = 0x2 + _0x49d770;
if (!(this['dead'] || this['flag_underWater'] || this['animalType'] == _0x176a10 && this['flag_usingAbility'])) {
    if (!this['flag_underWater']) {
        var _0x85c619 = this['getOutlineColor']();
        if (this['killerId'] == 0x0 && !(this['flag_flying'] && this['id'] == _0x46868a || _0x25ea67 == 0x2 && !(_0x85c619 == _0x4fa567 || _0x85c619 == _0x1e8292))) this['teamID'] > 0x0 && _0x2fa240 != null && _0x5332af == _0x59b793 && (_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = this['isAnimalInside1v1Arena']() ? 0.3 : this['idealOp'], _0x486a28(0x0, 0x0, this['rad'] + 0x2, _0x2fa240['getTeamColor'](this['teamID'])), _0x4ac9cf['restore']()), this['drawAnimalUnderSkinCircle'](_0x85c619);
        else this['outlineW'] = 0x0;
    }
}
this['drawUnderEffects']();
if (this['canDrawAnimalSkin']()) this['drawAnimalSkin'](_0x85c619);
this['drawUnderWater']();
if (this['animalPremiumSkin'] != 0x0 && !this['flag_eff_shivering']) this['sparkleAnim']();
_0x4ac9cf['restore'](), this['drawTopEffects'](), this['drawLowWaterDrop']();
if (!this['flag_isInArena']) {
    if (this['id'] == _0x46868a && this['flag_viewing1v1Invite']) {} else {
        if (!this['flag_usingDiveAbility']) this['drawNickName'](_0x33431f == null ? this['idealOp'] : 0.2);
    }
}
this['drawZombieEffect']();
}, _0x1dd8d7['prototype']['canDrawAnimalSkin'] = function () {
return !![];
}, _0x1dd8d7['prototype']['drawZombieEffect'] = function () {
this['effecT_isZombie'] && (_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.6, _0x486a28(0x0, 0x0, this['skinRad'], '#B6CF40'), _0x4ac9cf['restore']());
}, _0x1dd8d7['prototype']['drawLowWaterDrop'] = function () {
if (this['flag_lowWat']) {
    var _0x553b1f = 1.2,
        _0x52ddce = 0.2,
        _0x523f99 = 0.8,
        _0xa178f0 = 0.5 * (_0x523f99 - _0x52ddce),
        _0x292999 = _0x52ddce + _0xa178f0 + _0xa178f0 * Math['sin'](0x2 * Math['PI'] / _0x553b1f * (_0x397f50 / 0x3e8));
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = _0x292999;
    if (this['animalType'] == _0x5186e1 || this['animalType'] == _0x3fcb38 || this['animalType'] == _0xc23298 || this['animalType'] == _0x375310 && this['animalSpecies'] == 0x4) _0x4ac9cf['fillStyle'] = _0x926611;
    else {
        if (this['animalType'] == _0x16f423) _0x4ac9cf['fillStyle'] = _0xbb6dfa;
        else {
            if (this['animalType'] == _0x309a7e) _0x4ac9cf['fillStyle'] = _0x4b16a6;
            else _0x4ac9cf['fillStyle'] = _0x1a01bb;
        }
    }
    _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, this['rad'] + 0x5, 0x5, 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['restore']();
}
}, _0x1dd8d7['prototype']['sparkleInterval'] = 0x5, _0x1dd8d7['prototype']['sparklDuration'] = 0x3, _0x1dd8d7['prototype']['sparkleNext'] = 0x0, _0x1dd8d7['prototype']['sparkleAniT'] = 0x0, _0x1dd8d7['prototype']['setSparkleInterval'] = function (_0x49e7cf, _0x212db3) {
this['sparkleInterval'] = _0x49e7cf, this['sparklDuration'] = _0x212db3, this['setSparkleXY']();
}, _0x1dd8d7['prototype']['seSparkle'] = function () {
this['sparkleAniT'] = +new Date() + 0x3e8 * this['sparklDuration'], this['sparkleNext'] = this['sparkleAniT'] + 0x3e8 * this['sparkleInterval'], this['setSparkleXY']();
}, _0x1dd8d7['prototype']['isMouseHovering'] = ![], _0x1dd8d7['prototype']['sparkleAnim'] = function () {
if (this['animalPremiumSkin'] && (_0x397f50 - this['spawnTime']) / 0x3e8 > 0x5) {
    if (this['id'] > 0x0 || this['id'] == 0x0 && this['isMouseHovering']) + new Date() > this['sparkleNext'] && (this['seSparkle'](), this['setSparkleXY']());
    if (this['sparkleAniT'] > +new Date()) this['showSparkling']();
}
}, _0x1dd8d7['prototype']['sparkleAng'] = 0x0, _0x1dd8d7['prototype']['sparkleX'] = 0x0, _0x1dd8d7['prototype']['sparkleY'] = 0x0, _0x1dd8d7['prototype']['setSparkleXY'] = function () {
var _0x10241e = this['rad'] / 0x2,
    _0x56817f = _0x10241e * 0.3,
    _0x5606d8 = _0x10241e,
    _0x50db5a = _0x5a9e0b(_0x56817f, _0x5606d8),
    _0x3a903d = _0x5a9e0b(_0x56817f, _0x5606d8);
_0x50db5a *= Math['random']() * 0xa > 0x5 ? -0x1 : 0x1, _0x3a903d *= Math['random']() * 0xa > 0x5 ? -0x1 : 0x1, this['sparkleX'] = _0x50db5a, this['sparkleY'] = _0x3a903d;
}, _0x1dd8d7['prototype']['showSparkling'] = function () {
var _0x44a98a = 0x5;
_0x4ac9cf['save']();
var _0xd07069 = 1.5,
    _0x11f71c = 0.3,
    _0x38d441 = 0x1,
    _0x198969 = 0.5 * (_0x38d441 - _0x11f71c);
_0x4ac9cf['globalAlpha'] *= _0x11f71c + _0x198969 + _0x198969 * Math['sin'](0x2 * Math['PI'] / _0xd07069 * ((_0x397f50 - this['spawnTime']) / 0x3e8)), this['sparkleAng'] += 0.5;
var _0x49b72a = 0x1,
    _0xcc8b7f = 0x0;
_0x4ac9cf['fillStyle'] = '#faffb6';
for (i = 0x0; i < 0x3; i++) {
    _0x4ac9cf['save'](), _0x4ac9cf['translate'](this['sparkleX'], this['sparkleY']), _0x4ac9cf['rotate'](_0x142401(this['sparkleAng'])), _0x4ac9cf['save'](), _0x4ac9cf['rotate'](_0x142401(_0xcc8b7f)), _0x4ac9cf['scale'](_0x49b72a * 0.5, _0x44a98a), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, _0x49b72a, 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['restore'](), _0xcc8b7f += 0x3c, _0x4ac9cf['restore']();
}
_0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['sparkleX'], this['sparkleY'], _0x49b72a, 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['restore']();
}, _0x1dd8d7['prototype']['shakeOffsetX'] = 0x0, _0x1dd8d7['prototype']['shakeOffsetY'] = 0x0, _0x1dd8d7['prototype']['drawAnimalSkin'] = function (_0x4ff799) {
_0x4ac9cf['save']();
if (this['flag_eff_shivering']) {
    var _0x7cf38f = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x7f87bc = 0.1,
        _0x455270 = this['rad'] * this['shiverF'];
    this['shakeOffsetX'] = _0x455270 * Math['sin'](0x2 * Math['PI'] / _0x7f87bc * _0x7cf38f);
    var _0x7f87bc = 0.05,
        _0x455270 = this['rad'] * this['shiverF'];
    this['shakeOffsetY'] = _0x455270 * Math['sin'](0x2 * Math['PI'] / _0x7f87bc * _0x7cf38f), _0x4ac9cf['translate'](-this['shakeOffsetX'], -this['shakeOffsetY']);
}
this['drawPropsUnderSkin'](), this['beforeDrawAnimalSkin']();
if (this['id'] > 0x0) this['drawUnderSkinTail'](_0x4ff799);
this['drawUnderSkinImgOutline'](), this['drawUnderSkinImg'](), this['drawSkinImg'](), this['drawOnTopOfSkinImg'](), this['drawPropsTopOfSkin'](), this['drawStatueEffect'](), _0x4ac9cf['restore']();
}, _0x1dd8d7['prototype']['drawStatueEffect'] = function () {
if (this['flag_eff_statue']) {
    var _0x4c5f3d = null;
    switch (this['eff_statueType']) {
    case 0x1:
        _0x4c5f3d = 'snowball';
        break;
    case 0x2:
        _0x4c5f3d = 'goldball';
        break;
    }
    if (_0x4c5f3d) {
        var _0x45972d = this['getSkinImageObj']('img/' + _0x4c5f3d + '.png');
        if (_0x45972d) {
            _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = _0x46868a == this['id'] ? 0.7 : 0x1;
            var _0x2f5d4c = this['rad'] * 1.2;
            _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x45972d, -_0x2f5d4c, -_0x2f5d4c, 0x2 * _0x2f5d4c, 0x2 * _0x2f5d4c), _0x4ac9cf['restore']();
        }
    }
}
}, _0x1dd8d7['prototype']['propsEnabled'] = ![], _0x1dd8d7['prototype']['drawPropsUnderSkin'] = function (_0x1799cf) {
if (this['propsEnabled']) {
    if (this['animalType'] == _0x49d118) {}
}
}, _0x1dd8d7['prototype']['drawPropsTopOfSkin'] = function (_0x7a1b7f) {
this['propsEnabled'] && (this['animalType'] == _0x49d118 && (this['drawProp']('scarfs', 0x1), this['drawProp']('glasses', 0x0), this['drawProp']('hats', 0x1)));
}, _0x1dd8d7['prototype']['drawProp'] = function (_0x3d5a9b, _0x37128e) {
var _0x5bf219 = this['skinScale'],
    _0x19536f = this['skinRad'] + 0.9,
    _0x5661ef = this['getSkinImageObj']('props/' + this['animalType'] + '/' + _0x3d5a9b + '/' + _0x37128e + '.png');
_0x5661ef && _0x4ac9cf['drawImage'](_0x5661ef, -_0x19536f * _0x5bf219, -_0x19536f * _0x5bf219, 0x2 * _0x19536f * _0x5bf219, 0x2 * _0x19536f * _0x5bf219);
}, _0x1dd8d7['prototype']['beforeDrawAnimalSkin'] = function (_0x632a1f) {}, _0x1dd8d7['prototype']['drawUnderSkinTail'] = function (_0x3473ba) {
if (this['killerId'] > 0x0 || this['flag_underWater']) return;
if (this['animalType'] != _0x30b869 && this['animalType'] != _0x49d118 && this['animalType'] != _0x415723) {
    var _0x468471 = this['animalInfo'](),
        _0x816b22 = _0x468471['aniCol'],
        _0x5b9592 = this['rad'] * 0.1,
        _0x497bb7 = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0xa61acf = 0x5,
        _0x302480 = 0x4,
        _0x13efb1 = _0x302480 * Math['sin'](0x2 * Math['PI'] / _0xa61acf * _0x497bb7),
        _0x5729a8 = this['outlineW'] * 2.5,
        _0x4fb9a7 = 0x19,
        _0x3f25bc = Math['PI'] / 0xb4;
    if (this['flag_tailBitten']) _0x4ac9cf['fillStyle'] = _0x1e8292;
    else {
        var _0x5c629d = this['animalType'];
        _0x1be56a[_0x5c629d - 0x1] > 0x0 && this['id'] != _0x46868a ? _0x4ac9cf['fillStyle'] = _0x4fa567 : _0x4ac9cf['fillStyle'] = _0x3473ba;
    }!(_0x25ea67 == 0x2 && _0x4ac9cf['fillStyle'] != _0x5db51d) && (_0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo']((this['rad'] - this['outlineW'] + 0x1) * Math['cos']((0x10e + _0x4fb9a7 / 0x2 + _0x5729a8) * _0x3f25bc), (this['rad'] - this['outlineW'] + 0x1) * Math['sin']((0x10e + _0x4fb9a7 / 0x2) * _0x3f25bc)), _0x4ac9cf['lineTo']((this['rad'] - this['outlineW'] + 0x1) * Math['cos']((0x10e - _0x4fb9a7 / 0x2 - _0x5729a8) * _0x3f25bc), (this['rad'] - this['outlineW'] + 0x1) * Math['sin']((0x10e - _0x4fb9a7 / 0x2) * _0x3f25bc)), _0x4ac9cf['lineTo']((this['rad'] + _0x5b9592 + this['outlineW']) * Math['cos']((0x10e + _0x13efb1) * _0x3f25bc), (this['rad'] + _0x5b9592 + this['outlineW']) * Math['sin']((0x10e + _0x13efb1) * _0x3f25bc)), _0x4ac9cf['lineTo']((this['rad'] - this['outlineW'] + 0x1) * Math['cos']((0x10e + _0x4fb9a7 / 0x2 + _0x5729a8) * _0x3f25bc), (this['rad'] - this['outlineW'] + 0x1) * Math['sin']((0x10e + _0x4fb9a7 / 0x2) * _0x3f25bc)), _0x4ac9cf['fill']()), !(_0x25ea67 == 0x2) && ((!this['loadedSkinImg'] || this['flag_tailBitten']) && (_0x4ac9cf['fillStyle'] = this['flag_tailBitten'] ? _0x1e8292 : _0x816b22, _0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo']((this['rad'] - this['outlineW']) * Math['cos']((0x10e + _0x4fb9a7 / 0x2) * _0x3f25bc), (this['rad'] - this['outlineW']) * Math['sin']((0x10e + _0x4fb9a7 / 0x2) * _0x3f25bc)), _0x4ac9cf['lineTo']((this['rad'] - this['outlineW']) * Math['cos']((0x10e - _0x4fb9a7 / 0x2) * _0x3f25bc), (this['rad'] - this['outlineW']) * Math['sin']((0x10e - _0x4fb9a7 / 0x2) * _0x3f25bc)), _0x4ac9cf['lineTo']((this['rad'] + _0x5b9592) * Math['cos']((0x10e + _0x13efb1) * _0x3f25bc), (this['rad'] + _0x5b9592) * Math['sin']((0x10e + _0x13efb1) * _0x3f25bc)), _0x4ac9cf['lineTo']((this['rad'] - this['outlineW']) * Math['cos']((0x10e + _0x4fb9a7 / 0x2) * _0x3f25bc), (this['rad'] - this['outlineW']) * Math['sin']((0x10e + _0x4fb9a7 / 0x2) * _0x3f25bc)), _0x4ac9cf['fill']()));
}
}, _0x1dd8d7['prototype']['drawAnimalUnderSkinCircle'] = function (_0x120521) {
if (!this['flag_isGrabbed']) {
    if (this['playerNumberFor1v1Arena'] == 0x1) _0x120521 = 'cyan';
    else {
        if (this['playerNumberFor1v1Arena'] == 0x2) _0x120521 = 'yellow';
        else this['flag_eff_isOnSpiderWeb'] && (_0x120521 = 'white');
    }
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = this['isAnimalInside1v1Arena']() ? 0.3 : this['idealOp'], _0x486a28(0x0, 0x0, this['rad'], _0x120521), _0x4ac9cf['restore']();
}
}, _0x1dd8d7['prototype']['devMode_num'] = 0x0, _0x1dd8d7['prototype']['hasMultipleSpecies'] = function () {
return ![];
}, _0x1dd8d7['prototype']['drawNickName'] = function (_0x3c8373) {
if (_0x3c8373 == 0x0) return;
var _0x22652b = _0x3c8373;
this['nickNameA'] += (_0x22652b - this['nickNameA']) * 0.1;
if (this['nickName'] && this['nickTXT'] && !_0x47dcae) {
    _0x4ac9cf['save']();
    if (this['dead']) _0x4ac9cf['globalAlpha'] *= 0x1 - this['moveUpdF'];
    else _0x4ac9cf['globalAlpha'] = 0x1;
    _0x4ac9cf['globalAlpha'] *= this['nickNameA'], this['nickTXT']['x'] = 0x0, this['nickTXT']['y'] = this['rad'] + 0x9;
    var _0x12160b = '#FFFFFF';
    if (this['flag_isDevMode']) switch (this['devMode_num']) {
    case 0x8:
        if (!this['flag_hideDevPrint']) {
            if (_0x4a544a != null && _0x4a544a['id'] == this['id']) _0x12160b = 'cyan';
            else _0x12160b = 'yellow';
        }
        break;
    case 0x1:
        _0x12160b = '#e23ca6';
        break;
    case 0x2:
        break;
    case 0x3:
        _0x12160b = '#ee3030';
        break;
    default:
        break;
    }
    this['nickTXT']['setColor'](_0x12160b), this['nickTXT']['draw'](), _0x4ac9cf['restore']();
}
}, _0x1dd8d7['prototype']['drawHealthBar'] = function () {
_0x1dd8d7['superClass']['prototype']['drawHealthBar']['call'](this), this['drawInfectionBar']();
}, _0x1dd8d7['prototype']['drawInfectionBar'] = function () {
if (this['flag_underWater']) return;
var _0x3c6cca = _0x397f50 < this['infectionBarTimeoutT'] ? 0x1 : 0x0;
this['infectionBarA'] += (_0x3c6cca - this['infectionBarA']) * 0.04, this['infectionBarA'] > 0.001 && (this['infectionPer'] += (this['infectionPer_n'] - this['infectionPer']) * 0.1, this['drawBar']('red', this['infectionBarA'], this['infectionPer'], 0x2, 6.5));
}, _0x1dd8d7['prototype']['drawUnderWater'] = function () {
(this['flag_usingDiveAbility'] || this['flag_usingAbility'] && this['animalType'] == _0x176a10) && (_0x4ac9cf['save'](), this['drawWhenUnderwater'](), _0x4ac9cf['restore']());
}, _0x1dd8d7['prototype']['drawUnderSkinImgOutline'] = function () {
if (this['flag_eff_stunk']) {
    _0x4ac9cf['save']();
    var _0x991b67 = 0x1,
        _0x41845e = 0.3,
        _0x381250 = 0x1,
        _0x45fdc5 = 0.5 * (_0x381250 - _0x41845e),
        _0x3b4efc = _0x41845e + _0x45fdc5 + _0x45fdc5 * Math['sin'](0x2 * Math['PI'] / _0x991b67 * ((_0x397f50 - this['spawnTime']) / 0x3e8));
    _0x4ac9cf['globalAlpha'] *= _0x3b4efc;
    var _0x380560 = 2.6;
    _0x486a28(0x0, 0x0, this['rad'] + _0x380560 * _0x3b4efc, 'brown'), _0x4ac9cf['restore']();
}
if (this['flag_iceSliding']) {
    var _0x2f44f8 = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x991b67 = 0.75,
        _0x5bacd0 = 0x1,
        _0x2f3989 = _0x5bacd0 * Math['sin'](0x2 * Math['PI'] / _0x991b67 * _0x2f44f8),
        _0x501d80 = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] *= 0.8 - 0.2 * _0x2f3989, _0x486a28(0x0, this['rad'] * 0.3, this['rad'] * (0.9 + 0.15 * _0x2f3989), '#7BB7BB'), _0x486a28(0x0, -this['rad'] * 0.3, this['rad'] * (1.05 + 0.1 * _0x2f3989), '#7BB7BB'), _0x4ac9cf['globalAlpha'] = _0x501d80;
}
if (this['flag_usingAbility'] && (this['animalType'] == _0x43cc06 || this['animalType'] == _0x4c7e27)) {
    var _0x2f44f8 = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x991b67 = 1.5,
        _0x5bacd0 = 0x1,
        _0x2f3989 = _0x5bacd0 * Math['sin'](0x2 * Math['PI'] / _0x991b67 * _0x2f44f8),
        _0x501d80 = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] *= 0.8, _0x486a28(0x0, this['rad'] * 0.3, this['rad'] * (0.9 + 0.12 * _0x2f3989), '#7F582B'), _0x486a28(0x0, -this['rad'] * 0.3, this['rad'] * (1.05 + 0.09 * _0x2f3989), '#7F582B'), _0x4ac9cf['globalAlpha'] = _0x501d80;
}
var _0x42ae06 = this['flag_eff_frozen'] || this['flag_cold'] ? 0x1 : 0x0;
this['frozenEffA'] += (_0x42ae06 - this['frozenEffA']) * 0.1;
if (this['frozenEffA'] > 0.01) {
    var _0x501d80 = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] *= this['frozenEffA'];
    var _0x380560 = 1.6;
    _0x486a28(0x0, 0x0, this['rad'] + _0x380560 * this['frozenEffA'], 'white'), _0x4ac9cf['globalAlpha'] = _0x501d80;
}
var _0x42ae06 = this['flag_eff_healing'] ? 0x1 : 0x0;
this['effA_healing'] += (_0x42ae06 - this['effA_healing']) * 0.1;
if (this['effA_healing'] > 0.01) {
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] *= this['effA_healing'];
    var _0x380560 = 2.6;
    _0x486a28(0x0, 0x0, this['rad'] + _0x380560 * this['effA_healing'], 'purple'), _0x4ac9cf['restore']();
}
this['effect_aloeveraHeal'](!![]), this['effect_sanitized'](!![]);
var _0x42ae06 = this['flag_eff_hot'] ? 0x1 : 0x0;
this['effA_hot'] += (_0x42ae06 - this['effA_hot']) * 0.1;
if (this['effA_hot'] > 0.01) {
    _0x4ac9cf['save']();
    var _0x991b67 = 1.2,
        _0x41845e = 0.3,
        _0x381250 = 0x1,
        _0x45fdc5 = 0.5 * (_0x381250 - _0x41845e);
    _0x4ac9cf['globalAlpha'] *= _0x41845e + _0x45fdc5 + _0x45fdc5 * Math['sin'](0x2 * Math['PI'] / _0x991b67 * ((_0x397f50 - this['spawnTime']) / 0x3e8));
    var _0x380560 = 2.6;
    _0x486a28(0x0, 0x0, this['rad'] + _0x380560 * this['effA_hot'], 'rgba(249, 212, 77, 0.5)'), _0x4ac9cf['restore']();
}
var _0x42ae06 = this['flag_eff_poison'] ? 0x1 : 0x0;
this['effA_poison'] += (_0x42ae06 - this['effA_poison']) * 0.1;
if (this['effA_poison'] > 0.01) {
    _0x4ac9cf['save']();
    var _0x991b67 = 1.2,
        _0x41845e = 0.3,
        _0x381250 = 0x1,
        _0x45fdc5 = 0.5 * (_0x381250 - _0x41845e);
    _0x4ac9cf['globalAlpha'] *= _0x41845e + _0x45fdc5 + _0x45fdc5 * Math['sin'](0x2 * Math['PI'] / _0x991b67 * ((_0x397f50 - this['spawnTime']) / 0x3e8)), _0x4ac9cf['globalAlpha'] *= this['effA_poison'];
    var _0x380560 = 2.6;
    _0x486a28(0x0, 0x0, this['rad'] + _0x380560 * this['effA_poison'], '#7FF600'), _0x4ac9cf['restore']();
}
var _0x42ae06 = this['flag_eff_bleeding'] || this['flag_eff_wobbling'] ? 0x1 : 0x0;
this['effA_bleeding'] += (_0x42ae06 - this['effA_bleeding']) * 0.1;
if (this['effA_bleeding'] > 0.01) {
    _0x4ac9cf['save']();
    var _0x991b67 = 1.2,
        _0x41845e = 0.3,
        _0x381250 = 0x1,
        _0x45fdc5 = 0.5 * (_0x381250 - _0x41845e);
    _0x4ac9cf['globalAlpha'] *= _0x41845e + _0x45fdc5 + _0x45fdc5 * Math['sin'](0x2 * Math['PI'] / _0x991b67 * ((_0x397f50 - this['spawnTime']) / 0x3e8)), _0x4ac9cf['globalAlpha'] *= this['effA_bleeding'];
    var _0x380560 = 2.6,
        _0x5b9909 = this['flag_eff_wobbling'] ? 'brown' : 'red';
    _0x486a28(0x0, 0x0, this['rad'] + _0x380560 * this['effA_bleeding'], _0x5b9909), _0x4ac9cf['restore']();
}
var _0x42ae06 = this['flag_eff_slimed'] ? 0x1 : 0x0;
this['effA_slimed'] += (_0x42ae06 - this['effA_slimed']) * 0.1;
if (this['effA_slimed'] > 0.01) {
    _0x4ac9cf['save']();
    var _0x991b67 = 1.2,
        _0x41845e = 0.3,
        _0x381250 = 0x1,
        _0x45fdc5 = 0.5 * (_0x381250 - _0x41845e);
    _0x4ac9cf['globalAlpha'] *= _0x41845e + _0x45fdc5 + _0x45fdc5 * Math['sin'](0x2 * Math['PI'] / _0x991b67 * ((_0x397f50 - this['spawnTime']) / 0x3e8)), _0x4ac9cf['globalAlpha'] *= this['effA_slimed'];
    var _0x380560 = 2.6;
    _0x486a28(0x0, 0x0, this['rad'] + _0x380560 * this['effA_slimed'], 'grey'), _0x4ac9cf['restore']();
}
}, _0x1dd8d7['prototype']['drawUnderSkinImg'] = function () {}, _0x1dd8d7['prototype']['drawUnderwaterBubbles'] = function () {
return;
var _0x35560f = 0x1f4 / 0x154,
    _0x33271a = 'water';
switch (this['diveType']) {
case 0x0:
    _0x33271a = 'water';
    break;
case 0x1:
    _0x33271a = 'lava';
    break;
case 0x2:
    _0x33271a = 'mud';
    break;
}
var _0x3aece3 = this['getSkinImageObjForSeason']('skins/' + _0x33271a + '_dive.png', 0x2);
if (_0x3aece3) {
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1;
    var _0x23a340 = this['rad'] - this['outlineW'];
    _0x4ac9cf['drawImage'](_0x3aece3, -_0x23a340 * _0x35560f, -_0x23a340 * _0x35560f, 0x2 * _0x23a340 * _0x35560f, 0x2 * _0x23a340 * _0x35560f), _0x4ac9cf['restore']();
} else {
    _0x4ac9cf['save']();
    var _0x5b26bd = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x1b0b5b = 1.5,
        _0x6464a6 = 0x1,
        _0x54b60f = _0x6464a6 * Math['sin'](0x2 * Math['PI'] / _0x1b0b5b * _0x5b26bd);
    if (this['animalType'] == _0x1f6edc) _0x4ac9cf['globalAlpha'] *= 0.3;
    var _0x24a6d2 = this['flag_inWater'] ? '#4E71C3' : '#7E6A35';
    if (this['animalType'] == _0x3fcb38) _0x24a6d2 = '#f9d43b';
    _0x4ac9cf['fillStyle'] = _0x24a6d2;
    var _0x195786 = this['rad'] * 0.2;
    _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * -0.35, this['rad'] * -0.33, Math['max'](0x0, _0x195786 + _0x54b60f), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.35, this['rad'] * -0.32, Math['max'](0x0, _0x195786 - _0x54b60f), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.35, this['rad'] * 0.36, Math['max'](0x0, _0x195786 + _0x54b60f), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * -0.35, this['rad'] * 0.35, Math['max'](0x0, _0x195786 - _0x54b60f), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['restore']();
}
}, _0x1dd8d7['prototype']['drawUnderwaterCustomization'] = function (_0x5521cf, _0xb29bb0) {
if (this['flag_usingDiveAbility']) {
    var _0x6c745 = 'water';
    switch (this['diveType']) {
    case 0x0:
        _0x6c745 = 'ocean';
        break;
    case 0x1:
        _0x6c745 = 'lava';
        break;
    case 0x2:
        _0x6c745 = 'mud';
        break;
    case 0x3:
        _0x6c745 = 'waterspot';
        break;
    case 0x4:
        _0x6c745 = 'arcticwaterspot';
        break;
    case 0x5:
        _0x6c745 = 'arcticlake';
        break;
    case 0x6:
        _0x6c745 = 'oasis';
        break;
    case 0x7:
        _0x6c745 = 'deathlake';
        break;
    }
    if (!(_0x25ea67 == 0x2) && !_0x50a9ba) {
        var _0x12cba5 = Math['trunc'](_0x397f50 / 0x50) % 0x9;
        _0x12cba5 = Math['max'](0x1, _0x12cba5), _0x12cba5 = Math['min'](0x8, _0x12cba5), _0x6c745 = 'skins/dive/' + _0x6c745 + 'dive' + _0x12cba5 + '.png';
        var _0x262e30 = this['getObjImageObjForSeason'](_0x6c745, 0x2);
        if (_0x262e30) {
            _0x4ac9cf['save'](); {
                _0x4ac9cf['globalAlpha'] = 0x1;
                var _0x172378 = this['rad'] * 1.2;
                _0x4ac9cf['drawImage'](_0x262e30, -_0x172378, -_0x172378, _0x172378 * 0x2, _0x172378 * 0x2);
            }
            _0x4ac9cf['restore']();
        }
    } else {
        _0x6c745 = 'skins/dive/' + _0x6c745 + 'dive.png';
        var _0x262e30 = this['getObjImageObjForSeason'](_0x6c745, 0x2);
        if (_0x262e30) {
            _0x4ac9cf['save'](); {
                _0x4ac9cf['globalAlpha'] = 0x1;
                var _0x172378 = this['rad'] * 1.2;
                _0x4ac9cf['drawImage'](_0x262e30, -_0x172378, -_0x172378, _0x172378 * 0x2, _0x172378 * 0x2);
            }
            _0x4ac9cf['restore']();
        }
    }
}
}, _0x1dd8d7['prototype']['drawWhenUnderwater'] = function () {
this['drawUnderwaterCustomization'](0x1, 0x1);
}, _0x1dd8d7['prototype']['shiveringStartT'] = 0x0, _0x1dd8d7['prototype']['flag_eff_shivering'] = ![], _0x1dd8d7['prototype']['flag_inHidingHole'] = ![], _0x1dd8d7['prototype']['effect_shivering'] = function () {
if (this['shiveringStartT'] == 0x0 && this['flag_eff_shivering']) this['shiveringStartT'] = +new Date();
else {
    if (!this['flag_eff_shivering']) this['shiveringStartT'] = 0x0;
}
if (this['flag_eff_shivering']) {
    var _0x449892 = (+new Date() - this['shiveringStartT']) * 0xa;
    _0x449892 % 0xa == 0x0 && (this['eff_shiver_shakeX'] = Math['round'](Math['random']() * 0xa), this['eff_shiver_shakeX'] = Math['round'](Math['random']() * 0xa));
}
};
if (this['effA_healing'] > 0.01) {
_0x4ac9cf['save']();
var _0x1c3b15 = 0.3;
_0x4ac9cf['globalAlpha'] *= _0x1c3b15 * this['effA_healing'], _0x486a28(0x0, 0x0, Math['max'](0x0, this['rad'] - this['outlineW']), '#ef24ed'), _0x4ac9cf['restore']();
}
_0x1dd8d7['prototype']['effect_sanitized'] = function (_0x305919) {
var _0x5423fd = this['flag_eff_sanitized'] ? 0.9 : 0x0;
if (this['effA__sanitized'] == undefined) this['effA__sanitized'] = 0x0;
this['effA__sanitized'] += (_0x5423fd - this['effA__sanitized']) * 0.1;
if (this['effA__sanitized'] > 0.01) {
    var _0x8d5a96 = 0.3,
        _0x3b17ff = 0.8,
        _0xe2aec7 = 0.2,
        _0x15397a = 0.4,
        _0x58138b = 0.5 * (_0x15397a - _0xe2aec7),
        _0x1cfcc9 = _0xe2aec7 + _0x58138b + _0x58138b * Math['sin'](0x2 * Math['PI'] / _0x3b17ff * ((_0x397f50 - this['spawnTime']) / 0x3e8));
    if (_0x305919) {
        _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] *= _0x1cfcc9;
        var _0x46244d = 2.6;
        _0x486a28(0x0, 0x0, this['rad'] + _0x46244d * this['effA__sanitized'], 'white'), _0x4ac9cf['restore']();
    } else _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] *= _0x1cfcc9, _0x486a28(0x0, 0x0, Math['max'](0x0, this['rad']), '#bbc94d'), _0x4ac9cf['restore']();
}
}, _0x1dd8d7['prototype']['effect_aloeveraHeal'] = function (_0x4d7274) {
var _0x54a07c = this['flag_eff_aloeveraHealing'] ? 0.9 : 0x0;
if (this['effA_aloeveraHealing'] == undefined) this['effA_aloeveraHealing'] = 0x0;
this['effA_aloeveraHealing'] += (_0x54a07c - this['effA_aloeveraHealing']) * 0.1;
if (this['effA_aloeveraHealing'] > 0.01) {
    var _0x5dae89 = 0.3,
        _0xdfc8e5 = 0.8,
        _0x5217d4 = 0.2,
        _0x21fa2e = 0.4,
        _0xaf7deb = 0.5 * (_0x21fa2e - _0x5217d4),
        _0x1eb409 = _0x5217d4 + _0xaf7deb + _0xaf7deb * Math['sin'](0x2 * Math['PI'] / _0xdfc8e5 * ((_0x397f50 - this['spawnTime']) / 0x3e8));
    if (_0x4d7274) {
        _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] *= _0x1eb409;
        var _0x2a32b7 = 2.6;
        _0x486a28(0x0, 0x0, this['rad'] + _0x2a32b7 * this['effA_aloeveraHealing'], '#bbc94d'), _0x4ac9cf['restore']();
    } else _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] *= _0x1eb409, _0x486a28(0x0, 0x0, Math['max'](0x0, this['rad']), '#bbc94d'), _0x4ac9cf['restore']();
}
}, _0x1dd8d7['prototype']['effect_sweatPoisoned'] = function () {
var _0x3ea78e = this['flag_eff_sweatPoisoned'] ? 0x1 : 0x0;
if (this['effA_sweatPoisoned'] == undefined) this['effA_sweatPoisoned'] = 0x0;
this['effA_sweatPoisoned'] += (_0x3ea78e - this['effA_sweatPoisoned']) * 0.1;
if (this['effA_sweatPoisoned'] > 0.01) {
    _0x4ac9cf['save']();
    var _0xc4dd81 = 0.3,
        _0x124c11 = 1.2,
        _0x136fef = 0.3,
        _0x482319 = 0x1,
        _0x5a284c = 0.5 * (_0x482319 - _0x136fef);
    _0x4ac9cf['globalAlpha'] *= _0x136fef + _0x5a284c + _0x5a284c * Math['sin'](0x2 * Math['PI'] / _0x124c11 * ((_0x397f50 - this['spawnTime']) / 0x3e8)), _0x486a28(0x0, 0x0, Math['max'](0x0, this['rad'] - this['outlineW']), _0x55d22b), _0x4ac9cf['restore']();
}
}, _0x1dd8d7['prototype']['skinRad'] = 0x0, _0x1dd8d7['prototype']['skinScale'] = 0x0, _0x1dd8d7['prototype']['setSkinScale'] = function () {
var _0x58310d = 0x1f4 / 0x154,
    _0x5589d7 = this['rad'] - this['outlineW'];
this['skinRad'] = _0x5589d7, this['skinScale'] = _0x58310d;
}, _0x1dd8d7['prototype']['getAniRadius'] = function (_0x4fdd19) {
if (this['flag_usingDiveAbility']) return _0x4fdd19 * 0.7;
return _0x4fdd19;
}, _0x1dd8d7['prototype']['basicDrawSkinImg'] = function () {
this['setSkinScale']();
var _0x31b6f6 = this['skinScale'],
    _0x510490 = this['getAniRadius'](this['skinRad']);
this['loadedSkinImg'] ? _0x4ac9cf['drawImage'](this['loadedSkinImg'], -_0x510490 * _0x31b6f6, -_0x510490 * _0x31b6f6, 0x2 * _0x510490 * _0x31b6f6, 0x2 * _0x510490 * _0x31b6f6) : (_0x4ac9cf['fillStyle'] = this['skinNotLoadedColor'], _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - this['outlineW']), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill']());
}, _0x1dd8d7['prototype']['preLoad'] = function () {}, _0x1dd8d7['prototype']['shiverF'] = 0.02, _0x1dd8d7['prototype']['drawSkinImg'] = function () {
this['basicDrawSkinImg'](), this['drawSkinCustomization']();
}, _0x1dd8d7['prototype']['drawSkinCustomization'] = function () {}, _0x1dd8d7['prototype']['drawOnTopOfSkinImg'] = function () {
if (!this['loadedSkinImg']) {
    _0x4ac9cf['save']();
    var _0x67000b = Math['max'](0x1, this['rad'] / 0x19);
    _0x4ac9cf['scale'](_0x67000b, _0x67000b), this['drawEyeAtPos'](0x6, this['rad'] * 0.32), this['drawEyeAtPos'](-0x6, this['rad'] * 0.32), _0x4ac9cf['restore']();
}
if (this['animalType'] == _0x2fc4c1) {
    _0x4ac9cf['fillStyle'] = '#E5CF79', _0x4ac9cf['beginPath']();
    var _0x271624 = this['rad'] - this['outlineW'],
        _0x1588f1 = _0x271624 * 0x1;
    _0x4ac9cf['moveTo'](_0x271624 * -0.16, _0x1588f1), _0x4ac9cf['lineTo'](0x0, _0x271624 * (this['flag_usingAbility'] ? 1.41 : 0.7)), _0x4ac9cf['lineTo'](_0x271624 * 0.153, _0x1588f1), _0x4ac9cf['closePath'](), _0x4ac9cf['fill']();
}
if (this['flag_usingAbility'] && this['animalType'] == _0x1080d7) {
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1 - this['underwaterA'];
    var _0x4f17fa = this['getSkinImageObj']('img/snowball.png');
    if (_0x4f17fa) {
        var _0x271624 = this['rad'];
        _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x4f17fa, -_0x271624, -_0x271624, 0x2 * _0x271624, 0x2 * _0x271624);
    } else this['drawOutlinedCircle']('', 'white');
    _0x4ac9cf['restore']();
}
}, _0x1dd8d7['prototype']['drawUnderEffects'] = function () {
if (this['flag_eff_dirty']) {
    if (this['effA_dirtStuck'] > 0.01) {
        _0x4ac9cf['save']();
        var _0x32b353 = 0.9;
        _0x4ac9cf['globalAlpha'] *= _0x32b353 * this['effA_dirtStuck'];
        var _0x557ef6 = this['getImageObjForPath']('img/dirt/dirt_below.png');
        if (_0x557ef6) {
            var _0x3ab201 = this['skinScale'],
                _0xf26175 = this['skinRad'] - 0x2;
            _0x4ac9cf['drawImage'](_0x557ef6, -_0xf26175 * _0x3ab201, -_0xf26175 * _0x3ab201, 0x2 * _0xf26175 * _0x3ab201, 0x2 * _0xf26175 * _0x3ab201);
        }
        _0x4ac9cf['restore']();
    }
}
};
var _0x41b45d = 0x1,
_0x144309 = 0.5;
_0x1dd8d7['prototype']['maskStartT'] = 0x0, _0x1dd8d7['prototype']['wasWearingMask'] = ![], _0x1dd8d7['prototype']['drawProtectiveMask'] = function () {
if (!this['flag_eff_wearingMask']) {
    this['wasWearingMask'] = ![];
    return;
}!this['wasWearingMask'] && (this['wasWearingMask'] = !![], this['maskStartT'] = _0x397f50);
_0x4ac9cf['save']();
var _0x321d77 = this['getSkinImageObj']('img/viralpandemic/mask.png'),
    _0x4ecb7b = this['getSkinImageObj']('img/viralpandemic/mask-outline.png');
if (_0x321d77 && _0x4ecb7b) {
    var _0x1ad065 = this['rad'] * 0.7 + this['rPer'],
        _0x402219 = _0x1ad065 * 0.1;
    if (this['animalType'] == _0x4cc8de) _0x402219 = _0x1ad065 * 0.2;
    else {
        if (this['animalType'] == _0x2e747e) _0x1ad065 = this['rad'] * 0.6, _0x402219 = _0x1ad065 * 0x1;
        else {
            if (this['animalType'] == _0x3a6f75 || this['animalType'] == _0x7820e || this['animalType'] == _0x1080d7 || this['animalType'] == _0x108db6) _0x402219 = _0x1ad065 * -0.05;
            else {
                if (this['animalType'] == _0x484a15) _0x402219 = _0x1ad065 * -0.2;
                else {
                    if (this['animalType'] == _0xf85b36) _0x402219 = _0x1ad065 * 0x0;
                    else {
                        if (this['animalType'] == _0x7fee1e || this['animalType'] == _0x189adc || this['animalType'] == _0x15db61 || this['animalType'] == _0x546d88 || this['animalType'] == _0x5b01a7) _0x1ad065 = this['rad'] * 0.5, _0x402219 = _0x1ad065 * 0.4;
                        else {
                            if (this['animalType'] == _0x12d178) _0x1ad065 = this['rad'] * 0.5, _0x402219 = _0x1ad065 * 0.6, this['flag_usingAbility'] && (_0x402219 = _0x1ad065 * 1.3);
                            else {
                                if (this['animalType'] == _0x37eeab) _0x1ad065 = this['rad'] * 0.55, _0x402219 = _0x1ad065 * 0.5, this['flag_usingAbility'] && (_0x402219 = _0x1ad065 * 0x1);
                                else {
                                    if (this['animalType'] == _0x398a37) {
                                        _0x1ad065 = this['rad'] * 0.43, _0x402219 = _0x1ad065 * 0x1;
                                        if (this['flag_usingAbility']) {
                                            if (this['specType'] == 0x1) _0x1ad065 = this['rad'] * 0.45, _0x402219 = _0x1ad065 * 1.3;
                                            else this['specType'] == 0x2 && (_0x1ad065 = this['rad'] * 0.5, _0x402219 = _0x1ad065 * 1.9);
                                        }
                                    } else {
                                        if (this['animalType'] == _0x4ba38f) _0x1ad065 = this['rad'] * 0.5, _0x402219 = _0x1ad065 * 0.55, this['flag_usingAbility'] && (_0x402219 = _0x1ad065 * 0.8);
                                        else {
                                            if (this['animalType'] == _0x375310) _0x1ad065 = this['rad'] * 0.55, _0x402219 = _0x1ad065 * 0x0, this['flag_usingAbility'] && (_0x402219 = _0x1ad065 * 0.5);
                                            else {
                                                if (this['animalType'] == _0x5baef5) _0x1ad065 = this['rad'] * 0.4, _0x402219 = _0x1ad065 * 1.1, this['flag_usingAbility'] && (_0x1ad065 = this['rad'] * 0.5, _0x402219 = _0x1ad065 * _0x41b45d);
                                                else {
                                                    if (this['animalType'] == _0x12b837) _0x1ad065 = this['rad'] * 0.5, _0x402219 = _0x1ad065 * 0.5, this['flag_usingAbility'] && (_0x1ad065 = this['rad'] * 0.5, _0x402219 = _0x1ad065 * 0x1);
                                                    else {
                                                        if (this['animalType'] == _0x17b74d) _0x1ad065 = this['rad'] * 0.4, _0x402219 = _0x1ad065 * 0x1, this['flag_usingAbility'] && (console['log'](this['specType']), _0x1ad065 = this['rad'] * 0.5, _0x402219 = _0x1ad065 * 0x1);
                                                        else {
                                                            if (this['animalType'] == _0x4b419b) {
                                                                _0x1ad065 = this['rad'] * 0.4, _0x402219 = _0x1ad065 * 0x1;
                                                                if (this['flag_usingAbility']) {
                                                                    _0x4ac9cf['restore']();
                                                                    return;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    var _0x47aed2 = 0x1,
        _0x3cf99e = (_0x397f50 - this['maskStartT']) / 0x3e8;
    if (_0x3cf99e > 0x50) var _0x1ac7dc = 0x1,
        _0xd5b077 = 0.3,
        _0x490de7 = 0.5,
        _0x44e137 = 0.5 * (_0x490de7 - _0xd5b077),
        _0x47aed2 = _0xd5b077 + _0x44e137 + _0x44e137 * Math['sin'](0x2 * Math['PI'] / _0x1ac7dc * (_0x397f50 / 0x3e8));
    var _0x5f4883 = 0.8;
    if (this['flag_inHidingHole']) _0x5f4883 = 0.6;
    else {
        if (this['flag_underWater']) _0x5f4883 = this['idealOp'];
    }
    _0x4ac9cf['globalAlpha'] = _0x5f4883 * _0x47aed2, _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x321d77, -_0x1ad065, _0x402219, 0x2 * _0x1ad065, 0x2 * _0x1ad065), _0x4ac9cf['drawImage'](_0x4ecb7b, -_0x1ad065, _0x402219, 0x2 * _0x1ad065, 0x2 * _0x1ad065);
}
_0x4ac9cf['restore']();
}, _0x1dd8d7['prototype']['drawTopEffects'] = function () {
this['effect_aloeveraHeal']();
var _0x49f748 = this['flag_eff_stunned'] ? 0x1 : 0x0;
this['stunA'] += (_0x49f748 - this['stunA']) * 0.1;
if (this['stunA'] > 0.01) {
    _0x4ac9cf['save']();
    var _0x3a8392 = 2.5,
        _0x476fb8 = _0x397f50 % (_0x3a8392 * 0x3e8) / (_0x3a8392 * 0x3e8);
    _0x4ac9cf['rotate'](_0x476fb8 * (0x2 * Math['PI'])), _0x4ac9cf['globalAlpha'] *= this['stunA'];
    var _0x3498ed = this['rad'] * 0.2,
        _0x2abd3a = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x5751eb = 0x1,
        _0x3572f7 = 0.5 + _0x3498ed * 0.07,
        _0x32bb15 = _0x3572f7 * Math['sin'](0x2 * Math['PI'] / _0x5751eb * _0x2abd3a);
    _0x4ac9cf['fillStyle'] = '#F3D444', _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * -0.22, this['rad'] * -0.22, Math['max'](0x0, _0x3498ed + _0x32bb15), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.22, this['rad'] * -0.22, Math['max'](0x0, _0x3498ed - _0x32bb15), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.22, this['rad'] * 0.22, Math['max'](0x0, _0x3498ed + _0x32bb15), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * -0.22, this['rad'] * 0.22, Math['max'](0x0, _0x3498ed - _0x32bb15), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['restore']();
}
var _0x49f748 = this['flag_eff_onFire'] ? 0x1 : 0x0;
this['onFireEffA'] += (_0x49f748 - this['onFireEffA']) * 0.1;
if (this['onFireEffA'] > 0.01) {
    var _0x5751eb = 0x1,
        _0x315414 = 0.15,
        _0x2ae7ca = 0.4,
        _0x5e0af0 = 0.5 * (_0x2ae7ca - _0x315414),
        _0x3b561f = _0x315414 + _0x5e0af0 + _0x5e0af0 * Math['sin'](0x2 * Math['PI'] / _0x5751eb * (_0x397f50 / 0x3e8));
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] *= _0x3b561f * this['onFireEffA'], _0x486a28(0x0, 0x0, Math['max'](0x0, this['rad']), 'orange'), _0x4ac9cf['restore']();
    var _0x52bad1 = 0x2;
    if (!(_0x25ea67 == 0x2)) {
        var _0x5751eb = 0x1,
            _0x315414 = 0.5,
            _0x2ae7ca = 0x1,
            _0x5e0af0 = 0.5 * (_0x2ae7ca - _0x315414),
            _0x32bb15 = _0x315414 + _0x5e0af0 + _0x5e0af0 * Math['sin'](0x2 * Math['PI'] / _0x5751eb * (_0x397f50 / 0x3e8)),
            _0x2cbdc1 = Math['trunc'](_0x397f50 / 0x64) % 0x5,
            _0x2e7f30 = Math['trunc'](_0x397f50 / 0x96) % 0x5,
            _0x20a081 = this['getImageObjForPath']('gameobj/70/0/' + _0x2cbdc1 + '.png', _0x52bad1),
            _0x53f96c = this['getImageObjForPath']('gameobj/70/0/' + _0x2e7f30 + '.png', _0x52bad1);
        if (_0x20a081 || _0x53f96c) {
            var _0x453cb6 = 0x0 - this['rad'] * 0.3,
                _0x4505ba = this['rad'] * 0.2 - this['rad'] * 0.3,
                _0x50f06d = this['rad'] * 0x1 * (0x2 + _0x32bb15 * 0x2) / 0x3,
                _0x2bc10a = this['rad'] * 0x1 * _0x32bb15,
                _0x4db186 = 0.5,
                _0x1d1e85 = 0.95;
            _0x4ac9cf['save'](), _0x20a081 && (_0x4ac9cf['globalAlpha'] *= this['onFireEffA'] * _0x32bb15, _0x4ac9cf['drawImage'](_0x20a081, _0x453cb6 + _0x50f06d * -_0x4db186, _0x4505ba + _0x2bc10a * -_0x1d1e85, _0x50f06d, _0x2bc10a)), _0x53f96c && (_0x4ac9cf['globalAlpha'] *= this['onFireEffA'] * _0x32bb15, _0x4ac9cf['drawImage'](_0x53f96c, _0x453cb6 + this['rad'] * 0.5 + _0x50f06d * -_0x4db186, _0x4505ba + this['rad'] * 0.5 + _0x2bc10a * -_0x1d1e85, _0x50f06d, _0x2bc10a)), _0x4ac9cf['restore']();
        }
    } else {
        var _0x5751eb = 0x1,
            _0x315414 = 0.5,
            _0x2ae7ca = 0x1,
            _0x5e0af0 = 0.5 * (_0x2ae7ca - _0x315414),
            _0x32bb15 = _0x315414 + _0x5e0af0 + _0x5e0af0 * Math['sin'](0x2 * Math['PI'] / _0x5751eb * (_0x397f50 / 0x3e8)),
            _0x20a081 = this['getImageObjForPath']('gameobj/70/0.png', _0x52bad1);
        if (_0x20a081) {
            var _0x453cb6 = 0x0 - this['rad'] * 0.3,
                _0x4505ba = this['rad'] * 0.2 - this['rad'] * 0.3,
                _0x50f06d = this['rad'] * 0x1 * (0x2 + _0x32bb15 * 0x2) / 0x3,
                _0x2bc10a = this['rad'] * 0x1 * _0x32bb15,
                _0x4db186 = 0.5,
                _0x1d1e85 = 0.95;
            _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] *= this['onFireEffA'] * _0x32bb15, _0x4ac9cf['drawImage'](_0x20a081, _0x453cb6 + _0x50f06d * -_0x4db186, _0x4505ba + _0x2bc10a * -_0x1d1e85, _0x50f06d, _0x2bc10a), _0x4ac9cf['globalAlpha'] *= this['onFireEffA'] * _0x32bb15, _0x4ac9cf['drawImage'](_0x20a081, _0x453cb6 + this['rad'] * 0.5 + _0x50f06d * -_0x4db186, _0x4505ba + this['rad'] * 0.5 + _0x2bc10a * -_0x1d1e85, _0x50f06d, _0x2bc10a), _0x4ac9cf['restore']();
        }
    }
}
if (this['frozenEffA'] > 0.01 && this['flag_eff_frozen']) {
    _0x4ac9cf['save']();
    var _0x3a8392 = 0x7,
        _0x476fb8 = _0x397f50 % (_0x3a8392 * 0x3e8) / (_0x3a8392 * 0x3e8);
    _0x4ac9cf['rotate'](_0x476fb8 * (0x2 * Math['PI'])), _0x4ac9cf['globalAlpha'] *= this['frozenEffA'];
    var _0x3498ed = this['rad'] * 0.2,
        _0x2abd3a = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x5751eb = 0x1,
        _0x3572f7 = 0.5 + _0x3498ed * 0.07,
        _0x32bb15 = _0x3572f7 * Math['sin'](0x2 * Math['PI'] / _0x5751eb * _0x2abd3a);
    _0x4ac9cf['fillStyle'] = 'white';
    var _0x1df776 = this['rad'] * 0.27;
    _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-_0x1df776, -_0x1df776, Math['max'](0x0, _0x3498ed + _0x32bb15), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](_0x1df776, -_0x1df776, Math['max'](0x0, _0x3498ed - _0x32bb15), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](_0x1df776, _0x1df776, Math['max'](0x0, _0x3498ed + _0x32bb15), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-_0x1df776, _0x1df776, Math['max'](0x0, _0x3498ed - _0x32bb15), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['restore']();
}
if (this['frozenEffA'] > 0.01) {
    _0x4ac9cf['save']();
    var _0x279e67 = 0.3;
    _0x4ac9cf['globalAlpha'] *= _0x279e67 * this['frozenEffA'], _0x486a28(0x0, 0x0, Math['max'](0x0, this['rad'] - this['outlineW']), 'white'), _0x4ac9cf['restore']();
}
if (this['effA_healing'] > 0.01) {
    _0x4ac9cf['save']();
    var _0x279e67 = 0.3;
    _0x4ac9cf['globalAlpha'] *= _0x279e67 * this['effA_healing'], _0x486a28(0x0, 0x0, Math['max'](0x0, this['rad'] - this['outlineW']), '#ef24ed'), _0x4ac9cf['restore']();
}
this['effect_sweatPoisoned']();
if (this['effA_hot'] > 0.01) {
    _0x4ac9cf['save']();
    var _0x279e67 = 0.3,
        _0x5751eb = 1.2,
        _0x315414 = 0.3,
        _0x2ae7ca = 0x1,
        _0x5e0af0 = 0.5 * (_0x2ae7ca - _0x315414);
    _0x4ac9cf['globalAlpha'] *= _0x315414 + _0x5e0af0 + _0x5e0af0 * Math['sin'](0x2 * Math['PI'] / _0x5751eb * ((_0x397f50 - this['spawnTime']) / 0x3e8)), _0x486a28(0x0, 0x0, Math['max'](0x0, this['rad'] - this['outlineW']), 'rgba(249, 212, 77, 0.3)'), _0x4ac9cf['restore']();
}
if (this['effA_poison'] > 0.01) {
    _0x4ac9cf['save']();
    var _0x279e67 = 0.3;
    _0x4ac9cf['globalAlpha'] *= _0x279e67 * this['effA_poison'];
    var _0x5751eb = 1.2,
        _0x315414 = 0.3,
        _0x2ae7ca = 0x1,
        _0x5e0af0 = 0.5 * (_0x2ae7ca - _0x315414);
    _0x4ac9cf['globalAlpha'] *= _0x315414 + _0x5e0af0 + _0x5e0af0 * Math['sin'](0x2 * Math['PI'] / _0x5751eb * ((_0x397f50 - this['spawnTime']) / 0x3e8)), _0x486a28(0x0, 0x0, Math['max'](0x0, this['rad'] - this['outlineW']), '#9FDA00'), _0x4ac9cf['restore']();
}
var _0x49f748 = this['flag_eff_bleeding'] ? 0.8 : 0x0;
this['effA_bleeding'] += (_0x49f748 - this['effA_bleeding']) * 0.1;
if (this['effA_bleeding'] > 0.01) {
    _0x4ac9cf['save']();
    var _0x5751eb = 1.2,
        _0x315414 = 0.3,
        _0x2ae7ca = 0x1,
        _0x5e0af0 = 0.3 * (_0x2ae7ca - _0x315414);
    _0x4ac9cf['globalAlpha'] *= _0x315414 + _0x5e0af0 + _0x5e0af0 * Math['sin'](0x2 * Math['PI'] / _0x5751eb * ((_0x397f50 - this['spawnTime']) / 0x3e8)), _0x4ac9cf['globalAlpha'] *= this['effA_bleeding'];
    var _0x358e83 = -2.6;
    _0x486a28(0x0, 0x0, this['rad'] + _0x358e83 * this['effA_bleeding'], 'red'), _0x4ac9cf['restore']();
}
var _0x49f748 = this['flag_eff_slimed'] ? 0.8 : 0x0;
this['effA_slimed'] += (_0x49f748 - this['effA_slimed']) * 0.1;
if (this['effA_slimed'] > 0.01) {
    _0x4ac9cf['save']();
    var _0x5751eb = 1.2,
        _0x315414 = 0.3,
        _0x2ae7ca = 0x1,
        _0x5e0af0 = 0.3 * (_0x2ae7ca - _0x315414);
    _0x4ac9cf['globalAlpha'] *= _0x315414 + _0x5e0af0 + _0x5e0af0 * Math['sin'](0x2 * Math['PI'] / _0x5751eb * ((_0x397f50 - this['spawnTime']) / 0x3e8)), _0x4ac9cf['globalAlpha'] *= this['effA_slimed'];
    var _0x358e83 = -2.6;
    _0x486a28(0x0, 0x0, this['rad'] + _0x358e83 * this['effA_slimed'], 'grey'), _0x4ac9cf['restore']();
}
var _0x49f748 = this['flag_eff_stunk'] ? 0.8 : 0x0;
this['effA_stunk'] += (_0x49f748 - this['effA_stunk']) * 0.1;
if (this['effA_stunk'] > 0.01) {
    _0x4ac9cf['save']();
    var _0x5751eb = 1.2,
        _0x315414 = 0.3,
        _0x2ae7ca = 0x1,
        _0x5e0af0 = 0.3 * (_0x2ae7ca - _0x315414);
    _0x4ac9cf['globalAlpha'] *= _0x315414 + _0x5e0af0 + _0x5e0af0 * Math['sin'](0x2 * Math['PI'] / _0x5751eb * ((_0x397f50 - this['spawnTime']) / 0x3e8)), _0x4ac9cf['globalAlpha'] *= this['effA_stunk'];
    var _0x358e83 = -2.6;
    _0x486a28(0x0, 0x0, this['rad'] + _0x358e83 * this['effA_stunk'], 'brown'), _0x4ac9cf['restore']();
}
if (this['animalType'] == _0x484a15 && this['flag_usingAbility']) {
    var _0x5751eb = 0.75,
        _0x3572f7 = 0x1,
        _0x32bb15 = _0x3572f7 * Math['sin'](0x2 * Math['PI'] / _0x5751eb * _0x2abd3a),
        _0x19ac48 = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] *= 0.8 - 0.2 * _0x32bb15, _0x486a28(this['rad'] * 0.15, -this['rad'] * 1.27, this['rad'] * (0.1 + 0.05 * _0x32bb15), '#efefef'), _0x486a28(-this['rad'] * 0.15, -this['rad'] * 1.27, this['rad'] * (0.1 - 0.05 * _0x32bb15), '#efefef'), _0x4ac9cf['globalAlpha'] = _0x19ac48;
}
var _0x49f748 = this['flag_webStuck'] ? 0x1 : 0x0;
this['effA_webStuck'] += (_0x49f748 - this['effA_webStuck']) * 0.02;
if (this['effA_webStuck'] > 0.01) {
    _0x4ac9cf['save']();
    var _0x279e67 = 0.9;
    _0x4ac9cf['globalAlpha'] *= _0x279e67 * this['effA_webStuck'];
    var _0x20a081 = this['getImageObjForPath']('img/web/' + this['eff_webStuckType'] + '/spiderWeb_stuck.png');
    if (_0x20a081) {
        var _0x53b7ec = this['rad'] * 1.3;
        _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x20a081, -_0x53b7ec, -_0x53b7ec, 0x2 * _0x53b7ec, 0x2 * _0x53b7ec);
    }
    _0x4ac9cf['restore']();
}
this['effectDirt']();
var _0x49f748 = this['flag_constricted'] ? 0x1 : 0x0;
this['effA_constricted'] += (_0x49f748 - this['effA_constricted']) * 0.04;
if (this['effA_constricted'] > 0.01) {
    _0x4ac9cf['save']();
    var _0x279e67 = 0.9;
    _0x4ac9cf['globalAlpha'] *= _0x279e67 * this['effA_constricted'];
    var _0x4b798b = 'skins/land/boaconstrictor/' + this['eff_constrictedSpecies'];
    if (this['eff_constrictedSubSpecies'] !== undefined && this['eff_constrictedSubSpecies'] > 0x0) _0x4b798b += '/' + this['eff_constrictedSubSpecies'];
    var _0x3a929d = this['eff_constrictedSpecies'] === 0x1 || this['eff_constrictedSpecies'] === 0x2 ? 0x1 : this['mopeSeasonID'];
    console['log']('constrict img: ' + _0x4b798b);
    var _0x20a081 = this['getSkinImageObjForSeason'](_0x4b798b + '/constrict.png', _0x3a929d);
    if (_0x20a081) {
        var _0x53b7ec = this['rad'] * 1.3;
        _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x20a081, -_0x53b7ec, -_0x53b7ec, 0x2 * _0x53b7ec, 0x2 * _0x53b7ec);
    }
    _0x4ac9cf['restore']();
}
this['drawProtectiveMask']();
}, _0x1dd8d7['prototype']['effectDirt'] = function () {
if (this['effA_dirtStuck'] == undefined) this['effA_dirtStuck'] = 0x0;
var _0x3492b4 = this['flag_eff_dirty'] ? 0x1 : 0x0;
this['effA_dirtStuck'] += (_0x3492b4 - this['effA_dirtStuck']) * 0.02;
if (this['effA_dirtStuck'] > 0.01) {
    _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['angle']);
    var _0x5d3b5e = 0.9;
    _0x4ac9cf['globalAlpha'] *= _0x5d3b5e * this['effA_dirtStuck'];
    var _0x385589 = this['getImageObjForPath']('img/dirt/' + this['eff_dirtType'] + '/0.png');
    if (_0x385589) {
        var _0x3474dc = this['skinScale'],
            _0x48809f = this['skinRad'];
        _0x4ac9cf['drawImage'](_0x385589, -_0x48809f * _0x3474dc, -_0x48809f * _0x3474dc, 0x2 * _0x48809f * _0x3474dc, 0x2 * _0x48809f * _0x3474dc);
    }
    var _0x385589 = this['getImageObjForPath']('img/dirt/' + this['eff_dirtType'] + '/1.png');
    if (_0x385589) {
        var _0x3474dc = this['skinScale'],
            _0x48809f = this['skinRad'];
        _0x4ac9cf['drawImage'](_0x385589, -_0x48809f * _0x3474dc, -_0x48809f * _0x3474dc, 0x2 * _0x48809f * _0x3474dc, 0x2 * _0x48809f * _0x3474dc);
    }
    _0x4ac9cf['restore']();
}
}, _0x1dd8d7['prototype']['getSpeciesPath'] = function (_0xaf5fcd) {
return _0xaf5fcd + '/' + this['animalSpecies'];
}, _0x1dd8d7['prototype']['getWing'] = function (_0x76537e, _0x109e6b, _0x239b41) {
var _0x2ec6ad = 'skins/' + (_0x239b41 ? this['getSpeciesPath'](_0x76537e) + '/' : _0x76537e + '/');
return _0x2ec6ad += _0x76537e + '_wing' + _0x109e6b + '.png', _0x2ec6ad;
}, _0x1dd8d7['prototype']['getHead'] = function (_0x243e66, _0x57713f) {
var _0x284997 = 'skins/' + (_0x57713f ? this['getSpeciesPath'](_0x243e66) + '/' : _0x243e66 + '/');
return _0x284997 += _0x243e66 + '_head.png', _0x284997;
}, _0x1dd8d7['prototype']['getSkinName'] = function () {
var _0x4a30fa = this['skinImgName'];
switch (this['animalType']) {
case _0x2ee5ae:
case _0xc6c00:
case _0x31cc16:
case _0x41ea25:
case _0x3aa9b0:
case _0x204cad:
case _0x2cb4e3:
case _0x414bbd:
    var _0x5d6061 = '';
    if (this['flag_usingAbility']) _0x4a30fa = _0x5d6061 + _0x4a30fa + '2';
    break;
case _0x342f2b:
    this['z'] = this['z'] * 0x2;
    if (this['flag_usingAbility'] && this['specType'] == 0x4) _0x4a30fa = _0x4a30fa + '2';
    break;
}
return this['getPremiumSkin'](_0x4a30fa);
}, _0x1dd8d7['prototype']['getPremiumSkinFolder'] = function () {
switch (this['animalPremiumSkin']) {
case 0x1:
    return 'premium/golden/';
case 0x2:
    return 'premium/locked/';
}
return '';
}, _0x1dd8d7['prototype']['getPremiumSkin'] = function (_0xc52361) {
return this['getPremiumSkinFolder']() + _0xc52361;
}, _0x1dd8d7['prototype']['onAnimalSpeciesSet'] = function () {}, _0x1dd8d7['prototype']['setObjTypes'] = function (_0x37f7de, _0x2f05a6) {
this['oType'] = _0x37f7de, this['animalType'] = _0x2f05a6;
}, _0x1dd8d7['prototype']['readCustomData_onNewlyVisible'] = function (_0x4f6545) {
_0x1dd8d7['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x4f6545);
var _0x227f72 = _0x4f6545['readString']();
this['nickName'] = _0x227f72 && _0x227f72['length'] > 0x0 ? _0x227f72 : 'mope.io', this['animalSpecies'] = _0x4f6545['readUInt8'](), this['animalSubSpecies'] = _0x4f6545['readUInt8'](), this['animalPremiumSkin'] = _0x4f6545['readUInt8'](), this['skinThemeID'] = _0x4f6545['readUInt8'](), this['mopeSeasonID'] = _0x4f6545['readUInt8'](), this['onAnimalSpeciesSet']();
this['animalPremiumSkin'] > 0x0 && this['setSparkleInterval'](_0x5a9e0b(0x5, 0xa), _0x5a9e0b(0x2, 0x3));
this['setNick'](this['nickName']);
var _0x4aea17 = _0x4f6545['readBitGroup']();
this['readUpdatedFlags'](_0x4aea17), this['flag_webStuck'] && this['readUpdatedProperty'](_0x7595, _0x4f6545), this['readUpdatedProperty'](_0x492ddc, _0x4f6545);
}, _0x1dd8d7['prototype']['custom_canvas'] = null, _0x1dd8d7['prototype']['drawCanvas'] = function () {
if (!this['custom_canvas']) {
    this['custom_canvas'] = document['createElement']('canvas');
    var _0x1fb198 = this['rad'] * 0x14,
        _0x150a27 = this['rad'] * 0x14;
    this['custom_canvas']['width'] = _0x1fb198, this['custom_canvas']['height'] = _0x150a27;
    var _0x57394d = this['custom_canvas']['getContext']('2d');
    _0x57394d['save'](), _0x57394d['filter'] = 'blur(4px)', _0x57394d['globalAlpha'] = 0x1, _0x57394d['fillStyle'] = 'black', _0x57394d['fillRect'](0x0, 0x0, this['custom_canvas']['width'] * 0x2, this['custom_canvas']['height'] * 0x2), _0x57394d['globalCompositeOperation'] = 'xor', _0x57394d['beginPath'](), _0x57394d['arc'](_0x1fb198 / 0x2, _0x1fb198 / 0x2, this['rad'] + 0x5, 0x0, 0x2 * Math['PI']), _0x57394d['fillStyle'] = 'red', _0x57394d['fill'](), _0x57394d['restore']();
}
this['custom_canvas'] != null && (_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.5, _0x4ac9cf['drawImage'](this['custom_canvas'], -this['custom_canvas']['width'] / 0x2, -this['custom_canvas']['height'] / 0x2, this['custom_canvas']['width'], this['custom_canvas']['height']), _0x4ac9cf['restore']());
}, _0x1dd8d7['prototype']['updateAngle'] = function (_0x396772) {
var _0x6eca2e = _0x142401(_0x396772 - 0x5a);
this['angleDelta'] = _0x9e3352(this['angle'], _0x6eca2e), this['oAngle'] = this['angle'], this['firstPosUpd'] && (this['oAngle'] = this['angle'] = _0x6eca2e, this['angleDelta'] = 0x0);
}, _0x1dd8d7['prototype']['readUpdatedFlags'] = function (_0x435bc6) {
_0x1dd8d7['superClass']['prototype']['readUpdatedFlags']['call'](this, _0x435bc6), this['flag_lowWat'] = _0x435bc6['getBool'](), this['flag_underWater'] = _0x435bc6['getBool'](), this['flag_usingDiveAbility'] = _0x435bc6['getBool'](), this['flag_eff_invincible'] = _0x435bc6['getBool'](), this['flag_usingAbility'] = _0x435bc6['getBool'](), this['flag_tailBitten'] = _0x435bc6['getBool'](), this['flag_eff_stunned'] = _0x435bc6['getBool'](), this['flag_iceSliding'] = _0x435bc6['getBool'](), this['flag_eff_frozen'] = _0x435bc6['getBool'](), this['flag_eff_onFire'] = _0x435bc6['getBool'](), this['flag_eff_healing'] = _0x435bc6['getBool'](), this['flag_eff_poison'] = _0x435bc6['getBool'](), this['flag_constricted'] = _0x435bc6['getBool'](), this['flag_webStuck'] = _0x435bc6['getBool'](), this['flag_stealth'] = _0x435bc6['getBool'](), this['flag_eff_bleeding'] = _0x435bc6['getBool'](), this['flag_flying'] = _0x435bc6['getBool'](), this['flag_isGrabbed'] = _0x435bc6['getBool'](), this['flag_eff_aniInClaws'] = _0x435bc6['getBool'](), this['flag_eff_stunk'] = _0x435bc6['getBool'](), this['flag_cold'] = _0x435bc6['getBool'](), this['flag_inWater'] = _0x435bc6['getBool'](), this['flag_inLava'] = _0x435bc6['getBool'](), this['flag_canClimbHill'] = _0x435bc6['getBool'](), this['flag_isClimbingHill'] = _0x435bc6['getBool'](), this['flag_isDevMode'] = _0x435bc6['getBool'](), this['flag_eff_slimed'] = _0x435bc6['getBool'](), this['flag_eff_wobbling'] = _0x435bc6['getBool'](), this['flag_eff_hot'] = _0x435bc6['getBool'](), this['flag_eff_sweatPoisoned'] = _0x435bc6['getBool'](), this['flag_eff_shivering'] = _0x435bc6['getBool'](), this['flag_inHidingHole'] = _0x435bc6['getBool'](), this['flag_eff_grabbedByFlytrap'] = _0x435bc6['getBool'](), this['flag_eff_aloeveraHealing'] = _0x435bc6['getBool'](), this['flag_eff_tossedInAir'] = _0x435bc6['getBool'](), this['flag_eff_isOnSpiderWeb'] = _0x435bc6['getBool'](), this['flag_fliesLikeDragon'] = _0x435bc6['getBool'](), this['flag_eff_isInMud'] = _0x435bc6['getBool'](), this['flag_eff_statue'] = _0x435bc6['getBool'](), this['flag_eff_isOnTree'] = _0x435bc6['getBool'](), this['flag_eff_isUnderTree'] = _0x435bc6['getBool'](), this['flag_speared'] = _0x435bc6['getBool'](), this['flag_eff_dirty'] = _0x435bc6['getBool'](), this['flag_eff_virusInfection'] = _0x435bc6['getBool'](), this['flag_eff_wearingMask'] = _0x435bc6['getBool'](), this['flag_eff_sanitized'] = _0x435bc6['getBool'](), this['flag_viewing1v1Invite'] = _0x435bc6['getBool'](), this['flag_can1v1'] = _0x435bc6['getBool'](), this['flag_isInArena'] = _0x435bc6['getBool']();
if (this['flag_isDevMode']) this['flag_hideDevPrint'] = _0x435bc6['getBool']();
}, _0x1dd8d7['prototype']['readUpdatedProperty'] = function (_0x317200, _0x43d781) {
if (_0x317200 == _0x142022) {
    this['wins1v1'] = _0x43d781['readUInt16']();
    if (_0x58da1e && this['flag_can1v1']) {
        let _0x32aad7 = '\x0a(wins:' + this['wins1v1'] + ')';
        this['nickTXT']['setText'](this['nickName'] + _0x32aad7), this['winsAddedInNick'] = !![];
    } else this['winsAddedInNick'] && (this['winsAddedInNick'] = ![], this['nickTXT']['setText'](this['nickName']));
} else {
    if (_0x317200 == _0x483027) this['devMode_num'] = _0x43d781['readUInt8'](), console['log'](this['devMode_num']);
    else {
        if (_0x317200 == _0x4d80f9) this['playerNumberFor1v1Arena'] = _0x43d781['readUInt8']();
        else {
            if (_0x317200 == _0x5d5e56) this['diveType'] = _0x43d781['readUInt8']();
            else {
                if (_0x317200 == _0x4622bd) this['eff_statueType'] = _0x43d781['readUInt8']();
                else {
                    if (_0x317200 == _0x29c167) this['eff_constrictedSpecies'] = _0x43d781['readUInt16']();
                    else {
                        if (_0x317200 == _0x3db851) this['eff_constrictedSubSpecies'] = _0x43d781['readUInt16']();
                        else {
                            if (_0x317200 == _0x7595) this['eff_webStuckType'] = _0x43d781['readUInt8']();
                            else {
                                if (_0x317200 == _0x4898ab) this['eff_dirtType'] = _0x43d781['readUInt8']();
                                else {
                                    if (_0x317200 == _0x2cd0eb) {
                                        let _0x3640b3 = _0x43d781['readUInt8']();
                                        this['infectionBarA'] < 0.001 && (this['infectionPer'] = _0x3640b3), this['infectionPer_n'] = _0x3640b3, this['infectionBarTimeoutT'] = +new Date() + 0xbb8;
                                    } else {
                                        if (_0x317200 == _0x5e1391) this['lastHidingHoleID'] = _0x43d781['readUInt32'](), this['hidingHoleVisibilityRad'] = _0x43d781['readUInt16']() / 0x4;
                                        else {
                                            if (_0x317200 == _0x255f62) {
                                                let _0x370fc1 = _0x43d781['readUInt8']();
                                                this['infectionBarA'] < 0.001 && (this['infectionPer'] = _0x370fc1), this['infectionPer_n'] = _0x370fc1, this['infectionBarTimeoutT'] = +new Date() + 0xbb8;
                                            } else {
                                                if (_0x317200 == _0x13f605) this['lava'] = _0x43d781['readUInt8']();
                                                else {
                                                    if (_0x317200 == _0x5c9411) {
                                                        let _0x33d133 = _0x43d781['readUInt16']() / 0x4,
                                                            _0x4b3e14 = _0x43d781['readUInt16']() / 0x4;
                                                        _0x33d133 > 0x0 && _0x4b3e14 > 0x0 ? (this['hasDevTarget'] = _0x46868a == this['id'], this['target_ox'] = this['devTargetX'], this['target_oy'] = this['devTargetY'], this['target_nx'] = _0x33d133, this['target_ny'] = _0x4b3e14) : this['hasDevTarget'] = ![];
                                                    } else _0x317200 == _0x492ddc ? this['teamID'] = _0x43d781['readUInt8']() : this['customUpdatedProperty'](_0x317200, _0x43d781);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
}, _0x1dd8d7['prototype']['devTargetX'] = 0x0, _0x1dd8d7['prototype']['devTargetY'] = 0x0, _0x1dd8d7['prototype']['target_ox'] = 0x0, _0x1dd8d7['prototype']['target_oy'] = 0x0, _0x1dd8d7['prototype']['target_nx'] = 0x0, _0x1dd8d7['prototype']['target_ny'] = 0x0, _0x1dd8d7['prototype']['hasDevTarget'] = ![], _0x1dd8d7['prototype']['onLerpUpdate'] = function (_0x8af445) {
this['hasDevTarget'] && (this['devTargetX'] = _0x8af445 * (this['target_nx'] - this['target_ox']) + this['target_ox'], this['devTargetY'] = _0x8af445 * (this['target_ny'] - this['target_oy']) + this['target_oy']);
}, _0x1dd8d7['prototype']['beforeCustomDraw'] = function (_0xcd288d) {
this['hasDevTarget'] && (console['log'](this['devTargetX'] + ':' + this['devTargetY']), _0x4ac9cf['save'](), _0x4ac9cf['strokeStyle'] = 'yellow', _0x4ac9cf['lineWidth'] = 0x2, _0x4ac9cf['globalAlpha'] = 0x1, _0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](this['x'], this['y']), _0x4ac9cf['lineTo'](this['devTargetX'], this['devTargetY']), _0x4ac9cf['stroke'](), _0x4ac9cf['restore']());
}, _0x1dd8d7['prototype']['customUpdatedProperty'] = function (_0x6e105, _0x92293) {}, _0x1dd8d7['prototype']['diveType'] = 0x0, _0x1dd8d7['prototype']['lastHidingHoleID'] = 0x0, _0x1dd8d7['prototype']['hidingHoleVisibilityRad'] = 0x0, _0x1dd8d7['prototype']['winsAddedInNick'] = ![];

function _0x1dd8d7(_0x5c7ca6, _0x517ab0) {
_0x1dd8d7['superClass']['call'](this, _0x4acf80), this['animalType'] = _0x517ab0;
}
_0x1dd8d7['prototype']['getAbilityInfo'] = function (_0x4d81cc) {
if (this['animalType'] == _0x546d88) {
    var _0x31ca4a = {};
    return _0x31ca4a['abilName'] = 'Claw Slash!', _0x31ca4a['abilImg'] = 'skins/arctic/bear/clawslash.png', _0x31ca4a['skinThemeID'] = this['skinThemeID'], _0x31ca4a['mopeSeasonID'] = this['mopeSeasonID'], _0x31ca4a;
} else return _0x3628d8(_0x4d81cc);
}, _0x1dd8d7['prototype']['calculateZIndex'] = function () {
this['updateZ']();
if (_0x50a9ba && _0x46868a == this['id']) this['z'] = 0x7d0 + this['rad'];
else {
    if (this['flag_eff_grabbedByFlytrap']) this['z'] = 0x44c + this['rad'];
    else {
        if (this['flag_eff_tossedInAir']) this['z'] = 0x4b0 + this['rad'];
        else {
            if (this['flag_flying']) {
                this['z'] = 0x186a0;
                if (this['flag_isGrabbed']) this['z'] -= this['rad'];
                else this['z'] += this['rad'];
                this['flag_eff_aniInClaws'] && (this['z'] += 0x3e8), this['specType2'] == 0x64 && (this['z'] = 0x3f6);
            } else {
                if (this['flag_underWater'] || this['flag_usingAbility'] && this['animalType'] == _0x176a10) this['z'] = -0x97;
                else {
                    if (this['flag_usingAbility'] && (this['animalType'] == _0x37eeab || this['animalType'] == _0x4ba38f || this['animalType'] == _0x332195)) this['z'] = 0x2711 + this['rad'];
                    else {
                        if (this['flag_canClimbHill'] && this['animalType'] != _0x332195 || this['animalType'] == _0x15db61 || this['animalType'] == _0x2fc4c1 || this['animalType'] == _0x103e98 || this['animalType'] == _0x546d88 || this['animalType'] == _0x415723 || this['animalType'] == _0x41ea25 || this['animalType'] == _0xc81962 || this['animalType'] == _0x13bbdd || this['animalType'] == _0x1080d7 || this['animalType'] == _0x3700ee || this['animalType'] == _0x2cb4e3 || this['animalType'] == _0x484a15) this['z'] = 0x3e8 + this['rad'];
                        else {
                            if (this['animalType'] == _0x5186e1) this['z'] = 0x3f1 + this['rad'];
                            else {
                                if (this['animalType'] == _0x2e747e) this['z'] = 0x3f0 + (this['flag_usingAbility'] ? 0x1 : 0x0) + this['rad'];
                                else this['z'] = this['rad'] * 1.5;
                            }
                        }
                    }
                    if (this['flag_fliesLikeDragon'] || this['flag_isInArena']) this['z'] += 0x7d0;
                }
            }
        }
    }
}
this['updateZ_onTree'](this['z']);
}, _0x1dd8d7['prototype']['canDrawDark'] = function () {
if (this['flag_inHidingHole']) return !![];
return ![];
};
var _0x5ea7aa = null;
_0x1dd8d7['prototype']['drawDark'] = function () {
if (!this['canDrawDark']()) {
    console['log']('cant draw darkness!');
    return;
}
if (_0x5ea7aa == null) {
    _0x5ea7aa = document['createElement']('canvas');
    var _0x1d8dfc = this['rad'] * 0xa,
        _0x29e839 = this['rad'] * 0xa;
    _0x5ea7aa['width'] = _0x1d8dfc, _0x5ea7aa['height'] = _0x29e839;
    var _0x12bde6 = _0x5ea7aa['getContext']('2d');
    _0x12bde6['save'](), _0x12bde6['filter'] = 'blur(2px)', _0x12bde6['globalAlpha'] = 0x1, _0x12bde6['fillStyle'] = 'black', _0x12bde6['fillRect'](0x0, 0x0, _0x5ea7aa['width'], _0x5ea7aa['height']), _0x12bde6['globalCompositeOperation'] = 'xor', _0x12bde6['beginPath'](), _0x12bde6['arc'](_0x1d8dfc / 0x2, _0x1d8dfc / 0x2, this['rad'] - 0x3, 0x0, 0x2 * Math['PI']), _0x12bde6['fillStyle'] = 'blue', _0x12bde6['fill'](), _0x12bde6['restore']();
}
_0x5ea7aa != null && (_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.5, _0x4ac9cf['drawImage'](_0x5ea7aa, -_0x5ea7aa['width'] / 0x2, -_0x5ea7aa['height'] / 0x2, _0x5ea7aa['width'], _0x5ea7aa['height']), _0x4ac9cf['restore']());
}, _0x1dd8d7['prototype']['skinThemeID'] = 0x0, _0x1dd8d7['prototype']['getSkinImagePath'] = function (_0x299bd7) {
var _0x59b46f = '';
if (this['skinThemeID'] != 0x0 && (this['animalSpecies'] == 0x0 || this['animalSpecies'] == 0x1 && this['animalType'] == _0x56a5e3)) _0x59b46f = './assets/t/' + this['skinThemeID'] + '/' + _0x299bd7;
else {
    var _0x5b4a63 = _0x299bd7['includes']('_dive') ? 0x2 : this['mopeSeasonID'];
    _0x59b46f = './assets/s/' + _0x5b4a63 + '/' + _0x299bd7;
}
return _0x59b46f;
}, _0x1dd8d7['prototype']['getSkinImagePathForShop'] = function (_0x1873cb) {
var _0x552ec1 = '';
if (this['skinThemeID'] != 0x0 && this['animalSpecies'] == 0x0) _0x552ec1 = './assets/t/' + this['skinThemeID'] + '/skins/' + _0x1873cb;
else _0x552ec1 = './assets/s/' + this['mopeSeasonID'] + '/skins/' + _0x1873cb;
return _0x552ec1;
}, _0x1dd8d7['prototype']['getSkinImageObj'] = function (_0x419680) {
var _0x494aa1 = this['getSkinImagePath'](_0x419680);
return _0x297bc3(_0x494aa1, function (_0xfe06b9) {
    console['log'](_0xfe06b9['src']);
});
}, _0x1dd8d7['prototype']['getSkinImageObjAsync'] = async function (_0x32d1c6) {
var _0x2a1f7b = this['getSkinImagePath'](_0x32d1c6);
return _0x12d7a3(_0x2a1f7b);
}, _0x1dd8d7['prototype']['getImagePath'] = function (_0x1d153c, _0x531345) {
const _0x3d6116 = _0x531345 === undefined ? this['mopeSeasonID'] : _0x531345;
var _0x42d9d8 = '';
return _0x42d9d8 = './assets/s/' + _0x3d6116 + '/' + _0x1d153c, _0x42d9d8;
}, _0x1dd8d7['prototype']['getImageObjForPath'] = function (_0x4da1a7, _0x6424c5) {
var _0x859f60 = this['getImagePath'](_0x4da1a7, _0x6424c5);
return _0x297bc3(_0x859f60, function (_0x258452) {
    console['log'](_0x258452['src']);
});
}, _0x1dd8d7['prototype']['setRadius'] = function (_0x3e99ec) {
this['rad'] = _0x3e99ec;
}, window['Animal'] = _0x1dd8d7, _0x3360d0['setCustomClassForGameObjType'](_0x1dd8d7, _0x4acf80);
var _0x13295b = _0x2c3e3c,
_0xec194 = _0x5adfe2;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194, _0x2c3e3c['prototype']['animalType'] = _0x49d118, _0x2c3e3c['prototype']['animalSpecies'] = 0x0, _0x2c3e3c['prototype']['animalSubSpecies'] = 0x0, _0x2c3e3c['prototype']['segmentNum'] = 0x0, _0x2c3e3c['prototype']['updateZ'] = function () {
this['z'] = 0x1e - this['segmentNum'];
}, _0x2c3e3c['prototype']['customDraw'] = function (_0xa0afd) {
_0x4ac9cf['save']();
var _0x4b56fe = this['segmentNum'],
    _0x457b78 = this['getSkinImageObj']('skins/deathworm/segment_' + _0x4b56fe + '.png');
if (_0x457b78) {
    var _0x487bea = this['rad'] * 0x2;
    _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x457b78, -_0x487bea, -_0x487bea, 0x2 * _0x487bea, 0x2 * _0x487bea);
}
_0x4ac9cf['restore']();
}, _0x2c3e3c['prototype']['readCustomData_onNewlyVisible'] = function (_0x429362) {
_0x2c3e3c['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x429362), this['segmentNum'] = _0x429362['readUInt8'](), this['animalSpecies'] = _0x429362['readUInt8'](), this['animalSubSpecies'] = _0x429362['readUInt8'](), this['animalPremiumSkin'] = _0x429362['readUInt8'](), console['log']('segment num: ' + this['segmentNum']);
};

function _0x2c3e3c(_0x219c1d, _0x1593b3) {
_0x2c3e3c['superClass']['call'](this, _0x378086), this['animalType'] = _0x1593b3;
}
window['AnimalBody'] = _0x2c3e3c, _0x3360d0['setCustomClassForGameObjType'](_0x2c3e3c, _0x378086);
var _0xec194 = _0x5adfe2;
_0x16a865['prototype'] = Object['create'](_0xec194['prototype']), _0x16a865['prototype']['constructor'] = _0x16a865, _0x16a865['superClass'] = _0xec194, _0x16a865['prototype']['updateZ'] = function () {
this['z'] = 0x3ea;
}, _0x16a865['prototype']['readUpdatedProperty'] = function (_0x16a24c, _0x2b1005) {
_0x16a24c == _0x5958e5 && (this['webTransparency'] = _0x2b1005['readUInt8']());
}, _0x16a865['prototype']['readCustomData_onNewlyVisible'] = function (_0x9a0c41) {
this['webTransparency'] = _0x9a0c41['readUInt8'](), this['webType'] = _0x9a0c41['readUInt8']();
}, _0x16a865['prototype']['customDraw'] = function (_0x45836e) {
_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] *= this['webTransparency'] / 0x64 * 0.9;
var _0x178a37 = this['getSkinImageObj']('img/web/' + this['webType'] + '/spiderWeb.png');
if (_0x178a37) {
    var _0x506634 = this['rad'];
    _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x178a37, -_0x506634, -_0x506634, 0x2 * _0x506634, 0x2 * _0x506634);
}
_0x4ac9cf['restore']();
};

function _0x16a865() {
_0x16a865['superClass']['call'](this, _0x2aeaab), this['webTransparency'] = 0x0, this['doesDrawEffectScale'] = !![], this['drawEffectScale_Slow'] = !![];
}
window['SpiderWeb'] = _0x16a865, _0x3360d0['setCustomClassForGameObjType'](_0x16a865, _0x2aeaab);
var _0xec194 = _0x1dd8d7;
_0x262ee1['prototype'] = Object['create'](_0xec194['prototype']), _0x262ee1['prototype']['constructor'] = _0x262ee1, _0x262ee1['superClass'] = _0xec194, _0x262ee1['prototype']['animalInfo'] = function () {
var _0x406116 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x406116['aniName'] = 'Octopus';
    break;
case 0xc8:
    _0x406116['aniName'] = 'Vampire Squid';
    break;
case 0xc9:
    _0x406116['aniName'] = 'Fuchsia Tiger';
    break;
case 0xca:
    _0x406116['aniName'] = 'Na Kika';
    break;
}
return _0x406116['skinName'] = this['getSkinName'](), _0x406116['aniDesc'] = '', _0x406116['upgradeText'] = 'UPGRADED to ' + _0x406116['aniName'] + '!\x0aPress W to use your \'Disguise\' ability!\x0a(Hint: wait for prey to bite you- they get stunned!)', _0x406116['aniCol'] = '#ff8340', _0x406116;
}, _0x262ee1['prototype']['getSkinName'] = function () {
let _0x411a69 = this['getSpeciesPath']() + '/octopus';
return _0x411a69 += this['specType'] == 0x0 ? '' : 0x1, _0x411a69;
}, _0x262ee1['prototype']['getSpeciesPath'] = function () {
return 'ocean/octopus/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x262ee1['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x262ee1['prototype']['getAbilityInfo'] = function (_0x239aef) {
var _0x4bcaff = {};
return _0x4bcaff['abilName'] = 'Disguise', _0x4bcaff['abilImg'] = 'abilities/Disguise.svg', _0x4bcaff['skinThemeID'] = this['skinThemeID'], _0x4bcaff['mopeSeasonID'] = this['mopeSeasonID'], _0x4bcaff;
}, _0x262ee1['prototype']['drawUnderSkinImg'] = function () {
if (this['animalSpecies'] == 0xc8) return;
var _0x18fe4d = 0x1f4 / 0x154,
    _0x5006e7 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/head.png');
if (_0x5006e7) {
    _0x4ac9cf['save']();
    var _0x5439d0 = 1.1,
        _0x2f0a22 = this['rad'] - this['outlineW'];
    _0x4ac9cf['drawImage'](_0x5006e7, -_0x2f0a22 * _0x18fe4d, -_0x2f0a22 * _0x5439d0 * _0x18fe4d, 0x2 * _0x2f0a22 * _0x18fe4d, 0x2 * _0x2f0a22 * _0x18fe4d), _0x4ac9cf['restore']();
}
}, _0x262ee1['prototype']['readCustomData_onNewlyVisible'] = function (_0x30cf9b) {
_0x262ee1['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x30cf9b);
var _0x5bf1cb = _0x30cf9b['readUInt8']() > 0x0;
if (_0x5bf1cb) {
    var _0x5847e9 = _0x30cf9b['readUInt8']() > 0x0,
        _0x38351d = _0x30cf9b['readUInt16']();
    this['createDisguiseAniObj'](_0x5847e9, _0x38351d);
}
}, _0x262ee1['prototype']['customUpdatedProperty'] = function (_0x524a16, _0x5786ee) {
if (_0x524a16 == _0xc26729) {
    var _0x1de1fe = _0x5786ee['readUInt8']() > 0x0;
    if (_0x1de1fe) {
        var _0x22215f = _0x5786ee['readUInt8']() > 0x0,
            _0x7d234c = _0x5786ee['readUInt16']();
        this['createDisguiseAniObj'](_0x22215f, _0x7d234c);
    } else this['octoDrawObj'] = null;
}
}, _0x262ee1['prototype']['createDisguiseAniObj'] = function (_0x54ec88, _0x5d10ed) {
if (this['octoDrawObj'] == null) {
    var _0x10b4c3 = _0x54ec88 ? _0x4acf80 : _0x5d10ed,
        _0x25605c = _0x54ec88 ? _0x5d10ed : null,
        _0x80d625 = _0x3360d0['createGameObjOfOType'](_0x10b4c3, _0x25605c);
    if (_0x54ec88) _0x80d625['animalType'] = _0x25605c;
    _0x80d625['oRad'] = this['oRad'], _0x80d625['nRad'] = this['nRad'], _0x80d625['curBiome'] = this['curBiome'], this['octoDrawObj'] = _0x80d625, this['octoDrawObj']['mopeSeasonID'] = 0x2;
}
}, _0x262ee1['prototype']['drawUnderSkinImgOutline'] = function () {
_0x262ee1['superClass']['prototype']['drawUnderSkinImgOutline']['call'](this);
}, _0x262ee1['prototype']['drawOnTopOfSkinImg'] = function () {
_0x262ee1['superClass']['prototype']['drawOnTopOfSkinImg']['call'](this);
if (this['flag_usingAbility']) {
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1 - this['underwaterA'];
    if (this['octoDisguiseObjT'] == _0x39dc8b) this['octoDrawObj']['nRad'] = 0x19;
    else {
        if (this['octoDisguiseObjT'] == _0x5db2c9) this['octoDrawObj']['nRad'] = 0x11;
        else {
            if (this['octoDisguiseObjT'] == _0x2f6e35) this['octoDrawObj']['nRad'] = 0xf;
            else {
                if (this['octoDisguiseObjT'] == _0x41b866) this['octoDrawObj']['nRad'] = 0xf, this['octoDrawObj']['innerRad'] = 0x23;
                else this['octoDrawObj']['nRad'] = this['rad'];
            }
        }
    }
    this['octoDrawObj']['mopeSeasonID'] = 0x2, this['octoDrawObj']['draw'](), _0x4ac9cf['restore']();
}
}, _0x262ee1['prototype']['drawWhenUnderwater'] = function () {
_0x262ee1['superClass']['prototype']['drawWhenUnderwater']['call'](this);
}, _0x262ee1['prototype']['octoDisguiseObjT'] = 0x0, _0x262ee1['prototype']['octoIsAnimal'] = ![], _0x262ee1['prototype']['drawHealthBar'] = function () {
if (this['flag_usingAbility']) {
    if (this['octoIsAnimal']) _0x262ee1['superClass']['prototype']['drawNickName']['call'](this, 0x1), this['octoDrawObj']['curBiome'] = this['curBiome'], this['hpPer_n'] = 0x2, this['hpPer'] = 0x19, this['hpBarA'] = 0x1;
    else return;
}
_0x4ac9cf['save']();
var _0x461ff8 = _0x397f50 < this['hpBarTimeoutT'] ? 0x1 : 0x0;
this['hpBarA'] += (_0x461ff8 - this['hpBarA']) * 0.04;
if (this['hpBarA'] > 0.001) {
    this['hpPer'] += (this['hpPer_n'] - this['hpPer']) * 0.1;
    var _0x475148 = Math['max'](0x1, this['rad'] / 0x19),
        _0x4ac7e5 = 0x14 * _0x475148,
        _0xb3246c = 0x5 * _0x475148,
        _0x263fb0 = 0x0,
        _0x1ba199 = -this['rad'] - 0xa * _0x475148;
    _0x4ac9cf['globalAlpha'] *= this['hpBarA'], _0x4ac9cf['fillStyle'] = 'rgba(0,0,0,0.35)', _0x4ac9cf['fillRect'](_0x263fb0 - _0x4ac7e5 / 0x2, _0x1ba199 - _0xb3246c / 0x2, _0x4ac7e5, _0xb3246c), _0x4ac9cf['fillStyle'] = '#16D729';
    var _0x27d8d2 = _0x4ac7e5 * (this['hpPer'] / 0x64);
    if (this['flag_usingAbility'] && this['octoIsAnimal']) _0x27d8d2 = _0x4ac7e5 * (0x19 / 0x64);
    _0x4ac9cf['fillRect'](_0x263fb0 - _0x4ac7e5 / 0x2, _0x1ba199 - _0xb3246c / 0x2, _0x27d8d2, _0xb3246c);
}
_0x4ac9cf['restore']();
};

function _0x262ee1() {
_0x262ee1['superClass']['call'](this, _0x4acf80);
}
window['Octopus'] = _0x262ee1, _0x3360d0['setCustomClassForGameObjType'](_0x262ee1, _0x4acf80, _0x108db6);
var _0xec194 = _0x1dd8d7;
_0x787fb6['prototype'] = Object['create'](_0xec194['prototype']), _0x787fb6['prototype']['constructor'] = _0x787fb6, _0x787fb6['superClass'] = _0xec194, _0x787fb6['prototype']['animalData'] = {}, _0x787fb6['prototype']['animalInfo'] = function () {
if (this['animalData'][this['animalSpecies']] == undefined) {
    const _0x118e4f = this['animalSpecies'] === 0x0 ? 'Bald Eagle' : this['animalSpecies'] === 0x1 ? 'Golden Eagle' : this['animalSpecies'] === 0x2 ? 'Shahbaz' : 'Golden Shahbaz';
    this['animalData'][this['animalSpecies']] = {
        'info': {
            'aniName': _0x118e4f,
            'aniCol': '#5b400d',
            'upgradeText': 'UPGRADED to ' + _0x118e4f + '!\x0a                      Eagles can fly up other animals in the air!\x0a                      ' + (this['animalSpecies'] === 0x1 ? '(Can even pick monsters!)' : this['animalSpecies'] === 0x2 ? '(Shahbaz picks anything including Black Dragon)' : this['animalSpecies'] === 0x3 ? '(Shahbaz picks everything!)' : '')
        },
        'ability': {
            'abilName': 'Fly with prey',
            'abilImg': 'abilities/Fly.svg',
            'speciesType': this['animalSpecies'],
            'skinThemeID': this['skinThemeID'],
            'mopeSeasonID': this['mopeSeasonID']
        },
        'skin': ((() => {
            const _0x515e16 = this['mopeSeasonID'] === 0x2 && this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0 ? '/' + this['animalSubSpecies'] : '',
                _0x3e0581 = 'land/eagle/' + this['animalSpecies'] + _0x515e16 + '/eagle';
            return {
                'path': ['' + _0x3e0581, _0x3e0581 + '1', _0x3e0581 + '2', _0x3e0581 + '3'],
                'wing1': 'skins/' + _0x3e0581 + '_wing1.png',
                'wing2': 'skins/' + _0x3e0581 + '_wing2.png',
                'head': 'skins/' + _0x3e0581 + '_head.png',
                'head1': 'skins/' + _0x3e0581 + '_head1.png',
                'head2': 'skins/' + _0x3e0581 + '_head2.png'
            };
        })())
    };
}
return this['animalData'][this['animalSpecies']]['info'];
}, _0x787fb6['prototype']['getSkinName'] = function () {
return this['animalData'][this['animalSpecies']]['skin']['path'][this['specType']];
}, _0x787fb6['prototype']['getWing'] = function (_0x3ff72f) {
if (_0x3ff72f == 0x1) return this['animalData'][this['animalSpecies']]['skin']['wing1'];
else return this['animalData'][this['animalSpecies']]['skin']['wing2'];
}, _0x787fb6['prototype']['getHead'] = function () {
if (this['specType'] == 0x1) return this['animalData'][this['animalSpecies']]['skin']['head2'];
else return this['animalData'][this['animalSpecies']]['skin']['head'];
}, _0x787fb6['prototype']['getAbilityInfo'] = function (_0x2cd896) {
return this['animalData'][this['animalSpecies']]['ability'];
}, _0x787fb6['prototype']['ANIMATION_NAME'] = 'eagle', _0x787fb6['prototype']['drawUnderSkinImg'] = function () {
if (this['skinThemeID'] != 0x3) return;
if (this['flag_flying'] && !this['flag_isGrabbed']) {
    _0x4ac9cf['save']();
    var _0x21af5a = _0x2dd807(this['ANIMATION_NAME'], this['spawnTime']);
    _0x21af5a !== undefined && _0x21af5a != null && (this['theFrame'] = _0x21af5a);
    var _0x242b64 = !(_0x25ea67 == 0x2 || _0x50a9ba) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'],
        _0x6f6575 = this['getSkinImageObj'](this['getWing'](0x1));
    if (_0x6f6575) {
        _0x4ac9cf['save']();
        var _0x1317b0 = -(-0.2 + _0x242b64) * _0x40941f,
            _0x1f3539 = this['rad'] * 0.8;
        _0x4ac9cf['rotate'](_0x1317b0);
        var _0x434ec0 = 0x0,
            _0xa3983b = this['rad'],
            _0x4ff3e0 = _0x1f3539 * 0x2 * 0.7,
            _0x3a1f96 = _0x1f3539 * 0x2,
            _0x2f6d2d = -0.2,
            _0xfc45a7 = 1.2;
        _0x4ac9cf['drawImage'](_0x6f6575, _0x434ec0 + _0x4ff3e0 * -_0x2f6d2d, _0xa3983b + _0x3a1f96 * -_0xfc45a7, _0x4ff3e0, _0x3a1f96), _0x4ac9cf['restore']();
    }
    var _0x6f6575 = this['getSkinImageObj'](this['getWing'](0x2));
    if (_0x6f6575) {
        _0x4ac9cf['save']();
        var _0x1317b0 = -(-0.2 + _0x242b64) * _0x142401(-0x5a),
            _0x1f3539 = this['rad'] * 0.8;
        _0x4ac9cf['rotate'](_0x1317b0);
        var _0x434ec0 = 0x0,
            _0xa3983b = this['rad'],
            _0x4ff3e0 = _0x1f3539 * 0x2 * 0.7,
            _0x3a1f96 = _0x1f3539 * 0x2,
            _0x2f6d2d = 1.2,
            _0xfc45a7 = 1.2;
        _0x4ac9cf['drawImage'](_0x6f6575, _0x434ec0 + _0x4ff3e0 * -_0x2f6d2d, _0xa3983b + _0x3a1f96 * -_0xfc45a7, _0x4ff3e0, _0x3a1f96), _0x4ac9cf['restore']();
    }
    _0x4ac9cf['restore']();
}
}, _0x787fb6['prototype']['drawSkinCustomization'] = function () {
if (this['skinThemeID'] == 0x3) return;
if (!this['flag_usingAbility']) return;
var _0x187364 = 0x1f4 / 0x154; {
    if (this['flag_flying'] && !this['flag_isGrabbed']) {
        _0x4ac9cf['save']();
        var _0x1da204 = _0x2dd807(this['ANIMATION_NAME'], this['spawnTime']);
        _0x1da204 !== undefined && _0x1da204 != null && (this['theFrame'] = _0x1da204);
        var _0xe59640 = !(_0x25ea67 == 0x2 || _0x50a9ba) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'],
            _0x3b3dd8 = this['getSkinImageObj'](this['getWing'](0x1));
        if (_0x3b3dd8) {
            _0x4ac9cf['save']();
            var _0x574550 = -(-0.2 + _0xe59640) * _0x40941f,
                _0x233631 = this['rad'] * 0.8;
            _0x4ac9cf['rotate'](_0x142401(0x2d) + _0x574550);
            var _0x404e6a = 0x0,
                _0x515afb = this['rad'],
                _0x55cb2d = _0x233631 * 0x2 * 0.62,
                _0x4ecd18 = _0x233631 * 2.5,
                _0x67e050 = 0.2,
                _0x21e846 = 1.7;
            _0x4ac9cf['drawImage'](_0x3b3dd8, _0x404e6a + _0x55cb2d * -_0x67e050, _0x515afb + _0x4ecd18 * -_0x21e846, _0x55cb2d, _0x4ecd18), _0x4ac9cf['restore']();
        }
        var _0x3b3dd8 = this['getSkinImageObj'](this['getWing'](0x2));
        if (_0x3b3dd8) {
            _0x4ac9cf['save']();
            var _0x574550 = -(-0.2 + _0xe59640) * _0x142401(-0x5a),
                _0x233631 = this['rad'] * 0.8;
            _0x4ac9cf['rotate'](_0x142401(-0x2d) + _0x574550);
            var _0x404e6a = 0x0,
                _0x515afb = this['rad'],
                _0x55cb2d = _0x233631 * 0x2 * 0.62,
                _0x4ecd18 = _0x233631 * 2.5,
                _0x67e050 = 0.8,
                _0x21e846 = 1.7;
            _0x4ac9cf['drawImage'](_0x3b3dd8, _0x404e6a + _0x55cb2d * -_0x67e050, _0x515afb + _0x4ecd18 * -_0x21e846, _0x55cb2d, _0x4ecd18), _0x4ac9cf['restore']();
        }
        _0x4ac9cf['restore']();
    } else {
        if (this['specType'] == 0x1 && this['skinThemeID'] != 0x3) {
            _0x4ac9cf['save']();
            var _0x31c600 = (_0x397f50 - this['spawnTime']) / 0x3e8,
                _0xe59640 = !(_0x25ea67 == 0x2) ? _0x23fdc7(_0x31c600, 0.7, 0.3, 0x2) : 0x0,
                _0x3b3dd8 = this['getSkinImageObj'](this['getWing'](0x1));
            if (_0x3b3dd8) {
                _0x4ac9cf['save']();
                var _0x574550 = -(-0.2 + _0xe59640) * _0x142401(0x2d),
                    _0x233631 = this['rad'] * 0.8;
                _0x4ac9cf['rotate'](_0x142401(0xf) + _0x574550);
                var _0x404e6a = 0x0,
                    _0x515afb = this['rad'],
                    _0x55cb2d = _0x233631 * 0x2 * 0.8,
                    _0x4ecd18 = _0x233631 * 2.2,
                    _0x67e050 = 0x0,
                    _0x21e846 = 1.5;
                _0x4ac9cf['drawImage'](_0x3b3dd8, _0x404e6a + _0x55cb2d * -_0x67e050, _0x515afb + _0x4ecd18 * -_0x21e846, _0x55cb2d, _0x4ecd18), _0x4ac9cf['restore']();
            }
            var _0x3b3dd8 = this['getSkinImageObj'](this['getWing'](0x2));
            if (_0x3b3dd8) {
                _0x4ac9cf['save']();
                var _0x574550 = -(-0.2 + _0xe59640) * _0x142401(-0x2d),
                    _0x233631 = this['rad'] * 0.8;
                _0x4ac9cf['rotate'](_0x142401(-0xf) + _0x574550);
                var _0x404e6a = 0x0,
                    _0x515afb = this['rad'],
                    _0x55cb2d = _0x233631 * 0x2 * 0.8,
                    _0x4ecd18 = _0x233631 * 2.2,
                    _0x67e050 = 0x1,
                    _0x21e846 = 1.5;
                _0x4ac9cf['drawImage'](_0x3b3dd8, _0x404e6a + _0x55cb2d * -_0x67e050, _0x515afb + _0x4ecd18 * -_0x21e846, _0x55cb2d, _0x4ecd18), _0x4ac9cf['restore']();
            }
            _0x4ac9cf['restore']();
        }
    }
    if (this['specType'] != 0x0 && this['specType'] != undefined) {
        var _0x48cbf7 = -0.05;
        this['flag_flying'] ? _0x48cbf7 = 0.1 : this['animalSpecies'] == 0x2 && (_0x48cbf7 = -0.075);
        var _0x53fb98 = this['getSkinImageObj'](this['getHead']());
        if (_0x53fb98) {
            _0x4ac9cf['save']();
            var _0x233631 = this['rad'];
            _0x4ac9cf['drawImage'](_0x53fb98, -_0x233631 * _0x187364, (-_0x233631 + _0x233631 * _0x48cbf7) * _0x187364, 0x2 * _0x233631 * _0x187364, 0x2 * _0x233631 * _0x187364), _0x4ac9cf['restore']();
        }
    }
}
};

function _0x787fb6() {
_0x787fb6['superClass']['call'](this, _0x4acf80);
}
window['Eagle'] = _0x787fb6, _0x3360d0['setCustomClassForGameObjType'](_0x787fb6, _0x4acf80, _0x37eeab);
var _0xec194 = _0x1dd8d7;
_0x51d527['prototype'] = Object['create'](_0xec194['prototype']), _0x51d527['prototype']['constructor'] = _0x51d527, _0x51d527['superClass'] = _0xec194, _0x51d527['prototype']['getSkinName'] = function () {
return 'land/ostrich/' + this['animalSpecies'] + this['getSubSpecies']() + '/ostrich';
}, _0x51d527['prototype']['getSubSpecies'] = function () {
return this['animalSpecies'] === 0xcc ? '/' + this['animalSubSpecies'] : '';
}, _0x51d527['prototype']['animalInfo'] = function () {
var _0x3d5462 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x3d5462['aniName'] = 'Ostrich!';
    break;
case 0x1:
    _0x3d5462['aniName'] = 'Golden Ostrich!';
    break;
case 0x2:
    _0x3d5462['aniName'] = 'Ruffled Ostrich!';
    break;
case 0xdc:
    _0x3d5462['aniName'] = 'Sunset Ostrich';
    break;
case 0xcc:
    _0x3d5462['aniName'] = 'Necromancer Ostrich!';
    break;
}
return _0x3d5462['skinName'] = 'land/ostrich/' + this['animalSpecies'] + this['getSubSpecies']() + '/ostrich', _0x3d5462['aniDesc'] = '', _0x3d5462['upgradeText'] = 'UPGRADED to ' + _0x3d5462['aniName'] + '! Lay eggs to hatch babies! \x0aCommand babies by placing your crosshair (right-click/W)-\x0a They can attack prey!', _0x3d5462['aniCol'] = '#FF9000', _0x3d5462;
}, _0x51d527['prototype']['getAbilityInfo'] = function (_0x309869) {
var _0x38d811 = {};
return _0x38d811['abilName'] = 'Command Babies!', _0x38d811['abilImg'] = 'abilities/Hypnotize.svg', _0x38d811['skinThemeID'] = this['skinThemeID'], _0x38d811['mopeSeasonID'] = this['mopeSeasonID'], _0x38d811;
}, _0x51d527['prototype']['getSkinImageObj'] = function (_0x58390a) {
var _0xe5e67f = this['animalSpecies'] === 0x1 || this['animalSpecies'] === 0x2 || this['animalSpecies'] === 0xcc ? 0x1 : this['mopeSeasonID'];
return this['getSkinImageObjForSeason'](_0x58390a, _0xe5e67f);
};

function _0x51d527() {
_0x51d527['superClass']['call'](this, _0x4acf80);
}
window['Ostrich'] = _0x51d527, _0x3360d0['setCustomClassForGameObjType'](_0x51d527, _0x4acf80, _0x189adc);
var _0xec194 = _0x1dd8d7;
_0x4df1db['prototype'] = Object['create'](_0xec194['prototype']), _0x4df1db['prototype']['constructor'] = _0x4df1db, _0x4df1db['superClass'] = _0xec194, _0x4df1db['prototype']['getSkinName'] = function () {
return 'land/ostrich/' + this['animalSpecies'] + '/ostrich-baby';
}, _0x4df1db['prototype']['isEdibleOutlined'] = function () {
if (this['mommyID'] == _0x46868a) return ![];
var _0x378072 = _0xddec75[_0x46868a];
if (_0x378072) {
    var _0x36be22 = _0x378072['animalType'];
    if (_0x36be22 == _0x212372 || _0x36be22 == _0x2cb4e3 || _0x36be22 == _0x1be7e6) return ![];
}
return _0x4df1db['superClass']['prototype']['isEdibleOutlined']['call'](this);;
}, _0x4df1db['prototype']['getSkinImageObj'] = function (_0x154b94) {
var _0x2ea9fc = this['animalSpecies'] === 0x1 || this['animalSpecies'] === 0x2 || this['animalSpecies'] === 0xcc ? 0x1 : this['mopeSeasonID'];
return this['getSkinImageObjForSeason'](_0x154b94, _0x2ea9fc);
}, _0x4df1db['prototype']['readCustomData_onNewlyVisible'] = function (_0x566eed) {
_0x4df1db['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x566eed), this['mommyID'] = _0x566eed['readUInt32']();
};

function _0x4df1db() {
_0x4df1db['superClass']['call'](this, _0x4acf80);
}
window['OstrichBaby'] = _0x4df1db, _0x3360d0['setCustomClassForGameObjType'](_0x4df1db, _0x4acf80, _0x2c0e73);
var _0x403f88 = _0x403f88,
_0xec194 = _0x1dd8d7;
_0x403f88['prototype'] = Object['create'](_0xec194['prototype']), _0x403f88['prototype']['constructor'] = _0x403f88, _0x403f88['superClass'] = _0xec194, _0x403f88['prototype']['getSkinName'] = function () {
var _0xb7e622 = this['getSpeciesPath']('land/falcon') + '/falcon';
return _0xb7e622 += this['specType'] == 0x0 ? '' : this['specType'], _0xb7e622;
}, _0x403f88['prototype']['animalInfo'] = function () {
var _0x32b210 = {},
    _0x3532cc = '';
switch (this['animalSpecies']) {
case 0x0:
    _0x32b210['aniName'] = 'Falcon';
    break;
case 0x1:
    _0x32b210['aniName'] = 'Predator', _0x3532cc = '\x0a(No apex is safe from Predator!)';
    break;
case 0x2:
    _0x32b210['aniName'] = 'Shaheen', _0x3532cc = '\x0a(Shaheen flies longer and swoop everything!)';
    break;
case 0xca:
    _0x32b210['aniName'] = 'Meteor Falcon';
    break;
}
return _0x32b210['upgradeText'] = 'UPGRADED to ' + _0x32b210['aniName'] + '! \x0aFly, and do a powerful dive attack! Aim it well.' + _0x3532cc, _0x32b210['aniCol'] = '#FF9000', _0x32b210['skinName'] = 'land/falcon/' + this['animalSpecies'] + '/falcon' + (this['specType'] == 0x0 ? '' : this['specType']), _0x32b210;
}, _0x403f88['prototype']['getWing'] = function (_0x455177, _0x5f451e, _0xa261bc) {
_0xa261bc = !![];
var _0x1e8d3e = 'skins/land/' + (_0xa261bc ? this['getSpeciesPath'](_0x455177) + '/' : _0x455177 + '/');
return _0x1e8d3e += _0x455177 + '_wing' + _0x5f451e + '.png', _0x1e8d3e;
}, _0x403f88['prototype']['getHead'] = function (_0x3adb4e, _0x5451e2, _0x35f628) {
_0x35f628 = !![];
var _0x51d34c = 'skins/land/' + (_0x35f628 ? this['getSpeciesPath'](_0x3adb4e) + '/' : _0x3adb4e + '/');
return _0x51d34c += _0x3adb4e + '_head.png', _0x51d34c;
}, _0x403f88['prototype']['getAbilityInfo'] = function (_0x1b189a) {
var _0x11aa20 = {};
return _0x11aa20['abilName'] = 'Sky dive', _0x11aa20['abilImg'] = 'abilities/SkyDive.svg', _0x11aa20['speciesType'] = this['animalSpecies'], _0x11aa20['skinThemeID'] = this['skinThemeID'], _0x11aa20['mopeSeasonID'] = this['mopeSeasonID'], _0x11aa20;
}, _0x403f88['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) return;
var _0x105618 = 'skins',
    _0x12109a = 0x1f4 / 0x154;
if (this['flag_flying'] && !this['flag_isGrabbed'] && this['specType'] == 0x1) {
    _0x4ac9cf['save']();
    var _0x243bb1 = _0x2dd807('bird', this['spawnTime']);
    _0x243bb1 !== undefined && _0x243bb1 != null && (this['theFrame'] = _0x243bb1);
    var _0x25bdf4 = !(_0x25ea67 == 0x2 || _0x50a9ba) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'],
        _0x4ad74d = this['getSkinImageObj'](this['getWing']('falcon', 0x1, ![]));
    if (_0x4ad74d) {
        _0x4ac9cf['save']();
        var _0x1b6b5e = -(-0.2 + _0x25bdf4) * _0x142401(0x50),
            _0x16b735 = this['rad'] * 0.8;
        _0x4ac9cf['rotate'](_0x142401(0x19) + _0x1b6b5e);
        var _0xa27cd9 = 0x0,
            _0x43644f = this['rad'],
            _0xcee996 = _0x16b735 * 0x2 * 0.65,
            _0x50ee80 = _0x16b735 * 2.5,
            _0x4c0a8a = 0x0,
            _0x22b5f4 = 1.5;
        _0x4ac9cf['drawImage'](_0x4ad74d, _0xa27cd9 + _0xcee996 * -_0x4c0a8a, _0x43644f + _0x50ee80 * -_0x22b5f4, _0xcee996, _0x50ee80), _0x4ac9cf['restore']();
    }
    var _0x4ad74d = this['getSkinImageObj'](this['getWing']('falcon', 0x2, ![]));
    if (_0x4ad74d) {
        _0x4ac9cf['save']();
        var _0x1b6b5e = -(-0.2 + _0x25bdf4) * _0x142401(-0x50),
            _0x16b735 = this['rad'] * 0.8;
        _0x4ac9cf['rotate'](_0x142401(-0x19) + _0x1b6b5e);
        var _0xa27cd9 = 0x0,
            _0x43644f = this['rad'],
            _0xcee996 = _0x16b735 * 0x2 * 0.65,
            _0x50ee80 = _0x16b735 * 2.5,
            _0x4c0a8a = 0x1,
            _0x22b5f4 = 1.5;
        _0x4ac9cf['drawImage'](_0x4ad74d, _0xa27cd9 + _0xcee996 * -_0x4c0a8a, _0x43644f + _0x50ee80 * -_0x22b5f4, _0xcee996, _0x50ee80), _0x4ac9cf['restore']();
    }
    _0x4ac9cf['restore']();
} else {
    if (this['flag_flying'] && this['specType'] == 0x2) {
        _0x4ac9cf['save']();
        var _0x1d4010 = (_0x397f50 - this['spawnTime']) / 0x3e8,
            _0x25bdf4 = !(_0x25ea67 == 0x2) ? _0x23fdc7(_0x1d4010, 0.7, 0.3, 0x2) : 0x0,
            _0x4ad74d = this['getSkinImageObj'](this['getWing']('falcon', 0x1, ![]));
        if (_0x4ad74d) {
            _0x4ac9cf['save']();
            var _0x1b6b5e = -(-0.2 + 0x0) * _0x142401(0x19),
                _0x16b735 = this['rad'] * 0.8;
            _0x4ac9cf['rotate'](_0x1b6b5e);
            var _0xa27cd9 = 0x0,
                _0x43644f = this['rad'],
                _0xcee996 = _0x16b735 * 0x2 * 0.7,
                _0x50ee80 = _0x16b735 * 2.2,
                _0x4c0a8a = 0x0,
                _0x22b5f4 = 1.5;
            _0x4ac9cf['drawImage'](_0x4ad74d, _0xa27cd9 + _0xcee996 * -_0x4c0a8a, _0x43644f + _0x50ee80 * -_0x22b5f4, _0xcee996, _0x50ee80), _0x4ac9cf['restore']();
        }
        var _0x4ad74d = this['getSkinImageObj'](this['getWing']('falcon', 0x2, ![]));
        if (_0x4ad74d) {
            _0x4ac9cf['save']();
            var _0x1b6b5e = -(-0.2 + 0x0) * _0x142401(-0x19),
                _0x16b735 = this['rad'] * 0.8;
            _0x4ac9cf['rotate'](_0x1b6b5e);
            var _0xa27cd9 = 0x0,
                _0x43644f = this['rad'],
                _0xcee996 = _0x16b735 * 0x2 * 0.7,
                _0x50ee80 = _0x16b735 * 2.2,
                _0x4c0a8a = 0x1,
                _0x22b5f4 = 1.5;
            _0x4ac9cf['drawImage'](_0x4ad74d, _0xa27cd9 + _0xcee996 * -_0x4c0a8a, _0x43644f + _0x50ee80 * -_0x22b5f4, _0xcee996, _0x50ee80), _0x4ac9cf['restore']();
        }
        _0x4ac9cf['restore']();
    } else {
        if (this['flag_flying'] && this['specType'] == 0x3) {
            _0x4ac9cf['save']();
            var _0x1d4010 = (_0x397f50 - this['spawnTime']) / 0x3e8,
                _0x25bdf4 = !(_0x25ea67 == 0x2) ? _0x23fdc7(_0x1d4010, 0.5, 0.4, 0x2) : 0x0,
                _0x4ad74d = this['getSkinImageObj'](this['getWing']('falcon', 0x1, !![]));
            if (_0x4ad74d) {
                _0x4ac9cf['save']();
                var _0x1b6b5e = -(-0.2 + _0x25bdf4) * _0x142401(0x2d),
                    _0x16b735 = this['rad'] * 0.8;
                _0x4ac9cf['rotate'](_0x142401(0xf) + _0x1b6b5e);
                var _0xa27cd9 = 0x0,
                    _0x43644f = this['rad'],
                    _0xcee996 = _0x16b735 * 0x2 * 0x1,
                    _0x50ee80 = _0x16b735 * 2.2,
                    _0x4c0a8a = 0x0,
                    _0x22b5f4 = 1.5;
                _0x4ac9cf['drawImage'](_0x4ad74d, _0xa27cd9 + _0xcee996 * -_0x4c0a8a, _0x43644f + _0x50ee80 * -_0x22b5f4, _0xcee996, _0x50ee80), _0x4ac9cf['restore']();
            }
            var _0x4ad74d = this['getSkinImageObj'](this['getWing']('falcon', 0x2, !![]));
            if (_0x4ad74d) {
                _0x4ac9cf['save']();
                var _0x1b6b5e = -(-0.2 + _0x25bdf4) * _0x142401(-0x2d),
                    _0x16b735 = this['rad'] * 0.8;
                _0x4ac9cf['rotate'](_0x142401(-0xf) + _0x1b6b5e);
                var _0xa27cd9 = 0x0,
                    _0x43644f = this['rad'],
                    _0xcee996 = _0x16b735 * 0x2 * 0x1,
                    _0x50ee80 = _0x16b735 * 2.2,
                    _0x4c0a8a = 0x1,
                    _0x22b5f4 = 1.5;
                _0x4ac9cf['drawImage'](_0x4ad74d, _0xa27cd9 + _0xcee996 * -_0x4c0a8a, _0x43644f + _0x50ee80 * -_0x22b5f4, _0xcee996, _0x50ee80), _0x4ac9cf['restore']();
            }
            _0x4ac9cf['restore']();
        }
    }
}
if (this['specType'] != 0x0 && this['specType'] != undefined) {
    var _0x1ec223 = this['getSkinImageObj'](this['getHead']('/falcon', !![]));
    if (_0x1ec223) {
        _0x4ac9cf['save']();
        var _0x16b735 = this['rad'] * (this['specType'] == 0x3 ? 1.2 : 0x1),
            _0x99a22 = _0x16b735 * 0.2;
        if (this['specType'] == 0x3) _0x99a22 = _0x16b735 * -0.15;
        _0x4ac9cf['drawImage'](_0x1ec223, -_0x16b735 * _0x12109a, (-_0x16b735 + _0x99a22) * _0x12109a, 0x2 * _0x16b735 * _0x12109a, 0x2 * _0x16b735 * _0x12109a), _0x4ac9cf['restore']();
    }
}
};

function _0x403f88() {
_0x403f88['superClass']['call'](this, _0x4acf80);
}
window['Falcon'] = _0x403f88, _0x3360d0['setCustomClassForGameObjType'](_0x403f88, _0x4acf80, _0x12d178);
var _0xec194 = _0x1dd8d7;
_0x134fe0['prototype'] = Object['create'](_0xec194['prototype']), _0x134fe0['prototype']['constructor'] = _0x134fe0, _0x134fe0['superClass'] = _0xec194, _0x134fe0['prototype']['animalInfo'] = function () {
var _0x497f35 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x497f35['aniName'] = 'Snowy Owl';
    break;
case 0xc9:
    _0x497f35['aniName'] = 'Owlrigami';
    break;
}
return _0x497f35['skinName'] = this['getSkinName'](), _0x497f35['aniDesc'] = '', _0x497f35['upgradeText'] = 'UPGRADED to ' + _0x497f35['aniName'] + '!\x0aAim the crosshair\x0aright-click / press W when its on top of prey to attack', _0x497f35['aniCol'] = '#633838', _0x497f35;
}, _0x134fe0['prototype']['getSkinName'] = function () {
let _0x1083a0 = this['getSpeciesPath']() + '/snowyowl';
return _0x1083a0 += this['specType'] == 0x0 ? '' : this['specType'], _0x1083a0;
}, _0x134fe0['prototype']['getSpeciesPath'] = function () {
return 'arctic/snowyowl/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x134fe0['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x134fe0['prototype']['getWing'] = function (_0x1890b3) {
var _0x1705cb = 'skins/' + this['getSpeciesPath']();
return _0x1705cb += '/snowyowl_wing' + _0x1890b3 + '.png', _0x1705cb;
}, _0x134fe0['prototype']['getHead'] = function () {
var _0x1b19cf = 'skins/' + this['getSpeciesPath']();
return _0x1b19cf += '/snowyowl_head.png', _0x1b19cf;
}, _0x134fe0['prototype']['getAbilityInfo'] = function (_0x14eadb) {
var _0xcbbd93 = {};
return _0xcbbd93['abilName'] = 'Target Prey!', _0xcbbd93['abilImg'] = 'abilities/Target.svg', _0xcbbd93['skinThemeID'] = this['skinThemeID'], _0xcbbd93['mopeSeasonID'] = this['mopeSeasonID'], _0xcbbd93;
}, _0x134fe0['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) return;
var _0x5324ea = 'skins',
    _0x278580 = 0x1f4 / 0x154;
if (this['flag_flying'] && !this['flag_isGrabbed'] && this['specType'] == 0x1) {
    _0x4ac9cf['save']();
    var _0x3215d5 = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x37e5fc = !(_0x25ea67 == 0x2 || _0x50a9ba) ? _0x23fdc7(_0x3215d5, 0.7, 0.4, 0x2) : this['birdNoAnimationFlyWingAngle'],
        _0x44f67f = this['getSkinImageObj'](this['getWing'](0x1));
    if (_0x44f67f) {
        _0x4ac9cf['save']();
        var _0x4294d5 = -(-0.2 + _0x37e5fc) * _0x142401(0x50),
            _0x3cccd6 = this['rad'] * 0.8;
        _0x4ac9cf['rotate'](_0x142401(0x19) + _0x4294d5);
        var _0x655d95 = 0x0,
            _0x195252 = this['rad'],
            _0x220dde = _0x3cccd6 * 0x2 * 0.65,
            _0x3be3fd = _0x3cccd6 * 2.5,
            _0x44bf1b = 0x0,
            _0x33989e = 1.5;
        _0x4ac9cf['drawImage'](_0x44f67f, _0x655d95 + _0x220dde * -_0x44bf1b, _0x195252 + _0x3be3fd * -_0x33989e, _0x220dde, _0x3be3fd), _0x4ac9cf['restore']();
    }
    var _0x44f67f = this['getSkinImageObj'](this['getWing'](0x2));
    if (_0x44f67f) {
        _0x4ac9cf['save']();
        var _0x4294d5 = -(-0.2 + _0x37e5fc) * _0x142401(-0x50),
            _0x3cccd6 = this['rad'] * 0.8;
        _0x4ac9cf['rotate'](_0x142401(-0x19) + _0x4294d5);
        var _0x655d95 = 0x0,
            _0x195252 = this['rad'],
            _0x220dde = _0x3cccd6 * 0x2 * 0.65,
            _0x3be3fd = _0x3cccd6 * 2.5,
            _0x44bf1b = 0x1,
            _0x33989e = 1.5;
        _0x4ac9cf['drawImage'](_0x44f67f, _0x655d95 + _0x220dde * -_0x44bf1b, _0x195252 + _0x3be3fd * -_0x33989e, _0x220dde, _0x3be3fd), _0x4ac9cf['restore']();
    }
    _0x4ac9cf['restore']();
} else {
    if (this['flag_flying'] && this['specType'] == 0x2) {
        _0x4ac9cf['save']();
        var _0x3215d5 = (_0x397f50 - this['spawnTime']) / 0x3e8,
            _0x37e5fc = !(_0x25ea67 == 0x2) ? _0x23fdc7(_0x3215d5, 0.7, 0.3, 0x2) : 0x0,
            _0x44f67f = this['getSkinImageObj'](this['getWing'](0x1));
        if (_0x44f67f) {
            _0x4ac9cf['save']();
            var _0x4294d5 = -(-0.2 + _0x37e5fc) * _0x142401(0x2d),
                _0x3cccd6 = this['rad'] * 0.8;
            _0x4ac9cf['rotate'](_0x142401(0xf) + _0x4294d5);
            var _0x655d95 = 0x0,
                _0x195252 = this['rad'],
                _0x220dde = _0x3cccd6 * 0x2 * 0.7,
                _0x3be3fd = _0x3cccd6 * 2.2,
                _0x44bf1b = 0x0,
                _0x33989e = 1.5;
            _0x4ac9cf['drawImage'](_0x44f67f, _0x655d95 + _0x220dde * -_0x44bf1b, _0x195252 + _0x3be3fd * -_0x33989e, _0x220dde, _0x3be3fd), _0x4ac9cf['restore']();
        }
        var _0x44f67f = this['getSkinImageObj'](this['getWing'](0x2));
        if (_0x44f67f) {
            _0x4ac9cf['save']();
            var _0x4294d5 = -(-0.2 + _0x37e5fc) * _0x142401(-0x2d),
                _0x3cccd6 = this['rad'] * 0.8;
            _0x4ac9cf['rotate'](_0x142401(-0xf) + _0x4294d5);
            var _0x655d95 = 0x0,
                _0x195252 = this['rad'],
                _0x220dde = _0x3cccd6 * 0x2 * 0.7,
                _0x3be3fd = _0x3cccd6 * 2.2,
                _0x44bf1b = 0x1,
                _0x33989e = 1.5;
            _0x4ac9cf['drawImage'](_0x44f67f, _0x655d95 + _0x220dde * -_0x44bf1b, _0x195252 + _0x3be3fd * -_0x33989e, _0x220dde, _0x3be3fd), _0x4ac9cf['restore']();
        }
        _0x4ac9cf['restore']();
    } else {
        if (this['flag_flying'] && this['specType'] == 0x3) {
            _0x4ac9cf['save']();
            var _0x3215d5 = (_0x397f50 - this['spawnTime']) / 0x3e8,
                _0x37e5fc = !(_0x25ea67 == 0x2) ? _0x23fdc7(_0x3215d5, 0.5, 0.5, 0x2) : 0x0,
                _0x44f67f = this['getSkinImageObj'](this['getWing'](0x1));
            if (_0x44f67f) {
                _0x4ac9cf['save']();
                var _0x4294d5 = -(-0.2 + _0x37e5fc) * _0x142401(0x2d),
                    _0x3cccd6 = this['rad'] * 0.8;
                _0x4ac9cf['rotate'](_0x142401(0x19) + _0x4294d5);
                var _0x655d95 = 0x0,
                    _0x195252 = this['rad'],
                    _0x220dde = _0x3cccd6 * 0x2 * 0.7,
                    _0x3be3fd = _0x3cccd6 * 2.2,
                    _0x44bf1b = 0x0,
                    _0x33989e = 1.5;
                _0x4ac9cf['drawImage'](_0x44f67f, _0x655d95 + _0x220dde * -_0x44bf1b, _0x195252 + _0x3be3fd * -_0x33989e, _0x220dde, _0x3be3fd), _0x4ac9cf['restore']();
            }
            var _0x44f67f = this['getSkinImageObj'](this['getWing'](0x2));
            if (_0x44f67f) {
                _0x4ac9cf['save']();
                var _0x4294d5 = -(-0.2 + _0x37e5fc) * _0x142401(-0x2d),
                    _0x3cccd6 = this['rad'] * 0.8;
                _0x4ac9cf['rotate'](_0x142401(-0x19) + _0x4294d5);
                var _0x655d95 = 0x0,
                    _0x195252 = this['rad'],
                    _0x220dde = _0x3cccd6 * 0x2 * 0.7,
                    _0x3be3fd = _0x3cccd6 * 2.2,
                    _0x44bf1b = 0x1,
                    _0x33989e = 1.5;
                _0x4ac9cf['drawImage'](_0x44f67f, _0x655d95 + _0x220dde * -_0x44bf1b, _0x195252 + _0x3be3fd * -_0x33989e, _0x220dde, _0x3be3fd), _0x4ac9cf['restore']();
            }
            _0x4ac9cf['restore']();
        }
    }
}
if (this['specType'] != 0x0 && this['specType'] != undefined) {
    var _0x2e4319 = this['getSkinImageObj'](this['getHead']());
    if (_0x2e4319) {
        _0x4ac9cf['save']();
        var _0x3cccd6 = this['rad'];
        _0x4ac9cf['drawImage'](_0x2e4319, -_0x3cccd6 * _0x278580, (-_0x3cccd6 + _0x3cccd6 * 0.1) * _0x278580, 0x2 * _0x3cccd6 * _0x278580, 0x2 * _0x3cccd6 * _0x278580), _0x4ac9cf['restore']();
    }
}
};

function _0x134fe0() {
_0x134fe0['superClass']['call'](this, _0x4acf80);
}
window['SnowyOwl'] = _0x134fe0, _0x3360d0['setCustomClassForGameObjType'](_0x134fe0, _0x4acf80, _0x5baef5);
var _0x42b2e3 = _0x42b2e3,
_0xec194 = _0x1dd8d7;
_0x42b2e3['prototype'] = Object['create'](_0xec194['prototype']), _0x42b2e3['prototype']['constructor'] = _0x42b2e3, _0x42b2e3['superClass'] = _0xec194, _0x42b2e3['prototype']['getSpeciesPath'] = function (_0x4d0455) {
return 'ocean/' + _0x4d0455 + '/' + this['animalSpecies'];
}, _0x42b2e3['prototype']['getSkinName'] = function () {
return this['getSpeciesPath']('pelican') + '/pelican' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x42b2e3['prototype']['getAbilityInfo'] = function (_0x4cb53a) {
var _0x15d870 = {};
return _0x15d870['abilName'] = 'Fly with water', _0x15d870['abilImg'] = 'abilities/PelicanFlyWithWater.svg', _0x15d870['skinThemeID'] = this['skinThemeID'], _0x15d870['mopeSeasonID'] = this['mopeSeasonID'], _0x15d870;
}, _0x42b2e3['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) return;
var _0x3373f0 = 0x1f4 / 0x154,
    _0x269dc3 = this['rad'] - this['outlineW'],
    _0x14bc0c = 'skins';
if (this['flag_flying']) {
    var _0x4ec642 = '';
    _0x4ec642 = 'pelican', _0x4ac9cf['save']();
    var _0x1768e7 = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x14157f = !(_0x25ea67 == 0x2 || _0x50a9ba) ? _0x23fdc7(_0x1768e7, 0.9, 0.3, 0x2) : this['birdNoAnimationFlyWingAngle'],
        _0x2641ad = this['getSkinImageObj'](this['getWing']('pelican', 0x1, !![]));
    if (_0x2641ad) {
        _0x4ac9cf['save']();
        var _0x53c7a7 = -(-0.2 + _0x14157f) * _0x40941f,
            _0x269dc3 = this['rad'] * 0.8;
        _0x4ac9cf['rotate'](_0x142401(0x2d) + _0x53c7a7);
        var _0x17d3ab = 0x0,
            _0x503c44 = this['rad'],
            _0x109aa3 = _0x269dc3 * 0x2 * 0.6,
            _0x1ad3c3 = _0x269dc3 * 2.3,
            _0x1efddf = 0x0,
            _0x2085f0 = 1.7;
        _0x4ac9cf['drawImage'](_0x2641ad, _0x17d3ab + _0x109aa3 * -_0x1efddf, _0x503c44 + _0x1ad3c3 * -_0x2085f0, _0x109aa3, _0x1ad3c3), _0x4ac9cf['restore']();
    }
    var _0x2641ad = this['getSkinImageObj'](this['getWing']('pelican', 0x2, !![]));
    if (_0x2641ad) {
        _0x4ac9cf['save']();
        var _0x53c7a7 = -(-0.2 + _0x14157f) * _0x142401(-0x5a),
            _0x269dc3 = this['rad'] * 0.8;
        _0x4ac9cf['rotate'](_0x142401(-0x2d) + _0x53c7a7);
        var _0x17d3ab = 0x0,
            _0x503c44 = this['rad'],
            _0x109aa3 = _0x269dc3 * 0x2 * 0.6,
            _0x1ad3c3 = _0x269dc3 * 2.3,
            _0x1efddf = 0x1,
            _0x2085f0 = 1.7;
        _0x4ac9cf['drawImage'](_0x2641ad, _0x17d3ab + _0x109aa3 * -_0x1efddf, _0x503c44 + _0x1ad3c3 * -_0x2085f0, _0x109aa3, _0x1ad3c3), _0x4ac9cf['restore']();
    }
    _0x4ac9cf['restore']();
} else {
    if (this['specType'] == 0x1) {
        var _0x4ec642 = '';
        _0x4ec642 = 'pelican', _0x4ac9cf['save']();
        var _0x1768e7 = (_0x397f50 - this['spawnTime']) / 0x3e8,
            _0x14157f = !(_0x25ea67 == 0x2) ? _0x23fdc7(_0x1768e7, 0.9, 0.3, 0x2) : 0x0,
            _0x2641ad = this['getSkinImageObj'](this['getWing']('pelican', 0xb, !![]));
        if (_0x2641ad) {
            _0x4ac9cf['save']();
            var _0x53c7a7 = -(-0.2 + _0x14157f) * _0x142401(0x2d),
                _0x269dc3 = this['rad'] * 0.8;
            _0x4ac9cf['rotate'](_0x142401(0x2d) + _0x53c7a7);
            var _0x17d3ab = 0x0,
                _0x503c44 = this['rad'],
                _0x109aa3 = _0x269dc3 * 0x2 * 0.7,
                _0x1ad3c3 = _0x269dc3 * 2.2,
                _0x1efddf = 0x0,
                _0x2085f0 = 1.7;
            _0x4ac9cf['drawImage'](_0x2641ad, _0x17d3ab + _0x109aa3 * -_0x1efddf, _0x503c44 + _0x1ad3c3 * -_0x2085f0, _0x109aa3, _0x1ad3c3), _0x4ac9cf['restore']();
        }
        var _0x2641ad = this['getSkinImageObj'](this['getWing']('pelican', 0x15, !![]));
        if (_0x2641ad) {
            _0x4ac9cf['save']();
            var _0x53c7a7 = -(-0.2 + _0x14157f) * _0x142401(-0x2d),
                _0x269dc3 = this['rad'] * 0.8;
            _0x4ac9cf['rotate'](_0x142401(-0x2d) + _0x53c7a7);
            var _0x17d3ab = 0x0,
                _0x503c44 = this['rad'],
                _0x109aa3 = _0x269dc3 * 0x2 * 0.7,
                _0x1ad3c3 = _0x269dc3 * 2.2,
                _0x1efddf = 0x1,
                _0x2085f0 = 1.7;
            _0x4ac9cf['drawImage'](_0x2641ad, _0x17d3ab + _0x109aa3 * -_0x1efddf, _0x503c44 + _0x1ad3c3 * -_0x2085f0, _0x109aa3, _0x1ad3c3), _0x4ac9cf['restore']();
        }
        _0x4ac9cf['restore']();
    }
}
if (this['specType'] != 0x0 && !this['flag_isGrabbed']) {
    if (this['specType'] == 0x2) {
        var _0x4ee571 = _0x14bc0c + '/' + this['getSpeciesPath']('pelican') + '/ability_pelican.png',
            _0x4bebd8 = this['getSkinImageObj'](_0x4ee571);
        if (_0x4bebd8) {
            _0x4ac9cf['save'](), _0x4ac9cf['rotate'](_0x142401(0xb4));
            var _0x269dc3 = this['rad'] * 0.3,
                _0x55a445 = this['rad'] * 0x1;
            _0x4ac9cf['drawImage'](_0x4bebd8, -_0x269dc3 * _0x3373f0, -_0x269dc3 - _0x55a445 * _0x3373f0, 0x2 * _0x269dc3 * _0x3373f0, 0x2 * _0x269dc3 * _0x3373f0), _0x4ac9cf['restore']();
        }
    }
    var _0x5ae47d = this['getSkinImageObj'](this['getHead']('pelican', !![]));
    if (_0x5ae47d) {
        _0x4ac9cf['save']();
        var _0x269dc3 = this['rad'] * 0x1,
            _0x55a445 = -this['rad'] * 0.3;
        _0x4ac9cf['drawImage'](_0x5ae47d, -_0x269dc3 * _0x3373f0, -_0x269dc3 + _0x55a445 * _0x3373f0, 0x2 * _0x269dc3 * _0x3373f0, 0x2 * _0x269dc3 * _0x3373f0), _0x4ac9cf['restore']();
    }
}
};

function _0x42b2e3() {
_0x42b2e3['superClass']['call'](this, _0x4acf80);
}
window['Pelican'] = _0x42b2e3, _0x3360d0['setCustomClassForGameObjType'](_0x42b2e3, _0x4acf80, _0x4ba38f);
var _0xec194 = _0x1dd8d7;
_0x35467e['prototype'] = Object['create'](_0xec194['prototype']), _0x35467e['prototype']['constructor'] = _0x35467e, _0x35467e['superClass'] = _0xec194, _0x35467e['prototype']['updateZ'] = function () {
this['z'] = 0x3eb + this['rad'];
}, _0x35467e['prototype']['getSkinName'] = function () {
var _0x4a2f06 = '';
if (this['flag_usingAbility'] && !this['flag_underWater']) _0x4a2f06 = '2';
return 'frog/frog' + _0x4a2f06;
}, _0x35467e['prototype']['drawUnderSkinImg'] = function () {
if (this['flag_usingAbility'] && !this['flag_underWater']) {
    var _0x2fdfad = this['rad'] - this['outlineW'],
        _0xf1947d = 0x1f4 / 0x154,
        _0x14e93a = this['getSkinImageObj']('./skins/frog/frogLegs.png');
    if (_0x14e93a) _0x4ac9cf['drawImage'](_0x14e93a, -_0x2fdfad * _0xf1947d, (-_0x2fdfad - _0x2fdfad) * _0xf1947d, 0x2 * _0x2fdfad * _0xf1947d, 0x2 * _0x2fdfad * _0xf1947d);
}
}, _0x35467e['prototype']['canDrawAnimalSkin'] = function () {
return !this['flag_underWater'];
}, _0x35467e['prototype']['drawUnderWater'] = function () {
this['flag_underWater'] && (_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.2, _0x4ac9cf['scale'](0x1, 1.5), _0x486a28(0x0, 0x0, this['rad'] * 0.5, '#598b30'), _0x486a28(0x0, this['rad'] * -0.6, this['rad'] * 0.3, '#64a034'), _0x4ac9cf['restore']());
};

function _0x35467e() {
_0x35467e['superClass']['call'](this, _0x4acf80);
}
window['Frog'] = _0x35467e, _0x3360d0['setCustomClassForGameObjType'](_0x35467e, _0x4acf80, _0xeeef05);
var _0x13295b = _0x1d4a27,
_0xec194 = _0x1dd8d7;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194, _0x1d4a27['prototype']['isAttacking'] = ![], _0x1d4a27['prototype']['objSkinPath'] = {}, _0x1d4a27['prototype']['getSkinName'] = function () {
return this['objSkinPath'][this['getSkinIndex']()]['skin'];
}, _0x1d4a27['prototype']['getSkinIndex'] = function () {
if (this['animalSpecies'] == 0x2 && (this['isAttacking'] || this['flag_usingAbility'])) return 0x3;
return this['animalSpecies'];
}, _0x1d4a27['prototype']['setSkinPath'] = function () {}, _0x1d4a27['prototype']['onAnimalSpeciesSet'] = function () {
let _0x5bff20 = this['animalSpecies'],
    _0x1395c9 = '',
    {
        skin: _0x5ac067,
        wing1: _0x22dc3e,
        wing2: _0x4511de,
        head: _0x368995
    } = {
        'skin': 'duck/' + _0x5bff20 + '/duck' + _0x1395c9,
        'wing1': 'skins/duck/' + _0x5bff20 + '/duck_wing1.png',
        'wing2': 'skins/duck/' + _0x5bff20 + '/duck_wing2.png',
        'head': 'skins/duck/' + _0x5bff20 + '/duck_head.png'
    };
this['objSkinPath'][_0x5bff20] = {
    'skin': _0x5ac067,
    'wing1': _0x22dc3e,
    'wing2': _0x4511de,
    'head': _0x368995
}, _0x5bff20 === 0x2 && (_0x1395c9 = 0x1, {
    skin: _0x5ac067,
    wing1: _0x22dc3e,
    wing2: _0x4511de,
    head: _0x368995
} = {
    'skin': 'duck/' + _0x5bff20 + '/duck' + _0x1395c9,
    'wing1': 'skins/duck/' + _0x5bff20 + '/duck_wing1.png',
    'wing2': 'skins/duck/' + _0x5bff20 + '/duck_wing2.png',
    'head': 'skins/duck/' + _0x5bff20 + '/duck_head.png'
}, this['objSkinPath'][0x3] = {
    'skin': _0x5ac067,
    'wing1': _0x22dc3e,
    'wing2': _0x4511de,
    'head': _0x368995
});
}, _0x13295b['prototype']['drawSkinCustomization'] = function () {
this['isAttacking'] && this['animalSpecies'] == 0x2 && this['angryGooseAnimation'](), this['flag_usingAbility'] && this['animalSpecies'] == 0x2 && this['flyingAnimation']();
}, _0x1d4a27['prototype']['angryGooseAnimation'] = function () {
var _0x29262d = this['skinScale'];
_0x4ac9cf['save']();
var _0x72dde0 = (_0x397f50 - this['spawnTime']) / 0x3e8,
    _0x3aca1e = !(_0x25ea67 == 0x2 || _0x50a9ba) ? _0x23fdc7(_0x72dde0, 0.5, 0.3, 0x2) : this['birdNoAnimationFlyWingAngle'],
    _0x19f419 = this['getSkinImageObj'](this['objSkinPath'][this['getSkinIndex']()]['wing1']);
if (_0x19f419) {
    _0x4ac9cf['save']();
    var _0x928a88 = -(-0.2 + _0x3aca1e) * _0x142401(0xf),
        _0x2b7696 = this['rad'] * 0.8;
    _0x4ac9cf['rotate'](_0x142401(0xf) + _0x928a88);
    var _0x5b09d3 = 0x0,
        _0x3dd200 = this['rad'],
        _0x5d2dae = _0x2b7696 * 0x2 * 0.7,
        _0x3cebb2 = _0x2b7696 * 2.2,
        _0x5cae0b = 0x0,
        _0x25fef7 = 1.5;
    _0x4ac9cf['drawImage'](_0x19f419, _0x5b09d3 + _0x5d2dae * -_0x5cae0b, _0x3dd200 + _0x3cebb2 * -_0x25fef7, _0x5d2dae, _0x3cebb2), _0x4ac9cf['restore']();
}
var _0x19f419 = this['getSkinImageObj'](this['objSkinPath'][this['getSkinIndex']()]['wing2']);
if (_0x19f419) {
    _0x4ac9cf['save']();
    var _0x928a88 = -(-0.2 + _0x3aca1e) * _0x142401(-0xf),
        _0x2b7696 = this['rad'] * 0.8;
    _0x4ac9cf['rotate'](_0x142401(-0xf) + _0x928a88);
    var _0x5b09d3 = 0x0,
        _0x3dd200 = this['rad'],
        _0x5d2dae = _0x2b7696 * 0x2 * 0.7,
        _0x3cebb2 = _0x2b7696 * 2.2,
        _0x5cae0b = 0x1,
        _0x25fef7 = 1.5;
    _0x4ac9cf['drawImage'](_0x19f419, _0x5b09d3 + _0x5d2dae * -_0x5cae0b, _0x3dd200 + _0x3cebb2 * -_0x25fef7, _0x5d2dae, _0x3cebb2), _0x4ac9cf['restore']();
}
var _0x50144c = this['getSkinImageObj'](this['objSkinPath'][this['getSkinIndex']()]['head']);
if (_0x50144c) {
    _0x4ac9cf['save']();
    var _0x2b7696 = this['rad'] * 0x1,
        _0x1ef8a1 = -this['rad'] * 0.1;
    _0x4ac9cf['drawImage'](_0x50144c, -_0x2b7696 * _0x29262d, -_0x2b7696 + _0x1ef8a1 * _0x29262d, 0x2 * _0x2b7696 * _0x29262d, 0x2 * _0x2b7696 * _0x29262d), _0x4ac9cf['restore']();
}
_0x4ac9cf['restore']();
}, _0x1d4a27['prototype']['skinScale'] = 0x1f4 / 0x154, _0x1d4a27['prototype']['flyingAnimation'] = function () {
var _0x4af389 = this['skinScale'];
if (this['flag_flying'] && !this['flag_isGrabbed']) {
    _0x4ac9cf['save']();
    var _0x314b50 = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x2f5175 = !(_0x25ea67 == 0x2 || _0x50a9ba) ? _0x23fdc7(_0x314b50, 0.5, 0.3, 0x2) : this['birdNoAnimationFlyWingAngle'],
        _0x47d62c = this['getSkinImageObj'](this['objSkinPath'][this['getSkinIndex']()]['wing1']);
    if (_0x47d62c) {
        _0x4ac9cf['save']();
        var _0x4c9c1f = -(-0.2 + _0x2f5175) * _0x40941f,
            _0x8252ff = this['rad'] * 0.8;
        _0x4ac9cf['rotate'](_0x142401(0x2d) + _0x4c9c1f);
        var _0x29c3ce = 0x0,
            _0x43506e = this['rad'],
            _0x50ce9d = _0x8252ff * 0x2 * 0.62,
            _0x3e3a4a = _0x8252ff * 2.5,
            _0x2ba084 = 0.2,
            _0x2272f4 = 1.7;
        _0x4ac9cf['drawImage'](_0x47d62c, _0x29c3ce + _0x50ce9d * -_0x2ba084, _0x43506e + _0x3e3a4a * -_0x2272f4, _0x50ce9d, _0x3e3a4a), _0x4ac9cf['restore']();
    }
    var _0x47d62c = this['getSkinImageObj'](this['objSkinPath'][this['getSkinIndex']()]['wing2']);
    if (_0x47d62c) {
        _0x4ac9cf['save']();
        var _0x4c9c1f = -(-0.2 + _0x2f5175) * _0x142401(-0x5a),
            _0x8252ff = this['rad'] * 0.8;
        _0x4ac9cf['rotate'](_0x142401(-0x2d) + _0x4c9c1f);
        var _0x29c3ce = 0x0,
            _0x43506e = this['rad'],
            _0x50ce9d = _0x8252ff * 0x2 * 0.62,
            _0x3e3a4a = _0x8252ff * 2.5,
            _0x2ba084 = 0.8,
            _0x2272f4 = 1.7;
        _0x4ac9cf['drawImage'](_0x47d62c, _0x29c3ce + _0x50ce9d * -_0x2ba084, _0x43506e + _0x3e3a4a * -_0x2272f4, _0x50ce9d, _0x3e3a4a), _0x4ac9cf['restore']();
    }
    _0x4ac9cf['restore']();
}
if (this['specType'] != 0x0 && this['specType'] != undefined) {
    var _0x2193fc = this['getSkinImageObj'](this['objSkinPath'][this['getSkinIndex']()]['head']);
    if (_0x2193fc) {
        _0x4ac9cf['save']();
        var _0x8252ff = this['rad'];
        _0x4ac9cf['drawImage'](_0x2193fc, -_0x8252ff * _0x4af389, (-_0x8252ff + _0x8252ff * 0.1) * _0x4af389, 0x2 * _0x8252ff * _0x4af389, 0x2 * _0x8252ff * _0x4af389), _0x4ac9cf['restore']();
    }
}
}, _0x1d4a27['prototype']['readCustomData_onNewlyVisible'] = function (_0x548381) {
_0x1d4a27['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x548381), this['isAttacking'] = _0x548381['readUInt8']();
}, _0x1d4a27['prototype']['readCustomData_onUpdate'] = function (_0x515b63) {
_0x1d4a27['superClass']['prototype']['readCustomData_onUpdate']['call'](this, _0x515b63), this['isAttacking'] = _0x515b63['readUInt8']();
};

function _0x1d4a27() {
_0xec194['call'](this, _0x4acf80);
}
window['Duck'] = _0x1d4a27, _0x3360d0['setCustomClassForGameObjType'](_0x1d4a27, _0x4acf80, _0x1c58ee);
var _0xec194 = _0x1dd8d7;
_0x19f76b['prototype'] = Object['create'](_0xec194['prototype']), _0x19f76b['prototype']['constructor'] = _0x19f76b, _0x19f76b['superClass'] = _0xec194, _0x19f76b['prototype']['setSkinPath'] = function () {
this['objSkinPath'] = 'duck/duckling';
}, _0x19f76b['prototype']['getSkinName'] = function () {
return this['objSkinPath'];
};

function _0x19f76b() {
_0x19f76b['superClass']['call'](this, _0x4acf80);
}
window['Duckling'] = _0x19f76b, _0x3360d0['setCustomClassForGameObjType'](_0x19f76b, _0x4acf80, _0x5b26cb);
var _0xec194 = _0x1dd8d7;
_0x51bc59['prototype'] = Object['create'](_0xec194['prototype']), _0x51bc59['prototype']['constructor'] = _0x51bc59, _0x51bc59['superClass'] = _0xec194, _0x51bc59['prototype']['updateZ'] = function () {
this['z'] = 0x2710 + this['rad'];
}, _0x51bc59['prototype']['canUseTailslap'] = ![], _0x51bc59['prototype']['tailState'] = 0x0, _0x51bc59['prototype']['getSkinName'] = function () {
return 'volcano/blackdragon/' + this['animalSpecies'] + '/blackdragon';
}, _0x51bc59['prototype']['leftWingAnim'] = null, _0x51bc59['prototype']['drawSkinCustomization'] = function () {
if (this['flag_underWater']) return;
var _0x1ada8a = 0x1f4 / 0x154,
    _0x2dbf43 = this['lava'],
    _0x1fb669 = 0x32;
if (_0x2dbf43 < _0x1fb669) {
    var _0x5ad0d7 = _0x2dbf43 / _0x1fb669,
        _0x4a7dfb = this['getSkinImageObj']('skins/volcano/blackdragon/' + this['animalSpecies'] + '/wings.png');
    if (_0x4a7dfb) {
        _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1 - _0x5ad0d7;
        var _0x44317c = this['rad'] - this['outlineW'];
        _0x4ac9cf['drawImage'](_0x4a7dfb, -_0x44317c * _0x1ada8a, -_0x44317c * _0x1ada8a, 0x2 * _0x44317c * _0x1ada8a, 0x2 * _0x44317c * _0x1ada8a), _0x4ac9cf['restore']();
    }
}
}, _0x51bc59['prototype']['animalInfo'] = function () {
var _0x34ade4 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x34ade4['aniName'] = 'Black Dragon';
    break;
case 0x1:
    _0x34ade4['aniName'] = 'Golden Black Dragon';
    break;
case 0x2:
    _0x34ade4['aniName'] = 'Azure Bringer';
    break;
case 0xcc:
    _0x34ade4['aniName'] = 'Violet Dusk Black Dragon';
    break;
default:
    break;
}
return _0x34ade4['aniCol'] = '#FF9000', _0x34ade4['skinName'] = this['getSkinName'](), _0x34ade4['upgradeText'] = 'UPGRADED to ' + _0x34ade4['aniName'], _0x34ade4['upgradeText'] += '!\x0a Black dragons drink lava instead of water! Black dragons only heal on healing stones/lava!', _0x34ade4['aniCol'] = 'black', _0x34ade4;
}, _0x51bc59['prototype']['getAbilityInfo'] = function (_0x1edd6e) {
var _0x26401e = {};
_0x26401e['abilName'] = 'Multi Fireballs';
var _0x45b213 = 0x0;
switch (this['animalSpecies']) {
case 0x0:
    _0x45b213 = 0x1;
    break;
case 0x1:
    _0x45b213 = 0x2;
    break;
case 0x2:
    _0x45b213 = 0x7;
    break;
}
return _0x26401e['speciesType'] = _0x45b213, _0x26401e['abilImg'] = 'abilities/Fireball.svg', _0x26401e['skinThemeID'] = this['skinThemeID'], _0x26401e['mopeSeasonID'] = this['mopeSeasonID'], _0x26401e;
};

function _0x51bc59() {
this['lava'] = 0x64, _0x51bc59['superClass']['call'](this, _0x4acf80);
}
window['BlackDragon'] = _0x51bc59, _0x3360d0['setCustomClassForGameObjType'](_0x51bc59, _0x4acf80, _0x5186e1);
var _0x27bbbf = _0x27bbbf,
_0xec194 = _0x1dd8d7;
_0x27bbbf['prototype'] = Object['create'](_0xec194['prototype']), _0x27bbbf['prototype']['constructor'] = _0x27bbbf, _0x27bbbf['superClass'] = _0xec194, _0x27bbbf['prototype']['getSkinName'] = function () {
return '/honeybee/0/' + this['animalSubSpecies'] + '/honeybee' + (this['specType'] == 0x0 || this['specType'] == undefined ? '' : this['specType']);
}, _0x27bbbf['prototype']['drawSkinCustomization'] = function () {
_0x4ac9cf['save']();
var _0x11bc6f = (_0x397f50 - this['spawnTime']) / 0x3e8,
    _0x35183a = !(_0x25ea67 == 0x2 || _0x50a9ba || _0x4e85bb) ? _0x23fdc7(_0x11bc6f, 0.2, 0.3, 0x2) : 0x0,
    _0x53bf8c = !(_0x25ea67 == 0x2 || _0x50a9ba || _0x4e85bb) ? _0x23fdc7(_0x11bc6f, 0.2, 0.3, 0x2) : 0x0,
    _0x589e49 = this['rad'] * 0.6,
    _0x58ed75 = 0x1e,
    _0x163f98 = 0x2,
    _0x364f88 = 0x14,
    _0x5b638d = this['getSkinImageObj']('skins/honeybee/0/' + this['animalSubSpecies'] + '/honeybee_wing2.png');
if (_0x5b638d) {
    _0x4ac9cf['save']();
    var _0x2b7d6f = -(-_0x163f98 + _0x53bf8c) * _0x142401(-(_0x58ed75 - 0x5));
    _0x4ac9cf['globalAlpha'] = 0.6, _0x4ac9cf['rotate'](_0x142401(-_0x364f88 + 0xa) + _0x2b7d6f);
    var _0x2fd511 = 0x0,
        _0x3fc1d3 = this['rad'],
        _0xe8acef = _0x589e49 * 0x2 * 0.7,
        _0x268230 = _0x589e49 * 2.3,
        _0x90e33c = 0.5,
        _0x57ec22 = 1.6;
    _0x4ac9cf['drawImage'](_0x5b638d, _0x2fd511 + _0xe8acef * -_0x90e33c, _0x3fc1d3 + _0x268230 * -_0x57ec22, _0xe8acef, _0x268230), _0x4ac9cf['restore']();
}
var _0x5b638d = this['getSkinImageObj']('skins/honeybee/0/' + this['animalSubSpecies'] + '/honeybee_wing1.png');
if (_0x5b638d) {
    _0x4ac9cf['save']();
    var _0x2b7d6f = -(-_0x163f98 + _0x53bf8c) * _0x142401(_0x58ed75 - 0x5);
    _0x4ac9cf['globalAlpha'] = 0.6, _0x4ac9cf['rotate'](_0x142401(_0x364f88 - 0xa) + _0x2b7d6f);
    var _0x2fd511 = 0x0,
        _0x3fc1d3 = this['rad'],
        _0xe8acef = _0x589e49 * 2.3 * 0.7,
        _0x268230 = _0x589e49 * 2.3,
        _0x90e33c = 0.5,
        _0x57ec22 = 1.6;
    _0x4ac9cf['drawImage'](_0x5b638d, _0x2fd511 + _0xe8acef * -_0x90e33c, _0x3fc1d3 + _0x268230 * -_0x57ec22, _0xe8acef, _0x268230), _0x4ac9cf['restore']();
}
var _0x5b638d = this['getSkinImageObj']('skins/honeybee/0/' + this['animalSubSpecies'] + '/honeybee_wing1.png');
if (_0x5b638d) {
    _0x4ac9cf['save']();
    var _0x2b7d6f = -(-_0x163f98 + _0x35183a) * _0x142401(_0x58ed75);
    _0x4ac9cf['globalAlpha'] = 0.5, _0x4ac9cf['rotate'](_0x142401(_0x364f88) + _0x2b7d6f);
    var _0x2fd511 = 0x0,
        _0x3fc1d3 = this['rad'],
        _0xe8acef = _0x589e49 * 0x2 * 0.7,
        _0x268230 = _0x589e49 * 2.3,
        _0x90e33c = 0.5,
        _0x57ec22 = 1.7;
    _0x4ac9cf['drawImage'](_0x5b638d, _0x2fd511 + _0xe8acef * -_0x90e33c, _0x3fc1d3 + _0x268230 * -_0x57ec22, _0xe8acef, _0x268230), _0x4ac9cf['restore']();
}
var _0x5b638d = this['getSkinImageObj']('skins/honeybee/0/' + this['animalSubSpecies'] + '/honeybee_wing2.png');
if (_0x5b638d) {
    _0x4ac9cf['save']();
    var _0x2b7d6f = -(-_0x163f98 + _0x35183a) * _0x142401(-_0x58ed75);
    _0x4ac9cf['globalAlpha'] = 0.5, _0x4ac9cf['rotate'](_0x142401(-_0x364f88) + _0x2b7d6f);
    var _0x2fd511 = 0x0,
        _0x3fc1d3 = this['rad'],
        _0xe8acef = _0x589e49 * 0x2 * 0.7,
        _0x268230 = _0x589e49 * 2.3,
        _0x90e33c = 0.5,
        _0x57ec22 = 1.7;
    _0x4ac9cf['drawImage'](_0x5b638d, _0x2fd511 + _0xe8acef * -_0x90e33c, _0x3fc1d3 + _0x268230 * -_0x57ec22, _0xe8acef, _0x268230), _0x4ac9cf['restore']();
}
_0x4ac9cf['restore']();
};

function _0x27bbbf() {
_0x27bbbf['superClass']['call'](this, _0x4acf80);
}
window['Honeybee'] = _0x27bbbf, _0x3360d0['setCustomClassForGameObjType'](_0x27bbbf, _0x4acf80, _0x5b185f);
var _0x2adbcf = _0x2adbcf,
_0xec194 = _0x1dd8d7;
_0x2adbcf['prototype'] = Object['create'](_0xec194['prototype']), _0x2adbcf['prototype']['constructor'] = _0x2adbcf, _0x2adbcf['superClass'] = _0xec194, _0x2adbcf['prototype']['animalInfo'] = function () {
var _0x542aa2 = {},
    _0x168245 = this['animalSpecies'];
switch (this['animalSpecies']) {
case 0x0:
    _0x542aa2['aniName'] = 'The Phoenix';
    break;
case 0x1:
    _0x542aa2['aniName'] = 'Golden Phoenix';
    break;
case 0x2:
    _0x542aa2['aniName'] = 'Alpha Phoenix';
    break;
case 0xc8:
    _0x168245 = '/' + this['animalSubSpecies'];
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x542aa2['aniName'] = 'Aqua Phoenix';
        break;
    case 0x1:
        _0x542aa2['aniName'] = 'Ice Phoenix';
        break;
    case 0x2:
        _0x542aa2['aniName'] = 'Ash Phoenix';
        break;
    case 0x3:
        _0x542aa2['aniName'] = 'Red Giant Phoenix';
        break;
    }
    break;
}
return _0x542aa2['aniCol'] = '#FF9000', _0x542aa2['skinName'] = '/volcano/phoenix/' + _0x168245 + '/phoenix', _0x542aa2['upgradeText'] = 'UPGRADED to ' + _0x542aa2['aniName'] + '!\x0aPhoenix shoot Firetornados to burn their prey alive!', _0x542aa2;
}, _0x2adbcf['prototype']['getSkinImageObj'] = function (_0x40310f) {
var _0x1cab4b = this['animalSpecies'] === 0x1 || this['animalSpecies'] === 0x2 || this['animalSpecies'] === 0xc8 ? 0x1 : this['mopeSeasonID'];
return this['getSkinImageObjForSeason'](_0x40310f, _0x1cab4b);
}, _0x2adbcf['prototype']['getAbilityInfo'] = function (_0x4fe7b0) {
var _0x2cef9d = {},
    _0x3c37a4 = this['animalSpecies'];
return this['animalSpecies'] == 0xc8 && (_0x3c37a4 += '/' + this['animalSubSpecies']), _0x2cef9d['abilName'] = 'Fire Tornado!', _0x2cef9d['abilImg'] = 'abilities/Firestorm.svg', _0x2cef9d['skinThemeID'] = this['skinThemeID'], _0x2cef9d['mopeSeasonID'] = this['mopeSeasonID'], _0x2cef9d;
}, _0x2adbcf['prototype']['getSkinName'] = function () {
var _0x25409d = this['animalSpecies'];
return this['animalSpecies'] == 0xc8 && (_0x25409d += '/' + this['animalSubSpecies']), '/volcano/phoenix/' + _0x25409d + '/phoenix' + (this['specType'] == 0x0 || this['specType'] == undefined ? '' : this['specType']);
}, _0x2adbcf['prototype']['getSkinPart'] = function (_0x3eec48) {
var _0x544298 = this['animalSpecies'];
return this['animalSpecies'] == 0xc8 && (_0x544298 += '/' + this['animalSubSpecies']), this['getSkinImageObj']('skins/volcano/phoenix/' + _0x544298 + '/' + _0x3eec48 + '.png');
}, _0x2adbcf['prototype']['drawSkinImg'] = function () {
if (!(_0x25ea67 == 0x2 || _0x50a9ba || _0x2f8083)) {
    var _0x1bf142 = 0x1f4 / 0x154,
        _0x3ae510 = this['rad'] - this['outlineW'],
        _0x1a44ea = this['getSkinPart']('phoenix_body'),
        _0x20f5d5 = this['getSkinPart']('phoenix_head'),
        _0x47d90e = Math['trunc'](_0x397f50 / 0xa6) % 0x6,
        _0x3894a7 = this['getSkinPart']('/tail_mid/tail_mid_' + _0x47d90e);
    if (_0x3894a7) _0x4ac9cf['drawImage'](_0x3894a7, -_0x3ae510 * _0x1bf142, -_0x3ae510 * _0x1bf142, 0x2 * _0x3ae510 * _0x1bf142, 0x2 * _0x3ae510 * _0x1bf142);
    var _0x47d90e = Math['trunc'](_0x397f50 / 0xa6) % 0x6,
        _0x248a5a = Math['trunc'](_0x397f50 / 0xfa) % 0x6,
        _0x1bae48 = this['getSkinPart']('/tail/tail_' + _0x47d90e),
        _0x40a584 = this['getSkinPart']('tail_flipped/tail_' + _0x248a5a);
    if (_0x1bae48) _0x4ac9cf['drawImage'](_0x1bae48, -_0x3ae510 * _0x1bf142, -_0x3ae510 * _0x1bf142, 0x2 * _0x3ae510 * _0x1bf142, 0x2 * _0x3ae510 * _0x1bf142);
    if (_0x40a584) _0x4ac9cf['drawImage'](_0x40a584, -_0x3ae510 * _0x1bf142, -_0x3ae510 * _0x1bf142, 0x2 * _0x3ae510 * _0x1bf142, 0x2 * _0x3ae510 * _0x1bf142);
    if (_0x1a44ea) _0x4ac9cf['drawImage'](_0x1a44ea, -_0x3ae510 * _0x1bf142, -_0x3ae510 * _0x1bf142, 0x2 * _0x3ae510 * _0x1bf142, 0x2 * _0x3ae510 * _0x1bf142);
    var _0x41bc45 = Math['trunc'](_0x397f50 / 0x7d) % 0x8,
        _0x4bde42 = Math['trunc'](_0x397f50 / 0x96) % 0x8,
        _0x13dd54 = this['getSkinPart']('wing_flame_orange/wing_flame_orange_' + _0x41bc45),
        _0x29b648 = this['getSkinPart']('wing_flame_yellow/wing_flame_yellow_' + _0x4bde42);
    if (_0x13dd54) _0x4ac9cf['drawImage'](_0x13dd54, -_0x3ae510 * _0x1bf142, -_0x3ae510 * _0x1bf142, 0x2 * _0x3ae510 * _0x1bf142, 0x2 * _0x3ae510 * _0x1bf142);
    if (_0x29b648) _0x4ac9cf['drawImage'](_0x29b648, -_0x3ae510 * _0x1bf142, -_0x3ae510 * _0x1bf142, 0x2 * _0x3ae510 * _0x1bf142, 0x2 * _0x3ae510 * _0x1bf142);
    var _0x5b4cfb = this['getSkinPart']('wing_flame_orange_flipped/wing_flame_orange_' + _0x41bc45),
        _0x10c2fa = this['getSkinPart']('wing_flame_yellow_flipped/wing_flame_yellow_' + _0x4bde42);
    if (_0x5b4cfb) _0x4ac9cf['drawImage'](_0x5b4cfb, -_0x3ae510 * _0x1bf142, -_0x3ae510 * _0x1bf142, 0x2 * _0x3ae510 * _0x1bf142, 0x2 * _0x3ae510 * _0x1bf142);
    if (_0x10c2fa) _0x4ac9cf['drawImage'](_0x10c2fa, -_0x3ae510 * _0x1bf142, -_0x3ae510 * _0x1bf142, 0x2 * _0x3ae510 * _0x1bf142, 0x2 * _0x3ae510 * _0x1bf142);
    if (_0x20f5d5) _0x4ac9cf['drawImage'](_0x20f5d5, -_0x3ae510 * _0x1bf142, -_0x3ae510 * _0x1bf142, 0x2 * _0x3ae510 * _0x1bf142, 0x2 * _0x3ae510 * _0x1bf142);
} else _0x2adbcf['superClass']['prototype']['drawSkinImg']['call'](this);
};

function _0x2adbcf() {
_0x2adbcf['superClass']['call'](this, _0x4acf80);
}
window['Phoenix'] = _0x2adbcf, _0x3360d0['setCustomClassForGameObjType'](_0x2adbcf, _0x4acf80, _0x3fcb38);
var _0x250fd4 = _0x250fd4,
_0xec194 = _0x1dd8d7;
_0x250fd4['prototype'] = Object['create'](_0xec194['prototype']), _0x250fd4['prototype']['constructor'] = _0x250fd4, _0x250fd4['superClass'] = _0xec194, _0x250fd4['prototype']['animalInfo'] = function () {
var _0x346dfa = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x346dfa['aniName'] = 'Pigeon';
    break;
case 0x1:
    _0x346dfa['aniName'] = 'Rare White Dove', _0x346dfa['upgradeText'] += '\x0a(Doves fly faster!)';
    break;
case 0xca:
    _0x346dfa['aniName'] = 'Thug Pigeon';
    break;
}
return _0x346dfa['aniCol'] = '#FF9000', _0x346dfa['skinName'] = this['getSkinName'](), _0x346dfa['upgradeText'] = 'UPGRADED to ' + _0x346dfa['aniName'] + '!\x0aHold W to fly around. ', _0x346dfa;
}, _0x250fd4['prototype']['getSkinName'] = function () {
let _0x1e733e = this['getSpeciesPath']() + '/pigeon';
return _0x1e733e += this['specType'] == 0x0 ? '' : this['specType'], _0x1e733e;
}, _0x250fd4['prototype']['getSpeciesPath'] = function () {
return 'land/pigeon/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x250fd4['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x250fd4['prototype']['getWing'] = function (_0x3d374b) {
var _0x3b76c4 = 'skins/' + this['getSpeciesPath']();
return _0x3b76c4 += '/pigeon_wing' + _0x3d374b + '.png', _0x3b76c4;
}, _0x250fd4['prototype']['getHead'] = function () {
var _0x373142 = 'skins/' + this['getSpeciesPath']();
return _0x373142 += '/pigeon_head.png', _0x373142;
}, _0x250fd4['prototype']['theFrame'] = 0x0, _0x250fd4['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) return;
var _0x46e11c = 'skins'; {
    var _0x4ab38a = 0x1f4 / 0x154;
    if (this['flag_flying'] && !this['flag_isGrabbed']) {
        _0x4ac9cf['save']();
        var _0xc13621 = _0x2dd807('bird', this['spawnTime']);
        _0xc13621 !== undefined && _0xc13621 != null && (this['theFrame'] = _0xc13621);
        var _0x5dca19 = !(_0x25ea67 == 0x2 || _0x50a9ba) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'],
            _0x4ca9de = this['getSkinImageObj'](this['getWing'](0x1));
        if (_0x4ca9de) {
            _0x4ac9cf['save']();
            var _0x19e48b = -(-0.2 + _0x5dca19) * _0x40941f,
                _0x455da8 = this['rad'] * 0.8;
            _0x4ac9cf['rotate'](_0xb6aa34 + _0x19e48b);
            var _0x5da84e = 0x0,
                _0x158083 = this['rad'],
                _0x166990 = _0x455da8 * 0x2 * 0.62,
                _0x3464fd = _0x455da8 * 2.5,
                _0x17ac00 = 0.2,
                _0x391e8f = 1.7;
            _0x4ac9cf['drawImage'](_0x4ca9de, _0x5da84e + _0x166990 * -_0x17ac00, _0x158083 + _0x3464fd * -_0x391e8f, _0x166990, _0x3464fd), _0x4ac9cf['restore']();
        }
        var _0x4ca9de = this['getSkinImageObj'](this['getWing'](0x2));
        if (_0x4ca9de) {
            _0x4ac9cf['save']();
            var _0x19e48b = -(-0.2 + _0x5dca19) * _0x142401(-0x5a),
                _0x455da8 = this['rad'] * 0.8;
            _0x4ac9cf['rotate'](_0x142401(-0x2d) + _0x19e48b);
            var _0x5da84e = 0x0,
                _0x158083 = this['rad'],
                _0x166990 = _0x455da8 * 0x2 * 0.62,
                _0x3464fd = _0x455da8 * 2.5,
                _0x17ac00 = 0.8,
                _0x391e8f = 1.7;
            _0x4ac9cf['drawImage'](_0x4ca9de, _0x5da84e + _0x166990 * -_0x17ac00, _0x158083 + _0x3464fd * -_0x391e8f, _0x166990, _0x3464fd), _0x4ac9cf['restore']();
        }
        _0x4ac9cf['restore']();
    }
    if (this['specType'] != 0x0 && this['specType'] != undefined) {
        var _0x3def71 = this['getSkinImageObj'](this['getHead']());
        if (_0x3def71) {
            _0x4ac9cf['save']();
            var _0x455da8 = this['rad'];
            _0x4ac9cf['drawImage'](_0x3def71, -_0x455da8 * _0x4ab38a, (-_0x455da8 + _0x455da8 * 0.1) * _0x4ab38a, 0x2 * _0x455da8 * _0x4ab38a, 0x2 * _0x455da8 * _0x4ab38a), _0x4ac9cf['restore']();
        }
    }
}
};

function _0x250fd4() {
_0x250fd4['superClass']['call'](this, _0x4acf80);
}
window['Pigeon'] = _0x250fd4, _0x3360d0['setCustomClassForGameObjType'](_0x250fd4, _0x4acf80, _0x576572);
var _0x1678d1 = _0x1678d1,
_0xec194 = _0x1dd8d7;
_0x1678d1['prototype'] = Object['create'](_0xec194['prototype']), _0x1678d1['prototype']['constructor'] = _0x1678d1, _0x1678d1['superClass'] = _0xec194, _0x1678d1['prototype']['getSpeciesPath'] = function (_0x2fcdb2) {
var _0x22eaba = '/land/' + _0x2fcdb2 + '/' + this['animalSpecies'] + (this['animalSpecies'] == 0x4 ? '/' + this['animalSubSpecies'] : '');
return _0x22eaba;
}, _0x1678d1['prototype']['getWing'] = function (_0x2b3a51, _0x539828, _0x1ef079) {
var _0x12e11b = 'skins/';
switch (this['animalSpecies']) {
case 0x5:
case 0x6:
case 0xc8:
case 0xdc:
    _0x12e11b += this['getSpeciesPath'](_0x2b3a51);
    break;
default:
    _0x12e11b += 'land/' + _0x2b3a51;
}
switch (_0x539828) {
case 0x1:
    _0x12e11b += '/' + _0x2b3a51 + '_wing1.png';
    break;
case 0x2:
    _0x12e11b += '/' + _0x2b3a51 + '_wing2.png';
    break;
}
return _0x12e11b;
}, _0x1678d1['prototype']['animalInfo'] = function () {
var _0x41e4fc = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x41e4fc['aniName'] = 'Toco Toucan';
    break;
case 0x1:
    _0x41e4fc['aniName'] = 'Choco Toucan';
    break;
case 0x2:
    _0x41e4fc['aniName'] = 'Keel-Billed Toucan';
    break;
case 0x3:
    _0x41e4fc['aniName'] = 'Fiery Toucan';
    break;
case 0x4:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x41e4fc['aniName'] = 'Lava Toucan';
        break;
    case 0x1:
        _0x41e4fc['aniName'] = 'Ice Toucan';
        break;
    case 0x2:
        _0x41e4fc['aniName'] = 'Aqua Toucan';
        break;
    }
    break;
case 0x5:
    _0x41e4fc['aniName'] = 'Pakistan Toucan';
    break;
case 0x6:
    _0x41e4fc['aniName'] = 'Prisma Toucan';
    break;
case 0x64:
    _0x41e4fc['aniName'] = 'The Dapper';
    break;
case 0xc8:
    _0x41e4fc['aniName'] = 'Ice Toucan';
    break;
case 0xca:
    _0x41e4fc['aniName'] = 'Corpse Flower Toucan';
    break;
case 0xdc:
    _0x41e4fc['aniName'] = 'Molten Toucan';
    break;
}
return _0x41e4fc['upgradeText'] = 'UPGRADED to ' + _0x41e4fc['aniName'] + '!\x0aHold right click (or W) to fly!\x0a(HINT: Start flying from a fruit tree or bush to throw fruit upon landing!)', _0x41e4fc['aniCol'] = '#FF9000', _0x41e4fc['skinName'] = this['getSpeciesPath']('toucan') + '/toucan', _0x41e4fc;
}, _0x1678d1['prototype']['getSkinName'] = function () {
var _0x252f17 = this['getSpeciesPath']('toucan') + '/toucan' + (this['specType'] == 0x0 ? '' : this['specType']);
return _0x252f17;
}, _0x1678d1['prototype']['drawSkinCustomization'] = function () {
var _0xdd230d = 0x1f4 / 0x154;
if (!this['flag_usingAbility']) {
    this['drawBeak']();
    return;
} {
    if (this['flag_flying'] && !this['flag_isGrabbed']) {
        _0x4ac9cf['save']();
        var _0x1ff9de = _0x2dd807('bird', this['spawnTime']);
        _0x1ff9de !== undefined && _0x1ff9de != null && (this['theFrame'] = _0x1ff9de);
        var _0x46a02 = !(_0x25ea67 == 0x2 || _0x50a9ba) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'],
            _0x27fed1 = this['getSkinImageObj'](this['getWing']('toucan', 0x1, !![]));
        if (_0x27fed1) {
            _0x4ac9cf['save']();
            var _0x3c7105 = -(-0.2 + _0x46a02) * _0x40941f,
                _0x1cb296 = this['rad'] * 0.8;
            _0x4ac9cf['rotate'](_0x142401(0x2d) + _0x3c7105);
            var _0x14c563 = 0x0,
                _0x321fc3 = this['rad'],
                _0x12559c = _0x1cb296 * 0x2 * 0.62,
                _0x11c34e = _0x1cb296 * 2.5,
                _0x5da09f = 0.2,
                _0x38427d = 1.7;
            _0x4ac9cf['drawImage'](_0x27fed1, _0x14c563 + _0x12559c * -_0x5da09f, _0x321fc3 + _0x11c34e * -_0x38427d, _0x12559c, _0x11c34e), _0x4ac9cf['restore']();
        }
        var _0x27fed1 = this['getSkinImageObj'](this['getWing']('toucan', 0x2, !![]));
        if (_0x27fed1) {
            _0x4ac9cf['save']();
            var _0x3c7105 = -(-0.2 + _0x46a02) * _0x142401(-0x5a),
                _0x1cb296 = this['rad'] * 0.8;
            _0x4ac9cf['rotate'](_0x142401(-0x2d) + _0x3c7105);
            var _0x14c563 = 0x0,
                _0x321fc3 = this['rad'],
                _0x12559c = _0x1cb296 * 0x2 * 0.62,
                _0x11c34e = _0x1cb296 * 2.5,
                _0x5da09f = 0.8,
                _0x38427d = 1.7;
            _0x4ac9cf['drawImage'](_0x27fed1, _0x14c563 + _0x12559c * -_0x5da09f, _0x321fc3 + _0x11c34e * -_0x38427d, _0x12559c, _0x11c34e), _0x4ac9cf['restore']();
        }
        _0x4ac9cf['restore']();
    }
    if (this['specType'] != 0x0 && this['specType'] != undefined) {
        var _0x5c3004 = this['getSkinImageObj'](this['getHead']('toucan', !![]));
        if (_0x5c3004) {
            _0x4ac9cf['save']();
            var _0x1cb296 = this['rad'];
            _0x4ac9cf['drawImage'](_0x5c3004, -_0x1cb296 * _0xdd230d, (-_0x1cb296 + _0x1cb296 * 0.1) * _0xdd230d, 0x2 * _0x1cb296 * _0xdd230d, 0x2 * _0x1cb296 * _0xdd230d), _0x4ac9cf['restore']();
        }
        this['drawBeak']();
    }
}
}, _0x1678d1['prototype']['drawBeak'] = function () {
var _0x206df2 = 0x1f4 / 0x154,
    _0x3f026a = this['flag_flying'] && !this['flag_isGrabbed'] ? 0.25 : 0.1,
    _0x2fa755 = 'skins/' + this['getSpeciesPath']('toucan') + '/toucan_beak.png',
    _0x345724 = this['getSkinImageObj'](_0x2fa755);
if (_0x345724) {
    _0x4ac9cf['save']();
    var _0x27afad = this['rad'];
    _0x4ac9cf['drawImage'](_0x345724, -_0x27afad * _0x206df2, (-_0x27afad + _0x27afad * _0x3f026a) * _0x206df2, 0x2 * _0x27afad * _0x206df2, 0x2 * _0x27afad * _0x206df2), _0x4ac9cf['restore']();
}
};

function _0x1678d1() {
_0x1678d1['superClass']['call'](this, _0x4acf80), this['doesDrawEffectScale'] = ![];
}
window['Toucan'] = _0x1678d1, _0x3360d0['setCustomClassForGameObjType'](_0x1678d1, _0x4acf80, _0x375310);
var _0x4bb9d = _0x4bb9d,
_0xec194 = _0x1dd8d7;
_0x4bb9d['prototype'] = Object['create'](_0xec194['prototype']), _0x4bb9d['prototype']['constructor'] = _0x4bb9d, _0x4bb9d['superClass'] = _0xec194, _0x4bb9d['prototype']['animalInfo'] = function () {
var _0x358984 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x358984['aniName'] = 'Tiger';
    break;
case 0x1:
    _0x358984['aniName'] = 'rare White Tiger';
    break;
case 0xcc:
    _0x358984['aniName'] = 'Chimera Tiger';
    break;
}
return _0x358984['aniDesc'] = '', _0x358984['upgradeText'] = 'UPGRADED to ' + _0x358984['aniName'] + '!\x0a Tigers can launch an ambush attack (HOLD W to grow a bush)!', _0x358984['aniCol'] = '#FF9000', _0x358984['skinName'] = this['getSkinName'](), _0x358984;
}, _0x4bb9d['prototype']['getSkinName'] = function () {
let _0x13ca7f = this['getSpeciesPath']() + '/tiger';
return _0x13ca7f += this['specType'] == 0x0 ? '' : this['specType'], _0x13ca7f;
}, _0x4bb9d['prototype']['getSpeciesPath'] = function () {
return 'land/tiger/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x4bb9d['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x4bb9d['prototype']['getSkinImageObj'] = function (_0x392884) {
var _0xd158c8 = this['animalSpecies'] === 0xcc ? 0x1 : this['mopeSeasonID'];
return this['getSkinImageObjForSeason'](_0x392884, _0xd158c8);
};

function _0x4bb9d() {
_0x4bb9d['superClass']['call'](this, _0x4acf80);
}
window['Tiger'] = _0x4bb9d, _0x3360d0['setCustomClassForGameObjType'](_0x4bb9d, _0x4acf80, _0x342f2b);
var _0xec194 = _0x1dd8d7;
_0x4eb67d['prototype'] = Object['create'](_0xec194['prototype']), _0x4eb67d['prototype']['constructor'] = _0x4eb67d, _0x4eb67d['superClass'] = _0xec194, _0x4eb67d['prototype']['animalInfo'] = function () {
var _0x315908 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x315908['aniName'] = 'Cobra';
    break;
case 0x64:
    _0x315908['aniName'] = 'Wyrmous';
    break;
case 0xc8:
    _0x315908['aniName'] = 'Celestial Cobra';
    break;
}
return _0x315908['skinName'] = this['getSkinName'](), _0x315908['aniDesc'] = '', _0x315908['upgradeText'] = 'UPGRADED to ' + _0x315908['aniName'] + '!\x0a Hold W to Spit venom, and poison animals with your bite!', _0x315908['aniCol'] = 'black', _0x315908;
}, _0x4eb67d['prototype']['getAbilityInfo'] = function (_0x563e34) {
var _0xc2f618 = {};
return _0xc2f618['abilName'] = 'Venom Spit', _0xc2f618['abilImg'] = 'abilities/Spit.svg', _0xc2f618['skinThemeID'] = this['skinThemeID'], _0xc2f618['mopeSeasonID'] = this['mopeSeasonID'], _0xc2f618;
}, _0x4eb67d['prototype']['getSkinName'] = function () {
let _0x2a2c4a = this['getSpeciesPath']() + '/cobra';
return _0x2a2c4a += this['flag_usingAbility'] ? '2' : '', _0x2a2c4a;
}, _0x4eb67d['prototype']['getSpeciesPath'] = function () {
return 'land/cobra/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x4eb67d['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x4eb67d['prototype']['drawUnderSkinImg'] = function () {
if (this['flag_usingAbility']) return;
var _0x30ffe4 = this['rad'] - this['outlineW'],
    _0x374eed = 0x1f4 / 0x154,
    _0x3a2eb9 = 'skins/' + this['getSpeciesPath']() + '/tongue.png',
    _0x2ca8ff = this['getSkinImageObj'](_0x3a2eb9),
    _0x287c47 = (_0x397f50 - this['spawnTime']) / 0x3e8,
    _0x2ad80b = _0x25ea67 == 0x2 ? 0x0 : _0x23fdc7(_0x287c47, 0.5, 0x5, 0.5),
    _0x3e69df = _0x25ea67 == 0x2 ? 0x0 : 0x5;
_0x2ca8ff && _0x4ac9cf['drawImage'](_0x2ca8ff, -_0x30ffe4 * _0x374eed, -(_0x30ffe4 + _0x3e69df + _0x2ad80b) * _0x374eed, 0x2 * _0x30ffe4 * _0x374eed, 0x2 * _0x30ffe4 * _0x374eed);
};

function _0x4eb67d() {
_0x4eb67d['superClass']['call'](this, _0x4acf80);
}
window['Cobra'] = _0x4eb67d, _0x3360d0['setCustomClassForGameObjType'](_0x4eb67d, _0x4acf80, _0x204cad);
var _0x1b3011 = _0x1b3011,
_0xec194 = _0x5adfe2;
_0x1b3011['prototype'] = Object['create'](_0xec194['prototype']), _0x1b3011['prototype']['constructor'] = _0x1b3011, _0x1b3011['superClass'] = _0xec194, _0x1b3011['prototype']['skinPath'] = {}, _0x1b3011['prototype']['updateZ'] = function () {
this['z'] = 0x3ed;
}, _0x1b3011['prototype']['customDraw'] = function (_0x134d69) {
if (!(_0x25ea67 == 0x2) && !_0x50a9ba) {
    var _0x54f773 = Math['trunc'](_0x397f50 / 0x78) % 0x5,
        _0x519891 = this['getSkinImageObj'](this['skinPath'][_0x54f773]);
    if (_0x519891) {
        var _0x897ee2 = 0x0,
            _0x525f09 = this['rad'] * 0.4,
            _0x1b72c8 = this['rad'] * 0x2 * (0x2 + 0x2) / 0x3,
            _0x2190a6 = this['rad'] * 0x2,
            _0x502ead = 0.5,
            _0x171531 = 0.95;
        _0x4ac9cf['save'](), _0x4ac9cf['rotate'](_0x142401(0x0)), _0x4ac9cf['drawImage'](_0x519891, _0x897ee2 + _0x1b72c8 * -_0x502ead, _0x525f09 + _0x2190a6 * -_0x171531, _0x1b72c8, _0x2190a6), _0x4ac9cf['restore']();
    }
} else {
    var _0x519891 = this['getSkinImageObj'](this['skinPath'][0x0]);
    if (_0x519891) {
        var _0x897ee2 = 0x0,
            _0x525f09 = this['rad'] * 0.4,
            _0x1b72c8 = this['rad'] * 0x2 * (0x2 + 0x2) / 0x3,
            _0x2190a6 = this['rad'] * 0x2,
            _0x502ead = 0.5,
            _0x171531 = 0.95;
        _0x4ac9cf['save'](), _0x4ac9cf['rotate'](_0x142401(0x0)), _0x4ac9cf['drawImage'](_0x519891, _0x897ee2 + _0x1b72c8 * -_0x502ead, _0x525f09 + _0x2190a6 * -_0x171531, _0x1b72c8, _0x2190a6), _0x4ac9cf['restore']();
    }
}
}, _0x1b3011['prototype']['readCustomData_onNewlyVisible'] = function (_0x54228e) {
_0x1b3011['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x54228e), this['speciesType'] = _0x54228e['readUInt16'](), this['speciesSubType'] = _0x54228e['readUInt16']();
for (var _0x51e068 = 0x0; _0x51e068 <= 0x5; _0x51e068++) this['skinPath'][_0x51e068] = 'gameobj/' + this['oType'] + '/' + this['speciesType'] + '/' + _0x51e068 + '.png';
};

function _0x1b3011() {
_0x1b3011['superClass']['call'](this, _0xb9674f), this['webTransparency'] = 0x0, this['doesDrawEffectScale'] = !![], this['drawEffectScale_Slow'] = !![];
}
window['Fire'] = _0x1b3011, _0x3360d0['setCustomClassForGameObjType'](_0x1b3011, _0xb9674f);
var _0xec194 = _0x5adfe2;
_0x58ef1f['prototype'] = Object['create'](_0xec194['prototype']), _0x58ef1f['prototype']['constructor'] = _0x58ef1f, _0x58ef1f['superClass'] = _0xec194, _0x58ef1f['prototype']['updateZ'] = function () {
this['z'] = 0x3ed;
}, _0x58ef1f['prototype']['skinPath'] = {}, _0x58ef1f['prototype']['ANIMATION_NAME'] = 'fireball', _0x58ef1f['prototype']['customDraw'] = function (_0x35d324) {
if (!(_0x25ea67 == 0x2) && !_0x50a9ba) {
    let _0x139c31 = _0x2dd807(this['ANIMATION_NAME'], this['spawnTime']);
    if (_0x139c31 == null || _0x139c31 == NaN) _0x139c31 = 0x0;
    var _0x3446de = Math['trunc'](_0x397f50 / 0x78) % 0x5,
        _0x55ca5d = this['getSkinImageObj'](this['skinPath'][_0x3446de]);
    if (_0x55ca5d) {
        var _0x2eea25 = 0x0,
            _0xe9d0fa = this['rad'] * 0.4,
            _0x1a1742 = this['rad'] * 0x2 * (0x2 + _0x139c31 * 0x2) / 0x3,
            _0x23a22c = this['rad'] * 3.5 * _0x139c31,
            _0x2791f0 = 0.5,
            _0x5a6e55 = 0.95;
        _0x4ac9cf['save'](); {
            _0x4ac9cf['globalAlpha'] *= this['onFireEffA'] * _0x139c31, _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x55ca5d, _0x2eea25 + _0x1a1742 * -_0x2791f0, _0xe9d0fa + _0x23a22c * -_0x5a6e55, _0x1a1742, _0x23a22c);
        }
        _0x4ac9cf['restore']();
    }
} else {
    var _0x55ca5d = this['getSkinImageObj'](this['skinPath'][0x0]);
    if (_0x55ca5d) {
        var _0x2eea25 = 0x0,
            _0xe9d0fa = this['rad'] * 0.4,
            _0x1a1742 = this['rad'] * 0x2 * (0x2 + 0x2) / 0x3,
            _0x23a22c = this['rad'] * 3.5,
            _0x2791f0 = 0.5,
            _0x5a6e55 = 0.95;
        _0x4ac9cf['save'](); {
            _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x55ca5d, _0x2eea25 + _0x1a1742 * -_0x2791f0, _0xe9d0fa + _0x23a22c * -_0x5a6e55, _0x1a1742, _0x23a22c);
        }
        _0x4ac9cf['restore']();
    }
}
}, _0x58ef1f['prototype']['readCustomData_onNewlyVisible'] = function (_0x298dd7) {
_0x58ef1f['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x298dd7), this['speciesType'] = _0x298dd7['readUInt16'](), this['speciesSubType'] = _0x298dd7['readUInt16']();
for (var _0xf23126 = 0x0; _0xf23126 <= 0x5; _0xf23126++) this['skinPath'][_0xf23126] = 'gameobj/' + this['oType'] + '/' + this['speciesType'] + '/' + _0xf23126 + '.png';
};

function _0x58ef1f() {
_0x58ef1f['superClass']['call'](this, _0x2cc0bb);
}
window['FireBall'] = _0x58ef1f, _0x3360d0['setCustomClassForGameObjType'](_0x58ef1f, _0x2cc0bb);
var _0xec194 = _0x5adfe2;
_0x3a1477['prototype'] = Object['create'](_0xec194['prototype']), _0x3a1477['prototype']['constructor'] = _0x3a1477, _0x3a1477['superClass'] = _0xec194, _0x3a1477['prototype']['nickName'] = 'mope.io', _0x3a1477['prototype']['fadeAway'] = ![], _0x3a1477['prototype']['webTransparency'] = 0x64, _0x3a1477['prototype']['carcassType'] = 0x0, _0x3a1477['prototype']['updateZ'] = function () {
if (this['flag_flying']) this['z'] = 0x186a0 + this['rad'] / 0xa;
else this['z'] = -0x64;
}, _0x3a1477['prototype']['getNameSize'] = function () {
return 0x6;
}, _0x3a1477['prototype']['setNick'] = function (_0x4c3a4f) {
this['nickName'] = _0x4c3a4f, null == this['nickTXT'] ? (this['nickTXT'] = new _0x128c61(this['getNameSize'](), '#FFFFFF'), this['nickTXT']['strokeW'] = 1.5, this['nickTXT']['renderScale'] = 0x5, this['nickTXT']['setText'](this['nickName'])) : (this['nickTXT']['setFontSize'](this['getNameSize']()), this['nickTXT']['setText'](this['nickName']));
}, _0x3a1477['prototype']['customDraw'] = function (_0x3fbad6) {
_0x4ac9cf['save']();
var _0xa77e78 = 0.3;
if (this['fadeAway']) {
    var _0xc6bed0 = this['webTransparency'] / 0x64;
    _0x4ac9cf['globalAlpha'] = _0xc6bed0, _0xa77e78 = Math['min'](_0xa77e78, _0xc6bed0);
} else _0x4ac9cf['globalAlpha'] = 0.8;
var _0x473a5a = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + this['oType'] + '.png');
if (_0x473a5a) {
    var _0x267967 = this['rad'];
    _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x473a5a, -_0x267967, -_0x267967, 0x2 * _0x267967, 0x2 * _0x267967);
}
_0x4ac9cf['restore'](), this['drawNickName'](_0xa77e78);
}, _0x3a1477['prototype']['drawNickName'] = function (_0x24acd4) {
if (!this['spawnedFromDeadAni']) return;
this['nickName'] && this['nickTXT'] && !_0x47dcae && (_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = _0x24acd4, this['nickTXT']['x'] = 0x0, this['nickTXT']['y'] = this['rad'], this['nickTXT']['draw'](), _0x4ac9cf['restore']());
}, _0x3a1477['prototype']['spawnedFromDeadAni'] = ![], _0x3a1477['prototype']['readCustomData_onNewlyVisible'] = function (_0x38e440) {
this['spawnedFromDeadAni'] = _0x38e440['readUInt8']() == 0x1, this['animalType'] = _0x38e440['readUInt16'](), this['animalHomeBiome'] = _0x38e440['readUInt8']();
var _0x19a37d = _0x38e440['readString']();
this['fadeAway'] = _0x38e440['readUInt8']() == 0x1;
if (this['fadeAway']) this['webTransparency'] = _0x38e440['readUInt16']();
if (this['spawnedFromDeadAni']) this['setNick'](_0x19a37d ? _0x19a37d : 'mope.io');
}, _0x3a1477['prototype']['readUpdatedProperty'] = function (_0x3c8915, _0x1edb66) {
if (_0x3c8915 == _0x3c8dcb) this['flag_flying'] = _0x1edb66['readUInt8']() == 0x1;
else _0x3c8915 == _0x27d4f9 && (this['webTransparency'] = _0x1edb66['readUInt16']());
};

function _0x3a1477() {
_0x3a1477['superClass']['call'](this, _0x2476bb), this['shrinkedRad'] = 0x0;
}
window['AnimalCarcass'] = _0x3a1477, _0x3360d0['setCustomClassForGameObjType'](_0x3a1477, _0x2476bb);
var _0xec194 = _0x5adfe2;
_0x185a38['prototype'] = Object['create'](_0xec194['prototype']), _0x185a38['prototype']['constructor'] = _0x185a38, _0x185a38['superClass'] = _0xec194, _0x185a38['prototype']['chilliType'] = 0x0, _0x185a38['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x185a38['prototype']['setSkinPath'] = function () {
var _0x2278ab = this['isEdibleOutlined']() ? 'e' : this['oType'];
_0x2278ab += '_' + this['chilliType'], this['objSkinPath'] = 'gameobj/' + this['oType'] + '/' + _0x2278ab + '.png';
}, _0x185a38['prototype']['customDraw'] = function (_0x2edf60) {
_0x4ac9cf['save']();
var _0x166f18 = this['getSkinImageObj'](this['objSkinPath']);
if (_0x166f18) {
    var _0xba70df = this['rad'];
    if (this['specType2'] == 0x1) {
        if (this['angle'] == 0x0) this['angle'] = this['rPer'] * Math['PI'] * 0x2;
        this['angle'] += 0.4, _0x4ac9cf['rotate'](this['angle']);
    } else {
        if (this['specType2'] == 0x2) _0x4ac9cf['rotate'](this['angle']);
        else _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2);
    }
    _0x4ac9cf['drawImage'](_0x166f18, -_0xba70df, -_0xba70df, 0x2 * _0xba70df, 0x2 * _0xba70df);
}
_0x4ac9cf['restore']();
}, _0x185a38['prototype']['readCustomData_onNewlyVisible'] = function (_0x5e93d0) {
this['chilliType'] = _0x5e93d0['readUInt8']();
};

function _0x185a38() {
_0x185a38['superClass']['call'](this, _0x4d4d83), this['doesDrawEffectScale'] = ![];
}
window['Chilli'] = _0x185a38, _0x3360d0['setCustomClassForGameObjType'](_0x185a38, _0x4d4d83);
var _0x3ec024 = _0x3ec024,
_0xec194 = _0x1dd8d7;
_0x3ec024['prototype'] = Object['create'](_0xec194['prototype']), _0x3ec024['prototype']['constructor'] = _0x3ec024, _0x3ec024['superClass'] = _0xec194, _0x3ec024['prototype']['objSkinSpotsCanvas'] = null, _0x3ec024['prototype']['animalInfo'] = function () {
var _0x1c7db7 = {};
this['animalName'] = '';
switch (this['animalSpecies']) {
case 0x0:
    _0x1c7db7['aniName'] = 'Cheetah', _0x1c7db7['upgradeText'] = 'UPGRADED to Cheetah!\x0a Press W to get a speed boost!', this['animalName'] = 'cheetah';
    break;
case 0x1:
    _0x1c7db7['aniName'] = 'Jaguar', _0x1c7db7['upgradeText'] = 'UPGRADED to JAGUAR!\x0a Press W to get a speed boost!\x0a(Jaguars can climb hills!)', this['animalName'] = 'jaguar';
    break;
case 0x2:
    _0x1c7db7['aniName'] = 'Leopard', _0x1c7db7['upgradeText'] = 'UPGRADED to LEOPARD!\x0a Press W to get a speed boost!\x0a(Leopards can dive longer)', this['animalName'] = 'leopard';
    break;
case 0x3:
    _0x1c7db7['aniName'] = 'Black Panther', _0x1c7db7['upgradeText'] = 'UPGRADED to Black Panther!\x0a Press W to get a speed boost!\x0a(Black Panthers are fast on mud)', this['animalName'] = 'blackpanther';
    break;
case 0x64:
    _0x1c7db7['aniName'] = 'Big Cookie', _0x1c7db7['upgradeText'] = 'UPGRADED to Big Cookie!\x0a Press W to get a speed boost!\x0a(Big Cookies are fast on mud)', this['animalName'] = '100/bigcat';
    break;
case 0xca:
    _0x1c7db7['aniName'] = 'C.M.Y.K NeoN Cheetak', _0x1c7db7['upgradeText'] = 'UPGRADED to C.M.Y.K NeoN Cheetak!\x0a Press W to get a speed boost!\x0a(Genie Cheetah are fast on mud)', this['animalName'] = 'cheetah';
    break;
case 0xcc:
    _0x1c7db7['aniName'] = 'Genie Cheetah', _0x1c7db7['upgradeText'] = 'UPGRADED to Genie Cheetah!\x0a Press W to get a speed boost!\x0a(Genie Cheetah are fast on mud)', this['animalName'] = 'genie_cheetah';
    break;
}
return _0x1c7db7['aniCol'] = '#CAC05B', _0x1c7db7['skinName'] = this['getSkinName'](), _0x1c7db7;
}, _0x3ec024['prototype']['getSkinName'] = function () {
return this['getSpeciesPath']() + '/' + this['animalName'];
}, _0x3ec024['prototype']['getSpeciesPath'] = function () {
return 'land/bigcat/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x3ec024['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x3ec024() {
_0x3ec024['superClass']['call'](this, _0x4acf80);
}
window['BigCat'] = _0x3ec024, _0x3360d0['setCustomClassForGameObjType'](_0x3ec024, _0x4acf80, _0x2cd95a);

function _0x2cdc0f(_0x194fa0, _0x5ab716, _0x6f4b7e, _0xb578f9, _0x39d77c, _0x3c2eb4, _0x1faa9c) {
var _0x5aded5 = _0x489111;
this['x'] = _0x194fa0, this['y'] = _0x5ab716, this['w'] = _0x6f4b7e, this['h'] = _0xb578f9, this['label'] = _0x39d77c, this['font'] = Number(_0x3c2eb4) ? Number(_0x3c2eb4) : 0x1e, this['isVisible'] = !![], this['hoverColor'] = '#16932A', this['defaultColor'] = '#0aa633', this['alpha'] = 0x1, this['txtAlpha'] = 0x1, this['ctx'] = _0x1faa9c === undefined || _0x1faa9c == null ? _0x4ac9cf : _0x1faa9c, this['labelColor'] = 'white', this['buttonTXT'] = new _0x128c61(0xc, this['labelColor']), this['buttonTXT']['renderScale'] = 1.5, this['drawButtonRect'] = !![], this['isHighLighted'] = ![], this['showLabeleOnHover'] = ![], this['textShadow'] = ![], this['buttonScaleF'] = 0x1, this['strokeWidth'] = 0x4 * _0x5aded5, this['setLabelColor'] = function (_0x3aeed6) {
    this['buttonTXT'] = new _0x128c61(0xc, _0x3aeed6), this['buttonTXT']['renderScale'] = 1.5;
}, this['testPosHitsButton'] = function (_0x196a2d, _0x3f46c9) {
    var _0x462e27 = this['x'],
        _0x1bdb48 = this['x'] + this['w'],
        _0x397abe = this['y'],
        _0x52b381 = this['y'] + this['h'];
    if (_0x196a2d < _0x462e27 || _0x196a2d > _0x1bdb48) return ![];
    if (_0x3f46c9 < _0x397abe || _0x3f46c9 > _0x52b381) return ![];
    else return !![];
}, this['setPosAndSize'] = function (_0x1e52ce, _0x152bb5, _0x16f2c3, _0xc5e45a, _0x54b3ce, _0x4bc841) {
    this['w'] = _0x16f2c3, this['h'] = _0xc5e45a, this['x'] = _0x1e52ce + _0x16f2c3 * (0.5 - _0x54b3ce), this['y'] = _0x152bb5 + _0xc5e45a * (0.5 - _0x4bc841);
}, this['draw'] = function () {
    if (!this['isVisible']) return;
    this['update'](), this['ctx']['save'](), this['ctx']['translate'](this['x'], this['y']), this['ctx']['scale'](this['buttonScaleF'], this['buttonScaleF']);
    var _0x366a86 = this['alpha'];
    this['drawButtonRect'] && (this['ctx']['fillStyle'] = this['defaultColor'], this['ctx']['strokeStyle'] = '#116c17', this['ctx']['lineWidth'] = this['strokeWidth'], this['roundRect'](0x0, 0x0, this['w'], this['h'], 0x5, !![], !![]), this['isHighLighted'] && (this['ctx']['fillStyle'] = this['hoverColor'], this['roundRect'](0x0, 0x0, this['w'], this['h'], 0x5, !![], ![])));
    if (!this['showLabeleOnHover']) this['ctx']['globalAlpha'] = this['txtAlpha'], this['drawText'](this['w'] / 0x2, this['h'] / 0x2);
    else this['isHighLighted'] && this['showLabeleOnHover'] && this['drawTextOnHowever']();
    this['ctx']['restore'](), this['onAfterDraw']();
}, this['drawTextOnHowever'] = function () {
    this['drawText'](this['w'] / 0x2, this['h'] / 0x2);
}, this['beforeDrawText'] = function () {}, this['drawText'] = function (_0x136dda, _0xe46075) {
    this['buttonTXT']['setText'](this['label']), this['buttonTXT']['strokeW'] = this['isHighLighted'] && !this['textShadow'] ? 0x0 : 0x1, this['buttonTXT']['setFontSize'](this['font']), this['buttonTXT']['setColor'](this['labelColor']), this['buttonTXT']['x'] = _0x136dda, this['buttonTXT']['y'] = _0xe46075, this['beforeDrawText'](), this['buttonTXT']['draw']();
}, this['roundRect'] = function (_0x2fc996, _0x5d3247, _0x25d7eb, _0x42ca58, _0xe7ec40, _0x14b369, _0x10e47d) {
    typeof _0x10e47d == 'undefined' && (_0x10e47d = !![]);
    typeof _0xe7ec40 === 'undefined' && (_0xe7ec40 = 0x5);
    if (typeof _0xe7ec40 === 'number') _0xe7ec40 = {
        'tl': _0xe7ec40,
        'tr': _0xe7ec40,
        'br': _0xe7ec40,
        'bl': _0xe7ec40
    };
    else {
        var _0x5c0477 = {
            'tl': 0x0,
            'tr': 0x0,
            'br': 0x0,
            'bl': 0x0
        };
        for (var _0x220abc in _0x5c0477) {
            _0xe7ec40[_0x220abc] = _0xe7ec40[_0x220abc] || _0x5c0477[_0x220abc];
        }
    }
    this['ctx']['globalAlpha'] = this['alpha'], this['ctx']['lineWidth'] = 0x2, this['ctx']['beginPath'](), this['ctx']['moveTo'](_0x2fc996 + _0xe7ec40['tl'], _0x5d3247), this['ctx']['lineTo'](_0x2fc996 + _0x25d7eb - _0xe7ec40['tr'], _0x5d3247), this['ctx']['quadraticCurveTo'](_0x2fc996 + _0x25d7eb, _0x5d3247, _0x2fc996 + _0x25d7eb, _0x5d3247 + _0xe7ec40['tr']), this['ctx']['lineTo'](_0x2fc996 + _0x25d7eb, _0x5d3247 + _0x42ca58 - _0xe7ec40['br']), this['ctx']['quadraticCurveTo'](_0x2fc996 + _0x25d7eb, _0x5d3247 + _0x42ca58, _0x2fc996 + _0x25d7eb - _0xe7ec40['br'], _0x5d3247 + _0x42ca58), this['ctx']['lineTo'](_0x2fc996 + _0xe7ec40['bl'], _0x5d3247 + _0x42ca58), this['ctx']['quadraticCurveTo'](_0x2fc996, _0x5d3247 + _0x42ca58, _0x2fc996, _0x5d3247 + _0x42ca58 - _0xe7ec40['bl']), this['ctx']['lineTo'](_0x2fc996, _0x5d3247 + _0xe7ec40['tl']), this['ctx']['quadraticCurveTo'](_0x2fc996, _0x5d3247, _0x2fc996 + _0xe7ec40['tl'], _0x5d3247), this['ctx']['closePath']();
    if (_0x14b369) this['ctx']['fill']();
    if (_0x10e47d) this['ctx']['stroke']();
}, this['onClick'] = function () {}, this['onMouseMove'] = function () {}, this['onMouseIn'] = function () {}, this['onMouseOut'] = function () {}, this['isMouseIn'] = ![], this['setMouseRawPos'] = function (_0x2e0645, _0x52a8cc) {
    this['rawX'] = _0x2e0645, this['rawY'] = _0x52a8cc, this['testPosHitsButton'](this['rawX'], this['rawY']) ? !this['isMouseIn'] && (this['isMouseIn'] = !![], this['onMouseIn']()) : this['isMouseIn'] && (this['isMouseIn'] = ![], this['onMouseOut']());
}, this['update'] = function () {}, this['onInterfaceReset'] = function () {
    _0x57f9d8(this['label'] + '.onInterfaceReset');
}, this['onAfterDraw'] = function () {};
}
window['InterfaceButton'] = _0x2cdc0f, _0x2f41e5['prototype'] = {
'mode': 0x0,
'state': 0x0,
'myPlayer': null
}, _0x2f41e5['prototype']['chatAllowed'] = !![], _0x2f41e5['prototype']['isHalloween'] = ![], _0x2f41e5['prototype']['stamp'] = 0x0, _0x2f41e5['prototype']['interface'] = function () {}, _0x2f41e5['prototype']['drawMap'] = function () {}, _0x2f41e5['prototype']['interfaceReset'] = function () {}, _0x2f41e5['prototype']['main'] = function (_0x2a2528) {}, _0x2f41e5['prototype']['onInit'] = function (_0x5cb018) {}, _0x2f41e5['prototype']['drawCustomObjs'] = function (_0x21d24f) {}, _0x2f41e5['prototype']['worldUpdate'] = function (_0x36dbf4) {}, _0x2f41e5['prototype']['setPlayer'] = function () {
this['myPlayer'] = _0xddec75[_0x46868a];
};

function _0x2f41e5() {}
window['GameMode'] = _0x2f41e5;
var _0xec194 = _0x2f41e5;
_0x28e6c5['prototype'] = Object['create'](_0xec194['prototype']), _0x28e6c5['prototype']['constructor'] = _0x28e6c5, _0x28e6c5['superClass'] = _0xec194, _0x28e6c5['prototype']['safeArea'] = null;

function _0x28e6c5(_0x5c760e) {
this['mode'] = _0x5c760e, this['stamp'] = +new Date(), this['chatAllowed'] = !![], this['createInterfaceButtons']();
}
_0x28e6c5['prototype']['wastedPopups'] = [], _0x28e6c5['prototype']['playerDisplayNum'] = 0x0, _0x28e6c5['prototype']['setServerPlayerCount'] = function () {
_0x3cb245['setText'](_0x3fe45c(_0x5b8340) + ' online'), this['playerDisplayNum'] = this['playerDisplayNum'] == 0x0 ? 0x1 : 0x0;
}, _0x28e6c5['prototype']['interface'] = function () {
if (this['state'] == -0x1 || this['mode'] != _0x5332af) return;
if (_0x19efaa)
    for (var _0x20a81a = this['wastedPopups']['length'] - 0x1; _0x20a81a >= 0x0; _0x20a81a--) {
        var _0x5381d3 = this['wastedPopups'][_0x20a81a];
        _0x5381d3['draw']();
        if (_0x5381d3['timedOut']) this['wastedPopups']['splice'](_0x20a81a, 0x1);
    }
if (this['endScreenCanvas'] != null) {
    this['endScreenCanvas']['width'] && _0x4ac9cf['drawImage'](this['endScreenCanvas'], _0x3584da / 0x2 - this['endScreenCanvas']['width'] / 0x2, 0xf * _0x185dc5, this['endScreenCanvas']['width'], this['endScreenCanvas']['height']);
    if (!_0x19efaa || isGhost) _0x943cc6(!![]);
}
this['drawInterfaceButtons']();
}, _0x28e6c5['prototype']['interfaceReset'] = function () {
this['endScreenCanvas'] = null, this['dangerCircleMiniMapCanvas'] = null, this['wastedPopups'] = [], this['lastWastedPopupT'] = 0x0, this['playercount'] = 0x0, this['safeArea'] = null;
if (this['interfaceButtons'])
    for (var _0x358a0b = 0x0; _0x358a0b < this['interfaceButtons']['length']; _0x358a0b++) {
        var _0x43c491 = this['interfaceButtons'][_0x358a0b];
        _0x43c491['onInterfaceReset']();
    }
this['interfaceButtons'] = [];
}, _0x28e6c5['prototype']['onInit'] = function () {}, _0x28e6c5['prototype']['playercount'] = 0x0, _0x28e6c5['prototype']['setPlayerCount'] = function (_0x1fd903) {
this['playercount'] = _0x1fd903;
}, _0x28e6c5['prototype']['showPlayerCount'] = function () {
_0x4ac9cf['save']();
var _0x55063e = _0x3584da / 0x2,
    _0x524fa4 = 0x32 * _0x489111,
    _0x6154ae = 0x12c * _0x489111;
_0x4ac9cf['globalAlpha'] = 0.35, _0x4ac9cf['fillStyle'] = 'black';
var _0x2c66c3 = 0x1e * _0x489111;
_0x4ac9cf['fillRect'](_0x55063e - _0x6154ae / 0x2, _0x2c66c3, _0x6154ae, _0x524fa4), _0x4ac9cf['globalAlpha'] = 0x1, _0x4ac9cf['fillStyle'] = 'white', _0x4ac9cf['font'] = 0x1e * _0x489111 + 'px Arial', _0x4ac9cf['lineWidth'] = 0x1, _0x4ac9cf['textAlign'] = 'center', _0x4ac9cf['textBaseline'] = 'middle', _0x4ac9cf['shadowOffsetX'] = 0x1, _0x4ac9cf['shadowOffsetY'] = 0x1, _0x4ac9cf['shadowColor'] = 'black', _0x2c66c3 += 0x19 * _0x489111;
var _0xecd0d4 = ' player';
if (this['playercount'] > 0x1) _0xecd0d4 += 's';
if (this['state'] == battleRoyal_inProgress) _0xecd0d4 += ' alive!';
else {
    if (this['state'] == _0x45ed71 || this['state'] == battleRoyal_ready) _0xecd0d4 += ' joined';
}
_0x4ac9cf['fillText'](this['playercount'] + _0xecd0d4, _0x55063e, _0x2c66c3), _0x4ac9cf['restore']();
}, _0x28e6c5['prototype']['lbCanvas'] = null, _0x28e6c5['prototype']['leaderboard'] = function (_0x175754) {
if (this['lbCanvas'] == null) this['lbCanvas'] = document['createElement']('canvas');
if (_0x175754) {
    var _0x3e93d9 = this['lbCanvas']['getContext']('2d'),
        _0x55867e = 0x37,
        _0x27243c = 0x16;
    _0x55867e = _0x55867e + _0x27243c * _0x175754['length'], this['lbCanvas']['width'] = 0x10e, this['lbCanvas']['height'] = _0x55867e, _0x3e93d9['globalAlpha'] = 0.2, _0x3e93d9['fillStyle'] = '#000000', _0x3e93d9['fillRect'](0x0, 0x0, this['lbCanvas']['width'], this['lbCanvas']['height']), _0x3e93d9['globalAlpha'] = 0x1, _0x3e93d9['fillStyle'] = '#FFFFFF';
    var _0x3431f2 = _0x187b4f['name'];
    _0x3e93d9['font'] = '24px Arial';
    !(_0x25ea67 == 0x2) && (_0x3e93d9['shadowOffsetX'] = 0x1, _0x3e93d9['shadowOffsetY'] = 0x1);
    _0x3e93d9['shadowColor'] = 'black', _0x3e93d9['fillText'](_0x3431f2, this['lbCanvas']['width'] / 0x2 - _0x3e93d9['measureText'](_0x3431f2)['width'] / 0x2, 0x28);
    var _0x542e92;
    _0x3e93d9['textAlign'] = 'left';
    for (_0x3e93d9['font'] = '17px Arial', _0x542e92 = 0x0; _0x542e92 < _0x175754['length']; ++_0x542e92) {
        _0x3431f2 = _0x47dcae ? '' : _0x175754[_0x542e92]['name'] || 'mope.io', _0x3431f2 += ' (' + _0x42ed1e(_0x175754[_0x542e92]['xp']) + ')', _0x3e93d9['fillStyle'] = '#FFFFFF', _0x3e93d9['fillText'](_0x3431f2, 0xf, 0x41 + _0x27243c * _0x542e92);
    }
}
}, _0x28e6c5['prototype']['drawLeaderboard'] = function () {
if (_0x19efaa) {
    if (!_0x361438) _0x2f84db && (_0x2f84db['width'] && _0x4ac9cf['drawImage'](_0x2f84db, 0xa * _0x185dc5, 0xa * _0x185dc5, _0x2f84db['width'] * _0x489111, _0x2f84db['height'] * _0x489111));
}
}, _0x28e6c5['prototype']['btnPlayAgain'] = null, _0x28e6c5['prototype']['showStats'] = !![], _0x28e6c5['prototype']['interfaceButtons'] = [], _0x28e6c5['prototype']['createInterfaceButtons'] = function () {
this['interfaceButtons'] = [];
}, _0x28e6c5['prototype']['drawInterfaceButtons'] = function () {
if (this['interfaceButtons'])
    for (var _0x5789ed = 0x0; _0x5789ed < this['interfaceButtons']['length']; _0x5789ed++) {
        var _0x43a9f4 = this['interfaceButtons'][_0x5789ed];
        _0x43a9f4['isVisible'] && _0x43a9f4['draw']();
    }
}, _0x28e6c5['prototype']['onResize'] = function () {
this['drawInterfaceButtons']();
}, _0x28e6c5['prototype']['readPlayerStats'] = function (_0x50a02a) {
var _0x25b562 = [];
return _0x25b562['rank'] = _0x50a02a['readUInt16'](), _0x25b562['timeAlive'] = _0x50a02a['readUInt16'](), _0x25b562['totalKills'] = _0x50a02a['readUInt16'](), _0x25b562['topRank'] = _0x50a02a['readUInt16'](), _0x25b562['maxXP'] = _0x50a02a['readUInt32'](), _0x25b562['killedBy'] = _0x50a02a['readString'](), _0x25b562;
}, _0x28e6c5['prototype']['playerInfo'] = function (_0x2f43c8) {
if (isGhost && !_0x34ea77) {
    var _0x54dad3 = this['readPlayerStats'](_0x2f43c8);
    this['buildEndScreenHTML'](_0x54dad3);
} else !isGhost && (this['endScreenCanvas'] = null);
}, _0x28e6c5['prototype']['playerWorldUpdate'] = function (_0x1e2f9a) {}, _0x28e6c5['prototype']['worldUpdate'] = function (_0x4ffa34) {}, _0x28e6c5['prototype']['drawMap'] = function () {
if (_0x19efaa) {
    if (_0x50a9ba) return;
    if (_0x3a73d2) _0x3a73d2['drawMap']();
    this['drawLeaderboard']();
}
}, _0x28e6c5['prototype']['pieChartCanvas'] = null, _0x28e6c5['prototype']['teamColors'] = {
0x0: 'white',
0x1: '#B6CF40'
}, _0x28e6c5['prototype']['endScreenDisplayed'] = ![], _0x28e6c5['prototype']['buildEndScreenHTML'] = function (_0x368f71) {
if (this['endScreenDisplayed']) return;
this['endScreenDisplayed'] = !![];
var _0x3f9d8f = '';
_0x3f9d8f += '<div class=\'msg\'>YOU WERE #' + _0x368f71['rank'] + '</div>', _0x3f9d8f += '<div class=\'row\'>', _0x3f9d8f += '<div class=\'label\'>Killed by:</div>', _0x3f9d8f += '<div class=\'value2\'>' + _0x368f71['killedBy'] + '</div>', _0x3f9d8f += '</div>', _0x3f9d8f += '<div class=\'row\'>', _0x3f9d8f += '<div class=\'col1\'>', _0x3f9d8f += '<div class=\'label\'>Time alive:</div>', _0x3f9d8f += '<div class=\'value\'>' + _0x166ed8(_0x368f71['timeAlive']) + '</div>', _0x3f9d8f += '</div>', _0x3f9d8f += '<div class=\'col2\'>', _0x3f9d8f += '<div class=\'label\'>Total kills:</div>', _0x3f9d8f += '<div class=\'value\'>' + _0x368f71['totalKills'] + '</div>', _0x3f9d8f += '</div>', _0x3f9d8f += '</div>', _0x3f9d8f += '<div class=\'row\'>', _0x3f9d8f += '<div class=\'col1\'>', _0x3f9d8f += '<div class=\'label\'>Top rank:</div>', _0x3f9d8f += '<div class=\'value\'>' + _0x368f71['topRank'] + '</div>', _0x3f9d8f += '</div>', _0x3f9d8f += '<div class=\'col2\'>', _0x3f9d8f += '<div class=\'label\'>Max xp:</div>', _0x3f9d8f += '<div class=\'value\'>' + _0x42ed1e(_0x368f71['maxXP']) + '</div>', _0x3f9d8f += '</div>', _0x3f9d8f += '</div>', _0x3f9d8f += '<div style=\'clear:both;\'></div>', _0x3f9d8f += '<div class=\'btnDiv\'>', _0x3f9d8f += '<button id=\'btnMopeOptions\' class=\'btn\'>      CONTINUE      </button>', _0x3f9d8f += '</div>', _0x3f9d8f += '<div style=\'clear:both;\'></div>';
var _0x1dc21d = document['getElementById']('endScreen');
_0x1dc21d && (_0x1dc21d['innerHTML'] = _0x3f9d8f, _0x1dc21d['style']['display'] = 'block'), (!_0x19efaa || isGhost) && _0x30018f();
}, _0x28e6c5['prototype']['endScreenCanvas'] = null, _0x28e6c5['prototype']['buildEndScreen'] = function (_0x3bd943, _0x4f92f3) {
if (this['endScreenCanvas'] == null) this['endScreenCanvas'] = document['createElement']('canvas');
if (this['endScreenCanvas'] == null) return;
var _0x1e7d15 = this['endScreenCanvas']['getContext']('2d'),
    _0x509d85 = 0x37,
    _0x339d0c = 0x28,
    _0xe75b3e = 0x5,
    _0x29215d = 0xf0,
    _0x135207 = 0x1a4;
_0x509d85 = _0x29215d + _0xe75b3e * 0x2, this['endScreenCanvas']['width'] = _0x135207 + _0xe75b3e * 0x2, this['endScreenCanvas']['height'] = _0x509d85, _0x1e7d15['globalAlpha'] = 0.2, _0x1e7d15['fillStyle'] = '#000000', _0x1e7d15['fillRect'](0x0, 0x0, this['endScreenCanvas']['width'], this['endScreenCanvas']['height']), _0x1e7d15['fillStyle'] = '#000000', _0x1e7d15['fillRect'](_0xe75b3e, _0xe75b3e, this['endScreenCanvas']['width'] - _0xe75b3e * 0x2, this['endScreenCanvas']['height'] - _0xe75b3e * 0x2);
var _0x93af70 = _0xe75b3e;
_0x1e7d15['globalAlpha'] = 0x1, _0x1e7d15['fillStyle'] = '#FFFFFF', _0x1e7d15['font'] = '30px Arial', _0x93af70 += 0x37;
var _0x75809a = 'Final Stats';
_0x1e7d15['font'] = '30px Arial', _0x1e7d15['fillText'](_0x75809a, this['endScreenCanvas']['width'] / 0x2 - _0x1e7d15['measureText'](_0x75809a)['width'] / 0x2, _0x93af70), _0x1e7d15['font'] = '20px Arial', _0x93af70 += 0x2d, _0x75809a = 'You were #' + _0x4f92f3['rank'], _0x1e7d15['fillText'](_0x75809a, this['endScreenCanvas']['width'] / 0x2 - _0x1e7d15['measureText'](_0x75809a)['width'] / 0x2, _0x93af70), _0x93af70 += 0x28;
var _0x5a1d05 = _0x166ed8(_0x4f92f3['timeAlive']),
    _0x3b217f = _0xe75b3e + 0xf;
_0x4eb711(_0x1e7d15, 'Killed by', _0x4f92f3['killedBy'], _0x3b217f, _0x93af70), _0x93af70 += 0x28, _0x4eb711(_0x1e7d15, 'Time Alive', _0x166ed8(_0x4f92f3['timeAlive']), _0x3b217f, _0x93af70), _0x3b217f += 0xd2, _0x4eb711(_0x1e7d15, 'Total Kills', _0x4f92f3['totalKills'], _0x3b217f, _0x93af70), _0x93af70 += 0x28, _0x3b217f = _0xe75b3e + 0xf, _0x4eb711(_0x1e7d15, 'Top rank', _0x4f92f3['topRank'], _0x3b217f, _0x93af70), _0x3b217f += 0xd2, _0x4eb711(_0x1e7d15, 'Max XP', _0x42ed1e(_0x4f92f3['maxXP']), _0x3b217f, _0x93af70), _0x93af70 += 0x32;
}, _0x28e6c5['prototype']['lastWastedPopupT'] = 0x0, _0x28e6c5['prototype']['onPlayerWasted'] = function (_0x1aec66) {
if ((_0x397f50 - this['lastWastedPopupT']) / 0x3e8 > 0.7) {
    this['lastWastedPopupT'] = _0x397f50;
    var _0x8ab639 = new _0x35ed11(_0x1aec66 + ' wasted!', 0x28, 'red', 0x5dc);
    this['wastedPopups']['push'](_0x8ab639);
}
}, _0x28e6c5['prototype']['lastWastedPopupT'] = 0x0, _0x28e6c5['prototype']['msgDisplayPlayersOnMiniMap'] = function (_0xcf8a3e) {
_0x5234d5 = [];
var _0x350bef = _0xcf8a3e['readUInt16']();
for (var _0x5864b4 = 0x0; _0x5864b4 < _0x350bef; _0x5864b4++) {
    _0x5234d5['push']({
        'id': _0xcf8a3e['readUInt32'](),
        'x': _0xcf8a3e['readUInt32']() / 0x64,
        'y': _0xcf8a3e['readUInt32']() / 0x64,
        'rad': 0x3
    });
}
}, window['FreeForAll'] = _0x28e6c5;
var _0xec194 = _0x2f41e5;
_0x266093['prototype'] = Object['create'](_0xec194['prototype']), _0x266093['prototype']['constructor'] = _0x266093, _0x266093['superClass'] = _0xec194, _0x266093['prototype']['safeArea'] = null;
var _0x242404 = ![];

function _0x266093(_0x44751e) {
this['mode'] = _0x43310f, this['chatAllowed'] = !![], this['createInterfaceButtons'](), console['log']('@@@@@@@@@@@@@@@@@@@@@@@@@@ zombe mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'), console['log']('@@@@@@@@@@@@@@@@@@@@@@@@@@ zombe mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'), console['log']('@@@@@@@@@@@@@@@@@@@@@@@@@@ zombe mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'), console['log']('@@@@@@@@@@@@@@@@@@@@@@@@@@ zombe mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'), console['log']('@@@@@@@@@@@@@@@@@@@@@@@@@@ zombe mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@');
}
_0x266093['prototype']['wastedPopups'] = [], _0x266093['prototype']['playerDisplayNum'] = 0x0, _0x266093['prototype']['setServerPlayerCount'] = function () {
if (this['playerDisplayNum'] == 0x0) _0x3cb245['setText'](_0x3fe45c(_0x5b8340) + ' mopers');
else _0x3cb245['setText'](_0x3fe45c(_0x334387) + ' on server');
this['playerDisplayNum'] = this['playerDisplayNum'] == 0x0 ? 0x1 : 0x0;
}, _0x266093['prototype']['interface'] = function () {
if (this['state'] == -0x1 || this['mode'] != _0x5332af) return;
if (_0x19efaa)
    for (var _0x42da9c = this['wastedPopups']['length'] - 0x1; _0x42da9c >= 0x0; _0x42da9c--) {
        var _0x4b89cc = this['wastedPopups'][_0x42da9c];
        _0x4b89cc['draw']();
        if (_0x4b89cc['timedOut']) this['wastedPopups']['splice'](_0x42da9c, 0x1);
    }
if (this['endScreenCanvas'] != null) {
    this['endScreenCanvas']['width'] && _0x4ac9cf['drawImage'](this['endScreenCanvas'], _0x3584da / 0x2 - this['endScreenCanvas']['width'] / 0x2, 0xf * _0x185dc5, this['endScreenCanvas']['width'], this['endScreenCanvas']['height']);
    if (!_0x19efaa || isGhost) _0x943cc6(!![]);
}
this['drawInterfaceButtons']();
}, _0x266093['prototype']['interfaceReset'] = function () {
this['endScreenCanvas'] = null, this['dangerCircleMiniMapCanvas'] = null, this['wastedPopups'] = [], this['lastWastedPopupT'] = 0x0, this['playercount'] = 0x0, this['safeArea'] = null, _0x369cd9 = null, _0x2b2c70 = null;
if (this['interfaceButtons'])
    for (var _0x40a078 = 0x0; _0x40a078 < this['interfaceButtons']['length']; _0x40a078++) {
        var _0x1b401f = this['interfaceButtons'][_0x40a078];
        _0x1b401f['onInterfaceReset']();
    }
this['interfaceButtons'] = [];
}, _0x266093['prototype']['onInit'] = function () {}, _0x266093['prototype']['playercount'] = 0x0, _0x266093['prototype']['setPlayerCount'] = function (_0x5e410b) {
this['playercount'] = _0x5e410b;
}, _0x266093['prototype']['showPlayerCount'] = function () {
_0x4ac9cf['save']();
var _0x965120 = _0x3584da / 0x2,
    _0x3d1054 = 0x32 * _0x489111,
    _0x22eda7 = 0x12c * _0x489111;
_0x4ac9cf['globalAlpha'] = 0.35, _0x4ac9cf['fillStyle'] = 'black';
var _0xd5ab30 = 0x1e * _0x489111;
_0x4ac9cf['fillRect'](_0x965120 - _0x22eda7 / 0x2, _0xd5ab30, _0x22eda7, _0x3d1054), _0x4ac9cf['globalAlpha'] = 0x1, _0x4ac9cf['fillStyle'] = 'white', _0x4ac9cf['font'] = 0x1e * _0x489111 + 'px Arial', _0x4ac9cf['lineWidth'] = 0x1, _0x4ac9cf['textAlign'] = 'center', _0x4ac9cf['textBaseline'] = 'middle', _0x4ac9cf['shadowOffsetX'] = 0x1, _0x4ac9cf['shadowOffsetY'] = 0x1, _0x4ac9cf['shadowColor'] = 'black', _0xd5ab30 += 0x19 * _0x489111;
var _0x2b2d60 = ' player';
if (this['playercount'] > 0x1) _0x2b2d60 += 's';
if (this['state'] == battleRoyal_inProgress) _0x2b2d60 += ' alive!';
else {
    if (this['state'] == _0x45ed71 || this['state'] == battleRoyal_ready) _0x2b2d60 += ' joined';
}
_0x4ac9cf['fillText'](this['playercount'] + _0x2b2d60, _0x965120, _0xd5ab30), _0x4ac9cf['restore']();
}, _0x266093['prototype']['lbCanvas'] = null, _0x266093['prototype']['leaderboard'] = function (_0x15cf33) {
if (this['lbCanvas'] == null) this['lbCanvas'] = document['createElement']('canvas');
if (_0x15cf33) {
    var _0x42257b = this['lbCanvas']['getContext']('2d'),
        _0x4b7ad8 = 0x37,
        _0x1ed04e = 0x16;
    _0x4b7ad8 = _0x4b7ad8 + _0x1ed04e * _0x15cf33['length'], this['lbCanvas']['width'] = 0x10e, this['lbCanvas']['height'] = _0x4b7ad8, _0x42257b['globalAlpha'] = 0.2, _0x42257b['fillStyle'] = '#000000', _0x42257b['fillRect'](0x0, 0x0, this['lbCanvas']['width'], this['lbCanvas']['height']), _0x42257b['globalAlpha'] = 0x1, _0x42257b['fillStyle'] = '#FFFFFF';
    var _0x42b316 = _0x187b4f['name'];
    _0x42257b['font'] = '24px Arial';
    !options_lowGraphics && (_0x42257b['shadowOffsetX'] = 0x1, _0x42257b['shadowOffsetY'] = 0x1);
    _0x42257b['shadowColor'] = 'black', _0x42257b['fillText'](_0x42b316, this['lbCanvas']['width'] / 0x2 - _0x42257b['measureText'](_0x42b316)['width'] / 0x2, 0x28);
    var _0x4f793c;
    _0x42257b['textAlign'] = 'left';
    for (_0x42257b['font'] = '17px Arial', _0x4f793c = 0x0; _0x4f793c < _0x15cf33['length']; ++_0x4f793c) {
        _0x42b316 = _0x47dcae ? '' : _0x15cf33[_0x4f793c]['name'] || 'mope.io', _0x42b316 += ' (' + _0x42ed1e(_0x15cf33[_0x4f793c]['xp']) + ')', _0x42257b['fillStyle'] = '#FFFFFF', _0x42257b['fillText'](_0x42b316, 0xf, 0x41 + _0x1ed04e * _0x4f793c);
    }
}
}, _0x266093['prototype']['drawLeaderboard'] = function () {
_0x19efaa && (this['pieChartCanvas'] != null && (this['pieChartCanvas']['width'] && _0x4ac9cf['drawImage'](this['pieChartCanvas'], 0x14 * _0x185dc5, 0x14 * _0x185dc5, this['pieChartCanvas']['width'], this['pieChartCanvas']['height']))), _0x2dd5ed();
}, _0x266093['prototype']['btnPlayAgain'] = null, _0x266093['prototype']['showStats'] = !![], _0x266093['prototype']['interfaceButtons'] = [], _0x266093['prototype']['createInterfaceButtons'] = function () {
this['interfaceButtons'] = [];
}, _0x266093['prototype']['drawInterfaceButtons'] = function () {
if (this['interfaceButtons'])
    for (var _0x3f4550 = 0x0; _0x3f4550 < this['interfaceButtons']['length']; _0x3f4550++) {
        var _0x660387 = this['interfaceButtons'][_0x3f4550];
        _0x660387['isVisible'] && _0x660387['draw']();
    }
}, _0x266093['prototype']['onResize'] = function () {
this['drawInterfaceButtons']();
}, _0x266093['prototype']['readPlayerStats'] = function (_0x1715de) {
var _0x1c7ee6 = [];
return _0x1c7ee6['rank'] = _0x1715de['readUInt16'](), _0x1c7ee6['timeAlive'] = _0x1715de['readUInt16'](), _0x1c7ee6['totalKills'] = _0x1715de['readUInt16'](), _0x1c7ee6['topRank'] = _0x1715de['readUInt16'](), _0x1c7ee6['maxXP'] = _0x1715de['readUInt32'](), _0x1c7ee6['killedBy'] = _0x1715de['readString'](), _0x1c7ee6;
}, _0x266093['prototype']['playerInfo'] = function (_0xaa3e6d) {
if (isGhost && !_0x34ea77) {
    var _0x39e5bb = this['readPlayerStats'](_0xaa3e6d);
    this['buildEndScreenHTML'](_0x39e5bb);
} else !isGhost && (this['endScreenCanvas'] = null);
}, _0x266093['prototype']['worldUpdate'] = function (_0x12470d) {
var _0x392b5a = minimapW / 0xc8,
    _0x560686 = minimapH / 0xc8,
    _0x5cf8de = _0x12470d['readUInt32']() * _0x392b5a,
    _0x1f12a5 = _0x12470d['readUInt32']() * _0x560686,
    _0x12aa2b = _0x12470d['readUInt32']() * 0x5;
_0x369cd9 = {
    'x': _0x5cf8de,
    'y': _0x1f12a5,
    'rad': _0x12aa2b * (minimapW / _0x362064)
}, this['nonZombiePlayersCount'] = _0x12470d['readUInt16'](), this['zombieCount'] = _0x12470d['readUInt16']();
if (!_0x242404) {
    this['zombiePlayers'] = [];
    for (i = 0x0; i < this['zombieCount']; i++) {
        var _0x5cf8de = _0x12470d['readUInt16']() / 0x4,
            _0x1f12a5 = _0x12470d['readUInt16']() / 0x4,
            _0x389b51 = _0x12470d['readUInt16']() / 0xa;
        this['zombiePlayers']['push']({
            'x': _0x5cf8de,
            'y': _0x1f12a5,
            'rad': _0x389b51
        });
    }
}
};
var _0x2b2c70 = null;

function _0x2dd5ed() {
if (!_0x2b2c70) _0x2b2c70 = document['createElement']('canvas');
_0x2b2c70['width'] = minimapW, _0x2b2c70['height'] = minimapH;
var _0x1aad56 = _0x2b2c70['getContext']('2d');
_0x1aad56['clearRect'](0x0, 0x0, _0x2b2c70['width'], _0x2b2c70['height']), _0x1aad56['save']();
var _0x3b763f = Math['max'](0x3, _0x369cd9['rad']),
    _0x5d6ec8 = _0x369cd9['x'],
    _0x1709d7 = _0x369cd9['y'];
_0x1aad56['translate'](_0x5d6ec8, _0x1709d7), _0x1aad56['save'](), _0x1aad56['globalAlpha'] = 0x1, _0x5a0c82(_0x1aad56, 0x0, 0x0, _0x369cd9['rad'], 0x5, 'white'), _0x1aad56['restore']();
var _0x10a459 = _0x489111 * minimapW * 1.5,
    _0x4d8245 = _0x489111 * minimapH * 1.5,
    _0x40b30b = 0x1,
    _0x3c7b34 = 'red';
_0x21416e(_0x1aad56, _0x369cd9['rad'], Math['PI'] * 0x0, _0x3c7b34, _0x40b30b, _0x10a459, _0x4d8245), _0x21416e(_0x1aad56, _0x369cd9['rad'], Math['PI'] * 0.5, _0x3c7b34, _0x40b30b, _0x10a459, _0x4d8245), _0x21416e(_0x1aad56, _0x369cd9['rad'], Math['PI'] * 0x1, _0x3c7b34, _0x40b30b, _0x10a459, _0x4d8245), _0x21416e(_0x1aad56, _0x369cd9['rad'], Math['PI'] * 1.5, _0x3c7b34, _0x40b30b, _0x10a459, _0x4d8245), _0x1aad56['restore'](), _0x2b2c70 && _0x4ac9cf['drawImage'](_0x2b2c70, _0x3584da - (0xa * _0x185dc5 + _0x483570['width'] * _0x489111), 0xa * _0x185dc5, minimapW * _0x489111, minimapH * _0x489111);
}
_0x266093['prototype']['drawZombiePlayers'] = function () {
if (this['zombiePlayers'])
    for (t = 0x0; t < this['zombiePlayers']['length']; t++) {
        _0xc6979f(this['zombiePlayers'][t], '#adff32', 0x1);
    }
}, _0x266093['prototype']['drawMap'] = function () {
this['buildPieChart']();
if (!_0x242404) this['drawZombiePlayers']();
}, _0x266093['prototype']['pieChartCanvas'] = null, _0x266093['prototype']['teamColors'] = {
0x0: 'white',
0x1: '#B6CF40'
}, _0x266093['prototype']['buildPieChart'] = function () {
if (this['pieChartCanvas'] == null) this['pieChartCanvas'] = document['createElement']('canvas');
if (this['pieChartCanvas'] == null) return;
var _0x3ccd0e = this['pieChartCanvas']['getContext']('2d'),
    _0x57eea2 = {
        0x0: this['nonZombiePlayersCount'],
        0x1: this['zombieCount']
    };
_0x35c3fd = _0x242404 ? 0x1 : 0x0;
var _0xb90885 = new _0x5de370({
        'pad': 0x1e,
        'canvas': this['pieChartCanvas'],
        'data': _0x57eea2,
        'colors': this['teamColors']
    }),
    _0x371439 = 0x37,
    _0x2e677b = 0x28,
    _0x2cfa3a = 0x5,
    _0x59d493 = 0xc8,
    _0x3a6d1a = 0xc8;
_0x371439 = _0x59d493 + _0x2cfa3a * 0x2, this['pieChartCanvas']['width'] = _0x3a6d1a + _0x2cfa3a * 0x2, this['pieChartCanvas']['height'] = _0x371439, _0xb90885['draw'](), _0x3ccd0e['globalAlpha'] = 0.2;
var _0x159b75 = _0x2cfa3a;
_0x3ccd0e['globalAlpha'] = 0.5, _0x3ccd0e['fillStyle'] = 'white', _0x3ccd0e['font'] = '20px Arial';
var _0x159b75 = 0xc8;
str = _0x187b4f['name'], _0x3ccd0e['fillText'](str, this['pieChartCanvas']['width'] / 0x2 - _0x3ccd0e['measureText'](str)['width'] / 0x2 - 0xf, _0x159b75);
}, _0x266093['prototype']['endScreenDisplayed'] = ![], _0x266093['prototype']['buildEndScreenHTML'] = function (_0x4f41df) {
if (this['endScreenDisplayed']) return;
this['endScreenDisplayed'] = !![];
var _0x390297 = '';
_0x390297 += '<div class=\'msg\'>YOU WERE #' + _0x4f41df['rank'] + '</div>', _0x390297 += '<div class=\'row\'>', _0x390297 += '<div class=\'label\'>Killed by:</div>', _0x390297 += '<div class=\'value2\'>' + _0x4f41df['killedBy'] + '</div>', _0x390297 += '</div>', _0x390297 += '<div class=\'row\'>', _0x390297 += '<div class=\'col1\'>', _0x390297 += '<div class=\'label\'>Time alive:</div>', _0x390297 += '<div class=\'value\'>' + _0x166ed8(_0x4f41df['timeAlive']) + '</div>', _0x390297 += '</div>', _0x390297 += '<div class=\'col2\'>', _0x390297 += '<div class=\'label\'>Total kills:</div>', _0x390297 += '<div class=\'value\'>' + _0x4f41df['totalKills'] + '</div>', _0x390297 += '</div>', _0x390297 += '</div>', _0x390297 += '<div class=\'row\'>', _0x390297 += '<div class=\'col1\'>', _0x390297 += '<div class=\'label\'>Top rank:</div>', _0x390297 += '<div class=\'value\'>' + _0x4f41df['topRank'] + '</div>', _0x390297 += '</div>', _0x390297 += '<div class=\'col2\'>', _0x390297 += '<div class=\'label\'>Max xp:</div>', _0x390297 += '<div class=\'value\'>' + _0x42ed1e(_0x4f41df['maxXP']) + '</div>', _0x390297 += '</div>', _0x390297 += '</div>', _0x390297 += '<div style=\'clear:both;\'></div>', _0x390297 += '<div class=\'btnDiv\'>', _0x390297 += '<button id=\'btnMopeOptions\' class=\'btn\'>      CONTINUE      </button>', _0x390297 += '</div>', _0x390297 += '<div style=\'clear:both;\'></div>';
var _0x55a0c0 = document['getElementById']('endScreen');
_0x55a0c0 && (_0x55a0c0['innerHTML'] = _0x390297, _0x55a0c0['style']['display'] = 'block'), (!_0x19efaa || isGhost) && _0x30018f();
}, _0x266093['prototype']['endScreenCanvas'] = null, _0x266093['prototype']['buildEndScreen'] = function (_0x517551, _0x37351d) {
if (this['endScreenCanvas'] == null) this['endScreenCanvas'] = document['createElement']('canvas');
if (this['endScreenCanvas'] == null) return;
var _0x1c8f0b = this['endScreenCanvas']['getContext']('2d'),
    _0xe45d61 = 0x37,
    _0x2afcca = 0x28,
    _0xba02ec = 0x5,
    _0x1c8f52 = 0xf0,
    _0x3079cc = 0x1a4;
_0xe45d61 = _0x1c8f52 + _0xba02ec * 0x2, this['endScreenCanvas']['width'] = _0x3079cc + _0xba02ec * 0x2, this['endScreenCanvas']['height'] = _0xe45d61, _0x1c8f0b['globalAlpha'] = 0.2, _0x1c8f0b['fillStyle'] = '#000000', _0x1c8f0b['fillRect'](0x0, 0x0, this['endScreenCanvas']['width'], this['endScreenCanvas']['height']), _0x1c8f0b['fillStyle'] = '#000000', _0x1c8f0b['fillRect'](_0xba02ec, _0xba02ec, this['endScreenCanvas']['width'] - _0xba02ec * 0x2, this['endScreenCanvas']['height'] - _0xba02ec * 0x2);
var _0x4c963e = _0xba02ec;
_0x1c8f0b['globalAlpha'] = 0x1, _0x1c8f0b['fillStyle'] = '#FFFFFF', _0x1c8f0b['font'] = '30px Arial', _0x4c963e += 0x37;
var _0x197773 = 'Final Stats';
_0x1c8f0b['font'] = '30px Arial', _0x1c8f0b['fillText'](_0x197773, this['endScreenCanvas']['width'] / 0x2 - _0x1c8f0b['measureText'](_0x197773)['width'] / 0x2, _0x4c963e), _0x1c8f0b['font'] = '20px Arial', _0x4c963e += 0x2d, _0x197773 = 'You were #' + _0x37351d['rank'], _0x1c8f0b['fillText'](_0x197773, this['endScreenCanvas']['width'] / 0x2 - _0x1c8f0b['measureText'](_0x197773)['width'] / 0x2, _0x4c963e), _0x4c963e += 0x28;
var _0x3f78ba = _0x166ed8(_0x37351d['timeAlive']),
    _0x2ee18c = _0xba02ec + 0xf;
_0x4eb711(_0x1c8f0b, 'Killed by', _0x37351d['killedBy'], _0x2ee18c, _0x4c963e), _0x4c963e += 0x28, _0x4eb711(_0x1c8f0b, 'Time Alive', _0x166ed8(_0x37351d['timeAlive']), _0x2ee18c, _0x4c963e), _0x2ee18c += 0xd2, _0x4eb711(_0x1c8f0b, 'Total Kills', _0x37351d['totalKills'], _0x2ee18c, _0x4c963e), _0x4c963e += 0x28, _0x2ee18c = _0xba02ec + 0xf, _0x4eb711(_0x1c8f0b, 'Top rank', _0x37351d['topRank'], _0x2ee18c, _0x4c963e), _0x2ee18c += 0xd2, _0x4eb711(_0x1c8f0b, 'Max XP', _0x42ed1e(_0x37351d['maxXP']), _0x2ee18c, _0x4c963e), _0x4c963e += 0x32;
};
var _0x21416e = function (_0x47aeb4, _0x5958e8, _0xeb0ee1, _0x1d7a5a, _0x16d89f, _0x204f14, _0x13397a) {
_0x47aeb4['save'](), _0x47aeb4['globalAlpha'] = _0x16d89f, _0x47aeb4['fillStyle'] = _0x1d7a5a, _0x47aeb4['rotate'](_0xeb0ee1), _0x47aeb4['save'](), _0x47aeb4['strokeStyle'] = 'white', _0x47aeb4['beginPath'](), _0x47aeb4['arc'](0x0, 0x0, _0x5958e8, 0x0, Math['PI'] * 0.5, ![]), _0x47aeb4['stroke'](), _0x47aeb4['restore'](), _0x47aeb4['save'](), _0x47aeb4['beginPath'](), _0x47aeb4['arc'](0x0, 0x0, _0x5958e8, 0x0, Math['PI'] * 0.5, ![]), _0x47aeb4['lineTo'](0x0, _0x204f14), _0x47aeb4['lineTo'](_0x13397a, _0x204f14), _0x47aeb4['lineTo'](_0x13397a, 0x0), _0x47aeb4['closePath'](), _0x47aeb4['fill'](), _0x47aeb4['restore'](), _0x47aeb4['restore']();
};
_0x266093['prototype']['lastWastedPopupT'] = 0x0, _0x266093['prototype']['onPlayerWasted'] = function (_0x5e075e) {
if ((_0x397f50 - this['lastWastedPopupT']) / 0x3e8 > 0.7) {
    this['lastWastedPopupT'] = _0x397f50;
    var _0x185c74 = new _0x35ed11(_0x5e075e + ' wasted!', 0x28, 'red', 0x5dc);
    this['wastedPopups']['push'](_0x185c74);
}
}, window['ZombieMode'] = _0x266093;
var _0xec194 = _0x2f41e5;
_0x14f545['prototype'] = Object['create'](_0xec194['prototype']), _0x14f545['prototype']['constructor'] = _0x14f545, _0x14f545['superClass'] = _0xec194, _0x14f545['prototype']['safeArea'] = null;
var _0x242404 = ![];
_0x14f545['prototype']['wastedPopups'] = [], _0x14f545['prototype']['playerDisplayNum'] = 0x0, _0x14f545['prototype']['setServerPlayerCount'] = function () {
if (this['playerDisplayNum'] == 0x0) _0x3cb245['setText'](_0x3fe45c(_0x5b8340) + ' mopers');
else _0x3cb245['setText'](_0x3fe45c(_0x334387) + ' on server');
this['playerDisplayNum'] = this['playerDisplayNum'] == 0x0 ? 0x1 : 0x0;
}, _0x14f545['prototype']['interface'] = function () {
if (this['state'] == -0x1 || this['mode'] != _0x5332af) return;
if (_0x19efaa)
    for (var _0x140c6a = this['wastedPopups']['length'] - 0x1; _0x140c6a >= 0x0; _0x140c6a--) {
        var _0x4c1823 = this['wastedPopups'][_0x140c6a];
        _0x4c1823['draw']();
        if (_0x4c1823['timedOut']) this['wastedPopups']['splice'](_0x140c6a, 0x1);
    }
if (this['endScreenCanvas'] != null) {
    this['endScreenCanvas']['width'] && _0x4ac9cf['drawImage'](this['endScreenCanvas'], _0x3584da / 0x2 - this['endScreenCanvas']['width'] / 0x2, 0xf * _0x185dc5, this['endScreenCanvas']['width'], this['endScreenCanvas']['height']);
    if (!_0x19efaa || isGhost) _0x943cc6(!![]);
}
this['drawInterfaceButtons'](), this['gameMode_screenMsg']();
}, _0x14f545['prototype']['interfaceReset'] = function () {
this['endScreenCanvas'] = null, this['dangerCircleMiniMapCanvas'] = null, this['wastedPopups'] = [], this['lastWastedPopupT'] = 0x0, this['playercount'] = 0x0, this['safeArea'] = null, _0x369cd9 = null, _0x2b2c70 = null;
if (this['interfaceButtons'])
    for (var _0x206b3e = 0x0; _0x206b3e < this['interfaceButtons']['length']; _0x206b3e++) {
        var _0x22fa1c = this['interfaceButtons'][_0x206b3e];
        _0x22fa1c['onInterfaceReset']();
    }
this['interfaceButtons'] = [];
}, _0x14f545['prototype']['onInit'] = function () {}, _0x14f545['prototype']['playercount'] = 0x0, _0x14f545['prototype']['setPlayerCount'] = function (_0x277bb7) {
this['playercount'] = _0x277bb7;
}, _0x14f545['prototype']['showPlayerCount'] = function () {
_0x4ac9cf['save']();
var _0x1f7ced = _0x3584da / 0x2,
    _0x2a8cc2 = 0x32 * _0x489111,
    _0x73dbf3 = 0x12c * _0x489111;
_0x4ac9cf['globalAlpha'] = 0.35, _0x4ac9cf['fillStyle'] = 'black';
var _0x3758e3 = 0x1e * _0x489111;
_0x4ac9cf['fillRect'](_0x1f7ced - _0x73dbf3 / 0x2, _0x3758e3, _0x73dbf3, _0x2a8cc2), _0x4ac9cf['globalAlpha'] = 0x1, _0x4ac9cf['fillStyle'] = 'white', _0x4ac9cf['font'] = 0x1e * _0x489111 + 'px Arial', _0x4ac9cf['lineWidth'] = 0x1, _0x4ac9cf['textAlign'] = 'center', _0x4ac9cf['textBaseline'] = 'middle', _0x4ac9cf['shadowOffsetX'] = 0x1, _0x4ac9cf['shadowOffsetY'] = 0x1, _0x4ac9cf['shadowColor'] = 'black', _0x3758e3 += 0x19 * _0x489111;
var _0x58d24c = ' player';
if (this['playercount'] > 0x1) _0x58d24c += 's';
if (this['state'] == battleRoyal_inProgress) _0x58d24c += ' alive!';
else {
    if (this['state'] == _0x45ed71 || this['state'] == battleRoyal_ready) _0x58d24c += ' joined';
}
_0x4ac9cf['fillText'](this['playercount'] + _0x58d24c, _0x1f7ced, _0x3758e3), _0x4ac9cf['restore']();
}, _0x14f545['prototype']['lbCanvas'] = null, _0x14f545['prototype']['leaderboard'] = function (_0x5f0570) {
if (this['lbCanvas'] == null) this['lbCanvas'] = document['createElement']('canvas');
if (_0x5f0570) {
    var _0x1b3551 = this['lbCanvas']['getContext']('2d'),
        _0x5eaa95 = 0x37,
        _0x526115 = 0x16;
    _0x5eaa95 = _0x5eaa95 + _0x526115 * _0x5f0570['length'], this['lbCanvas']['width'] = 0x10e, this['lbCanvas']['height'] = _0x5eaa95, _0x1b3551['globalAlpha'] = 0.2, _0x1b3551['fillStyle'] = '#000000', _0x1b3551['fillRect'](0x0, 0x0, this['lbCanvas']['width'], this['lbCanvas']['height']), _0x1b3551['globalAlpha'] = 0x1, _0x1b3551['fillStyle'] = '#FFFFFF';
    var _0x4b95b4 = _0x187b4f['name'];
    _0x1b3551['font'] = '24px Arial';
    !options_lowGraphics && (_0x1b3551['shadowOffsetX'] = 0x1, _0x1b3551['shadowOffsetY'] = 0x1);
    _0x1b3551['shadowColor'] = 'black', _0x1b3551['fillText'](_0x4b95b4, this['lbCanvas']['width'] / 0x2 - _0x1b3551['measureText'](_0x4b95b4)['width'] / 0x2, 0x28);
    var _0x296de3;
    _0x1b3551['textAlign'] = 'left';
    for (_0x1b3551['font'] = '17px Arial', _0x296de3 = 0x0; _0x296de3 < _0x5f0570['length']; ++_0x296de3) {
        _0x4b95b4 = _0x47dcae ? '' : _0x5f0570[_0x296de3]['name'] || 'mope.io', _0x4b95b4 += ' (' + _0x42ed1e(_0x5f0570[_0x296de3]['xp']) + ')', _0x1b3551['fillStyle'] = '#FFFFFF', _0x1b3551['fillText'](_0x4b95b4, 0xf, 0x41 + _0x526115 * _0x296de3);
    }
}
}, _0x14f545['prototype']['drawLeaderboard'] = function () {
_0x19efaa && (this['pieChartCanvas'] != null && (this['pieChartCanvas']['width'] && _0x4ac9cf['drawImage'](this['pieChartCanvas'], 0x14 * _0x185dc5, 0x14 * _0x185dc5, this['pieChartCanvas']['width'], this['pieChartCanvas']['height'])));
if (_0x369cd9) _0x2dd5ed();
}, _0x14f545['prototype']['btnPlayAgain'] = null, _0x14f545['prototype']['showStats'] = !![], _0x14f545['prototype']['interfaceButtons'] = [], _0x14f545['prototype']['createInterfaceButtons'] = function () {
this['interfaceButtons'] = [];
}, _0x14f545['prototype']['drawInterfaceButtons'] = function () {
if (this['interfaceButtons'])
    for (var _0x424434 = 0x0; _0x424434 < this['interfaceButtons']['length']; _0x424434++) {
        var _0x5d31a8 = this['interfaceButtons'][_0x424434];
        _0x5d31a8['isVisible'] && _0x5d31a8['draw']();
    }
}, _0x14f545['prototype']['onResize'] = function () {
this['drawInterfaceButtons']();
}, _0x14f545['prototype']['readPlayerStats'] = function (_0x52f514) {
var _0x596411 = [];
return _0x596411['rank'] = _0x52f514['readUInt16'](), _0x596411['timeAlive'] = _0x52f514['readUInt16'](), _0x596411['totalKills'] = _0x52f514['readUInt16'](), _0x596411['topRank'] = _0x52f514['readUInt16'](), _0x596411['maxXP'] = _0x52f514['readUInt32'](), _0x596411['killedBy'] = _0x52f514['readString'](), _0x596411;
}, _0x14f545['prototype']['playerInfo'] = function (_0x5d5462) {
if (isGhost && !_0x34ea77) {
    var _0x4bbb51 = this['readPlayerStats'](_0x5d5462);
    this['buildEndScreenHTML'](_0x4bbb51);
} else !isGhost && (this['endScreenCanvas'] = null);
};
var _0x45ed71 = 0x0,
_0x30a3a0 = 0x1,
_0x30a3a0 = 0x1,
_0x2944c1 = 0x2,
_0x611ae8 = 0x4,
_0x2d5032 = 0x4;
_0x14f545['prototype']['worldUpdate'] = function (_0x1b55ca) {
_0x104121 = _0x1b55ca['readUInt8']();
if (_0x104121 == _0x2944c1) {
    var _0x84339d = minimapW / 0xc8,
        _0x555a64 = minimapH / 0xc8,
        _0xc97228 = _0x1b55ca['readUInt32']() * _0x84339d,
        _0x4d60be = _0x1b55ca['readUInt32']() * _0x555a64,
        _0x1ed0e4 = _0x1b55ca['readUInt32']() * 0x5;
    _0x369cd9 = {
        'x': _0xc97228,
        'y': _0x4d60be,
        'rad': _0x1ed0e4 * (minimapW / _0x362064)
    };
} else _0x369cd9 = null;
}, _0x14f545['prototype']['handleMessage'] = function (_0x457576) {
var _0x3a64ca = _0x457576['readUInt8']();
switch (_0x3a64ca) {
case _0x2db7f0: {
    var _0x51cdef = _0x457576['readString']();
    this['setStatusBarMessage'](_0x51cdef, 0xf);
    break;
}
case _0x2ad6a1: {
    this['alivePlayers'] = _0x457576['readUInt16'](), this['playerCountMsg'] = _0x457576['readString'](), this['setPlayerCountMsg']();
    break;
}
case _0x444a30: {
    this['timeRemain'] = _0x457576['readUInt16']();
    break;
}
case 0x21: {
    var _0x222e31 = _0x457576['readUInt16']();
    isGhost = !![], this['showStats'] = !![], _0x361438 = ![], _0x3348a7();
}
break;
case 0x22: {
    _0x1b9ff0 = 'You WON!', respawnXp = 0x0, _0x3f94b8 = 0x50, _0x3e9660 = 'limegreen', _0x47c521 = +new Date() + 0x1388, _0x361438 = ![], _0x3348a7();
}
break;
case 0x23: {}
break;
case 0x24: {
    var _0x1568ae = _0x457576['readUInt8'](),
        _0x4d6220 = [];
    for (_0x12146d = 0x0; _0x12146d < _0x1568ae; ++_0x12146d) {
        _0x4d6220['push']({
            'name': _0x457576['readString'](),
            'xp': _0x457576['readUInt32']()
        });
    }
    this['leaderboard'](_0x4d6220);
}
break;
case 0x25: {
    var _0x20af5e = _0x457576['readUInt16'](),
        _0x108ac4 = _0x166ed8(_0x20af5e);
    if (this['state'] == 0x4) {
        var _0x51cdef = 'Game restarts in ' + _0x108ac4;
        if (_0x20af5e < 0x3) _0x51cdef = 'Starting new game';
        this['setMessage'](_0x51cdef, 0x1f4);
    } else {
        var _0x51cdef = 'Battle begins in ' + _0x108ac4;
        if (_0x20af5e < 0x3) {
            if (_0x108ac4 == '') _0x51cdef = 'Starting new battle!';
            else _0x51cdef = 'Starting new battle! (' + _0x108ac4 + ')';
        }
        this['setMessage'](_0x51cdef, 0x1f4), _0x20af5e == 0x0 && _0x2e863d('SURVIVE!', 0x9c4);
    }
}
break;
case 0x26: {
    this['playersJoined'] = _0x457576['readUInt16']();
    if (this['playersJoined'] > 0x0) this['setPlayerCount'](this['playersJoined']);
}
break;
case 0x27: {
    var _0x20af5e = _0x457576['readUInt16'](),
        _0x108ac4 = _0x166ed8(_0x20af5e);
    if (!isGhost) {
        var _0x51cdef = 'Heatwave expanding in ' + _0x108ac4;
        if (_0x20af5e < 0x4) _0x51cdef = 'Heatwave expands now!';
        this['setMessage'](_0x51cdef, 0x1f4), _0x20af5e == 0x0 && _0x2e863d('STAY SAFE!', 0x9c4);
    }
}
break;
case 0x28: {
    if (isGhost) this['setMessage']('You have been eliminated!', 0x1f4);
    else this['setMessage']('Stay in safe area!', 0x1f4);
}
break;
case 0x29: {
    _0x104121 = this['state'] = _0x457576['readUInt8'](), this['playersJoined'] = _0x457576['readUInt16']();
    if (this['playersJoined'] > 0x0) this['setPlayerCount'](this['playersJoined']);
    if (this['state'] == _0x45ed71) this['setMessage']('Waiting for players', 0x3e8);
    else this['state'] == battleRoyal_gameReset && _0x5f5825();
}
break;
case 0x2a: {
    var _0x38dfa4 = _0x457576['readUInt8']() == 0x1;
    if (_0x38dfa4) this['setMessage']('You WON!', 0x3a98);
    else this['setMessage']('You LOST!', 0x3a98);
}
break;
case 0x2b: {
    _0x44b94b = !![], _0x3d1ca4() && _0x46850e['close']();
}
break;
case 0x2c: {
    var _0x28fadf = _0x457576['readString']();
    if (_0x28fadf && _0x28fadf['length'] > 0x0) this['onPlayerWasted'](_0x28fadf);
}
break;
case 0x2d: {
    console['log']('Msg_battleroyal_endScreen');
    var _0x127511 = null,
        _0x15f87f = 0x0;
    !_0x567c71 ? (_0x127511 = this['readPlayerStats'](_0x457576), _0x15f87f = _0x127511['totalPlayers']) : _0x15f87f = _0x457576['readUInt16']();
    var _0x2b92d3 = [];
    if (_0x15f87f > 0x0) {
        if (_0x15f87f > 0x5) _0x15f87f = 0x5;
        for (var _0x12146d = 0x0; _0x12146d < _0x15f87f; ++_0x12146d) {
            _0x2b92d3['push']({
                'playerName': _0x457576['readString'](),
                'wins': _0x457576['readUInt8']()
            });
        }
    }(_0x2b92d3 != null || _0x127511 != null) && (this['endScreenDisplayed'] = ![], this['buildEndScreenHTML'](_0x2b92d3, _0x127511));
}
break;
case 0x2e: {
    var _0x20af5e = _0x457576['readUInt16']();
    if (_0x20af5e == 0x0) this['setMessage']('Battle Ended', 0x1f4);
    else {
        var _0x108ac4 = _0x166ed8(_0x20af5e);
        if (!isGhost) this['setMessage']('Battle Ending in ' + _0x108ac4, 0x1f4);
    }
}
case 0x30: {
    var _0x127511 = this['readPlayerStats'](_0x457576);
    this['buildEndScreen'](null, _0x127511);
}
}
};
var _0x2b2c70 = null;

function _0x2dd5ed() {
if (!_0x2b2c70) _0x2b2c70 = document['createElement']('canvas');
_0x2b2c70['width'] = minimapW, _0x2b2c70['height'] = minimapH;
var _0x54faf8 = _0x2b2c70['getContext']('2d');
_0x54faf8['clearRect'](0x0, 0x0, _0x2b2c70['width'], _0x2b2c70['height']), _0x54faf8['save']();
var _0x254c7b = Math['max'](0x3, _0x369cd9['rad']),
    _0x2fde4a = _0x369cd9['x'],
    _0x1e83c0 = _0x369cd9['y'];
_0x54faf8['translate'](_0x2fde4a, _0x1e83c0), _0x54faf8['save'](), _0x54faf8['globalAlpha'] = 0x1, _0x5a0c82(_0x54faf8, 0x0, 0x0, _0x369cd9['rad'], 0x5, 'white'), _0x54faf8['restore']();
var _0x25899e = _0x489111 * minimapW * 1.5,
    _0x15424e = _0x489111 * minimapH * 1.5,
    _0xaf0301 = 0x1,
    _0x203236 = 'red';
_0x21416e(_0x54faf8, _0x369cd9['rad'], Math['PI'] * 0x0, _0x203236, _0xaf0301, _0x25899e, _0x15424e), _0x21416e(_0x54faf8, _0x369cd9['rad'], Math['PI'] * 0.5, _0x203236, _0xaf0301, _0x25899e, _0x15424e), _0x21416e(_0x54faf8, _0x369cd9['rad'], Math['PI'] * 0x1, _0x203236, _0xaf0301, _0x25899e, _0x15424e), _0x21416e(_0x54faf8, _0x369cd9['rad'], Math['PI'] * 1.5, _0x203236, _0xaf0301, _0x25899e, _0x15424e), _0x54faf8['restore'](), _0x2b2c70 && _0x4ac9cf['drawImage'](_0x2b2c70, _0x3584da - (0xa * _0x185dc5 + _0x483570['width'] * _0x489111), 0xa * _0x185dc5, minimapW * _0x489111, minimapH * _0x489111);
}
_0x14f545['prototype']['drawZombiePlayers'] = function () {
if (this['zombiePlayers'])
    for (t = 0x0; t < this['zombiePlayers']['length']; t++) {
        _0xc6979f(this['zombiePlayers'][t], '#adff32', 0x1);
    }
}, _0x14f545['prototype']['drawMap'] = function () {
this['buildPieChart']();
if (!_0x242404) this['drawZombiePlayers']();
}, _0x14f545['prototype']['pieChartCanvas'] = null, _0x14f545['prototype']['teamColors'] = {
0x0: 'white',
0x1: '#B6CF40'
}, _0x14f545['prototype']['buildPieChart'] = function () {
if (this['pieChartCanvas'] == null) this['pieChartCanvas'] = document['createElement']('canvas');
if (this['pieChartCanvas'] == null) return;
var _0x4c2476 = this['pieChartCanvas']['getContext']('2d'),
    _0x1f419e = {
        0x0: this['nonZombiePlayersCount'],
        0x1: this['zombieCount']
    };
_0x35c3fd = _0x242404 ? 0x1 : 0x0;
var _0x5e5dac = new _0x5de370({
        'pad': 0x1e,
        'canvas': this['pieChartCanvas'],
        'data': _0x1f419e,
        'colors': this['teamColors']
    }),
    _0x4cc54e = 0x37,
    _0x2fb8e0 = 0x28,
    _0x3cc103 = 0x5,
    _0x4a6aa5 = 0xc8,
    _0x2c2692 = 0xc8;
_0x4cc54e = _0x4a6aa5 + _0x3cc103 * 0x2, this['pieChartCanvas']['width'] = _0x2c2692 + _0x3cc103 * 0x2, this['pieChartCanvas']['height'] = _0x4cc54e, _0x5e5dac['draw'](), _0x4c2476['globalAlpha'] = 0.2;
var _0x391683 = _0x3cc103;
_0x4c2476['globalAlpha'] = 0.5, _0x4c2476['fillStyle'] = 'white', _0x4c2476['font'] = '20px Arial';
var _0x391683 = 0xc8;
str = _0x187b4f['name'], _0x4c2476['fillText'](str, this['pieChartCanvas']['width'] / 0x2 - _0x4c2476['measureText'](str)['width'] / 0x2 - 0xf, _0x391683);
}, _0x14f545['prototype']['endScreenDisplayed'] = ![], _0x14f545['prototype']['buildEndScreenHTML'] = function (_0x1aae98) {
if (this['endScreenDisplayed']) return;
this['endScreenDisplayed'] = !![];
var _0x19b9c3 = '';
_0x19b9c3 += '<div class=\'msg\'>YOU WERE #' + _0x1aae98['rank'] + '</div>', _0x19b9c3 += '<div class=\'row\'>', _0x19b9c3 += '<div class=\'label\'>Killed by:</div>', _0x19b9c3 += '<div class=\'value2\'>' + _0x1aae98['killedBy'] + '</div>', _0x19b9c3 += '</div>', _0x19b9c3 += '<div class=\'row\'>', _0x19b9c3 += '<div class=\'col1\'>', _0x19b9c3 += '<div class=\'label\'>Time alive:</div>', _0x19b9c3 += '<div class=\'value\'>' + _0x166ed8(_0x1aae98['timeAlive']) + '</div>', _0x19b9c3 += '</div>', _0x19b9c3 += '<div class=\'col2\'>', _0x19b9c3 += '<div class=\'label\'>Total kills:</div>', _0x19b9c3 += '<div class=\'value\'>' + _0x1aae98['totalKills'] + '</div>', _0x19b9c3 += '</div>', _0x19b9c3 += '</div>', _0x19b9c3 += '<div class=\'row\'>', _0x19b9c3 += '<div class=\'col1\'>', _0x19b9c3 += '<div class=\'label\'>Top rank:</div>', _0x19b9c3 += '<div class=\'value\'>' + _0x1aae98['topRank'] + '</div>', _0x19b9c3 += '</div>', _0x19b9c3 += '<div class=\'col2\'>', _0x19b9c3 += '<div class=\'label\'>Max xp:</div>', _0x19b9c3 += '<div class=\'value\'>' + _0x42ed1e(_0x1aae98['maxXP']) + '</div>', _0x19b9c3 += '</div>', _0x19b9c3 += '</div>', _0x19b9c3 += '<div style=\'clear:both;\'></div>', _0x19b9c3 += '<div class=\'btnDiv\'>', _0x19b9c3 += '<button id=\'btnMopeOptions\' class=\'btn\'>      CONTINUE      </button>', _0x19b9c3 += '</div>', _0x19b9c3 += '<div style=\'clear:both;\'></div>';
var _0x319033 = document['getElementById']('endScreen');
_0x319033 && (_0x319033['innerHTML'] = _0x19b9c3, _0x319033['style']['display'] = 'block'), (!_0x19efaa || isGhost) && _0x943cc6(!![]);
}, _0x14f545['prototype']['endScreenCanvas'] = null, _0x14f545['prototype']['buildEndScreen'] = function (_0x1d59a4, _0x25f6d7) {
if (this['endScreenCanvas'] == null) this['endScreenCanvas'] = document['createElement']('canvas');
if (this['endScreenCanvas'] == null) return;
var _0x525bb5 = this['endScreenCanvas']['getContext']('2d'),
    _0x334612 = 0x37,
    _0x5f3c44 = 0x28,
    _0xedf0f = 0x5,
    _0x312a70 = 0xf0,
    _0x34d361 = 0x1a4;
_0x334612 = _0x312a70 + _0xedf0f * 0x2, this['endScreenCanvas']['width'] = _0x34d361 + _0xedf0f * 0x2, this['endScreenCanvas']['height'] = _0x334612, _0x525bb5['globalAlpha'] = 0.2, _0x525bb5['fillStyle'] = '#000000', _0x525bb5['fillRect'](0x0, 0x0, this['endScreenCanvas']['width'], this['endScreenCanvas']['height']), _0x525bb5['fillStyle'] = '#000000', _0x525bb5['fillRect'](_0xedf0f, _0xedf0f, this['endScreenCanvas']['width'] - _0xedf0f * 0x2, this['endScreenCanvas']['height'] - _0xedf0f * 0x2);
var _0xabc2b1 = _0xedf0f;
_0x525bb5['globalAlpha'] = 0x1, _0x525bb5['fillStyle'] = '#FFFFFF', _0x525bb5['font'] = '30px Arial', _0xabc2b1 += 0x37;
var _0x385a6e = 'Final Stats';
_0x525bb5['font'] = '30px Arial', _0x525bb5['fillText'](_0x385a6e, this['endScreenCanvas']['width'] / 0x2 - _0x525bb5['measureText'](_0x385a6e)['width'] / 0x2, _0xabc2b1), _0x525bb5['font'] = '20px Arial', _0xabc2b1 += 0x2d, _0x385a6e = 'You were #' + _0x25f6d7['rank'], _0x525bb5['fillText'](_0x385a6e, this['endScreenCanvas']['width'] / 0x2 - _0x525bb5['measureText'](_0x385a6e)['width'] / 0x2, _0xabc2b1), _0xabc2b1 += 0x28;
var _0x11de82 = _0x166ed8(_0x25f6d7['timeAlive']),
    _0x1bfd12 = _0xedf0f + 0xf;
_0x4eb711(_0x525bb5, 'Killed by', _0x25f6d7['killedBy'], _0x1bfd12, _0xabc2b1), _0xabc2b1 += 0x28, _0x4eb711(_0x525bb5, 'Time Alive', _0x166ed8(_0x25f6d7['timeAlive']), _0x1bfd12, _0xabc2b1), _0x1bfd12 += 0xd2, _0x4eb711(_0x525bb5, 'Total Kills', _0x25f6d7['totalKills'], _0x1bfd12, _0xabc2b1), _0xabc2b1 += 0x28, _0x1bfd12 = _0xedf0f + 0xf, _0x4eb711(_0x525bb5, 'Top rank', _0x25f6d7['topRank'], _0x1bfd12, _0xabc2b1), _0x1bfd12 += 0xd2, _0x4eb711(_0x525bb5, 'Max XP', _0x42ed1e(_0x25f6d7['maxXP']), _0x1bfd12, _0xabc2b1), _0xabc2b1 += 0x32;
};
var _0x21416e = function (_0x4e7580, _0x53a46b, _0x93ab05, _0x17b5f7, _0x3fd440, _0x200ec0, _0x3d375f) {
_0x4e7580['save'](), _0x4e7580['globalAlpha'] = _0x3fd440, _0x4e7580['fillStyle'] = _0x17b5f7, _0x4e7580['rotate'](_0x93ab05), _0x4e7580['save'](), _0x4e7580['strokeStyle'] = 'white', _0x4e7580['beginPath'](), _0x4e7580['arc'](0x0, 0x0, _0x53a46b, 0x0, Math['PI'] * 0.5, ![]), _0x4e7580['stroke'](), _0x4e7580['restore'](), _0x4e7580['save'](), _0x4e7580['beginPath'](), _0x4e7580['arc'](0x0, 0x0, _0x53a46b, 0x0, Math['PI'] * 0.5, ![]), _0x4e7580['lineTo'](0x0, _0x200ec0), _0x4e7580['lineTo'](_0x3d375f, _0x200ec0), _0x4e7580['lineTo'](_0x3d375f, 0x0), _0x4e7580['closePath'](), _0x4e7580['fill'](), _0x4e7580['restore'](), _0x4e7580['restore']();
};
_0x14f545['prototype']['lastWastedPopupT'] = 0x0, _0x14f545['prototype']['onPlayerWasted'] = function (_0x4c6038) {
if ((_0x397f50 - this['lastWastedPopupT']) / 0x3e8 > 0.7) {
    this['lastWastedPopupT'] = _0x397f50;
    var _0x257fee = new _0x35ed11(_0x4c6038 + ' wasted!', 0x28, 'red', 0x5dc);
    this['wastedPopups']['push'](_0x257fee);
}
}, _0x14f545['prototype']['screenTextEndT'] = 0x0, _0x14f545['prototype']['screenTextMsg'] = '', _0x14f545['prototype']['setMessage'] = function (_0x3c47b4, _0x29676f) {
this['screenTextMsg'] = _0x3c47b4;
if (_0x29676f == 0x0) this['screenTextEndT'] = +new Date() + _0x29676f;
else this['screenTextEndT'] = +new Date() + _0x29676f;
}, _0x14f545['prototype']['screenMessage'] = function () {
var _0x4f9cad = 0x1,
    _0x988590 = (this['screenTextEndT'] - _0x397f50) / 0x3e8 / _0x4f9cad;
_0x988590 = 0x0 > _0x988590 ? 0x0 : 0x1 < _0x988590 ? 0x1 : _0x988590;
if (_0x988590 > 0x0) {
    _0x4ac9cf['save']();
    var _0x56f299 = _0x3584da / 0x2,
        _0x39d34e = 0x3c * _0x489111,
        _0x39b31b = (_0x3584da / 0x2 - 0x64) * _0x489111;
    _0x4ac9cf['globalAlpha'] = 0.35, _0x4ac9cf['fillStyle'] = 'black';
    var _0x5d9864 = _0x50f90a - _0x50f90a * 0.2;
    _0x4ac9cf['fillRect'](_0x56f299 - _0x39b31b / 0x2, _0x5d9864 - _0x39d34e / 0x2, _0x39b31b, _0x39d34e), _0x4ac9cf['globalAlpha'] = 0x1, _0x4ac9cf['globalAlpha'] = _0x988590, _0x4ac9cf['globalAlpha'] = 0x1, _0x4ac9cf['fillStyle'] = 'white', _0x4ac9cf['font'] = 0x28 * _0x489111 + 'px Arial', _0x4ac9cf['lineWidth'] = 0x1, _0x4ac9cf['textAlign'] = 'center', _0x4ac9cf['textBaseline'] = 'middle', _0x4ac9cf['shadowOffsetX'] = 0x1, _0x4ac9cf['shadowOffsetY'] = 0x1, _0x4ac9cf['shadowColor'] = 'black', _0x4ac9cf['fillText'](this['screenTextMsg'], _0x3584da / 0x2, _0x5d9864), _0x4ac9cf['restore']();
}
};
var _0xa1c64a = new Array();
_0x14f545['prototype']['setStatusBarMessage'] = function (_0x1664d6, _0x22c38c) {
var _0x539a4e = 0x28,
    _0x1736db = 0x1,
    _0x2be689 = 'white',
    _0x34978c = _0x3584da / 0x2,
    _0x13c90b = _0x50f90a - _0x50f90a * 0.15,
    _0x24d7ea = _0x3584da / 0x2 - 0x64,
    _0x360bc0 = 0x3c,
    _0x5cd7fb = 'black',
    _0x182e35 = 0.1,
    _0x41a0e7 = +new Date() + _0x22c38c * 0x3e8;
this['msg_statusbar'] = {
    'txt': _0x1664d6,
    'txt_size': _0x539a4e,
    'txt_alpha': _0x1736db,
    'txt_color': _0x2be689,
    'x': _0x34978c,
    'y': _0x13c90b,
    'bg_w': _0x24d7ea,
    'bg_h': _0x360bc0,
    'bg_color': _0x5cd7fb,
    'bg_alpha': _0x182e35,
    'dur': _0x41a0e7
};
}, _0x14f545['prototype']['msg_statusbar'] = null, _0x14f545['prototype']['msg_playerCount'] = null;
var _0x28e697 = 0.1;
_0x14f545['prototype']['setPlayerCountMsg'] = function () {
var _0x23eb80 = 0x14,
    _0x4fba06 = 0x1,
    _0x5c7ed9 = 'white',
    _0x2c81e6 = _0x3584da / 0x2,
    _0xa18aca = 0x1e,
    _0x45439f = 0x64,
    _0x22fb8f = 0x28,
    _0x223f73 = 'black',
    _0x582de3 = 0.1,
    _0x36a078 = '';
this['playerCountMsg'] != 'alive' ? (_0x22fb8f = 0x46, _0x36a078 = this['playerCountMsg'] + '\x0a' + this['alivePlayers'] + ' joined') : _0x36a078 = this['alivePlayers'] + ' alive';
var _0x2e6285 = +new Date() + 0x3c * 0x3e8;
this['msg_playerCount'] = {
    'txt': _0x36a078,
    'txt_size': _0x23eb80,
    'txt_alpha': _0x4fba06,
    'txt_color': _0x5c7ed9,
    'x': _0x2c81e6,
    'y': _0xa18aca,
    'bg_w': _0x45439f,
    'bg_h': _0x22fb8f,
    'bg_color': _0x223f73,
    'bg_alpha': _0x582de3,
    'dur': _0x2e6285
};
}, _0x14f545['prototype']['gameMode_screenMsg'] = function () {
if (this['msg_statusbar']) {
    this['drawMessage'](this['msg_statusbar']);
    if (this['msg_statusbar']['dur'] - _0x397f50 < 0x0) this['msg_statusbar'] = null;
}
this['msg_playerCount'] && this['drawMessage'](this['msg_playerCount']);
}, _0x14f545['prototype']['drawMessage'] = function (_0x50816b) {
if (_0x50816b && _0x50816b['txt']) this['drawMessageBar'](_0x50816b['txt'], _0x50816b['txt_size'], _0x50816b['txt_alpha'], _0x50816b['txt_color'], _0x50816b['x'], _0x50816b['y'], _0x50816b['bg_w'], _0x50816b['bg_h'], _0x50816b['bg_color'], _0x50816b['bg_alpha'], _0x50816b['dur']);
}, _0x14f545['prototype']['drawMessageBar'] = function (_0x2028c5, _0x56e546, _0x20feac, _0x38ae8b, _0x35d898, _0x3c09b8, _0xc94f86, _0x177c8e, _0x331640, _0x47a05e, _0x46c1db) {
var _0x141d7f = 0x1; {
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = _0x47a05e, _0x4ac9cf['fillStyle'] = _0x331640, _0x56e546 = _0x56e546 * _0x489111, _0x4ac9cf['font'] = _0x56e546 + 'px Arial';
    var _0x4456de = _0x35d898,
        _0x4be44f = _0x3c09b8,
        _0x527061 = _0x2028c5['split']('\x0a'),
        _0x512f21 = _0x56e546 * _0x527061['length'] * 1.5 * _0x489111,
        _0x16a752 = 0x0;
    for (var _0x4d68c0 = 0x0; _0x4d68c0 < _0x527061['length']; ++_0x4d68c0) {
        _0x16a752 = Math['max'](_0x16a752, _0x4ac9cf['measureText'](_0x527061[_0x4d68c0])['width']);
    }
    _0x16a752 = _0x16a752 * 1.5 * _0x489111, _0x4ac9cf['fillRect'](_0x4456de - _0x16a752 / 0x2, _0x4be44f - _0x512f21 / 0x2, _0x16a752, _0x512f21), _0x4ac9cf['globalAlpha'] = _0x20feac, _0x4ac9cf['fillStyle'] = _0x38ae8b, _0x4ac9cf['lineWidth'] = 0x1, _0x4ac9cf['textAlign'] = 'center', _0x4ac9cf['textBaseline'] = 'middle', _0x4ac9cf['shadowOffsetX'] = 0x1, _0x4ac9cf['shadowOffsetY'] = 0x1, _0x4ac9cf['shadowColor'] = 'black';
    if (_0x527061['length'] > 0x1) _0x4be44f -= 0xa * _0x489111;
    else _0x4be44f += 0x5 * _0x489111;
    for (var _0x4d68c0 = 0x0; _0x4d68c0 < _0x527061['length']; _0x4d68c0++) {
        _0x4ac9cf['fillText'](_0x527061[_0x4d68c0], _0x4456de, _0x4be44f), _0x4be44f += _0x56e546 * (_0x4d68c0 + 0x1);
    }
    _0x4ac9cf['restore']();
}
};

function _0x14f545(_0x1a2bf6) {
this['mode'] = _0x1edb1c, this['chatAllowed'] = !![], this['createInterfaceButtons']();
}
window['BattleRoyale'] = _0x14f545;
var _0x5de370 = function (_0x268135) {
    this['options'] = _0x268135, this['radius'] = _0x268135['radius'], this['pad'] = _0x268135['pad'], this['canvas'] = _0x268135['canvas'], this['_ctx'] = this['canvas']['getContext']('2d'), this['colors'] = _0x268135['colors'], this['radius'] = Math['min'](this['canvas']['width'] / 0x2, this['canvas']['height'] / 0x2), this['draw'] = function () {
        var _0xb59ae = 0x0,
            _0x302a1a = 0x0;
        this['_ctx']['save'](), this['_ctx']['globalAlpha'] = 0.3, this['drawCircle'](this['canvas']['width'] / 0x2 - this['pad'] / 0x2, this['canvas']['height'] / 0x2 - this['pad'] / 0x2, this['radius'] - this['pad'], 'white'), this['_ctx']['restore']();
        for (var _0x3951b5 in this['options']['data']) {
            var _0x51edaa = this['options']['data'][_0x3951b5];
            _0xb59ae += _0x51edaa;
        }
        var _0x55eef2 = 0x0;
        for (_0x3951b5 in this['options']['data']) {
            this['_ctx']['save'](), this['_ctx']['lineWidth'] = 0x4, this['_ctx']['strokeStyle'] = 'white', this['_ctx']['globalAlpha'] = 0.3;
            var _0x47046d = 0x0;
            _0x35c3fd == _0x3951b5 && (this['_ctx']['globalAlpha'] = 0.6, _0x47046d = 0x8);
            _0x51edaa = this['options']['data'][_0x3951b5];
            var _0x43ba6c = 0x2 * Math['PI'] * _0x51edaa / _0xb59ae;
            this['drawPieSlice'](this['canvas']['width'] / 0x2 - this['pad'] / 0x2, this['canvas']['height'] / 0x2 - this['pad'] / 0x2, this['radius'] - this['pad'], _0x55eef2, _0x55eef2 + _0x43ba6c, this['colors'][_0x3951b5], _0x47046d), this['_ctx']['restore'](), _0x55eef2 += _0x43ba6c, _0x302a1a++;
        }
    }, this['drawPieSlice'] = function (_0x1deb09, _0x3954a3, _0xd38c21, _0x2d6e64, _0x8391db, _0x415eb1, _0x4097db) {
        this['_ctx']['fillStyle'] = _0x415eb1, this['_ctx']['beginPath'](), this['_ctx']['moveTo'](_0x1deb09, _0x3954a3), this['_ctx']['arc'](_0x1deb09, _0x3954a3, _0xd38c21 + _0x4097db, _0x2d6e64, _0x8391db), this['_ctx']['closePath'](), this['_ctx']['fill']();
        if (_0x4097db > 0x0) this['_ctx']['stroke']();
    }, this['drawCircle'] = function (_0x1f9f6e, _0x110466, _0x301cf4, _0x3ea6bb) {
        this['_ctx']['fillStyle'] = _0x3ea6bb, this['_ctx']['beginPath'](), this['_ctx']['moveTo'](_0x1f9f6e, _0x110466), this['_ctx']['arc'](_0x1f9f6e, _0x110466, _0x301cf4, 0x0, Math['PI'] * 0x2), this['_ctx']['closePath'](), this['_ctx']['fill']();
    };
},
_0xec194 = _0x2f41e5;
_0x4feee7['prototype'] = Object['create'](_0xec194['prototype']), _0x4feee7['prototype']['constructor'] = _0x4feee7, _0x4feee7['superClass'] = _0xec194, _0x4feee7['prototype']['safeArea'] = null, _0x4feee7['prototype']['teamColors'] = {
0x0: '#cccccc',
0x1: '#ffff00',
0x2: '#01effc',
0x3: '#bb00ff'
};

function _0x4feee7() {
this['mode'] = _0x59b793, this['createInterfaceButtons']();
}
_0x4feee7['prototype']['wastedPopups'] = [], _0x4feee7['prototype']['playerDisplayNum'] = 0x0, _0x4feee7['prototype']['eventText'] = null, _0x4feee7['prototype']['setServerPlayerCount'] = function () {
switch (this['playerDisplayNum']) {
case 0x1:
case 0x2:
    _0x3cb245['setText']('On Server: ' + _0x3fe45c(_0x46a32d) + ' playing ' + nPlayersUnique + ' unqiue'), this['playerDisplayNum']++;
    break;
case 0x3:
case 0x4:
    _0x3cb245['setText']('Modes Total: ' + gamemodes_alive + ' playing, ' + gamemodes_unique + ' unique'), this['playerDisplayNum']++;
    break;
case 0x5:
    var _0x5d9a82 = gamemodes_unique / _0x5b8340 * 0x64;
    _0x3cb245['setText']('Milestone 2: ' + _0x3fe45c(_0x5d9a82['toFixed'](0x2)) + '% (' + gamemodes_unique + ' of ' + _0x5b8340 + ')'), this['playerDisplayNum']++;
    break;
case 0x6:
    this['playerDisplayNum'] = 0x0;
    break;
default:
    _0x3cb245['setText'](_0x3fe45c(_0x5b8340) + ' across Mope!'), this['playerDisplayNum']++;
    break;
}
};
const _0x6d4f74 = 0x1,
_0x4e0989 = 0x2,
_0x35c4dc = 0x3,
_0x5dbcb2 = 0x4,
_0x342e0c = 0x5,
_0xf993f1 = 0x6,
_0x9291b2 = 0x7;
_0x4feee7['prototype']['socketMessages'] = function (_0x379933) {
var _0x4f2682 = _0x379933['readUInt8']();
switch (_0x4f2682) {
case _0x6d4f74: {
    let _0x42c93 = _0x379933['readUInt8'](),
        _0x4f10ee = _0x379933['readString']();
    _0x4f10ee = 'Nice, your team has unlocked \'' + _0x4f10ee + '\' buff.', this['showBuffMessage']('success', _0x4f10ee, _0x42c93, 0x6);
    break;
}
case _0x4e0989: {
    let _0x418e20 = _0x379933['readUInt8'](),
        _0xdcfc62 = _0x379933['readString']();
    _0xdcfc62 = 'Oh no, \'' + _0xdcfc62 + '\' buff has been compromised!', this['showBuffMessage']('error', _0xdcfc62, _0x418e20, 0x6);
    if (this['isApocalypseInprogress']) {}
    break;
}
case _0x35c4dc: {
    console['log']('APOCALYPSE_STARTED'), this['apocalypseType'] = _0x379933['readString'](), this['triggeredByTeamID'] = _0x379933['readUInt8'](), this['apocalypseStatus'] = _0x379933['readString'](), this['timeLeft'] = _0x379933['readUInt16']() / 0x64;
    break;
}
case _0x5dbcb2: {
    console['log']('APOCALYPSE_ENDED'), this['apocalypseType'] = null, this['triggeredByTeamID'] = 0x0, this['apocalypseStatus'] = null, this['timeLeft'] = 0x0, _0x1a7e4a('Apocalypse is over. Now, you can go anywhere freely!', 'success', 0x6), $bus['emit']($bus['EVENTS']['SET_APOCALYPSE_ONGOING'], {
        'isOngoing': ![],
        'timeLeft': 0x0
    });
    break;
}
case _0x342e0c: {
    this['isApocalypseInprogress'] = _0x379933['readUInt8']() == 0x1;
    this['isApocalypseInprogress'] && (this['apocalypseType'] = _0x379933['readString'](), this['triggeredByTeamID'] = _0x379933['readUInt8'](), this['apocalypseStatus'] = _0x379933['readString'](), this['timeLeft'] = _0x379933['readUInt16']() / 0x64, $bus['emit']($bus['EVENTS']['SET_APOCALYPSE_ONGOING'], {
        'isOngoing': this['isApocalypseInprogress'],
        'timeLeft': this['timeLeft']
    }));
    break;
}
case _0xf993f1: {
    this['team1'] = _0x379933['readUInt16'](), this['team2'] = _0x379933['readUInt16'](), this['team3'] = _0x379933['readUInt16'](), this['updatePieChart']({
        0x1: this['team1'],
        0x2: this['team2'],
        0x3: this['team3']
    }), this['drawPieLeaderboard']();
    break;
}
case _0x9291b2: {
    let _0x393437 = _0x379933['readUInt8']();
    this['capturedStones'] = [];
    for (var _0x3410af = 0x0; _0x3410af < _0x393437; _0x3410af++) {
        this['capturedStones']['push']({
            'stoneBuffID': _0x379933['readUInt8'](),
            'hp': _0x379933['readUInt8']() / 0x64
        });
    }
    $bus['emit']($bus['EVENTS']['SET_STONE_BUFFS'], this['capturedStones']);
    break;
}
}
}, _0x4feee7['prototype']['getStoneBuffIcon'] = function (_0x467822) {
switch (_0x467822) {
case 0x1:
    return '/assets/s/2/gameobj/78/incentive/1.png';
case 0x2:
    return '/assets/s/2/gameobj/78/incentive/2.png';
case 0x3:
    return '/assets/s/2/gameobj/78/incentive/3.png';
case 0x4:
    return '/assets/s/2/gameobj/78/incentive/4.png';
case 0x5:
    return '/assets/s/2/gameobj/78/incentive/5.png';
case 0x6:
    return '/assets/s/2/gameobj/78/incentive/6.png';
case 0x7:
    return '/assets/s/2/gameobj/78/incentive/7.png';
case 0x8:
    return '/assets/s/2/gameobj/78/incentive/8.png';
case 0x9:
    return '/assets/s/2/gameobj/78/incentive/9.png';
case 0xa:
    return '/assets/s/2/gameobj/78/incentive/10.png';
case 0xb:
    return '/assets/s/2/gameobj/78/incentive/11.png';
case 0xc:
    return '/assets/s/2/gameobj/78/incentive/12.png';
case 0xd:
    return '/assets/s/2/gameobj/78/incentive/13.png';
}
}, _0x4feee7['prototype']['showBuffMessage'] = function (_0x241442, _0x1733e9, _0x41d6c9, _0x27ac66) {
_0x189414();
var _0x30c1ba = document['getElementsByTagName']('body')[0x0];
if (_0x30c1ba) {
    let _0x43621d = document['getElementById']('gameAreaWrapper'),
        _0x5906f1 = _0x132dab('mopeshop-popup'),
        _0x3b3a0d = this['getStoneBuffIcon'](_0x41d6c9),
        _0x20b614 = _0x132dab('mopeshop-popup-icon', '');
    _0x20b614['innerHTML'] = '<img src=\'' + _0x3b3a0d + '\'/>';
    let _0xb532f9 = _0x132dab('msg', _0x241442),
        _0x20c267 = _0x132dab('text');
    _0x20c267['innerHTML'] = _0x1733e9;
    let _0x3cc705 = _0x132dab('closeMsg', '');
    _0x3cc705['onclick'] = function () {
        _0x189414();
    }, _0xb532f9['appendChild'](_0x20b614), _0xb532f9['appendChild'](_0x3cc705), _0xb532f9['appendChild'](_0x20c267), _0x5906f1['appendChild'](_0xb532f9), _0x30c1ba['insertBefore'](_0x5906f1, _0x43621d), _0x27ac66 !== undefined && _0x27ac66 > 0x0 && setTimeout(_0x189414, _0x27ac66 * 0x3e8);
}
}, _0x4feee7['prototype']['interface'] = function () {
if (this['state'] == -0x1 || this['mode'] != _0x5332af) return;
_0x19efaa && (this['pieChartCanvas'] != null && (this['pieChartCanvas']['width'] && _0x4ac9cf['drawImage'](this['pieChartCanvas'], 0x0, 0x0, this['pieChartCanvas']['width'], this['pieChartCanvas']['height']))), this['drawInterfaceButtons']();
}, _0x4feee7['prototype']['drawMap'] = function () {
if (_0x19efaa) {
    if (_0x50a9ba) return;
    this['drawPieLeaderboard'](), this['drawTeamPlayers'](), _0x3a73d2 && _0x3a73d2['drawMap'](), this['onApocalypseUpdated']();
}
}, _0x4feee7['prototype']['interfaceReset'] = function () {
this['endScreenCanvas'] = null, this['dangerCircleMiniMapCanvas'] = null, this['wastedPopups'] = [], this['lastWastedPopupT'] = 0x0, this['playercount'] = 0x0, this['safeArea'] = null;
if (this['interfaceButtons'])
    for (var _0x2425a8 = 0x0; _0x2425a8 < this['interfaceButtons']['length']; _0x2425a8++) {
        var _0x1af94d = this['interfaceButtons'][_0x2425a8];
        _0x1af94d['onInterfaceReset']();
    }
this['interfaceButtons'] = [];
}, _0x4feee7['prototype']['onInit'] = function () {}, _0x4feee7['prototype']['playercount'] = 0x0, _0x4feee7['prototype']['setPlayerCount'] = function (_0x1a6f8b) {
this['playercount'] = _0x1a6f8b;
}, _0x4feee7['prototype']['showPlayerCount'] = function () {
_0x4ac9cf['save']();
var _0x2c1fee = _0x3584da / 0x2,
    _0x4995ba = 0x32 * _0x489111,
    _0x2d3ec8 = 0x12c * _0x489111;
_0x4ac9cf['globalAlpha'] = 0.35, _0x4ac9cf['fillStyle'] = 'black';
var _0xc97756 = 0x1e * _0x489111;
_0x4ac9cf['fillRect'](_0x2c1fee - _0x2d3ec8 / 0x2, _0xc97756, _0x2d3ec8, _0x4995ba), _0x4ac9cf['globalAlpha'] = 0x1, _0x4ac9cf['fillStyle'] = 'white', _0x4ac9cf['font'] = 0x1e * _0x489111 + 'px Arial', _0x4ac9cf['lineWidth'] = 0x1, _0x4ac9cf['textAlign'] = 'center', _0x4ac9cf['textBaseline'] = 'middle', _0x4ac9cf['shadowOffsetX'] = 0x1, _0x4ac9cf['shadowOffsetY'] = 0x1, _0x4ac9cf['shadowColor'] = 'black', _0xc97756 += 0x19 * _0x489111;
var _0xc2c1a4 = ' player';
if (this['playercount'] > 0x1) _0xc2c1a4 += 's';
if (this['state'] == battleRoyal_inProgress) _0xc2c1a4 += ' alive!';
else {
    if (this['state'] == _0x45ed71 || this['state'] == battleRoyal_ready) _0xc2c1a4 += ' joined';
}
_0x4ac9cf['fillText'](this['playercount'] + _0xc2c1a4, _0x2c1fee, _0xc97756), _0x4ac9cf['restore']();
}, _0x4feee7['prototype']['lbCanvas'] = null, _0x4feee7['prototype']['leaderboard'] = function (_0x50ecee) {}, _0x4feee7['prototype']['btnPlayAgain'] = null, _0x4feee7['prototype']['showStats'] = !![], _0x4feee7['prototype']['interfaceButtons'] = [], _0x4feee7['prototype']['createInterfaceButtons'] = function () {
this['interfaceButtons'] = [];
}, _0x4feee7['prototype']['drawInterfaceButtons'] = function () {
if (this['interfaceButtons'])
    for (var _0x39fe54 = 0x0; _0x39fe54 < this['interfaceButtons']['length']; _0x39fe54++) {
        var _0x59c245 = this['interfaceButtons'][_0x39fe54];
        _0x59c245['isVisible'] && _0x59c245['draw']();
    }
}, _0x4feee7['prototype']['onResize'] = function () {
this['drawInterfaceButtons']();
}, _0x4feee7['prototype']['playerInfo'] = function (_0x28a43f) {}, _0x4feee7['prototype']['playerWorldUpdate'] = function (_0x420dc3) {
return;
this['team1'] = _0x420dc3['readUInt16'](), this['team2'] = _0x420dc3['readUInt16'](), this['team3'] = _0x420dc3['readUInt16'](), this['isApocalypseInprogress'] = _0x420dc3['readUInt8']() == 0x1;
this['isApocalypseInprogress'] ? (this['apocalypseType'] = _0x420dc3['readString'](), this['triggeredByTeamID'] = _0x420dc3['readUInt8'](), this['apocalypseStatus'] = _0x420dc3['readString'](), this['timeLeft'] = _0x420dc3['readUInt16']() / 0x64, $bus['emit']($bus['EVENTS']['SET_APOCALYPSE_ONGOING'], {
    'isOngoing': this['isApocalypseInprogress'],
    'timeLeft': this['timeLeft']
})) : $bus['emit']($bus['EVENTS']['SET_APOCALYPSE_ONGOING'], {
    'isOngoing': ![],
    'timeLeft': 0x0
});
let _0x5004f4 = _0x420dc3['readUInt8']();
this['capturedStones'] = [];
for (var _0x33b9d8 = 0x0; _0x33b9d8 < _0x5004f4; _0x33b9d8++) {
    this['capturedStones']['push']({
        'stoneBuffID': _0x420dc3['readUInt8'](),
        'hp': _0x420dc3['readUInt8']() / 0x64
    });
}
$bus['emit']($bus['EVENTS']['SET_STONE_BUFFS'], this['capturedStones']);
}, _0x4feee7['prototype']['onApocalypseUpdated'] = function () {
this['isApocalypseInprogress'] && (this['eventText'] == null && (this['eventText'] = new _0x128c61(0x14, 'white'), this['eventText']['setFontSize'](0x1c * _0x489111)), this['eventText'] && (this['eventText']['x'] = _0x3584da / 0x2, this['eventText']['y'] = _0x50f90a * 0.2, this['eventText']['draw']()));
}, _0x4feee7['prototype']['bonusRoundTimer'] = null, _0x4feee7['prototype']['pieChartCanvas'] = null, _0x4feee7['prototype']['setBonusRoundTimer'] = function (_0x4042c7) {
var _0xbe7729 = '' + _0x4042c7;
null == this['bonusRoundTimer'] ? (this['bonusRoundTimer'] = new _0x128c61(0x28, '#FFFFFF'), this['bonusRoundTimer']['strokeW'] = 0x2, this['bonusRoundTimer']['multiLine'] = !![], this['bonusRoundTimer']['renderScale'] = 0x5, this['bonusRoundTimer']['setText'](_0xbe7729)) : (this['bonusRoundTimer']['setFontSize'](0x28), this['bonusRoundTimer']['setText'](_0xbe7729));
}, _0x4feee7['prototype']['drawMiniMapObjects'] = function (_0x2ac0bb) {
if (this['teamStones'])
    for (let _0x13fde6 = 0x0; _0x13fde6 < this['teamStones']['length']; _0x13fde6++) {
        let _0x331c67 = this['teamStones'][_0x13fde6];
        _0x331c67 && (_0x331c67['c'] = 'black', _0x2ac0bb['drawCircle'](_0x331c67));
    }
}, _0x4feee7['prototype']['teamStones'] = [], _0x4feee7['prototype']['teamModePieChart'] = null, _0x4feee7['prototype']['updatePieChart'] = function (_0x20be7a) {
this['pieChartCanvas'] == null && (this['pieChartCanvas'] = document['createElement']('canvas'), this['teamModePieChart'] = new _0x5de370({
    'pad': 0x1e,
    'canvas': this['pieChartCanvas'],
    'colors': this['teamColors']
}));
if (this['teamModePieChart']) this['teamModePieChart']['setData'](_0x20be7a);
}, _0x4feee7['prototype']['drawPieLeaderboard'] = function () {
if (this['pieChartCanvas'] == null) return;
var _0x48cdc7 = this['pieChartCanvas']['getContext']('2d'),
    _0x20d168 = 0x5,
    _0x30174d = 0xc8,
    _0x5858ee = 0xc8;
this['pieChartCanvas']['width'] = _0x30174d, this['pieChartCanvas']['height'] = _0x5858ee + 0x14, this['teamModePieChart']['draw'](), _0x48cdc7['globalAlpha'] = 0.2;
var _0x21e651 = _0x20d168;
_0x48cdc7['globalAlpha'] = 0.5, _0x48cdc7['fillStyle'] = 'white', _0x48cdc7['font'] = '20px Arial';
var _0x21e651 = 0xd2;
str = _0x187b4f['name'], _0x48cdc7['fillText'](str, this['pieChartCanvas']['width'] / 0x2 - _0x48cdc7['measureText'](str)['width'] / 0x2, _0x21e651);
}, _0x4feee7['prototype']['inviteScreenCanvas'] = null, _0x4feee7['prototype']['endScreenCanvas'] = null, _0x4feee7['prototype']['endScreenDisplayed'] = ![];
var _0x5de370 = function (_0x23a5f7) {
this['options'] = _0x23a5f7, this['radius'] = _0x23a5f7['radius'], this['pad'] = _0x23a5f7['pad'], this['canvas'] = _0x23a5f7['canvas'], this['_ctx'] = this['canvas']['getContext']('2d'), this['colors'] = _0x23a5f7['colors'], this['radius'] = Math['min'](this['canvas']['width'] / 0x2, this['canvas']['height'] / 0x2), this['showBg'] = ![], this['setData'] = function (_0x4f9a9f) {
    this['options']['data'] = _0x4f9a9f;
}, this['draw'] = function () {
    var _0x53d0ac = 0x0,
        _0x558ad6 = 0x0;
    this['showBg'] && (this['_ctx']['save'](), this['_ctx']['beginPath'](), this['_ctx']['globalAlpha'] = 0.1, this['_ctx']['fillStyle'] = 'black', this['_ctx']['rect'](0x0, 0x0, this['canvas']['width'], this['canvas']['height']), this['_ctx']['fill'](), this['_ctx']['restore']());
    var _0x1943c6 = this['canvas']['width'] / 0x2,
        _0x3e2dff = this['canvas']['height'] / 0x2;
    this['_ctx']['save'](), this['_ctx']['globalAlpha'] = 0.3, this['drawCircle'](_0x1943c6, _0x3e2dff, this['radius'], 'white'), this['_ctx']['restore']();
    for (var _0x23cab5 in this['options']['data']) {
        var _0x4487bd = this['options']['data'][_0x23cab5];
        _0x53d0ac += _0x4487bd;
    }
    var _0x4cb345 = 0x0;
    for (_0x23cab5 in this['options']['data']) {
        this['_ctx']['save'](), this['_ctx']['lineWidth'] = 0x4, this['_ctx']['strokeStyle'] = 'white', this['_ctx']['globalAlpha'] = 0.3;
        var _0x5bc471 = 0x0;
        _0x35c3fd == _0x23cab5 && (this['_ctx']['globalAlpha'] = 0.6, _0x5bc471 = 0x8);
        _0x4487bd = this['options']['data'][_0x23cab5];
        var _0x537337 = 0x2 * Math['PI'] * _0x4487bd / _0x53d0ac;
        this['drawPieSlice'](_0x1943c6, _0x3e2dff, this['radius'], _0x4cb345, _0x4cb345 + _0x537337, this['colors'][_0x23cab5], _0x5bc471), this['_ctx']['restore'](), _0x4cb345 += _0x537337, _0x558ad6++;
    }
}, this['drawPieSlice'] = function (_0x16f489, _0xfa61c1, _0x4fa4dc, _0x4375d6, _0x1ba927, _0x5009fe, _0x48232d) {
    this['_ctx']['fillStyle'] = _0x5009fe, this['_ctx']['beginPath'](), this['_ctx']['moveTo'](_0x16f489, _0xfa61c1), this['_ctx']['arc'](_0x16f489, _0xfa61c1, _0x4fa4dc + _0x48232d, _0x4375d6, _0x1ba927), this['_ctx']['closePath'](), this['_ctx']['fill']();
    if (_0x48232d > 0x0) this['_ctx']['stroke']();
}, this['drawCircle'] = function (_0xb457ec, _0x1d772d, _0x38ef6f, _0xa597cb) {
    this['_ctx']['fillStyle'] = _0xa597cb, this['_ctx']['beginPath'](), this['_ctx']['moveTo'](_0xb457ec, _0x1d772d), this['_ctx']['arc'](_0xb457ec, _0x1d772d, _0x38ef6f, 0x0, Math['PI'] * 0x2), this['_ctx']['closePath'](), this['_ctx']['fill']();
};
};
_0x4feee7['prototype']['stonesCanvas'] = null, _0x4feee7['prototype']['getSkinImageObj'] = function (_0x57207a) {
var _0x346e52 = './assets/s/2/' + _0x57207a;
return _0x297bc3(_0x346e52, function (_0x3d37aa) {});
}, _0x4feee7['prototype']['playerUI'] = [], _0x4feee7['prototype']['drawPlayerUI'] = function (_0x569350) {}, _0x4feee7['prototype']['drawStoneCount'] = function (_0x49f676, _0x5cbdd8, _0x3fc510, _0x1f2999) {
_0x49f676['save'](), _0x49f676['globalAlpha'] = 0.5;
let _0x53a480 = './assets/s/2/gameobj/78/stone' + _0x5cbdd8 + '.png',
    _0x40d2b1 = _0x297bc3(_0x53a480);
_0x40d2b1 && (_0x49f676['drawImage'](_0x40d2b1, 0xa, _0x1f2999, 0x28, 0x28), _0x1f2999 += 0x32, _0x49f676['fillStyle'] = 'black', _0x49f676['fillText'](_0x3fc510 + '', 0x3c, _0x1f2999 - 0x12)), _0x49f676['restore']();
}, _0x4feee7['prototype']['drawTeamPlayers'] = function () {
if (this['teamPlayers']) {
    var _0x34fd17 = this['teamColors'][_0x35c3fd];
    for (t = 0x0; t < this['teamPlayers']['length']; t++) {
        _0xc6979f(this['teamPlayers'][t], _0x34fd17, 0x1);
    }
}
}, _0x4feee7['prototype']['getTeamColor'] = function (_0x258293) {
switch (_0x258293) {
case 0x1:
    return 'yellow';
case 0x2:
    return 'cyan';
case 0x3:
    return 'purple';
}
return 'gray';
}, _0x4feee7['prototype']['msgDisplayPlayersOnMiniMap'] = function (_0x218eaa) {
_0x5234d5 = [];
var _0x2586bd = _0x218eaa['readUInt16']();
for (var _0x2bbe92 = 0x0; _0x2bbe92 < _0x2586bd; _0x2bbe92++) {
    _0x5234d5['push']({
        'teamID': _0x218eaa['readUInt16'](),
        'x': _0x218eaa['readUInt32']() / 0x64,
        'y': _0x218eaa['readUInt32']() / 0x64,
        'rad': 0x3
    });
}
}, _0x4feee7['prototype']['readGameRoomPropertyUpdate'] = function (_0x25a0f1) {
var _0x5e88c7 = _0x25a0f1['readUInt8']();
for (var _0x1b2f56 = 0x0; _0x1b2f56 < _0x5e88c7; _0x1b2f56++) {
    var _0x4ebc7e = _0x25a0f1['readUInt8']();
    this['readUpdatedPropertyItem'](_0x4ebc7e, _0x25a0f1);
}
}, _0x4feee7['prototype']['readUpdatedPropertyItem'] = function (_0x3b4c3e, _0x3538c4) {
if (_0x3b4c3e == _0x422ac7) console['log']('TEAMMODE_APOCALYPSE_STARTED'), this['isApocalypseInprogress'] = _0x3538c4['readUInt8']() == 0x1;
else {
    if (_0x3b4c3e == _0x247fd1) console['log']('TEAMMODE_APOCALYPSE_ENDED'), this['isApocalypseInprogress'] = _0x3538c4['readUInt8']() == 0x1, $bus['emit']($bus['EVENTS']['SET_APOCALYPSE_ONGOING'], {
        'isOngoing': ![],
        'timeLeft': 0x0
    });
    else {
        if (_0x3b4c3e == _0x5d4844) {
            console['log']('TEAMMODE_APOCALYPSE_TIME_LEFT');
            let _0x55dcc6 = _0x3538c4['readUInt16']();
            $bus['emit']($bus['EVENTS']['SET_APOCALYPSE_ONGOING'], {
                'isOngoing': this['isApocalypseInprogress'],
                'timeLeft': _0x55dcc6
            });
        }
    }
}
}, window['TeamMode'] = _0x4feee7;
var _0xec194 = _0x2f41e5;
_0x5394a6['prototype'] = Object['create'](_0xec194['prototype']), _0x5394a6['prototype']['constructor'] = _0x5394a6, _0x5394a6['superClass'] = _0xec194, _0x5394a6['prototype']['safeArea'] = null;

function _0x5394a6(_0x19ddf8) {
this['mode'] = _0x19ddf8, this['stamp'] = +new Date(), this['chatAllowed'] = !![], this['createInterfaceButtons']();
}
_0x5394a6['prototype']['wastedPopups'] = [], _0x5394a6['prototype']['playerDisplayNum'] = 0x0, _0x5394a6['prototype']['setServerPlayerCount'] = function () {
_0x3cb245['setText'](_0x3fe45c(_0x5b8340) + ' online'), this['playerDisplayNum'] = this['playerDisplayNum'] == 0x0 ? 0x1 : 0x0;
}, _0x5394a6['prototype']['interface'] = function () {
if (this['state'] == -0x1 || this['mode'] != _0x5332af) return;
if (_0x19efaa)
    for (var _0x1a89e1 = this['wastedPopups']['length'] - 0x1; _0x1a89e1 >= 0x0; _0x1a89e1--) {
        var _0x392587 = this['wastedPopups'][_0x1a89e1];
        _0x392587['draw']();
        if (_0x392587['timedOut']) this['wastedPopups']['splice'](_0x1a89e1, 0x1);
    }
if (this['endScreenCanvas'] != null) {
    this['endScreenCanvas']['width'] && _0x4ac9cf['drawImage'](this['endScreenCanvas'], _0x3584da / 0x2 - this['endScreenCanvas']['width'] / 0x2, 0xf * _0x185dc5, this['endScreenCanvas']['width'], this['endScreenCanvas']['height']);
    if (!_0x19efaa || isGhost) _0x943cc6(!![]);
}
this['drawInterfaceButtons']();
}, _0x5394a6['prototype']['interfaceReset'] = function () {
this['endScreenCanvas'] = null, this['dangerCircleMiniMapCanvas'] = null, this['wastedPopups'] = [], this['lastWastedPopupT'] = 0x0, this['playercount'] = 0x0, this['safeArea'] = null;
if (this['interfaceButtons'])
    for (var _0x4afca2 = 0x0; _0x4afca2 < this['interfaceButtons']['length']; _0x4afca2++) {
        var _0x491e97 = this['interfaceButtons'][_0x4afca2];
        _0x491e97['onInterfaceReset']();
    }
this['interfaceButtons'] = [];
}, _0x5394a6['prototype']['onInit'] = function () {}, _0x5394a6['prototype']['playercount'] = 0x0, _0x5394a6['prototype']['setPlayerCount'] = function (_0x2a2501) {
this['playercount'] = _0x2a2501;
}, _0x5394a6['prototype']['showPlayerCount'] = function () {
_0x4ac9cf['save']();
var _0x3f7825 = _0x3584da / 0x2,
    _0x2391e6 = 0x32 * _0x489111,
    _0x51e375 = 0x12c * _0x489111;
_0x4ac9cf['globalAlpha'] = 0.35, _0x4ac9cf['fillStyle'] = 'black';
var _0x246d24 = 0x1e * _0x489111;
_0x4ac9cf['fillRect'](_0x3f7825 - _0x51e375 / 0x2, _0x246d24, _0x51e375, _0x2391e6), _0x4ac9cf['globalAlpha'] = 0x1, _0x4ac9cf['fillStyle'] = 'white', _0x4ac9cf['font'] = 0x1e * _0x489111 + 'px Arial', _0x4ac9cf['lineWidth'] = 0x1, _0x4ac9cf['textAlign'] = 'center', _0x4ac9cf['textBaseline'] = 'middle', _0x4ac9cf['shadowOffsetX'] = 0x1, _0x4ac9cf['shadowOffsetY'] = 0x1, _0x4ac9cf['shadowColor'] = 'black', _0x246d24 += 0x19 * _0x489111;
var _0x39ce03 = ' player';
if (this['playercount'] > 0x1) _0x39ce03 += 's';
if (this['state'] == battleRoyal_inProgress) _0x39ce03 += ' alive!';
else {
    if (this['state'] == _0x45ed71 || this['state'] == battleRoyal_ready) _0x39ce03 += ' joined';
}
_0x4ac9cf['fillText'](this['playercount'] + _0x39ce03, _0x3f7825, _0x246d24), _0x4ac9cf['restore']();
}, _0x5394a6['prototype']['lbCanvas'] = null, _0x5394a6['prototype']['leaderboard'] = function (_0x121520) {
if (this['lbCanvas'] == null) this['lbCanvas'] = document['createElement']('canvas');
if (_0x121520) {
    var _0x77c04a = this['lbCanvas']['getContext']('2d'),
        _0x5d7796 = 0x37,
        _0x55f3b8 = 0x16;
    _0x5d7796 = _0x5d7796 + _0x55f3b8 * _0x121520['length'], this['lbCanvas']['width'] = 0x10e, this['lbCanvas']['height'] = _0x5d7796, _0x77c04a['globalAlpha'] = 0.2, _0x77c04a['fillStyle'] = '#000000', _0x77c04a['fillRect'](0x0, 0x0, this['lbCanvas']['width'], this['lbCanvas']['height']), _0x77c04a['globalAlpha'] = 0x1, _0x77c04a['fillStyle'] = '#FFFFFF';
    var _0x4901a1 = _0x187b4f['name'];
    _0x77c04a['font'] = '24px Arial';
    !(_0x25ea67 == 0x2) && (_0x77c04a['shadowOffsetX'] = 0x1, _0x77c04a['shadowOffsetY'] = 0x1);
    _0x77c04a['shadowColor'] = 'black', _0x77c04a['fillText'](_0x4901a1, this['lbCanvas']['width'] / 0x2 - _0x77c04a['measureText'](_0x4901a1)['width'] / 0x2, 0x28);
    var _0x4c0970;
    _0x77c04a['textAlign'] = 'left';
    for (_0x77c04a['font'] = '17px Arial', _0x4c0970 = 0x0; _0x4c0970 < _0x121520['length']; ++_0x4c0970) {
        _0x4901a1 = _0x47dcae ? '' : _0x121520[_0x4c0970]['name'] || 'mope.io', _0x4901a1 += ' (' + _0x42ed1e(_0x121520[_0x4c0970]['xp']) + ')', _0x77c04a['fillStyle'] = '#FFFFFF', _0x77c04a['fillText'](_0x4901a1, 0xf, 0x41 + _0x55f3b8 * _0x4c0970);
    }
}
}, _0x5394a6['prototype']['drawLeaderboard'] = function () {
if (_0x19efaa) {
    if (!_0x361438) _0x2f84db && (_0x2f84db['width'] && _0x4ac9cf['drawImage'](_0x2f84db, 0xa * _0x185dc5, 0xa * _0x185dc5, _0x2f84db['width'] * _0x489111, _0x2f84db['height'] * _0x489111));
}
}, _0x5394a6['prototype']['btnPlayAgain'] = null, _0x5394a6['prototype']['showStats'] = !![], _0x5394a6['prototype']['interfaceButtons'] = [], _0x5394a6['prototype']['createInterfaceButtons'] = function () {
this['interfaceButtons'] = [];
}, _0x5394a6['prototype']['drawInterfaceButtons'] = function () {
if (this['interfaceButtons'])
    for (var _0x35fceb = 0x0; _0x35fceb < this['interfaceButtons']['length']; _0x35fceb++) {
        var _0x466ff8 = this['interfaceButtons'][_0x35fceb];
        _0x466ff8['isVisible'] && _0x466ff8['draw']();
    }
}, _0x5394a6['prototype']['onResize'] = function () {
this['drawInterfaceButtons']();
}, _0x5394a6['prototype']['readPlayerStats'] = function (_0x238ef1) {
var _0xc075e0 = [];
return _0xc075e0['rank'] = _0x238ef1['readUInt16'](), _0xc075e0['timeAlive'] = _0x238ef1['readUInt16'](), _0xc075e0['totalKills'] = _0x238ef1['readUInt16'](), _0xc075e0['topRank'] = _0x238ef1['readUInt16'](), _0xc075e0['maxXP'] = _0x238ef1['readUInt32'](), _0xc075e0['killedBy'] = _0x238ef1['readString'](), _0xc075e0;
}, _0x5394a6['prototype']['playerInfo'] = function (_0x3efb35) {
if (isGhost && !_0x34ea77) {
    var _0x2a2af5 = this['readPlayerStats'](_0x3efb35);
    this['buildEndScreenHTML'](_0x2a2af5);
} else !isGhost && (this['endScreenCanvas'] = null);
}, _0x5394a6['prototype']['playerWorldUpdate'] = function (_0x19ea9e) {}, _0x5394a6['prototype']['worldUpdate'] = function (_0x13a62f) {}, _0x5394a6['prototype']['drawMap'] = function () {
if (_0x19efaa) {
    if (_0x50a9ba) return;
    if (_0x3a73d2) _0x3a73d2['drawMap']();
    this['drawLeaderboard']();
}
}, _0x5394a6['prototype']['pieChartCanvas'] = null, _0x5394a6['prototype']['teamColors'] = {
0x0: 'white',
0x1: '#B6CF40'
}, _0x5394a6['prototype']['endScreenDisplayed'] = ![], _0x5394a6['prototype']['buildEndScreenHTML'] = function (_0x441aa8) {
if (this['endScreenDisplayed']) return;
this['endScreenDisplayed'] = !![];
var _0x281d83 = '';
_0x281d83 += '<div class=\'msg\'>YOU WERE #' + _0x441aa8['rank'] + '</div>', _0x281d83 += '<div class=\'row\'>', _0x281d83 += '<div class=\'label\'>Killed by:</div>', _0x281d83 += '<div class=\'value2\'>' + _0x441aa8['killedBy'] + '</div>', _0x281d83 += '</div>', _0x281d83 += '<div class=\'row\'>', _0x281d83 += '<div class=\'col1\'>', _0x281d83 += '<div class=\'label\'>Time alive:</div>', _0x281d83 += '<div class=\'value\'>' + _0x166ed8(_0x441aa8['timeAlive']) + '</div>', _0x281d83 += '</div>', _0x281d83 += '<div class=\'col2\'>', _0x281d83 += '<div class=\'label\'>Total kills:</div>', _0x281d83 += '<div class=\'value\'>' + _0x441aa8['totalKills'] + '</div>', _0x281d83 += '</div>', _0x281d83 += '</div>', _0x281d83 += '<div class=\'row\'>', _0x281d83 += '<div class=\'col1\'>', _0x281d83 += '<div class=\'label\'>Top rank:</div>', _0x281d83 += '<div class=\'value\'>' + _0x441aa8['topRank'] + '</div>', _0x281d83 += '</div>', _0x281d83 += '<div class=\'col2\'>', _0x281d83 += '<div class=\'label\'>Max xp:</div>', _0x281d83 += '<div class=\'value\'>' + _0x42ed1e(_0x441aa8['maxXP']) + '</div>', _0x281d83 += '</div>', _0x281d83 += '</div>', _0x281d83 += '<div style=\'clear:both;\'></div>', _0x281d83 += '<div class=\'btnDiv\'>', _0x281d83 += '<button id=\'btnMopeOptions\' class=\'btn\'>      CONTINUE      </button>', _0x281d83 += '</div>', _0x281d83 += '<div style=\'clear:both;\'></div>';
var _0x43e982 = document['getElementById']('endScreen');
_0x43e982 && (_0x43e982['innerHTML'] = _0x281d83, _0x43e982['style']['display'] = 'block'), (!_0x19efaa || isGhost) && _0x30018f();
}, _0x5394a6['prototype']['endScreenCanvas'] = null, _0x5394a6['prototype']['buildEndScreen'] = function (_0x19c802, _0x17cfb7) {
if (this['endScreenCanvas'] == null) this['endScreenCanvas'] = document['createElement']('canvas');
if (this['endScreenCanvas'] == null) return;
var _0x1190f7 = this['endScreenCanvas']['getContext']('2d'),
    _0x110815 = 0x37,
    _0x164d04 = 0x28,
    _0xb5ceea = 0x5,
    _0x13b144 = 0xf0,
    _0x3cd5d0 = 0x1a4;
_0x110815 = _0x13b144 + _0xb5ceea * 0x2, this['endScreenCanvas']['width'] = _0x3cd5d0 + _0xb5ceea * 0x2, this['endScreenCanvas']['height'] = _0x110815, _0x1190f7['globalAlpha'] = 0.2, _0x1190f7['fillStyle'] = '#000000', _0x1190f7['fillRect'](0x0, 0x0, this['endScreenCanvas']['width'], this['endScreenCanvas']['height']), _0x1190f7['fillStyle'] = '#000000', _0x1190f7['fillRect'](_0xb5ceea, _0xb5ceea, this['endScreenCanvas']['width'] - _0xb5ceea * 0x2, this['endScreenCanvas']['height'] - _0xb5ceea * 0x2);
var _0x5aa9bb = _0xb5ceea;
_0x1190f7['globalAlpha'] = 0x1, _0x1190f7['fillStyle'] = '#FFFFFF', _0x1190f7['font'] = '30px Arial', _0x5aa9bb += 0x37;
var _0x4fd816 = 'Final Stats';
_0x1190f7['font'] = '30px Arial', _0x1190f7['fillText'](_0x4fd816, this['endScreenCanvas']['width'] / 0x2 - _0x1190f7['measureText'](_0x4fd816)['width'] / 0x2, _0x5aa9bb), _0x1190f7['font'] = '20px Arial', _0x5aa9bb += 0x2d, _0x4fd816 = 'You were #' + _0x17cfb7['rank'], _0x1190f7['fillText'](_0x4fd816, this['endScreenCanvas']['width'] / 0x2 - _0x1190f7['measureText'](_0x4fd816)['width'] / 0x2, _0x5aa9bb), _0x5aa9bb += 0x28;
var _0x22f673 = _0x166ed8(_0x17cfb7['timeAlive']),
    _0x29e6c6 = _0xb5ceea + 0xf;
_0x4eb711(_0x1190f7, 'Killed by', _0x17cfb7['killedBy'], _0x29e6c6, _0x5aa9bb), _0x5aa9bb += 0x28, _0x4eb711(_0x1190f7, 'Time Alive', _0x166ed8(_0x17cfb7['timeAlive']), _0x29e6c6, _0x5aa9bb), _0x29e6c6 += 0xd2, _0x4eb711(_0x1190f7, 'Total Kills', _0x17cfb7['totalKills'], _0x29e6c6, _0x5aa9bb), _0x5aa9bb += 0x28, _0x29e6c6 = _0xb5ceea + 0xf, _0x4eb711(_0x1190f7, 'Top rank', _0x17cfb7['topRank'], _0x29e6c6, _0x5aa9bb), _0x29e6c6 += 0xd2, _0x4eb711(_0x1190f7, 'Max XP', _0x42ed1e(_0x17cfb7['maxXP']), _0x29e6c6, _0x5aa9bb), _0x5aa9bb += 0x32;
}, _0x5394a6['prototype']['lastWastedPopupT'] = 0x0, _0x5394a6['prototype']['onPlayerWasted'] = function (_0x2c6681) {
if ((_0x397f50 - this['lastWastedPopupT']) / 0x3e8 > 0.7) {
    this['lastWastedPopupT'] = _0x397f50;
    var _0x1c2f41 = new _0x35ed11(_0x2c6681 + ' wasted!', 0x28, 'red', 0x5dc);
    this['wastedPopups']['push'](_0x1c2f41);
}
}, _0x5394a6['prototype']['lastWastedPopupT'] = 0x0, _0x5394a6['prototype']['msgDisplayPlayersOnMiniMap'] = function (_0xfc4b6d) {
_0x5234d5 = [];
var _0x44f61e = _0xfc4b6d['readUInt16']();
for (var _0x51d655 = 0x0; _0x51d655 < _0x44f61e; _0x51d655++) {
    _0x5234d5['push']({
        'id': _0xfc4b6d['readUInt32'](),
        'x': _0xfc4b6d['readUInt32']() / 0x64,
        'y': _0xfc4b6d['readUInt32']() / 0x64,
        'rad': 0x3
    });
}
}, window['WildMope'] = _0x5394a6;

function _0x1a7e4a(_0x15992a, _0x3afc0d, _0x18b179) {
_0x189414();
var _0x7f6749 = document['getElementsByTagName']('body')[0x0];
if (_0x7f6749) {
    var _0x5bb8ab = document['getElementById']('gameAreaWrapper'),
        _0x4bd57b = _0x132dab('mopeshop-popup'),
        _0x60631 = _0x132dab('msg', _0x3afc0d),
        _0x3b5cff = _0x132dab('text');
    _0x3b5cff['innerHTML'] = _0x15992a;
    var _0x5a7674 = _0x132dab('closeMsg', '');
    _0x5a7674['onclick'] = function () {
        _0x189414();
    }, _0x60631['appendChild'](_0x5a7674), _0x60631['appendChild'](_0x3b5cff), _0x4bd57b['appendChild'](_0x60631), _0x7f6749['insertBefore'](_0x4bd57b, _0x5bb8ab), _0x18b179 !== undefined && _0x18b179 > 0x0 && (console['log']('timeout:' + _0x18b179), setTimeout(_0x189414, _0x18b179 * 0x3e8));
}
}

function _0x189414() {
var _0x780458 = document['getElementById']('mopeshop-popup');
if (_0x780458) _0x780458['parentNode']['removeChild'](_0x780458);
}

function _0x132dab(_0x17c482, _0x30c837) {
var _0x5f1f93 = _0x513ee7('div', _0x17c482, _0x30c837);
return _0x5f1f93;
}

function _0x249c66(_0x4223af, _0x5b866b, _0x4914fa) {
var _0x343fb9 = _0x513ee7('div', _0x4223af, _0x5b866b);
return _0x343fb9['innerHTML'] = _0x4914fa, _0x343fb9;
}
const _0x9f0ec3 = [];

function _0x513ee7(_0x197a1a, _0x5adf4f, _0x22092c) {
if (_0x197a1a == undefined) return null;
var _0x2eb917 = document['createElement'](_0x197a1a);
if (_0x5adf4f !== undefined) _0x2eb917['id'] = _0x5adf4f;
if (_0x22092c !== undefined) _0x2eb917['className'] = _0x22092c;
return _0x2eb917;
}

function _0x521c85() {
var _0x5ac64f = _0x2aaa22['coins'];
if (_0x5ac64f > -0x1) {
    if (('' + _0x5ac64f)['length'] > 0xa) return ('' + _0x5ac64f)['substring'](0x0, 0x4) + ' PI.COINS';
    return _0x5ac64f;
} else return 'LOGIN';
}

function _0x4fe7f3() {
return _0x2aaa22['coins'] > -0x1;
}

function _0x443299(_0x342f3a) {
_0x342f3a && _0x9a4156 ? _0x9a4156['loadData'](_0x342f3a) : (_0x9a4156 = new _0x35c50c(), _0x9a4156['loadData']());
}
var _0x3a0dda = {
'customClassesForOType': {},
'setCustomClassForShopItem': function (_0x4bd34d, _0x946947, _0x1c14ba) {
    !this['customClassesForOType'][_0x946947] && (this['customClassesForOType'][_0x946947] = {
        'oTypeMainClass': null,
        'secondaryTypeClasses': {}
    });
    var _0x1fa71d = this['customClassesForOType'][_0x946947];
    if (_0x1c14ba == null) {
        if (_0x1fa71d['oTypeMainClass'] != null) console['log']('ERROR \'GameObjType.setCustomClassForGameObjType\': a class (' + this['customClassesForOType'][_0x946947] + ') is already set for oType ' + _0x946947 + '! Check for duplicate calls!');
        _0x1fa71d['oTypeMainClass'] = _0x4bd34d;
    } else {
        if (_0x1c14ba in _0x1fa71d['secondaryTypeClasses']) console['log']('ERROR \'GameObjType.setCustomClassForGameObjType\': a class is already set for oType ' + _0x946947 + ' AND secondaryType (eg. animalType) ' + _0x1c14ba + '! Check for duplicate calls!');
        _0x1fa71d['secondaryTypeClasses'][_0x1c14ba] = _0x4bd34d;
    }
    this['onClassSet'](_0x4bd34d, _0x946947, _0x1c14ba);
},
'getClassForGameObjType': function (_0x1663ea, _0x4e2378) {
    if (_0x1663ea in this['customClassesForOType']) {
        var _0x340cb8 = this['customClassesForOType'][_0x1663ea];
        if (_0x4e2378 == null || _0x4e2378 == 0x0) return _0x340cb8['oTypeMainClass'];
        else {
            if (_0x4e2378 in _0x340cb8['secondaryTypeClasses']) return _0x340cb8['secondaryTypeClasses'][_0x4e2378];
            else return _0x340cb8['oTypeMainClass'];
        }
    } else return _0x322197;
},
'newlyVis_createGameObjFromMsg': function (_0x181229, _0x49aa3f) {
    var _0x58dee1 = _0x49aa3f['oType'],
        _0x346174 = null;
    _0x58dee1 == _0x4acf80 && (_0x346174 = _0x49aa3f['animalType']);
    var _0x187632 = _0x3a0dda['createGameObjOfOType'](_0x58dee1, _0x346174);
    return _0x187632['itemType'] = _0x181229, _0x187632['worldUpd_readMsgNewlyVisible'](_0x49aa3f, _0x58dee1, _0x346174), _0x187632;
},
'createGameObjOfOType': function (_0x177d29, _0x5f0798) {
    var _0x2100f4 = this['getClassForGameObjType'](_0x177d29, _0x5f0798),
        _0x4271d4 = new _0x2100f4(_0x177d29, _0x5f0798);
    return _0x4271d4;
},
'onClassSet': function (_0x28f8d6) {}
};
_0x322197['prototype'] = {
'id': 0x0,
'oType': 0x0,
'itemType': null
};

function _0x322197(_0x4ca102) {
this['oType'] = _0x4ca102;
}
_0x322197['prototype']['setObjTypes'] = function (_0x10cf8f, _0x48cc93) {
this['oType'] = _0x10cf8f;
}, _0x322197['prototype']['loadShopData'] = function (_0x537235) {
this['data'] = _0x537235, this['id'] = _0x537235['id'], this['itemType'] = _0x537235['itemType'], this['coinsPrice'] = _0x537235['coinsPrice'];
}, _0x322197['prototype']['worldUpd_readMsgNewlyVisible'] = function (_0x41afdf, _0x4266b2, _0x18f980) {
this['setObjTypes'](_0x4266b2, _0x18f980), this['loadShopData'](_0x41afdf);
}, _0x322197['prototype']['getImage'] = function () {
return null;
}, _0x322197['prototype']['generateHtml'] = function () {}, window['ShopItem'] = _0x322197;
var _0x13295b = _0x2d3236,
_0xec194 = _0x322197;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194;

function _0x2d3236() {
_0x2d3236['superClass']['call'](this, 0x3e8), this['oType'] = 0x3e8, this['itemType'] = 0x1;
}
_0x2d3236['prototype']['prefix'] = null, _0x2d3236['prototype']['bonus'] = 0x0, _0x2d3236['prototype']['loadShopData'] = function (_0x377d7b) {
_0x2d3236['superClass']['prototype']['loadShopData']['call'](this, _0x377d7b), this['prefix'] = _0x377d7b['prefix'], this['bonus'] = _0x377d7b['bonus'], this['value'] = _0x377d7b['value'];
}, _0x2d3236['prototype']['worldUpd_readMsgNewlyVisible'] = function (_0x26c236, _0x398a72, _0x4210b2) {
this['loadShopData'](_0x26c236);
}, _0x3a0dda['setCustomClassForShopItem'](_0x2d3236, 0x3e8), window['MopeCoin'] = _0x2d3236;
var _0x13295b = _0x4dcabc,
_0xec194 = _0x322197;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194;

function _0x4dcabc(_0x262fd3, _0x4f32c7) {
_0x4dcabc['superClass']['call'](this, _0x4acf80), this['animalType'] = _0x4f32c7, this['setBiome'](this['animalType']);
}
_0x4dcabc['prototype']['setBiome'] = function (_0x2cac94) {
switch (_0x2cac94) {
case _0x4cc8de:
case _0x33edcb:
case _0x2e747e:
case _0x484a15:
case _0x7fee1e:
case _0xce16df:
case _0x212372:
case _0x2cb4e3:
case _0x189adc:
    this['biome'] = _0x41e0ba, this['biomeName'] = 'Land';
    break;
case _0x16f423:
case _0x7820e:
case _0x3a6f75:
case _0x293d5d:
case _0x1be7e6:
    this['biome'] = _0x229c1c, this['biomeName'] = 'Ocean';
    break;
case _0x16a00e:
case _0x1080d7:
case _0x1a507a:
case _0x3700ee:
    this['biome'] = _0x4f2b40, this['biomeName'] = 'Arctic';
    break;
case _0x1e8cf7:
case _0x5186e1:
case _0xc23298:
case _0x3fcb38:
    this['biome'] = _0x55a829, this['biomeName'] = 'Volcano';
    break;
case _0x323318:
case _0x309a7e:
case _0xf85b36:
case _0xbbbf69:
    this['biome'] = _0x1c28a3, this['biomeName'] = 'Desert';
    break;
default:
    break;
}
}, _0x4dcabc['prototype']['loadShopData'] = function (_0xb404a8) {
_0x4dcabc['superClass']['prototype']['loadShopData']['call'](this, _0xb404a8), this['animalSpecies'] = _0xb404a8['animalSpecies'], this['shopImg'] = 'shop/' + _0xb404a8['shopImg'], this['skinImage'] = _0xb404a8['skinImage'], this['skinName'] = _0xb404a8['skinName'], this['saleType'] = _0xb404a8['saleType'], this['salePrice'] = _0xb404a8['salePrice'];
}, _0x4dcabc['prototype']['setObjTypes'] = function (_0x27f65c, _0x161b8b) {
this['animalType'] = _0x161b8b;
}, _0x4dcabc['prototype']['getAnimalName'] = function () {
switch (this['animalType']) {
case _0x30b869:
    return 'rabbit';
case _0x51c352:
    return 'pig';
case _0x37ed61:
    return 'fox';
case _0x43cc06:
    return 'deer';
case _0x176a10:
    return 'mole';
case _0x4699c5:
    return 'zebra';
case _0x1185fd:
    return 'lion';
case _0x2cd95a:
    return 'bigcat';
case _0x15db61:
    return 'bear';
case _0x1f6edc:
    return 'croc';
case _0x2fc4c1:
    return 'rhino';
case _0x212372:
    return 'hippo';
case _0x33edcb:
    return 'dragon';
case _0x5626d9:
    return 'shrimp';
case _0x2a05b1:
    return 'trout';
case _0x415723:
    return 'crab';
case _0x4e129f:
    return 'squid';
case _0xf16f79:
    return 'shark';
case _0xd32f27:
    return 'stingray';
case _0x41ea25:
    return 'turtle';
case _0x4ac227:
    return 'seahorse';
case _0x402b8c:
    return 'jellyfish';
case _0x3a6f75:
    return 'kraken';
case _0x2ee5ae:
    return 'pufferfish';
case _0x1be7e6:
    return 'killerwhale';
case _0x31cc16:
    return 'swordfish';
case _0x103e98:
    return 'gorilla';
case _0x108db6:
    return 'octopus';
case _0x4b16ca:
    return 'wolf';
case _0x46d563:
    return 'arctichare';
case _0x1080d7:
    return 'yeti';
case _0x465a75:
    return 'chipmunk';
case _0xc6c00:
    return 'muskox';
case _0x55a1a9:
    return 'penguin';
case _0x546d88:
    return 'polarbear';
case _0xc81962:
    return 'seal';
case _0x1c2360:
    return 'snowleopard';
case _0x13bbdd:
    return 'walrus';
case _0x4c7e27:
    return 'reindeer';
case _0x5c63c1:
    return 'arcticfox';
case _0x57db06:
    return 'wolverine';
case _0x1a507a:
    return 'mammoth';
case _0x2896b9:
    return 'donkey';
case _0x3aa9b0:
    return 'snail';
case _0x5186e1:
    return 'blackdragon';
case _0x3700ee:
    return 'sabertoothtiger';
case _0xce16df:
    return 'elephant';
case _0x293d5d:
    return 'bluewhale';
case _0x204cad:
    return 'cobra';
case _0x2cb4e3:
    return 'boaconstrictor';
case _0x484a15:
    return 'giantspider';
case _0x2e747e:
    return 'trex';
case _0x342f2b:
    return 'tiger';
case _0x1c4f76:
    return 'giraffe';
case _0x37eeab:
    return 'eagle';
case _0x414bbd:
    return 'hedgehog';
case _0x1c58ee:
    return 'duck';
case _0x5b26cb:
    return 'duckling';
case _0x47b3d3:
    return 'lemming';
case _0x7820e:
    return 'kingcrab';
case _0xeeef05:
    return 'frog';
case _0x189adc:
    return 'ostrich';
case _0x4ba38f:
    return 'pelican';
case _0x12d178:
    return 'falcon';
case _0x5baef5:
    return 'snowyowl';
case _0x5b185f:
    return 'honeybee';
case _0x3fcb38:
    return 'phoenix';
case _0x2c0e73:
    return 'ostrichbaby';
case _0x16f423:
    return 'seamonster';
case _0xc23298:
    return 'landmonster';
case _0x16a00e:
    return 'icemonster';
case _0x4cc8de:
    return 'dinomonster';
case _0x576572:
    return 'pigeon';
case _0x375310:
    return 'toucan';
case _0x12b837:
    return 'macaw';
case _0x4b419b:
    return 'flamingo';
case _0x7fee1e:
    return 'cassowary';
case _0x1b4e84:
    return 'chicken';
case _0x482d7d:
    return 'woodpecker';
case _0x17b74d:
    return 'peacock';
case _0x37c7c9:
    return 'kangaroorat';
case _0xd214a6:
    return 'desertchipmunk';
case _0x345849:
    return 'meerkat';
case _0x332195:
    return 'gazelle';
case _0x19f3fe:
    return 'armadillo';
case _0x21519f:
    return 'fennecfox';
case _0x335a3d:
    return 'camel';
case _0x48646c:
    return 'warthog';
case _0x233419:
    return 'hyena';
case _0x464d8f:
    return 'rattlesnake';
case _0x398a37:
    return 'vulture';
case _0x1a1392:
    return 'bison';
case _0xbbbf69:
    return 'komododragon';
case _0x323318:
    return 'giantscorpion';
case _0x309a7e:
    return 'pterodactyl';
case _0x5b01a7:
    return 'gobibear';
case _0xf85b36:
    return 'blackwidow';
case _0xc5d905:
    return 'bulletant';
case _0x56a5e3:
    return 'markhor';
}
}, _0x4dcabc['prototype']['getSkinPath'] = function (_0x265f9a) {
var _0x1051fb = this['animalSpecies'] > 0x0 ? this['animalSpecies'] : '',
    _0x587c96 = _0x9a4156['ifMultiAssetSkin'](this['animalType'], this['skinImage']),
    _0x579261 = this['skinImage'] == undefined ? this['shopImg'] : 'skins/' + _0x587c96;
if (_0x265f9a) _0x579261 += _0x265f9a;
return _0x579261 + '.png';
}, _0x4dcabc['prototype']['getShopImageSrc'] = function () {
return 'assets/s/' + this['data']['season'] + '/' + this['getSkinPath']();
}, _0x4dcabc['prototype']['getImage'] = function () {
var _0x2a87de = new Image();
return _0x2a87de['className'] = 'animalSkin_' + this['animalType'], _0x2a87de['src'] = 'assets/s/' + this['data']['season'] + '/' + this['getSkinPath'](), _0x2a87de;
}, _0x4dcabc['prototype']['getImagePromo'] = function (_0x4a60cd) {
var _0x331781 = new Image();
return _0x331781['className'] = 'animalSkin_' + this['animalType'], _0x331781['src'] = 'assets/s/' + this['data']['season'] + '/' + this['getSkinPath'](_0x4a60cd), console['log']('promo: ' + _0x331781['src']), _0x331781;
}, _0x4dcabc['prototype']['getSkinName'] = function () {
var _0x15b9a0 = this['skinName'];
return _0x15b9a0['replace']('\x0a', '<br>');
}, window['AnimalSkin'] = _0x4dcabc, _0x3a0dda['setCustomClassForShopItem'](_0x4dcabc, _0x4acf80);

function _0x35c50c() {}
_0x35c50c['prototype']['items'] = [], _0x35c50c['prototype']['datatab'] = [], _0x35c50c['prototype']['showSeason'] = !![], _0x35c50c['prototype']['getPackageInfo'] = function (_0x4ff079) {}, _0x35c50c['prototype']['getFeatureInfo'] = function (_0xab2d5) {
switch (_0xab2d5) {
case 'feature_1v1redemption_5credits':
    return {
        'title': '5 Redemption Credits'
    };
case 'feature_1v1redemption_10credits':
    return {
        'title': '10 Redemption Credits'
    };
case 'feature_1v1redemption_20credits':
    return {
        'title': '20 Redemption Credits'
    };
}
}, _0x35c50c['prototype']['getAnimalInfo'] = function (_0x3f52ae) {
switch (_0x3f52ae) {
case 'halloween_wyrmous':
    return [_0x204cad, 0x64, 'Wyrmous', 'land/cobra/100/cobra'];
case 'halloween_equusthulhu':
    return [_0x2896b9, 0x64, 'Equusthulhu', 'land/donkey/100/donkey'];
case 'halloween_frostaline':
    return [_0x1c2360, 0x64, 'Frostaline', 'arctic/snowleopard/100/snowleopard'];
case 'halloween_pufferMace':
    return [_0x2ee5ae, 0x64, 'Puffermace', 'ocean/pufferfish/100/pufferfish'];
case 'halloween_carnageodactyl':
    return [_0x309a7e, 0x64, 'Carnageodactyl', 'desert/pterodactyl/100/pterodactyl_ability'];
case 'halloween_mrDollar':
    return [_0x2e747e, 0x64, 'Mr. Dollar', 'land/trex/100/trex'];
case 'halloween_wendigoDeer':
    return [_0x43cc06, 0x64, 'The Wendigo', 'land/deer/100/deer'];
case 'halloween_cactiRat':
    return [_0x37c7c9, 0x64, 'Cacti Rat', 'desert/kangaroorat/100/kangaroorat'];
case 'halloween_hiPower':
    return [_0x212372, 0x64, 'Swampster', 'land/hippo/100/hippo'];
case 'halloween_puumpkat':
    return [_0x345849, 0x64, 'Puumpkat', 'desert/meerkat/100/meerkat'];
case 'halloween_doomedarius':
    return [_0x335a3d, 0x64, 'The Doomedarius', 'desert/camel/100/camel'];
case 'halloween_roboMouse':
    return [_0x49d118, 0x64, 'Robo Mouse', 'land/mouse/100/mouse'];
case 'halloween_uncleSam':
    return [_0x1f6edc, 0x64, 'Uncle Sam', 'land/croc/100/croc'];
case 'halloween_zombieMole':
    return [_0x176a10, 0x64, 'Zombie Mole', 'land/mole/100/mole'];
case 'halloween_flammyHart':
    return [_0x332195, 0x64, 'Flammy Hart', 'desert/gazelle/100/gazelle'];
case 'halloween_gummyViper':
    return [_0x464d8f, 0x64, 'Gummy Viper', 'desert/rattlesnake/100/rattlesnake'];
case 'halloween_grimRipper':
    return [_0x103e98, 0x64, 'Grim Reaper', 'land/gorilla/100/gorilla'];
case 'halloween_bigCookie':
    return [_0x2cd95a, 0x64, 'Big Cookie', 'land/bigcat/100/bigcat'];
case 'halloween_gargolgon':
    return [_0x33edcb, 0x64, 'The Gargon', 'land/dragon/100/dragon'];
case 'halloween_candyRus':
    return [_0x13bbdd, 0x64, 'Candy Rus', 'arctic/walrus/100/walrus'];
case 'halloween_mantilian':
    return [_0x1185fd, 0x64, 'The Mantilian', 'land/lion/100/lion'];
case 'halloween_phantomRay':
    return [_0xd32f27, 0x64, 'Phantom Ray', 'ocean/stingray/100/stingray'];
case 'halloween_suitedToucan':
    return [_0x375310, 0x64, 'The Dapper', 'land/toucan/100/toucan'];
case 'halloween_vulgeist':
    return [_0x398a37, 0x64, 'The Vulgeist', 'desert/vulture/100/vulture'];
case 'halloween_burlone':
    return [_0x48646c, 0x64, 'The Burlone', 'desert/warthog/100/warthog'];
case 'halloween_unicornze':
    return [_0x4699c5, 0x64, 'Unicornze', 'land/zebra/100/zebra'];
case 'gold_blackDragon':
    return [_0x5186e1, 0x1, 'Golden\x0aBlack Dragon', 'volcano/blackdragon/1/blackdragon'];
case 'gold_kingDragon':
    return [_0x1e8cf7, 0x1, 'Golden\x0aKing Dragon', 'volcano/kingdragon/1/kingdragon'];
case 'gold_Dragon':
    return [_0x33edcb, 0x1, 'Golden\x0aDragon', 'land/dragon/1/dragon'];
case 'gold_kraken':
    return [_0x3a6f75, 0x1, 'Golden\x0aKraken', 'ocean/kraken/1/kraken'];
case 'gold_yeti':
    return [_0x1080d7, 0x1, 'Golden\x0aYeti', 'arctic/yeti/1/yeti'];
case 'gold_trex':
    return [_0x2e747e, 0x1, 'Golden\x0aT.Rex', 'land/trex/1/trex'];
case 'gold_kingCrab':
    return [_0x7820e, 0x1, 'GoldenCrab', 'ocean/kingcrab/1/kingcrab'];
case 'gold_phoenix':
    return [_0x3fcb38, 0x1, 'Golden\x0aPhoenix', 'volcano/phoenix/1/phoenix'];
case 'gold_pterodactyl':
    return [_0x309a7e, 0x1, 'Golden\x0aPterodactyl', 'desert/pterodactyl/1/pterodactyl_ability'];
case 'gold_iceMonster':
    return [_0x16a00e, 0x1, 'Golden\x0aIce Monster', 'arctic/icemonster/1/icemonster'];
case 'gold_dinoMonster':
    return [_0x4cc8de, 0x1, 'Golden\x0aDino Monster', 'land/dinomonster/1/dinomonster'];
case 'gold_seaMonster':
    return [_0x16f423, 0x1, 'Golden\x0aSea Monster', 'ocean/seamonster/1/seamonster'];
case 'gold_landMonster':
    return [_0xc23298, 0x1, 'Golden\x0aLand Monster', 'volcano/landmonster/1/landmonster'];
case 'gold_giantScorion':
    return [_0x323318, 0x1, 'Golden\x0aGiant Scorpion', 'desert/scorpion/1/giantscorpion'];
case 'gold_bluewhale':
    return [_0x293d5d, 0x1, 'Golden\x0aBlue Whale', 'ocean/bluewhale/1/bluewhale'];
case 'gold_elephant':
    return [_0xce16df, 0x1, 'Golden\x0aElephant', 'land/elephant/1/elephant'];
case 'gold_cassowary':
    return [_0x7fee1e, 0x1, 'Golden\x0aCassowary', 'land/cassowary/1/cassowary'];
case 'gold_giantspider':
    return [_0x484a15, 0x1, 'Golden\x0aGiant Spider', 'land/giantspider/1/giantspider'];
case 'gold_blackwidow':
    return [_0xf85b36, 0x1, 'Golden\x0aBlackwidow', 'desert/blackwidow/1/blackwidow'];
case 'gold_mammoth':
    return [_0x1a507a, 0x1, 'Golden\x0aMammoth', 'arctic/mammoth/1/mammoth'];
case 'gold_hippo':
    return [_0x212372, 0x1, 'Golden\x0aHippo', 'land/hippo/1/hippo'];
case 'gold_ostrich':
    return [_0x189adc, 0x1, 'Golden\x0aOstrich', 'land/ostrich/1/ostrich'];
case 'gold_boa':
    return [_0x2cb4e3, 0x1, 'Golden\x0aBoa', 'land/boaconstrictor/1/boaconstrictor'];
case 'gold_komodo':
    return [_0xbbbf69, 0x1, 'Golden\x0aKomodo', 'desert/komododragon/1/komodo'];
case 'gold_killerwhale':
    return [_0x1be7e6, 0x1, 'Golden\x0aKiller Whale', 'ocean/killerwhale/1/killerwhale'];
case 'gold_sabertooth':
    return [_0x3700ee, 0x1, 'Golden\x0aSabertooth', 'arctic/sabertooth/1/sabertooth'];
case 'skin_blueDragon':
    return [_0x5186e1, 0x2, 'The\x0aAzure Bringer', 'volcano/blackdragon/2/blackdragon'];
case 'skin_kingRipper':
    return [_0x1e8cf7, 0x2, 'King\x0aRipper', 'volcano/kingdragon/2/kingdragon'];
case 'skin_kingStan':
    return [_0x1e8cf7, 0x3, 'King\x0aStan', 'volcano/kingdragon/3/kingdragon'];
case 'skin_kingShah':
    return [_0x1e8cf7, 0x4, 'King\x0aShah', 'volcano/kingdragon/4/kingdragon'];
case 'skin_dragon_gray':
    return [_0x33edcb, 0x2, 'Knight\x0aDragon', 'land/dragon/2/dragon'];
case 'skin_kraken_cyan':
    return [_0x3a6f75, 0x2, 'Chromatic\x0aKraken', 'ocean/kraken/2/kraken'];
case 'skin_yeti_emerald':
    return [_0x1080d7, 0x2, 'Emerald\x0aYeti', 'arctic/yeti/2/yeti'];
case 'skin_snowman':
    return [_0x5d7f3d, 0x1, 'The\x0aSnowman', 'arctic/snowman/1/snowman'];
case 'skin_snowgirl':
    return [_0x5d7f3d, 0x2, 'The\x0aSnowgirl', 'arctic/snowman/2/snowgirl'];
case 'skin_trex_gray':
    return [_0x2e747e, 0x2, 'Ember\x0aT.Rex', 'land/trex/2/trex'];
case 'skin_kingCrab':
    return [_0x7820e, 0x2, 'Amethyst\x0aCrab', 'ocean/kingcrab/2/kingcrab'];
case 'skin_phoenix_blue':
    return [_0x3fcb38, 0x2, 'Alpha\x0aPhoenix', 'volcano/phoenix/2/phoenix'];
case 'skin_pterodactyl_green':
    return [_0x309a7e, 0x2, 'Emerald\x0aPterodactyl', 'desert/pterodactyl/2/pterodactyl_ability'];
case 'skin_iceMonster':
    return [_0x16a00e, 0x2, 'Amethyst\x0aMonster', 'arctic/icemonster/2/icemonster'];
case 'skin_dinoMonster':
    return [_0x4cc8de, 0x2, 'Citrine\x0aMonster', 'land/dinomonster/2/dinomonster'];
case 'skin_seaMonster':
    return [_0x16f423, 0x2, 'Sapphire\x0aMonster', 'ocean/seamonster/2/seamonster'];
case 'skin_landMonster':
    return [_0xc23298, 0x2, 'Titanite\x0aMonster', 'volcano/landmonster/2/landmonster'];
case 'skin_orangeScorpion':
    return [_0x323318, 0x2, 'Carnelian\x0aScorpion', 'desert/scorpion/2/giantscorpion'];
case 'skin_bluewhale':
    return [_0x293d5d, 0x2, 'Albino\x0aBlue Whale', 'ocean/bluewhale/2/bluewhale'];
case 'skin_elephant':
    return [_0xce16df, 0x2, 'White\x0aElephant', 'land/elephant/2/elephant'];
case 'skin_cassowary':
    return [_0x7fee1e, 0x2, 'Cotton\x0aCassowary', 'land/cassowary/2/cassowary'];
case 'skin_giantspider':
    return [_0x484a15, 0x2, 'Goliath\x0aSpider', 'land/giantspider/2/giantspider'];
case 'skin_blackwidow':
    return [_0xf85b36, 0x2, 'Queen\x0aBlackwidow', 'desert/blackwidow/2/blackwidow'];
case 'skin_mammoth':
    return [_0x1a507a, 0x2, 'Black\x0aMammoth', 'arctic/mammoth/2/mammoth'];
case 'skin_hippo':
    return [_0x212372, 0x2, 'Pygmy\x0aHippo', 'land/hippo/2/hippo'];
case 'skin_ostrich':
    return [_0x189adc, 0x2, 'Ruffled\x0aOstrich', 'land/ostrich/2/ostrich'];
case 'skin_boa':
    return [_0x2cb4e3, 0x2, 'Tree\x0aBoa', 'land/boaconstrictor/2/boaconstrictor'];
case 'skin_komodo':
    return [_0xbbbf69, 0x2, 'Night\x0aKomodo', 'desert/komododragon/2/komodo'];
case 'skin_killerwhale':
    return [_0x1be7e6, 0x2, 'Albino\x0aOrca', 'ocean/killerwhale/2/killerwhale'];
case 'skin_sabertooth':
    return [_0x3700ee, 0x2, 'Margala\x0aSabertooth', 'arctic/sabertooth/2/sabertooth'];
case 'skin_tigerShark':
    return [_0xf16f79, 0x2, 'Tiger\x0aShark', 'ocean/shark/1/shark', !![]];
case 'skin_hamerHeadShark':
    return [_0xf16f79, 0x3, 'Hammerhead\x0aShark', 'ocean/shark/2/shark', !![]];
case 'skin_panda':
    return [_0x15db61, 0x2, 'Panda', 'land/panda/panda', !![]];
case 'skin_zonkey':
    return [_0x2896b9, 0x3, 'Zonkey', 'land/donkey/2/zonkey', !![]];
case 'skin_okapi':
    return [_0x4699c5, 0x2, 'Okapi', 'land/okapi/okapi', !![]];
case 'skin_giantCroc':
    return [_0x1f6edc, 0x2, 'Giant\x0aCrocodile', 'land/croc/1/croc', !![]];
case 'skin_purpleMouse':
    return [_0x49d118, 0x2, 'Purple\x0aMouse', 'land/mouse/2/mouse', !![]];
case 'skin_prismaToucan':
    return [_0x375310, 0x6, 'Prisma\x0aToucan', 'land/toucan/6/toucan', !![]];
case 'gold_mouse':
    return [_0x49d118, 0x2, 'Golden\x0aMouse', 'land/mouse/1/mouse', !![]];
case 'skin_queenScarlet':
    return [_0x1e8cf7, 0x5, 'Queen\x0aScarlet', 'volcano/kingdragon/5/kingdragon', !![]];
case 'skin_queenCeleste':
    return [_0x1e8cf7, 0x6, 'Queen\x0aCeleste', 'volcano/kingdragon/6/kingdragon', !![]];
case 'skin_bigFoot':
    return [_0x46984b, 0x1, 'The\x0aBigfoot', 'land/bigfoot/thebigfoot', !![]];
case 'skin_woollyRhino':
    return [_0x2fc4c1, 0x3, 'Woolly\x0aRhino', 'land/rhino/3/rhino', !![]];
}
return null;
}, _0x35c50c['prototype']['loadData'] = function () {
_0x4634da(function (_0x21fd15, _0x336809) {
    var _0x2b6559 = {
        'shopItems': [],
        'settings': []
    };
    if (!_0x21fd15) {
        _0x1a7e4a('Could not connect to AccountServer!', 'itemDoesntExist', 0x5);
        return;
    }
    console['log'](_0x336809);
    if (_0x336809) {
        for (var _0x1dc988 = 0x0; _0x1dc988 < _0x336809['shopItems']['length']; _0x1dc988++) {
            var _0x10c4a8 = _0x336809['shopItems'][_0x1dc988];
            _0x10c4a8['purchasedByPlayer'] && (_0x10c4a8['coinsPrice'] = -0x1), _0x2b6559['shopItems']['push'](_0x10c4a8);
        }
        if (_0x336809['settings'])
            for (var _0x1dc988 = 0x0; _0x1dc988 < _0x336809['settings']['length']; _0x1dc988++) {
                _0x2b6559['settings']['push'](_0x336809['settings'][_0x1dc988]);
            }
    }
    var _0x249fef = {
            'tab': 'Skins',
            'shopItems': []
        },
        _0x486be6 = {
            'tab': 'Golden',
            'shopItems': []
        },
        _0x58abc2 = {
            'tab': 'Locked',
            'shopItems': []
        },
        _0x19e5a3 = {
            'tab': 'Halloween',
            'shopItems': []
        },
        _0x3b1177 = {
            'tab': 'Deals',
            'shopItems': []
        },
        _0x2b470d = {
            'tab': 'Features',
            'shopItems': []
        },
        _0x57bfd3 = [],
        _0x40686e = [_0x249fef, _0x2b470d, _0x3b1177];
    for (_0x1dc988 = 0x0; _0x1dc988 < _0x2b6559['shopItems']['length']; _0x1dc988++) {
        var _0x439542 = _0x2b6559['shopItems'][_0x1dc988];
        switch (_0x439542['shopCategory']) {
        case 'halloween':
        case 'locked':
        case 'gold': {
            var _0x38c482 = _0x35c50c['prototype']['getAnimalInfo'](_0x439542['itemName'], _0x439542);
            _0x38c482 && (_0x439542['id'] = _0x439542['itemName'], _0x439542['oType'] = _0x4acf80, _0x439542['animalType'] = _0x38c482[0x0], _0x439542['animalSpecies'] = _0x38c482[0x1], _0x439542['skinName'] = _0x38c482[0x2], _0x439542['skinImage'] = _0x38c482[0x3], _0x249fef['shopItems']['push'](_0x439542));
        }
        break;
        case 'feature': {
            if (_0x439542['itemType'] == 'animal') {
                var _0x38c482 = _0x35c50c['prototype']['getAnimalInfo'](_0x439542['itemName']);
                _0x38c482 ? (_0x439542['id'] = _0x439542['itemName'], _0x439542['oType'] = _0x4acf80, _0x439542['animalType'] = _0x38c482[0x0], _0x439542['animalSpecies'] = _0x38c482[0x1], _0x439542['skinName'] = _0x38c482[0x2], _0x439542['skinImage'] = _0x38c482[0x3], _0x2b470d['shopItems']['push'](_0x439542)) : console['log']('No animal type data for shop item ' + _0x439542['itemName']);
            } else {
                if (_0x439542['itemType'] == 'feature') {
                    var _0x12fbf6 = _0x35c50c['prototype']['getFeatureInfo'](_0x439542['itemName']) || {
                        'title': 'Feature'
                    };
                    _0x439542['id'] = _0x439542['itemName'], _0x439542['oType'] = _0x5354f5, _0x439542['title'] = _0x12fbf6['title'], _0x2b470d['shopItems']['push'](_0x439542);
                }
            }
        }
        break;
        case 'deal': {
            _0x439542['id'] = _0x439542['itemName'], _0x439542['oType'] = _0x300b23, _0x3b1177['shopItems']['push'](_0x439542);
        }
        break;
        default:
        }
    }
    var _0x6aec2f = {
        'skins': _0x40686e
    };
    _0x35c50c['prototype']['shop'] = {
        'ownedSkins': [],
        'ownedAnimals': [],
        'ownedDeals': [],
        'ownedProps': [],
        'settings': _0x2b6559['settings'],
        'skins': [],
        'props': [],
        'banners': _0x2b6559['banners']
    };
    var _0x46116f = [],
        _0x25e4d0 = [];
    for (t = 0x0; t < _0x6aec2f['skins']['length']; t++) {
        var _0x319503 = _0x6aec2f['skins'][t];
        for (_0x1dc988 = 0x0; _0x1dc988 < _0x319503['shopItems']['length']; _0x1dc988++) {
            var _0x40f8b6 = _0x319503['shopItems'][_0x1dc988],
                _0x453aa1 = _0x3a0dda['newlyVis_createGameObjFromMsg'](_0x40f8b6['itemType'], _0x40f8b6);
            if (_0x40f8b6['isTemporary']) _0x453aa1['isTemporary'] = !![];
            if (_0x453aa1['coinsPrice'] == -0x1 && _0x453aa1['data']['itemType'] == 'skin') !_0x35c50c['prototype']['shop']['ownedSkins'][_0x40f8b6['itemName']] && (_0x35c50c['prototype']['shop']['ownedSkins'][_0x40f8b6['itemName']] = _0x453aa1, _0x35c50c['prototype']['shop']['ownedSkins']['push'](_0x453aa1));
            else {
                if (_0x453aa1['coinsPrice'] == -0x1 && _0x453aa1['data']['itemType'] == 'animal') !_0x35c50c['prototype']['shop']['ownedAnimals'][_0x40f8b6['itemName']] && (_0x35c50c['prototype']['shop']['ownedAnimals'][_0x40f8b6['itemName']] = _0x453aa1, _0x35c50c['prototype']['shop']['ownedAnimals']['push'](_0x453aa1));
                else _0x453aa1['coinsPrice'] == -0x1 && _0x453aa1['data']['itemType'] == 'deal' && _0x35c50c['prototype']['shop']['ownedDeals']['push'](_0x453aa1);
            }
            if (_0x40f8b6['saleType'] > -0x1 && _0x40f8b6['canBuy'] == !![]) _0x46116f['push'](_0x453aa1);
            else _0x25e4d0['push'](_0x453aa1);
        }
    }
    _0x35c50c['prototype']['shop']['allItems'] = _0x46116f;
    for (d = 0x0; d < _0x35c50c['prototype']['shop']['ownedDeals']['length']; d++) {
        var _0x38e3b6 = _0x35c50c['prototype']['shop']['ownedDeals'][d];
        for (s = 0x0; s < _0x46116f['length']; s++) {
            var _0x40f8b6 = _0x46116f[s];
            _0x40f8b6['data']['promotions'] !== undefined && _0x40f8b6['data']['promotions']['length'] > 0x0 && (_0x40f8b6['data']['promotions']['indexOf'](_0x38e3b6['itemName']) > -0x1 && (console['log'](_0x46116f[s]), _0x40f8b6['coinsPrice'] = -0x1, !_0x35c50c['prototype']['shop']['ownedSkins'][_0x40f8b6['data']['itemName']] && _0x35c50c['prototype']['shop']['ownedSkins']['push'](_0x40f8b6)));
        }
        for (s = 0x0; s < _0x25e4d0['length']; s++) {
            var _0x40f8b6 = _0x25e4d0[s];
            _0x40f8b6['data']['promotions'] !== undefined && _0x40f8b6['data']['promotions']['length'] > 0x0 && (_0x40f8b6['data']['promotions']['indexOf'](_0x38e3b6['itemName']) > -0x1 && (_0x40f8b6['coinsPrice'] = -0x1, !_0x35c50c['prototype']['shop']['ownedSkins'][_0x40f8b6['data']['itemName']] && _0x35c50c['prototype']['shop']['ownedSkins']['push'](_0x40f8b6)));
        }
    }
    for (_0x1dc988 = 0x0; _0x1dc988 < _0x35c50c['prototype']['shop']['allItems']['length']; _0x1dc988++) {
        _0x35c50c['prototype']['shop']['allItems'][_0x35c50c['prototype']['shop']['allItems'][_0x1dc988]['data']['itemName']] = _0x35c50c['prototype']['shop']['allItems'][_0x1dc988];
    }
    for (t = 0x0; t < _0x6aec2f['skins']['length']; t++) {
        var _0x319503 = _0x6aec2f['skins'][t],
            _0x583adc = _0x319503['tab'],
            _0x2340a9 = {
                'name': _0x583adc,
                'items': []
            };
        _0x35c50c['prototype']['shop']['skins']['push'](_0x2340a9), _0x35c50c['prototype']['shop']['skins'][_0x583adc] = _0x2340a9;
        for (_0x1dc988 = 0x0; _0x1dc988 < _0x319503['shopItems']['length']; _0x1dc988++) {
            var _0x40f8b6 = _0x319503['shopItems'][_0x1dc988];
            for (a = 0x0; a < _0x46116f['length']; a++) {
                var _0x2683f1 = _0x46116f[a];
                _0x40f8b6['id'] == _0x2683f1['id'] && _0x2683f1['coinsPrice'] > -0x1 && _0x2340a9['items']['push'](_0x2683f1);
            }
        }
    }
    $bus['emit']($bus['EVENTS']['LOADED_SHOP_DATA'], {
        'shopData': {
            ..._0x35c50c['prototype']['shop']
        },
        'responseObject': _0x336809
    });
});
}, _0x35c50c['prototype']['ownedItems'] = new Array(), _0x35c50c['prototype']['shop'] = null, _0x35c50c['prototype']['shopDiv'] = null, _0x35c50c['prototype']['callback'] = null;
var _0xdbd1d0 = 0x0,
_0x209e50 = 0x1,
_0x59b361 = 0x2;
_0x35c50c['prototype']['upgradeMenu_callback'] = null, $bus['on']($bus['EVENTS']['UI_PURCHASE_SHOP_ITEM'], _0x2c1e4a => {
_0x3ef9ae(_0x2c1e4a, function (_0x34decf, _0x30b9f9) {
    if (_0x34decf) $bus['emit']($bus['EVENTS']['PURCHASE_ITEM_RESPONSE'], {
        'success': !![],
        'itemName': _0x2c1e4a
    }), _0x1f05dc(), _0x443299();
    else switch (_0x30b9f9) {
    case 'alreadyowned':
        $bus['emit']($bus['EVENTS']['PURCHASE_ITEM_RESPONSE'], {
            'success': ![],
            'itemName': _0x2c1e4a,
            'error': 'AccountServer: item already purchased!'
        });
        break;
    case 'cantafford':
        $bus['emit']($bus['EVENTS']['PURCHASE_ITEM_RESPONSE'], {
            'success': ![],
            'itemName': _0x2c1e4a,
            'error': 'AccountServer: not enough coins to buy this!'
        });
        break;
    case 'itemDoesntExist':
        $bus['emit']($bus['EVENTS']['PURCHASE_ITEM_RESPONSE'], {
            'success': ![],
            'itemName': _0x2c1e4a,
            'error': 'AccountServer: Item doesn\'t exist!'
        });
        break;
    default:
        $bus['emit']($bus['EVENTS']['PURCHASE_ITEM_RESPONSE'], {
            'success': ![],
            'itemName': _0x2c1e4a,
            'error': 'Failed to purchase item'
        });
        break;
    }
});
}), _0x35c50c['prototype']['getSkinPath'] = function (_0x10ab1b, _0x4fa16f) {
console['log']('getskin path');
var _0x3410de = _0x3360d0['createGameObjOfOType'](_0x4acf80, _0x10ab1b);
_0x3410de['animalType'] = _0x10ab1b, _0x3410de['animalSpecies'] = 0x0, _0x3410de['animalSubSpecies'] = 0x0, _0x3410de['animalPremiumSkin'] = 0x0, _0x3410de['curBiome'] = 0x0, _0x3410de['lava'] = 0x64, _0x3410de['mopeSeasonID'] = 0x0, _0x3410de['skinThemeID'] = _0x4fa16f;
var _0x4cd695 = _0x3410de['animalInfo'](),
    _0x5c71db = _0x3410de['getSkinImagePathForShop'](_0x4cd695['skinName']);
return _0x5c71db = this['ifMultiAssetSkin'](_0x10ab1b, _0x5c71db), _0x5c71db + '.png';
}, _0x35c50c['prototype']['ifMultiAssetSkin'] = function (_0xd81386, _0x2756f0) {
switch (_0xd81386) {
case 0x13:
case 0x1d:
case 0x1b:
case 0x14:
case 0x12:
case 0x17:
case _0x2ee5ae:
    _0x2756f0 = _0x2756f0;
    break;
}
return _0x2756f0;
}, _0x35c50c['prototype']['getPostFixForItem'] = function (_0x220c31) {
switch (_0x220c31) {
case 'halloween_pufferMace':
    return '1';
}
return null;
}, _0x35c50c['prototype']['createField'] = function (_0x1e6025, _0xc2a9b8, _0x4f0ddb, _0x882f62, _0x1dcdb4) {
var _0x4f62cf = _0x132dab('', _0x4f0ddb),
    _0x1e6025 = _0x132dab('', _0x882f62),
    _0xc2a9b8 = _0x132dab('', _0x1dcdb4);
return _0x4f62cf['appendChild'](_0x1e6025), _0x4f62cf['appendChild'](_0xc2a9b8), _0x4f62cf;
}, _0x35c50c['prototype']['addCloseButton'] = function (_0x2cdc4e) {
var _0x3a1207 = _0x513ee7('div', 'close-shop');
_0x3a1207['onclick'] = function () {
    closeShop();
}, _0x3a1207['innerHTML'] = 'X', _0x2cdc4e['appendChild'](_0x3a1207);
}, _0x35c50c['prototype']['updateCoinsBalance'] = function () {
console['log']('coins balance updated');
var _0x40cab4 = _0x2aaa22;
_0x40cab4['level'] = Math['round'](_0x5a9e0b(0x1, 0xa)), _0x40cab4['xp'] = 0x32, _0x40cab4['xpNextLvl'] = _0x40cab4['xp'] + 0x12c;
var _0x54ec52 = Math['round'](_0x40cab4['xp']),
    _0x62f9fb = document['getElementById']('coins');
if (_0x62f9fb) {
    _0x62f9fb['innerHTML'] = this['coinsFormat'](_0x521c85());
    var _0x5147b2 = document['getElementById']('userxp-barbar'),
        _0xd044c8 = document['getElementById']('userxp-val'),
        _0x439cbf = document['getElementById']('userxp-star');
    _0xd044c8['innerHTML'] = _0x54ec52 + ' / ' + _0x40cab4['xpNextLvl'], _0x54ec52 = _0x54ec52 / _0x40cab4['xpNextLvl'] * 0x64, _0x5147b2['style']['width'] = _0x54ec52 + 'px', _0x439cbf['innerHTML'] = _0x40cab4['level'];
}
var _0xed765a = document['getElementById']('coins2');
if (_0xed765a) {
    _0xed765a['innerHTML'] = _0x521c85();
    var _0x5147b2 = document['getElementById']('userxp-barbar2'),
        _0xd044c8 = document['getElementById']('userxp-val2'),
        _0x439cbf = document['getElementById']('userxp-star2');
    _0xd044c8['innerHTML'] = _0x54ec52 + ' / ' + _0x40cab4['xpNextLvl'], _0x54ec52 = _0x54ec52 / _0x40cab4['xpNextLvl'] * 0x64, _0x5147b2['style']['width'] = _0x54ec52 + 'px', _0x439cbf['innerHTML'] = _0x40cab4['level'];
}
}, _0x35c50c['prototype']['coinsFormat'] = function (_0x5bb9bf) {
console['log']('coinsFormat');
var _0x369692 = '' + _0x5bb9bf;
return _0x369692 = _0x369692['toString']()['replace'](/\B(?=(\d{3})+(?!\d))/g, ','), _0x369692;
}, _0x35c50c['prototype']['enableClothingShop'] = ![], _0x35c50c['prototype']['getItemByName'] = function (_0x8eb5a6) {
if (this['shop']['allItems'])
    for (i = 0x0; i < this['shop']['allItems']['length']; i++) {
        if (this['shop']['allItems'][i]['itemName'] == _0x8eb5a6) return this['shop']['allItems'][i];
    }
return null;
}, _0x35c50c['prototype']['deleteTab'] = function () {
var _0x4fa8db = document['getElementById']('shop_div');
_0x4fa8db && _0x4fa8db['parentNode']['removeChild'](_0x4fa8db);
}, _0x35c50c['prototype']['getShopFilters'] = function () {}, $bus['on']($bus['EVENTS']['PLAY_CLICK_SOUND'], () => {
_0x4ea6eb();
}), _0x35c50c['prototype']['props'] = {
'hatsColor': '',
'beardsColor': '',
'glassesColor': '',
'scarfsColor': ''
}, _0x35c50c['prototype']['propBought'] = {
'hats': {
    'white': 0x1,
    'red': 0x0,
    'green': 0x0,
    'blue': 0x1,
    'pink': 0x0,
    'gold': 0x0
},
'beards': {
    'white': 0x0,
    'red': 0x1,
    'green': 0x0,
    'blue': 0x0,
    'pink': 0x0,
    'gold': 0x1
},
'glasses': {
    'white': 0x0,
    'red': 0x1,
    'green': 0x1,
    'blue': 0x0,
    'pink': 0x0,
    'gold': 0x0
},
'scarfs': {
    'white': 0x0,
    'red': 0x1,
    'green': 0x0,
    'blue': 0x1,
    'pink': 0x0,
    'gold': 0x1
}
}, _0x35c50c['prototype']['hasBoughtProp'] = function (_0x582ea3, _0x197520) {
var _0x57e8aa = this['propBought'][_0x582ea3][_0x197520];
if (_0x57e8aa === 0x1) return !![];
return ![];
}, _0x35c50c['prototype']['isPropSelected'] = function (_0x5887ca, _0x5a88ac) {
var _0x40e7fe = this['getPropColorNum'](_0x5a88ac),
    _0x381770 = this['props'][_0x5887ca + 'Color'];
return _0x381770 === _0x40e7fe;
}, _0x35c50c['prototype']['showProp'] = function (_0x1939ca) {
var _0x12265f = document['getElementById']('propDisplay');
_0x12265f['style']['display'] = 'block';
var _0x524cd6 = document['getElementById']('btn-' + _0x1939ca);
if (_0x524cd6) {
    var _0x15b8ee = document['getElementById']('btn-hats'),
        _0x35a049 = document['getElementById']('btn-glasses'),
        _0x202053 = document['getElementById']('btn-beards'),
        _0x3ba814 = document['getElementById']('btn-scarfs');
    _0x15b8ee['className'] = 'clothingbtn', _0x35a049['className'] = 'clothingbtn', _0x202053['className'] = 'clothingbtn', _0x3ba814['className'] = 'clothingbtn', _0x524cd6['className'] = 'clothingbtn selected';
    var _0x338098 = document['getElementById']('propColors');
    _0x338098['innerHTML'] = '';
    var _0x2434d2 = _0x513ee7('div', 'propColor-white', 'propColor propColor-white' + (this['isPropSelected'](_0x1939ca, 'white') ? ' selected' : '') + (this['hasBoughtProp'](_0x1939ca, 'white') ? ' bought' : '')),
        _0x19699f = _0x513ee7('div', 'propColor-red', 'propColor propColor-red' + (this['isPropSelected'](_0x1939ca, 'red') ? ' selected' : '') + (this['hasBoughtProp'](_0x1939ca, 'red') ? ' bought' : '')),
        _0x14b6b3 = _0x513ee7('div', 'propColor-green', 'propColor propColor-green' + (this['isPropSelected'](_0x1939ca, 'green') ? ' selected' : '') + (this['hasBoughtProp'](_0x1939ca, 'green') ? ' bought' : '')),
        _0x2dfa32 = _0x513ee7('div', 'propColor-blue', 'propColor propColor-blue' + (this['isPropSelected'](_0x1939ca, 'blue') ? ' selected' : '') + (this['hasBoughtProp'](_0x1939ca, 'blue') ? ' bought' : '')),
        _0x2080d1 = _0x513ee7('div', 'propColor-pink', 'propColor propColor-pink' + (this['isPropSelected'](_0x1939ca, 'pink') ? ' selected' : '') + (this['hasBoughtProp'](_0x1939ca, 'pink') ? ' bought' : '')),
        _0x1b04a0 = _0x513ee7('div', 'propColor-gold', 'propColor propColor-gold' + (this['isPropSelected'](_0x1939ca, 'gold') ? ' selected' : '') + (this['hasBoughtProp'](_0x1939ca, 'gold') ? ' bought' : ''));
    _0x2434d2['appendChild'](_0x513ee7('div', '', 'color')), _0x19699f['appendChild'](_0x513ee7('div', '', 'color')), _0x14b6b3['appendChild'](_0x513ee7('div', '', 'color')), _0x2dfa32['appendChild'](_0x513ee7('div', '', 'color')), _0x2080d1['appendChild'](_0x513ee7('div', '', 'color')), _0x1b04a0['appendChild'](_0x513ee7('div', '', 'color')), _0x2434d2['onclick'] = function () {
        _0x9a4156['setPropColor'](_0x1939ca, 'white');
    }, _0x19699f['onclick'] = function () {
        _0x9a4156['setPropColor'](_0x1939ca, 'red');
    }, _0x14b6b3['onclick'] = function () {
        _0x9a4156['setPropColor'](_0x1939ca, 'green');
    }, _0x2dfa32['onclick'] = function () {
        _0x9a4156['setPropColor'](_0x1939ca, 'blue');
    }, _0x2080d1['onclick'] = function () {
        _0x9a4156['setPropColor'](_0x1939ca, 'pink');
    }, _0x1b04a0['onclick'] = function () {
        _0x9a4156['setPropColor'](_0x1939ca, 'gold');
    }, _0x338098['appendChild'](_0x2434d2), _0x338098['appendChild'](_0x19699f), _0x338098['appendChild'](_0x14b6b3), _0x338098['appendChild'](_0x2dfa32), _0x338098['appendChild'](_0x2080d1), _0x338098['appendChild'](_0x1b04a0);
    var _0x255650 = document['getElementById']('propBuyDiv');
    _0x255650['innerHTML'] = '';
}
}, _0x35c50c['prototype']['propAnimal'] = null, _0x35c50c['prototype']['updatePropsForAnimal'] = function () {
console['log'](this['props']);
var _0x1a8435 = _0x49d118,
    _0x345d7d = _0x3360d0['createGameObjOfOType'](_0x4acf80, _0x1a8435);
_0x345d7d['animalType'] = _0x1a8435, _0x345d7d['animalSpecies'] = 0x0, _0x345d7d['animalSubSpecies'] = 0x0, _0x345d7d['animalPremiumSkin'] = 0x0;
var _0x399c2a = _0x132dab('', 'propimg'),
    _0x3d4ab6 = _0x132dab('', 'propimg'),
    _0x38ac86 = _0x132dab('', 'propimg'),
    _0x555912 = _0x132dab('', 'propimg'),
    _0x5beba8 = _0x132dab('', 'propimg'),
    _0x39bc77 = document['getElementById']('propAnimal');
_0x39bc77['innerHTML'] = '';
var _0x4acd0b = 'skins/' + _0x345d7d['animalInfo']()['skinName'] + '.png',
    _0x5288c7 = '/props/' + _0x1a8435 + '/beards/' + this['props']['beardsColor'] + '.png',
    _0x43f84e = '/props/' + _0x1a8435 + '/hats/' + this['props']['hatsColor'] + '.png',
    _0x52757f = '/props/' + _0x1a8435 + '/scarfs/' + this['props']['scarfsColor'] + '.png',
    _0x5280c2 = '/props/' + _0x1a8435 + '/glasses/' + this['props']['glassesColor'] + '.png';
console['log'](_0x5288c7), _0x3d4ab6['style']['backgroundImage'] = 'url(' + _0x5288c7 + ')', _0x399c2a['style']['backgroundImage'] = 'url(' + _0x4acd0b + ')', _0x38ac86['style']['backgroundImage'] = 'url(' + _0x43f84e + ')', _0x555912['style']['backgroundImage'] = 'url(' + _0x52757f + ')', _0x5beba8['style']['backgroundImage'] = 'url(' + _0x5280c2 + ')', _0x39bc77['appendChild'](_0x3d4ab6), _0x39bc77['appendChild'](_0x399c2a), _0x39bc77['appendChild'](_0x555912), _0x39bc77['appendChild'](_0x5beba8), _0x39bc77['appendChild'](_0x38ac86);
}, _0x35c50c['prototype']['getPropColorNum'] = function (_0x4cfcf2) {
switch (_0x4cfcf2) {
case 'white':
    return 0x0;
case 'red':
    return 0x1;
case 'green':
    return 0x2;
case 'blue':
    return 0x3;
case 'pink':
    return 0x4;
case 'gold':
    return 0x5;
}
}, _0x35c50c['prototype']['setPropColor'] = function (_0x39db6d, _0x43b2ba) {
var _0x10ea13 = _0x39db6d + 'Color',
    _0x597796 = document['getElementById']('propColor-' + _0x43b2ba),
    _0x46bceb = document['getElementById']('propColor-red'),
    _0x774a3b = document['getElementById']('propColor-green'),
    _0x3ece30 = document['getElementById']('propColor-blue'),
    _0x4f5fc6 = document['getElementById']('propColor-pink'),
    _0x38d667 = document['getElementById']('propColor-white'),
    _0x300b91 = document['getElementById']('propColor-gold');
_0x46bceb['className'] = 'propColor propColor-red' + (this['hasBoughtProp'](_0x39db6d, 'red') ? ' bought' : ''), _0x774a3b['className'] = 'propColor propColor-green' + (this['hasBoughtProp'](_0x39db6d, 'green') ? ' bought' : ''), _0x3ece30['className'] = 'propColor propColor-blue' + (this['hasBoughtProp'](_0x39db6d, 'blue') ? ' bought' : ''), _0x4f5fc6['className'] = 'propColor propColor-pink' + (this['hasBoughtProp'](_0x39db6d, 'pink') ? ' bought' : ''), _0x38d667['className'] = 'propColor propColor-white' + (this['hasBoughtProp'](_0x39db6d, 'white') ? ' bought' : ''), _0x300b91['className'] = 'propColor propColor-gold' + (this['hasBoughtProp'](_0x39db6d, 'gold') ? ' bought' : '');
var _0x446407 = document['getElementById']('propBuyDiv');
_0x446407['innerHTML'] = '';
var _0x5ee262 = _0x513ee7('div', 'propBuyBtn', 'buybutton');
_0x5ee262['onclick'] = function () {
    alert('buy prop: ' + _0x39db6d + ' color: ' + _0x43b2ba);
};
if (this['isPropSelected'](_0x39db6d, _0x43b2ba)) this['props'][_0x10ea13] = '', _0x597796['className'] = 'propColor propColor-' + _0x43b2ba;
else {
    this['props'][_0x10ea13] = this['getPropColorNum'](_0x43b2ba), _0x597796['className'] = 'propColor propColor-' + _0x43b2ba + ' selected';
    if (!this['hasBoughtProp'](_0x39db6d, _0x43b2ba)) {
        var _0x2e4ac5 = new Image();
        _0x2e4ac5['className'] = 'buycoin-img', _0x2e4ac5['src'] = 'shop/mopecoin.png';
        var _0x6c49f4 = _0x513ee7('span', '', 'buycoin-price');
        _0x6c49f4['innerHTML'] = 0x64 + this['getPropColorNum'](_0x43b2ba) * 0x64, _0x5ee262['appendChild'](_0x2e4ac5), _0x5ee262['appendChild'](_0x6c49f4), _0x446407['appendChild'](_0x5ee262);
    }
}
this['updatePropsForAnimal']();
}, _0x35c50c['prototype']['curTabPage'] = 0x0, _0x35c50c['prototype']['version'] = 0.2, _0x35c50c['prototype']['playerSettings_update'] = function (_0x240e7d) {
console['log']('update: ' + _0x240e7d), _0x275657(_0x240e7d, function (_0x314281, _0x18b15b) {
    if (_0x314281) _0x1a7e4a('Settings updated successfully!', 'success', 0x5), $bus['emit']($bus['EVENTS']['SHOP_SETTING_CHANGED'], _0x240e7d), _0x1f05dc(), _0x443299(!![]);
    else switch (_0x18b15b) {
    case 'alreadyowned':
        _0x1a7e4a('AccountServer: item already purchased!', _0x18b15b, 0xf);
        break;
    case 'cantafford':
        _0x1a7e4a('AccountServer: not enough coins to buy this!', _0x18b15b, 0xf);
        break;
    case 'urlnotfound':
        _0x1a7e4a('AccountServer: Can\'t reach server at this moment!', 'itemDoesntExist', 0xf);
        break;
    }
});
}, window['MopeShop'] = _0x35c50c;
var _0x9a4156 = new _0x35c50c();
$bus['on']($bus['EVENTS']['UI_SHOP_SETTING_ACTION'], _0x1a1b6f => {
_0x9a4156['playerSettings_update'](_0x1a1b6f);
});

function _0x374b02(_0x45024c) {
var _0x2aad91 = _0x513ee7('input', 'txtCopy');
_0x2aad91['setAttribute']('type', 'text'), _0x2aad91['setAttribute']('value', _0x45024c), console['log'](_0x2aad91), _0x2aad91['select'](), _0x2aad91['setSelectionRange'](0x0, 0x1869f), document['execCommand']('copy'), alert('Copied the text: ' + _0x2aad91['value']);
}
_0x9a4156['loadData'](), _0x35c50c['prototype']['getAnimalInfo'] = function (_0x2a6705, _0x29b1e5) {
switch (_0x2a6705) {
case 'sampleTestSkin':
    return [_0x49d118, 0xfa, 'Sample Mouse', 'land/mouse/250/mouse'];
case 'summer21_seamonster':
    return [_0x16f423, 0xc9, 'Ancient Tortoise', 'ocean/seamonster/201/seamonster'];
case 'summer21_puffer':
    return [_0x2ee5ae, 0xc9, 'Omniball Puffer', 'ocean/pufferfish/201/pufferfish'];
case 'summer21_turtle':
    return [_0x41ea25, 0xc9, 'Kiwi Turtle', 'ocean/turtle/201/turtle'];
case 'summer21_octopus':
    return [_0x108db6, 0xc9, 'Fuchsia Tiger', 'ocean/octopus/201/octopus.ui'];
case 'summer21_orca':
    return [_0x1be7e6, 0xc9, 'Lifeguard Orca', 'ocean/killerwhale/201/killerwhale'];
case 'summer21_iceMonster':
    return [_0x16a00e, 0xc9, 'Cryo Coach Monster', 'arctic/icemonster/201/icemonster'];
case 'summer21_mammoth':
    return [_0x1a507a, 0xc9, 'Lost Tourist', 'arctic/mammoth/201/mammoth'];
case 'summer21_crab':
    return [_0x415723, 0xc9, 'Coconut Crab', 'ocean/crab/201/crab'];
case 'summer21_hare':
    return [_0x46d563, 0xc9, 'Snow Cone Hare', 'arctic/arctichare/201/arctichare'];
case 'summer21_shrimp':
    return [_0x5626d9, 0xc9, 'Chef Shrimp', 'ocean/shrimp/201/shrimp'];
case 'summer21_walrus':
    return [_0x13bbdd, 0xc9, 'Walrusmelon', 'arctic/walrus/201/walrus'];
case 'summer21_squid':
    return [_0x4e129f, 0xc9, 'Seacoast Squid', 'ocean/squid/201/squid.ui'];
case 'summer21_fox':
    return [_0x37ed61, 0xc9, 'Forest Sprit Fox', 'arctic/arcticfox/201/arcticfox'];
case 'summer21_seal':
    return [_0xc81962, 0xc9, 'Hawaiian Monk', 'arctic/seal/201/seal'];
case 'summer21_wolf':
    return [_0x4b16ca, 0xc9, 'Pineapple Wolf', 'arctic/wolf/201/wolf'];
case 'summer21_markhor':
    return [_0x56a5e3, 0xc9, 'Fruity Ice Markhor', 'arctic/markhor/201/1/markhor'];
case 'summer21_warthog':
    return [_0x48646c, 0xc9, 'Flame Tiki', 'desert/warthog/201/warthog'];
case 'summer21_chicken':
    return [_0x1b4e84, 0xc9, 'Countryside Chick', 'land/chicken/201/chicken'];
case 'summer21_owl':
    return [_0x5baef5, 0xc9, 'Snowy Owrigami', 'arctic/snowyowl/201/snowyowl'];
case 'summer21_zebra':
    return [_0x4699c5, 0xc9, 'Playground Zebra', 'land/zebra/201/zebra'];
case 'summer21_croc':
    return [_0x1f6edc, 0xc9, 'Big Hoss', 'land/croc/201/croc'];
case 'summer21_meerkat':
    return [_0x345849, 0xc9, 'Scubakat', 'desert/meerkat/201/meerkat'];
case 'summer21_rhino':
    return [_0x2fc4c1, 0xc9, 'Shrub Rhino', 'land/rhino/201/rhino'];
case 'summer21_elephant':
    return [_0xce16df, 0xc9, 'Leiphant', 'land/elephant/201/elephant'];
case 'summer21_pig':
    return [_0x51c352, 0xc9, 'Floaty Pig', 'land/pig/201/pig'];
case 'summer21_camel':
    return [_0x335a3d, 0xc9, 'Balloon Warrior', 'desert/camel/201/camel'];
case 'summer21_hyena':
    return [_0x233419, 0xc9, 'DJ Hyena', 'desert/hyena/201/hyena'];
case 'summer21_gorilla':
    return [_0x103e98, 0xc9, 'Explorer Ape', 'land/gorilla/201/gorilla'];
case 'summer21_squishyYeti':
    return [_0x1080d7, 0xc9, 'Squishy Yeti', 'arctic/yeti/201/yeti'];
case 'summer21_squishyKraken':
    return [_0x3a6f75, 0xc9, 'Squishy Kraken', 'ocean/kraken/201/kraken'];
case 'summer21_squishyDragon':
    return [_0x33edcb, 0xc9, 'Squishy Dragon', 'land/dragon/201/dragon'];
case 'summer21_mermaidWhale':
    return [_0x293d5d, 0xc9, 'Mermaid Whale', 'ocean/bluewhale/201/bluewhale'];
case 'summer21_seafoamJellyfish':
    return [_0x402b8c, 0xc9, 'Seafoam Jellyfish', 'ocean/jellyfish/201/jellyfish'];
case 'summer21_bubblyMouse':
    return [_0x49d118, 0xc9, 'Bubbly Mouse', 'land/mouse/201/mouse'];
case 'summer21_surfboardChomper':
    return [_0xf16f79, 0xc9, 'Surfboard Chomper', 'ocean/shark/201/shark'];
case 'summer21_surferPenguin':
    return [_0x55a1a9, 0xc9, 'Surfer Penguin', 'arctic/penguin/201/penguin'];
case 'summer21_waterGunHorse':
    return [_0x4ac227, 0xc9, 'Water Gun Horse', 'ocean/seahorse/201/seahorse'];
case 'summer21_sunburnReindeer':
    return [_0x4c7e27, 0xc9, 'Sunburn Reindeer', 'arctic/reindeer/201/reindeer'];
case 'summer21_surfboardSwordfish':
    return [_0x31cc16, 0xc9, 'Surfboardfish', 'ocean/swordfish/201/swordfish'];
case 'summer21_popsicleTrout':
    return [_0x2a05b1, 0xc9, 'Popsicle Trout', 'ocean/trout/201/trout'];
case 'summer21_playfulChipmunk':
    return [_0x465a75, 0xc9, 'Playful Munk', 'arctic/chipmunk/201/chipmunk'];
case 'summer21_fireworkOx':
    return [_0xc6c00, 0xc9, 'Fireworks Ox', 'arctic/muskox/201/muskox'];
case 'summer21_chocolateStingray':
    return [_0xd32f27, 0xc9, 'Chocolate Ray', 'ocean/stingray/201/stingray.ui'];
case 'summer21_connoisseurBear':
    return [_0x546d88, 0xc9, 'Cola Connoisseur', 'arctic/bear/201/bear'];
case 'summer21_coralQueen':
    return [_0x1c2360, 0xc9, 'Coral Queen', 'arctic/snowleopard/201/snowleopard'];
case 'summer21_strawbertoothTiger':
    return [_0x3700ee, 0xc9, 'Strawbertooth', 'arctic/sabertooth/201/sabertooth'];
case 'skin_leatherBackTurtle':
    return [_0x41ea25, 0xc8, 'Leather Back\x0aTurtle', 'ocean/turtle/200/turtle'];
case 'skin_celestialCobra':
    return [_0x204cad, 0xc8, 'Celestial Cobra', 'land/cobra/200/cobra'];
case 'skin_brazenBull':
    return [_0xc6c00, 0xc8, 'Brazen Bull', 'arctic/muskox/200/muskox'];
case 'skin_luckyCharmMonster':
    return [_0x16f423, 0xc8, 'Luckycharm Monster', 'ocean/seamonster/200/seamonster'];
case 'skin_iceToucan':
    return [_0x375310, 0xc8, 'Ice Toucan', 'land/toucan/200/toucan'];
case 'skin_clowoudLion':
    return [_0x1185fd, 0xc8, 'Clowoud Lion', 'land/lion/200/0/lion'];
case 'skin_sunsetClowoudLion':
    return [_0x1185fd, 0xc8, 'Sunset\x0aClowoud Lion', 'land/lion/200/1/lion'];
case 'skin_stormClowoudLion':
    return [_0x1185fd, 0xc8, 'Storm\x0aClowoud Lion', 'land/lion/200/2/lion'];
case 'skin_kaijuRex':
    return [_0x2e747e, 0xc8, 'Kaiju Rex', 'land/trex/200/trex'];
case 'skin_warTHog':
    return [_0x48646c, 0xc8, 'WarT. Hog', 'desert/warthog/200/warthog'];
case 'skin_velvetChimp':
    return [_0xd214a6, 0xc8, 'Velvet\x0aChipmunk', 'desert/chipmunk/200/chipmunk'];
case 'skin_aquaPhoenix':
    return [_0x3fcb38, 0xc8, 'Aqua Phoenix', 'volcano/phoenix/200/0/phoenix'];
case 'skin_icePhoenix':
    return [_0x3fcb38, 0xc8, 'Ice Phoenix', 'volcano/phoenix/200/1/phoenix'];
case 'skin_ashPhoenix':
    return [_0x3fcb38, 0xc8, 'Ash Phoenix', 'volcano/phoenix/200/2/phoenix'];
case 'skin_redGiantPhoenix':
    return [_0x3fcb38, 0xc8, 'Red Giant\x0aPhoenix', 'volcano/phoenix/200/3/phoenix'];
case 'skin_goofyDragon':
    return [_0x33edcb, 0xc8, 'Goofy Dragon', 'land/dragon/200/0/dragon'];
case 'skin_desertDragon':
    return [_0x33edcb, 0xc8, 'Desert Dragon', 'land/dragon/200/1/dragon'];
case 'skin_forgeDragon':
    return [_0x33edcb, 0xc8, 'Forge Dragon', 'land/dragon/200/2/dragon'];
case 'skin_mythicalSerpent':
    return [_0x33edcb, 0xc8, 'Mythical Serpent', 'land/dragon/200/3/dragon'];
case 'skin_fireyDragon':
    return [_0x33edcb, 0xc8, 'Firey Dragon', 'land/dragon/200/4/dragon'];
case 'skin_technoSaber':
    return [_0x3700ee, 0xc8, 'Techno\x0aSabertooth', 'arctic/sabertooth/200/sabertooth'];
case 'skin_iceFox':
    return [_0x5c63c1, 0xc8, 'Ice Fox', 'arctic/arcticfox/200/arcticfox'];
case 'skin_clownfish':
    return [_0x2a05b1, 0xc8, 'Clownfish', 'ocean/trout/200/trout'];
case 'skin_tullyMonster':
    return [_0x4ac227, 0xc8, 'Tully\x0aMonster', 'ocean/seahorse/200/seahorse'];
case 'skin_vampireSquid':
    return [_0x108db6, 0xc8, 'Vampire\x0aSquid', 'ocean/octopus/200/octopus'];
case 'skin_cuttlefish':
    return [_0x4e129f, 0xc8, 'Cuttle Fish', 'ocean/squid/200/squid'];
case 'skin_deluxeShrimp':
    return [_0x5626d9, 0xc8, 'Deluxe\x0aShrimp', 'ocean/shrimp/200/shrimp'];
case 'skin_monochromeRabbit':
    return [_0x30b869, 0xc8, 'Monochrome\x0aRabbit', 'land/rabbit/200/rabbit'];
case 'skin_nightFox':
    return [_0x37ed61, 0xc8, 'Thief of\x0aThe Night', 'land/fox/200/fox'];
case 'skin_plagueRaptor':
    return [_0x17b74d, 0xc8, 'Plague\x0aRaptor', 'land/peacock/200/peacock.ui'];
case 'skin_titanBison':
    return [_0x1a1392, 0xc8, 'Titan Bison', 'desert/bison/200/bison'];
case 'skin_dowagerVarande':
    return [_0xbbbf69, 0xc8, 'Dowager Varande', 'desert/komododragon/200/0/komodo'];
case 'skin_emeprorVarande':
    return [_0xbbbf69, 0xc8, 'Emepror Varande', 'desert/komododragon/200/1/komodo'];
case 'skin_rubyDevil':
    return [_0x4cc8de, 0xc8, 'Ruby Devil', 'land/dinomonster/200/dinomonster'];
case 'skin_metalicCrab':
    return [_0x415723, 0xc8, 'Metallic Crab', 'ocean/crab/200/crab'];
case 'skin_queenFlame':
    return [_0x1e8cf7, 0xc8, 'Queen Flame', 'volcano/kingdragon/200/kingdragon'];
case 'halloween_wyrmous':
    return [_0x204cad, 0x64, 'Wyrmous', 'land/cobra/100/cobra'];
case 'halloween_equusthulhu':
    return [_0x2896b9, 0x64, 'Equusthulhu', 'land/donkey/100/donkey'];
case 'halloween_frostaline':
    return [_0x1c2360, 0x64, 'Frostaline', 'arctic/snowleopard/100/snowleopard'];
case 'halloween_pufferMace':
    return [_0x2ee5ae, 0x64, 'Puffermace', 'ocean/pufferfish/100/pufferfish'];
case 'halloween_carnageodactyl':
    return [_0x309a7e, 0x64, 'Carnageodactyl', 'desert/pterodactyl/100/pterodactyl_ability'];
case 'halloween_mrDollar':
    return [_0x2e747e, 0x64, 'Mr. Dollar', 'land/trex/100/trex'];
case 'halloween_wendigoDeer':
    return [_0x43cc06, 0x64, 'The Wendigo', 'land/deer/100/deer'];
case 'halloween_cactiRat':
    return [_0x37c7c9, 0x64, 'Cacti Rat', 'desert/kangaroorat/100/kangaroorat'];
case 'halloween_hiPower':
    return [_0x212372, 0x64, 'Swampster', 'land/hippo/100/hippo'];
case 'halloween_puumpkat':
    return [_0x345849, 0x64, 'Puumpkat', 'desert/meerkat/100/meerkat'];
case 'halloween_doomedarius':
    return [_0x335a3d, 0x64, 'The Doomedarius', 'desert/camel/100/camel'];
case 'halloween_roboMouse':
    return [_0x49d118, 0x64, 'Robo Mouse', 'land/mouse/100/mouse'];
case 'halloween_uncleSam':
    return [_0x1f6edc, 0x64, 'Uncle Sam', 'land/croc/100/croc'];
case 'halloween_zombieMole':
    return [_0x176a10, 0x64, 'Zombie Mole', 'land/mole/100/mole'];
case 'halloween_flammyHart':
    return [_0x332195, 0x64, 'Flammy Hart', 'desert/gazelle/100/gazelle'];
case 'halloween_gummyViper':
    return [_0x464d8f, 0x64, 'Gummy Viper', 'desert/rattlesnake/100/rattlesnake'];
case 'halloween_grimRipper':
    return [_0x103e98, 0x64, 'Grim Reaper', 'land/gorilla/100/gorilla'];
case 'halloween_bigCookie':
    return [_0x2cd95a, 0x64, 'Big Cookie', 'land/bigcat/100/bigcat'];
case 'halloween_gargolgon':
    return [_0x33edcb, 0x64, 'The Gargon', 'land/dragon/100/dragon'];
case 'halloween_candyRus':
    return [_0x13bbdd, 0x64, 'Candy Rus', 'arctic/walrus/100/walrus'];
case 'halloween_mantilian':
    return [_0x1185fd, 0x64, 'The Mantilian', 'land/lion/100/lion'];
case 'halloween_phantomRay':
    return [_0xd32f27, 0x64, 'Phantom Ray', 'ocean/stingray/100/stingray'];
case 'halloween_suitedToucan':
    return [_0x375310, 0x64, 'The Dapper', 'land/toucan/100/toucan'];
case 'halloween_vulgeist':
    return [_0x398a37, 0x64, 'The Vulgeist', 'desert/vulture/100/vulture'];
case 'halloween_burlone':
    return [_0x48646c, 0x64, 'The Burlone', 'desert/warthog/100/warthog'];
case 'halloween_unicornze':
    return [_0x4699c5, 0x64, 'Unicornze', 'land/zebra/100/zebra'];
case 'gold_blackDragon':
    return [_0x5186e1, 0x1, 'Golden\x0aBlack Dragon', 'volcano/blackdragon/1/blackdragon'];
case 'gold_kingDragon':
    return [_0x1e8cf7, 0x1, 'Golden\x0aKing Dragon', 'volcano/kingdragon/1/kingdragon'];
case 'gold_Dragon':
    return [_0x33edcb, 0x1, 'Golden\x0aDragon', 'land/dragon/1/dragon'];
case 'gold_kraken':
    return [_0x3a6f75, 0x1, 'Golden\x0aKraken', 'ocean/kraken/1/kraken'];
case 'gold_yeti':
    return [_0x1080d7, 0x1, 'Golden\x0aYeti', 'arctic/yeti/1/yeti'];
case 'gold_trex':
    return [_0x2e747e, 0x1, 'Golden\x0aT.Rex', 'land/trex/1/trex'];
case 'gold_kingCrab':
    return [_0x7820e, 0x1, 'Golden\x0aCrab', 'ocean/kingcrab/1/kingcrab'];
case 'gold_phoenix':
    return [_0x3fcb38, 0x1, 'Golden\x0aPhoenix', 'volcano/phoenix/1/phoenix'];
case 'gold_pterodactyl':
    return [_0x309a7e, 0x1, 'Golden\x0aPterodactyl', 'desert/pterodactyl/1/pterodactyl_ability'];
case 'gold_iceMonster':
    return [_0x16a00e, 0x1, 'Golden\x0aIce Monster', 'arctic/icemonster/1/icemonster'];
case 'gold_dinoMonster':
    return [_0x4cc8de, 0x1, 'Golden\x0aDino Monster', 'land/dinomonster/1/dinomonster'];
case 'gold_seaMonster':
    return [_0x16f423, 0x1, 'Golden\x0aSea Monster', 'ocean/seamonster/1/seamonster'];
case 'gold_landMonster':
    return [_0xc23298, 0x1, 'Golden\x0aLand Monster', 'volcano/landmonster/1/landmonster'];
case 'gold_giantScorion':
    return [_0x323318, 0x1, 'Golden\x0aGiant Scorpion', 'desert/scorpion/1/giantscorpion'];
case 'gold_bluewhale':
    return [_0x293d5d, 0x1, 'Golden\x0aBlue Whale', 'ocean/bluewhale/1/bluewhale'];
case 'gold_elephant':
    return [_0xce16df, 0x1, 'Golden\x0aElephant', 'land/elephant/1/elephant'];
case 'gold_cassowary':
    return [_0x7fee1e, 0x1, 'Golden\x0aCassowary', 'land/cassowary/1/cassowary'];
case 'gold_giantspider':
    return [_0x484a15, 0x1, 'Golden\x0aGiant Spider', 'land/giantspider/1/giantspider'];
case 'gold_blackwidow':
    return [_0xf85b36, 0x1, 'Golden\x0aBlackwidow', 'desert/blackwidow/1/blackwidow'];
case 'gold_mammoth':
    return [_0x1a507a, 0x1, 'Golden\x0aMammoth', 'arctic/mammoth/1/mammoth'];
case 'gold_hippo':
    return [_0x212372, 0x1, 'Golden\x0aHippo', 'land/hippo/1/hippo'];
case 'gold_ostrich':
    return [_0x189adc, 0x1, 'Golden\x0aOstrich', 'land/ostrich/1/ostrich'];
case 'gold_boa':
    return [_0x2cb4e3, 0x1, 'Golden\x0aBoa', 'land/boaconstrictor/1/boaconstrictor'];
case 'gold_komodo':
    return [_0xbbbf69, 0x1, 'Golden\x0aKomodo', 'desert/komododragon/1/komodo'];
case 'gold_killerwhale':
    return [_0x1be7e6, 0x1, 'Golden\x0aKiller Whale', 'ocean/killerwhale/1/killerwhale'];
case 'gold_sabertooth':
    return [_0x3700ee, 0x1, 'Golden\x0aSabertooth', 'arctic/sabertooth/1/sabertooth'];
case 'skin_blueDragon':
    return [_0x5186e1, 0x2, 'The\x0aAzure Bringer', 'volcano/blackdragon/2/blackdragon'];
case 'skin_kingRipper':
    return [_0x1e8cf7, 0x2, 'King\x0aRipper', 'volcano/kingdragon/2/kingdragon'];
case 'skin_kingStan':
    return [_0x1e8cf7, 0x3, 'King\x0aStan', 'volcano/kingdragon/3/kingdragon'];
case 'skin_kingShah':
    return [_0x1e8cf7, 0x4, 'King\x0aShah', 'volcano/kingdragon/4/kingdragon'];
case 'skin_dragon_gray':
    return [_0x33edcb, 0x2, 'Knight\x0aDragon', 'land/dragon/2/dragon'];
case 'skin_kraken_cyan':
    return [_0x3a6f75, 0x2, 'Chromatic\x0aKraken', 'ocean/kraken/2/kraken'];
case 'skin_yeti_emerald':
    return [_0x1080d7, 0x2, 'Emerald\x0aYeti', 'arctic/yeti/2/yeti'];
case 'skin_snowman':
    return [_0x5d7f3d, 0x1, 'The\x0aSnowman', 'arctic/snowman/1/snowman'];
case 'skin_snowgirl':
    return [_0x5d7f3d, 0x2, 'The\x0aSnowgirl', 'arctic/snowman/2/snowgirl'];
case 'skin_trex_gray':
    return [_0x2e747e, 0x2, 'Ember\x0aT.Rex', 'land/trex/2/trex'];
case 'skin_kingCrab':
    return [_0x7820e, 0x2, 'Amethyst\x0aCrab', 'ocean/kingcrab/2/kingcrab'];
case 'skin_phoenix_blue':
    return [_0x3fcb38, 0x2, 'Alpha\x0aPhoenix', 'volcano/phoenix/2/phoenix'];
case 'skin_pterodactyl_green':
    return [_0x309a7e, 0x2, 'Emerald\x0aPterodactyl', 'desert/pterodactyl/2/pterodactyl_ability'];
case 'skin_iceMonster':
    return [_0x16a00e, 0x2, 'Amethyst\x0aMonster', 'arctic/icemonster/2/icemonster'];
case 'skin_dinoMonster':
    return [_0x4cc8de, 0x2, 'Citrine\x0aMonster', 'land/dinomonster/2/dinomonster'];
case 'skin_seaMonster':
    return [_0x16f423, 0x2, 'Sapphire\x0aMonster', 'ocean/seamonster/2/seamonster'];
case 'skin_landMonster':
    return [_0xc23298, 0x2, 'Titanite\x0aMonster', 'volcano/landmonster/2/landmonster'];
case 'skin_orangeScorpion':
    return [_0x323318, 0x2, 'Carnelian\x0aScorpion', 'desert/scorpion/2/giantscorpion'];
case 'skin_bluewhale':
    return [_0x293d5d, 0x2, 'Albino\x0aBlue Whale', 'ocean/bluewhale/2/bluewhale'];
case 'skin_elephant':
    return [_0xce16df, 0x2, 'White\x0aElephant', 'land/elephant/2/elephant'];
case 'skin_cassowary':
    return [_0x7fee1e, 0x2, 'Cotton\x0aCassowary', 'land/cassowary/2/cassowary'];
case 'skin_giantspider':
    return [_0x484a15, 0x2, 'Goliath\x0aSpider', 'land/giantspider/2/giantspider'];
case 'skin_blackwidow':
    return [_0xf85b36, 0x2, 'Queen\x0aBlackwidow', 'desert/blackwidow/2/blackwidow'];
case 'skin_mammoth':
    return [_0x1a507a, 0x2, 'Black\x0aMammoth', 'arctic/mammoth/2/mammoth'];
case 'skin_hippo':
    return [_0x212372, 0x2, 'Pygmy\x0aHippo', 'land/hippo/2/hippo'];
case 'skin_ostrich':
    return [_0x189adc, 0x2, 'Ruffled\x0aOstrich', 'land/ostrich/2/ostrich'];
case 'skin_boa':
    return [_0x2cb4e3, 0x2, 'Tree\x0aBoa', 'land/boaconstrictor/2/boaconstrictor'];
case 'skin_komodo':
    return [_0xbbbf69, 0x2, 'Night\x0aKomodo', 'desert/komododragon/2/komodo'];
case 'skin_killerwhale':
    return [_0x1be7e6, 0x2, 'Albino\x0aOrca', 'ocean/killerwhale/2/killerwhale'];
case 'skin_sabertooth':
    return [_0x3700ee, 0x2, 'Margala\x0aSabertooth', 'arctic/sabertooth/2/sabertooth'];
case 'skin_tigerShark':
    return [_0xf16f79, 0x2, 'Tiger\x0aShark', 'ocean/shark/1/shark'];
case 'skin_hamerHeadShark':
    return [_0xf16f79, 0x3, 'Hammerhead\x0aShark', 'ocean/shark/2/shark'];
case 'skin_panda':
    return [_0x15db61, 0x2, 'Panda', 'land/panda/panda'];
case 'skin_zonkey':
    return [_0x2896b9, 0x3, 'Zonkey', 'land/donkey/2/zonkey'];
case 'skin_okapi':
    return [_0x4699c5, 0x2, 'Okapi', 'land/okapi/okapi'];
case 'skin_giantCroc':
    return [_0x1f6edc, 0x1, 'Giant\x0aCrocodile', 'land/croc/1/croc'];
case 'skin_purpleMouse':
    return [_0x49d118, 0x2, 'Purple\x0aMouse', 'land/mouse/2/mouse'];
case 'skin_prismaToucan':
    return [_0x375310, 0x6, 'Prisma\x0aToucan', 'land/toucan/6/toucan'];
case 'gold_mouse':
    return [_0x49d118, 0x2, 'Golden\x0aMouse', 'land/mouse/1/mouse'];
case 'skin_queenScarlet':
    return [_0x1e8cf7, 0x5, 'Queen\x0aScarlet', 'volcano/kingdragon/5/kingdragon'];
case 'skin_queenCeleste':
    return [_0x1e8cf7, 0x6, 'Queen\x0aCeleste', 'volcano/kingdragon/6/kingdragon'];
case 'skin_bigFoot':
    return [_0x46984b, 0x1, 'The\x0aBigfoot', 'land/bigfoot/1/thebigfoot'];
case 'skin_woollyRhino':
    return [_0x2fc4c1, 0x3, 'Woolly\x0aRhino', 'land/rhino/3/rhino'];
case 'darkPlagueRat':
    return [_0x49d118, 0xcc, 'Dark Plague\x0aRat', 'land/mouse/204/0/mouse'];
case 'lightPlagueRat':
    return [_0x49d118, 0xcc, 'Light Plague\x0aRat', 'land/mouse/204/1/mouse'];
case 'carrotRabbit':
    return [_0x30b869, 0xcc, 'Carrot\x0aRabbit', 'land/rabbit/204/rabbit'];
case 'darkMatterCrab':
    return [_0x415723, 0xcc, 'Dark Matter\x0aCrab', 'ocean/crab/204/crab'];
case 'necromancerMeerkat':
    return [_0x345849, 0xcc, 'Necromancer\x0aMeerkat', 'desert/meerkat/204/meerkat'];
case 'butcherPig':
    return [_0x51c352, 0xcc, 'Butcher\x0aPig', 'land/pig/204/0/pig'];
case 'hotdogPig':
    return [_0x51c352, 0xcc, 'Hot Dog\x0aPig', 'land/pig/204/1/pig'];
case 'voidScuttlingSquid':
    return [_0x4e129f, 0xcc, 'Void Scuttling\x0aSquid', 'ocean/squid/204/squid'];
case 'spideer':
    return [_0x4c7e27, 0xcc, 'Spideer', 'arctic/reindeer/204/reindeer'];
case 'blackAsuraFox':
    return [_0x37ed61, 0xcc, 'Black Asura\x0aFox', 'land/fox/204/fox'];
case 'candyCornWarthog':
    return [_0x48646c, 0xcc, 'Candy Corn\x0aWarthog', 'desert/warthog/204/warthog'];
case 'phantomGorilla':
    return [_0x103e98, 0xcc, 'Phantom\x0aGorilla', 'land/gorilla/204/gorilla.ui'];
case 'martianLeopard':
    return [_0x1c2360, 0xcc, 'Martian\x0aLeopard', 'arctic/snowleopard/204/snowleopard'];
case 'genieCheetah':
    return [_0x2cd95a, 0xcc, 'Genie\x0aCheetah', 'land/bigcat/204/cheetah'];
case 'chimeraTiger':
    return [_0x342f2b, 0xcc, 'Chimera\x0aTiger', 'land/tiger/204/tiger'];
case 'acidHusk':
    return [_0x398a37, 0xcc, 'Acid\x0aHusk', 'desert/vulture/204/vulture'];
case 'acutiRhino':
    return [_0x2fc4c1, 0xcc, 'Acuti\x0aRhino', 'land/rhino/204/rhino'];
case 'goldenDevilGoat':
    return [_0x56a5e3, 0xcc, 'Golden Devil\x0aGoat', 'arctic/markhor/204/2/markhor'];
case 'sunHippo':
    return [_0x212372, 0xcc, 'Sun\x0aHippo', 'land/hippo/204/hippo'];
case 'smileSpider':
    return [_0x484a15, 0xcc, 'Smile\x0aSpider', 'land/giantspider/204/giantspider'];
case 'bloodwidowSpider':
    return [_0xf85b36, 0xcc, 'Bloodwidow\x0aSpider', 'desert/blackwidow/204/blackwidow'];
case 'basiliskCassowary':
    return [_0x7fee1e, 0xcc, 'Basilisk\x0aCassowary', 'land/cassowary/204/cassowary'];
case 'magmaDragon':
    return [_0x33edcb, 0xcc, 'Magma\x0aDragon', 'land/dragon/204/dragon'];
case 'plasmacoreKingCrab':
    return [_0x7820e, 0xcc, 'Plasma-core King\x0aCrab', 'ocean/kingcrab/204/kingcrab'];
case 'frostWolf':
    return [_0x1080d7, 0xcc, 'Frost\x0aWolf', 'arctic/yeti/204/yeti'];
case 'tartarusRex':
    return [_0x2e747e, 0xcc, 'Tartarus\x0aRex', 'land/trex/204/trex'];
case 'cthulhuKraken':
    return [_0x3a6f75, 0xcc, 'Cthulhu\x0aKraken', 'ocean/kraken/204/kraken'];
case 'necromus':
    return [_0xc23298, 0xcc, 'Necromus', 'volcano/landmonster/204/0/landmonster'];
case 'planetEaterMonster':
    return [_0xc23298, 0xcc, 'Planet Eater\x0aMonster', 'volcano/landmonster/204/1/landmonster'];
case 'bloodCrystalMonster':
    return [_0x16a00e, 0xcc, 'Blood Crystal\x0aMonster', 'arctic/icemonster/204/icemonster'];
case 'superMouse':
    return [_0x49d118, 0xca, 'Super Mouse', 'land/mouse/202/mouse'];
case 'sushiShrimp':
    return [_0x5626d9, 0xca, 'Sushi Shrimp', 'ocean/shrimp/202/shrimp'];
case 'plasmaRat':
    return [_0x37c7c9, 0xca, 'Plasma Rat', 'desert/kangaroorat/202/kangaroorat'];
case 'chipmonk':
    return [_0x465a75, 0xca, 'Chipmonk', 'desert/chipmunk/202/chipmunk'];
case 'jackapole':
    return [_0x30b869, 0xca, 'Jackapole', 'land/rabbit/202/0/rabbit'];
case 'thugPigeon':
    return [_0x576572, 0xca, 'Thug Pigeon', 'land/pigeon/202/pigeon'];
case 'royalGuppy':
    return [_0x2a05b1, 0xca, 'Royal Guppy', 'ocean/trout/202/trout'];
case 'hollowRabbit':
    return [_0x30b869, 0xca, 'Hollow Rabbit', 'land/rabbit/202/1/rabbit'];
case 'ratMunk':
    return [_0xd214a6, 0xca, 'Ratmunk', 'desert/chipmunk/202/chipmunk'];
case 'toxicMole':
    return [_0x176a10, 0xca, 'Toxic Mole', 'land/mole/202/0/mole'];
case 'lightningLord':
    return [_0x1b4e84, 0xca, 'Lightning Lord', 'land/chicken/202/chicken'];
case 'ufoPigeon':
    return [_0x55a1a9, 0xca, 'UFO Pigeon', 'arctic/penguin/202/penguin'];
case 'cytokineticMole':
    return [_0x176a10, 0xca, 'Cytokinetic Mole', 'land/mole/202/1/mole'];
case 'piggyBank':
    return [_0x51c352, 0xca, 'Piggy Bank', 'land/pig/202/pig'];
case 'jackhammer':
    return [_0x482d7d, 0xca, 'Jackhammer', 'land/woodpecker/202/woodpecker'];
case 'leafySeadragon':
    return [_0x4ac227, 0xca, 'Leafy Seadragon', 'ocean/seahorse/202/seahorse'];
case 'soapySeal':
    return [_0xc81962, 0xca, 'Soapy Seal', 'arctic/seal/202/seal'];
case 'windupKakapo':
    return [_0xa1b5d7, 0xca, 'Wind-up Kakapo', 'forest/kakapo/202/kakapo'];
case 'mevazor':
    return [_0x43cc06, 0xca, 'Mevazor', 'land/deer/202/0/deer'];
case 'flyMango':
    return [_0x4b419b, 0xca, 'Fly Mango', 'ocean/flamingo/202/flamingo'];
case 'psychedelicSquid':
    return [_0x4e129f, 0xca, 'Psychedelic Squid', 'ocean/squid/202/squid'];
case 'piebaldCosmos':
    return [_0x4c7e27, 0xca, 'Piebald Cosmos', 'arctic/reindeer/202/reindeer'];
case 'retroNeonGazelle':
    return [_0x332195, 0xca, 'Retro Neon Gazelle', 'desert/gazelle/202/gazelle'];
case 'divineDeer':
    return [_0x43cc06, 0xca, 'Divine Deer', 'land/deer/202/1/deer'];
case 'grassHedgehog':
    return [_0x414bbd, 0xca, 'Grass Hedgehog', 'land/hedgehog/202/hedgehog'];
case 'spectrumPeacock':
    return [_0x17b74d, 0xca, 'Spectrum Peacock', 'land/peacock/202/peacock'];
case 'discoJellyfish':
    return [_0x402b8c, 0xca, 'Disco Jellyfish', 'ocean/jellyfish/202/0/jellyfish'];
case 'iceFox':
    return [_0x5c63c1, 0xca, 'Ice Fox', 'arctic/arcticfox/202/arcticfox'];
case 'fireFox':
    return [_0x21519f, 0xca, 'Fire Fox', 'desert/fennecfox/202/1/fennecfox'];
case 'muscipulaRaven':
    return [_0x2555a8, 0xca, 'Muscipula Raven', 'forest/raven/202/raven'];
case 'sneakyFox':
    return [_0x37ed61, 0xca, 'Sneaky Fox', 'land/fox/202/fox'];
case 'twistedHorror':
    return [_0x402b8c, 0xca, 'Twisted Horror', 'ocean/jellyfish/202/1/jellyfish'];
case 'purpleFireFox':
    return [_0x21519f, 0xca, 'Purple Fire Fox', 'desert/fennecfox/202/1/fennecfox'];
case 'synthZebra':
    return [_0x4699c5, 0xca, 'Synth Zebra', 'land/zebra/202/zebra'];
case 'moltenGlassTurtle':
    return [_0x41ea25, 0xca, 'Molten Glass Turtle', 'ocean/turtle/202/turtle'];
case 'monitorMuskox':
    return [_0xc6c00, 0xca, 'Monitor Muskox', 'arctic/muskox/202/muskox'];
case 'headlessMule':
    return [_0x2896b9, 0xca, 'Headless Mule', 'land/donkey/202/donkey'];
case 'quilinGiraffe':
    return [_0x1c4f76, 0xca, 'Quilin Giraffe', 'land/giraffe/202/0/giraffe'];
case 'etherStingray':
    return [_0xd32f27, 0xca, 'Ether Stingray', 'ocean/stingray/202/0/stingray'];
case 'potatoWalrus':
    return [_0x13bbdd, 0xca, 'Potato Walrus', 'arctic/walrus/202/walrus'];
case 'fungalCamel':
    return [_0x335a3d, 0xca, 'Fungal Camel', 'desert/camel/202/camel'];
case 'draquorum':
    return [_0x1c4f76, 0xca, 'Draquorum', 'land/giraffe/202/1/giraffe'];
case 'pancakeStingray':
    return [_0xd32f27, 0xca, 'Pancake Stingray', 'ocean/stingray/202/1/stingray'];
case 'kongrilla':
    return [_0x103e98, 0xca, 'Kongrilla', 'land/gorilla/202/gorilla'];
case 'corpseFlowerToucan':
    return [_0x375310, 0xca, 'Corpse Flower Toucan', 'land/toucan/202/toucan'];
case 'ballonPufferfish':
    return [_0x2ee5ae, 0xca, 'Balloon Pufferfish', 'ocean/pufferfish/202/pufferfish'];
case 'astralLeopard':
    return [_0x1c2360, 0xca, 'Astral Leopard', 'arctic/snowleopard/202/snowleopard'];
case 'cmykNeonCheetah':
    return [_0x2cd95a, 0xca, 'C.M.Y.K NeoN Cheetak', 'land/bigcat/202/cheetah'];
case 'beekeeperBear':
    return [_0x15db61, 0xca, 'Beekeeper Bear', 'land/bear/202/bear'];
case 'dalmatianPelican':
    return [_0x4ba38f, 0xca, 'Dalmatian Pelican', 'ocean/pelican/202/pelican'];
case 'rocketSwordfish':
    return [_0x31cc16, 0xca, 'Rocket Swordfish', 'ocean/swordfish/202/swordfish'];
case 'okamiWolf':
    return [_0x4b16ca, 0xca, 'Okami Wolf', 'arctic/wolf/202/wolf'];
case 'anubisHyena':
    return [_0x233419, 0xca, 'Anubis Hyena', 'desert/hyena/202/hyena'];
case 'gobeeBear':
    return [_0x5b01a7, 0xca, 'Gobee Bear', 'desert/gobibear/202/gobibear'];
case 'chimeraLion':
    return [_0x1185fd, 0xca, 'Chimera Lion', 'land/lion/202/lion'];
case 'meteorFalcon':
    return [_0x12d178, 0xca, 'Meteor Falcon', 'land/falcon/202/falcon'];
case 'naKika':
    return [_0x108db6, 0xca, 'Na Kika', 'ocean/octopus/202/octopus'];
case 'waterBear':
    return [_0x546d88, 0xca, 'Water Bear', 'arctic/bear/202/bear'];
case 'croczilla':
    return [_0x1f6edc, 0xca, 'Croczilla', 'land/croc/202/0/croc'];
case 'ammit':
    return [_0x1f6edc, 0xca, 'Ammit', 'land/croc/202/1/croc'];
case 'cottonCandyRhino':
    return [_0x2fc4c1, 0xca, 'Cotton Candy Rhino', 'land/rhino/202/rhino'];
case 'floralWolverine':
    return [_0x57db06, 0xca, 'Floral Wolverine', 'arctic/wolverine/202/wolverine'];
case 'minotaur':
    return [_0x1a1392, 0xca, 'Minotaur', 'desert/bison/202/bison'];
case 'planetHippo':
    return [_0x212372, 0xca, 'Planet Hippo', 'land/hippo/202/hippo'];
case 'seaAngelOrca':
    return [_0x1be7e6, 0xca, 'Sea Angel Orca', 'ocean/killerwhale/202/killerwhale'];
case 'icefangSabertooth':
    return [_0x3700ee, 0xca, 'Ice-Fang Sabertooth', 'arctic/sabertooth/202/sabertooth'];
case 'galaxyKomodoDragon':
    return [_0xbbbf69, 0xca, 'Galaxy Komodo Dragon', 'desert/komododragon/202/komododragon'];
case 'sapphireCaveSpider':
    return [_0x484a15, 0xca, 'Sapphire Cave Spider', 'land/giantspider/202/giantspider'];
case 'pastelCassowary':
    return [_0x7fee1e, 0xca, 'Pastel Cassowary', 'land/cassowary/202/cassowary'];
case 'whaleboat':
    return [_0x293d5d, 0xca, 'Whale Boat', 'ocean/bluewhale/202/1/bluewhale'];
case 'acidMammoth':
    return [_0x1a507a, 0xca, 'Acid Mammoth', 'arctic/mammoth/202/0/mammoth'];
case 'iceWizardElephant':
    return [_0xce16df, 0xca, 'Ice Wizard Elephant', 'land/elephant/202/elephant'];
case 'ancientIslandMonster':
    return [_0x293d5d, 0xca, 'Ancient Island Monster', 'ocean/bluewhale/202/0/bluewhale'];
case 'crystalGolem':
    return [_0x1a507a, 0xca, 'Crystal Golem', 'arctic/mammoth/202/1/mammoth'];
case 'aberrantDragon':
    return [_0x33edcb, 0xca, 'Aberrant Dragon', 'land/dragon/202/0/dragon'];
case 'agDragon':
    return [_0x33edcb, 0xce, 'AG Dragon', 'land/dragon/206/dragon'];
case 'hyporevenantRex':
    return [_0x2e747e, 0xca, 'Hyporevenant Rex', 'land/trex/202/0/trex'];
case 'giantSquid':
    return [_0x3a6f75, 0xca, 'Giant Squid', 'ocean/kraken/202/0/kraken'];
case 'lovelyYeti':
    return [_0x1080d7, 0xca, 'Lovely Yeti', 'arctic/yeti/202/0/yeti'];
case 'abyssalKingCrab':
    return [_0x7820e, 0xca, 'Abyssal King Crab', 'ocean/kingcrab/202/kingcrab'];
case 'hydrothothKraken':
    return [_0x3a6f75, 0xca, 'Hydrothoth Kraken', 'ocean/kraken/202/1/kraken'];
case 'frostEyeDemon':
    return [_0x1080d7, 0xca, 'Frosty Eye Demon', 'arctic/yeti/202/1/yeti'];
case 'ghoulDragon':
    return [_0x33edcb, 0xca, 'Ghoul Dragon', 'land/dragon/202/1/dragon'];
case 'tankMonster':
    return [_0x4cc8de, 0xca, 'Tank Monster', 'land/dinomonster/202/dinomonster'];
case 'fighterJet':
    return [_0xc23298, 0xca, 'Fighter Jet', 'volcano/landmonster/202/landmonster'];
case 'submarineMonster':
    return [_0x16f423, 0xca, 'Submarine Monster', 'ocean/seamonster/202/seamonster'];
case 'kingGraveyard1':
    return [_0x1e8cf7, 0xca, 'King Graveyard', 'volcano/kingdragon/202/kingdragon'];
case 'fairyRabbit':
    return [_0x30b869, 0xdc, 'Fairy Rabbit', 'land/rabbit/220/rabbit'];
case 'darkMatterWarthog':
    return [_0x48646c, 0xca, 'Dark Matter Warthog', 'desert/warthog/220/warthog'];
case 'fumigatorPig':
    return [_0x51c352, 0xdc, 'Fumigator Pig', 'land/pig/220/pig'];
case 'moltenToucan':
    return [_0x375310, 0xdc, 'Molten Toucan', 'land/toucan/220/toucan.ui'];
case 'summonerWolverine':
    return [_0x57db06, 0xdc, 'Summoner Wolverine', 'arctic/wolverine/220/wolverine'];
case 'golemMammoth':
    return [_0x1a507a, 0xdc, 'Golem Mammoth', 'arctic/mammoth/220/mammoth'];
case 'glacialDemon':
    return [_0x1080d7, 0xdc, 'Glacial Demon', 'arctic/yeti/220/yeti'];
case 'cordyceraDino':
    return [_0x4cc8de, 0xdc, 'Cordycera Dino', 'land/dinomonster/220/dinomonster'];
case 'blazingIceMonster':
    return [_0x16a00e, 0xdc, 'BlazingIce Monster', 'arctic/icemonster/220/icemonster'];
case 'bioMutantTRex':
    return [_0x2e747e, 0xdc, 'Bio Mutant T-rex', 'land/trex/220/trex'];
case 'sunsetOstrich':
    return [_0x189adc, 0xdc, 'Sunset Ostrich', 'land/ostrich/220/ostrich'];
case 'lightwaveElephant':
    return [_0xce16df, 0xdc, 'Lightwave Elephant', 'land/elephant/220/elephant'];
case 'inkRhino':
    return [_0x2fc4c1, 0xdc, 'Ink Rhino', 'land/rhino/220/rhino'];
case 'dimensionalMonster':
    return [_0x16f423, 0xdc, 'Dimensional Monster', 'ocean/seamonster/220/seamonster'];
case 'nebuladonScorpion':
    return [_0x323318, 0xdc, 'Nebuladon Scorpion', 'desert/scorpion/220/giantscorpion'];
case 'ghastlyJadeLion':
    return [_0x1185fd, 0xdc, 'Ghastly Jade Lion', 'land/lion/220/lion'];
case 'belphegor':
    return [_0xc23298, 0xdc, 'Belphegor', 'volcano/landmonster/220/landmonster'];
case 'muscipulaRaven':
    return [_0x2555a8, 0xdc, 'Muscipula Raven', 'forest/raven/220/raven'];
case 'behemothHiveDragon':
    return [_0x33edcb, 0xdc, 'Behemoth Hive Dragon', 'land/dragon/220/dragon'];
case 'okamiWolf':
    return [_0x4b16ca, 0xdc, 'Okami Wolf', 'arctic/wolf/220/wolf'];
case 'starCrusherCrab':
    return [_0x7820e, 0xdc, 'Star Crusher Crab', 'ocean/kingcrab/220/kingcrab'];
case 'drBrainiopod':
    return [_0x3a6f75, 0xdc, 'Dr. Brainiopod', 'ocean/kraken/220/kraken'];
case 'xmas22_iceHuskTrout':
    return [_0x2a05b1, 0xde, 'Ice Husk Trout', 'ocean/trout/222/trout'];
case 'xmas22_jollyRabbit':
    return [_0x30b869, 0xde, 'Jolly Rabbit', 'land/rabbit/222/rabbit'];
case 'xmas22_peppermintLandMonster':
    return [_0xc23298, 0xde, 'Peppermint Land Monster', 'volcano/landmonster/222/landmonster'];
case 'xmas22_gingerbreadKraken':
    return [_0x3a6f75, 0xde, 'Gingerbread Kraken', 'ocean/kraken/222/kraken'];
case 'val23_wolverine':
    return [_0x57db06, 0x0, 'Valentine Wolverine', 'arctic/wolverine/0/223/wolverine'];
case 'val23_orca':
    return [_0x1be7e6, 0x0, 'Valentine Orca', 'ocean/killerwhale/0/223/killerwhale'];
case 'val23_mamoth':
    return [_0x1a507a, 0x0, 'Valentine Mammoth', 'arctic/mammoth/0/223/mammoth'];
case 'val23_whale':
    return [_0x293d5d, 0x0, 'Valentine Whale', 'ocean/bluewhale/0/223/bluewhale'];
case 'val23_walrus':
    return [_0x13bbdd, 0x0, 'Valentine Walrus', 'arctic/walrus/0/223/walrus'];
case 'val23_stingray':
    return [_0xd32f27, 0x0, 'Valentine Stingray', 'ocean/stingray/0/223/stingray'];
case 'val23_snowleopard':
    return [_0x1c2360, 0x0, 'Valentine Snow Leopard', 'arctic/snowleopard/0/223/snowleopard'];
case 'val23_gorilla':
    return [_0x103e98, 0x0, 'Valentine Gorilla', 'land/gorilla/0/223/gorilla'];
}
return null;
};
var _0x13295b = _0x53ddcc,
_0xec194 = _0x322197;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194;

function _0x53ddcc() {
_0x53ddcc['superClass']['call'](this, _0x300b23);
}
_0x53ddcc['prototype']['loadShopData'] = function (_0xcc99cb) {
_0x53ddcc['superClass']['prototype']['loadShopData']['call'](this, _0xcc99cb), this['itemName'] = _0xcc99cb['itemName'], this['title'] = _0xcc99cb['title'], this['saleType'] = _0xcc99cb['saleType'], this['salePrice'] = _0xcc99cb['salePrice'];
}, _0x53ddcc['prototype']['getShopImageSrc'] = function () {
return 'shop/deals/' + this['itemName']['toLowerCase']() + '.png';
}, _0x53ddcc['prototype']['getImage'] = function () {
var _0x310782 = new Image();
return _0x310782['className'] = 'shopdeal', _0x310782['src'] = 'shop/deals/' + this['itemName']['toLowerCase']() + '.png', _0x310782;
}, _0x53ddcc['prototype']['getTitle'] = function () {
var _0x389592 = '' + this['title'];
return _0x389592['replace']('\x0a', '<br>')['toUpperCase']();
}, _0x53ddcc['prototype']['generateHtml'] = function (_0xcdf19) {
var _0x1864df = 'item deal' + (this['coinsPrice'] == -0x1 ? ' itemOwned buyItem' : ' buyItem') + ' ' + this['itemName'];
if (_0xcdf19 == _0x209e50) _0x1864df = _0x1864df + ' confirm_deal';
var _0x463132 = _0x132dab('', _0x1864df),
    _0x25e45a = _0x132dab('', 'image ' + 'biome_' + this['biome']),
    _0x184a12 = _0x132dab('', 'price'),
    _0x1d575f = _0x132dab('', 'orig-value');
_0x463132['setAttribute']('title', this['getTitle']()['replace']('<BR>', ' ')), _0x184a12['innerHTML'] = this['getTitle']();
var _0x58f7b5 = this['getImage']();
_0x25e45a['appendChild'](_0x58f7b5);
if (this['coinsPrice'] > 0x0) {
    var _0x36f32e = '';
    if (this['saleType'] == 0x1) _0x36f32e = 'NEW BUNDLE';
    else {
        if (this['saleType'] == 0x2) _0x36f32e = 'SALE BUNDLE';
    }
    if (_0x36f32e != '') {
        var _0x302fab = _0x132dab('newItem_' + this['animalType'], 'newItem');
        _0x302fab['innerHTML'] = _0x36f32e, _0x463132['appendChild'](_0x302fab);
    }
}
_0x463132['appendChild'](_0x25e45a), _0x463132['appendChild'](_0x184a12);
if (this['saleType'] == 0x2) {
    var _0x348c0c = new Image();
    _0x348c0c['className'] = 'buycoin-img', _0x348c0c['src'] = 'shop/mopecoin.png';
    var _0x1978c8 = _0x513ee7('span', '', 'buycoin-price');
    _0x1978c8['innerHTML'] = this['coinsPrice'], _0x1d575f['appendChild'](_0x348c0c), _0x1d575f['appendChild'](_0x1978c8);
}
if (this['coinsPrice'] > 0x0) _0x463132['appendChild'](_0x1d575f), _0x463132['appendChild'](this['btn']['generateHtml'](_0xcdf19));
else {}
return _0x463132;
}, _0x53ddcc['prototype']['fillItemDetails'] = function (_0xe042dd) {
var _0x252539 = _0x132dab('bundleSkins', 'bundleSkins_' + this['itemName']);
_0xe042dd['appendChild'](_0x252539);
if (this['data']['aniTypes'] == undefined)
    for (i = 0x0; i < _0x9a4156['shop']['allItems']['length']; i++) {
        var _0x31e4a6 = _0x9a4156['shop']['allItems'][i];
        console['log'](_0x31e4a6['data']);
        if (_0x31e4a6['data']['shopCategory'] == 'halloween') console['log'](_0x31e4a6['data']['promotions'] + ' = ' + this['itemName']['toLowerCase']());
        if (_0x31e4a6 && _0x31e4a6['data']['promotions'] && _0x31e4a6['data']['promotions']['toLowerCase']()['indexOf'](this['itemName']['toLowerCase']()) > -0x1) {
            var _0x51a0d5 = _0x9a4156['getPostFixForItem'](_0x31e4a6['data']['itemName']),
                _0x2a30e6 = _0x31e4a6['getImagePromo'](_0x51a0d5);
            _0x2a30e6['className'] = 'bundleSkinImg' + (_0x31e4a6['coinsPrice'] == -0x1 ? ' bought' : ''), _0x2a30e6['width'] = '40px', _0x252539['appendChild'](_0x2a30e6);
        }
    } else {
        if (this['data']['aniTypes'] != undefined)
            for (i = 0x0; i < this['data']['aniTypes']['length']; i++) {
                if (this['data']['aniTypes'][i] == 0x3e8) continue;
                var _0x3429d4 = _0x9a4156['getSkinPath'](this['data']['aniTypes'][i], this['data']['theme']);
                console['log'](_0x3429d4);
                var _0x2a30e6 = new Image();
                _0x2a30e6['src'] = _0x3429d4, _0x2a30e6['className'] = 'bundleSkinImg aniTypes', _0x2a30e6['width'] = '40px', _0x252539['appendChild'](_0x2a30e6);
            }
    }
}, window['ShopDeal'] = _0x53ddcc;
var _0x300b23 = 0x3;
_0x3a0dda['setCustomClassForShopItem'](_0x53ddcc, _0x300b23);
var _0x13295b = _0x248a03,
_0xec194 = _0x322197;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194;

function _0x248a03() {
_0x248a03['superClass']['call'](this, _0x300b23);
}
_0x248a03['prototype']['loadShopData'] = function (_0x5690a1) {
_0x248a03['superClass']['prototype']['loadShopData']['call'](this, _0x5690a1), this['itemName'] = _0x5690a1['itemName'], this['title'] = _0x5690a1['title'], this['credits'] = _0x5690a1['credits'], this['saleType'] = _0x5690a1['saleType'], this['salePrice'] = _0x5690a1['salePrice'];
}, _0x248a03['prototype']['getShopImageSrc'] = function () {
return 'shop/feature/' + this['itemName']['toLowerCase']() + '.png';
}, _0x248a03['prototype']['getImage'] = function () {
var _0x1b4e80 = new Image();
return _0x1b4e80['className'] = 'shopFeature', _0x1b4e80['src'] = 'shop/feature/' + this['itemName']['toLowerCase']() + '.png', _0x1b4e80;
}, _0x248a03['prototype']['getTitle'] = function () {
var _0x289823 = '' + this['title'];
return _0x289823['replace']('\x0a', '<br>')['toUpperCase']();
}, _0x248a03['prototype']['generateHtml'] = function (_0x3dd975) {
var _0x3b8f02 = 'item feature ' + (this['coinsPrice'] == -0x1 ? ' itemOwned' : ' buyItem') + ' ' + this['itemName'];
if (_0x3dd975 == _0x209e50) _0x3b8f02 = _0x3b8f02 + ' confirm_item';
var _0x5c6e51 = _0x132dab('', _0x3b8f02),
    _0x1b20ed = _0x132dab('', 'image ' + 'biome_' + this['biome']),
    _0x57e03f = _0x132dab('', 'price');
_0x57e03f['innerHTML'] = this['title'];
var _0x2a29a7 = this['getImage']();
_0x1b20ed['appendChild'](_0x2a29a7);
if (this['coinsPrice'] > 0x0) {
    var _0x3984d9 = '';
    if (this['saleType'] == 0x1) _0x3984d9 = 'NEW';
    else {
        if (this['saleType'] == 0x2) _0x3984d9 = 'SALE';
    }
    if (_0x3984d9 != '') {
        var _0x17d0b2 = _0x132dab('newItem_' + this['animalType'], 'newItem');
        _0x17d0b2['innerHTML'] = _0x3984d9, _0x5c6e51['appendChild'](_0x17d0b2);
    }
}
_0x5c6e51['appendChild'](_0x1b20ed), _0x5c6e51['appendChild'](_0x57e03f);
if (this['coinsPrice'] > 0x0) _0x5c6e51['appendChild'](this['btn']['generateHtml'](_0x3dd975));
else {
    if (_0x3dd975 != _0x59b361) var _0x28bd53 = this;
}
return _0x5c6e51;
}, _0x248a03['prototype']['fillItemDetails'] = function (_0x57bdcd) {
var _0x3b44b2 = _0x132dab('bundleSkins', 'bundleSkins_' + this['itemName']);
_0x57bdcd['appendChild'](_0x3b44b2);
if (this['data']['aniTypes'] == undefined)
    for (i = 0x0; i < _0x9a4156['shop']['allItems']['length']; i++) {
        var _0x250e32 = _0x9a4156['shop']['allItems'][i];
        if (_0x250e32 && _0x250e32['data']['promotions'] && _0x250e32['data']['promotions']['toLowerCase']()['indexOf'](this['itemName']['toLowerCase']()) > -0x1) {
            var _0x48ecd0 = _0x9a4156['getPostFixForItem'](_0x250e32['data']['itemName']),
                _0x25e3c4 = _0x250e32['getImagePromo'](_0x48ecd0);
            _0x25e3c4['className'] = 'bundleSkinImg' + (_0x250e32['coinsPrice'] == -0x1 ? ' bought' : ''), _0x25e3c4['width'] = '40px', _0x3b44b2['appendChild'](_0x25e3c4);
        }
    } else
        for (i = 0x0; i < this['data']['aniTypes']['length']; i++) {
            if (this['data']['aniTypes'][i] == 0x3e8) continue;
            var _0x1ede88 = _0x9a4156['getSkinPath'](this['data']['aniTypes'][i], this['data']['theme']);
            console['log'](_0x1ede88);
            var _0x25e3c4 = new Image();
            _0x25e3c4['src'] = _0x1ede88, _0x25e3c4['className'] = 'bundleSkinImg aniTypes', _0x25e3c4['width'] = '40px', _0x3b44b2['appendChild'](_0x25e3c4);
        }
}, window['ShopFeature'] = _0x248a03;
var _0x5354f5 = 0x4;
_0x3a0dda['setCustomClassForShopItem'](_0x248a03, _0x5354f5);
var _0x13295b = _0x3526a3,
_0xec194 = _0x322197;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194;
var _0x470583 = 0x3e9;

function _0x3526a3(_0x4a8e2f, _0x3ec796) {
_0x3526a3['superClass']['call'](this, _0x470583);
}
_0x3526a3['prototype']['data'] = null, _0x3526a3['prototype']['loadShopData'] = function (_0x2ffb66) {
_0x3526a3['superClass']['prototype']['loadShopData']['call'](this, _0x2ffb66), this['data'] = _0x2ffb66, this['getPropType']();
}, _0x3526a3['prototype']['itemType'] = null, _0x3526a3['prototype']['propType'] = null, _0x3526a3['prototype']['propColor'] = null, _0x3526a3['prototype']['getPropType'] = function () {
if (this['data'] == null) return;
var _0x40879c = this['data']['id']['split']('_');
_0x40879c['length'] == 0x3 && (this['itemType'] = _0x40879c[0x0], this['propType'] = _0x40879c[0x1], this['propColor'] = _0x40879c[0x2]);
}, window['PropItem'] = _0x3526a3, _0x3a0dda['setCustomClassForShopItem'](_0x3526a3, _0x470583);

function _0x24fc68(_0x1d9453) {
this['tabs'] = {
    'titles': new Array()
}, this['data'] = _0x1d9453, this['load'] = function () {
    for (i = 0x0; i < this['data']['length']; i++) {
        var _0x2f3e4d = this['data'][i]['itemType'];
        this['tabs'][_0x2f3e4d] === undefined && (this['tabs']['titles']['push'](_0x2f3e4d), this['tabs'][_0x2f3e4d] = new Array()), this['tabs'][_0x2f3e4d]['push'](this['data'][i]);
    }
};
}
var _0x13295b = _0x42f353,
_0xec194 = _0x54c5f1;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194, _0x13295b['prototype']['arenaState'] = 0x0, _0x13295b['prototype']['fightNumber'] = 0x0, _0x13295b['prototype']['climaxType'] = 0x1, _0x13295b['prototype']['timer'] = 0x0, _0x13295b['prototype']['timerTxt'] = null, _0x13295b['prototype']['p1Name'] = null, _0x13295b['prototype']['p2Name'] = null, _0x13295b['prototype']['p1Bites'] = 0x0, _0x13295b['prototype']['p2Bites'] = 0x0, _0x13295b['prototype']['arenaRad'] = 0xa, _0x13295b['prototype']['nArenaRad'] = 0xa, _0x13295b['prototype']['oArenaRad'] = 0xa, _0x13295b['prototype']['isCountdownTimer'] = !![], _0x13295b['prototype']['p1PushRemain'] = 0x0, _0x13295b['prototype']['p1DashRemain'] = 0x0, _0x13295b['prototype']['p2PushRemain'] = 0x0, _0x13295b['prototype']['p2DashRemain'] = 0x0, _0x42f353['prototype']['setTimer'] = function (_0x4cd1b8) {
var _0x1c6f65 = '',
    _0x42ccdc = 0x19;
if (this['isCountdownTimer']) _0x1c6f65 = '' + _0x4cd1b8;
else {
    _0x42ccdc = 0xf;
    if (this['isCpuVsPlayer']) _0x1c6f65 = '1v1 REDEMPTION';
    else {
        if (this['arenaModeType'] == 0x2) _0x1c6f65 = 'MATCH #' + this['fightNumber'];
        else _0x1c6f65 = 'FIGHT\x0a#' + this['fightNumber'];
    }
    _0x1c6f65 = _0x187b4f['name'] + '\x0a' + _0x1c6f65;
}
if (this['isCountdownTimer']) _0x42ccdc = Number(_0x4cd1b8) ? 0x1e : _0x42ccdc;
null == this['timerTxt'] ? (this['timerTxt'] = new _0x128c61(_0x42ccdc, '#FFFFFF'), this['timerTxt']['strokeW'] = 0x2, this['timerTxt']['multiLine'] = !![], this['timerTxt']['renderScale'] = 0x5, this['timerTxt']['setText'](_0x1c6f65)) : (this['timerTxt']['setFontSize'](_0x42ccdc), this['timerTxt']['setText'](_0x1c6f65));
var _0x250fca = 'MOPE';
if (this['arenaModeType'] == 0x1) _0x250fca = 'NOOB';
else {
    if (this['arenaModeType'] == 0x2) _0x250fca = 'PRO';
}
var _0x3d3c86 = this['climaxType'] == 0x1 ? 'LAST ' + _0x250fca + ' STANDING' : this['maxBitesToWin'] + ' BITES WINS';
null == this['climaxTxt'] ? (this['climaxTxt'] = new _0x128c61(_0x42ccdc, '#FFFFFF'), this['climaxTxt']['strokeW'] = 0x2, this['climaxTxt']['multiLine'] = !![], this['climaxTxt']['renderScale'] = 0x5, this['climaxTxt']['setText'](_0x3d3c86)) : (this['climaxTxt']['setFontSize'](0xf), this['climaxTxt']['setText'](_0x3d3c86));
}, _0x42f353['prototype']['playerFontSize'] = 0xa, _0x42f353['prototype']['setP1'] = function (_0x5738f6) {
var _0x3abf87 = '' + _0x5738f6;
null == this['p1Name'] ? (this['p1Name'] = new _0x128c61(this['playerFontSize'], 'cyan'), this['p1Name']['strokeW'] = 0x2, this['p1Name']['multiLine'] = !![], this['p1Name']['renderScale'] = 0x2, this['p1Name']['setText'](_0x3abf87)) : (this['p1Name']['setFontSize'](this['playerFontSize']), this['p1Name']['setText'](_0x3abf87));
}, _0x42f353['prototype']['setP2'] = function (_0x4cf643) {
var _0x3b6c74 = '' + _0x4cf643;
null == this['p2Name'] ? (this['p2Name'] = new _0x128c61(this['playerFontSize'], 'yellow'), this['p2Name']['strokeW'] = 0x2, this['p2Name']['multiLine'] = !![], this['p2Name']['renderScale'] = 0x2, this['p2Name']['setText'](_0x3b6c74)) : (this['p2Name']['setFontSize'](this['playerFontSize']), this['p2Name']['setText'](_0x3b6c74));
}, _0x42f353['prototype']['updateZ'] = function () {
this['z'] = 0x186a2;
}, _0x42f353['prototype']['dotX'] = 0.33, _0x42f353['prototype']['dotY'] = 0.77;
var _0x3eee1b = 0x23,
_0x50267c = 0.72,
_0xa6878a = 0.2,
_0x344fbd = 0.65,
_0x262b70 = 0xa;
_0x42f353['prototype']['glowEffect'] = 0x0, _0x42f353['prototype']['ver'] = 0x2, _0x42f353['prototype']['customDraw'] = function (_0x4c2e1d) {
if (_0x50a9ba && _0x2db4b9 && _0x334ab6 == this['id']) this['drawCanvas']();
(this['arenaState'] == 0x2 || this['arenaState'] == 0x3) && this['displayEndScreen']();
_0x4ac9cf['save'](), _0x4ac9cf['rotate'](-0.5 * Math['PI']), _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.065, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, this['rad'], 0x0, 0x2 * Math['PI'], ![]), _0x4ac9cf['arc'](0x0, 0x0, this['arenaRad'], 0x0, 0x2 * Math['PI'], !![]), _0x4ac9cf['fillStyle'] = 'red', _0x4ac9cf['closePath'](), _0x4ac9cf['fill'](), _0x4ac9cf['restore']();
if (_0x334ab6 == this['id']) {
    if (_0x334ab6 == this['id'] && this['arenaState'] == 0x1) {
        _0x4ac9cf['save'](), _0x4ac9cf['lineWidth'] = 0x4, _0x4ac9cf['globalAlpha'] = 0.5;
        var _0x265dd9 = -0x2 * this['timeoutAngle'];
        if (this['closingAngleSet']) {
            var _0x4a7b5d = -0x2 * this['arenaClosingAngle'];
            _0x4ac9cf['save'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, this['rad'] - 0x2, _0x4a7b5d * Math['PI'], _0x265dd9 * Math['PI']), _0x4ac9cf['strokeStyle'] = 'red', _0x4ac9cf['stroke'](), _0x4ac9cf['restore'](), _0x4ac9cf['save'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, this['rad'] - 0x2, 0x0, _0x4a7b5d * Math['PI']), _0x4ac9cf['strokeStyle'] = '#32ff00', _0x4ac9cf['stroke'](), _0x4ac9cf['restore']();
        } else _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, this['rad'] - 0x2, 0x0, _0x265dd9 * Math['PI']), _0x4ac9cf['strokeStyle'] = '#32ff00', _0x4ac9cf['stroke']();
        _0x4ac9cf['restore']();
    }
    if (this['showTimerAngle']) {
        _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.5;
        var _0x9fb478 = -0x2 * this['timerAngle'];
        _0x4ac9cf['beginPath'](), _0x4ac9cf['lineWidth'] = 0x2, _0x4ac9cf['arc'](0x0, 0x0, this['arenaRad'] + 0x2, 0x0, _0x9fb478 * Math['PI']), _0x4ac9cf['strokeStyle'] = 'red', _0x4ac9cf['stroke'](), _0x4ac9cf['restore']();
    }
}
_0x4ac9cf['restore']();
if (this['timerTxt'] != null) {
    if (this['arenaState'] == 0x0) this['timerTxt']['x'] = 0x0, this['timerTxt']['y'] = 0x0, this['timerTxt']['draw']();
    else {
        if (this['arenaState'] == 0x1) this['timerTxt']['x'] = 0x0, this['timerTxt']['y'] = -this['rad'] * 0.9, this['timerTxt']['draw'](), this['climaxTxt'] != null && (this['climaxTxt']['x'] = 0x0, this['climaxTxt']['y'] = this['rad'] * 0.85, this['climaxTxt']['draw']());
        else(this['arenaState'] == 0x2 || this['arenaState'] == 0x3) && (this['timerTxt']['x'] = 0x0, this['timerTxt']['y'] = 0x0, this['timerTxt']['draw'](), this['climaxTxt'] != null && (this['climaxTxt']['x'] = 0x0, this['climaxTxt']['y'] = this['rad'] * 0.85, this['climaxTxt']['draw']()));
    }
}
var _0x7a6cb4 = 0xf,
    _0x5af5b2 = this['rad'] / 0x2 + this['rad'] * 0.05;
if (this['p1Name'] != null) {
    this['p1Name']['x'] = -this['rad'] / 0x2, this['p1Name']['y'] = -this['rad'] * 0.65, this['p1Name']['draw']();
    if (!this['isCpuVsPlayer']) {
        var _0x883796 = 0x0,
            _0x459b6e = -this['rad'] * _0x50267c;
        _0x883796 -= _0x3eee1b, _0x459b6e -= _0x7a6cb4 * 0x2;
        var _0x58ce16 = this['getSkinImageObj']('img/fire/0/0.png');
        for (i = 0x0; i < this['getLives'](); i++) {
            _0x883796 -= _0x7a6cb4 * 2.2;
            if (_0x58ce16) {
                _0x4ac9cf['save']();
                if (this['roundsWon_p1'] > 0x0 && i + 0x1 <= this['roundsWon_p1']) _0x4ac9cf['globalAlpha'] = 0.8;
                else _0x4ac9cf['globalAlpha'] = 0.2;
                _0x4ac9cf['drawImage'](_0x58ce16, _0x883796 - _0x7a6cb4, _0x459b6e - _0x7a6cb4, _0x7a6cb4 * 0x2, _0x7a6cb4 * 0x2), _0x4ac9cf['restore']();
            }
        }
    }
}
if (this['p2Name'] != null) {
    this['p2Name']['x'] = this['rad'] / 0x2, this['p2Name']['y'] = -this['rad'] * 0.65, this['p2Name']['draw']();
    if (!this['isCpuVsPlayer']) {
        var _0x883796 = 0x0,
            _0x459b6e = -this['rad'] * _0x50267c;
        _0x883796 = _0x3eee1b, _0x459b6e -= _0x7a6cb4 * 0x2;
        var _0x58ce16 = this['getSkinImageObj']('img/fire/0/0.png');
        for (i = 0x0; i < this['getLives'](); i++) {
            _0x883796 += _0x7a6cb4 * 2.2;
            if (_0x58ce16) {
                _0x4ac9cf['save']();
                if (this['roundsWon_p2'] > 0x0 && i + 0x1 <= this['roundsWon_p2']) _0x4ac9cf['globalAlpha'] = 0.8;
                else _0x4ac9cf['globalAlpha'] = 0.2;
                _0x4ac9cf['drawImage'](_0x58ce16, _0x883796 - _0x7a6cb4, _0x459b6e - _0x7a6cb4, _0x7a6cb4 * 0x2, _0x7a6cb4 * 0x2), _0x4ac9cf['restore']();
            }
        }
    }
}
if (_0x46868a != 0x0 && this['id'] == _0x334ab6 && this['arenaState'] == 0x0) {}
};
var _0x50bfa8 = 0x1,
_0x31dc4f = 0x3,
_0x4e6d57 = 0x5,
_0x33f116 = 0x9;
_0x42f353['prototype']['getLives'] = function () {
switch (this['fightType']) {
case _0x50bfa8:
    return 0x1;
case _0x31dc4f:
    return 0x2;
case _0x4e6d57:
    return 0x3;
case _0x33f116:
    return 0x5;
}
return 0x1;
}, _0x42f353['prototype']['hasAdLoaded'] = ![], _0x42f353['prototype']['isCpuVsPlayer'] = ![], _0x42f353['prototype']['arenaModeType'] = 0x0, _0x42f353['prototype']['canPush'] = ![], _0x42f353['prototype']['canDash'] = ![], _0x42f353['prototype']['isDarkTheme'] = ![], _0x42f353['prototype']['custom_canvas'] = null, _0x42f353['prototype']['drawCanvas'] = function () {
if (this['custom_canvas'] == null) {
    this['custom_canvas'] = document['createElement']('canvas');
    var _0x27150d = this['rad'] * 0xa,
        _0x28b36e = this['rad'] * 0xa;
    this['custom_canvas']['width'] = _0x27150d, this['custom_canvas']['height'] = _0x28b36e;
    var _0x11de97 = this['custom_canvas']['getContext']('2d');
    _0x11de97['save'](), _0x11de97['globalAlpha'] = 0x1, _0x11de97['fillStyle'] = 'black', _0x11de97['fillRect'](0x0, 0x0, this['custom_canvas']['width'], this['custom_canvas']['height']), _0x11de97['globalCompositeOperation'] = 'xor', _0x11de97['beginPath'](), _0x11de97['arc'](_0x27150d / 0x2, _0x27150d / 0x2, this['rad'], 0x0, 0x2 * Math['PI']), _0x11de97['fillStyle'] = 'blue', _0x11de97['fill'](), _0x11de97['restore']();
}
this['custom_canvas'] != null && (_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.5, _0x4ac9cf['drawImage'](this['custom_canvas'], -this['custom_canvas']['width'] / 0x2, -this['custom_canvas']['height'] / 0x2, this['custom_canvas']['width'], this['custom_canvas']['height']), _0x4ac9cf['restore']());
}, _0x42f353['prototype']['timerAngle'] = 0x0, _0x42f353['prototype']['nTimerAngle'] = 0x0, _0x42f353['prototype']['showTimerAngle'] = !![], _0x42f353['prototype']['nTimeoutAngle'] = 0x0, _0x42f353['prototype']['timeoutAngle'] = 0x0, _0x42f353['prototype']['arenaTimeoutLeft'] = 0x0, _0x42f353['prototype']['isArenaClosing'] = ![], _0x42f353['prototype']['closingAngleSet'] = ![], _0x42f353['prototype']['arenaClosingAngle'] = 0x0, _0x42f353['prototype']['onLerpUpdate'] = function (_0xfc57f7) {
_0x42f353['superClass']['prototype']['onLerpUpdate']['call'](this, _0xfc57f7), this['arenaRad'] += (this['nArenaRad'] - this['arenaRad']) * 0.1, this['timerAngle'] += (this['nTimerAngle'] - this['timerAngle']) * 0.1, this['timeoutAngle'] += (this['nTimeoutAngle'] - this['timeoutAngle']) * 0.1;
}, _0x42f353['prototype']['timeLeft'] = 0x0, _0x42f353['prototype']['fightType'] = 0x0, _0x42f353['prototype']['rounds'] = 0x0, _0x42f353['prototype']['roundsWon_p1'] = 0x0, _0x42f353['prototype']['roundsWon_p2'] = 0x0, _0x42f353['prototype']['resetArena'] = ![], _0x42f353['prototype']['player1DarkTheme'] = ![], _0x42f353['prototype']['player2DarkTheme'] = ![], _0x42f353['prototype']['readCustomData_onNewlyVisible'] = function (_0x1ab613) {
_0x42f353['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x1ab613), this['fightType'] = _0x1ab613['readUInt8'](), this['arenaState'] = _0x1ab613['readUInt8'](), this['rounds'] = _0x1ab613['readUInt8'](), this['p1'] = _0x1ab613['readString'](), this['p2'] = _0x1ab613['readString'](), this['arenaModeType'] = _0x1ab613['readUInt8'](), this['isCpuVsPlayer'] = this['arenaModeType'] == 0x1 || this['arenaModeType'] == 0x2, this['p1Wins'] = _0x1ab613['readUInt8'](), this['p2Wins'] = _0x1ab613['readUInt8'](), this['fightNumber'] = _0x1ab613['readUInt16']();
var _0x230377 = _0x1ab613['readUInt16']() / 0x64;
this['oArenaRad'] = this['arenaRad'], this['nArenaRad'] = _0x230377, this['setNames'](), this['climaxType'] = _0x1ab613['readUInt8']();
if (this['climaxType'] == 0x2) this['maxBitesToWin'] = _0x1ab613['readUInt8']();
this['canPush'] = _0x1ab613['readUInt8']() == 0x1, this['canDash'] = _0x1ab613['readUInt8']() == 0x1;
}, _0x42f353['prototype']['readUpdatedProperty'] = function (_0x26b187, _0x52c3e6) {
if (_0x26b187 == _0x1a8253) this['arenaState'] = _0x52c3e6['readUInt8']();
else {
    if (_0x26b187 == _0x525baa) this['rounds'] = _0x52c3e6['readUInt8']();
    else {
        if (_0x26b187 == _0x39d503) {
            var _0x3cb152 = _0x52c3e6['readUInt16']() / 0x64;
            this['oArenaRad'] = this['arenaRad'], this['nArenaRad'] = _0x3cb152;
        } else {
            if (_0x26b187 == _0x4a3bde) {
                this['closingAngleSet'] = this['isArenaClosing'] = ![], this['timer'] = _0x52c3e6['readUInt16']() / 0x64, this['isCountdownTimer'] = !![];
                if (this['timer'] < 0x17) this['updateTimer']();
            } else {
                if (_0x26b187 == _0x6931d7) this['timer'] = _0x52c3e6['readUInt16']() / 0x64, this['isCountdownTimer'] = ![], this['updateTimer'](), this['displayAds'] = ![], this['adShown'] = ![];
                else {
                    if (_0x26b187 == _0x1b2e00) this['timeLeft'] = _0x52c3e6['readUInt16'](), this['nTimerAngle'] = this['timeLeft'] / 0x3e8;
                    else {
                        if (_0x26b187 == _0x44d38f) this['showTimerAngle'] = _0x52c3e6['readUInt8']() == 0x1;
                        else {
                            if (_0x26b187 == _0xf942bf) this['isArenaClosing'] = _0x52c3e6['readUInt8']() == 0x1, this['isArenaClosing'] && !this['closingAngleSet'] && (this['closingAngleSet'] = !![], this['arenaClosingAngle'] = this['timeoutAngle']);
                            else {
                                if (_0x26b187 == _0x42d008) this['arenaTimeoutLeft'] = _0x52c3e6['readUInt16'](), this['nTimeoutAngle'] = this['arenaTimeoutLeft'] / 0x3e8;
                                else {
                                    if (_0x26b187 == _0x28c3c4) {
                                        this['winner'] = _0x52c3e6['readUInt8']();
                                        var _0x2c8efb = '' + this['p1'];
                                        if (_0x2c8efb['length'] == 0x0) _0x2c8efb = 'mope.io';
                                        var _0x1b20bd = '' + this['p2'];
                                        if (_0x1b20bd['length'] == 0x0) _0x1b20bd = 'mope.io';
                                        if (this['winner'] == 0x1) this['winnerName'] = _0x2c8efb;
                                        else this['winnerName'] = _0x1b20bd;
                                    } else {
                                        if (_0x26b187 == _0x5ed438) this['winnerMsg'] = _0x52c3e6['readString']();
                                        else {
                                            if (_0x26b187 == _0xb3bfd6) this['p1Bites'] = _0x52c3e6['readUInt8'](), this['setNames']();
                                            else {
                                                if (_0x26b187 == _0x4fdeab) this['p2Bites'] = _0x52c3e6['readUInt8'](), this['setNames']();
                                                else {
                                                    if (_0x26b187 == _0x41ed29) this['winBonus'] = _0x52c3e6['readUInt32']();
                                                    else {
                                                        if (_0x26b187 == _0x5243a8) this['roundsWon_p1'] = _0x52c3e6['readUInt8']();
                                                        else {
                                                            if (_0x26b187 == _0x15c71f) this['roundsWon_p2'] = _0x52c3e6['readUInt8']();
                                                            else {
                                                                if (_0x26b187 == _0x441ba5) this['p1Wins'] = _0x52c3e6['readUInt8']();
                                                                else {
                                                                    if (_0x26b187 == _0x2f14b0) this['p2Wins'] = _0x52c3e6['readUInt8']();
                                                                    else {
                                                                        if (_0x26b187 == _0x5a9445) this['p1'] = _0x52c3e6['readString'](), this['setNames']();
                                                                        else {
                                                                            if (_0x26b187 == _0x5ea7c5) this['p2'] = _0x52c3e6['readString'](), this['setNames']();
                                                                            else {
                                                                                if (_0x26b187 == _0x53fe33) {
                                                                                    var _0x37fe0d = _0x52c3e6['readUInt8']() == 0x1;
                                                                                    this['resetArena'] != _0x37fe0d && (this['endScreenState'] = 0x0, this['resetArena'] = _0x37fe0d);
                                                                                } else {
                                                                                    if (_0x26b187 == _0x17d225) this['fightNumber'] = _0x52c3e6['readUInt16']();
                                                                                    else {
                                                                                        if (_0x26b187 == _0xd50d41) this['player1DarkTheme'] = _0x52c3e6['readUInt8']() == 0x1;
                                                                                        else _0x26b187 == _0x472f03 && (this['player2DarkTheme'] = _0x52c3e6['readUInt8']() == 0x1);
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
}, _0x42f353['prototype']['endScreenState'] = -0x1, _0x42f353['prototype']['endScreenChangeT'] = 0x0, _0x42f353['prototype']['resetEndScreenState'] = !![], _0x42f353['prototype']['displayEndScreen'] = function () {
_0x397f50 >= this['endScreenChangeT'] && (this['endScreenState']++, this['endScreenChangeT'] = _0x397f50 + 0xbb8);
if (this['timerTxt'] != null) {
    if (this['endScreenState'] == 0x0) this['timerTxt']['setFontSize'](0x28), this['timerTxt']['setText']('\x0aKO!');
    else {
        if (this['endScreenState'] == 0x1) this['timerTxt']['setFontSize'](0x14), this['timerTxt']['setText'](this['winnerName'] + '\x0aWON!');
        else this['endScreenState'] >= 0x3 && (this['timerTxt']['setFontSize'](0x14), this['winBonus'] !== undefined && this['winnerMsg'] != null && this['winBonus'] > 0x0 && this['timerTxt']['setText'](this['winnerMsg'] + '\x0aWIN BONUS: ' + _0x42ed1e(this['winBonus'])));
    }
}
}, _0x42f353['prototype']['challenger'] = null, _0x42f353['prototype']['opponent'] = null, _0x42f353['prototype']['setNames'] = function () {
var _0x1c3c69 = '' + this['p1'];
if (_0x1c3c69['length'] == 0x0) _0x1c3c69 = 'mope.io';
var _0x95da10 = '' + this['p2'];
if (_0x95da10['length'] == 0x0) _0x95da10 = 'mope.io';
var _0xe9f9b2 = this['isCpuVsPlayer'] ? 'level' : 'wins',
    _0xdc9eaf = '\x0a(' + _0xe9f9b2 + ': ' + this['p1Wins'] + ')',
    _0x127f58 = '\x0a(' + _0xe9f9b2 + ': ' + this['p2Wins'] + ')',
    _0x4029b8 = '\x0abites: ' + this['p1Bites'],
    _0x26fe5f = '\x0abites: ' + this['p2Bites'];
if (this['arenaState'] < 0x3) this['challenger'] = _0x1c3c69 + _0xdc9eaf, this['opponent'] = _0x95da10 + _0x127f58, this['setP1'](_0x1c3c69 + _0xdc9eaf + _0x4029b8), this['setP2'](_0x95da10 + _0x127f58 + _0x26fe5f);
else {
    if (this['arenaState'] == 0x3) {
        if (this['winner'] == 0x1) this['winnerName'] = _0x1c3c69, this['setP1'](_0x1c3c69 + _0xdc9eaf + _0x4029b8), this['p2Name'] = null;
        else this['winner'] == 0x2 && (this['winnerName'] = _0x95da10, this['setP2'](_0x95da10 + _0x127f58 + _0x26fe5f), this['p1Name'] = null);
    }
}
}, _0x42f353['prototype']['updateTimer'] = function () {
this['timer'] = Math['round'](this['timer']);
var _0x6c2289 = this['timer'];
if (this['isCountdownTimer']) {
    switch (this['timer']) {
    case 0x17:
        _0x6c2289 = '';
        break;
    case 0x16:
    case 0x15:
        if (this['arenaModeType'] == 0x3) _0x6c2289 = '1V1 TOURNAMENT';
        else _0x6c2289 = 'WELCOME TO 1V1 ARENA';
        break;
    case 0x14:
    case 0x13:
        if (this['arenaModeType'] == 0x3) _0x6c2289 = 'MATCH #' + this['fightNumber'];
        else {
            var _0x19f3e5 = 'MAN';
            if (this['arenaModeType'] == 0x1) _0x19f3e5 = 'NOOB';
            else {
                if (this['arenaModeType'] == 0x2) _0x19f3e5 = 'PRO';
            }
            _0x6c2289 = 'FIGHT #' + this['fightNumber'] + '\x0a' + (this['climaxType'] == 0x1 ? 'LAST ' + _0x19f3e5 + ' STANDING' : this['maxBitesToWin'] + ' BITES TO WIN'), _0x6c2289 = _0x187b4f['name'] + '\x0a' + _0x6c2289;
        }
        break;
    case 0x12:
    case 0x11:
        if (!this['isCpuVsPlayer']) {
            _0x6c2289 = 'CHALLENGER';
            break;
        }
        case 0x10:
        case 0xf:
            if (this['isCpuVsPlayer']) _0x6c2289 = 'REDEMPTION\x0aLEVEL ' + this['p1Wins'];
            else _0x6c2289 = this['challenger'];
            break;
        case 0xe:
        case 0xd:
            _0x6c2289 = 'OPPONENT';
            break;
        case 0xc:
        case 0xb:
            _0x6c2289 = this['opponent'];
            break;
        case 0x2:
            _0x6c2289 = 'ROUND ' + this['rounds'];
            break;
        case 0x1:
            _0x6c2289 = 'GET SET';
            break;
        case 0x0:
            _0x6c2289 = 'FIGHT';
            break;
    }
    if (this['timer'] < 0x14 && !this['displayAds'] && !this['adShown']) this['displayAds'] = !![];
}
this['setTimer'](_0x6c2289);
}, _0x42f353['prototype']['adShown'] = ![], _0x42f353['prototype']['displayAds'] = ![], _0x42f353['prototype']['displayedAdsOnEnd'] = ![], _0x42f353['prototype']['showAds'] = function (_0x5898c8) {
if (!_0x1c90e9) !this['adShown'] && (this['displayAds'] && (_0x3ae4a0 > 0xd && (this['adShown'] = !![], _0x2aa201($bus['CONSTANTS']['AD_SCREEN_LAYOUTS']['ARENA']), setTimeout(() => {
    _0x2f91e3();
}, _0x5898c8))));
}, _0x42f353['prototype']['removeAds'] = function () {
_0x334ab6 == this['id'] && _0x2f91e3();
}, _0x42f353['prototype']['onRemovedFromGame'] = function () {
console['log']('Arena removed from game!');
};

function _0x42f353() {
_0x42f353['superClass']['call'](this), this['hasAdLoaded'] = ![];
}
window['AbilityObj1v1Arena'] = _0x42f353, _0x3360d0['setCustomClassForGameObjType'](_0x42f353, _0x1b8199, _0x4b1517);
var _0xc34f76 = _0xc34f76,
_0xec194 = _0x1dd8d7;
_0xc34f76['prototype'] = Object['create'](_0xec194['prototype']), _0xc34f76['prototype']['constructor'] = _0xc34f76, _0xc34f76['superClass'] = _0xec194, _0xc34f76['prototype']['getSkinName'] = function () {
if (this['animalSpecies'] == 0xdc && this['animalSubSpecies'] == 0x0) return 'ocean/seamonster/' + this['animalSpecies'] + '/seamonster1';
else return 'ocean/seamonster/' + this['animalSpecies'] + '/seamonster';
}, _0xc34f76['prototype']['calcAnimalZIndex'] = function () {
if (this['flag_underWater']) this['z'] = -0x64;
else {
    if (this['flag_isInArena']) this['z'] += 0x3e8;
    else {
        if (this['flag_eff_tossedInAir']) this['z'] = 0x4b0 + this['rad'];
        else this['z'] = 0x3e8 + this['rad'];
    }
}
}, _0xc34f76['prototype']['animalInfo'] = function () {
var _0xf86677 = {},
    _0x50deee = '';
switch (this['animalSpecies']) {
case 0x0:
    _0xf86677['aniName'] = 'Sea Monster';
    break;
case 0x1:
    _0xf86677['aniName'] = 'Golden Sea Monster';
    break;
case 0x2:
    _0xf86677['aniName'] = 'Sapphire Monster';
    break;
case 0xc8:
    _0xf86677['aniName'] = 'Luckycharm Monster';
    break;
case 0xc9:
    _0xf86677['aniName'] = 'Ancient Tortoise';
    break;
case 0xca:
    _0xf86677['aniName'] = 'Submarine Monster';
    break;
case 0xdc:
    _0xf86677['aniName'] = 'Dimensional Monster';
    break;
}
return _0xf86677['aniCol'] = 'blue', _0xf86677['upgradeText'] = 'UPGRADED to ' + _0xf86677['aniName'] + '!\x0aCreate whirlpool to trap prey!' + _0x50deee, _0xf86677['skinName'] = 'ocean/seamonster/' + this['animalSpecies'] + '/seamonster', _0xf86677;
}, _0xc34f76['prototype']['getAbilityInfo'] = function (_0x5f2eea) {
var _0x1ebd29 = {};
return _0x1ebd29['abilName'] = 'Giant Whirlpool', _0x1ebd29['abilImg'] = 'abilities/Whirlpool.svg', _0x1ebd29['skinThemeID'] = this['skinThemeID'], _0x1ebd29['mopeSeasonID'] = this['mopeSeasonID'], _0x1ebd29;
}, _0xc34f76['prototype']['drawSkinCustomization'] = function () {
this['setSkinScale']();
if (this['animalSpecies'] == 0xdc && this['animalSubSpecies'] == 0x0) {
    var _0x32ab7f = 'skins/ocean/seamonster/220/',
        _0x374341 = this['skinScale'] * 1.07,
        _0x49cc66 = this['skinRad'],
        _0x5ab78a = 0x1 + Math['trunc'](_0x397f50 / 0x78) % 0x8,
        _0x19f55f = 0x0,
        _0x1996a1 = this['getSkinImageObj'](_0x32ab7f + '/anim/' + _0x5ab78a + '.png');
    _0x1996a1 && (_0x4ac9cf['save'](), _0x4ac9cf['drawImage'](_0x1996a1, -_0x49cc66 * _0x374341, (-_0x49cc66 + _0x49cc66 * 0.05) * _0x374341 - _0x19f55f, 0x2 * _0x49cc66 * _0x374341, 0x2 * _0x49cc66 * _0x374341), _0x4ac9cf['restore']());
}
}, _0xc34f76['prototype']['basicDrawSkinImg'] = function () {
if (this['animalSpecies'] == 0xdc && this['animalSubSpecies'] == 0x0) {
    this['setSkinScale']();
    var _0x133534 = this['skinScale'],
        _0x40de2b = this['skinRad'];
    this['loadedSkinImg'] && (overSizeOffset = this['skinRad'] / 0x2, _0x4ac9cf['drawImage'](this['loadedSkinImg'], -_0x40de2b * _0x4ceb98, -_0x40de2b * _0x4ceb98, 0x2 * _0x40de2b * _0x4ceb98, 0x2 * _0x40de2b * _0x4ceb98));
} else _0xc34f76['superClass']['prototype']['basicDrawSkinImg']['call'](this);
};

function _0xc34f76() {
_0xc34f76['superClass']['call'](this, _0x4acf80);
}
window['SeaMonster'] = _0xc34f76, _0x3360d0['setCustomClassForGameObjType'](_0xc34f76, _0x4acf80, _0x16f423);
var _0xecf285 = _0xecf285,
_0xec194 = _0x1dd8d7;
_0xecf285['prototype'] = Object['create'](_0xec194['prototype']), _0xecf285['prototype']['constructor'] = _0xecf285, _0xecf285['superClass'] = _0xec194, _0xecf285['prototype']['calcAnimalZIndex'] = function () {
if (this['flag_underWater']) this['z'] = -0x64;
else {
    if (this['flag_isInArena']) this['z'] += 0x3e8;
    else {
        if (this['flag_eff_tossedInAir']) this['z'] = 0x4b0 + this['rad'];
        else this['z'] = 0x4b0 + this['rad'];
    }
}
}, _0xecf285['prototype']['animalInfo'] = function () {
var _0x1e290d = {},
    _0x1e22c9 = '';
switch (this['animalSpecies']) {
case 0x0:
    _0x1e290d['aniName'] = 'Land Monster';
    break;
case 0x1:
    _0x1e290d['aniName'] = 'Golden Land Monster';
    break;
case 0x2:
    _0x1e290d['aniName'] = 'Titanite Monster';
    break;
case 0xca:
    _0x1e290d['aniName'] = 'Fighter Jet';
    break;
case 0xcc:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x1e290d['aniName'] = 'Necromus';
        break;
    case 0x1:
        _0x1e290d['aniName'] = 'Planet Eater Monster';
    }
    break;
case 0xdc:
    _0x1e290d['aniName'] = 'Belphegor';
    break;
case 0xde:
    _0x1e290d['aniName'] = 'Peppermint Monster';
    break;
}
return _0x1e290d['aniCol'] = 'orange', _0x1e290d['upgradeText'] = 'UPGRADED to ' + _0x1e290d['aniName'] + '!\x0aCreate Sink holes to trap prey!' + _0x1e22c9, _0x1e290d['skinName'] = this['getSkinName'](), _0x1e290d;
}, _0xecf285['prototype']['getSkinName'] = function () {
if (this['animalSpecies'] == 0xcc && this['animalSubSpecies'] == 0x0) return 'volcano/landmonster/' + this['animalSpecies'] + this['getSubSpecies']() + '/landmonster1';
else return 'volcano/landmonster/' + this['animalSpecies'] + this['getSubSpecies']() + '/landmonster';
}, _0xecf285['prototype']['getSubSpecies'] = function () {
return this['animalSpecies'] === 0xcc ? '/' + this['animalSubSpecies'] : '';
}, _0xecf285['prototype']['getAbilityInfo'] = function (_0x57ace1) {
var _0x76744 = {};
return _0x76744['abilName'] = 'Giant\x0aSinkhole!', _0x76744['abilImg'] = 'abilities/Sinkhole.svg', _0x76744['skinThemeID'] = this['skinThemeID'], _0x76744['mopeSeasonID'] = this['mopeSeasonID'], _0x76744;
}, _0xecf285['prototype']['drawSkinCustomization'] = function () {
this['setSkinScale']();
if (this['animalSpecies'] == 0xcc && this['animalSubSpecies'] == 0x0) {
    var _0x1ee2d1 = 'skins/volcano/landmonster/204/0/',
        _0x2399b9 = this['skinScale'] * 1.07,
        _0x2f745e = this['skinRad'],
        _0x545171 = 0x1 + Math['trunc'](_0x397f50 / 0x78) % 0x7,
        _0x4df7d9 = this['getSkinImageObj'](_0x1ee2d1 + '/landmonster_head.png'),
        _0x519557 = 0x0;
    if (_0x4df7d9) {
        _0x4ac9cf['save']();
        var _0x2f745e = this['rad'];
        _0x4ac9cf['drawImage'](_0x4df7d9, -_0x2f745e * _0x2399b9, (-_0x2f745e + _0x2f745e * 0.05) * _0x2399b9 - _0x519557, 0x2 * _0x2f745e * _0x2399b9, 0x2 * _0x2f745e * _0x2399b9), _0x4ac9cf['restore']();
        var _0x1acfa1 = this['getSkinImageObj'](_0x1ee2d1 + '/fire' + _0x545171 + '.png');
        _0x1acfa1 && (_0x4ac9cf['save'](), _0x4ac9cf['drawImage'](_0x1acfa1, -_0x2f745e * _0x2399b9, (-_0x2f745e + _0x2f745e * 0.05) * _0x2399b9 - _0x519557, 0x2 * _0x2f745e * _0x2399b9, 0x2 * _0x2f745e * _0x2399b9), _0x4ac9cf['restore']());
        var _0x1acfa1 = this['getSkinImageObj'](_0x1ee2d1 + '/landmonster_head1.png');
        _0x1acfa1 && (_0x4ac9cf['save'](), _0x4ac9cf['drawImage'](_0x1acfa1, -_0x2f745e * _0x2399b9, (-_0x2f745e + _0x2f745e * 0.05) * _0x2399b9 - _0x519557, 0x2 * _0x2f745e * _0x2399b9, 0x2 * _0x2f745e * _0x2399b9), _0x4ac9cf['restore']());
    }
}
};
var _0x4ceb98 = 1.8;
_0xecf285['prototype']['basicDrawSkinImg'] = function () {
if (this['animalSpecies'] == 0xcc && this['animalSubSpecies'] == 0x0) {
    this['setSkinScale']();
    var _0x3df87d = this['skinScale'],
        _0x38dba8 = this['skinRad'];
    this['loadedSkinImg'] && (overSizeOffset = this['skinRad'] / 0x2, _0x4ac9cf['drawImage'](this['loadedSkinImg'], -_0x38dba8 * _0x4ceb98, -_0x38dba8 * _0x4ceb98, 0x2 * _0x38dba8 * _0x4ceb98, 0x2 * _0x38dba8 * _0x4ceb98));
} else _0xecf285['superClass']['prototype']['basicDrawSkinImg']['call'](this);
};

function _0xecf285() {
_0xecf285['superClass']['call'](this, _0x4acf80);
}
window['LandMonster'] = _0xecf285, _0x3360d0['setCustomClassForGameObjType'](_0xecf285, _0x4acf80, _0xc23298);
var _0x5216e5 = _0x5216e5,
_0xec194 = _0x1dd8d7;
_0x5216e5['prototype'] = Object['create'](_0xec194['prototype']), _0x5216e5['prototype']['constructor'] = _0x5216e5, _0x5216e5['superClass'] = _0xec194, _0x5216e5['prototype']['calcAnimalZIndex'] = function () {
if (this['flag_underWater']) this['z'] = -0x64;
else {
    if (this['flag_isInArena']) this['z'] += 0x3e8;
    else {
        if (this['flag_eff_tossedInAir']) this['z'] = 0x4b0 + this['rad'];
        else this['z'] = 0x3e8 + this['rad'];
    }
}
}, _0x5216e5['prototype']['animalInfo'] = function () {
var _0x4381b7 = {},
    _0x15243a = '';
switch (this['animalSpecies']) {
case 0x0:
    _0x4381b7['aniName'] = 'Ice Monster';
    break;
case 0x1:
    _0x4381b7['aniName'] = 'Golden Ice Monster';
    break;
case 0x2:
    _0x4381b7['aniName'] = 'Amethyst Monster';
    break;
case 0xc9:
    _0x4381b7['aniName'] = 'Cryo Coach Monster';
    break;
case 0xcc:
    _0x4381b7['aniName'] = 'Blood Crystal Monster';
    break;
case 0xdc:
    _0x4381b7['aniName'] = 'Blazing Ice Monster';
    break;
}
return _0x4381b7['aniCol'] = '#ffffff', _0x4381b7['upgradeText'] = 'UPGRADED to ' + _0x4381b7['aniName'] + '!\x0aShoot Ice crystals to freeze prey!' + _0x15243a, _0x4381b7['skinName'] = 'arctic/icemonster/' + this['animalSpecies'] + '/icemonster', _0x4381b7;
}, _0x5216e5['prototype']['getSkinName'] = function () {
var _0x3fb398 = this['id'] == 0x0 ? 'ability' : 'icemonster';
return 'arctic/icemonster/' + this['animalSpecies'] + '/' + _0x3fb398;
}, _0x5216e5['prototype']['getAbilityInfo'] = function (_0x28b412) {
var _0x207551 = {};
return _0x207551['abilName'] = 'Freeze Prey!', _0x207551['abilImg'] = 'abilities/Ice-Freeze.svg', _0x207551['skinThemeID'] = this['skinThemeID'], _0x207551['mopeSeasonID'] = this['mopeSeasonID'], _0x207551;
}, _0x5216e5['prototype']['readCustomData_onNewlyVisible'] = function (_0x21bd27) {
_0x5216e5['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x21bd27), this['readCrystalsInfo'](_0x21bd27);
}, _0x5216e5['prototype']['readCrystal'] = function (_0x485dde, _0x995a9e) {
var _0x1797e0 = _0x485dde['readInt16']() / 0x64;
this['crystals'][_0x995a9e]['nRad'] = _0x1797e0;
if (_0x1797e0 < 0x1) this['crystals'][_0x995a9e]['rad'] = 0x0;
this['crystals'][_0x995a9e]['isReady'] = _0x485dde['readUInt8']() == 0x1;
}, _0x5216e5['prototype']['customUpdatedProperty'] = function (_0x103656, _0x5cbca6) {
if (_0x103656 == _0x40bbec) this['readCrystal'](_0x5cbca6, 0x0);
else {
    if (_0x103656 == _0x250722) this['readCrystal'](_0x5cbca6, 0x1);
    else {
        if (_0x103656 == _0x2b9d7e) this['readCrystal'](_0x5cbca6, 0x2);
        else {
            if (_0x103656 == _0x13d458) this['readCrystal'](_0x5cbca6, 0x3);
            else {
                if (_0x103656 == _0x4ae4a5) this['readCrystal'](_0x5cbca6, 0x4);
                else {
                    if (_0x103656 == _0x4ed9ee) this['readCrystal'](_0x5cbca6, 0x5);
                    else _0x103656 == _0x337828 && this['readCrystal'](_0x5cbca6, 0x6);
                }
            }
        }
    }
}
}, _0x5216e5['prototype']['crystals'] = [], _0x5216e5['prototype']['readCrystalsInfo'] = function (_0x4c5608) {
var _0x7ae310 = _0x4c5608['readUInt8']();
this['crystals'] = [];
for (i = 0x0; i < _0x7ae310; i++) {
    var _0x2d233e = _0x4c5608['readInt16']() / 0x64,
        _0x4e3570 = _0x4c5608['readInt16']() / 0x64,
        _0x4c316e = _0x4c5608['readInt16']() / 0x64,
        _0x514af6 = _0x4c5608['readUInt8']() * 0x4,
        _0x4bdf45 = _0x4c5608['readUInt8']() == 0x1;
    this['crystals']['push']({
        'isReady': _0x4bdf45,
        'x': _0x2d233e,
        'y': _0x4e3570,
        'nRad': _0x4c316e,
        'oRad': _0x4c316e,
        'rad': _0x4c316e,
        'angle': _0x514af6
    });
}
};
var _0x2d0709 = 1.5;
_0x5216e5['prototype']['drawSkinCustomization'] = function () {
if (this['animalSpecies'] == 0xc9) {
    _0x4ac9cf['save']();
    var _0x245e07 = 0x0;
    for (i = 0x0; i < this['crystals']['length']; i++) {
        var _0x150c5f = this['crystals'][i];
        if (_0x150c5f['isReady']) _0x245e07++;
    }
    _0x245e07 = Math['min'](0x5, _0x245e07);
    var _0x416c3b = 'skins/arctic/icemonster/201/icemonster' + _0x245e07 + '.png',
        _0x1b53f8 = this['getSkinImageObj'](_0x416c3b);
    if (_0x1b53f8) {
        var _0x5aacfa = this['rad'] * _0x2d0709;
        _0x4ac9cf['drawImage'](_0x1b53f8, -_0x5aacfa, -_0x5aacfa, 0x2 * _0x5aacfa, 0x2 * _0x5aacfa);
    }
    _0x4ac9cf['restore']();
} else {
    var _0x5aacfa = this['rad'] - this['outlineW'];
    for (i = 0x0; i < this['crystals']['length']; i++) {
        var _0x150c5f = this['crystals'][i];
        if (_0x150c5f['nRad'] == 0x0) continue;
        _0x150c5f['rad'] += (_0x150c5f['nRad'] - _0x150c5f['rad']) * 0.01;
        var _0x53628c = _0x150c5f['x'] * _0x5aacfa,
            _0x7ac63a = _0x150c5f['y'] * _0x5aacfa,
            _0x429641 = _0x150c5f['angle'],
            _0x49bca1 = _0x150c5f['rad'];
        _0x4ac9cf['save'](), _0x4ac9cf['translate'](_0x53628c, _0x7ac63a), _0x4ac9cf['globalAlpha'] = 0x1, _0x4ac9cf['rotate'](_0x142401(_0x429641));
        var _0x1b53f8 = this['getSkinImageObj']('skins/arctic/icemonster/' + this['animalSpecies'] + '/crystal.png');
        _0x1b53f8 && _0x4ac9cf['drawImage'](_0x1b53f8, -_0x49bca1, -_0x49bca1 * 0x2, _0x49bca1 * 0x2, _0x49bca1 * 0x2), _0x4ac9cf['restore']();
    }
}
};

function _0x5216e5() {
_0x5216e5['superClass']['call'](this, _0x4acf80);
}
window['IceMonster'] = _0x5216e5, _0x3360d0['setCustomClassForGameObjType'](_0x5216e5, _0x4acf80, _0x16a00e);
var _0x34bb88 = _0x34bb88,
_0xec194 = _0x1dd8d7;
_0x34bb88['prototype'] = Object['create'](_0xec194['prototype']), _0x34bb88['prototype']['constructor'] = _0x34bb88, _0x34bb88['superClass'] = _0xec194, _0x34bb88['prototype']['calcAnimalZIndex'] = function () {
if (this['flag_underWater']) this['z'] = -0x64;
else {
    if (this['flag_isInArena']) this['z'] += 0x3e8;
    else {
        if (this['flag_eff_tossedInAir']) this['z'] = 0x4b0 + this['rad'];
        else this['z'] = 0x3e8 + this['rad'];
    }
}
}, _0x34bb88['prototype']['drawWhenUnderwater'] = function () {
this['drawUnderwaterCustomization'](0x1, 1.1);
}, _0x34bb88['prototype']['animalInfo'] = function () {
var _0x22d97e = {},
    _0x24a2e3 = '';
switch (this['animalSpecies']) {
case 0x0:
    _0x22d97e['aniName'] = 'Dino Monster';
    break;
case 0x1:
    _0x22d97e['aniName'] = 'Golden Dino Monster';
    break;
case 0x2:
    _0x22d97e['aniName'] = 'Citrine Monster';
    break;
case 0xc8:
    _0x22d97e['aniName'] = 'Ruby Devil';
    break;
case 0xca:
    _0x22d97e['aniName'] = 'Tank Monster';
    break;
case 0xdc:
    _0x22d97e['aniName'] = 'Cordycera Dino Monster';
    break;
}
return _0x22d97e['aniCol'] = 'orange', _0x22d97e['upgradeText'] = 'UPGRADED to ' + _0x22d97e['aniName'] + '!\x0aKnock prey in Air to inflict deadly damage!' + _0x24a2e3, _0x22d97e['skinName'] = 'land/dinomonster/' + this['animalSpecies'] + '/dinomonster', _0x22d97e;
}, _0x34bb88['prototype']['getSkinName'] = function () {
return 'land/dinomonster/' + this['animalSpecies'] + '/dinomonster1';
}, _0x34bb88['prototype']['getAbilityInfo'] = function (_0x45e932) {
var _0x1a73fd = {};
return _0x1a73fd['abilName'] = 'Knock in Air', _0x1a73fd['abilImg'] = 'abilities/Throw.svg', _0x1a73fd['skinThemeID'] = this['skinThemeID'], _0x1a73fd['mopeSeasonID'] = this['mopeSeasonID'], _0x1a73fd;
}, _0x34bb88['prototype']['drawSkinCustomization'] = function () {
var _0x1e61f1 = 'skins/land/dinomonster/' + this['animalSpecies'] + '/dinomonster';
if (this['flag_usingAbility']) _0x1e61f1 += '3';
else _0x1e61f1 += '2';
var _0x3c2c00 = this['getSkinImageObj'](_0x1e61f1 + '.png');
if (_0x3c2c00) {
    _0x4ac9cf['save']();
    var _0x740c12 = (this['rad'] - this['outlineW']) * 1.1;
    _0x4ac9cf['drawImage'](_0x3c2c00, -_0x740c12 * this['skinScale'] * 0.91, -_0x740c12 * this['skinScale'] * 1.1, 0x2 * _0x740c12 * this['skinScale'] * 0.91, 0x2 * _0x740c12 * this['skinScale'] * 1.1), _0x4ac9cf['restore']();
}
};

function _0x34bb88() {
_0x34bb88['superClass']['call'](this, _0x4acf80);
}
window['DinoMonster'] = _0x34bb88, _0x3360d0['setCustomClassForGameObjType'](_0x34bb88, _0x4acf80, _0x4cc8de);
var _0xec194 = _0x5adfe2;
_0x576615['prototype'] = Object['create'](_0xec194['prototype']), _0x576615['prototype']['constructor'] = _0x576615, _0x576615['superClass'] = _0xec194, _0x576615['prototype']['updateZ'] = function () {
this['z'] = 0x3ed;
}, _0x576615['prototype']['customDraw'] = function (_0xfb0256) {
var _0x2d65f8 = this['getSkinImageObj']('skins/arctic/icemonster/' + this['speciesType'] + '/crystalfire.png');
if (_0x2d65f8) {
    _0x4ac9cf['save']();
    var _0x213ef6 = this['rad'] * 1.5;
    _0x4ac9cf['rotate'](this['angle'] + _0x142401(0xb4)), _0x4ac9cf['drawImage'](_0x2d65f8, -_0x213ef6, -_0x213ef6, _0x213ef6 * 0x2, _0x213ef6 * 2.5), _0x4ac9cf['restore']();
}
}, _0x576615['prototype']['getSkinImageObj'] = function (_0x2fbf9f) {
var _0x55556b = this['speciesType'] === 0x1 || this['speciesType'] === 0x2 || this['speciesType'] === 0xc9 || this['speciesType'] === 0xcc ? 0x1 : this['mopeSeasonID'],
    _0x11d364 = './assets/s/' + _0x55556b + '/' + _0x2fbf9f;
return this['skinThemeID'] > 0x0 && (_0x11d364 = './assets/t/' + this['skinThemeID'] + '/' + _0x2fbf9f), _0x297bc3(_0x11d364, function (_0x3bf926) {
    console['log'](_0x3bf926['src']);
});
}, _0x576615['prototype']['readCustomData_onNewlyVisible'] = function (_0x32e017) {
_0x576615['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x32e017), this['speciesType'] = _0x32e017['readUInt8']();
};

function _0x576615() {
_0x576615['superClass']['call'](this, _0x2063dd);
}
window['IceCrystal'] = _0x576615, _0x3360d0['setCustomClassForGameObjType'](_0x576615, _0x2063dd);
var _0xec194 = _0x5adfe2;
_0x3fe028['prototype'] = Object['create'](_0xec194['prototype']), _0x3fe028['prototype']['constructor'] = _0x3fe028, _0x3fe028['superClass'] = _0xec194, _0x3fe028['prototype']['updateZ'] = function () {
this['z'] = -0x65;
}, _0x3fe028['prototype']['customDraw'] = function (_0x37ad1d) {
_0x4ac9cf['save'](), this['specType'] == 0x0 ? (this['drawOutlinedCircle']('', '#9F8641'), _0x4ac9cf['globalAlpha'] = 0.6, _0x486a28(0x0 + this['rPer'], 0x1, Math['max'](0x0, this['rad'] * 0.9), '#5C4E28'), _0x4ac9cf['globalAlpha'] = 0.7, _0x486a28(0x0 - this['rPer'], 0x1, Math['max'](0x0, this['rad'] * 0.8), '#40371D'), _0x4ac9cf['globalAlpha'] = 0.9, _0x486a28(0x0 - this['rPer'], 0x1, Math['max'](0x0, this['rad'] * 0.8), '#40371D'), _0x4ac9cf['globalAlpha'] = 0.5, _0x486a28(0x0 - this['rPer'] * 0x3, 0x1, Math['max'](0x0, this['rad'] * 0.5), 'black'), _0x4ac9cf['globalAlpha'] = 0x1, _0x486a28(0x0 - this['rPer'] * 0x3, 0x1, Math['max'](0x0, this['rad'] * 0.3), _0x926611)) : (this['drawOutlinedCircle']('', '#9F8641'), _0x486a28(0x0 - this['rPer'], 0x0 - this['rPer'], Math['max'](0x0, this['rad'] - 0x7), '#7E6A35'), _0x486a28(0x0 + this['rPer'], 0x1, Math['max'](0x0, this['rad'] - 0xe), '#5C4E28'), _0x486a28(0x0 - this['rPer'] * 0x2 - 0x3, 0x1, Math['max'](0x0, this['rad'] - 18.5), '#40371D')), _0x4ac9cf['restore']();
};

function _0x3fe028() {
_0x3fe028['superClass']['call'](this, _0x2aeaab), this['webTransparency'] = 0x0, this['doesDrawEffectScale'] = !![], this['drawEffectScale_Slow'] = !![];
}
window['SinkHole'] = _0x3fe028, _0x3360d0['setCustomClassForGameObjType'](_0x3fe028, _0x33736e);
var _0xec194 = _0x5adfe2;
_0x31220c['prototype'] = Object['create'](_0xec194['prototype']), _0x31220c['prototype']['constructor'] = _0x31220c, _0x31220c['superClass'] = _0xec194, _0x31220c['prototype']['mommyID'] = 0x0, _0x31220c['prototype']['updateZ'] = function () {
this['z'] = -0x99;
}, _0x31220c['prototype']['isEdibleOutlined'] = function () {
if (this['mommyID'] == _0x46868a) return ![];
var _0x1e04bc = _0x4df1db['superClass']['prototype']['isEdibleOutlined']['call'](this);
return _0x1e04bc;
}, _0x31220c['prototype']['customDraw'] = function (_0x194607) {
_0x4ac9cf['save']();
var _0x506332 = this['getSkinImageObj']('skins/land/ostrich/' + this['speciesType'] + '/ostrichEgg' + (this['isEdibleOutlined']() ? 'edible' : '') + '.png');
if (_0x506332) {
    var _0x2fa50d = this['rad'];
    _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x506332, -_0x2fa50d, -_0x2fa50d, 0x2 * _0x2fa50d, 0x2 * _0x2fa50d);
}
_0x4ac9cf['restore']();
}, _0x31220c['prototype']['getSkinImageObj'] = function (_0x2aac08) {
var _0x4d1282 = this['speciesType'] === 0x1 || this['speciesType'] === 0x2 || this['speciesType'] === 0xcc ? 0x1 : this['mopeSeasonID'];
return this['getSkinImageObjForSeason'](_0x2aac08, _0x4d1282);
}, _0x31220c['prototype']['readCustomData_onNewlyVisible'] = function (_0x15edc1) {
_0x31220c['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x15edc1), this['mommyID'] = _0x15edc1['readUInt32'](), this['speciesType'] = _0x15edc1['readUInt8']();
};

function _0x31220c() {
_0x31220c['superClass']['call'](this, _0x44a1cc), this['doesDrawEffectScale'] = !![];
}
window['OstrichEgg'] = _0x31220c, _0x3360d0['setCustomClassForGameObjType'](_0x31220c, _0x44a1cc);
var _0x4fdbc5 = _0x4fdbc5,
_0xec194 = _0x1dd8d7;
_0x4fdbc5['prototype'] = Object['create'](_0xec194['prototype']), _0x4fdbc5['prototype']['constructor'] = _0x4fdbc5, _0x4fdbc5['superClass'] = _0xec194, _0x4fdbc5['prototype']['drawNickName'] = function (_0x4e178c) {
(this['flag_usingAbility'] && this['flag_flying'] || !this['flag_usingAbility'] || _0x2fa240['mode'] == _0x4c8962) && _0x4fdbc5['superClass']['prototype']['drawNickName']['call'](this, _0x4e178c);
}, _0x4fdbc5['prototype']['animalInfo'] = function () {
var _0x192ba6 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x192ba6['aniName'] = 'Macaw';
    break;
case 0x1:
    _0x192ba6['aniName'] = 'Blue Macaw';
    break;
case 0x2:
    _0x192ba6['aniName'] = 'Pakistan Macaw';
    break;
}
return _0x192ba6['aniCol'] = '#FF9000', _0x192ba6['skinName'] = this['getSpeciesPath']('macaw') + '/macaw', _0x192ba6['upgradeText'] = 'UPGRADED to ' + (this['animalSpecies'] == 0x2 ? 'Rare ' : '') + _0x192ba6['aniName'] + '!\x0aHold W to fly around.\x0a(Hint: Use ability on hills to mimic animals) ', _0x192ba6;
}, _0x4fdbc5['prototype']['getSkinName'] = function () {
var _0x5193cb = this['getSpeciesPath']('macaw') + '/macaw';
return _0x5193cb += this['specType'] == 0x0 ? '' : this['specType'], _0x5193cb;
}, _0x4fdbc5['prototype']['getSpeciesPath'] = function (_0x316a45) {
return 'land/' + _0x316a45 + '/' + this['animalSpecies'];
}, _0x4fdbc5['prototype']['getWing'] = function (_0x5cb38c, _0x4bd0f7, _0x2e1efd) {
var _0x556d51 = 'skins/' + (_0x2e1efd ? this['getSpeciesPath'](_0x5cb38c) + '/' : _0x5cb38c + '/');
return _0x556d51 += _0x5cb38c + '_wing' + _0x4bd0f7 + '.png', _0x556d51;
}, _0x4fdbc5['prototype']['getHead'] = function (_0x3170a2, _0x517419) {
var _0x1a46fb = 'skins/' + (_0x517419 ? this['getSpeciesPath'](_0x3170a2) + '/' : _0x3170a2 + '/');
return _0x1a46fb += _0x3170a2 + '_head.png', _0x1a46fb;
}, _0x4fdbc5['prototype']['getAniRadius'] = function (_0x4dcab1) {
if (this['flag_usingDiveAbility']) return _0x4dcab1 * 0.7;
return this['flag_flying'] ? _0x4dcab1 * 0.9 : _0x4dcab1;
}, _0x4fdbc5['prototype']['basicDrawSkinImg'] = function () {
if (this['flag_usingAbility']) {
    if (!this['flag_flying'] && this['octoDrawObj'] != null) return;
}
_0x4fdbc5['superClass']['prototype']['basicDrawSkinImg']['call'](this);
if (this['skinThemeID'] != 0x0) return;
var _0x55fb01 = 0.05,
    _0x1033e5 = -0.08,
    _0x517233 = 1.1;
this['setSkinScale']();
var _0x50cdb5 = this['getAniRadius'](this['skinRad'] - this['outlineW']),
    _0x1b6ab4 = 0x1f4 / 0x154;
if (this['loadedSkinImg']) {
    _0x4ac9cf['drawImage'](this['loadedSkinImg'], -_0x50cdb5 * _0x1b6ab4, -_0x50cdb5 * _0x1b6ab4, 0x2 * _0x50cdb5 * _0x1b6ab4, 0x2 * _0x50cdb5 * _0x1b6ab4);
    if (this['flag_flying'] || !this['flag_usingAbility']) {
        var _0x13f4ac = 'skins/' + this['getSpeciesPath']('macaw') + '/tail.png',
            _0x3f0af0 = this['getSkinImageObj'](_0x13f4ac),
            _0x48dae8 = this['skinScale'];
        if (_0x3f0af0) {
            _0x4ac9cf['save']();
            var _0x50cdb5 = this['rad'] - this['outlineW'];
            _0x4ac9cf['drawImage'](_0x3f0af0, -_0x50cdb5 * _0x517233 * _0x48dae8, (-_0x50cdb5 + _0x50cdb5 * _0x1033e5) * _0x517233 * _0x48dae8, 0x2 * _0x50cdb5 * _0x517233 * _0x48dae8, 0x2 * _0x50cdb5 * _0x517233 * _0x48dae8), _0x4ac9cf['restore']();
        }
    }
    if (!this['flag_usingAbility']) {
        var _0x5d107d = this['getSkinImageObj']('skins/' + this['getSpeciesPath']('macaw') + '/top.png');
        _0x5d107d && _0x4ac9cf['drawImage'](_0x5d107d, -_0x50cdb5 * _0x1b6ab4, (-_0x50cdb5 + _0x50cdb5 * _0x55fb01) * _0x1b6ab4, 0x2 * _0x50cdb5 * _0x1b6ab4, 0x2 * _0x50cdb5 * _0x1b6ab4);
    }
}
};
var _0x3f92b5 = 1.7,
_0x4e9c30 = 2.2;
_0x4fdbc5['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) return;
var _0x2c7896 = this['getAniRadius'](this['skinRad'] - this['outlineW']),
    _0x1175dc = _0x2c7896 * 0.8;
if (this['flag_flying']) {
    var _0x5f5d19 = 0x1f4 / 0x154;
    if (this['flag_flying'] && !this['flag_isGrabbed']) {
        _0x4ac9cf['save']();
        let _0x2e8eef = _0x2dd807('bird', this['spawnTime']);
        _0x2e8eef !== undefined && _0x2e8eef != null && (this['theFrame'] = _0x2e8eef);
        let _0x57a194 = !(_0x25ea67 == 0x2 || _0x50a9ba) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'];
        var _0x3ac6b2 = this['getSkinImageObj'](this['getWing']('macaw', 0x1, !![]));
        if (_0x3ac6b2) {
            _0x4ac9cf['save']();
            var _0x1066bd = -(-0.2 + _0x57a194) * _0x40941f;
            _0x4ac9cf['rotate'](_0xb6aa34 + _0x1066bd);
            var _0x36e42d = 0x0,
                _0x4014c2 = _0x1175dc,
                _0x4a4493 = _0x1175dc * 0x2 * 0.62,
                _0x20487b = _0x1175dc * _0x4e9c30,
                _0x5c432f = 0.2,
                _0x3d1674 = _0x3f92b5;
            _0x4ac9cf['drawImage'](_0x3ac6b2, _0x36e42d + _0x4a4493 * -_0x5c432f, _0x4014c2 + _0x20487b * -_0x3d1674, _0x4a4493, _0x20487b), _0x4ac9cf['restore']();
        }
        var _0x3ac6b2 = this['getSkinImageObj'](this['getWing']('macaw', 0x2, !![]));
        if (_0x3ac6b2) {
            _0x4ac9cf['save']();
            var _0x1066bd = -(-0.2 + _0x57a194) * -_0x40941f;
            _0x4ac9cf['rotate'](-_0xb6aa34 + _0x1066bd);
            var _0x36e42d = 0x0,
                _0x4014c2 = _0x1175dc,
                _0x4a4493 = _0x1175dc * 0x2 * 0.62,
                _0x20487b = _0x1175dc * _0x4e9c30,
                _0x5c432f = 0.8,
                _0x3d1674 = _0x3f92b5;
            _0x4ac9cf['drawImage'](_0x3ac6b2, _0x36e42d + _0x4a4493 * -_0x5c432f, _0x4014c2 + _0x20487b * -_0x3d1674, _0x4a4493, _0x20487b), _0x4ac9cf['restore']();
        }
        _0x4ac9cf['restore']();
    }
    if (this['specType'] != 0x0 && this['specType'] != undefined) {
        var _0x8375ea = this['getSkinImageObj'](this['getHead']('macaw', !![]));
        if (_0x8375ea) {
            _0x4ac9cf['save']();
            var _0x2c7896 = this['rad'];
            _0x4ac9cf['drawImage'](_0x8375ea, -_0x2c7896 * _0x5f5d19, (-_0x2c7896 + _0x2c7896 * 0.2) * _0x5f5d19, 0x2 * _0x2c7896 * _0x5f5d19, 0x2 * _0x2c7896 * _0x5f5d19), _0x4ac9cf['restore']();
        }
    }
}
}, _0x4fdbc5['prototype']['readCustomData_onNewlyVisible'] = function (_0x1071f1) {
_0x4fdbc5['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x1071f1), this['customUpdatedProperty'](_0xc26729, _0x1071f1);
}, _0x4fdbc5['prototype']['customUpdatedProperty'] = function (_0x5d24ae, _0x224b71) {
if (_0x5d24ae == _0xc26729) {
    var _0x4db59f = _0x224b71['readUInt8']() == 0x1;
    if (_0x4db59f) {
        var _0x4fec49 = _0x224b71['readUInt16'](),
            _0x30ff35 = _0x224b71['readUInt16']();
        this['createDisguiseAniObj'](_0x4fec49, _0x30ff35);
    } else this['octoDrawObj'] = null;
}
}, _0x4fdbc5['prototype']['createDisguiseAniObj'] = function (_0x30250b, _0x1bfab3) {
if (this['octoDrawObj'] == null) {
    var _0x5316c0 = _0x3360d0['createGameObjOfOType'](_0x4acf80, _0x30250b);
    _0x5316c0['animalType'] = _0x30250b, _0x5316c0['animalSpecies'] = _0x1bfab3, _0x5316c0['rad'] = _0x5316c0['oRad'] = _0x5316c0['nRad'] = this['rad'], _0x5316c0['curBiome'] = this['curBiome'], _0x5316c0['hp'] = 0x5 + Math['random']() * 0x32, this['octoDrawObj'] = _0x5316c0;
}
}, _0x4fdbc5['prototype']['drawHealthBar'] = function () {
this['flag_usingAbility'] && !this['flag_flying'] && this['octoDrawObj'] != null && (this['octoDrawObj']['curBiome'] = this['curBiome'], this['hpPer_n'] = 0x1, this['hpPer'] = this['octoDrawObj']['hp'], this['hpBarA'] = 0x1);
_0x4ac9cf['save']();
var _0xae577c = _0x397f50 < this['hpBarTimeoutT'] ? 0x1 : 0x0;
this['hpBarA'] += (_0xae577c - this['hpBarA']) * 0.04;
if (this['hpBarA'] > 0.001) {
    this['hpPer'] += (this['hpPer_n'] - this['hpPer']) * 0.1;
    var _0x5a2e36 = Math['max'](0x1, this['rad'] / 0x19),
        _0xef82cd = 0x14 * _0x5a2e36,
        _0x16d4ec = 0x5 * _0x5a2e36,
        _0x5d19b7 = 0x0,
        _0xc91ec2 = -this['rad'] - 0xa * _0x5a2e36;
    _0x4ac9cf['globalAlpha'] *= this['hpBarA'], _0x4ac9cf['fillStyle'] = 'rgba(0,0,0,0.35)', _0x4ac9cf['fillRect'](_0x5d19b7 - _0xef82cd / 0x2, _0xc91ec2 - _0x16d4ec / 0x2, _0xef82cd, _0x16d4ec), _0x4ac9cf['fillStyle'] = '#16D729';
    var _0x33f10b = _0xef82cd * (this['hpPer'] / 0x64);
    if (this['flag_usingAbility'] && this['octoIsAnimal']) _0x33f10b = _0xef82cd * (0x19 / 0x64);
    _0x4ac9cf['fillRect'](_0x5d19b7 - _0xef82cd / 0x2, _0xc91ec2 - _0x16d4ec / 0x2, _0x33f10b, _0x16d4ec);
}
_0x4ac9cf['restore']();
}, _0x4fdbc5['prototype']['drawOnTopOfSkinImg'] = function () {
_0x4fdbc5['superClass']['prototype']['drawOnTopOfSkinImg']['call'](this), this['flag_usingAbility'] && !this['flag_flying'] && (this['octoDrawObj'] != null && (_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1, this['octoDrawObj']['mopeSeasonID'] = this['mopeSeasonID'], this['octoDrawObj']['rad'] = this['rad'], this['octoDrawObj']['draw'](), _0x4ac9cf['restore']()));
};

function _0x4fdbc5() {
_0x4fdbc5['superClass']['call'](this, _0x4acf80);
}
window['Macaw'] = _0x4fdbc5, _0x3360d0['setCustomClassForGameObjType'](_0x4fdbc5, _0x4acf80, _0x12b837);
var _0x391ddc = _0x391ddc,
_0xec194 = _0x1dd8d7;
_0x391ddc['prototype'] = Object['create'](_0xec194['prototype']), _0x391ddc['prototype']['constructor'] = _0x391ddc, _0x391ddc['superClass'] = _0xec194, _0x391ddc['prototype']['getSkinName'] = function () {
var _0x155fdf = this['getSpeciesPath']('flamingo') + '/flamingo';
return _0x155fdf += this['specType'] == 0x0 ? '' : this['specType'], _0x155fdf;
}, _0x391ddc['prototype']['animalInfo'] = function () {
var _0x1dbc22 = {};
_0x1dbc22['aniName'] = 'Flamingo';
switch (this['animalSpecies']) {
case 0xca:
    _0x1dbc22['aniName'] = 'Fly Mango';
    break;
}
return _0x1dbc22['aniCol'] = '#FF9000', _0x1dbc22['skinName'] = this['getSpeciesPath']('flamingo') + '/flamingo', _0x1dbc22['upgradeText'] = 'UPGRADED to ' + _0x1dbc22['aniName'] + '!\x0aHold W in water to search for food underwater.\x0a(Tip: Any nearby underwater animals will get surfaced by the flamingo!)', _0x1dbc22;
}, _0x391ddc['prototype']['getSpeciesPath'] = function (_0x509ab2) {
return 'ocean/' + _0x509ab2 + '/' + this['animalSpecies'];
}, _0x391ddc['prototype']['getWing'] = function (_0x145f5c, _0x232fdd, _0xec684e) {
var _0x35389d = 'skins/' + this['getSpeciesPath'](_0x145f5c) + (_0xec684e ? '/pink' : '') + '/';
return _0x35389d += _0x145f5c + '_wing' + _0x232fdd + '.png', _0x35389d;
}, _0x391ddc['prototype']['getHead'] = function (_0x350ae0, _0x4f6c9c) {
var _0x475184 = 'skins/' + this['getSpeciesPath'](_0x350ae0) + (_0x4f6c9c ? '/pink' : '') + '/';
return _0x475184 += _0x350ae0 + '_head.png', _0x475184;
}, _0x391ddc['prototype']['getAbilityInfo'] = function (_0x1c4a31) {
var _0x1bc322 = {};
return _0x1bc322['abilName'] = 'HOLD in water\x0a(find food)', _0x1bc322['abilImg'] = this['flag_isClimbingHill'] || this['flag_flying'] ? 'abilities/Fly.svg' : 'abilities/Dive.svg', _0x1bc322['skinThemeID'] = this['skinThemeID'], _0x1bc322['mopeSeasonID'] = this['mopeSeasonID'], _0x1bc322;
}, _0x391ddc['prototype']['basicDrawSkinImg'] = function () {
_0x391ddc['superClass']['prototype']['basicDrawSkinImg']['call'](this);
if (!this['flag_underWater'] && this['id'] > 0x0) {
    var _0x35a244 = this['skinScale'],
        _0x1853c2 = this['skinRad'],
        _0x40a9b1 = 'skins/' + this['getSpeciesPath']('flamingo') + '/pink/flamingo';
    _0x40a9b1 += this['specType'] == 0x0 ? '' : this['specType'];
    var _0x5e0fdf = this['getSkinImageObj'](_0x40a9b1 + '.png');
    _0x5e0fdf && (_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = this['colorPerc'], _0x4ac9cf['drawImage'](_0x5e0fdf, -_0x1853c2 * _0x35a244, -_0x1853c2 * _0x35a244, 0x2 * _0x1853c2 * _0x35a244, 0x2 * _0x1853c2 * _0x35a244), _0x4ac9cf['restore']());
}
}, _0x391ddc['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) return;
var _0x90509d = 0x1f4 / 0x154;
_0x4ac9cf['save']();
var _0x4e5ed4 = this['flag_flying'] ? 0x2d : 0x2f,
    _0x21cadc = this['flag_flying'] ? 0x5a : 0x2d,
    _0x5537f1 = this['flag_flying'] ? 0.2 : 0.01,
    _0x2e3f0a = this['flag_flying'] ? 2.5 : 0x2,
    _0x3d6fe5 = this['flag_flying'] ? 0x2 : 2.5,
    _0x2e3454 = this['flag_flying'] ? 0.5 : 1.2,
    _0x37ac08 = (_0x397f50 - this['spawnTime']) / 0x3e8;
if (this['flag_flying']) {
    var _0x1f6c1c = _0x2dd807('bird', this['spawnTime']);
    _0x1f6c1c !== undefined && _0x1f6c1c != null && (this['theFrame'] = _0x1f6c1c);
} else this['theFrame'] = !(_0x25ea67 == 0x2 || _0x50a9ba) ? _0x23fdc7(_0x37ac08, _0x2e3454, 0.3, 0x2) : this['birdNoAnimationFlyWingAngle'];
var _0x5ab316 = this['theFrame'],
    _0x3abf4c = this['getSkinImageObj'](this['getWing']('flamingo', 0x1, ![]));
if (_0x3abf4c) {
    _0x4ac9cf['save']();
    var _0x180faf = -(-_0x5537f1 + _0x5ab316) * _0x142401(_0x21cadc),
        _0x1ef4c0 = this['rad'] * 0.8;
    _0x4ac9cf['rotate'](_0x142401(_0x4e5ed4) + _0x180faf);
    var _0x3a1423 = 0x0,
        _0x1d4a01 = this['rad'],
        _0x1f61ac = _0x1ef4c0 * _0x3d6fe5 * 0.62,
        _0x35d57b = _0x1ef4c0 * _0x2e3f0a,
        _0x41b9ea = 0.2,
        _0x49bbab = 1.7;
    _0x4ac9cf['drawImage'](_0x3abf4c, _0x3a1423 + _0x1f61ac * -_0x41b9ea, _0x1d4a01 + _0x35d57b * -_0x49bbab, _0x1f61ac, _0x35d57b), _0x4ac9cf['restore']();
}
var _0x3abf4c = this['getSkinImageObj'](this['getWing']('flamingo', 0x2, ![]));
if (_0x3abf4c) {
    _0x4ac9cf['save']();
    var _0x180faf = -(-_0x5537f1 + _0x5ab316) * _0x142401(-_0x21cadc),
        _0x1ef4c0 = this['rad'] * 0.8;
    _0x4ac9cf['rotate'](_0x142401(-_0x4e5ed4) + _0x180faf);
    var _0x3a1423 = 0x0,
        _0x1d4a01 = this['rad'],
        _0x1f61ac = _0x1ef4c0 * _0x3d6fe5 * 0.62,
        _0x35d57b = _0x1ef4c0 * _0x2e3f0a,
        _0x41b9ea = 0.8,
        _0x49bbab = 1.7;
    _0x4ac9cf['drawImage'](_0x3abf4c, _0x3a1423 + _0x1f61ac * -_0x41b9ea, _0x1d4a01 + _0x35d57b * -_0x49bbab, _0x1f61ac, _0x35d57b), _0x4ac9cf['restore']();
}
_0x4ac9cf['restore']();
if (this['specType'] == 0x1) {
    var _0x2aab3d = this['getSkinImageObj'](this['getHead']('flamingo', ![]));
    if (_0x2aab3d) {
        _0x4ac9cf['save']();
        var _0x1ef4c0 = this['rad'];
        _0x4ac9cf['drawImage'](_0x2aab3d, -_0x1ef4c0 * _0x90509d, (-_0x1ef4c0 + _0x1ef4c0 * 0.1) * _0x90509d, 0x2 * _0x1ef4c0 * _0x90509d, 0x2 * _0x1ef4c0 * _0x90509d), _0x4ac9cf['restore']();
    }
}
}, _0x391ddc['prototype']['drawUnderSkinImgOutline'] = function () {
_0x391ddc['superClass']['prototype']['drawUnderSkinImgOutline']['call'](this);
if (this['flag_usingAbility'] && !this['flag_flying']) {
    var _0x36015b = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0xb0bbc5 = 1.5,
        _0x4c2675 = 0.5,
        _0x497281 = _0x4c2675 * Math['sin'](0x2 * Math['PI'] / _0xb0bbc5 * _0x36015b);
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] *= 0.8, _0x486a28(0x0, this['rad'] * (0.9 + 0.12 * _0x497281), this['rad'] * 0.3, '#2c84ff'), _0x486a28(0x0, -this['rad'] * 0.3, this['rad'] * (1.05 + 0.09 * _0x497281), '#4668ff'), _0x4ac9cf['restore'](), _0x4ac9cf['save']();
    var _0x15a652 = '#4E71C3';
    _0x4ac9cf['globalAlpha'] = 0x1, _0x4ac9cf['fillStyle'] = _0x15a652;
    var _0x3f3340 = this['rad'] * 0.1;
    _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * -0.3, this['rad'] * 1.2, Math['max'](0x0, _0x3f3340 + _0x497281), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.2, this['rad'] * 1.5, Math['max'](0x0, _0x3f3340 - _0x497281), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.3, this['rad'] * 1.2, Math['max'](0x0, _0x3f3340 + _0x497281), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * -0.2, this['rad'] * 1.5, Math['max'](0x0, _0x3f3340 - _0x497281), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['restore']();
}
}, _0x391ddc['prototype']['readCustomData_onNewlyVisible'] = function (_0x4893c2) {
_0x391ddc['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x4893c2);
var _0x3754a3 = _0x4893c2['readUInt8']();
this['colorPerc'] = _0x3754a3 / 0x64;
}, _0x391ddc['prototype']['customUpdatedProperty'] = function (_0x3d9ac2, _0x3b2c7c) {
if (_0x3d9ac2 == _0x3bcbb9) {
    var _0x55bacf = _0x3b2c7c['readUInt8']();
    this['colorPerc'] = _0x55bacf / 0x64;
}
};

function _0x391ddc() {
_0x391ddc['superClass']['call'](this, _0x4acf80);
}
window['Flamingo'] = _0x391ddc, _0x3360d0['setCustomClassForGameObjType'](_0x391ddc, _0x4acf80, _0x4b419b);
var _0xec194 = _0x1dd8d7;
_0x1de70c['prototype'] = Object['create'](_0xec194['prototype']), _0x1de70c['prototype']['constructor'] = _0x1de70c, _0x1de70c['superClass'] = _0xec194, _0x1de70c['prototype']['getSkinName'] = function () {
let _0x5d52d9 = this['getSpeciesPath']() + '/cassowary';
return _0x5d52d9 += this['specType'] == 0x0 ? '' : this['specType'], _0x5d52d9;
}, _0x1de70c['prototype']['getSpeciesPath'] = function () {
return 'land/cassowary/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x1de70c['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x1de70c['prototype']['getAbilityInfo'] = function (_0x5a8b8b) {
var _0x55ee1b = {};
return _0x55ee1b['abilName'] = 'Front Kick\x0a(Hold to Charge)', _0x55ee1b['abilImg'] = 'abilities/Kick.svg', _0x55ee1b['skinThemeID'] = this['skinThemeID'], _0x55ee1b['mopeSeasonID'] = this['mopeSeasonID'], _0x55ee1b;
}, _0x1de70c['prototype']['animalInfo'] = function () {
var _0x61480e = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x61480e['aniName'] = 'Cassowary!';
    break;
case 0x1:
    _0x61480e['aniName'] = 'Golden Cassowary!';
    break;
case 0x2:
    _0x61480e['aniName'] = 'Cotton Cassowary!';
    break;
case 0xca:
    _0x61480e['aniName'] = 'Pastel Cassowary';
    break;
case 0xcc:
    _0x61480e['aniName'] = 'Basilisk Cassowary!';
    break;
}
return _0x61480e['aniCol'] = '#FF9000', _0x61480e['skinName'] = this['getSkinName'](), _0x61480e['upgradeText'] = 'UPGRADED to ' + _0x61480e['aniName'] + '!\x0aHold W to charge up a kick, the longer you hold, the more powerful it is!', _0x61480e;
};

function _0x1de70c() {
_0x1de70c['superClass']['call'](this, _0x4acf80);
}
window['Cassowary'] = _0x1de70c, _0x3360d0['setCustomClassForGameObjType'](_0x1de70c, _0x4acf80, _0x7fee1e);
var _0xec194 = _0x1dd8d7;
_0x5307d3['prototype'] = Object['create'](_0xec194['prototype']), _0x5307d3['prototype']['constructor'] = _0x5307d3, _0x5307d3['superClass'] = _0xec194, _0x5307d3['prototype']['getSkinName'] = function () {
var _0x3dec52 = 'land/chicken/' + this['animalSpecies'] + '/chicken';
return _0x3dec52 += this['specType'] == 0x0 ? '' : this['specType'], _0x3dec52;
}, _0x5307d3['prototype']['animalInfo'] = function () {
var _0x17201f = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x17201f['aniName'] = 'Chicken';
    break;
case 0xc9:
    _0x17201f['aniName'] = 'Countryside Chick';
    break;
case 0xca:
    _0x17201f['aniName'] = 'Lightning Lord';
    break;
}
return _0x17201f['aniCol'] = '#FF9000', _0x17201f['skinName'] = 'land/chicken/' + this['animalSpecies'] + '/chicken', _0x17201f['upgradeText'] = 'UPGRADED to ' + _0x17201f['aniName'] + '!', _0x17201f;
}, _0x5307d3['prototype']['getWing'] = function (_0x57b7fc, _0x56398f, _0x46ca08) {
var _0x2c860e = 'skins/land/' + (_0x46ca08 ? this['getSpeciesPath'](_0x57b7fc) + '/' : _0x57b7fc + '/');
return _0x2c860e += _0x57b7fc + '_wing' + _0x56398f + '.png', _0x2c860e;
}, _0x5307d3['prototype']['getHead'] = function (_0x59f333, _0x5e0255) {
var _0x4fa086 = 'skins/land/' + (_0x5e0255 ? this['getSpeciesPath'](_0x59f333) + '/' : _0x59f333 + '/');
return _0x4fa086 += _0x59f333 + '_head.png', _0x4fa086;
}, _0x5307d3['prototype']['getAbilityInfo'] = function (_0x3e6361) {
var _0x1f6c3f = {};
return _0x1f6c3f['abilName'] = 'Run!', _0x1f6c3f['abilImg'] = 'abilities/Dash-Boost.svg', _0x1f6c3f['skinThemeID'] = this['skinThemeID'], _0x1f6c3f['mopeSeasonID'] = this['mopeSeasonID'], _0x1f6c3f;
}, _0x5307d3['prototype']['drawSkinCustomization'] = function () {
var _0x4a1864 = 0x1f4 / 0x154;
if (this['flag_usingAbility']) {
    _0x4ac9cf['save']();
    var _0x4db49b = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x235447 = _0x23fdc7(_0x4db49b, 0.3, 0x1, 0x2),
        _0x5893f3 = this['getSkinImageObj'](this['getWing']('chicken', 0x1, !![]));
    if (_0x5893f3) {
        _0x4ac9cf['save']();
        var _0x41d4d0 = -(-0.2 + _0x235447) * _0x142401(0xf),
            _0x550c91 = this['rad'] * 0.8;
        _0x4ac9cf['rotate'](_0x142401(0xf) + _0x41d4d0);
        var _0x943663 = 0x0,
            _0x2cd6a0 = this['rad'],
            _0x9c30fd = _0x550c91 * 0x2 * 0.7,
            _0x1c42ec = _0x550c91 * 2.2,
            _0x54b79d = 0x0,
            _0x2faa02 = 1.5;
        _0x4ac9cf['drawImage'](_0x5893f3, _0x943663 + _0x9c30fd * -_0x54b79d, _0x2cd6a0 + _0x1c42ec * -_0x2faa02, _0x9c30fd, _0x1c42ec), _0x4ac9cf['restore']();
    }
    var _0x5893f3 = this['getSkinImageObj'](this['getWing']('chicken', 0x2, !![]));
    if (_0x5893f3) {
        _0x4ac9cf['save']();
        var _0x41d4d0 = -(-0.2 + _0x235447) * _0x142401(-0xf),
            _0x550c91 = this['rad'] * 0.8;
        _0x4ac9cf['rotate'](_0x142401(-0xf) + _0x41d4d0);
        var _0x943663 = 0x0,
            _0x2cd6a0 = this['rad'],
            _0x9c30fd = _0x550c91 * 0x2 * 0.7,
            _0x1c42ec = _0x550c91 * 2.2,
            _0x54b79d = 0x1,
            _0x2faa02 = 1.5;
        _0x4ac9cf['drawImage'](_0x5893f3, _0x943663 + _0x9c30fd * -_0x54b79d, _0x2cd6a0 + _0x1c42ec * -_0x2faa02, _0x9c30fd, _0x1c42ec), _0x4ac9cf['restore']();
    }
    var _0x11bef2 = this['getSkinImageObj'](this['getHead']('chicken', !![]));
    if (_0x11bef2) {
        _0x4ac9cf['save']();
        var _0x550c91 = this['rad'] * 0x1,
            _0x254e8c = -this['rad'] * 0.1;
        _0x4ac9cf['drawImage'](_0x11bef2, -_0x550c91 * _0x4a1864, -_0x550c91 + _0x254e8c * _0x4a1864, 0x2 * _0x550c91 * _0x4a1864, 0x2 * _0x550c91 * _0x4a1864), _0x4ac9cf['restore']();
    }
    _0x4ac9cf['restore']();
}
};

function _0x5307d3() {
_0x5307d3['superClass']['call'](this, _0x4acf80);
}
window['Chicken'] = _0x5307d3, _0x3360d0['setCustomClassForGameObjType'](_0x5307d3, _0x4acf80, _0x1b4e84);
var _0x2c8d99 = _0x2c8d99,
_0xec194 = _0x1dd8d7;
_0x2c8d99['prototype'] = Object['create'](_0xec194['prototype']), _0x2c8d99['prototype']['constructor'] = _0x2c8d99, _0x2c8d99['superClass'] = _0xec194, _0x2c8d99['prototype']['animalInfo'] = function () {
var _0x3c044f = {};
_0x3c044f['aniName'] = 'Woodpecker';
switch (this['animalSpecies']) {
case 0xca:
    _0x3c044f['aniName'] = 'Jackhammer';
    break;
}
return _0x3c044f['aniCol'] = '#FF9000', _0x3c044f['skinName'] = this['getSpeciesPath']('woodpecker') + '/woodpecker', _0x3c044f['upgradeText'] = 'UPGRADED to ' + _0x3c044f['aniName'] + '!\x0aHold W to Peck other animals,\x0a or (Hint: Use ability on hills to fly)', _0x3c044f;
}, _0x2c8d99['prototype']['getSpeciesPath'] = function (_0x16dcb6) {
return 'land/' + _0x16dcb6 + '/' + this['animalSpecies'];
}, _0x2c8d99['prototype']['getSkinName'] = function () {
var _0xa6b203 = this['getSpeciesPath']('woodpecker') + '/woodpecker';
return _0xa6b203 += this['specType'] == 0x0 ? '' : this['specType'], _0xa6b203;
}, _0x2c8d99['prototype']['getHead'] = function (_0x581d5d, _0x3cef5d) {
var _0x144175 = 'skins/' + (_0x3cef5d ? this['getSpeciesPath'](_0x581d5d) + '/' : _0x581d5d + '/');
return _0x144175 += _0x581d5d + '_head' + (!this['flag_flying'] && this['flag_usingAbility'] ? '1' : '') + '.png', _0x144175;
}, _0x2c8d99['prototype']['getAbilityInfo'] = function (_0x226943) {
var _0x503c99 = {};
return _0x503c99['abilName'] = 'HOLD to Peck\x0a/ Fly', _0x503c99['abilImg'] = 'abilities/Peck.svg', _0x503c99['skinThemeID'] = this['skinThemeID'], _0x503c99['mopeSeasonID'] = this['mopeSeasonID'], _0x503c99;
}, _0x2c8d99['prototype']['getAniRadius'] = function (_0x280b43) {
if (this['flag_usingAbility'] && this['flag_flying']) return _0x280b43 * 0.8;
return _0x280b43;
}, _0x2c8d99['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) return;
var _0x14379b = 'skins'; {
    var _0x33ec1d = 0x1f4 / 0x154;
    _0x4ac9cf['save']();
    var _0x209313 = this['flag_flying'] ? 0x2d : 0x2f,
        _0x30c0a0 = this['flag_flying'] ? 0x5a : 0x2d,
        _0x2cb12d = this['flag_flying'] ? 0.2 : 0.01,
        _0x239002 = this['flag_flying'] ? 2.5 : 0x2,
        _0x50d49d = this['flag_flying'] ? 2.2 : 2.5,
        _0xb3f26c = this['flag_flying'] ? 0.5 : 0.3,
        _0x292cb3 = 0.3,
        _0x1ab599 = (_0x397f50 - this['spawnTime']) / 0x3e8;
    if (this['flag_flying']) {
        var _0x45a907 = _0x2dd807('bird', this['spawnTime']);
        _0x45a907 !== undefined && _0x45a907 != null && (this['theFrame'] = _0x45a907);
    } else this['theFrame'] = !(_0x25ea67 == 0x2 || _0x50a9ba) ? _0x23fdc7(_0x1ab599, _0xb3f26c, _0x292cb3, 0x2) : this['birdNoAnimationFlyWingAngle'];
    var _0xe354ed = this['theFrame'],
        _0x1ffb6f = this['getSkinImageObj'](this['getWing']('woodpecker', 0x1, !![]));
    if (_0x1ffb6f) {
        _0x4ac9cf['save']();
        var _0x5c466a = -(-_0x2cb12d + _0xe354ed) * _0x142401(_0x30c0a0),
            _0xfa7ca0 = this['rad'] * 0.8;
        _0x4ac9cf['rotate'](_0x142401(_0x209313) + _0x5c466a);
        var _0x4b6928 = 0x0,
            _0x17b505 = this['rad'],
            _0x198c3f = _0xfa7ca0 * _0x50d49d * 0.62,
            _0x37ef25 = _0xfa7ca0 * _0x239002,
            _0x3bec2e = 0.2,
            _0x2b3e83 = 1.7;
        _0x4ac9cf['drawImage'](_0x1ffb6f, _0x4b6928 + _0x198c3f * -_0x3bec2e, _0x17b505 + _0x37ef25 * -_0x2b3e83, _0x198c3f, _0x37ef25), _0x4ac9cf['restore']();
    }
    var _0x1ffb6f = this['getSkinImageObj'](this['getWing']('woodpecker', 0x2, !![]));
    if (_0x1ffb6f) {
        _0x4ac9cf['save']();
        var _0x5c466a = -(-_0x2cb12d + _0xe354ed) * _0x142401(-_0x30c0a0),
            _0xfa7ca0 = this['rad'] * 0.8;
        _0x4ac9cf['rotate'](_0x142401(-_0x209313) + _0x5c466a);
        var _0x4b6928 = 0x0,
            _0x17b505 = this['rad'],
            _0x198c3f = _0xfa7ca0 * _0x50d49d * 0.62,
            _0x37ef25 = _0xfa7ca0 * _0x239002,
            _0x3bec2e = 0.8,
            _0x2b3e83 = 1.7;
        _0x4ac9cf['drawImage'](_0x1ffb6f, _0x4b6928 + _0x198c3f * -_0x3bec2e, _0x17b505 + _0x37ef25 * -_0x2b3e83, _0x198c3f, _0x37ef25), _0x4ac9cf['restore']();
    }
    _0x4ac9cf['restore']();
    if (this['specType'] != 0x0 && this['specType'] != undefined) {
        var _0xefec1e = this['getSkinImageObj'](this['getHead']('woodpecker', !![]));
        if (_0xefec1e) {
            _0xe354ed = 0x0;
            !this['flag_flying'] && (_0x292cb3 = 0x3, _0xb3f26c = 0.18, _0xe354ed = !(_0x25ea67 == 0x2) ? _0x23fdc7(_0x1ab599, _0xb3f26c, _0x292cb3, 0x2) : this['birdNoAnimationFlyWingAngle']);
            _0x4ac9cf['save']();
            var _0xfa7ca0 = this['rad'],
                _0x395583 = !this['flag_flying'] ? (-_0xfa7ca0 + _0xfa7ca0 * 0.1) * _0x33ec1d + _0xe354ed : -_0xfa7ca0;
            _0x4ac9cf['drawImage'](_0xefec1e, -_0xfa7ca0 * _0x33ec1d, _0x395583, 0x2 * _0xfa7ca0 * _0x33ec1d, 0x2 * _0xfa7ca0 * _0x33ec1d), _0x4ac9cf['restore']();
        }
    }
}
};

function _0x2c8d99() {
_0x2c8d99['superClass']['call'](this, _0x4acf80);
}
window['Woodpecker'] = _0x2c8d99, _0x3360d0['setCustomClassForGameObjType'](_0x2c8d99, _0x4acf80, _0x482d7d);
var _0x1e4e73 = _0x1e4e73,
_0xec194 = _0x1dd8d7;
_0x1e4e73['prototype'] = Object['create'](_0xec194['prototype']), _0x1e4e73['prototype']['constructor'] = _0x1e4e73, _0x1e4e73['superClass'] = _0xec194, _0x1e4e73['prototype']['updateZ'] = function () {
if (this['flag_usingAbility']) {
    if (this['flag_flying']) {
        this['z'] = 0x186a0 + this['rad'];
        return;
    }
}
this['z'] = 0x3e8 + this['rad'];
}, _0x1e4e73['prototype']['animalInfo'] = function () {
var _0x312077 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x312077['aniName'] = 'Peacock';
    break;
case 0xc8:
    _0x312077['aniName'] = 'Plague Raptor';
    break;
case 0xca:
    _0x312077['aniName'] = 'Spectrum Peacock';
    break;
}
return _0x312077['aniCol'] = '#FF9000', _0x312077['skinName'] = this['getSpeciesPath']('peacock') + '/peacock', _0x312077['upgradeText'] = 'UPGRADED to ' + _0x312077['aniName'] + '!\x0aHold W to hypnotize prey: prey gets pulled in, predtors pushed!. \x0aHint:Start the ability on a hill to fly!. ', _0x312077;
}, _0x1e4e73['prototype']['getSkinName'] = function () {
var _0x133f0f = this['getSpeciesPath']('peacock') + '/peacock';
return _0x133f0f += this['specType'] == 0x0 ? '' : this['specType'], _0x133f0f;
}, _0x1e4e73['prototype']['getSpeciesPath'] = function (_0x17f7a9) {
return 'land/' + _0x17f7a9 + '/' + this['animalSpecies'];
}, _0x1e4e73['prototype']['getWing'] = function (_0x43cea8, _0xa36e63, _0x1b85f8) {
var _0x43929b = 'skins/' + (_0x1b85f8 ? this['getSpeciesPath'](_0x43cea8) + '/' : _0x43cea8 + '/');
return _0x43929b += _0x43cea8 + '_wing' + _0xa36e63 + '.png', _0x43929b;
}, _0x1e4e73['prototype']['getHead'] = function (_0x109f53, _0x4c6fe4) {
var _0x20b9eb = 'skins/' + (_0x4c6fe4 ? this['getSpeciesPath'](_0x109f53) + '/' : _0x109f53 + '/');
return _0x20b9eb += _0x109f53 + '_head.png', _0x20b9eb;
}, _0x1e4e73['prototype']['getAniRadius'] = function (_0x257a83) {
if (this['flag_usingAbility'] && this['flag_flying']) return _0x257a83 * 0.9;
return _0x257a83;
}, _0x1e4e73['prototype']['getSkinImageObj'] = function (_0x2fb8ea) {
var _0x1eaec2 = this['animalSpecies'] === 0xc8 ? 0x1 : this['mopeSeasonID'];
return this['getSkinImageObjForSeason'](_0x2fb8ea, _0x1eaec2);
}, _0x1e4e73['prototype']['basicDrawSkinImg'] = function () {
this['setSkinScale']();
var _0x13b3de = 0.05,
    _0x381973 = -0.8,
    _0x2eb207 = this['getAniRadius'](this['skinRad'] - this['outlineW']),
    _0x14945f = 0x1f4 / 0x154;
if (!this['flag_flying'] && this['flag_usingAbility']) {
    var _0x3df58f = -0.55,
        _0xbce387 = 'peacock_ability',
        _0x554988 = this['getSkinImageObj']('skins/land/peacock/' + this['animalSpecies'] + '/' + _0xbce387 + '.png'),
        _0x4be715 = this['skinScale'] + (this['flag_usingAbility'] && !this['flag_flying'] ? 0x1 : 0x0);
    _0x554988 && (_0x4ac9cf['save'](), _0x4ac9cf['drawImage'](_0x554988, -_0x2eb207 * _0x4be715, (-_0x2eb207 + _0x2eb207 * _0x3df58f) * _0x4be715, 0x2 * _0x2eb207 * _0x4be715, 0x2 * _0x2eb207 * _0x4be715), _0x4ac9cf['restore']());
}
if (this['loadedSkinImg']) {
    var _0x58e8d9 = this['flag_usingAbility'] && !this['flag_flying'] ? this['skinScale'] * 1.1 : _0x14945f;
    _0x4ac9cf['drawImage'](this['loadedSkinImg'], -_0x2eb207 * _0x58e8d9, (-_0x2eb207 + _0x2eb207 * _0x13b3de) * _0x58e8d9, 0x2 * _0x2eb207 * _0x58e8d9, 0x2 * _0x2eb207 * _0x58e8d9);
    if (this['flag_flying'] || !this['flag_usingAbility']) {
        var _0xbce387 = 'tail',
            _0x554988 = this['getSkinImageObj']('skins/land/peacock/' + this['animalSpecies'] + '/' + _0xbce387 + '.png'),
            _0x4be715 = this['skinScale'];
        if (_0x554988) {
            _0x4ac9cf['save']();
            var _0x2eb207 = this['rad'] - this['outlineW'];
            _0x4ac9cf['drawImage'](_0x554988, -_0x2eb207 * _0x4be715, (-_0x2eb207 + _0x2eb207 * _0x381973) * _0x4be715, 0x2 * _0x2eb207 * _0x4be715, 0x2 * _0x2eb207 * _0x4be715), _0x4ac9cf['restore']();
        }
    }
    if (!this['flag_usingAbility']) {
        var _0x4ba70e = this['getSkinImageObj']('skins/' + this['getSpeciesPath']('peacock') + '/peacock_top.png');
        _0x4ba70e && _0x4ac9cf['drawImage'](_0x4ba70e, -_0x2eb207 * _0x14945f, (-_0x2eb207 + _0x2eb207 * _0x13b3de) * _0x14945f, 0x2 * _0x2eb207 * _0x14945f, 0x2 * _0x2eb207 * _0x14945f);
    }
}
}, _0x1e4e73['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) return;
var _0x53bef7 = 0x1f4 / 0x154;
if (this['flag_flying'] && !this['flag_isGrabbed']) {
    _0x4ac9cf['save']();
    var _0x2cb196 = _0x2dd807('bird', this['spawnTime']);
    _0x2cb196 !== undefined && _0x2cb196 != null && (this['theFrame'] = _0x2cb196);
    var _0x417fcb = !(_0x25ea67 == 0x2 || _0x50a9ba) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'],
        _0xdb05e = this['getSkinImageObj'](this['getWing']('peacock', 0x1, !![]));
    if (_0xdb05e) {
        _0x4ac9cf['save']();
        var _0x4f2268 = -(-0.2 + _0x417fcb) * _0x40941f,
            _0x46cb75 = this['rad'] * 0.8;
        _0x4ac9cf['rotate'](_0x142401(0x2d) + _0x4f2268);
        var _0x17cc48 = 0x0,
            _0x1385f0 = this['rad'],
            _0x4d0e7e = _0x46cb75 * 0x2 * 0.62,
            _0x49b4e1 = _0x46cb75 * 2.5,
            _0x9d2b03 = 0.2,
            _0x550799 = 1.7;
        _0x4ac9cf['drawImage'](_0xdb05e, _0x17cc48 + _0x4d0e7e * -_0x9d2b03, _0x1385f0 + _0x49b4e1 * -_0x550799, _0x4d0e7e, _0x49b4e1), _0x4ac9cf['restore']();
    }
    var _0xdb05e = this['getSkinImageObj'](this['getWing']('peacock', 0x2, !![]));
    if (_0xdb05e) {
        _0x4ac9cf['save']();
        var _0x4f2268 = -(-0.2 + _0x417fcb) * _0x142401(-0x5a),
            _0x46cb75 = this['rad'] * 0.8;
        _0x4ac9cf['rotate'](_0x142401(-0x2d) + _0x4f2268);
        var _0x17cc48 = 0x0,
            _0x1385f0 = this['rad'],
            _0x4d0e7e = _0x46cb75 * 0x2 * 0.62,
            _0x49b4e1 = _0x46cb75 * 2.5,
            _0x9d2b03 = 0.8,
            _0x550799 = 1.7;
        _0x4ac9cf['drawImage'](_0xdb05e, _0x17cc48 + _0x4d0e7e * -_0x9d2b03, _0x1385f0 + _0x49b4e1 * -_0x550799, _0x4d0e7e, _0x49b4e1), _0x4ac9cf['restore']();
    }
    _0x4ac9cf['restore']();
} else {
    if (this['flag_usingAbility'] && !this['flag_flying']) {
        _0x4ac9cf['save']();
        var _0x2bed1d = this['flag_flying'] ? 0x2d : 0x14,
            _0xb40fef = this['flag_flying'] ? 0x5a : 0x2d,
            _0x44c170 = this['flag_flying'] ? 0.2 : 0.01,
            _0x2672ce = this['flag_flying'] ? 2.5 : 0x2,
            _0x2f86ee = this['flag_flying'] ? 2.5 : 0x2,
            _0x26b323 = this['flag_flying'] ? 0x0 : -0.4,
            _0x411c3d = this['flag_flying'] ? 0x0 : -0.2,
            _0x166f5c = this['flag_flying'] ? 0.5 : 1.2,
            _0x42c6b3 = this['flag_flying'] ? 0.3 : 0.1,
            _0x22abcc = (_0x397f50 - this['spawnTime']) / 0x3e8,
            _0x417fcb = !(_0x25ea67 == 0x2 || _0x50a9ba) ? _0x23fdc7(_0x22abcc, _0x166f5c, _0x42c6b3, 0x2) : this['birdNoAnimationFlyWingAngle'],
            _0xdb05e = this['getSkinImageObj'](this['getWing']('peacock', 0x1, !![]));
        if (_0xdb05e) {
            _0x4ac9cf['save']();
            var _0x4f2268 = -(-_0x44c170 + _0x417fcb) * _0x142401(_0xb40fef),
                _0x46cb75 = this['rad'] * 0.8;
            _0x4ac9cf['rotate'](_0x142401(_0x2bed1d) + _0x4f2268);
            var _0x17cc48 = 0x0,
                _0x1385f0 = this['rad'],
                _0x4d0e7e = _0x46cb75 * _0x2f86ee * 0.62,
                _0x49b4e1 = _0x46cb75 * _0x2672ce,
                _0x9d2b03 = 0.2 + _0x26b323,
                _0x550799 = 1.7 + _0x411c3d;
            _0x4ac9cf['drawImage'](_0xdb05e, _0x17cc48 + _0x4d0e7e * -_0x9d2b03, _0x1385f0 + _0x49b4e1 * -_0x550799, _0x4d0e7e, _0x49b4e1), _0x4ac9cf['restore']();
        }
        var _0xdb05e = this['getSkinImageObj'](this['getWing']('peacock', 0x2, !![]));
        if (_0xdb05e) {
            _0x4ac9cf['save']();
            var _0x4f2268 = -(-_0x44c170 + _0x417fcb) * _0x142401(-_0xb40fef),
                _0x46cb75 = this['rad'] * 0.8;
            _0x4ac9cf['rotate'](_0x142401(-_0x2bed1d) + _0x4f2268);
            var _0x17cc48 = 0x0,
                _0x1385f0 = this['rad'],
                _0x4d0e7e = _0x46cb75 * _0x2f86ee * 0.62,
                _0x49b4e1 = _0x46cb75 * _0x2672ce,
                _0x9d2b03 = 0.8 - _0x26b323,
                _0x550799 = 1.7 + _0x411c3d;
            _0x4ac9cf['drawImage'](_0xdb05e, _0x17cc48 + _0x4d0e7e * -_0x9d2b03, _0x1385f0 + _0x49b4e1 * -_0x550799, _0x4d0e7e, _0x49b4e1), _0x4ac9cf['restore']();
        }
        _0x4ac9cf['restore']();
    }
}
if (this['specType'] != 0x0 && this['specType'] != undefined) {
    var _0x3ac3d7 = 0.4,
        _0x20b9d9 = this['getSkinImageObj'](this['getHead']('peacock', !![]));
    if (_0x20b9d9) {
        _0x4ac9cf['save']();
        var _0x46cb75 = this['rad'];
        _0x4ac9cf['drawImage'](_0x20b9d9, -_0x46cb75 * _0x53bef7, (-_0x46cb75 + _0x46cb75 * _0x3ac3d7) * _0x53bef7, 0x2 * _0x46cb75 * _0x53bef7, 0x2 * _0x46cb75 * _0x53bef7), _0x4ac9cf['restore']();
    }
}
};

function _0x1e4e73() {
_0x1e4e73['superClass']['call'](this, _0x4acf80);
}
window['Peacock'] = _0x1e4e73, _0x3360d0['setCustomClassForGameObjType'](_0x1e4e73, _0x4acf80, _0x17b74d);
var _0xec194 = _0x1dd8d7;
_0x375064['prototype'] = Object['create'](_0xec194['prototype']), _0x375064['prototype']['constructor'] = _0x375064, _0x375064['superClass'] = _0xec194, _0x375064['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
if (this['flag_canClimbHill'] || this['flag_flying']) this['z'] += 0x186a0;
}, _0x375064['prototype']['animalInfo'] = function () {
var _0x1ca162 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x1ca162['aniName'] = 'Gazelle';
    break;
case 0x64:
    _0x1ca162['aniName'] = 'Falmmy Hart';
    break;
case 0xca:
    _0x1ca162['aniName'] = 'Retro Neon Gazelle';
    break;
}
return _0x1ca162['skinName'] = this['getSkinName'](), _0x1ca162['aniCol'] = '#FF9000', _0x1ca162['upgradeText'] = 'UPGRADED to ' + _0x1ca162['aniName'] + '!\x0aHold \'W\' to Jump High through everything.', _0x1ca162;
}, _0x375064['prototype']['moveF'] = 0.08, _0x375064['prototype']['jumpAnim'] = null, _0x375064['prototype']['frame'] = 0x0, _0x375064['prototype']['drawUnderSkinImg'] = function () {
if (this['flag_usingAbility']) {
    var _0x44489f = 0x1;
    this['jumpAnim'] == null && (this['jumpAnim'] = new _0x21dde4(this, 0.5, _0x21dde4['halfWave']), this['jumpAnim']['keepLastFrame'] = !![], this['jumpAnim']['loop'] = !![], this['jumpAnim']['onFrameEntered'] = function (_0x2ffbaa) {
        this['forObj']['frame'] = _0x2ffbaa;
    }, this['jumpAnim']['onStop'] = function () {});
    if (this['jumpAnim'] != null) this['jumpAnim']['run']();
    var _0x1dcc75 = this['rad'] - this['outlineW'],
        _0x4f081f = 0x1f4 / 0x154;
    this['setSkinScale']();
    var _0xeaa7b = 'skins/' + this['getSkinPath']() + '/legs0.png',
        _0x43738c = 'skins/' + this['getSkinPath']() + '/legs1.png',
        _0x1fea8d = this['getSkinImageObj'](_0xeaa7b),
        _0x35db9d = this['getSkinImageObj'](_0x43738c);
    if (_0x1fea8d && _0x35db9d) {
        var _0x4f081f = this['skinScale'] + this['skinScale'] * 0.15 * this['frame'],
            _0x1dcc75 = this['skinRad'];
        this['specType'] == 0x0 ? (_0x4ac9cf['drawImage'](_0x1fea8d, -_0x1dcc75 * _0x4f081f, -_0x1dcc75 * _0x4f081f, 0x2 * _0x1dcc75 * _0x4f081f, 0x2 * _0x1dcc75 * _0x4f081f), _0x4ac9cf['drawImage'](_0x35db9d, -_0x1dcc75 * _0x4f081f, (-_0x1dcc75 - _0x1dcc75 * this['moveF'] * this['frame']) * _0x4f081f, 0x2 * _0x1dcc75 * _0x4f081f, 0x2 * _0x1dcc75 * _0x4f081f)) : (_0x4ac9cf['drawImage'](_0x35db9d, -_0x1dcc75 * _0x4f081f, -_0x1dcc75 * _0x4f081f, 0x2 * _0x1dcc75 * _0x4f081f, 0x2 * _0x1dcc75 * _0x4f081f), _0x4ac9cf['drawImage'](_0x1fea8d, -_0x1dcc75 * _0x4f081f, (-_0x1dcc75 + _0x1dcc75 * this['moveF'] * this['frame']) * _0x4f081f, 0x2 * _0x1dcc75 * _0x4f081f, 0x2 * _0x1dcc75 * _0x4f081f));
    }
} else this['jumpAnim'] = null;
}, _0x375064['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x375064['prototype']['getSkinPath'] = function (_0x427026) {
return 'desert/gazelle/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x375064['prototype']['getSkinName'] = function () {
var _0x465f16 = this['getSkinPath']() + '/gazelle';
return _0x465f16 += this['specType'] == 0x0 ? '' : this['specType'], _0x465f16;
}, _0x375064['prototype']['getAbilityInfo'] = function (_0x35957c) {
var _0x4194cb = {};
return _0x4194cb['abilImg'] = 'abilities/Jump.svg', _0x4194cb['abilName'] = 'HOLD to Jump High\x0a', _0x4194cb['skinThemeID'] = this['skinThemeID'], _0x4194cb['mopeSeasonID'] = this['mopeSeasonID'], _0x4194cb;
};

function _0x375064() {
_0x375064['superClass']['call'](this, _0x4acf80);
}
window['Gazelle'] = _0x375064, _0x3360d0['setCustomClassForGameObjType'](_0x375064, _0x4acf80, _0x332195);
var _0xec194 = _0x1dd8d7;
_0x2e1054['prototype'] = Object['create'](_0xec194['prototype']), _0x2e1054['prototype']['constructor'] = _0x2e1054, _0x2e1054['superClass'] = _0xec194, _0x2e1054['prototype']['animalInfo'] = function () {
var _0x357728 = {};
_0x357728['aniCol'] = '#FF9000';
switch (this['animalSpecies']) {
case 0x0:
    _0x357728['aniName'] = 'Armadillo';
    break;
}
return _0x357728['skinName'] = this['getSkinName'](), _0x357728['upgradeText'] = 'UPGRADED to ' + _0x357728['aniName'] + '!\x0aHold \'W\' to roll through everything. \x0aCarefully, try eating mangoes around venus flytraps!', _0x357728;
}, _0x2e1054['prototype']['drawUnderSkinTail'] = function (_0x4029b5) {
!this['flag_usingAbility'] && _0x2e1054['superClass']['prototype']['drawUnderSkinTail']['call'](this, _0x4029b5);
}, _0x2e1054['prototype']['drawAnimalUnderSkinCircle'] = function (_0x1a28e0) {
!this['flag_usingAbility'] && _0x2e1054['superClass']['prototype']['drawAnimalUnderSkinCircle']['call'](this, _0x1a28e0);
}, _0x2e1054['prototype']['basicDrawSkinImg'] = function () {
if (!this['flag_usingAbility']) {
    _0x2e1054['superClass']['prototype']['basicDrawSkinImg']['call'](this);
    return;
} else {
    this['setSkinScale'](), this['frameNumber'] = Math['trunc'](_0x397f50 / 0x78) % 0x6;
    var _0x197701 = 'skins/' + this['getSkin']() + this['frameNumber'] + '.png',
        _0x155973 = this['getSkinImageObj'](_0x197701);
    if (_0x155973) {
        var _0x2546e1 = this['skinScale'],
            _0x2e1db5 = this['skinRad'];
        _0x4ac9cf['drawImage'](_0x155973, -_0x2e1db5 * _0x2546e1, -_0x2e1db5 * _0x2546e1, 0x2 * _0x2e1db5 * _0x2546e1, 0x2 * _0x2e1db5 * _0x2546e1);
    }
}
}, _0x2e1054['prototype']['getSkin'] = function () {
return 'desert/armadillo/' + this['animalSpecies'] + this['getSubSpecies']() + '/armadillo';
}, _0x2e1054['prototype']['getSkinName'] = function () {
return 'desert/armadillo/' + this['animalSpecies'] + this['getSubSpecies']() + '/armadillo' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x2e1054['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x2e1054() {
_0x2e1054['superClass']['call'](this, _0x4acf80);
}
window['Armadillo'] = _0x2e1054, _0x3360d0['setCustomClassForGameObjType'](_0x2e1054, _0x4acf80, _0x19f3fe);
var _0xec194 = _0x1dd8d7;
_0x6f2e2['prototype'] = Object['create'](_0xec194['prototype']), _0x6f2e2['prototype']['constructor'] = _0x6f2e2, _0x6f2e2['superClass'] = _0xec194, _0x6f2e2['prototype']['animalInfo'] = function () {
var _0xe10604 = {};
_0xe10604['aniCol'] = '#FF9000';
switch (this['animalSpecies']) {
case 0x64:
    _0xe10604['aniName'] = 'Cacti Rat';
    break;
case 0x0:
    _0xe10604['aniName'] = 'Desert Rat';
    break;
case 0xca:
    _0xe10604['aniName'] = 'Plasma Rat';
    break;
}
return _0xe10604['skinName'] = this['getSkinName'](), _0xe10604['upgradeText'] = '', _0xe10604;
}, _0x6f2e2['prototype']['getSkinName'] = function () {
return this['getSkinPath']() + '/kangaroorat' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x6f2e2['prototype']['getSkinPath'] = function () {
return 'desert/kangaroorat/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x6f2e2['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x6f2e2['prototype']['flapStart'] = 0x0, _0x6f2e2['prototype']['drawSkinCustomization'] = function () {
if (this['flag_usingAbility']) {
    var _0x5153c3 = 'skins/' + this['getSkinPath']() + '/tail.png',
        _0xcf2824 = this['getSkinImageObj'](_0x5153c3);
    if (_0xcf2824) {
        var _0x339081 = this['skinScale'] * 1.5,
            _0x189344 = this['skinRad'];
        _0x4ac9cf['drawImage'](_0xcf2824, -_0x189344 * _0x339081, (-_0x189344 + _0x189344 * -0.08) * _0x339081, 0x2 * _0x189344 * _0x339081, 0x2 * _0x189344 * _0x339081);
    }
}
};

function _0x6f2e2() {
_0x6f2e2['superClass']['call'](this, _0x4acf80);
}
window['KangarooRat'] = _0x6f2e2, _0x3360d0['setCustomClassForGameObjType'](_0x6f2e2, _0x4acf80, _0x37c7c9);
var _0xec194 = _0x1dd8d7;
_0x8f6dff['prototype'] = Object['create'](_0xec194['prototype']), _0x8f6dff['prototype']['constructor'] = _0x8f6dff, _0x8f6dff['superClass'] = _0xec194, _0x8f6dff['prototype']['animalInfo'] = function () {
var _0xe7f81b = {};
switch (this['animalSpecies']) {
case 0x0:
    _0xe7f81b['aniName'] = 'Desert Chipmunk';
    break;
case 0xc8:
    _0xe7f81b['aniName'] = 'Velvet Chipmunk';
    break;
case 0xca:
    _0xe7f81b['aniName'] = 'Chipmonk';
    break;
}
return _0xe7f81b['skinName'] = this['getSkinName'](), _0xe7f81b['aniCol'] = '#FF9000', _0xe7f81b['upgradeText'] = 'UPGRADED to ' + _0xe7f81b['aniName'] + '!\x0a Press W to Spit food to boost yourself!', _0xe7f81b;
}, _0x8f6dff['prototype']['getSkinName'] = function () {
return this['getSkinPath']() + '/chipmunk' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x8f6dff['prototype']['getSkinPath'] = function () {
return 'desert/chipmunk/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x8f6dff['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x8f6dff['prototype']['getAbilityInfo'] = function (_0x4fcb11) {
var _0x2c005e = {};
return _0x2c005e['abilName'] = 'Spits Food!', _0x2c005e['abilImg'] = 'abilities/Spit.svg', _0x2c005e['skinThemeID'] = this['skinThemeID'], _0x2c005e['mopeSeasonID'] = this['mopeSeasonID'], _0x2c005e;
};

function _0x8f6dff() {
_0x8f6dff['superClass']['call'](this, _0x4acf80);
}
window['DesertChipmunk'] = _0x8f6dff, _0x3360d0['setCustomClassForGameObjType'](_0x8f6dff, _0x4acf80, _0xd214a6);
var _0xec194 = _0x1dd8d7;
_0x134474['prototype'] = Object['create'](_0xec194['prototype']), _0x134474['prototype']['constructor'] = _0x134474, _0x134474['superClass'] = _0xec194, _0x134474['prototype']['updateZ'] = function () {
if (this['flag_eff_grabbedByFlytrap']) this['z'] = 0x44c + this['rad'];
else {
    if (this['flag_usingAbility']) this['z'] = -0x9d;
    else {
        if (this['flag_flying'] || this['flag_eff_tossedInAir']) this['z'] = 0x834 + this['rad'];
        else this['z'] = this['rad'];
    }
}
}, _0x134474['prototype']['animalInfo'] = function () {
var _0x50c1d2 = {};
_0x50c1d2['aniCol'] = '#FF9000';
switch (this['animalSpecies']) {
case 0x0:
    _0x50c1d2['aniName'] = 'Meerkat';
    break;
case 0x64:
    _0x50c1d2['aniName'] = 'Puumpkat';
    break;
case 0xc9:
    _0x50c1d2['aniName'] = 'Scubakat';
    break;
case 0xcc:
    _0x50c1d2['aniName'] = 'Necromancer Meerkat';
    break;
}
return _0x50c1d2['skinName'] = this['getSkinName'](), _0x50c1d2['upgradeText'] = 'UPGRADED to ' + _0x50c1d2['aniName'] + '!\x0a HOLD to Dig Underground. \x0aYou can now eat pink cactus fruits!', _0x50c1d2;
}, _0x134474['prototype']['getSkinName'] = function () {
return this['getSkinPath']() + '/meerkat' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x134474['prototype']['getSkinPath'] = function () {
return 'desert/meerkat/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x134474['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x134474['prototype']['drawAnimalUnderSkinCircle'] = function (_0x4c79f0) {
!this['flag_usingAbility'] && _0x134474['superClass']['prototype']['drawAnimalUnderSkinCircle']['call'](this, _0x4c79f0);
}, _0x134474['prototype']['drawUnderSkinTail'] = function (_0x3da4d4) {
!this['flag_usingAbility'] && _0x134474['superClass']['prototype']['drawUnderSkinTail']['call'](this, _0x3da4d4);
}, _0x134474['prototype']['basicDrawSkinImg'] = function () {
if (!this['flag_usingAbility']) {
    _0x134474['superClass']['prototype']['basicDrawSkinImg']['call'](this);
    return;
} else {
    this['setSkinScale'](), _0x4ac9cf['save']();
    var _0x3e07ac = _0x3e07ac = 'skins/' + this['getSkinPath']() + '/meerkat1.png',
        _0x74ae5f = this['getSkinImageObj'](_0x3e07ac);
    if (_0x74ae5f) {
        var _0x33885b = this['skinScale'],
            _0x5c45fc = this['skinRad'];
        _0x4ac9cf['drawImage'](_0x74ae5f, -_0x5c45fc * _0x33885b, -_0x5c45fc * _0x33885b, 0x2 * _0x5c45fc * _0x33885b, 0x2 * _0x5c45fc * _0x33885b);
    }
    _0x4ac9cf['restore']();
}
};

function _0x134474() {
_0x134474['superClass']['call'](this, _0x4acf80);
}
window['Meerkat'] = _0x134474, _0x3360d0['setCustomClassForGameObjType'](_0x134474, _0x4acf80, _0x345849);
var _0xec194 = _0x1dd8d7;
_0x1d2a12['prototype'] = Object['create'](_0xec194['prototype']), _0x1d2a12['prototype']['constructor'] = _0x1d2a12, _0x1d2a12['superClass'] = _0xec194, _0x1d2a12['prototype']['animalInfo'] = function () {
var _0x13404e = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x13404e['aniName'] = 'Fennec Fox';
    break;
case 0xca:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x13404e['aniName'] = 'Fire Fox';
        break;
    case 0x1:
        _0x13404e['aniName'] = 'Purple Fire Fox';
    }
    break;
}
return _0x13404e['aniCol'] = '#FF9000', _0x13404e['skinName'] = this['getSkinName'](), _0x13404e['upgradeText'] = 'UPGRADED to ' + _0x13404e['aniName'] + '!\x0aFennec Fox has very sharp ears (can see animals in hiding holes).\x0a Press W to Whine!', _0x13404e;
}, _0x1d2a12['prototype']['getSkinPath'] = function (_0x13c24a) {
return 'desert/fennecfox/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x1d2a12['prototype']['getSkinName'] = function () {
var _0x1309ef = this['getSkinPath']() + '/fennecfox';
return _0x1309ef += this['specType'] == 0x0 ? '' : this['specType'], _0x1309ef;
}, _0x1d2a12['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
}, _0x1d2a12['prototype']['flapStart'] = 0x0, _0x1d2a12['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) {
    this['flapStart'] = 0x0;
    return;
} else this['flapStart'] == 0x0 && (this['flapStart'] = _0x397f50);
this['setSkinScale']();
var _0x1cd985 = 0.5,
    _0x588c7c = !(_0x25ea67 == 0x2) ? _0x2dd807('fennecfox', this['spawnTime']) : 0x2;
_0x588c7c = Math['abs'](Math['round'](_0x588c7c));
var _0x127598 = 'skins/' + this['getSkinPath']() + '/ears' + _0x588c7c + '.png',
    _0x432034 = this['getSkinImageObj'](_0x127598);
if (_0x432034) {
    var _0x31b2be = this['skinScale'],
        _0x28246c = this['skinRad'];
    _0x4ac9cf['drawImage'](_0x432034, -_0x28246c * _0x31b2be, -_0x28246c * _0x31b2be, 0x2 * _0x28246c * _0x31b2be, 0x2 * _0x28246c * _0x31b2be);
}
};

function _0x1d2a12() {
_0x1d2a12['superClass']['call'](this, _0x4acf80);
}
window['FennecFox'] = _0x1d2a12, _0x3360d0['setCustomClassForGameObjType'](_0x1d2a12, _0x4acf80, _0x21519f);
var _0xec194 = _0x1dd8d7;
_0x5a68c1['prototype'] = Object['create'](_0xec194['prototype']), _0x5a68c1['prototype']['constructor'] = _0x5a68c1, _0x5a68c1['superClass'] = _0xec194, _0x5a68c1['prototype']['animalInfo'] = function () {
var _0x361db6 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x361db6['aniName'] = 'Gobi Bear';
    break;
case 0xca:
    _0x361db6['aniName'] = 'Gobee Bear';
    break;
}
return _0x361db6['aniCol'] = '#FF9000', _0x361db6['skinName'] = this['getSkinName'](), _0x361db6['upgradeText'] = 'UPGRADED to ' + _0x361db6['aniName'] + '!\x0a', _0x361db6;
}, _0x5a68c1['prototype']['getSkinName'] = function () {
return this['getSkinPath']() + '/gobibear' + (this['flag_usingAbility'] ? '1' : '');
}, _0x5a68c1['prototype']['getSkinPath'] = function () {
return 'desert/gobibear/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x5a68c1['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x5a68c1['prototype']['biteStart'] = 0x0, _0x5a68c1['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) {
    this['biteStart'] = 0x0;
    return;
} else {
    this['biteStart'] == 0x0 && (this['biteStart'] = _0x397f50);
    if (_0x397f50 - this['biteStart'] < 0x190) {
        if (this['specType'] != 0x0 && this['specType'] != undefined) {
            var _0x204e14 = this['getSkinImageObj']('skins/' + this['getSkinPath']() + '/gobibear_head1.png'),
                _0x5e4591 = (_0x397f50 - this['biteStart']) / 0x3e8,
                _0x2cf756 = this['skinScale'] * 1.1,
                _0x658ad = this['skinRad'];
            if (_0x204e14) {
                frame = 0x0;
                !this['flag_flying'] && (flapAmount = 0x3, flapDur = 0.5, frame = !(_0x25ea67 == 0x2) ? _0x23fdc7(_0x5e4591, flapDur, flapAmount, 0x2) : this['birdNoAnimationFlyWingAngle']);
                _0x4ac9cf['save']();
                var _0x658ad = this['rad'];
                _0x4ac9cf['drawImage'](_0x204e14, -_0x658ad * _0x2cf756, (-_0x658ad + _0x658ad * 0.1) * _0x2cf756 + frame, 0x2 * _0x658ad * _0x2cf756, 0x2 * _0x658ad * _0x2cf756), _0x4ac9cf['restore']();
            }
        }
    }
}
};

function _0x5a68c1() {
_0x5a68c1['superClass']['call'](this, _0x4acf80);
}
window['GobiBear'] = _0x5a68c1, _0x3360d0['setCustomClassForGameObjType'](_0x5a68c1, _0x4acf80, _0x5b01a7);
var _0xec194 = _0x1dd8d7;
_0x75a64['prototype'] = Object['create'](_0xec194['prototype']), _0x75a64['prototype']['constructor'] = _0x75a64, _0x75a64['superClass'] = _0xec194, _0x75a64['prototype']['animalInfo'] = function () {
var _0x5f282d = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x5f282d['aniName'] = 'Camel';
    break;
case 0x64:
    _0x5f282d['aniName'] = 'Doomedarius';
    break;
case 0xc9:
    _0x5f282d['aniName'] = 'Balloon Warrior';
    break;
case 0xca:
    _0x5f282d['aniName'] = 'Fungal Camel';
    break;
}
return _0x5f282d['skinName'] = this['getSkinName'](), _0x5f282d['aniCol'] = '#FF9000', _0x5f282d['upgradeText'] = 'UPGRADED to ' + _0x5f282d['aniName'] + '!\x0a Press W to Spit. Try eating oranges from trees!', _0x5f282d;
}, _0x75a64['prototype']['getSkinName'] = function () {
let _0x5a061f = this['getSkinPath']() + '/camel';
return _0x5a061f += this['specType'] == 0x0 ? '' : this['specType'], _0x5a061f;
}, _0x75a64['prototype']['getSkinPath'] = function () {
return 'desert/camel/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x75a64['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x75a64['prototype']['getAbilityInfo'] = function (_0x57c70f) {
var _0x2bfd82 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x2bfd82['abilName'] = 'Spit!';
    break;
case 0x64:
    _0x2bfd82['abilName'] = 'Cannon Shots!';
    break;
case 0xc9:
    _0x2bfd82['abilName'] = 'Water Balloons!';
    break;
}
return _0x2bfd82['abilImg'] = 'abilities/Spit.svg', _0x2bfd82['skinThemeID'] = this['skinThemeID'], _0x2bfd82['mopeSeasonID'] = this['mopeSeasonID'], _0x2bfd82;
}, _0x75a64['prototype']['biteStart'] = 0x0, _0x75a64['prototype']['flapAmount'] = 0x3, _0x75a64['prototype']['flapDur'] = 0x1, _0x75a64['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) {
    this['biteStart'] = 0x0;
    return;
} else {
    this['biteStart'] == 0x0 && (this['biteStart'] = _0x397f50);
    if (this['specType'] != 0x0 && this['specType'] != undefined) {
        var _0x575a70 = 'skins/' + this['getSkinPath']() + '/camel_head1.png',
            _0x43c347 = this['getSkinImageObj'](_0x575a70),
            _0x45629d = (_0x397f50 - this['biteStart']) / 0x3e8,
            _0x3994fe = this['skinScale'] * 1.1,
            _0x3a5e32 = this['skinRad'];
        if (_0x43c347) {
            var _0x45d24f = 0x0;
            !this['flag_flying'] && (_0x45d24f = !(_0x25ea67 == 0x2) ? _0x23fdc7(_0x45629d, this['flapDur'], this['flapAmount'], 0x2) : this['flapAmount']);
            _0x4ac9cf['save']();
            var _0x3a5e32 = this['rad'];
            _0x4ac9cf['drawImage'](_0x43c347, -_0x3a5e32 * _0x3994fe, (-_0x3a5e32 + _0x3a5e32 * 0.1) * _0x3994fe - _0x45d24f, 0x2 * _0x3a5e32 * _0x3994fe, 0x2 * _0x3a5e32 * _0x3994fe), _0x4ac9cf['restore']();
        }
    }
}
};

function _0x75a64() {
_0x75a64['superClass']['call'](this, _0x4acf80);
}
window['Camel'] = _0x75a64, _0x3360d0['setCustomClassForGameObjType'](_0x75a64, _0x4acf80, _0x335a3d);
var _0xec194 = _0x5adfe2;
_0x38b1c7['prototype'] = Object['create'](_0xec194['prototype']), _0x38b1c7['prototype']['constructor'] = _0x38b1c7, _0x38b1c7['superClass'] = _0xec194, _0x38b1c7['prototype']['updateZ'] = function () {
this['z'] = 0x3ed;
}, _0x38b1c7['prototype']['customDraw'] = function (_0x509695) {
var _0x12b980 = '';
if (this['speciesType'] == 0xc9) _0x12b980 = 'skins/desert/camel/' + this['speciesType'] + '/spit' + this['specType'] + '.png';
else _0x12b980 = 'skins/desert/camel/' + this['speciesType'] + '/spit.png';
var _0x552792 = this['getSkinImageObj'](_0x12b980);
if (_0x552792) {
    _0x4ac9cf['save']();
    var _0x221703 = this['rad'] * 0x2;
    _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x552792, -_0x221703, -_0x221703, _0x221703 * 0x2, _0x221703 * 0x2), _0x4ac9cf['restore']();
}
}, _0x38b1c7['prototype']['getSkinImageObj'] = function (_0x196114) {
var _0x5e2703 = this['speciesType'] === 0x64 || this['speciesType'] === 0xc9 ? 0x1 : 0x2,
    _0x272b2e = './assets/s/' + _0x5e2703 + '/' + _0x196114;
return this['skinThemeID'] > 0x0 && (_0x272b2e = './assets/t/' + this['skinThemeID'] + '/' + _0x196114), _0x297bc3(_0x272b2e, function (_0x5727a2) {
    console['log'](_0x5727a2['src']);
});
};

function _0x38b1c7() {
_0x38b1c7['superClass']['call'](this, _0x517861);
}
window['CamelSpit'] = _0x38b1c7, _0x3360d0['setCustomClassForGameObjType'](_0x38b1c7, _0x517861);
var _0xec194 = _0x1dd8d7;
_0x18d0d7['prototype'] = Object['create'](_0xec194['prototype']), _0x18d0d7['prototype']['constructor'] = _0x18d0d7, _0x18d0d7['superClass'] = _0xec194, _0x18d0d7['prototype']['animalInfo'] = function () {
var _0x1f508e = {};
_0x1f508e['aniCol'] = '#FF9000';
switch (this['animalSpecies']) {
case 0x0:
    _0x1f508e['aniName'] = 'Warthog';
    break;
case 0x64:
    _0x1f508e['aniName'] = 'The Burlone';
    break;
case 0xc8:
    _0x1f508e['aniName'] = 'WarT. Hog';
    break;
case 0xc9:
    _0x1f508e['aniName'] = 'Flame Tiki';
    break;
case 0xca:
    _0x1f508e['aniName'] = 'Dark Matter Warthog';
    break;
case 0xcc:
    _0x1f508e['aniName'] = 'Candy Corn Warthog';
    break;
case 0xdc:
    _0x1f508e['aniName'] = 'Dark Matter Warthog';
    break;
}
return _0x1f508e['skinName'] = this['getSkinName'](), _0x1f508e['upgradeText'] = 'UPGRADED to ' + _0x1f508e['aniName'] + '!\x0aPress W to Dig and Charge.', _0x1f508e;
}, _0x18d0d7['prototype']['getSkinName'] = function () {
let _0x1ae167 = this['getSkinPath']() + '/warthog';
return _0x1ae167 += this['specType'] == 0x0 ? '' : this['specType'], _0x1ae167;
}, _0x18d0d7['prototype']['getSkinPath'] = function () {
return 'desert/warthog/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x18d0d7['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x18d0d7['prototype']['flapStart'] = 0x0, _0x18d0d7['prototype']['drawUnderSkinImgOutline'] = function () {
console['log'](this['teamID']), _0x18d0d7['superClass']['prototype']['drawUnderSkinImgOutline']['call'](this);
if (this['flag_usingAbility'] && !this['isCharging']) {
    var _0xf8473d = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x11b1ed = 1.5,
        _0x691431 = 0x1,
        _0x281d43 = _0x691431 * Math['sin'](0x2 * Math['PI'] / _0x11b1ed * _0xf8473d);
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] *= 0.8 - 0.2 * _0x281d43, _0x486a28(0x0, this['rad'] * 0.3, this['rad'] * (0.9 + 0.12 * _0x281d43), '#b69327'), _0x486a28(0x0, -this['rad'] * 0.2, this['rad'] * (0.9 + 0.09 * _0x281d43), '#b69327'), _0x4ac9cf['restore']();
}
}, _0x18d0d7['prototype']['drawUnderSkinImg'] = function () {
if (!this['flag_usingAbility']) {
    this['flapStart'] = 0x0;
    return;
} else this['flapStart'] == 0x0 && (this['flapStart'] = _0x397f50);
if (this['flag_usingAbility'] && !this['isCharging']) {
    var _0x5af047 = this['rad'] - this['outlineW'],
        _0x23b6d7 = 0x1f4 / 0x154;
    this['setSkinScale']();
    var _0x2dcb8c = 0.8,
        _0x5024ad = (_0x397f50 - this['flapStart']) / 0x3e8,
        _0x51da12 = !(_0x25ea67 == 0x2) ? _0x23fdc7(_0x5024ad, _0x2dcb8c, 0x1, 0x1) : 0x0;
    _0x51da12 = Math['round'](_0x51da12);
    if (_0x51da12 < 0x0) _0x51da12 = 0x0;
    var _0x218cbd = 'skins/' + this['getSkinPath']() + '/leg' + _0x51da12 + '.png',
        _0x25ab0c = this['getSkinImageObj'](_0x218cbd);
    if (_0x25ab0c) {
        var _0x23b6d7 = this['skinScale'],
            _0x5af047 = this['skinRad'];
        _0x4ac9cf['drawImage'](_0x25ab0c, -_0x5af047 * _0x23b6d7, -_0x5af047 * _0x23b6d7, 0x2 * _0x5af047 * _0x23b6d7, 0x2 * _0x5af047 * _0x23b6d7);
    }
}
}, _0x18d0d7['prototype']['getAbilityInfo'] = function (_0x3e656b) {
var _0xde082 = {};
return _0xde082['abilName'] = 'Dig Food\x0aSudden Charge', _0xde082['abilImg'] = 'abilities/Dig.svg', _0xde082['skinThemeID'] = this['skinThemeID'], _0xde082['mopeSeasonID'] = this['mopeSeasonID'], _0xde082;
}, _0x18d0d7['prototype']['isCharging'] = ![], _0x18d0d7['prototype']['readCustomData_onNewlyVisible'] = function (_0x4a9dab) {
_0x18d0d7['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x4a9dab), this['customUpdatedProperty'](_0x3e13cf, _0x4a9dab);
}, _0x18d0d7['prototype']['customUpdatedProperty'] = function (_0x39c2c2, _0x34b823) {
_0x39c2c2 == _0x3e13cf && (this['isCharging'] = _0x34b823['readUInt8']() == 0x1);
};

function _0x18d0d7() {
_0x18d0d7['superClass']['call'](this, _0x4acf80);
}
window['Warthog'] = _0x18d0d7, _0x3360d0['setCustomClassForGameObjType'](_0x18d0d7, _0x4acf80, _0x48646c);
var _0xec194 = _0x1dd8d7;
_0x359b82['prototype'] = Object['create'](_0xec194['prototype']), _0x359b82['prototype']['constructor'] = _0x359b82, _0x359b82['superClass'] = _0xec194, _0x359b82['prototype']['animalInfo'] = function () {
var _0x4d4486 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x4d4486['aniName'] = 'Hyena';
    break;
case 0xc9:
    _0x4d4486['aniName'] = 'DJ Hyena';
    break;
case 0xca:
    _0x4d4486['aniName'] = 'Anubis Hyena';
    break;
}
return _0x4d4486['aniCol'] = '#FF9000', _0x4d4486['skinName'] = this['getSkinName'](), _0x4d4486['upgradeText'] = 'UPGRADED to ' + _0x4d4486['aniName'] + '!\x0aHyenas have a very loud and scary laugh!\x0aPress W to Laugh.', _0x4d4486;
}, _0x359b82['prototype']['getSkinName'] = function () {
return this['getSkinPath']() + '/hyena' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x359b82['prototype']['getSkinPath'] = function () {
return 'desert/hyena/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x359b82['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x359b82['prototype']['biteStart'] = 0x0, _0x359b82['prototype']['flapAmount'] = 0x3, _0x359b82['prototype']['flapDur'] = 0x1, _0x359b82['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) {
    this['biteStart'] = 0x0;
    return;
} else {
    this['biteStart'] == 0x0 && (this['biteStart'] = _0x397f50);
    if (this['specType'] != 0x0 && this['specType'] != undefined) {
        var _0x5db0da = this['getSkinImageObj']('skins/' + this['getSkinPath']() + '/hyena_head.png'),
            _0x1af1d9 = (_0x397f50 - this['biteStart']) / 0x3e8,
            _0x7d58 = this['skinScale'] * 1.1,
            _0x435318 = this['skinRad'];
        if (_0x5db0da) {
            frame = 0x0;
            !this['flag_flying'] && (frame = !(_0x25ea67 == 0x2) ? _0x23fdc7(_0x1af1d9, this['flapDur'], this['flapAmount'], 0x2) : this['flapAmount']);
            _0x4ac9cf['save']();
            var _0x435318 = this['rad'];
            _0x4ac9cf['drawImage'](_0x5db0da, -_0x435318 * _0x7d58, (-_0x435318 + _0x435318 * 0.1) * _0x7d58 + frame, 0x2 * _0x435318 * _0x7d58, 0x2 * _0x435318 * _0x7d58), _0x4ac9cf['restore']();
        }
    }
}
}, _0x359b82['prototype']['getAbilityInfo'] = function (_0x1af37d) {
var _0x54b8b7 = {};
return _0x54b8b7['abilName'] = 'Laughs!', _0x54b8b7['abilImg'] = 'abilities/Laugh.svg', _0x54b8b7['skinThemeID'] = this['skinThemeID'], _0x54b8b7['mopeSeasonID'] = this['mopeSeasonID'], _0x54b8b7;
}, _0x359b82['prototype']['getSkinImageObj'] = function (_0x359186) {
var _0x1c1b70 = this['animalSpecies'] === 0xc9 ? 0x1 : this['mopeSeasonID'];
return this['getSkinImageObjForSeason'](_0x359186, _0x1c1b70);
};

function _0x359b82() {
_0x359b82['superClass']['call'](this, _0x4acf80);
}
window['Hyena'] = _0x359b82, _0x3360d0['setCustomClassForGameObjType'](_0x359b82, _0x4acf80, _0x233419);
var _0x13295b = _0x55db10,
_0xec194 = _0x54c5f1;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194, _0x55db10['prototype']['updateZ'] = function () {
this['z'] = 0x186a2;
}, _0x55db10['prototype']['customDraw'] = function (_0x4eb843) {
_0x4ac9cf['save']();
var _0x3cd99c = this['getSkinImageObj']('skins/desert/hyena/' + this['speciesType'] + '/laugh.png');
if (_0x3cd99c) {
    var _0x42fbcd = _0x397f50 - this['spawnTime'],
        _0x29c394 = _0x42fbcd / 0x3e8,
        _0x11d682 = 0x2,
        _0xc8f0ce = 1.5;
    rShift = _0xc8f0ce * Math['sin'](0x2 * Math['PI'] / _0x11d682 * _0x29c394);
    var _0x4dbf94 = _0x23fdc7(_0x29c394, 5.1, 0x1, 0x1);
    _0x4dbf94 = _0x1ce2eb(_0x4dbf94, 0x0, 0x1), _0x4ac9cf['globalAlpha'] = _0x4dbf94;
    var _0x563f93 = 0x1,
        _0x2231b4 = this['rad'];
    _0x4ac9cf['rotate'](this['angle'] + _0x142401(-0x5a)), _0x4ac9cf['drawImage'](_0x3cd99c, -_0x2231b4 * _0x563f93, -_0x2231b4 * _0x563f93, 0x2 * _0x2231b4 * _0x563f93, 0x2 * _0x2231b4 * _0x563f93);
}
_0x4ac9cf['restore'](), this['drawChat']();
}, _0x55db10['prototype']['drawChat'] = function () {
if (this['aLine'] == null) return;
_0x4ac9cf['save'](), _0x4ac9cf['font'] = '10px Arial', _0x4ac9cf['lineWidth'] = 0x1, _0x4ac9cf['textAlign'] = 'center', _0x4ac9cf['textBaseline'] = 'middle';
var _0x36db54 = this['aLine'],
    _0x2fcf16 = _0x397f50 > _0x36db54['chatFadeT'] ? 0x0 : 0x1;
_0x36db54['chatA'] += (_0x2fcf16 - _0x36db54['chatA']) * 0.1, _0x4ac9cf['shadowOffsetX'] = 0x0, _0x4ac9cf['shadowOffsetY'] = 0x0;
_0x36db54['chatA'] < 0.02 && (this['aLine'] = null);
var _0xaab37 = _0x4ac9cf['measureText'](_0x36db54['chatTxt'])['width'],
    _0x4a028f = 0xa,
    _0x1c16ec = 0x1,
    _0x853402 = 0x1;
_0x4ac9cf['globalAlpha'] = 0.8 * _0x36db54['chatA'], _0x4ac9cf['fillStyle'] = _0x3d30ff(this['curBiome']), _0x4ac9cf['fillRect'](this['x'] - _0x1c16ec - _0xaab37 / 0x2, this['y'] - this['rad'] - _0x4a028f / 0x2 - _0x853402, _0xaab37 + _0x1c16ec * 0x2, _0x4a028f + _0x853402 * 0x2), _0x4ac9cf['fillStyle'] = '#F1C34C', !(_0x25ea67 == 0x2) && (_0x4ac9cf['shadowOffsetX'] = 0x1, _0x4ac9cf['shadowOffsetY'] = 0x1, _0x4ac9cf['shadowColor'] = 'black'), _0x4ac9cf['globalAlpha'] = _0x36db54['chatA'], _0x4ac9cf['fillText'](_0x36db54['chatTxt'], this['x'], this['y'] - this['rad']), _0x4ac9cf['restore']();
};

function _0x55db10() {
_0x55db10['superClass']['call'](this);
}
_0x55db10['prototype']['aLine'] = null, _0x55db10['prototype']['readCustomData_onNewlyVisible'] = function (_0x36838d) {
_0x55db10['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x36838d), this['aLine'] = {
    'chatTxt': this['speciesType'] == 0xc9 ? 'Oh yeah!' : 'Hehehe',
    'chatFadeT': _0x397f50 + 0xfa0,
    'chatA': 0x0
};
}, _0x55db10['prototype']['getSkinImageObj'] = function (_0x16ce6e) {
var _0x4ae6de = this['speciesType'] === 0xc9 ? 0x1 : this['mopeSeasonID'];
return this['getSkinImageObjForSeason'](_0x16ce6e, _0x4ae6de);
}, window['HyenaLaugh'] = _0x55db10, _0x3360d0['setCustomClassForGameObjType'](_0x55db10, _0x1b8199, _0x3d293f);
var _0xec194 = _0x1dd8d7;
_0x2240f4['prototype'] = Object['create'](_0xec194['prototype']), _0x2240f4['prototype']['constructor'] = _0x2240f4, _0x2240f4['superClass'] = _0xec194, _0x2240f4['prototype']['animalInfo'] = function () {
var _0x3994c3 = {};
_0x3994c3['aniCol'] = '#FF9000';
switch (this['animalSpecies']) {
case 0x0:
    _0x3994c3['aniName'] = 'Rattle Snake';
    break;
case 0x64:
    _0x3994c3['aniName'] = 'Gummy Viper';
    break;
}
return _0x3994c3['upgradeText'] = 'UPGRADED to ' + _0x3994c3['aniName'] + '!\x0aThe ' + _0x3994c3['aniName'] + ' is a very dangerous animal. \x0aHOLD W to Rattle.', _0x3994c3['skinName'] = this['getSkinName'](), _0x3994c3;
}, _0x2240f4['prototype']['getSkinName'] = function () {
return this['getSkinPath']() + '/rattlesnake' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x2240f4['prototype']['getSkinPath'] = function () {
return 'desert/rattlesnake/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x2240f4['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x2240f4['prototype']['biteStart'] = 0x0, _0x2240f4['prototype']['drawUnderSkinImg'] = function () {
if (!this['flag_usingAbility']) {
    var _0x33fb5f = this['rad'] - this['outlineW'],
        _0x236832 = 0x1f4 / 0x154,
        _0x23b3b7 = this['getSkinImageObj']('skins/' + this['getSkinPath']() + '/tongue.png'),
        _0x2c525b = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x118ad9 = _0x25ea67 == 0x2 ? 0x0 : _0x23fdc7(_0x2c525b, 0.7, 0x6, 0.5),
        _0x559cc9 = _0x25ea67 == 0x2 ? 0x0 : 0x5;
    _0x23b3b7 && _0x4ac9cf['drawImage'](_0x23b3b7, -_0x33fb5f * _0x236832, -(_0x33fb5f + _0x559cc9 + _0x118ad9) * _0x236832, 0x2 * _0x33fb5f * _0x236832, 0x2 * _0x33fb5f * _0x236832);
}
}, _0x2240f4['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) {
    this['biteStart'] = 0x0;
    return;
} else {
    this['biteStart'] == 0x0 && (this['biteStart'] = _0x397f50);
    if (this['specType'] != 0x0 && this['specType'] != undefined) {
        var _0x1cac73 = this['getSkinImageObj']('skins/' + this['getSkinPath']() + '/rattlesnake_head.png'),
            _0x521461 = this['skinScale'] * 0x1,
            _0x28ff66 = this['skinRad'];
        if (_0x1cac73) {
            _0x4ac9cf['save']();
            var _0x28ff66 = this['rad'];
            _0x4ac9cf['drawImage'](_0x1cac73, -_0x28ff66 * _0x521461, -_0x28ff66 * 1.2 * _0x521461, 0x2 * _0x28ff66 * _0x521461, 0x2 * _0x28ff66 * _0x521461), _0x4ac9cf['restore']();
        }
    }
    var _0x2f8c7e = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x1d383e = !(_0x25ea67 == 0x2) ? _0x23fdc7(_0x2f8c7e, 0.1, 0.2, 0x2) : 0x0,
        _0x28ff66 = this['rad'] * 1.3,
        _0x177d05 = 0x0,
        _0x1e5375 = 0x0,
        _0x112a77 = 0x0,
        _0xeba885 = this['getSkinImageObj']('skins/' + this['getSkinPath']() + '/rattle.png');
    if (_0xeba885) {
        _0x4ac9cf['save']();
        var _0x25f153 = -(-_0x1e5375 + _0x1d383e) * _0x142401(-(_0x177d05 - 0x5)),
            _0x521461 = this['skinScale'] * 1.2;
        _0x4ac9cf['rotate'](_0x142401(-_0x112a77) + _0x25f153), _0x4ac9cf['drawImage'](_0xeba885, -_0x28ff66 * _0x521461, -_0x28ff66 * 0.7 * _0x521461, 0x2 * _0x28ff66 * _0x521461, 0x2 * _0x28ff66 * _0x521461), _0x4ac9cf['restore']();
    }
}
}, _0x2240f4['prototype']['getAbilityInfo'] = function (_0x5a39c1) {
var _0x382a60 = {};
return _0x382a60['abilName'] = 'Rattle!', _0x382a60['abilImg'] = 'abilities/Rattle.svg', _0x382a60['skinThemeID'] = this['skinThemeID'], _0x382a60['mopeSeasonID'] = this['mopeSeasonID'], _0x382a60;
};

function _0x2240f4() {
_0x2240f4['superClass']['call'](this, _0x4acf80);
}
window['RattleSnake'] = _0x2240f4, _0x3360d0['setCustomClassForGameObjType'](_0x2240f4, _0x4acf80, _0x464d8f);
var _0x13295b = _0x3f83c7,
_0xec194 = _0x54c5f1;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194, _0x3f83c7['prototype']['updateZ'] = function () {
this['z'] = 0x186a2;
}, _0x3f83c7['prototype']['customDraw'] = function (_0x43fca1) {
_0x4ac9cf['save']();
var _0x21256d = this['getSkinImageObj']('skins/desert/rattlesnake/' + this['speciesType'] + '/circle.png');
if (_0x21256d) {
    var _0x4f5ba9 = _0x397f50 - this['spawnTime'],
        _0x46bf16 = _0x4f5ba9 / 0x3e8,
        _0x1e5675 = 0x2,
        _0x72e2af = 1.5;
    rShift = _0x72e2af * Math['sin'](0x2 * Math['PI'] / _0x1e5675 * _0x46bf16);
    var _0x3cc5d4 = _0x23fdc7(_0x46bf16, 5.1, 0x1, 0x1);
    _0x3cc5d4 = _0x1ce2eb(_0x3cc5d4, 0x0, 0x1), _0x4ac9cf['globalAlpha'] = _0x3cc5d4;
    var _0x1ee2aa = 0x1,
        _0x46dd8a = this['rad'] * 0.8;
    _0x4ac9cf['drawImage'](_0x21256d, -_0x46dd8a * _0x1ee2aa, -_0x46dd8a * _0x1ee2aa, 0x2 * _0x46dd8a * _0x1ee2aa, 0x2 * _0x46dd8a * _0x1ee2aa);
}
_0x4ac9cf['restore']();
}, _0x3f83c7['prototype']['getSkinImageObj'] = function (_0x1210c0) {
var _0x188da7 = this['speciesType'] === 0x64 ? 0x1 : this['mopeSeasonID'],
    _0x3677d5 = './assets/s/' + _0x188da7 + '/' + _0x1210c0;
return this['skinThemeID'] > 0x0 && (_0x3677d5 = './assets/t/' + this['skinThemeID'] + '/' + _0x1210c0), _0x297bc3(_0x3677d5, function (_0x5be2f5) {
    console['log'](_0x5be2f5['src']);
});
};

function _0x3f83c7() {
_0x3f83c7['superClass']['call'](this);
}
window['SnakeRattle'] = _0x3f83c7, _0x3360d0['setCustomClassForGameObjType'](_0x3f83c7, _0x1b8199, _0x253b12);
var _0x453d21 = _0x453d21,
_0xec194 = _0x1dd8d7;
_0x453d21['prototype'] = Object['create'](_0xec194['prototype']), _0x453d21['prototype']['constructor'] = _0x453d21, _0x453d21['superClass'] = _0xec194, _0x453d21['prototype']['getSkinName2'] = function () {
var _0x4c2d64 = this['getSkinPath']() + '/vulture';
return _0x4c2d64;
}, _0x453d21['prototype']['getSkinName'] = function () {
let _0x50a49b = this['getSkinPath']() + '/vulture';
if (this['flag_flying'] && this['flag_usingAbility']) _0x50a49b += 0x2;
else _0x50a49b += this['specType'] == 0x0 ? '' : this['specType'];
return _0x50a49b;
}, _0x453d21['prototype']['getSkinPath'] = function () {
return 'desert/vulture/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x453d21['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x453d21['prototype']['getAbilityInfo'] = function (_0x3c29cd) {
var _0x15456b = {};
return _0x15456b['abilName'] = 'Fly/ Pickup Bones', _0x15456b['abilImg'] = 'abilities/Fly.svg', _0x15456b['skinThemeID'] = this['skinThemeID'], _0x15456b['mopeSeasonID'] = this['mopeSeasonID'], _0x15456b;
}, _0x453d21['prototype']['animalInfo'] = function () {
var _0x5162bd = {};
_0x5162bd['aniName'] = 'Vulture';
switch (this['animalSpecies']) {
case 0x1:
    _0x5162bd['aniName'] = 'Pakistan Vulture';
    break;
case 0x64:
    _0x5162bd['aniName'] = 'Vulgeist';
    break;
case 0xcc:
    _0x5162bd['aniName'] = 'Acid Husk';
    break;
}
return _0x5162bd['aniCol'] = '#FF9000', _0x5162bd['skinName'] = this['getSkinName'](), _0x5162bd['upgradeText'] = 'UPGRADED to ' + (this['animalSpecies'] == 0x1 ? 'Rare ' : '') + _0x5162bd['aniName'] + '!\x0aPress W to Grab/Drop bones' + (this['animalSpecies'] == 0x1 ? ' and animals' : '') + ' on other animals,\x0a (Hint: Use ability on hills to fly) \x0aTry Eating bones too!', _0x5162bd;
}, _0x453d21['prototype']['getHead'] = function (_0x5768d6, _0x1ad2af) {
var _0x3b414a = this['flag_flying'] ? '1' : '1',
    _0x35b19e = 'skins/' + this['getSkinName2']() + '_head' + _0x3b414a + '.png';
return _0x35b19e;
}, _0x453d21['prototype']['getWing'] = function (_0x28cac1, _0x18f897, _0x52d02d) {
var _0x2f91dd = 'skins/' + this['getSkinName2']() + '_wing' + _0x18f897 + '.png';
return _0x2f91dd;
}, _0x453d21['prototype']['flaps'] = 0x0, _0x453d21['prototype']['flapsMod'] = 0x3, _0x453d21['prototype']['countFlap'] = !![], _0x453d21['prototype']['canFlap'] = !(_0x25ea67 == 0x2), _0x453d21['prototype']['resumeFlapT'] = 0x0, _0x453d21['prototype']['lastFlapFrame'] = 0x0, _0x453d21['prototype']['sF'] = -0x1, _0x453d21['prototype']['wF'] = 0x1, _0x453d21['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) return;
var _0xf40958 = 'skins';
if (!_0x50a9ba && !(_0x25ea67 == 0x2)) {
    if (!this['canFlap'] && this['flag_flying'] && _0x397f50 > this['resumeFlapT']) this['canFlap'] = !![];
} else this['canFlap'] = ![]; {
    var _0x4dcb24 = 0x1f4 / 0x154;
    _0x4ac9cf['save']();
    var _0x4c0133 = this['flag_flying'] ? 0x2d : 0x2f,
        _0x59caee = this['flag_flying'] ? 0x5a : 0x2d,
        _0x4e761a = this['flag_flying'] ? 0.2 : 0.001,
        _0xaba34f = this['flag_flying'] ? 2.5 : 2.3,
        _0x4876a0 = this['flag_flying'] ? 2.2 : 2.7,
        _0x401dbb = this['flag_flying'] ? 1.2 : 0x1,
        _0x5ad952 = this['flag_flying'] ? 0.35 : 0.2,
        _0x9a9bca = this['flag_flying'] ? '' : '2',
        _0x527b6e = (_0x397f50 - this['resumeFlapT']) / 0x3e8,
        _0x5e4f85 = this['canFlap'] ? _0x23fdc7(_0x527b6e, _0x401dbb, _0x5ad952, 0x2) : this['birdNoAnimationFlyWingAngle'];
    if (this['flag_flying'] && _0x5e4f85 < 0x0 && this['countFlap']) this['countFlap'] = ![], this['flaps']++, this['flaps'] % this['flapsMod'] == 0x0 && (this['lastFlapFrame'] = _0x5e4f85, this['canFlap'] = ![], this['resumeFlapT'] = +new Date() + 0x5dc);
    else _0x5e4f85 > 0x0 && !this['countFlap'] && (this['countFlap'] = !![]);
    if (!this['canFlap']) _0x5e4f85 = this['lastFlapFrame'];
    _0xaba34f += this['sF'] * _0x5e4f85, _0x4876a0 += this['wF'] * _0x5e4f85;
    var _0x2a961c = this['getSkinImageObj'](this['getWing']('vulture', _0x9a9bca + 0x1, ![]));
    if (_0x2a961c) {
        _0x4ac9cf['save']();
        var _0x20d304 = 0x1;
        _0x20d304 = -(-_0x4e761a + _0x5e4f85);
        var _0x138438 = _0x20d304 * _0x142401(_0x59caee),
            _0x323243 = this['rad'] * 0.8;
        _0x4ac9cf['rotate'](_0x142401(_0x4c0133) + _0x138438);
        var _0x3de931 = 0x0,
            _0x7768f1 = this['rad'],
            _0x4a4694 = _0x323243 * _0x4876a0 * 0.62,
            _0x4c28de = _0x323243 * _0xaba34f,
            _0x498998 = 0.2,
            _0x3aac42 = 1.7;
        _0x4ac9cf['drawImage'](_0x2a961c, _0x3de931 + _0x4a4694 * -_0x498998, _0x7768f1 + _0x4c28de * -_0x3aac42, _0x4a4694, _0x4c28de), _0x4ac9cf['restore']();
    }
    var _0x2a961c = this['getSkinImageObj'](this['getWing']('vulture', _0x9a9bca + 0x2, ![]));
    if (_0x2a961c) {
        _0x4ac9cf['save']();
        var _0x20d304 = 0x1;
        _0x20d304 = -(-_0x4e761a + _0x5e4f85);
        var _0x138438 = _0x20d304 * _0x142401(-_0x59caee),
            _0x323243 = this['rad'] * 0.8;
        _0x4ac9cf['rotate'](_0x142401(-_0x4c0133) + _0x138438);
        var _0x3de931 = 0x0,
            _0x7768f1 = this['rad'],
            _0x4a4694 = _0x323243 * _0x4876a0 * 0.62,
            _0x4c28de = _0x323243 * _0xaba34f,
            _0x498998 = 0.8,
            _0x3aac42 = 1.7;
        _0x4ac9cf['drawImage'](_0x2a961c, _0x3de931 + _0x4a4694 * -_0x498998, _0x7768f1 + _0x4c28de * -_0x3aac42, _0x4a4694, _0x4c28de), _0x4ac9cf['restore']();
    }
    _0x4ac9cf['restore']();
    if (this['specType'] != 0x0 && this['specType'] != undefined) {
        var _0x5f327d = this['getSkinImageObj'](this['getHead']('vulture', ![]));
        if (_0x5f327d) {
            var _0x323243 = this['rad'],
                _0x2bd389 = 0x0;
            if (this['flag_flying']) _0x2bd389 = (-_0x323243 + _0x323243 * 0.4) * _0x4dcb24;
            else _0x2bd389 = (-_0x323243 + _0x323243 * 0.1) * _0x4dcb24;
            _0x4ac9cf['save'](), _0x4ac9cf['drawImage'](_0x5f327d, -_0x323243 * _0x4dcb24, _0x2bd389, 0x2 * _0x323243 * _0x4dcb24, 0x2 * _0x323243 * _0x4dcb24), _0x4ac9cf['restore']();
        }
    }
}
};

function _0x453d21() {
_0x453d21['superClass']['call'](this, _0x4acf80);
if (this['resumeFlapT'] == 0x0) this['resumeFlapT'] = +new Date();
}
window['Vulture'] = _0x453d21, _0x3360d0['setCustomClassForGameObjType'](_0x453d21, _0x4acf80, _0x398a37);
var _0xec194 = _0x5adfe2;
_0x3ff4b2['prototype'] = Object['create'](_0xec194['prototype']), _0x3ff4b2['prototype']['constructor'] = _0x3ff4b2, _0x3ff4b2['superClass'] = _0xec194, _0x3ff4b2['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x3ff4b2['prototype']['customDraw'] = function (_0x3116a1) {
var _0x2d961c = 'gameobj/' + this['oType'] + '/' + this['oType'] + '.png',
    _0x420780 = this['getSkinImageObj'](_0x2d961c);
if (_0x420780) {
    _0x4ac9cf['save']();
    var _0x1b3045 = this['rad'] * 0x1;
    _0x4ac9cf['rotate'](this['rPer'] * 0x2 * Math['PI']), _0x4ac9cf['drawImage'](_0x420780, -_0x1b3045, -_0x1b3045, _0x1b3045 * 0x2, _0x1b3045 * 0x2), _0x4ac9cf['restore']();
}
};

function _0x3ff4b2() {
_0x3ff4b2['superClass']['call'](this, _0x53ff59);
}
window['Bone'] = _0x3ff4b2, _0x3360d0['setCustomClassForGameObjType'](_0x3ff4b2, _0x53ff59);
var _0xec194 = _0x1dd8d7;
_0x1e0c7d['prototype'] = Object['create'](_0xec194['prototype']), _0x1e0c7d['prototype']['constructor'] = _0x1e0c7d, _0x1e0c7d['superClass'] = _0xec194, _0x1e0c7d['prototype']['animalInfo'] = function () {
var _0x5f2111 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x5f2111['aniName'] = 'Bison';
    break;
case 0xc8:
    _0x5f2111['aniName'] = 'Titan Bison';
    break;
case 0xca:
    _0x5f2111['aniName'] = 'Minotaur';
    break;
}
return _0x5f2111['aniCol'] = '#FF9000', _0x5f2111['skinName'] = this['getSkinName'](), _0x5f2111['upgradeText'] = 'UPGRADED to ' + _0x5f2111['aniName'] + '!\x0aHold W to charge and toss opponent in air.', _0x5f2111;
}, _0x1e0c7d['prototype']['getSpeciesPath'] = function (_0x1acf70) {
return 'desert/' + _0x1acf70 + '/' + this['animalSpecies'];
}, _0x1e0c7d['prototype']['getAbilityInfo'] = function (_0x525ef4) {
var _0xe7a291 = {};
return _0xe7a291['abilName'] = 'Gores!', _0xe7a291['abilImg'] = 'abilities/Gore.svg', _0xe7a291['skinThemeID'] = this['skinThemeID'], _0xe7a291['mopeSeasonID'] = this['mopeSeasonID'], _0xe7a291;
}, _0x1e0c7d['prototype']['getSkinName'] = function () {
return this['getSkin']() + '/bison' + (this['specType'] == 0x0 ? '' : 0x1);
}, _0x1e0c7d['prototype']['getSkin'] = function () {
return 'desert/bison/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x1e0c7d['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x1e0c7d['prototype']['drawUnderSkinImgOutline'] = function () {
_0x1e0c7d['superClass']['prototype']['drawUnderSkinImgOutline']['call'](this), this['flag_usingAbility'] && this['isHitingAnimal'] && this['showBackLeg']();
}, _0x1e0c7d['prototype']['isHitingAnimal'] = ![], _0x1e0c7d['prototype']['drawSkinCustomization'] = function () {
if (this['flag_usingAbility']) {
    if (this['specType'] != 0x0 && this['specType'] != undefined) {
        if (!this['isHitingAnimal'] && this['specType'] == 0x2) this['isHitingAnimal'] = !![]; {
            var _0x650360 = this['getSkinImageObj']('skins/' + this['getSkin']() + '/body_front.png'),
                _0x281093 = this['skinScale'] * 0x1,
                _0x3e57ee = this['skinRad'];
            if (_0x650360) {
                frame = 0x0, _0x4ac9cf['save']();
                var _0x3e57ee = this['rad'];
                _0x4ac9cf['drawImage'](_0x650360, -_0x3e57ee * _0x281093, -_0x3e57ee * _0x281093, 0x2 * _0x3e57ee * _0x281093, 0x2 * _0x3e57ee * _0x281093), _0x4ac9cf['restore']();
            }
        }
        var _0x650360 = this['getSkinImageObj']('skins/' + this['getSkin']() + '/bison_head' + this['specType'] + '.png'),
            _0x281093 = this['skinScale'] * 1.01,
            _0x3e57ee = this['skinRad'];
        if (_0x650360) {
            frame = 0x0, _0x4ac9cf['save']();
            var _0x3e57ee = this['rad'];
            _0x4ac9cf['drawImage'](_0x650360, -_0x3e57ee * _0x281093, (-_0x3e57ee + _0x3e57ee * 0.2) * _0x281093 + frame, 0x2 * _0x3e57ee * _0x281093, 0x2 * _0x3e57ee * _0x281093), _0x4ac9cf['restore']();
        }
    }
} else this['legYAnchorF'] = 0x0, this['legHeightF'] = 0x0, this['isHitingAnimal'] = ![];
}, _0x1e0c7d['prototype']['legYAnchorF'] = 2.3, _0x1e0c7d['prototype']['legStretchW'] = 1.3, _0x1e0c7d['prototype']['legStretchH'] = 0x1, _0x1e0c7d['prototype']['legHeightF'] = 0x14, _0x1e0c7d['prototype']['showBackLeg'] = function () {
var _0x3eed23 = (_0x397f50 - this['spawnTime']) / 0x3e8,
    _0x1eb20a = _0x23fdc7(_0x3eed23, 0.3, 0x1, 0.5),
    _0x37e765 = 'front';
if (_0x1eb20a <= 0.5 && _0x1eb20a > 0.1) _0x37e765 = 'front', this['legYAnchorF'] = 0x1, this['legHeightF'] = 0x14;
else _0x1eb20a > 0.5 && (_0x37e765 = 'back', this['legYAnchorF'] = 2.3, this['legHeightF'] = -0x5);
_0x4ac9cf['save']();
var _0xa9afe7 = _0x4ac9cf['globalAlpha'];
_0x4ac9cf['globalAlpha'] = 0.1 * _0xa9afe7, _0x486a28(0x0, 0x0, this['rad'], '#755A2A'), _0x4ac9cf['globalAlpha'] = 0x1 * _0xa9afe7;
var _0x5568a4 = this['getSkinImageObj']('skins/' + this['getSkin']() + '/' + _0x37e765 + '_legs.png');
if (_0x5568a4) {
    var _0x540237 = _0x1eb20a,
        _0x32e31a = this['rad'] * 0.6,
        _0x5c647d = 0x0,
        _0x394712 = this['rad'],
        _0x3313d1 = _0x32e31a * 0x2 * this['legStretchW'],
        _0x10cb01 = _0x32e31a * 0x2 * _0x540237,
        _0x12ab28 = 0.5,
        _0x4a69d2 = 0.95;
    _0x4ac9cf['drawImage'](_0x5568a4, _0x5c647d + _0x3313d1 * -_0x12ab28, _0x394712 + (_0x10cb01 + this['legHeightF']) * (-_0x4a69d2 * this['legYAnchorF']), _0x3313d1, _0x10cb01 * this['legStretchH']);
}
_0x4ac9cf['restore']();
};

function _0x1e0c7d() {
_0x1e0c7d['superClass']['call'](this, _0x4acf80);
}
window['Bison'] = _0x1e0c7d, _0x3360d0['setCustomClassForGameObjType'](_0x1e0c7d, _0x4acf80, _0x1a1392);
var _0xec194 = _0x1dd8d7;
_0x20e2b9['prototype'] = Object['create'](_0xec194['prototype']), _0x20e2b9['prototype']['constructor'] = _0x20e2b9, _0x20e2b9['superClass'] = _0xec194, _0x20e2b9['prototype']['animalInfo'] = function () {
var _0x193caf = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x193caf['aniName'] = 'Komodo Dragon';
    break;
case 0x1:
    _0x193caf['aniName'] = 'Golden Komodo';
    break;
case 0x2:
    _0x193caf['aniName'] = 'Night Komodo';
    break;
case 0xc8:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x193caf['aniName'] = 'Dowager Varande';
        break;
    case 0x1:
        _0x193caf['aniName'] = 'Emepror Varande';
        break;
    }
    break;
case 0xca:
    _0x193caf['aniName'] = 'Galaxy Komodo Dragon';
    break;
}
return _0x193caf['aniCol'] = '#FF9000', _0x193caf['skinName'] = this['getSkinName'](), _0x193caf['upgradeText'] = 'UPGRADED to ' + _0x193caf['aniName'] + '!\x0a' + _0x193caf['aniName'] + ' have very poisonous bite. Press W to bite! Also eat bones.', _0x193caf;
}, _0x20e2b9['prototype']['getAbilityInfo'] = function (_0x43975c) {
var _0x4ee758 = {};
return _0x4ee758['abilName'] = 'Poison Bite\x0a(Sweat Prey)', _0x4ee758['abilImg'] = 'abilities/Bite.svg', _0x4ee758['skinThemeID'] = this['skinThemeID'], _0x4ee758['mopeSeasonID'] = this['mopeSeasonID'], _0x4ee758;
}, _0x20e2b9['prototype']['getSkinName'] = function () {
return this['getSkinPath']() + '/komododragon';
}, _0x20e2b9['prototype']['getSkinPath'] = function () {
return 'desert/komododragon/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x20e2b9['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return this['animalSpecies'] == 0xc8 ? '/' + this['animalSubSpecies'] : '';
}, _0x20e2b9['prototype']['updateZ'] = function () {
if (this['flag_eff_grabbedByFlytrap']) this['z'] = 0x44c + this['rad'];
else {
    if (this['flag_usingAbility'] && !this['flag_underWater']) this['z'] = 0x4b0 + this['rad'];
    else {
        if (this['flag_flying'] || this['flag_eff_tossedInAir']) {
            this['z'] = 0x2710;
            if (this['flag_isGrabbed']) this['z'] -= this['rad'];
            else this['z'] += this['rad'];
        } else this['z'] = this['rad'];
    }
}
}, _0x20e2b9['prototype']['straightTongueOffsetY'] = -0.45, _0x20e2b9['prototype']['straightTongueScaleF'] = 1.8, _0x20e2b9['prototype']['drawUnderSkinImg'] = function () {
if (this['specType'] != 0x0) return;
this['setSkinScale']();
if (+new Date() < this['spawnTime'] + 0x1388) return;
if (!this['flag_usingAbility'] && !this['wasLicking'] && +new Date() > this['nextShowT']) {
    var _0x19c922 = this['skinScale'] * this['straightTongueScaleF'],
        _0x250c29 = this['skinRad'],
        _0x15173b = this['getSkinImageObj']('skins/' + this['getSkinPath']() + '/tongue.png'),
        _0x2b1309 = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x3149cb = _0x23fdc7(_0x2b1309, 0.7, 0xc, 0.5);
    _0x15173b && _0x4ac9cf['drawImage'](_0x15173b, -_0x250c29 * _0x19c922, (-_0x250c29 + _0x250c29 * this['straightTongueOffsetY']) * _0x19c922 + _0x3149cb, 0x2 * _0x250c29 * _0x19c922, 0x2 * _0x250c29 * _0x19c922);
}
}, _0x20e2b9['prototype']['tongueAnimationDur'] = 0x1, _0x20e2b9['prototype']['tongueScaleF'] = 1.5, _0x20e2b9['prototype']['tongueAncherY'] = -0.21, _0x20e2b9['prototype']['showTongue'] = !![], _0x20e2b9['prototype']['nextShowT'] = 0x0, _0x20e2b9['prototype']['lastLickSide'] = 0x0, _0x20e2b9['prototype']['wasLicking'] = ![], _0x20e2b9['prototype']['isLicking'] = ![], _0x20e2b9['prototype']['lickFaceOffsetY'] = -0.3, _0x20e2b9['prototype']['biteStart'] = 0x0;
var _0x2717de = 0x0,
_0x5a5ad1 = 1.2;
_0x20e2b9['prototype']['drawSkinCustomization'] = function () {
this['setSkinScale']();
var _0x20c65b = -0.15;
console['log']('specTpye: ' + this['specType']);
if (this['flag_usingAbility']) {
    this['biteStart'] == 0x0 && (this['biteStart'] = _0x397f50);
    if (this['specType'] == 0x1) {
        {
            var _0x4e6cf4 = this['getSkinImageObj']('skins/' + this['getSkinPath']() + '/komododragon_neck.png');
            if (_0x4e6cf4) {
                var _0x18c5e8 = (_0x397f50 - this['biteStart']) / 0x3e8,
                    _0x2e6ac6 = 0x5,
                    _0x34c113 = 0x1,
                    _0x5c3960 = _0x23fdc7(_0x18c5e8, _0x34c113, _0x2e6ac6, 0x1);
                _0x4ac9cf['save']();
                var _0x10840b = this['rad'],
                    _0x1d18a0 = this['skinScale'] * 0x1;
                _0x4ac9cf['drawImage'](_0x4e6cf4, -_0x10840b * _0x1d18a0, (-_0x10840b + _0x10840b * -0.05) * _0x1d18a0 + _0x5c3960, 0x2 * _0x10840b * _0x1d18a0, 0x2 * _0x10840b * _0x1d18a0), _0x4ac9cf['restore']();
            }
        } {
            if (!this['flag_underWater']) {
                var _0x5c3391 = 'skins/' + this['getSkinPath']() + '/komododragon_tail.png',
                    _0x563b75 = this['getSkinImageObj'](_0x5c3391);
                if (_0x563b75) {
                    var _0x1d18a0 = this['skinScale'] * _0x5a5ad1,
                        _0x10840b = this['skinRad'];
                    _0x4ac9cf['drawImage'](_0x563b75, -_0x10840b * _0x1d18a0, (-_0x10840b + _0x10840b * _0x2717de) * _0x1d18a0, 0x2 * _0x10840b * _0x1d18a0, 0x2 * _0x10840b * _0x1d18a0);
                }
            }
        } {
            var _0x2b84c1 = this['getSkinImageObj']('skins/' + this['getSkinPath']() + '/komododragon_attack.png'),
                _0x1d18a0 = this['skinScale'] * 0x1,
                _0x10840b = this['skinRad'],
                _0x2e6ac6 = 0xc,
                _0x34c113 = 0.9,
                _0x5c3960 = _0x23fdc7(_0x18c5e8, _0x34c113, _0x2e6ac6, 0x1);
            _0x2b84c1 && (_0x4ac9cf['save'](), _0x4ac9cf['drawImage'](_0x2b84c1, -_0x10840b * _0x1d18a0, -_0x10840b * _0x1d18a0 + _0x5c3960, 0x2 * _0x10840b * _0x1d18a0, 0x2 * _0x10840b * _0x1d18a0), _0x4ac9cf['restore']());
        }
    }
}
if (this['specType'] == 0x0) {
    if (!this['flag_underWater']) {
        var _0x5c3391 = 'skins/' + this['getSkinPath']() + '/komododragon_tail.png',
            _0x563b75 = this['getSkinImageObj'](_0x5c3391);
        if (_0x563b75) {
            var _0x1d18a0 = this['skinScale'] * _0x5a5ad1,
                _0x10840b = this['skinRad'];
            _0x4ac9cf['drawImage'](_0x563b75, -_0x10840b * _0x1d18a0, (-_0x10840b + _0x10840b * _0x2717de) * _0x1d18a0, 0x2 * _0x10840b * _0x1d18a0, 0x2 * _0x10840b * _0x1d18a0);
        }
        var _0x2b84c1 = this['getSkinImageObj']('skins/' + this['getSkinPath']() + '/komododragon_attack.png'),
            _0x1d18a0 = this['skinScale'] * 0x1,
            _0x10840b = this['skinRad'],
            _0x2e6ac6 = 0xc,
            _0x34c113 = 0.9,
            _0x5c3960 = _0x23fdc7(_0x18c5e8, _0x34c113, _0x2e6ac6, 0x1);
        _0x2b84c1 && (_0x4ac9cf['save'](), _0x4ac9cf['drawImage'](_0x2b84c1, -_0x10840b * _0x1d18a0, -_0x10840b * _0x1d18a0 + _0x5c3960, 0x2 * _0x10840b * _0x1d18a0, 0x2 * _0x10840b * _0x1d18a0), _0x4ac9cf['restore']());
        _0x4ac9cf['save']();
        var _0x5c3391 = 'skins/' + this['getSkinPath']() + '/licked_face.png',
            _0x563b75 = this['getSkinImageObj'](_0x5c3391);
        if (_0x563b75) {
            var _0xc915e5 = this['lickedAmt'] / 0x64;
            _0x4ac9cf['globalAlpha'] = _0xc915e5, _0x4ac9cf['drawImage'](_0x563b75, -_0x10840b * _0x1d18a0, (-_0x10840b + _0x10840b * _0x20c65b) * _0x1d18a0 + _0x5c3960, 0x2 * _0x10840b * _0x1d18a0, 0x2 * _0x10840b * _0x1d18a0);
        }
        _0x4ac9cf['restore'](), _0x4ac9cf['save']();
        var _0x5c3391 = 'skins/' + this['getSkinPath']() + '/komododragon_head.png',
            _0x563b75 = this['getSkinImageObj'](_0x5c3391);
        if (_0x563b75) {
            var _0x1d18a0 = this['skinScale'],
                _0x10840b = this['skinRad'];
            _0x4ac9cf['drawImage'](_0x563b75, -_0x10840b * _0x1d18a0, -_0x10840b * _0x1d18a0, 0x2 * _0x10840b * _0x1d18a0, 0x2 * _0x10840b * _0x1d18a0);
        }
        _0x4ac9cf['restore']();
    }
}
}, _0x20e2b9['prototype']['lickSide'] = 0x0, _0x20e2b9['prototype']['lickedAmt'] = 0x0, _0x20e2b9['prototype']['readCustomData_onNewlyVisible'] = function (_0x89d4db) {
_0x20e2b9['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x89d4db);
var _0x328d48 = _0x89d4db['readUInt8']() == 0x1;
this['nextShowT'] = +new Date() + 0xbb8, this['isLicking'] = _0x328d48, this['lickSide'] = _0x89d4db['readUInt8'](), this['lickedAmt'] = _0x89d4db['readUInt8']();
}, _0x20e2b9['prototype']['customUpdatedProperty'] = function (_0x1bbe1a, _0x2231d0) {
if (_0x1bbe1a == _0x5ac839) {
    var _0x3de8ef = _0x2231d0['readUInt8']() == 0x1;
    this['nextShowT'] = +new Date() + 0xbb8, this['isLicking'] = _0x3de8ef;
    if (!this['wasLicking'] && this['isLicking']) this['wasLicking'] = !![];
} else {
    if (_0x1bbe1a == _0x48ab87) this['lickedAmt'] = _0x2231d0['readUInt8']();
    else _0x1bbe1a == _0x598df6 && (this['lickSide'] = _0x2231d0['readUInt8']());
}
};

function _0x20e2b9() {
_0x20e2b9['superClass']['call'](this, _0x4acf80);
}
window['KomodoDragon'] = _0x20e2b9, _0x3360d0['setCustomClassForGameObjType'](_0x20e2b9, _0x4acf80, _0xbbbf69);
var _0xec194 = _0x5adfe2;
_0x2751d3['prototype'] = Object['create'](_0xec194['prototype']), _0x2751d3['prototype']['constructor'] = _0x2751d3, _0x2751d3['superClass'] = _0xec194, _0x2751d3['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x2751d3['prototype']['customDraw'] = function (_0x1ef8a6) {
_0x4ac9cf['save'](), this['drawOutlinedCircle']('', _0x5a27ff), _0x4ac9cf['restore']();
};

function _0x2751d3() {
_0x2751d3['superClass']['call'](this, _0xbfdd77);
}
window['SweatPoison'] = _0x2751d3, _0x3360d0['setCustomClassForGameObjType'](_0x2751d3, _0xbfdd77);
var _0xec194 = _0x5adfe2;
_0x396e4e['prototype'] = Object['create'](_0xec194['prototype']), _0x396e4e['prototype']['constructor'] = _0x396e4e, _0x396e4e['superClass'] = _0xec194, _0x396e4e['prototype']['updateZ'] = function () {
this['z'] = -0x9a;
}, _0x396e4e['prototype']['customDraw'] = function (_0x377445) {
_0x4ac9cf['save'](), this['rPer'] = 0x0;
var _0x4ef5fe = _0x5a27ff;
this['drawOutlinedCircle']('', _0x4ef5fe);
var _0x6ed011 = 0x1;
if (!(_0x25ea67 == 0x2)) _0x4ac9cf['rotate'](this['rPer'] * 0x2 * Math['PI']);
var _0x2e89de = 0x0,
    _0x1d7b86 = (_0x397f50 - this['spawnTime']) / 0x3e8,
    _0x9dddad = 0x7,
    _0xa477f9 = 0x4;
_0x2e89de = _0xa477f9 * Math['sin'](0x2 * Math['PI'] / _0x9dddad * _0x1d7b86), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x6ed011 + _0x2e89de), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), !(_0x25ea67 == 0x2) && (_0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x6ed011 + _0x2e89de), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x2e89de), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x2e89de), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x2e89de), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x2e89de), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), this['rad'] > 0x32 && (_0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0xa, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill']())), _0x4ac9cf['restore']();
};

function _0x396e4e() {
_0x396e4e['superClass']['call'](this, _0x41f07c);
}
window['PoisonPool'] = _0x396e4e, _0x3360d0['setCustomClassForGameObjType'](_0x396e4e, _0x41f07c);
var _0xec194 = _0x1dd8d7;
_0x1e905c['prototype'] = Object['create'](_0xec194['prototype']), _0x1e905c['prototype']['constructor'] = _0x1e905c, _0x1e905c['superClass'] = _0xec194, _0x1e905c['prototype']['updateZ'] = function () {
if (this['flag_underWater']) this['z'] = -0x64;
else {
    if (this['flag_isInArena']) this['z'] = 0x2710 + this['rad'];
    else {
        if (this['flag_eff_tossedInAir']) this['z'] = 0x4b0 + this['rad'];
        else this['z'] = 0x4b0 + this['rad'];
    }
}
}, _0x1e905c['prototype']['animalInfo'] = function () {
var _0x46f006 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x46f006['aniName'] = 'Giant Scorpion';
    break;
case 0x1:
    _0x46f006['aniName'] = 'Golden Scorpion';
    break;
case 0x2:
    _0x46f006['aniName'] = 'Carnelian Scorpion';
    break;
case 0xcc:
    _0x46f006['aniName'] = 'Selamorph Scorpion';
    break;
case 0xdc:
    _0x46f006['aniName'] = 'Nebuladon Scorpion';
    break;
}
return _0x46f006['aniCol'] = '#FF9000', _0x46f006['skinName'] = 'scorpion', _0x46f006['upgradeText'] = 'UPGRADED to ' + _0x46f006['aniName'] + '!\x0aSting and Shiver your prey to death.\x0a(Press W to Sting)', _0x46f006;
}, _0x1e905c['prototype']['getAbilityInfo'] = function (_0x16c497) {
var _0x53bd86 = {};
return _0x53bd86['abilName'] = 'Sting!\x0a(Shivers Prey)', _0x53bd86['abilImg'] = 'abilities/Sting.svg', _0x53bd86['skinThemeID'] = this['skinThemeID'], _0x53bd86['mopeSeasonID'] = this['mopeSeasonID'], _0x53bd86;
}, _0x1e905c['prototype']['getSkinName'] = function () {
var _0x10b89a = 'desert/scorpion/' + this['animalSpecies'] + '/scorpion';
return _0x10b89a += this['specType'] == 0x0 ? '' : this['specType'], _0x10b89a;
}, _0x1e905c['prototype']['stingerScaleF'] = 0.7, _0x1e905c['prototype']['stingerOffsetY'] = -0.6, _0x1e905c['prototype']['poison'] = 0x32, _0x1e905c['prototype']['clawAnimation'] = null, _0x1e905c['prototype']['stingAnimation'] = null, _0x1e905c['prototype']['stingerTailNormal'] = null, _0x1e905c['prototype']['stingerTail'] = null, _0x1e905c['prototype']['stingerAttack'] = null, _0x1e905c['prototype']['stingerAttackFull'] = null, _0x1e905c['prototype']['stingerNormal'] = null, _0x1e905c['prototype']['stingerNormalFull'] = null, _0x1e905c['prototype']['isUsingAbility'] = ![], _0x1e905c['prototype']['drawSkinCustomization'] = function () {
!this['flag_usingAbility'] && (this['clawAnimation'] = null, this['stingAnimation'] = null, this['isUsingAbility'] = ![]);
!this['isUsingAbility'] && this['flag_eff_aniInClaws'] && (this['isUsingAbility'] = !![], this['stingAnimation'] = null);
this['isUsingAbility'] && !this['flag_usingDiveAbility'] && (this['stingAnimation'] == null && (this['stingAnimation'] = new _0x21dde4(this, 0x1, _0x21dde4['bow'], {
    'v1': 0x5
}), this['stingAnimation']['onFrameEntered'] = function (_0x4ea4e5) {
    _0x4ac9cf['save']();
    var _0xcdc3de = this['forObj']['skinScale'] * this['forObj']['stingerScaleF'],
        _0x3dbb48 = this['forObj']['rad'];
    if (this['forObj']['stingerTailAttack']) _0x4ac9cf['drawImage'](this['forObj']['stingerTailAttack'], -_0x3dbb48 * _0xcdc3de, (-_0x3dbb48 + _0x3dbb48 * this['forObj']['stingerOffsetY']) * _0xcdc3de, 0x2 * _0x3dbb48 * _0xcdc3de, 0x2 * (_0x3dbb48 + _0x3dbb48 * _0x4ea4e5) * _0xcdc3de);
    if (this['forObj']['stingerTail']) _0x4ac9cf['drawImage'](this['forObj']['stingerTail'], -_0x3dbb48 * _0xcdc3de, (-_0x3dbb48 + _0x3dbb48 * _0x4ea4e5) * _0xcdc3de, 0x2 * _0x3dbb48 * _0xcdc3de, 0x2 * _0x3dbb48 * _0xcdc3de);
    if (this['forObj']['stingerAttack']) _0x4ac9cf['drawImage'](this['forObj']['stingerAttack'], -_0x3dbb48 * _0xcdc3de, (-_0x3dbb48 + _0x3dbb48 * _0x4ea4e5) * _0xcdc3de, 0x2 * _0x3dbb48 * _0xcdc3de, 0x2 * _0x3dbb48 * _0xcdc3de);
    var _0x2aba60 = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x4bf65f = _0x23fdc7(_0x2aba60, 0x5, 0x1, 0x1),
        _0x5df9d8 = Math['max'](0x0, _0x4bf65f);
    _0x4ac9cf['globalAlpha'] = _0x5df9d8 * Math['max'](0x0, this['poison'] / 0x64);
    if (this['forObj']['stingerAttackFull']) _0x4ac9cf['drawImage'](this['forObj']['stingerAttackFull'], -_0x3dbb48 * _0xcdc3de, (-_0x3dbb48 + _0x3dbb48 * _0x4ea4e5) * _0xcdc3de, 0x2 * _0x3dbb48 * _0xcdc3de, 0x2 * _0x3dbb48 * _0xcdc3de);
    _0x4ac9cf['restore']();
}), this['stingAnimation'] && this['stingAnimation']['run']());
if (this['stingAnimation'] == null || this['stingAnimation']['hasStopped']) {
    if (!this['flag_underWater'] && !this['flag_usingDiveAbility']) {
        if (this['stingerTailNormal'] != null && this['stingerNormalFull'] != null) {
            var _0x561a1a = this['skinScale'] * this['stingerScaleF'],
                _0x30a878 = this['skinRad'],
                _0x4efc1f = (_0x397f50 - this['spawnTime']) / 0x3e8,
                _0x2f89ff = 0x3,
                _0x36f6c6 = 1.5,
                _0x2b8b26 = 0x0,
                _0xad3848 = 0x0;
            !_0x50a9ba && !(_0x25ea67 == 0x2) && (_0x2b8b26 = _0x23fdc7(_0x4efc1f, _0x36f6c6, _0x2f89ff, 0x2), _0xad3848 = _0x23fdc7(_0x4efc1f, _0x36f6c6, 0x1, 0x2));
            _0x4ac9cf['save']();
            var _0x30a878 = this['rad'] - _0x2b8b26 * 0.5;
            _0x4ac9cf['drawImage'](this['stingerTailNormal'], -_0x30a878 * _0x561a1a, (-_0x30a878 + _0x30a878 * this['stingerOffsetY']) * _0x561a1a + _0x2b8b26 * -_0xad3848, 0x2 * _0x30a878 * _0x561a1a, 0x2 * _0x30a878 * _0x561a1a);
            var _0x4efc1f = (_0x397f50 - this['spawnTime']) / 0x3e8,
                _0x3af881 = _0x23fdc7(_0x4efc1f, 0x5, 0x1, 0x1),
                _0x437b2b = Math['max'](0x0, _0x3af881);
            _0x4ac9cf['globalAlpha'] = _0x437b2b * Math['max'](0x0, this['poison'] / 0x64), _0x4ac9cf['drawImage'](this['stingerNormalFull'], -_0x30a878 * _0x561a1a, (-_0x30a878 + _0x30a878 * this['stingerOffsetY']) * _0x561a1a + _0x2b8b26 * -_0xad3848, 0x2 * _0x30a878 * _0x561a1a, 0x2 * _0x30a878 * _0x561a1a), _0x4ac9cf['restore']();
        }
    }
}
}, _0x1e905c['prototype']['drawWhenUnderwater'] = function () {
this['drawUnderwaterCustomization'](0x1, 1.1);
}, _0x1e905c['prototype']['tailOffsetY'] = -0.25, _0x1e905c['prototype']['tailScaleF'] = 1.2;
var _0x1347f9 = 0x4,
_0x80e176 = 0.1;
_0x1e905c['prototype']['drawUnderSkinImg'] = function () {
var _0x10119f = 'skins/desert/scorpion/' + this['animalSpecies'] + '/tail_back.png',
    _0x1ece4b = this['getSkinImageObj'](_0x10119f);
if (_0x1ece4b) {
    var _0x5cfd22 = 0x0;
    if (this['stingAnimation']) {
        if (this['stingAnimation']['frame'] < 0.5) _0x5cfd22 = -this['stingAnimation']['frame'] * 0.3;
    }
    var _0x5b3670 = this['skinScale'] * this['tailScaleF'],
        _0x3df5a7 = this['skinRad'];
    _0x4ac9cf['drawImage'](_0x1ece4b, -_0x3df5a7 * _0x5b3670, (-_0x3df5a7 + _0x3df5a7 * this['tailOffsetY']) * _0x5b3670, 0x2 * _0x3df5a7 * _0x5b3670, 0x2 * (_0x3df5a7 + _0x3df5a7 * _0x5cfd22) * _0x5b3670);
}
if (this['flag_usingAbility'] && !this['flag_underWater']) {
    this['clawAnimation'] == null && (this['clawAnimation'] = new _0x21dde4(this, 0.9, _0x21dde4['bow'], {
        'v1': _0x1347f9
    }), this['clawAnimation']['keepLastFrame'] = !![], this['clawAnimation']['onFrameEntered'] = function (_0x234479) {
        var _0x1a95dc = 0x0;
        if (_0x234479 < 0.5) _0x1a95dc = -_0x234479;
        var _0x57eb6a = 'skins/desert/scorpion/' + this['forObj']['animalSpecies'] + '/arms.png';
        this['forObj']['flag_eff_aniInClaws'] && (_0x57eb6a = 'skins/desert/scorpion/' + this['forObj']['animalSpecies'] + '/arms-grabbed.png');
        var _0x228cf3 = this['forObj']['getSkinImageObj'](_0x57eb6a);
        if (_0x228cf3) {
            var _0x49ce61 = this['forObj']['skinScale'] * this['forObj']['tailScaleF'],
                _0x5ae9e1 = this['forObj']['skinRad'];
            !this['hasStopped'] && this['timePassed'] < 0.75 ? (_0x80e176 = _0x1a95dc, _0x4ac9cf['drawImage'](_0x228cf3, -_0x5ae9e1 * _0x49ce61, (-_0x5ae9e1 + _0x5ae9e1 * _0x1a95dc) * _0x49ce61, 0x2 * _0x5ae9e1 * _0x49ce61, 0x2 * _0x5ae9e1 * _0x49ce61)) : _0x4ac9cf['drawImage'](_0x228cf3, -_0x5ae9e1 * _0x49ce61, (-_0x5ae9e1 + _0x5ae9e1 * _0x80e176) * _0x49ce61, 0x2 * _0x5ae9e1 * _0x49ce61, 0x2 * _0x5ae9e1 * _0x49ce61);
        }
    });
    if (this['clawAnimation'] != null) this['clawAnimation']['run']();
}
}, _0x1e905c['prototype']['readCustomData_onNewlyVisible'] = function (_0x305380) {
_0x1e905c['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x305380), this['poison'] = _0x305380['readUInt8']();
}, _0x1e905c['prototype']['customUpdatedProperty'] = function (_0xc9e365, _0x1080b6) {
_0xc9e365 == _0x48ab87 && (this['poison'] = _0x1080b6['readUInt8']());
};

function _0x1e905c() {
_0x1e905c['superClass']['call'](this, _0x4acf80);
}
_0x1e905c['prototype']['preLoad'] = function () {
this['getSkinImageObj']('skins/desert/scorpion/' + this['animalSpecies'] + '/scorpion1.png'), this['stingerTailNormal'] = this['getSkinImageObj']('skins/desert/scorpion/' + this['animalSpecies'] + '/stinger_normal.png'), this['stingerTail'] = this['getSkinImageObj']('skins/desert/scorpion/' + this['animalSpecies'] + '/stinger_tail.png'), this['stingerTailAttack'] = this['getSkinImageObj']('skins/desert/scorpion/' + this['animalSpecies'] + '/attack_tail.png'), this['stingerAttack'] = this['getSkinImageObj']('skins/desert/scorpion/' + this['animalSpecies'] + '/attack_stinger_dull.png'), this['stingerAttackFull'] = this['getSkinImageObj']('skins/desert/scorpion/' + this['animalSpecies'] + '/attack_stinger_full.png'), this['stingerNormal'] = this['getSkinImageObj']('skins/desert/scorpion/' + this['animalSpecies'] + '/normal_stinger_dull.png'), this['stingerNormalFull'] = this['getSkinImageObj']('skins/desert/scorpion/' + this['animalSpecies'] + '/normal_stinger_full.png');
}, window['GiantScorpion'] = _0x1e905c, _0x3360d0['setCustomClassForGameObjType'](_0x1e905c, _0x4acf80, _0x323318);
var _0xec194 = _0x1dd8d7;
_0x3012e9['prototype'] = Object['create'](_0xec194['prototype']), _0x3012e9['prototype']['constructor'] = _0x3012e9, _0x3012e9['superClass'] = _0xec194, _0x3012e9['prototype']['updateZ'] = function () {
if (this['flag_usingAbility'] && this['webState'] > 0x2) this['z'] = 0x3e8;
else {
    if (this['flag_eff_isOnSpiderWeb']) this['z'] = 0x3e8 + this['rad'];
    else this['z'] = 0x3e8 + this['rad'];
}
}, _0x3012e9['prototype']['animalInfo'] = function () {
var _0x40ffcd = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x40ffcd['aniName'] = 'Blackwidow Spider';
    break;
case 0x1:
    _0x40ffcd['aniName'] = 'Goldenwidow Spider';
    break;
case 0x2:
    _0x40ffcd['aniName'] = 'Queen Blackwidow';
    break;
case 0xcc:
    _0x40ffcd['aniName'] = 'Blood Widow Spider!';
    break;
default:
    break;
}
return _0x40ffcd['aniCol'] = '#FF9000', _0x40ffcd['skinName'] = this['getSkinName'](), _0x40ffcd['upgradeText'] = 'UPGRADED to ' + _0x40ffcd['aniName'] + '!\x0aBlackwidow is a sneaky predator. It traps prey in the web and injects sweat poison.\x0aPress W to spin and throw web.', _0x40ffcd;
}, _0x3012e9['prototype']['getAbilityInfo'] = function (_0x332e14) {
var _0x4afc62 = {};
return _0x4afc62['abilName'] = 'Spin Web & Bite\x0a(Sweat Prey)', _0x4afc62['abilImg'] = 'abilities/Web.svg', _0x4afc62['skinThemeID'] = this['skinThemeID'], _0x4afc62['mopeSeasonID'] = this['mopeSeasonID'], _0x4afc62;
}, _0x3012e9['prototype']['readCustomData_onNewlyVisible'] = function (_0x1a2a45) {
_0x3012e9['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x1a2a45), this['customUpdatedProperty'](_0x1c6f1b, _0x1a2a45);
}, _0x3012e9['prototype']['webX'] = 0x0, _0x3012e9['prototype']['webY'] = 0x0, _0x3012e9['prototype']['spiderX'] = 0x0, _0x3012e9['prototype']['spiderY'] = 0x0, _0x3012e9['prototype']['webState'] = 0x0, _0x3012e9['prototype']['customUpdatedProperty'] = function (_0x36f3f3, _0x3e4224) {
_0x36f3f3 == _0x1c6f1b && (this['webState'] = _0x3e4224['readUInt8']());
}, _0x3012e9['prototype']['readUpdatedPropertyItem'] = function (_0x29b7b3, _0x43864c) {
_0x3012e9['superClass']['prototype']['readUpdatedPropertyItem']['call'](this, _0x29b7b3, _0x43864c);
if (_0x29b7b3 == _0x52f1d0) {
    console['log']('spider position updated:');
    this['webState'] == 0x0 && (this['web_nx'] = this['web_ox'] = this['webX'] = this['x'], this['web_ny'] = this['web_oy'] = this['webY'] = this['y'], this['spider_ox'] = this['spiderX'] = this['spider_nx'] = this['x'], this['spider_oy'] = this['spiderY'] = this['spider_ny'] = this['y']);
    var _0x1d7d37 = _0x43864c['readUInt8']() == 0x1;
    if (_0x1d7d37) {
        var _0x4f024c = _0x43864c['readUInt16']() / 0x4,
            _0x19c142 = _0x43864c['readUInt16']() / 0x4;
        this['web_ox'] = this['webX'], this['web_oy'] = this['webY'], this['web_nx'] = _0x4f024c, this['web_ny'] = _0x19c142;
        var _0x278c7b = _0x43864c['readUInt16']() / 0x4,
            _0x13a925 = _0x43864c['readUInt16']() / 0x4;
        this['spider_ox'] = this['spiderX'], this['spider_oy'] = this['spiderY'], this['spider_nx'] = _0x278c7b, this['spider_ny'] = _0x13a925;
    }
}
}, _0x3012e9['prototype']['onLerpUpdate'] = function (_0xc816a4) {
this['webState'] > 0x0 && (this['webX'] = _0xc816a4 * (this['web_nx'] - this['web_ox']) + this['web_ox'], this['webY'] = _0xc816a4 * (this['web_ny'] - this['web_oy']) + this['web_oy'], this['spiderX'] = _0xc816a4 * (this['spider_nx'] - this['spider_ox']) + this['spider_ox'], this['spiderY'] = _0xc816a4 * (this['spider_ny'] - this['spider_oy']) + this['spider_oy']);
}, _0x3012e9['prototype']['afterCustomDraw'] = function (_0x4eaec3) {
this['webState'] > 0x0 && _0x46868a == this['id'] && this['flag_usingAbility'] && (_0x4ac9cf['save'](), _0x4ac9cf['strokeStyle'] = this['animalSpecies'] == 0x1 ? 'gold' : 'white', _0x4ac9cf['globalAlpha'] = 0.3, _0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](this['webX'], this['webY']), _0x4ac9cf['lineTo'](this['spiderX'], this['spiderY']), _0x4ac9cf['stroke'](), _0x4ac9cf['restore']());
}, _0x3012e9['prototype']['getSkinName'] = function () {
return 'desert/blackwidow/' + this['animalSpecies'] + this['getSubSpecies']() + '/blackwidow' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x3012e9['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x3012e9['prototype']['drawSkinCustomization'] = function () {
if (this['webState'] == 0x0 && this['flag_usingAbility']) {
    var _0x52ad03 = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x5d7539 = 0.75,
        _0x1ed591 = 0x1,
        _0x531648 = _0x1ed591 * Math['sin'](0x2 * Math['PI'] / _0x5d7539 * _0x52ad03);
    _0x4ac9cf['globalAlpha'] = 0.3;
    var _0x26156b = this['animalSpecies'] == 0x1 ? 'gold' : '#f2f2f2';
    _0x486a28(0x0, -this['rad'] * 1.07, this['rad'] * 0.07, _0x26156b), _0x4ac9cf['globalAlpha'] = 0.8 - 0.2 * _0x531648, _0x486a28(0x0, -this['rad'] * 1.07, this['rad'] * 0.07 + (0.05 + _0x531648), _0x26156b);
}
};

function _0x3012e9() {
_0x3012e9['superClass']['call'](this, _0x4acf80);
}
window['BlackWidowSpider'] = _0x3012e9, _0x3360d0['setCustomClassForGameObjType'](_0x3012e9, _0x4acf80, _0xf85b36);
var _0x13295b = _0x3e0bb4,
_0xec194 = _0x54c5f1;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194, _0x3e0bb4['prototype']['updateZ'] = function () {
if (this['state'] == 0x0) this['z'] = 0x2710;
else this['z'] = 0x3e8;
}, _0x3e0bb4['prototype']['webAlpha'] = 0.5, _0x3e0bb4['prototype']['customDraw'] = function (_0x4177c9) {
_0x4ac9cf['save']();
if (this['state'] > 0x0) {
    var _0x146bba = this['getSkinImageObj']('img/web/' + this['webType'] + '/spiderWeb.png'),
        _0x566819 = this['rad'];
    _0x146bba && (_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = this['webAlpha'], _0x4ac9cf['drawImage'](_0x146bba, -_0x566819, -_0x566819, 0x2 * _0x566819, 0x2 * _0x566819), _0x4ac9cf['restore']());
}
_0x4ac9cf['restore']();
}, _0x3e0bb4['prototype']['state'] = 0x0, _0x3e0bb4['prototype']['spiderX'] = 0x0, _0x3e0bb4['prototype']['spiderY'] = 0x0, _0x3e0bb4['prototype']['readUpdatedProperty'] = function (_0x543fb5, _0x5323cb) {
if (_0x543fb5 == _0x1c6f1b) this['state'] = _0x5323cb['readUInt8']();
else {
    if (_0x543fb5 == _0x5958e5) {
        var _0x325944 = _0x5323cb['readUInt8']() / 0x64;
        if (_0x325944 < this['webAlpha']) this['webAlpha'] = _0x325944;
    }
}
}, _0x3e0bb4['prototype']['readCustomData_onNewlyVisible'] = function (_0x4361d8) {
_0x3e0bb4['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x4361d8), this['state'] = _0x4361d8['readUInt8']();
var _0x44114 = _0x4361d8['readUInt8']() / 0x64;
if (_0x44114 < this['webAlpha']) this['webAlpha'] = _0x44114;
this['webType'] = _0x4361d8['readUInt8']();
};

function _0x3e0bb4() {
_0x3e0bb4['superClass']['call'](this);
}
window['BlackwidowWeb'] = _0x3e0bb4, _0x3360d0['setCustomClassForGameObjType'](_0x3e0bb4, _0x1b8199, _0x57a591);
var _0xec194 = _0x1dd8d7;
_0x250cb8['prototype'] = Object['create'](_0xec194['prototype']), _0x250cb8['prototype']['constructor'] = _0x250cb8, _0x250cb8['superClass'] = _0xec194, _0x250cb8['prototype']['skinFolder'] = function () {
return 'desert/';
}, _0x250cb8['prototype']['animalInfo'] = function () {
var _0x298023 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x298023['aniName'] = 'Pterodactyl';
    break;
case 0x1:
    _0x298023['aniName'] = 'Golden Pterodactyl';
    break;
case 0x2:
    _0x298023['aniName'] = 'Emerald Pterodactyl';
    break;
case 0x64:
    _0x298023['aniName'] = 'Carnageodactyl';
    break;
}
return _0x298023['aniCol'] = '#FF9000', _0x298023['skinName'] = this['skinFolder']() + '/pterodactyl/' + this['animalSpecies'] + '/pterodactyl', _0x298023['upgradeText'] = 'UPGRADED to ' + _0x298023['aniName'] + '!\x0aFly and dive onto prey to pick it up.', _0x298023;
}, _0x250cb8['prototype']['getHead'] = function (_0xaf01a9, _0x434d4f) {
var _0x225649 = '',
    _0x16531e = 'skins/' + this['skinFolder']() + '/' + _0xaf01a9 + '/' + this['animalSpecies'] + '/' + _0xaf01a9 + '_head' + _0x225649 + '.png';
return _0x16531e;
}, _0x250cb8['prototype']['getSkinName'] = function () {
var _0x17af35 = this['skinFolder']() + '/pterodactyl/' + this['animalSpecies'] + '/pterodactyl';
if (this['specType'] == 0x4) _0x17af35 += '4';
else _0x17af35 += this['specType'] == 0x0 ? '' : 0x1;
return _0x17af35;
}, _0x250cb8['prototype']['getWing'] = function (_0x20ca41, _0x238456) {
if (!this['flag_flying']) _0x238456 = _0x238456 + '' + _0x238456;
var _0xeed851 = 'skins/' + this['skinFolder']() + '/' + _0x20ca41 + '/' + this['animalSpecies'] + '/' + _0x20ca41 + '_wing' + _0x238456 + '_nohand.png';
return _0xeed851;
}, _0x250cb8['prototype']['getWingBone'] = function (_0x3fdd88, _0x4dbb5c) {
if (!this['flag_flying']) _0x4dbb5c = _0x4dbb5c + '' + _0x4dbb5c;
var _0x597de4 = 'skins/' + this['skinFolder']() + '/' + _0x3fdd88 + '/' + this['animalSpecies'] + '/' + _0x3fdd88 + '_wing' + _0x4dbb5c + '_bones.png';
return _0x597de4;
}, _0x250cb8['prototype']['getHand'] = function (_0x58803e, _0x1d9610) {
if (!this['flag_flying']) _0x1d9610 = _0x1d9610 + '' + _0x1d9610;
if (this['isGliding']) _0x1d9610 = _0x1d9610 + '3';
var _0x39fcbb = 'skins/' + this['skinFolder']() + '/' + _0x58803e + '/' + this['animalSpecies'] + '/' + _0x58803e + '_hand' + _0x1d9610 + '.png';
return _0x39fcbb;
}, _0x250cb8['prototype']['biteStart'] = 0x0, _0x250cb8['prototype']['flaps'] = 0x0, _0x250cb8['prototype']['flapsMod'] = 0x5, _0x250cb8['prototype']['countFlap'] = !![], _0x250cb8['prototype']['canFlap'] = !(_0x25ea67 == 0x2), _0x250cb8['prototype']['resumeFlapT'] = 0x0, _0x250cb8['prototype']['lastFlapFrame'] = 0x0, _0x250cb8['prototype']['flapSpeed'] = 0x1, _0x250cb8['prototype']['flapAmount'] = 0.2, _0x250cb8['prototype']['r'] = 22.5, _0x250cb8['prototype']['ax'] = 0x0, _0x250cb8['prototype']['ay'] = 0x1, _0x250cb8['prototype']['ww'] = 0x4, _0x250cb8['prototype']['wh'] = 2.5, _0x250cb8['prototype']['ax2'] = 0x1, _0x250cb8['prototype']['rf'] = -0x2, _0x250cb8['prototype']['erf'] = 11.5, _0x250cb8['prototype']['erf_gliding'] = 0x1e, _0x250cb8['prototype']['lx'] = -0.05, _0x250cb8['prototype']['famt'] = 0.5, _0x250cb8['prototype']['yf'] = 0.15, _0x250cb8['prototype']['xf'] = -0.2, _0x250cb8['prototype']['legScale'] = 1.15, _0x250cb8['prototype']['handPerc'] = 0.9, _0x250cb8['prototype']['handWF'] = 0x0, _0x250cb8['prototype']['set'] = ![], _0x250cb8['prototype']['wOffset'] = 0.1, _0x250cb8['prototype']['headF'] = 0.5, _0x250cb8['prototype']['headFDisp'] = -0.6, _0x250cb8['prototype']['headScale'] = 0.8, _0x250cb8['prototype']['headX'] = 0.225, _0x250cb8['prototype']['drawLegs'] = function () {
var _0xbb6fb2 = 0x1f4 / 0x154,
    _0x1e06be = this['flag_eff_aniInClaws'] ? 'legs2' : 'legs',
    _0x3146e7 = this['getSkinImageObj']('skins/' + this['skinFolder']() + '/pterodactyl/' + this['animalSpecies'] + '/' + _0x1e06be + '.png');
if (_0x3146e7) {
    _0x4ac9cf['save']();
    var _0x176345 = this['rad'];
    _0xbb6fb2 *= this['legScale'], _0x4ac9cf['drawImage'](_0x3146e7, -_0x176345 * _0xbb6fb2, (-_0x176345 + _0x176345 * this['lx']) * _0xbb6fb2, 0x2 * _0x176345 * _0xbb6fb2, 0x2 * _0x176345 * _0xbb6fb2), _0x4ac9cf['restore']();
}
}, _0x250cb8['prototype']['drawUnderSkinImg'] = function () {
this['flag_usingAbility'] && (this['drawWing'](this['frame'], 0x1), this['drawWing'](this['frame'], 0x2));
if (this['specType'] == 0x2) this['drawLegs']();
}, _0x250cb8['prototype']['drawSkinCustomization'] = function () {
if (this['flag_usingAbility']) {
    this['drawBone'](this['frame'], 0x1), this['drawBone'](this['frame'], 0x2), this['drawHand'](this['frame'], 0x1), this['drawHand'](this['frame'], 0x2);
    var _0xd61bfe = 0x1f4 / 0x154,
        _0x103d56 = this['getHead']('pterodactyl', ![]),
        _0x41dd53 = this['getSkinImageObj'](_0x103d56);
    if (_0x41dd53) {
        _0x4ac9cf['save'](), _0xd61bfe += -(0.1 * this['headF']) * this['frame'];
        var _0x16b5d6 = this['rad'];
        _0x4ac9cf['drawImage'](_0x41dd53, -_0x16b5d6 * _0xd61bfe, (-_0x16b5d6 + _0x16b5d6 * (0.3 + this['headFDisp'] * (this['frame'] / 0xa)) + this['headF'] * this['frame']) * _0xd61bfe, 0x2 * _0x16b5d6 * _0xd61bfe, 0x2 * _0x16b5d6 * _0xd61bfe), _0x4ac9cf['restore']();
    }
} else {
    if (this['animalSpecies'] == 0x64) {
        var _0xfe75e4 = _0x397f50 - this['nextJawAnimT'],
            _0x15e7b2 = Math['trunc'](_0xfe75e4 / _0xeb348) % 0x10;
        if (_0x397f50 < this['nextJawAnimT']) _0x15e7b2 = 0x0;
        _0x15e7b2 >= 0xf && (this['nextJawAnimT'] = _0x397f50 + 0x1388);
        var _0x3ef256 = this['getSkinImageObj']('skins/desert/pterodactyl/100/mouth/pterodactyl_head' + _0x15e7b2 + '.png');
        if (_0x3ef256) {
            var _0xd61bfe = 0x1f4 / 0x154 * this['headScale'];
            _0x4ac9cf['save']();
            var _0x16b5d6 = this['rad'];
            _0x4ac9cf['drawImage'](_0x3ef256, -_0x16b5d6 * _0xd61bfe, (-_0x16b5d6 + _0x16b5d6 * this['headX']) * _0xd61bfe, 0x2 * _0x16b5d6 * _0xd61bfe, 0x2 * _0x16b5d6 * _0xd61bfe), _0x4ac9cf['restore']();
        }
    } else {
        var _0x103d56 = this['getHead']('pterodactyl', ![]),
            _0x41dd53 = this['getSkinImageObj'](_0x103d56);
        if (_0x41dd53) {
            var _0xd61bfe = 0x1f4 / 0x154 * this['headScale'];
            _0x4ac9cf['save']();
            var _0x16b5d6 = this['rad'];
            _0x4ac9cf['drawImage'](_0x41dd53, -_0x16b5d6 * _0xd61bfe, (-_0x16b5d6 + _0x16b5d6 * this['headX']) * _0xd61bfe, 0x2 * _0x16b5d6 * _0xd61bfe, 0x2 * _0x16b5d6 * _0xd61bfe), _0x4ac9cf['restore']();
        }
    }
}
}, _0x250cb8['prototype']['nextJawAnimT'] = 0x0;
var _0xeb348 = 0x46;
_0x250cb8['prototype']['drawWing'] = function (_0x1196e0, _0x139cb0) {
var _0x373eaf = _0x139cb0 == 0x1 ? 0x1 : -0x1,
    _0x5a597a = this['getSkinImageObj'](this['getWing']('pterodactyl', _0x139cb0));
if (_0x5a597a) {
    var _0x3392a2 = -(-0.2 + _0x1196e0) * _0x142401(_0x373eaf * this['r']),
        _0x541b18 = this['rad'] * 0.8,
        _0x233a8c = 0x0,
        _0x11754e = this['rad'],
        _0x28a375 = _0x541b18 * this['ww'],
        _0x1e4b47 = _0x541b18 * this['wh'],
        _0x44092d = _0x139cb0 == 0x1 ? this['ax'] : this['ax2'],
        _0x484b3d = this['ay'] + this['yf'] * _0x1196e0;
    _0x4ac9cf['save'](), _0x3392a2 *= this['rf'];
    var _0x55102b = this['isGliding'] ? this['erf_gliding'] : this['erf'];
    _0x4ac9cf['rotate'](_0x142401(_0x373eaf * _0x55102b) + _0x3392a2);
    var _0x55ba7b = _0x1196e0 * _0x28a375 * _0x373eaf * this['wOffset'];
    _0x4ac9cf['drawImage'](_0x5a597a, _0x233a8c + _0x28a375 * -_0x44092d + _0x55ba7b, _0x11754e + _0x1e4b47 * -_0x484b3d, _0x28a375, _0x1e4b47), _0x4ac9cf['restore']();
}
}, _0x250cb8['prototype']['drawBone'] = function (_0x6fa3a1, _0x5e2e12) {
var _0x1f4056 = this['getSkinImageObj'](this['getWingBone']('pterodactyl', _0x5e2e12)),
    _0x3d460b = _0x5e2e12 == 0x1 ? 0x1 : -0x1;
if (_0x1f4056) {
    var _0x2978e4 = -(-0.2 + _0x6fa3a1) * _0x142401(_0x3d460b * this['r']),
        _0x32b86d = this['rad'] * 0.8,
        _0x13fd4e = 0x0,
        _0x37da0d = this['rad'],
        _0x64842f = _0x32b86d * this['ww'],
        _0x585a53 = _0x32b86d * this['wh'],
        _0x15e8da = _0x5e2e12 == 0x1 ? this['ax'] : this['ax2'],
        _0x1cf880 = this['ay'] + this['yf'] * _0x6fa3a1;
    _0x4ac9cf['save'](), _0x2978e4 *= this['rf'];
    var _0x5a55e2 = this['isGliding'] ? this['erf_gliding'] : this['erf'];
    _0x4ac9cf['rotate'](_0x142401(_0x3d460b * _0x5a55e2) + _0x2978e4);
    var _0xfbf9af = _0x6fa3a1 * _0x64842f * _0x3d460b * this['wOffset'];
    _0x4ac9cf['drawImage'](_0x1f4056, _0x13fd4e + _0x64842f * -_0x15e8da + _0xfbf9af, _0x37da0d + _0x585a53 * -_0x1cf880, _0x64842f, _0x585a53), _0x4ac9cf['restore']();
}
};
var _0x41e578 = 0x0;
_0x250cb8['prototype']['drawHand'] = function (_0x15e44b, _0x4ee8a4) {
var _0x4ca53b = _0x4ee8a4 == 0x1 ? 0x1 : -0x1,
    _0x48ed86 = this['getSkinImageObj'](this['getHand']('pterodactyl', _0x4ee8a4));
if (_0x48ed86) {
    var _0x4c8a09 = -(-0.2 + _0x15e44b) * _0x142401(_0x4ca53b * this['r']),
        _0x2036bb = this['rad'] * 0.8,
        _0x2716e0 = 0x0,
        _0x577a92 = this['rad'],
        _0x3d9e7f = _0x2036bb * this['ww'],
        _0x2c8738 = _0x2036bb * this['wh'] + (!this['flag_flying'] ? this['wh'] * _0x41e578 : 0x0),
        _0x1d6fef = _0x4ca53b == 0x1 ? this['ax'] : this['ax2'],
        _0x4eedfa = _0x1d6fef + _0x4ca53b * this['xf'] * _0x15e44b,
        _0x391efa = this['ay'] + this['yf'] * _0x15e44b;
    _0x4c8a09 *= this['rf'];
    var _0x4de195 = this['isGliding'] ? this['erf_gliding'] : this['erf'];
    _0x4ac9cf['save'](), this['drawImage'](_0x48ed86, _0x2716e0 + _0x3d9e7f * -_0x4eedfa, _0x577a92 + _0x2c8738 * -_0x391efa, _0x3d9e7f + _0x3d9e7f * _0x4ca53b * this['handWF'], _0x2c8738, _0x142401(_0x4ca53b * _0x4de195) + _0x4c8a09), _0x4ac9cf['restore']();
}
}, _0x250cb8['prototype']['frame'] = 0x0, _0x250cb8['prototype']['lastFlapFrame'] = 0x0, _0x250cb8['prototype']['getFrame'] = function () {
if (!this['canFlap'] && this['flag_flying'] && _0x397f50 > this['resumeFlapT']) this['canFlap'] = !![];
var _0x1f9935 = (_0x397f50 - this['spawnTime']) / 0x3e8,
    _0x575b41 = !(_0x25ea67 == 0x2) && this['canFlap'] ? _0x23fdc7(_0x1f9935, this['flapSpeed'], this['flapAmount'] * this['handPerc'], 0x2) : this['birdNoAnimationFlyWingAngle'];
if (this['flag_flying'] && _0x575b41 < 0x0 && this['countFlap']) this['countFlap'] = ![], this['flaps']++, this['flaps'] % this['flapsMod'] == 0x0 && (this['lastFlapFrame'] = _0x575b41, this['canFlap'] = ![], this['resumeFlapT'] = +new Date() + 0x5dc);
else _0x575b41 > 0x0 && !this['countFlap'] && (this['countFlap'] = !![]);
if (!this['canFlap']) _0x575b41 = this['lastFlapFrame'];
else this['lastFlapFrame'] = _0x575b41;
return _0x575b41;
}, _0x250cb8['prototype']['beforeCustomDraw'] = function () {
if (!this['flag_usingAbility']) return;
!this['flag_flying'] && !this['set'] ? (this['set'] = !![], this['r'] = 11.25, this['erf'] = 5.75, this['ww'] = 3.5) : this['flag_flying'] && this['set'] && (this['set'] = ![], this['r'] = 22.5, this['erf'] = 11.5, this['ww'] = 4.5), this['isGliding'] ? this['flapAmount'] = 0x0 : this['flapAmount'] = this['famt'], this['frame'] = this['getFrame']();
}, _0x250cb8['prototype']['updateZ'] = function () {
if (this['flag_eff_grabbedByFlytrap']) this['z'] = 0x44c + this['rad'];
else {
    if (!this['flag_flying'] && this['flag_usingAbility'] && !this['flag_underWater']) this['z'] = 0x4b0 + this['rad'];
    else {
        if (this['flag_flying'] || this['flag_eff_tossedInAir']) {
            this['z'] = 0x1adb0;
            if (this['flag_isGrabbed']) this['z'] -= this['rad'];
            else this['z'] += this['rad'];
            if (this['flag_eff_aniInClaws']) this['z'] += 0x64;
        } else this['z'] = 0x3e8 + this['rad'];
    }
}
}, _0x250cb8['prototype']['getAbilityInfo'] = function (_0x231caa) {
var _0x48eaa9 = {};
return _0x48eaa9['abilName'] = 'Dive Attack\x0a(Fly with Prey)', _0x48eaa9['abilImg'] = 'abilities/SkyDive.svg', _0x48eaa9['skinThemeID'] = this['skinThemeID'], _0x48eaa9['mopeSeasonID'] = this['mopeSeasonID'], _0x48eaa9;
}, _0x250cb8['prototype']['readCustomData_onNewlyVisible'] = function (_0x16bcca) {
_0x250cb8['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x16bcca), this['isGliding'] = _0x16bcca['readUInt8']() == 0x1;
}, _0x250cb8['prototype']['customUpdatedProperty'] = function (_0xef5f6f, _0x891367) {
this['isGliding'] = _0x891367['readUInt8']() == 0x1;
};

function _0x250cb8() {
_0x250cb8['superClass']['call'](this, _0x4acf80);
}
window['Pterodactyl'] = _0x250cb8, _0x3360d0['setCustomClassForGameObjType'](_0x250cb8, _0x4acf80, _0x309a7e);
var _0xec194 = _0x1dd8d7;
_0x36fc14['prototype'] = Object['create'](_0xec194['prototype']), _0x36fc14['prototype']['constructor'] = _0x36fc14, _0x36fc14['superClass'] = _0xec194, _0x36fc14['prototype']['animalInfo'] = function () {
var _0x4dd4ce = {};
return _0x4dd4ce['aniName'] = 'Bullet Ant', _0x4dd4ce['aniCol'] = '#FF9000', _0x4dd4ce['skinName'] = 'desert/bulletant/bulletant', _0x4dd4ce['upgradeText'] = 'UPGRADED to ' + _0x4dd4ce['aniName'] + '!\x0aHold \'W\' to pick anything and take to your Anthill.', _0x4dd4ce;
};
var _0x14c555 = 0x1;
_0x36fc14['prototype']['drawSkinCustomization'] = function () {
var _0xa25f92 = 'skins/desert/bulletant/head.png',
    _0x4896a7 = this['getSkinImageObj'](_0xa25f92);
if (_0x4896a7) {
    var _0x45d565 = this['skinScale'] * 1.2,
        _0x57a624 = this['skinRad'];
    _0x4ac9cf['drawImage'](_0x4896a7, -_0x57a624 * _0x45d565, (-_0x57a624 + _0x57a624 * 0.3) * _0x45d565, 0x2 * _0x57a624 * _0x45d565, 0x2 * _0x57a624 * _0x45d565);
}
};
var _0x1d5fde = -0.7;
_0x36fc14['prototype']['drawUnderSkinImg'] = function () {
var _0x2bcfcf = 'skins/desert/bulletant/abdomen.png',
    _0x84443b = this['getSkinImageObj'](_0x2bcfcf);
if (_0x84443b) {
    var _0x1a5073 = this['skinScale'] * 0.9,
        _0x1fdc55 = this['skinRad'];
    _0x4ac9cf['drawImage'](_0x84443b, -_0x1fdc55 * _0x1a5073, (-_0x1fdc55 + _0x1fdc55 * _0x1d5fde) * _0x1a5073, 0x2 * _0x1fdc55 * _0x1a5073, 0x2 * _0x1fdc55 * _0x1a5073);
}
}, _0x36fc14['prototype']['getSkinName'] = function () {
var _0x56b752 = 'desert/bulletant/body';
return _0x56b752;
};

function _0x36fc14() {
_0x36fc14['superClass']['call'](this, _0x4acf80);
}
window['BulletAnt'] = _0x36fc14, _0x3360d0['setCustomClassForGameObjType'](_0x36fc14, _0x4acf80, _0xc5d905);
var _0xec194 = _0x5adfe2;
_0x5e0c9d['prototype'] = Object['create'](_0xec194['prototype']), _0x5e0c9d['prototype']['constructor'] = _0x5e0c9d, _0x5e0c9d['superClass'] = _0xec194, _0x5e0c9d['prototype']['FlytrapType'] = 0x0, _0x5e0c9d['prototype']['updateZ'] = function () {
this['z'] = 0x64;
}, _0x5e0c9d['prototype']['getSkinFolder'] = function (_0x3a4d2e) {
return 'desert/flytrap';
}, _0x5e0c9d['prototype']['customDraw'] = function (_0x56269b) {
_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1;
var _0x62f932 = this['getSkinImageObj']('img/' + this['getSkinFolder']() + '/base.png');
if (_0x62f932) {
    var _0x1922ff = this['rad'] * 1.25;
    _0x4ac9cf['drawImage'](_0x62f932, -_0x1922ff, -_0x1922ff, 0x2 * _0x1922ff, 0x2 * _0x1922ff);
}
_0x4ac9cf['restore']();
};

function _0x5e0c9d() {
_0x5e0c9d['superClass']['call'](this, _0x1476f0), this['drawEffectScale_Slow'] = !![];
}
window['Flytrap'] = _0x5e0c9d, _0x3360d0['setCustomClassForGameObjType'](_0x5e0c9d, _0x1476f0);
var _0xec194 = _0x5adfe2;
_0xfa064c['prototype'] = Object['create'](_0xec194['prototype']), _0xfa064c['prototype']['constructor'] = _0xfa064c, _0xfa064c['superClass'] = _0xec194, _0xfa064c['prototype']['FlytrapMouthType'] = 0x0, _0xfa064c['prototype']['updateZ'] = function () {
this['z'] = 0x44c + this['rad'];
};
var _0x5a096b = 0x8c,
_0x5b0181 = 1.25,
_0x203781 = 2.5,
_0x17143a = 1.25,
_0x1cb3be = 1.5,
_0x2d9b21 = 0xb4,
_0x5c6c40 = 1.5,
_0x4740e2 = 0x1,
_0x1d43c1 = 0x1,
_0x4e0273 = 0x0,
_0x354507 = 0x0,
_0x3d03aa = -0xa0,
_0x46b33d = 0x1,
_0x38513c = 0x0;
_0xfa064c['prototype']['topA'] = 0xb4, _0xfa064c['prototype']['botA'] = 0xb4, _0xfa064c['prototype']['distBeforeAttack'] = 0x0, _0xfa064c['prototype']['maxDist'] = 0x0, _0xfa064c['prototype']['distCovered'] = 0x0, _0xfa064c['prototype']['isAttacking'] = ![], _0xfa064c['prototype']['isMouthClosed'] = ![], _0xfa064c['prototype']['grabbedAni'] = ![], _0xfa064c['prototype']['getSkinFolder'] = function (_0x5a01c7) {
return 'desert/flytrap';
}, _0xfa064c['prototype']['beforeCustomDraw'] = function (_0x19040a) {
if (!this['dead']) {
    var _0x41e1c1 = this['getSkinImageObj']('img/' + this['getSkinFolder']() + '/mouth/stem.png');
    if (_0x41e1c1) {
        var _0x5ea671 = this['rad'];
        _0x4ac9cf['save'](), _0x4ac9cf['translate'](this['anchor_x'], this['anchor_y']), _0x4ac9cf['rotate'](this['angle'] - _0x142401(_0x2d9b21));
        var _0x13459c = _0x313648({
            'x': this['x'],
            'y': this['y']
        }, {
            'x': this['anchor_x'],
            'y': this['anchor_y']
        });
        _0x4ac9cf['drawImage'](_0x41e1c1, -_0x5ea671 * _0x5b0181, -_0x5ea671, 0x2 * _0x5ea671 * _0x17143a, 0x2 * _0x5ea671 + _0x13459c), _0x4ac9cf['restore']();
    }
}
}, _0xfa064c['prototype']['customDraw'] = function (_0x30dc23) {
_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1;
var _0x2ed882 = 'bottom' + (this['isKillable'] ? '_e' : ''),
    _0x3e0f50 = this['getSkinImageObj']('img/' + this['getSkinFolder']() + '/mouth/' + _0x2ed882 + '.png');
if (_0x3e0f50) {
    var _0x45b8eb = this['rad'];
    _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['angle'] - _0x142401(this['botA'])), _0x4ac9cf['drawImage'](_0x3e0f50, -_0x45b8eb * _0x1d43c1, -_0x45b8eb * _0x1d43c1, 0x2 * _0x45b8eb, 0x2 * _0x45b8eb), _0x4ac9cf['restore']();
}
if (!this['grabbedAni']) {
    var _0x2d050b = this['isMouthClosed'] ? 'closed' : 'top',
        _0x3e0f50 = this['getSkinImageObj']('img/' + this['getSkinFolder']() + '/mouth/' + _0x2d050b + '.png');
    if (_0x3e0f50) {
        var _0x45b8eb = this['rad']; {
            _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['angle'] - _0x142401(this['topA'])), _0x4ac9cf['drawImage'](_0x3e0f50, -_0x45b8eb * _0x4740e2, -_0x45b8eb * _0x4740e2, 0x2 * _0x45b8eb, 0x2 * _0x45b8eb), _0x4ac9cf['restore']();
        }
    }
}
_0x4ac9cf['restore']();
}, _0xfa064c['prototype']['isAttacking'] = ![], _0xfa064c['prototype']['isMouthClosed'] = ![], _0xfa064c['prototype']['grabbedAni'] = ![], _0xfa064c['prototype']['readCustomData_onNewlyVisible'] = function (_0x40c51b) {
_0xfa064c['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x40c51b);
var _0x49ce1b = _0x40c51b['readBitGroup']();
this['isAttacking'] = _0x49ce1b['getBool'](), this['isMouthClosed'] = _0x49ce1b['getBool'](), this['grabbedAni'] = _0x49ce1b['getBool'](), this['anchor_x'] = _0x40c51b['readUInt16']() / 0x4, this['anchor_y'] = _0x40c51b['readUInt16']() / 0x4;
}, _0xfa064c['prototype']['readUpdatedProperty'] = function (_0x466c4f, _0x3e332d) {
_0x466c4f == _0x18a49b && (this['isAttacking'] = _0x3e332d['readUInt8']() == 0x1), _0x466c4f == _0x549b57 && (this['isMouthClosed'] = _0x3e332d['readUInt8']() == 0x1), _0x466c4f == _0x5789af && (this['grabbedAni'] = _0x3e332d['readUInt8']() == 0x1);
};

function _0xfa064c() {
_0xfa064c['superClass']['call'](this, _0x40459c), this['doesDrawEffectScale'] = this['drawEffectScale_Slow'] = !![];
}
window['FlytrapMouth'] = _0xfa064c, _0x3360d0['setCustomClassForGameObjType'](_0xfa064c, _0x40459c);
var _0xec194 = _0x5adfe2;
_0x80b17['prototype'] = Object['create'](_0xec194['prototype']), _0x80b17['prototype']['constructor'] = _0x80b17, _0x80b17['superClass'] = _0xec194, _0x80b17['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x80b17['prototype']['customDraw'] = function (_0x5ba5b7) {
var _0x386aad = this['isEdibleOutlined']() ? 'e' : this['oType'],
    _0x2f5650 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + _0x386aad + '.png');
if (_0x2f5650) {
    _0x4ac9cf['save']();
    var _0x2dc991 = this['rad'] * 1.2;
    _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x2f5650, -_0x2dc991, -_0x2dc991, _0x2dc991 * 0x2, _0x2dc991 * 0x2), _0x4ac9cf['restore']();
}
};

function _0x80b17() {
_0x80b17['superClass']['call'](this, _0x4de8f1), this['doesDrawEffectScale'] = ![];
}
window['AloeveraLeaf'] = _0x80b17, _0x3360d0['setCustomClassForGameObjType'](_0x80b17, _0x4de8f1);
var _0xec194 = _0x5adfe2;
_0x4c52a0['prototype'] = Object['create'](_0xec194['prototype']), _0x4c52a0['prototype']['constructor'] = _0x4c52a0, _0x4c52a0['superClass'] = _0xec194, _0x4c52a0['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x4c52a0['prototype']['customDraw'] = function (_0x458100) {
var _0x13d757 = this['isEdibleOutlined']() ? 'e' : this['oType'],
    _0x5565fa = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + _0x13d757 + '.png');
if (_0x5565fa) {
    _0x4ac9cf['save']();
    var _0x651ef2 = this['rad'] * 1.15;
    _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x5565fa, -_0x651ef2, -_0x651ef2, _0x651ef2 * 0x2, _0x651ef2 * 0x2), _0x4ac9cf['restore']();
}
};

function _0x4c52a0() {
_0x4c52a0['superClass']['call'](this, _0x1df437), this['doesDrawEffectScale'] = this['drawEffectScale_Slow'] = ![];
}
window['AloeveraPlant'] = _0x4c52a0, _0x3360d0['setCustomClassForGameObjType'](_0x4c52a0, _0x1df437);
var _0xec194 = _0x5adfe2;
_0x1578d4['prototype'] = Object['create'](_0xec194['prototype']), _0x1578d4['prototype']['constructor'] = _0x1578d4, _0x1578d4['superClass'] = _0xec194, _0x1578d4['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x1578d4['prototype']['customDraw'] = function (_0x3a0d0b) {
var _0x1b8b62 = this['isEdibleOutlined']() ? 'e' : this['oType'],
    _0x123fef = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + _0x1b8b62 + '.png');
if (_0x123fef) {
    _0x4ac9cf['save']();
    var _0x198158 = this['rad'] * 1.15;
    _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x123fef, -_0x198158, -_0x198158, _0x198158 * 0x2, _0x198158 * 0x2), _0x4ac9cf['restore']();
}
};

function _0x1578d4() {
_0x1578d4['superClass']['call'](this, _0x3bec33), this['doesDrawEffectScale'] = this['drawEffectScale_Slow'] = ![];
}
window['Cactus'] = _0x1578d4, _0x3360d0['setCustomClassForGameObjType'](_0x1578d4, _0x3bec33);
var _0xec194 = _0x5adfe2;
_0x804c5f['prototype'] = Object['create'](_0xec194['prototype']), _0x804c5f['prototype']['constructor'] = _0x804c5f, _0x804c5f['superClass'] = _0xec194, _0x804c5f['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x804c5f['prototype']['customDraw'] = function (_0x44454a) {
var _0x471d65 = this['isEdibleOutlined']() ? 'e' : this['curBiome'];
_0x471d65 = 'gameobj/' + this['oType'] + '/' + _0x471d65 + '.png';
var _0x3884ba = this['getSkinImageObj'](_0x471d65);
if (_0x3884ba) {
    _0x4ac9cf['save']();
    var _0x1f7df4 = this['rad'];
    _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x3884ba, -_0x1f7df4, -_0x1f7df4, _0x1f7df4 * 0x2, _0x1f7df4 * 0x2), _0x4ac9cf['restore']();
}
};

function _0x804c5f() {
_0x804c5f['superClass']['call'](this, _0x98293a), this['doesDrawEffectScale'] = ![];
}
window['CactusPear'] = _0x804c5f, _0x3360d0['setCustomClassForGameObjType'](_0x804c5f, _0x98293a);
var _0xec194 = _0x5adfe2;
_0x1e080e['prototype'] = Object['create'](_0xec194['prototype']), _0x1e080e['prototype']['constructor'] = _0x1e080e, _0x1e080e['superClass'] = _0xec194, _0x1e080e['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x1e080e['prototype']['customDraw'] = function (_0x44b803) {
var _0x26d8b4 = this['isEdibleOutlined']() ? 'e' : this['oType'],
    _0x434ab9 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + _0x26d8b4 + '.png');
if (_0x434ab9) {
    _0x4ac9cf['save']();
    var _0x384d4c = this['rad'];
    _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x434ab9, -_0x384d4c, -_0x384d4c, _0x384d4c * 0x2, _0x384d4c * 0x2), _0x4ac9cf['restore']();
}
};

function _0x1e080e() {
_0x1e080e['superClass']['call'](this, _0x467ac0), this['doesDrawEffectScale'] = ![];
}
window['DateFruit'] = _0x1e080e, _0x3360d0['setCustomClassForGameObjType'](_0x1e080e, _0x467ac0);
var _0xec194 = _0x5adfe2;
_0x3a201d['prototype'] = Object['create'](_0xec194['prototype']), _0x3a201d['prototype']['constructor'] = _0x3a201d, _0x3a201d['superClass'] = _0xec194, _0x3a201d['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x3a201d['prototype']['customDraw'] = function (_0x2c57a4) {
var _0xa55f20 = this['isEdibleOutlined']() ? 'e' : this['oType'],
    _0x274f70 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + _0xa55f20 + '.png');
if (_0x274f70) {
    _0x4ac9cf['save']();
    var _0x36aea3 = this['rad'];
    _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x274f70, -_0x36aea3, -_0x36aea3, _0x36aea3 * 0x2, _0x36aea3 * 0x2), _0x4ac9cf['restore']();
}
};

function _0x3a201d() {
_0x3a201d['superClass']['call'](this, _0x1d182b), this['doesDrawEffectScale'] = ![];
}
window['Mango'] = _0x3a201d, _0x3360d0['setCustomClassForGameObjType'](_0x3a201d, _0x1d182b);
var _0xec194 = _0x5adfe2;
_0x4a3efa['prototype'] = Object['create'](_0xec194['prototype']), _0x4a3efa['prototype']['constructor'] = _0x4a3efa, _0x4a3efa['superClass'] = _0xec194, _0x4a3efa['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x4a3efa['prototype']['customDraw'] = function (_0x5173c6) {
var _0x3ce892 = this['isEdibleOutlined']() ? 'e' : this['oType'],
    _0x3f1853 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + _0x3ce892 + '.png');
if (_0x3f1853) {
    _0x4ac9cf['save']();
    var _0x4aec43 = this['rad'];
    _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x3f1853, -_0x4aec43, -_0x4aec43, _0x4aec43 * 0x2, _0x4aec43 * 0x2), _0x4ac9cf['restore']();
}
};

function _0x4a3efa() {
_0x4a3efa['superClass']['call'](this, _0x2f823e), this['doesDrawEffectScale'] = ![];
}
window['Melon'] = _0x4a3efa, _0x3360d0['setCustomClassForGameObjType'](_0x4a3efa, _0x2f823e);
var _0xec194 = _0x5adfe2;
_0x117fa4['prototype'] = Object['create'](_0xec194['prototype']), _0x117fa4['prototype']['constructor'] = _0x117fa4, _0x117fa4['superClass'] = _0xec194, _0x117fa4['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x117fa4['prototype']['customDraw'] = function (_0x3d212f) {
var _0xf197e9 = this['isEdibleOutlined']() ? 'e' : this['oType'],
    _0x5aaa19 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + _0xf197e9 + '.png');
if (_0x5aaa19) {
    _0x4ac9cf['save']();
    var _0x151fe9 = this['rad'];
    _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x5aaa19, -_0x151fe9, -_0x151fe9, _0x151fe9 * 0x2, _0x151fe9 * 0x2), _0x4ac9cf['restore']();
}
};

function _0x117fa4() {
_0x117fa4['superClass']['call'](this, _0x53bde6), this['doesDrawEffectScale'] = ![];
}
window['MelonSlice'] = _0x117fa4, _0x3360d0['setCustomClassForGameObjType'](_0x117fa4, _0x53bde6);
var _0xec194 = _0x5adfe2;
_0x3bc3f9['prototype'] = Object['create'](_0xec194['prototype']), _0x3bc3f9['prototype']['constructor'] = _0x3bc3f9, _0x3bc3f9['superClass'] = _0xec194, _0x3bc3f9['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x3bc3f9['prototype']['customDraw'] = function (_0x480db4) {
var _0x4592e6 = this['isEdibleOutlined']() ? 'e' : this['oType'],
    _0x3d8c1f = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + _0x4592e6 + '.png');
if (_0x3d8c1f) {
    _0x4ac9cf['save']();
    var _0x8de07c = this['rad'];
    _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x3d8c1f, -_0x8de07c, -_0x8de07c, _0x8de07c * 0x2, _0x8de07c * 0x2), _0x4ac9cf['restore']();
}
}, _0x3bc3f9['prototype']['updateZ'] = function () {
this['z'] = 0x3e8 + this['rad'];
};

function _0x3bc3f9() {
_0x3bc3f9['superClass']['call'](this, _0x3ba9b4), this['doesDrawEffectScale'] = ![];
}
window['Orange'] = _0x3bc3f9, _0x3360d0['setCustomClassForGameObjType'](_0x3bc3f9, _0x3ba9b4);
var _0xec194 = _0x5adfe2;
_0x46c411['prototype'] = Object['create'](_0xec194['prototype']), _0x46c411['prototype']['constructor'] = _0x46c411, _0x46c411['superClass'] = _0xec194, _0x46c411['prototype']['updateZ'] = function () {
this['z'] = -0x9e;
}, _0x46c411['prototype']['customDraw'] = function (_0x120c34) {
_0x4ac9cf['save']();
if (!(_0x25ea67 == 0x2)) _0x4ac9cf['rotate'](this['rPer'] * 0x2 * Math['PI']);
var _0x360f69 = 0x0,
    _0x1d64de = (_0x397f50 - this['spawnTime']) / 0x3e8,
    _0x8a9c25 = 0x6,
    _0x2e74bc = 1.5;
_0x360f69 = _0x2e74bc * Math['sin'](0x2 * Math['PI'] / _0x8a9c25 * _0x1d64de);
var _0x578932 = 0x4;
_0x120c34 ? (_0x4ac9cf['fillStyle'] = '#b0a13b', _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill']()) : (_0x4ac9cf['fillStyle'] = '#bdae47', _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x578932 + _0x360f69), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), !(_0x25ea67 == 0x2) && (_0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x360f69), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x360f69), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x360f69), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x360f69), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), this['rad'] > 0x32 && (_0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0xa, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill']()))), _0x4ac9cf['restore']();
};

function _0x46c411() {
_0x46c411['superClass']['call'](this, _0x109189), this['animateRadOnSpawn'] = ![];
}
window['Quicksand'] = _0x46c411, _0x3360d0['setCustomClassForGameObjType'](_0x46c411, _0x109189);
var _0xec194 = _0x5adfe2;
_0x2fb3d2['prototype'] = Object['create'](_0xec194['prototype']), _0x2fb3d2['prototype']['constructor'] = _0x2fb3d2, _0x2fb3d2['superClass'] = _0xec194, _0x2fb3d2['prototype']['updateZ'] = function () {
this['z'] = -0x9e;
}, _0x2fb3d2['prototype']['customDraw'] = function (_0x329f0e) {
var _0x32c33 = 0x4;
_0x4ac9cf['save']();
if (!(_0x25ea67 == 0x2)) _0x4ac9cf['rotate'](this['rPer'] * 0x2 * Math['PI']);
var _0x53b439 = 0x0,
    _0x62bbe6 = (_0x397f50 - this['spawnTime']) / 0x3e8,
    _0x664e8f = 0x6,
    _0x1081b8 = 1.5;
_0x53b439 = _0x1081b8 * Math['sin'](0x2 * Math['PI'] / _0x664e8f * _0x62bbe6);
if (this['isOasisWater'] && _0x329f0e) _0x4ac9cf['fillStyle'] = '#AE9F43', _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill']();
else {
    var _0x165344 = '#3881C4',
        _0x32c33 = 0x4;
    _0x4ac9cf['fillStyle'] = this['isOasisWater'] ? _0x165344 : '#AE9F43', _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), !(_0x25ea67 == 0x2) && (_0x4ac9cf['fillStyle'] = this['isOasisWater'] ? _0x165344 : '#bdae47', _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x32c33 + _0x53b439), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x53b439), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x53b439), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x53b439), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x53b439), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), this['rad'] > 0x32 && (_0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0xa, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill']()));
}
_0x4ac9cf['restore']();
}, _0x2fb3d2['prototype']['afterCustomDraw'] = function () {};

function _0x2fb3d2() {
_0x2fb3d2['superClass']['call'](this, _0xdfdd63), this['animateRadOnSpawn'] = ![];
}
_0x2fb3d2['prototype']['readCustomData_onNewlyVisible'] = function (_0x29952b) {
_0x2fb3d2['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x29952b), this['isOasisWater'] = _0x29952b['readUInt8']() == 0x1;
}, _0x2fb3d2['prototype']['readUpdatedProperty'] = function (_0x3c973d, _0x565ba5) {
if (_0x3c973d == _0x36df37) {
    var _0x9821e7 = _0x565ba5['readUInt16']() / 0xa;
    this['setNewRad'](_0x9821e7);
}
}, _0x2fb3d2['prototype']['circles'] = new Array(), _0x2fb3d2['prototype']['isOasisWater'] = ![], window['Oasis'] = _0x2fb3d2, _0x3360d0['setCustomClassForGameObjType'](_0x2fb3d2, _0xdfdd63);
var _0x3b49ca = _0x3b49ca,
_0xec194 = _0x1dd8d7;
_0x3b49ca['prototype'] = Object['create'](_0xec194['prototype']), _0x3b49ca['prototype']['constructor'] = _0x3b49ca, _0x3b49ca['superClass'] = _0xec194, _0x3b49ca['prototype']['getSkinName'] = function () {
let _0x440fe1 = this['getSpeciesPath']() + '/lion';
return _0x440fe1 += this['specType'] == 0x0 ? '' : this['specType'], _0x440fe1;
}, _0x3b49ca['prototype']['getSpeciesPath'] = function () {
return 'land/lion/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x3b49ca['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
var _0x32c0c7 = '';
if (this['animalSpecies'] == 0x1 || this['animalSpecies'] == 0x2 || this['animalSpecies'] == 0xc8) _0x32c0c7 = '/' + this['animalSubSpecies'];
return _0x32c0c7;
}, _0x3b49ca['prototype']['getAbilityInfo'] = function (_0x4bf21e) {
var _0x37fde9 = {};
_0x37fde9['abilName'] = 'Loud ' + (this['animalSpecies'] == 0x2 ? 'Meow' : 'Noise');
if (this['animalSpecies'] == 0x1) _0x37fde9['abilName'] += '\x0a& Camouflage';
var _0x192ad9 = this['getSubSpecies']();
return _0x37fde9['abilImg'] = 'abilities/Growl-Roar.svg', _0x37fde9['skinThemeID'] = this['skinThemeID'], _0x37fde9['mopeSeasonID'] = this['mopeSeasonID'], _0x37fde9;
}, _0x3b49ca['prototype']['animalInfo'] = function () {
var _0x48a498 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x48a498['aniName'] = 'Lion';
    break;
case 0x1:
    _0x48a498['aniName'] = 'Lioness';
    break;
case 0x2:
    _0x48a498['aniName'] = 'Lion Cub';
    break;
case 0x3:
    _0x48a498['aniName'] = 'Black-Maned\x0aLion';
    break;
case 0x4:
    _0x48a498['aniName'] = 'White Lion';
    break;
case 0x5:
    _0x48a498['aniName'] = 'Black Lion';
    break;
case 0x64:
    _0x48a498['aniName'] = 'The Mantalian';
    break;
case 0xc8:
    if (this['animalSubSpecies'] == 0x0) _0x48a498['aniName'] = 'Clowoud Lion';
    else {
        if (this['animalSubSpecies'] == 0x1) _0x48a498['aniName'] = 'Sunset Clowoud Lion';
        else {
            if (this['animalSubSpecies'] == 0x2) _0x48a498['aniName'] = 'Storm Clowoud Lion';
        }
    }
    break;
case 0xca:
    _0x48a498['aniName'] = 'Chimera Lion';
    break;
case 0xdc:
    _0x48a498['aniName'] = 'Ghastly Jade Lion';
    break;
}
_0x48a498['aniDesc'] = '';
if (this['animalSpecies'] == 0x1) _0x48a498['upgradeText'] = 'UPGRADED to ' + _0x48a498['aniName'] + '!\x0a Lioness are fast and can launch an ambush attack. (Stop moving to camouflage)!';
else {
    if (this['animalSpecies'] == 0x2) _0x48a498['upgradeText'] = 'UPGRADED to ' + _0x48a498['aniName'] + '!\x0a Press W to release a mighty MEOW!';
    else _0x48a498['upgradeText'] = 'UPGRADED to ' + _0x48a498['aniName'] + '!\x0a Press W to release a mighty ROAR (Rawr!)!';
}
return _0x48a498['aniCol'] = '#FF9000', _0x48a498['skinName'] = this['getSkinName'](), _0x48a498;
}, _0x3b49ca['prototype']['setStealth'] = function () {
_0x3b49ca['superClass']['prototype']['setStealth']['call'](this);
if (this['flag_stealth']) {
    if (this['animalSpecies'] == 0x1) this['idealOp'] = _0x46868a == this['id'] ? 0.1 : 0x0;
}
}, _0x3b49ca['prototype']['biteStart'] = 0x0, _0x3b49ca['prototype']['flapAmount'] = 0x3, _0x3b49ca['prototype']['flapDur'] = 1.5, _0x3b49ca['prototype']['roarStartT'] = -0x1f4;
var _0x215d43 = 0x1,
_0x3c0e96 = 0x1;
_0x3b49ca['prototype']['drawSkinCustomization'] = function () {
this['setSkinScale']();
if (!this['flag_usingAbility']) {
    this['biteStart'] = 0x0;
    return;
} else {
    this['biteStart'] == 0x0 && (this['biteStart'] = _0x397f50 + this['roarStartT']);
    if (this['specType'] != 0x0 && this['specType'] != undefined) {
        var _0x14d870 = 'skins/' + this['getSpeciesPath']() + '/lion_head1.png',
            _0x5abc04 = this['getSkinImageObj'](_0x14d870),
            _0xb59def = (_0x397f50 - this['biteStart']) / 0x3e8,
            _0x455b64 = this['skinScale'] * 1.07,
            _0x52d06b = this['skinRad'];
        if (_0x5abc04) {
            var _0x1b84e7 = 0x0,
                _0x3533e8 = this['flapAmount'] - (this['animalSpecies'] == 0x2 ? 0.5 : 0x0);
            _0x1b84e7 = !(_0x25ea67 == 0x2) ? _0x23fdc7(_0xb59def, this['flapDur'], _0x3533e8, 0x2) : this['flapAmount'], _0x4ac9cf['save']();
            var _0x52d06b = this['rad'];
            _0x4ac9cf['drawImage'](_0x5abc04, -_0x52d06b * _0x455b64, (-_0x52d06b + _0x52d06b * 0.1) * _0x455b64 - _0x1b84e7, 0x2 * _0x52d06b * _0x455b64, 0x2 * _0x52d06b * _0x455b64), _0x4ac9cf['restore']();
        }
    }
}
};

function _0x3b49ca() {
_0x3b49ca['superClass']['call'](this, _0x4acf80);
}
window['Lion'] = _0x3b49ca, _0x3360d0['setCustomClassForGameObjType'](_0x3b49ca, _0x4acf80, _0x1185fd);
var _0xec194 = _0x1dd8d7;
_0x399ca4['prototype'] = Object['create'](_0xec194['prototype']), _0x399ca4['prototype']['constructor'] = _0x399ca4, _0x399ca4['superClass'] = _0xec194, _0x399ca4['prototype']['animalInfo'] = function () {
var _0x3f73b4 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x3f73b4['aniName'] = 'Rhino';
    break;
case 0x1:
    _0x3f73b4['aniName'] = 'White Rhino';
    break;
case 0x2:
    _0x3f73b4['aniName'] = 'Black Rhino';
    break;
case 0x3:
    _0x3f73b4['aniName'] = 'Woolly Rhino';
    break;
case 0xc9:
    _0x3f73b4['aniName'] = 'Shrub Rhino';
    break;
case 0xca:
    _0x3f73b4['aniName'] = 'Cotton Candy Rhino';
    break;
case 0xcc:
    _0x3f73b4['aniName'] = 'Acuti Rhino';
    break;
case 0xdc:
    _0x3f73b4['aniName'] = 'Ink Rhino';
    break;
}
return _0x3f73b4['skinName'] = this['getSkinName'](), _0x3f73b4['aniDesc'] = '', _0x3f73b4['upgradeText'] = 'UPGRADED to ' + _0x3f73b4['aniName'] + '!\x0a Press W to CHARGE with your mighty horn!', _0x3f73b4['aniCol'] = '#94a3a9', _0x3f73b4;
}, _0x399ca4['prototype']['getAbilityInfo'] = function (_0x4e975c) {
var _0x32eb61 = {};
return _0x32eb61['abilName'] = 'Charge!', _0x32eb61['abilImg'] = 'abilities/Charge.svg', _0x32eb61['skinThemeID'] = this['skinThemeID'], _0x32eb61['mopeSeasonID'] = this['mopeSeasonID'], _0x32eb61;
}, _0x399ca4['prototype']['getSkinName'] = function () {
let _0x5e5ed6 = this['getSpeciesPath']() + '/rhino';
return _0x5e5ed6 += this['specType'] == 0x0 ? '' : 0x1, _0x5e5ed6;
}, _0x399ca4['prototype']['getSpeciesPath'] = function () {
return 'land/rhino/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x399ca4['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};
var _0x14c555 = 0.1;
_0x399ca4['prototype']['drawOnTopOfSkinImg'] = function () {
if (_0x7ec408) _0x399ca4['superClass']['prototype']['drawOnTopOfSkinImg']['call'](this);
}, _0x399ca4['prototype']['drawSkinCustomization'] = function () {
if (_0x7ec408) _0x399ca4['superClass']['prototype']['drawSkinCustomization']['call'](this);
else {
    if (this['flag_usingAbility']) {
        var _0x5d3861 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/rhino_head1.png'),
            _0x1d69a1 = this['skinScale'] * 0.98,
            _0x59daf7 = this['skinRad'];
        if (_0x5d3861) {
            frame = 0x0, _0x4ac9cf['save']();
            var _0x59daf7 = this['rad'];
            _0x4ac9cf['drawImage'](_0x5d3861, -_0x59daf7 * _0x1d69a1, (-_0x59daf7 + _0x59daf7 * _0x14c555) * _0x1d69a1 + frame, 0x2 * _0x59daf7 * _0x1d69a1, 0x2 * _0x59daf7 * _0x1d69a1), _0x4ac9cf['restore']();
        }
    }
}
};

function _0x399ca4() {
_0x399ca4['superClass']['call'](this, _0x4acf80);
}
window['Rhino'] = _0x399ca4, _0x3360d0['setCustomClassForGameObjType'](_0x399ca4, _0x4acf80, _0x2fc4c1);
var _0xec194 = _0x1dd8d7;
_0x18de2a['prototype'] = Object['create'](_0xec194['prototype']), _0x18de2a['prototype']['constructor'] = _0x18de2a, _0x18de2a['superClass'] = _0xec194, _0x18de2a['prototype']['animalInfo'] = function () {
var _0x38bc04 = {};
_0x38bc04['skinName'] = 'land/pig/' + this['animalSpecies'] + this['getSubSpecies']() + '/pig', _0x38bc04['aniName'] = 'Pig';
switch (this['animalSpecies']) {
case 0x0:
    _0x38bc04['aniName'] = 'Pig', _0x38bc04['upgradeText'] = 'UPGRADED to ' + _0x38bc04['aniName'] + '!\x0a  Pigs move FAST through MUD! (Can use \'stink\' on mud/ hiding holes!)';
    break;
case 0x1:
    _0x38bc04['aniName'] = 'Pinky Pig', _0x38bc04['upgradeText'] = 'UPGRADED to ' + _0x38bc04['aniName'] + '!\x0a  Pigs move FAST through MUD! (Can use \'stink\' on mud/ hiding holes!)';
    break;
case 0xc9:
    _0x38bc04['aniName'] = 'Floaty Pig', _0x38bc04['upgradeText'] = 'UPGRADED to ' + _0x38bc04['aniName'] + '!\x0a  Pigs move FAST through MUD! (Can use \'stink\' on mud/ hiding holes!)';
    break;
case 0xcc:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x38bc04['aniName'] = 'Butcher Pig';
        break;
    case 0x1:
        _0x38bc04['aniName'] = 'Hot Dog Pig';
    }
    _0x38bc04['upgradeText'] = 'UPGRADED to ' + _0x38bc04['aniName'] + '!\x0a  Pigs move FAST through MUD! (Can use \'stink\' on mud/ hiding holes!)';
    break;
case 0x2: {
    _0x38bc04['aniName'] = 'Stinky Pig', _0x38bc04['upgradeText'] = 'UPGRADED to ' + _0x38bc04['aniName'] + '!\x0a ' + _0x38bc04['aniName'] + ' dives through MUD (can use stink everywhere!)';
}
break;
case 0xca:
    _0x38bc04['aniName'] = 'Piggy Bank', _0x38bc04['upgradeText'] = 'UPGRADED to ' + _0x38bc04['aniName'] + '!\x0a  Pigs move FAST through MUD! (Can use \'stink\' on mud/ hiding holes!)';
    break;
case 0xdc:
    _0x38bc04['aniName'] = 'Fumigator Pig', _0x38bc04['upgradeText'] = 'UPGRADED to ' + _0x38bc04['aniName'] + '!\x0a  Pigs move FAST through MUD! (Can use \'stink\' on mud/ hiding holes!)';
    break;
}
return _0x38bc04['aniCol'] = '#DD6BD4', _0x38bc04;
}, _0x18de2a['prototype']['getAbilityInfo'] = function (_0x1eba2e) {
var _0x27ca8e = {};
return _0x27ca8e['abilName'] = 'Stink cloud', _0x27ca8e['abilImg'] = 'abilities/StinkCloud.svg', _0x27ca8e['skinThemeID'] = this['skinThemeID'], _0x27ca8e['mopeSeasonID'] = this['mopeSeasonID'], _0x27ca8e;
}, _0x18de2a['prototype']['getSkinName'] = function () {
let _0x8c0d96 = this['getSpeciesPath']() + '/pig';
return _0x8c0d96;
}, _0x18de2a['prototype']['getSpeciesPath'] = function () {
return 'land/pig/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x18de2a['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return this['animalSpecies'] === 0xcc ? '/' + this['animalSubSpecies'] : '';
}, _0x18de2a['prototype']['animalDiveColor'] = function () {
if (this['flag_underWater']) {
    if (this['flag_eff_isInMud']) return '#7E6A35';
    else return '#4E71C3';
}
return '';
}, _0x18de2a['prototype']['animalDivesInMud'] = function () {
return !![];
};

function _0x18de2a() {
_0x18de2a['superClass']['call'](this, _0x4acf80);
}
window['Pig'] = _0x18de2a, _0x3360d0['setCustomClassForGameObjType'](_0x18de2a, _0x4acf80, _0x51c352);
var _0xec194 = _0x1dd8d7;
_0x2ef10d['prototype'] = Object['create'](_0xec194['prototype']), _0x2ef10d['prototype']['constructor'] = _0x2ef10d, _0x2ef10d['superClass'] = _0xec194, _0x2ef10d['prototype']['animalInfo'] = function () {
var _0x2507ad = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x2507ad['aniName'] = 'Deer';
    break;
case 0x1:
    _0x2507ad['aniName'] = 'Doe';
    break;
case 0x2:
    _0x2507ad['aniName'] = 'Marsh Deer';
    break;
case 0x64:
    _0x2507ad['aniName'] = 'The Wendigo';
    break;
case 0xca:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x2507ad['aniName'] = 'Mezavor';
        break;
    case 0x1:
        _0x2507ad['aniName'] = 'Divine Deer';
    }
    break;
}
return _0x2507ad['aniDesc'] = '', _0x2507ad['upgradeText'] = 'UPGRADED to ' + _0x2507ad['aniName'] + '! \x0aPress W to dig up food! \x0aDig in mud for better food!\x0a Hint:Check water areas for new food sources!', _0x2507ad['aniCol'] = '#C4773E', _0x2507ad['skinName'] = this['getSkinName'](), _0x2507ad;
}, _0x2ef10d['prototype']['getSkinName'] = function () {
let _0x42752c = this['getSpeciesPath']() + '/deer';
return _0x42752c;
}, _0x2ef10d['prototype']['getSpeciesPath'] = function () {
return 'land/deer/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x2ef10d['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
}, _0x2ef10d['prototype']['getAbilityInfo'] = function (_0x491a54) {
var _0x1b2b0b = {};
return _0x1b2b0b['abilName'] = 'Dig Food!', _0x1b2b0b['abilImg'] = 'abilities/Dig.svg', _0x1b2b0b['skinThemeID'] = this['skinThemeID'], _0x1b2b0b['mopeSeasonID'] = this['mopeSeasonID'], _0x1b2b0b;
}, _0x2ef10d['prototype']['moveF'] = 0.08, _0x2ef10d['prototype']['jumpAnim'] = null, _0x2ef10d['prototype']['frame'] = 0x0, _0x2ef10d['prototype']['drawUnderSkinImg'] = function () {
if (this['flag_usingAbility']) {
    if (this['animalType'] == _0x43cc06 || this['animalType'] == _0x4c7e27) {
        var _0xd63e10 = (_0x397f50 - this['spawnTime']) / 0x3e8,
            _0x50e788 = 1.5,
            _0x5a974a = 0x1,
            _0x1c1870 = _0x5a974a * Math['sin'](0x2 * Math['PI'] / _0x50e788 * _0xd63e10),
            _0x5efbfb = _0x4ac9cf['globalAlpha'];
        _0x4ac9cf['globalAlpha'] *= 0.8, _0x486a28(0x0, this['rad'] * 0.3, this['rad'] * (0.9 + 0.12 * _0x1c1870), '#7F582B'), _0x486a28(0x0, -this['rad'] * 0.3, this['rad'] * (1.05 + 0.09 * _0x1c1870), '#7F582B'), _0x4ac9cf['globalAlpha'] = _0x5efbfb;
    }
}
};

function _0x2ef10d() {
_0x2ef10d['superClass']['call'](this, _0x4acf80);
}
window['Deer'] = _0x2ef10d, _0x3360d0['setCustomClassForGameObjType'](_0x2ef10d, _0x4acf80, _0x43cc06);
var _0xec194 = _0x1dd8d7;
_0xce6393['prototype'] = Object['create'](_0xec194['prototype']), _0xce6393['prototype']['constructor'] = _0xce6393, _0xce6393['superClass'] = _0xec194, _0xce6393['prototype']['animalInfo'] = function () {
var _0x3cc5d0 = {};
_0x3cc5d0['aniCol'] = '#755A2A';
switch (this['animalSpecies']) {
case 0x0:
    _0x3cc5d0['aniName'] = 'Donkey', _0x3cc5d0['upgradeText'] = 'UPGRADED to ' + _0x3cc5d0['aniName'] + '!\x0aPress \'W\' to give RARE kick and stun your opponents';
    break;
case 0x1:
    _0x3cc5d0['aniName'] = 'Jackass', _0x3cc5d0['aniCol'] = '#000', _0x3cc5d0['upgradeText'] = 'UPGRADED to ' + _0x3cc5d0['aniName'] + '!\x0aPress \'W\' to give RARE kick and stun your opponents.\x0a(Keep mouse close to your animal along with boosting to become a mad donkey!)';
    break;
case 0x2:
    _0x3cc5d0['aniName'] = 'Zonkey', _0x3cc5d0['aniCol'] = '#755A2A', _0x3cc5d0['upgradeText'] = 'UPGRADED to ' + _0x3cc5d0['aniName'] + '!\x0aPress \'W\' to give RARE kick and stun your opponents';
    break;
case 0x64:
    _0x3cc5d0['aniName'] = 'Equusthulhu', _0x3cc5d0['aniCol'] = '#755A2A', _0x3cc5d0['upgradeText'] = 'UPGRADED to ' + _0x3cc5d0['aniName'] + '!\x0aPress \'W\' to give RARE kick and stun your opponents';
    break;
case 0xca:
    _0x3cc5d0['aniName'] = 'Headless Mule', _0x3cc5d0['upgradeText'] = 'UPGRADED to ' + _0x3cc5d0['aniName'] + '!\x0aPress \'W\' to give RARE kick and stun your opponents';
    break;
}
return _0x3cc5d0['skinName'] = this['getSkinName'](), _0x3cc5d0['aniDesc'] = '', _0x3cc5d0;
}, _0xce6393['prototype']['getAbilityInfo'] = function (_0x51231d) {
var _0x4397d6 = {};
return _0x4397d6['abilName'] = 'Back Kick!', _0x4397d6['abilImg'] = 'abilities/Kick.svg', _0x4397d6['skinThemeID'] = this['skinThemeID'], _0x4397d6['mopeSeasonID'] = this['mopeSeasonID'], _0x4397d6;
}, _0xce6393['prototype']['getSkinName'] = function () {
let _0x377023 = this['getSpeciesPath']() + '/donkey';
if (this['specType'] != 0x0) {
    if (this['specType'] > 0x2) _0x377023 += 0x3;
    else _0x377023 += this['specType'];
}
return _0x377023;
}, _0xce6393['prototype']['getSpeciesPath'] = function () {
return 'land/donkey/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0xce6393['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0xce6393['prototype']['drawUnderSkinImg'] = function () {
if (this['flag_usingAbility'] && this['biteStart'] > 0x0) {
    _0x4ac9cf['save']();
    var _0x295905 = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0x1 * _0x295905;
    var _0x1996a9 = 'skins/' + this['getSpeciesPath']() + '/legs.png',
        _0x3f6885 = this['getSkinImageObj'](_0x1996a9);
    if (_0x3f6885) {
        var _0x4da75d = Math['min'](0x1, (_0x397f50 - this['biteStart']) / 0x546),
            _0x516049 = this['rad'],
            _0x28ee09 = 0x0,
            _0x2b3df4 = this['rad'] * 0x1,
            _0x4070cf = _0x516049 * 0x2,
            _0x524d82 = _0x516049 * 0x2 * _0x4da75d,
            _0x1960ff = 0.5,
            _0x533c85 = 2.5;
        _0x4ac9cf['drawImage'](_0x3f6885, _0x28ee09 + _0x4070cf * -_0x1960ff, _0x2b3df4 + _0x524d82 * -_0x533c85, _0x4070cf, _0x524d82);
    }
    _0x4ac9cf['restore']();
}
}, _0xce6393['prototype']['biteStart'] = 0x0, _0xce6393['prototype']['flapAmount'] = 0.3, _0xce6393['prototype']['flapDur'] = 0x1, _0xce6393['prototype']['roarStartT'] = -0x1f4, _0xce6393['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) {
    this['biteStart'] = 0x0;
    if (this['specType'] == 0x0) return;
    var _0x1fead7 = this['specType'] - 0x2,
        _0x4e93d8 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/donkey_head' + _0x1fead7 + '.png'),
        _0x117c23 = this['skinRad'];
    if (_0x4e93d8) {
        _0x4ac9cf['save']();
        var _0x117c23 = this['rad'] * 1.3,
            _0x16b75c = 0x0,
            _0x310395 = this['rad'],
            _0x3598c8 = 0x1,
            _0x177810 = _0x117c23 * 0x2 * _0x3598c8,
            _0x2940dc = _0x117c23 * 0x2 * _0x3598c8,
            _0x474695 = 0.5,
            _0x493c94 = 0.7;
        _0x4ac9cf['drawImage'](_0x4e93d8, _0x16b75c + _0x177810 * -_0x474695, _0x310395 + _0x2940dc * -_0x493c94, _0x177810, _0x2940dc), _0x4ac9cf['restore']();
    }
} else {
    if (this['biteStart'] == 0x0) this['biteStart'] = _0x397f50 + this['roarStartT'];
    var _0x29f047 = (_0x397f50 - this['biteStart']) / 0x3e8,
        _0x1bb23c = 0x0;
    _0x1bb23c = _0x23fdc7(_0x29f047, this['flapDur'], this['flapAmount'], 0x2);
    var _0x4e93d8 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/donkey_head' + this['specType'] + '.png'),
        _0x117c23 = this['skinRad'];
    if (_0x4e93d8) {
        _0x4ac9cf['save']();
        var _0x3598c8 = 0x0,
            _0x398f2 = 0x1,
            _0x3d67aa = 0.85,
            _0x1a6525 = 1.2;
        if (this['specType'] == 0x1) _0x3598c8 = -0x19, _0x398f2 = 1.2 - _0x1bb23c * 0.3, _0x3d67aa = 0.8 + _0x1bb23c * 0.3, _0x1a6525 = 1.4 - _0x1bb23c * 0.3;
        else this['specType'] == 0x2 && (_0x3598c8 = 0x19, _0x398f2 = 0.8 - _0x1bb23c * 0.3, _0x3d67aa = 0.8 + _0x1bb23c * 0.3, _0x1a6525 = 1.4 - _0x1bb23c * 0.3, _0x1bb23c *= -0x1);
        var _0x117c23 = this['rad'] * 0x1,
            _0x16b75c = 0x0,
            _0x310395 = this['rad'],
            _0x177810 = _0x117c23 * 0x2 * _0x1a6525,
            _0x2940dc = _0x117c23 * 0x2 * _0x1a6525,
            _0x474695 = 0.5 * _0x398f2,
            _0x493c94 = 0x1 * _0x3d67aa;
        _0x4ac9cf['rotate'](_0x142401(_0x3598c8) + _0x1bb23c), _0x4ac9cf['drawImage'](_0x4e93d8, _0x16b75c + _0x177810 * -_0x474695, _0x310395 + _0x2940dc * -_0x493c94, _0x177810, _0x2940dc), _0x4ac9cf['restore']();
    }
}
};

function _0xce6393() {
_0xce6393['superClass']['call'](this, _0x4acf80);
}
window['Donkey'] = _0xce6393, _0x3360d0['setCustomClassForGameObjType'](_0xce6393, _0x4acf80, _0x2896b9);
var _0xec194 = _0x1dd8d7;
_0x47e907['prototype'] = Object['create'](_0xec194['prototype']), _0x47e907['prototype']['constructor'] = _0x47e907, _0x47e907['superClass'] = _0xec194, _0x47e907['prototype']['animalInfo'] = function () {
var _0x2a6651 = {};
_0x2a6651['aniCol'] = '#755A2A';
switch (this['animalSpecies']) {
case 0x0:
    _0x2a6651['aniName'] = 'Zebra';
    break;
case 0x1:
    _0x2a6651['aniName'] = 'Okapi';
    break;
case 0x2:
    _0x2a6651['aniName'] = 'Okapi';
    break;
case 0x64:
    _0x2a6651['aniName'] = 'Unicornze';
    break;
case 0xc9:
    _0x2a6651['aniName'] = 'Playground Zebra';
    break;
case 0xca:
    _0x2a6651['aniName'] = 'Synth Zebra';
    break;
}
return _0x2a6651['aniCol'] = '#000', _0x2a6651['skinName'] = this['getSkinName'](), _0x2a6651['upgradeText'] = 'UPGRADED to ' + _0x2a6651['aniName'] + '!\x0a Press \'W\' to give RARE kick and stun your opponents', _0x2a6651['aniDesc'] = '', _0x2a6651;
}, _0x47e907['prototype']['getSkinImageObj'] = function (_0x461875) {
var _0x587803 = this['animalSpecies'] === 0xc9 || this['animalSpecies'] === 0x2 || this['animalSpecies'] === 0x1 || this['animalSpecies'] === 0x64 ? 0x1 : this['mopeSeasonID'];
return this['getSkinImageObjForSeason'](_0x461875, _0x587803);
}, _0x47e907['prototype']['getAbilityInfo'] = function (_0x3c8737) {
var _0x41894f = {};
return _0x41894f['abilName'] = 'Side Kick!', _0x41894f['abilImg'] = 'abilities/Kick.svg', _0x41894f['skinThemeID'] = this['skinThemeID'], _0x41894f['mopeSeasonID'] = this['mopeSeasonID'], _0x41894f;
}, _0x47e907['prototype']['getSkinName'] = function () {
let _0x1c770e = this['getSpeciesPath']() + '/zebra';
return _0x1c770e;
}, _0x47e907['prototype']['getSpeciesPath'] = function () {
return 'land/zebra/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x47e907['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x47e907() {
_0x47e907['superClass']['call'](this, _0x4acf80);
}
window['Zebra'] = _0x47e907, _0x3360d0['setCustomClassForGameObjType'](_0x47e907, _0x4acf80, _0x4699c5);
var _0x4b07ec = _0x4b07ec,
_0xec194 = _0x1dd8d7;
_0x4b07ec['prototype'] = Object['create'](_0xec194['prototype']), _0x4b07ec['prototype']['constructor'] = _0x4b07ec, _0x4b07ec['superClass'] = _0xec194, _0x4b07ec['prototype']['objSkinSpotsCanvas'] = null, _0x4b07ec['prototype']['animalInfo'] = function () {
var _0x22f2ca = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x22f2ca['aniName'] = 'Mouse';
    break;
case 0x1:
    _0x22f2ca['aniName'] = 'Golden Mouse';
    break;
case 0x2:
    _0x22f2ca['aniName'] = 'Purple Mouse';
    break;
case 0x64:
    _0x22f2ca['aniName'] = 'Robo Mouse';
    break;
case 0xc9:
    _0x22f2ca['aniName'] = 'Bubbly Mouse';
    break;
case 0xca:
    _0x22f2ca['aniName'] = 'Super Mouse';
    break;
case 0xcc:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x22f2ca['aniName'] = 'Dark Plague Rat';
        break;
    case 0x1:
        _0x22f2ca['aniName'] = 'Light Plague Rat';
    }
    break;
case 0xfa:
    _0x22f2ca['aniName'] = 'Sample Mouse';
    break;
}
return _0x22f2ca['upgradeText'] = 'You\'re a tiny ' + _0x22f2ca['aniName'] + '- Eat food to grow!', _0x22f2ca['aniCol'] = 'gray', _0x22f2ca['skinName'] = 'land/mouse/' + this['animalSpecies'] + this['getSubSpecies']() + '/mouse', _0x22f2ca;
}, _0x4b07ec['prototype']['getSkinName'] = function () {
return 'land/mouse/' + this['animalSpecies'] + this['getSubSpecies']() + '/mouse';
}, _0x4b07ec['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return this['animalSpecies'] === 0xcc ? '/' + this['animalSubSpecies'] : '';
};

function _0x4b07ec() {
_0x4b07ec['superClass']['call'](this, _0x4acf80);
}
window['Mouse'] = _0x4b07ec, _0x3360d0['setCustomClassForGameObjType'](_0x4b07ec, _0x4acf80, _0x49d118);
var _0x1a6df9 = _0x1a6df9,
_0xec194 = _0x1dd8d7;
_0x1a6df9['prototype'] = Object['create'](_0xec194['prototype']), _0x1a6df9['prototype']['constructor'] = _0x1a6df9, _0x1a6df9['superClass'] = _0xec194, _0x1a6df9['prototype']['objSkinSpotsCanvas'] = null, _0x1a6df9['prototype']['getSkinName'] = function () {
let _0x514386 = this['getSpeciesPath']() + '/bear';
return _0x514386;
}, _0x1a6df9['prototype']['getSpeciesPath'] = function () {
return 'land/bear/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x1a6df9['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x1a6df9['prototype']['animalInfo'] = function () {
var _0x4ae213 = {},
    _0x34f857 = '';
switch (this['animalSpecies']) {
case 0x0:
    _0x4ae213['aniName'] = 'Bear', _0x4ae213['upgradeText'] = 'UPGRADED to BEAR!\x0a Bears climb through green hills! (Press W to use your claw!)', _0x4ae213['aniCol'] = '#99591C', _0x34f857 = 'bear';
    break;
case 0x1:
    _0x4ae213['aniName'] = 'Panda', _0x4ae213['upgradeText'] = 'UPGRADED to ' + _0x4ae213['aniName'] + '!\x0a ' + _0x4ae213['aniName'] + ' climb through green hills! (Press W to use your claw!)', _0x4ae213['aniCol'] = '#99591C', _0x34f857 = 'bear';
    break;
case 0xca:
    _0x4ae213['aniName'] = 'Beekeeper Bear', _0x4ae213['upgradeText'] = 'UPGRADED to ' + _0x4ae213['aniName'] + '!\x0a ' + _0x4ae213['aniName'] + ' climb through green hills! (Press W to use your claw!)';
    break;
case 0xcc:
    _0x4ae213['aniName'] = 'Mr. Teddy', _0x4ae213['upgradeText'] = 'UPGRADED to ' + _0x4ae213['aniName'] + '!\x0a ' + _0x4ae213['aniName'] + ' climb through green hills! (Press W to use your claw!)', _0x4ae213['aniCol'] = '#99591C', _0x34f857 = 'mr_teddy';
    break;
}
return _0x4ae213['aniCol'] = '#CAC05B', _0x4ae213['skinName'] = this['getSkinName'](), _0x4ae213;
}, _0x1a6df9['prototype']['getAbilityInfo'] = function (_0x32873c) {
var _0x5737f6 = {};
return _0x5737f6['abilName'] = 'Claw Slash!', _0x5737f6['abilImg'] = 'abilities/Slash-Claw.svg', _0x5737f6['skinThemeID'] = this['skinThemeID'], _0x5737f6['mopeSeasonID'] = this['mopeSeasonID'], _0x5737f6;
};

function _0x1a6df9() {
_0x1a6df9['superClass']['call'](this, _0x4acf80);
}
window['Bear'] = _0x1a6df9, _0x3360d0['setCustomClassForGameObjType'](_0x1a6df9, _0x4acf80, _0x15db61);
var _0x289436 = _0x289436,
_0xec194 = _0x1dd8d7;
_0x289436['prototype'] = Object['create'](_0xec194['prototype']), _0x289436['prototype']['constructor'] = _0x289436, _0x289436['superClass'] = _0xec194, _0x289436['prototype']['objSkinSpotsCanvas'] = null, _0x289436['prototype']['animalInfo'] = function () {
var _0x32c758 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x32c758['aniName'] = 'Crocodile', _0x32c758['upgradeText'] = 'UPGRADED to BEAR!\x0a Crocs climb through green hills! (Press W to use your claw!)', _0x32c758['aniCol'] = '#30F51C';
    break;
case 0x1:
    _0x32c758['aniName'] = 'Giant Crocodile', _0x32c758['aniCol'] = '#757e71';
    break;
case 0x64:
    _0x32c758['aniName'] = 'Uncle Sam', _0x32c758['aniCol'] = '#757e71';
    break;
case 0xc9:
    _0x32c758['aniName'] = 'Big Hoss', _0x32c758['aniCol'] = '#757e71';
    break;
case 0xca:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x32c758['aniName'] = 'Croczilla';
        break;
    case 0x1:
        _0x32c758['aniName'] = 'Ammit';
    }
    break;
}
return _0x32c758['upgradeText'] = 'UPGRADED to ' + _0x32c758['aniName'] + '!\x0a Press W to bite and drag around animals! \x0a+ (Now hide in water spots)+ Swim well in Mud, Lakes & Oceans!', _0x32c758['skinName'] = this['getSkinName'](), _0x32c758;
}, _0x289436['prototype']['getSkinImageObj'] = function (_0x2970bf) {
var _0x446ebc = this['animalSpecies'] === 0x1 || this['animalSpecies'] === 0x64 || this['animalSpecies'] === 0xc9 ? 0x1 : this['mopeSeasonID'],
    _0xe3697d = './assets/s/' + _0x446ebc + '/' + _0x2970bf;
return this['skinThemeID'] > 0x0 && (_0xe3697d = './assets/t/' + this['skinThemeID'] + '/' + _0x2970bf), _0x297bc3(_0xe3697d, function (_0x46d207) {
    console['log'](_0x46d207['src']);
});
}, _0x289436['prototype']['getSkinName'] = function () {
let _0x5595bb = this['getSpeciesPath']() + '/croc';
return _0x5595bb;
}, _0x289436['prototype']['getSpeciesPath'] = function () {
return 'land/croc/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x289436['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
}, _0x289436['prototype']['setStealth'] = function () {
_0x289436['superClass']['prototype']['setStealth']['call'](this), this['isCamouflage'] && (this['idealOp'] = _0x46868a == this['id'] ? 0.1 : 0x0);
}, _0x289436['prototype']['isCamouflage'] = ![], _0x289436['prototype']['drawUnderSkinTail'] = function (_0x50e4b0) {
if (!this['isCamouflage']) _0x289436['superClass']['prototype']['drawUnderSkinTail']['call'](this, _0x50e4b0);
}, _0x289436['prototype']['drawHealthBar'] = function () {
if (!this['isCamouflage']) _0x289436['superClass']['prototype']['drawHealthBar']['call'](this);
}, _0x289436['prototype']['customUpdatedProperty'] = function (_0x38bd4f, _0x591a1c) {
_0x38bd4f == _0x252be8 && (this['isCamouflage'] = _0x591a1c['readUInt8']() == 0x1, this['setStealth']());
}, _0x289436['prototype']['readCustomData_onNewlyVisible'] = function (_0x11ed7c) {
_0x289436['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x11ed7c), this['isCamouflage'] = _0x11ed7c['readUInt8']() == 0x1, this['setStealth']();
}, _0x289436['prototype']['getAbilityInfo'] = function (_0x3307fc) {
var _0x581c59 = {};
return _0x581c59['abilName'] = 'Bite Grab!', _0x581c59['abilImg'] = 'abilities/Bite.svg', _0x581c59['skinThemeID'] = this['skinThemeID'], _0x581c59['mopeSeasonID'] = this['mopeSeasonID'], _0x581c59;
};

function _0x289436() {
_0x289436['superClass']['call'](this, _0x4acf80);
}
window['Croc'] = _0x289436, _0x3360d0['setCustomClassForGameObjType'](_0x289436, _0x4acf80, _0x1f6edc);
var _0xec194 = _0x1dd8d7;
_0x5253f3['prototype'] = Object['create'](_0xec194['prototype']), _0x5253f3['prototype']['constructor'] = _0x5253f3, _0x5253f3['superClass'] = _0xec194, _0x5253f3['prototype']['updateZ'] = function () {
this['z'] = 0x186a0;
}, _0x5253f3['prototype']['canUseTailslap'] = ![], _0x5253f3['prototype']['tailState'] = 0x0, _0x5253f3['prototype']['lava'] = 0x64, _0x5253f3['prototype']['getSkinName'] = function () {
var _0x190d4b = _0x50a9ba || _0x25ea67 == 0x2 ? 'kingdragon' : 'kingdragon_body';
return 'volcano/kingdragon/' + this['animalSpecies'] + '/' + _0x190d4b;
}, _0x5253f3['prototype']['customUpdatedProperty'] = function (_0x4de697, _0x194d75) {
if (_0x4de697 == _0x57cc2c) this['canUseTailslap'] = _0x194d75['readUInt8']() == 0x1;
else _0x4de697 == _0x3c0528 && (this['tailState'] = _0x194d75['readUInt16']() / 0x64);
}, _0x5253f3['prototype']['leftWingAnim'] = null, _0x5253f3['prototype']['flapAngleDiff'] = 0x3, _0x5253f3['prototype']['flapAngle'] = 0x3, _0x5253f3['prototype']['flapF'] = 0.1, _0x5253f3['prototype']['flapDur'] = 0x2, _0x5253f3['prototype']['sF'] = 0.02, _0x5253f3['prototype']['drawWings'] = function () {
if (_0x25ea67 == 0x2 || _0x50a9ba) return;
this['leftWingAnim'] == null && (this['leftWingAnim'] = new _0x21dde4(this, this['flapDur'], _0x21dde4['wave']), this['leftWingAnim']['keepLastFrame'] = !![], this['leftWingAnim']['loop'] = !![], this['leftWingAnim']['onFrameEntered'] = function (_0x495c43) {
    this['forObj']['frame1'] = _0x495c43;
});
this['leftWingAnim'] != null && this['leftWingAnim']['run']();
var _0x3e45d9 = this['rad'] - this['outlineW'],
    _0xf118d4 = this['frame1'] * this['sF'] * _0x3e45d9,
    _0x5934ae = -(-this['flapF'] + this['frame1']),
    _0xa46478 = _0x5934ae * _0x142401(this['flapAngle']),
    _0x4c72d9 = 0x1f4 / 0x154,
    _0x39c79e = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/left_wing.png'),
    _0x1e1245 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/right_wing.png');
if (_0x39c79e && _0x1e1245) {
    _0x4ac9cf['save'](), _0x4ac9cf['rotate'](_0x142401(this['flapAngleDiff']) + _0xa46478), _0x4ac9cf['drawImage'](_0x39c79e, -_0x3e45d9 * _0x4c72d9, -_0x3e45d9 * _0x4c72d9 + _0xf118d4, 0x2 * _0x3e45d9 * _0x4c72d9, 0x2 * _0x3e45d9 * _0x4c72d9 + _0xf118d4 * 1.5), _0x4ac9cf['restore'](), _0x4ac9cf['save'](), _0x4ac9cf['rotate'](-(_0x142401(this['flapAngleDiff']) + _0xa46478)), _0x4ac9cf['drawImage'](_0x1e1245, -_0x3e45d9 * _0x4c72d9, -_0x3e45d9 * _0x4c72d9 + _0xf118d4, 0x2 * _0x3e45d9 * _0x4c72d9, 0x2 * _0x3e45d9 * _0x4c72d9 + _0xf118d4 * 1.5), _0x4ac9cf['restore']();
    if (this['animalSpecies'] == 0x4) {
        let _0x14ddff = _0x2dd807('kd', this['spawnTime']);
        _0x14ddff !== undefined && _0x14ddff != null && (this['theFrame'] = _0x14ddff);
        let _0x13a018 = !(_0x25ea67 == 0x2 || _0x50a9ba) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'];
        _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = Math['max'](0x0, _0x13a018);
        var _0x1c84e4 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/left_wing_tips.png'),
            _0x20b770 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/right_wing_tips.png');
        _0x1c84e4 && _0x20b770 && (_0x4ac9cf['save'](), _0x4ac9cf['rotate'](_0x142401(this['flapAngleDiff']) + _0xa46478), _0x4ac9cf['drawImage'](_0x1c84e4, -_0x3e45d9 * _0x4c72d9, -_0x3e45d9 * _0x4c72d9 + _0xf118d4, 0x2 * _0x3e45d9 * _0x4c72d9, 0x2 * _0x3e45d9 * _0x4c72d9 + _0xf118d4 * 1.5), _0x4ac9cf['restore'](), _0x4ac9cf['save'](), _0x4ac9cf['rotate'](-(_0x142401(this['flapAngleDiff']) + _0xa46478)), _0x4ac9cf['drawImage'](_0x20b770, -_0x3e45d9 * _0x4c72d9, -_0x3e45d9 * _0x4c72d9 + _0xf118d4, 0x2 * _0x3e45d9 * _0x4c72d9, 0x2 * _0x3e45d9 * _0x4c72d9 + _0xf118d4 * 1.5), _0x4ac9cf['restore']()), _0x4ac9cf['restore']();
    }
}
var _0x51cb73 = this['lava'],
    _0x5c1703 = 0x32;
if (_0x51cb73 < _0x5c1703) {
    var _0xec9473 = _0x51cb73 / _0x5c1703,
        _0x195ea7 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/left_wing1.png'),
        _0x4d4be3 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/right_wing2.png');
    _0x195ea7 && _0x4d4be3 && (_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1 - _0xec9473, _0x4ac9cf['save'](), _0x4ac9cf['rotate'](_0x142401(this['flapAngleDiff']) + _0xa46478), _0x4ac9cf['drawImage'](_0x195ea7, -_0x3e45d9 * _0x4c72d9, -_0x3e45d9 * _0x4c72d9 + _0xf118d4, 0x2 * _0x3e45d9 * _0x4c72d9, 0x2 * _0x3e45d9 * _0x4c72d9 + _0xf118d4 * 1.5), _0x4ac9cf['restore'](), _0x4ac9cf['save'](), _0x4ac9cf['rotate'](-(_0x142401(this['flapAngleDiff']) + _0xa46478)), _0x4ac9cf['drawImage'](_0x4d4be3, -_0x3e45d9 * _0x4c72d9, -_0x3e45d9 * _0x4c72d9 + _0xf118d4, 0x2 * _0x3e45d9 * _0x4c72d9, 0x2 * _0x3e45d9 * _0x4c72d9 + _0xf118d4 * 1.5), _0x4ac9cf['restore'](), _0x4ac9cf['restore']());
}
}, _0x5253f3['prototype']['drawSkinCustomization'] = function () {
if (this['flag_underWater']) return;
if (_0x25ea67 == 0x2 || _0x50a9ba) return;
var _0x4e3b17 = 0x1f4 / 0x154;
let _0x85ffee = _0x2dd807('kd', this['spawnTime']);
_0x85ffee !== undefined && _0x85ffee != null && (this['theFrame'] = _0x85ffee);
let _0x112257 = !(_0x25ea67 == 0x2 || _0x50a9ba) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'];
var _0x1dfbd7 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/nostrils.png');
if (_0x1dfbd7) {
    _0x4ac9cf['save']();
    var _0x59559e = this['lava'],
        _0x5e0179 = 0x64,
        _0x5f08a0 = _0x59559e / _0x5e0179;
    _0x4ac9cf['globalAlpha'] = Math['max'](0x0, _0x112257) * _0x5f08a0;
    var _0x634bd6 = this['rad'] - this['outlineW'];
    _0x4ac9cf['drawImage'](_0x1dfbd7, -_0x634bd6 * _0x4e3b17, -_0x634bd6 * _0x4e3b17, 0x2 * _0x634bd6 * _0x4e3b17, 0x2 * _0x634bd6 * _0x4e3b17), _0x4ac9cf['restore']();
}
if (!this['canUseTailslap']) {
    var _0x3ab589 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/bone1.png');
    if (_0x3ab589) {
        _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1;
        var _0x634bd6 = this['rad'] - this['outlineW'];
        _0x4ac9cf['drawImage'](_0x3ab589, -_0x634bd6 * _0x4e3b17, -_0x634bd6 * _0x4e3b17, 0x2 * _0x634bd6 * _0x4e3b17, 0x2 * _0x634bd6 * _0x4e3b17), _0x4ac9cf['restore']();
    }
    var _0x4d1720 = 0x0;
    if (this['tailState'] < 0xb && this['tailState'] > 0x5) {
        var _0x1711cd = this['tailState'] - 0x5;
        _0x4d1720 = _0x1711cd / 0x6;
    } else this['tailState'] <= 0x3 && (_0x4d1720 = this['tailState'] / 0x3);
    var _0x4aa7c9 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/bone3.png');
    if (this['tailState'] < 0xb) {
        if (_0x4aa7c9) {
            _0x4ac9cf['save']();
            if (this['tailState'] > 0x5) _0x4ac9cf['globalAlpha'] = 0x1 - _0x4d1720;
            else _0x4ac9cf['globalAlpha'] = 0x1;
            var _0x634bd6 = this['rad'] - this['outlineW'];
            _0x4ac9cf['drawImage'](_0x4aa7c9, -_0x634bd6 * _0x4e3b17, -_0x634bd6 * _0x4e3b17, 0x2 * _0x634bd6 * _0x4e3b17, 0x2 * _0x634bd6 * _0x4e3b17), _0x4ac9cf['restore']();
        }
    }
    var _0x178872 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/bone2.png');
    if (this['tailState'] < 0x3) {
        if (_0x178872) {
            _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1 - _0x4d1720;
            var _0x634bd6 = this['rad'] - this['outlineW'];
            _0x4ac9cf['drawImage'](_0x178872, -_0x634bd6 * _0x4e3b17, -_0x634bd6 * _0x4e3b17, 0x2 * _0x634bd6 * _0x4e3b17, 0x2 * _0x634bd6 * _0x4e3b17), _0x4ac9cf['restore']();
        }
    }
} else {
    var _0x178872 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/bone2.png');
    if (_0x178872) {
        _0x4ac9cf['save']();
        var _0x62f42a = Math['max'](0.3, _0x112257);
        _0x4ac9cf['globalAlpha'] = _0x62f42a;
        var _0x634bd6 = this['rad'] - this['outlineW'];
        _0x4ac9cf['drawImage'](_0x178872, -_0x634bd6 * _0x4e3b17, -_0x634bd6 * _0x4e3b17, 0x2 * _0x634bd6 * _0x4e3b17, 0x2 * _0x634bd6 * _0x4e3b17), _0x4ac9cf['restore']();
    }
}
this['drawWings']();
}, _0x5253f3['prototype']['drawLowWaterDrop'] = function () {
if (this['flag_underWater']) return;
if (this['flag_lowWat']) {
    var _0x9692ec = 1.2,
        _0x4f89c0 = 0.2,
        _0x358094 = 0.8,
        _0x24c36e = 0.5 * (_0x358094 - _0x4f89c0),
        _0x5d2396 = _0x4f89c0 + _0x24c36e + _0x24c36e * Math['sin'](0x2 * Math['PI'] / _0x9692ec * (_0x397f50 / 0x3e8));
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = _0x5d2396, _0x4ac9cf['fillStyle'] = _0x926611, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, this['rad'] + 0x5, 0x5, 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['restore']();
}
}, _0x5253f3['prototype']['animalInfo'] = function () {
var _0x5ca740 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x5ca740['aniName'] = 'King Dragon';
    break;
case 0x1:
    _0x5ca740['aniName'] = 'Golden King Dragon';
    break;
case 0x2:
    _0x5ca740['aniName'] = 'King Ripper';
    break;
case 0x3:
    _0x5ca740['aniName'] = 'King Stan';
    break;
case 0x4:
    _0x5ca740['aniName'] = 'King Shah';
    break;
case 0x5:
    _0x5ca740['aniName'] = 'Queen Scarlet';
    break;
case 0x6:
    _0x5ca740['aniName'] = 'Queen Celeste';
    break;
case 0xc8:
    _0x5ca740['aniName'] = 'Queen Flame';
    break;
case 0xca:
    _0x5ca740['aniName'] = 'King Graveyard';
    break;
}
return _0x5ca740['aniCol'] = '#FF9000', _0x5ca740['skinName'] = this['getSkinName'](), _0x5ca740['upgradeText'] = 'UPGRADED to ' + _0x5ca740['aniName'], _0x5ca740['upgradeText'] += '!\x0aYou got firestream that burns your victim alive! Watch your tail and slap them hard.', _0x5ca740['aniCol'] = 'black', _0x5ca740;
}, _0x5253f3['prototype']['getAbilityInfo'] = function (_0x3e4715) {
var _0xb298af = {};
_0xb298af['abilName'] = 'Firestream\x0a& Tail slap';
var _0x12d730 = 0x0;
switch (this['animalSpecies']) {
case 0x0:
    _0x12d730 = 0x1;
    break;
case 0x1:
    _0x12d730 = 0x2;
    break;
case 0x2:
    _0x12d730 = 0x4;
    break;
case 0x3:
    _0x12d730 = 0x5;
    break;
case 0x4:
    _0x12d730 = 0x6;
    break;
case 0x5:
    _0x12d730 = 0x9;
    break;
case 0x6:
    _0x12d730 = 0x8;
    break;
}
return _0xb298af['speciesType'] = _0x12d730, _0xb298af['abilImg'] = 'abilities/Fireball.svg', _0xb298af['skinThemeID'] = this['skinThemeID'], _0xb298af['mopeSeasonID'] = this['mopeSeasonID'], _0xb298af;
};

function _0x5253f3() {
this['lava'] = 0x64, _0x5253f3['superClass']['call'](this, _0x4acf80);
}
window['KingDragon'] = _0x5253f3, _0x3360d0['setCustomClassForGameObjType'](_0x5253f3, _0x4acf80, _0x1e8cf7);
var _0xec194 = _0x1dd8d7;
_0x217ae3['prototype'] = Object['create'](_0xec194['prototype']), _0x217ae3['prototype']['constructor'] = _0x217ae3, _0x217ae3['superClass'] = _0xec194, _0x217ae3['prototype']['animalInfo'] = function () {
var _0x278a9d = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x278a9d['aniName'] = 'The Yeti!';
    break;
case 0x1:
    _0x278a9d['aniName'] = 'Golden Yeti!';
    break;
case 0x2:
    _0x278a9d['aniName'] = 'Emerald Yeti!';
    break;
case 0x3:
    _0x278a9d['aniName'] = 'Aqua Yeti';
    break;
case 0xc9:
    _0x278a9d['aniName'] = 'Squishy Yeti';
    break;
case 0xca:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x278a9d['aniName'] = 'Lovely Yeti';
        break;
    case 0x1:
        _0x278a9d['aniName'] = 'Frosty Eye Demon';
    }
    break;
case 0xcc:
    _0x278a9d['aniName'] = 'Frost Wolf';
    break;
case 0xdc:
    _0x278a9d['aniName'] = 'Glacial Demon';
    break;
}
return _0x278a9d['skinName'] = this['getSkinName'](), _0x278a9d['aniDesc'] = '', _0x278a9d['upgradeText'] = 'UPGRADED to ' + _0x278a9d['aniName'] + '!\x0a So it really exists... \x0a Hold W to turn into snow, release W to freeeeeze!', _0x278a9d['aniCol'] = '#839eb5', _0x278a9d;
}, _0x217ae3['prototype']['getAbilityInfo'] = function (_0x4c1c57) {
var _0x24b5ec = {};
return _0x24b5ec['abilName'] = 'Yeti Roar' + (this['animalSpecies'] == 0x3 ? ' &\x0a Ice Statue' : '') + '', _0x24b5ec['abilImg'] = 'abilities/Growl-Roar.svg', _0x24b5ec['skinThemeID'] = this['skinThemeID'], _0x24b5ec['mopeSeasonID'] = this['mopeSeasonID'], _0x24b5ec;
}, _0x217ae3['prototype']['getSkinName'] = function () {
var _0x2ec817 = this['specType'] == 0x0 ? '' : 0x1;
return this['getSpeciesPath']('yeti') + '/yeti' + _0x2ec817;
}, _0x217ae3['prototype']['getSubSpecies'] = function () {
return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
}, _0x217ae3['prototype']['getSpeciesPath'] = function (_0x12495b) {
return 'arctic/' + _0x12495b + '/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x217ae3['prototype']['drawOnTopOfSkinImg'] = function () {}, _0x217ae3['prototype']['isTransforming'] = ![], _0x217ae3['prototype']['readCustomData_onNewlyVisible'] = function (_0x2a83f1) {
_0x217ae3['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x2a83f1), this['isTransforming'] = _0x2a83f1['readUInt8']() == 0x1;
}, _0x217ae3['prototype']['customUpdatedProperty'] = function (_0x52d475, _0x6f6961) {
_0x52d475 == _0x622b15 && (this['isTransforming'] = _0x6f6961['readUInt8']() == 0x1);
}, _0x217ae3['prototype']['getIdealOpacity'] = function () {
var _0x225797 = this['flag_underWater'] || this['flag_usingAbility'] && this['isTransforming'] || this['isCamouflage'] ? 0x0 : 0x1;
return _0x225797;
}, _0x217ae3['prototype']['biteStart'] = 0x0, _0x217ae3['prototype']['flapAmount'] = 0x3, _0x217ae3['prototype']['flapDur'] = 1.5, _0x217ae3['prototype']['roarStartT'] = -0x1f4, _0x217ae3['prototype']['drawSkinCustomization'] = function () {
if (this['flag_usingAbility'] && this['isTransforming']) {
    if (this['isTransforming']) {
        _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1;
        var _0x49bc7c = this['getSkinImageObj']('img/snowball.png');
        if (_0x49bc7c) {
            var _0x1a080f = this['rad'];
            _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x49bc7c, -_0x1a080f, -_0x1a080f, 0x2 * _0x1a080f, 0x2 * _0x1a080f);
        } else this['drawOutlinedCircle']('', 'white');
        _0x4ac9cf['restore']();
    }
} else {
    if (this['animalSpecies'] == 0x4) return;
    this['setSkinScale']();
    if (!this['flag_usingAbility']) {
        this['biteStart'] = 0x0;
        return;
    } else {
        this['biteStart'] == 0x0 && (this['biteStart'] = _0x397f50 + this['roarStartT']);
        if (this['specType'] != 0x0 && this['specType'] != undefined) {
            var _0x114cbf = 'skins/arctic/yeti/' + this['animalSpecies'] + '/yeti_head1.png',
                _0x3cdeaf = this['getSkinImageObj'](_0x114cbf),
                _0x1b4be0 = (_0x397f50 - this['biteStart']) / 0x3e8,
                _0x8a41ef = this['skinScale'] * 1.07,
                _0x1a080f = this['skinRad'];
            if (_0x3cdeaf) {
                var _0x31fe37 = 0x0,
                    _0x1762b9 = this['flapAmount'] - (this['animalSpecies'] == 0x1 ? 0.5 : 0x0);
                _0x31fe37 = !(_0x25ea67 == 0x2) ? _0x23fdc7(_0x1b4be0, this['flapDur'], _0x1762b9, 0x2) : this['flapAmount'], _0x4ac9cf['save']();
                var _0x1a080f = this['rad'];
                _0x4ac9cf['drawImage'](_0x3cdeaf, -_0x1a080f * _0x8a41ef, (-_0x1a080f + _0x1a080f * 0.1) * _0x8a41ef - _0x31fe37, 0x2 * _0x1a080f * _0x8a41ef, 0x2 * _0x1a080f * _0x8a41ef), _0x4ac9cf['restore']();
            }
        }
    }
}
};

function _0x217ae3() {
_0x217ae3['superClass']['call'](this, _0x4acf80);
}
window['Yeti'] = _0x217ae3, _0x3360d0['setCustomClassForGameObjType'](_0x217ae3, _0x4acf80, _0x1080d7);
var _0xec194 = _0x1dd8d7;
_0x592859['prototype'] = Object['create'](_0xec194['prototype']), _0x592859['prototype']['constructor'] = _0x592859, _0x592859['superClass'] = _0xec194, _0x592859['prototype']['animalInfo'] = function () {
var _0x10a0d4 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x10a0d4['aniName'] = 'Mammoth!';
    break;
case 0x1:
    _0x10a0d4['aniName'] = 'Golden Mammoth!';
    break;
case 0x2:
    _0x10a0d4['aniName'] = 'Black Mammoth!';
    break;
case 0xc9:
    _0x10a0d4['aniName'] = 'Lost Tourist!';
    break;
case 0xca:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x10a0d4['aniName'] = 'Acid Mammoth';
        break;
    case 0x1:
        _0x10a0d4['aniName'] = 'Crystal Golem';
    }
    break;
case 0xdc:
    _0x10a0d4['aniName'] = ' Golem Mammoth';
    break;
}
return _0x10a0d4['skinName'] = this['getSkinName'](), _0x10a0d4['aniDesc'] = '', _0x10a0d4['upgradeText'] = 'UPGRADED to ' + _0x10a0d4['aniName'] + '\x0a Press W to roll snowballs with your trunk!\x0a The bigger the snowball gets, the longer the freeze!', _0x10a0d4['aniCol'] = '#9d4717', _0x10a0d4;
}, _0x592859['prototype']['getAbilityInfo'] = function (_0x12870b) {
var _0xc619cb = {};
return _0xc619cb['abilName'] = 'Roll snow', _0xc619cb['abilImg'] = 'abilities/Roll-RollSnowball.svg', _0xc619cb['skinThemeID'] = this['skinThemeID'], _0xc619cb['mopeSeasonID'] = this['mopeSeasonID'], _0xc619cb;
}, _0x592859['prototype']['getSkinName'] = function () {
var _0x4bbd74 = this['specType'] == 0x0 ? '' : 0x1;
return 'arctic/mammoth/' + this['animalSpecies'] + this['getSubSpecies']() + '/mammoth' + _0x4bbd74;
}, _0x592859['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
};

function _0x592859() {
_0x592859['superClass']['call'](this, _0x4acf80);
}
window['Mammoth'] = _0x592859, _0x3360d0['setCustomClassForGameObjType'](_0x592859, _0x4acf80, _0x1a507a);
var _0xec194 = _0x1dd8d7;
_0x368e0a['prototype'] = Object['create'](_0xec194['prototype']), _0x368e0a['prototype']['constructor'] = _0x368e0a, _0x368e0a['superClass'] = _0xec194, _0x368e0a['prototype']['animalInfo'] = function () {
var _0x2e076d = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x2e076d['aniName'] = 'Sabertooth Tiger!';
    break;
case 0x1:
    _0x2e076d['aniName'] = 'Golden Tiger!';
    break;
case 0x2:
    _0x2e076d['aniName'] = 'Margala Sabertooth!';
    break;
case 0xc8:
    _0x2e076d['aniName'] = 'Techno Saber!';
    break;
case 0xc9:
    _0x2e076d['aniName'] = 'Strawbertooth!';
    break;
case 0xca:
    _0x2e076d['aniName'] = 'Ice-Fang Sabertooth';
    break;
case 0xcc:
    _0x2e076d['aniName'] = 'Shadow Sabeertooth!';
    break;
}
return _0x2e076d['skinName'] = this['getSkinName'](), _0x2e076d['aniDesc'] = '', _0x2e076d['upgradeText'] = 'UPGRADED to ' + _0x2e076d['aniName'] + '\x0aSabertooth Tigers are great swimmers, dominate the Lakes/Oceans/Mud!', _0x2e076d['aniCol'] = '#945A99', _0x2e076d;
}, _0x368e0a['prototype']['getAbilityInfo'] = function (_0x1f6264) {
var _0x2ef09a = {};
return _0x2ef09a['abilName'] = 'Claw Slash!', _0x2ef09a['abilImg'] = 'abilities/Slash-Claw.svg', _0x2ef09a['skinThemeID'] = this['skinThemeID'], _0x2ef09a['mopeSeasonID'] = this['mopeSeasonID'], _0x2ef09a;
}, _0x368e0a['prototype']['getSkinName'] = function () {
return 'arctic/sabertooth/' + this['animalSpecies'] + this['getSubSpecies']() + '/sabertooth' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x368e0a['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x368e0a() {
_0x368e0a['superClass']['call'](this, _0x4acf80);
}
window['Sabertooth'] = _0x368e0a, _0x3360d0['setCustomClassForGameObjType'](_0x368e0a, _0x4acf80, _0x3700ee);
var _0xec194 = _0x1dd8d7;
_0x1d2172['prototype'] = Object['create'](_0xec194['prototype']), _0x1d2172['prototype']['constructor'] = _0x1d2172, _0x1d2172['superClass'] = _0xec194, _0x1d2172['prototype']['animalInfo'] = function () {
var _0x2a783f = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x2a783f['aniName'] = 'Penguin';
    break;
case 0xc9:
    _0x2a783f['aniName'] = 'Surfer Penguin';
    break;
case 0xca:
    _0x2a783f['aniName'] = 'UFO Pigeon';
    break;
}
return _0x2a783f['skinName'] = this['getSkinName'](), _0x2a783f['aniDesc'] = '', _0x2a783f['upgradeText'] = 'UPGRADED to ' + _0x2a783f['aniName'] + '!\x0a Left-click to run!\x0a (HOLD W to slide FAST on ice)!', _0x2a783f['aniCol'] = '#FFFFFF', _0x2a783f;
}, _0x1d2172['prototype']['getAbilityInfo'] = function (_0x4f1d43) {
var _0x225c7b = {};
return _0x225c7b['abilName'] = 'Slide on ice', _0x225c7b['abilImg'] = 'abilities/Slide.svg', _0x225c7b['skinThemeID'] = this['skinThemeID'], _0x225c7b['mopeSeasonID'] = this['mopeSeasonID'], _0x225c7b;
}, _0x1d2172['prototype']['getSkinName'] = function () {
return 'arctic/penguin/' + this['animalSpecies'] + this['getSubSpecies']() + '/penguin' + (this['specType'] == 0x0 ? '' : 0x1);
}, _0x1d2172['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x1d2172() {
_0x1d2172['superClass']['call'](this, _0x4acf80);
}
window['Penguin'] = _0x1d2172, _0x3360d0['setCustomClassForGameObjType'](_0x1d2172, _0x4acf80, _0x55a1a9);
var _0xec194 = _0x1dd8d7;
_0x3700c4['prototype'] = Object['create'](_0xec194['prototype']), _0x3700c4['prototype']['constructor'] = _0x3700c4, _0x3700c4['superClass'] = _0xec194, _0x3700c4['prototype']['animalInfo'] = function () {
var _0x564019 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x564019['aniName'] = 'Seal';
    break;
case 0xc9:
    _0x564019['aniName'] = 'Hawaiian Monk';
    break;
case 0xca:
    _0x564019['aniName'] = 'Soapy Seal';
    break;
}
return _0x564019['skinName'] = this['getSkinName'](), _0x564019['aniDesc'] = '', _0x564019['upgradeText'] = 'UPGRADED to ' + _0x564019['aniName'] + '!\x0a You can slide on ice (Hold W) + can climb hills (rocks too!)', _0x564019['aniCol'] = '#633838', _0x564019;
}, _0x3700c4['prototype']['getAbilityInfo'] = function (_0x4dfb78) {
var _0x474feb = {};
return _0x474feb['abilName'] = 'Slide on ice', _0x474feb['abilImg'] = 'abilities/Slide.svg', _0x474feb['skinThemeID'] = this['skinThemeID'], _0x474feb['mopeSeasonID'] = this['mopeSeasonID'], _0x474feb;
}, _0x3700c4['prototype']['getSkinName'] = function () {
return 'arctic/seal/' + this['animalSpecies'] + this['getSubSpecies']() + '/seal' + (this['specType'] == 0x0 ? '' : 0x1);
}, _0x3700c4['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x3700c4() {
_0x3700c4['superClass']['call'](this, _0x4acf80);
}
window['Seal'] = _0x3700c4, _0x3360d0['setCustomClassForGameObjType'](_0x3700c4, _0x4acf80, _0xc81962);
var _0xec194 = _0x1dd8d7;
_0x4e0204['prototype'] = Object['create'](_0xec194['prototype']), _0x4e0204['prototype']['constructor'] = _0x4e0204, _0x4e0204['superClass'] = _0xec194, _0x4e0204['prototype']['animalInfo'] = function () {
var _0x1e014c = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x1e014c['aniName'] = 'Walrus!';
    break;
case 0x64:
    _0x1e014c['aniName'] = 'Candy Rus!';
    break;
case 0xc9:
    _0x1e014c['aniName'] = 'Walrusmelon!';
    break;
case 0xca:
    _0x1e014c['aniName'] = 'Potato Walrus';
    break;
}
return _0x1e014c['skinName'] = this['getSkinName'](), _0x1e014c['aniDesc'] = '', _0x1e014c['upgradeText'] = 'UPGRADED to ' + _0x1e014c['aniName'] + '\x0a You can slide on ice (Hold W) + can climb hills (rocks too!)', _0x1e014c['aniCol'] = '#633838', _0x1e014c;
}, _0x4e0204['prototype']['getAbilityInfo'] = function (_0x5b01a1) {
var _0x2ce492 = {};
return _0x2ce492['abilName'] = 'Slide on ice', _0x2ce492['abilImg'] = 'abilities/Slide.svg', _0x2ce492['skinThemeID'] = this['skinThemeID'], _0x2ce492['mopeSeasonID'] = this['mopeSeasonID'], _0x2ce492;
}, _0x4e0204['prototype']['getSkinName'] = function () {
return 'arctic/walrus/' + this['animalSpecies'] + this['getSubSpecies']() + '/walrus' + (this['specType'] == 0x0 ? '' : 0x1);
}, _0x4e0204['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x4e0204() {
_0x4e0204['superClass']['call'](this, _0x4acf80);
}
window['Walrus'] = _0x4e0204, _0x3360d0['setCustomClassForGameObjType'](_0x4e0204, _0x4acf80, _0x13bbdd);
var _0xec194 = _0x1dd8d7;
_0x59e24c['prototype'] = Object['create'](_0xec194['prototype']), _0x59e24c['prototype']['constructor'] = _0x59e24c, _0x59e24c['superClass'] = _0xec194, _0x59e24c['prototype']['animalInfo'] = function () {
var _0x4e1706 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x4e1706['aniName'] = 'Wolf!';
    break;
case 0xc9:
    _0x4e1706['aniName'] = 'Pineapple Wolf!';
    break;
case 0xdc:
    _0x4e1706['aniName'] = 'Okami Wolf';
    break;
}
return _0x4e1706['skinName'] = this['getSkinName'](), _0x4e1706['upgradeText'] = 'UPGRADED to ' + _0x4e1706['aniName'] + '\x0a Wolf paws turn very well on ice!\x0a Press W to howl!', _0x4e1706['aniCol'] = '#6B6B6B', _0x4e1706;
}, _0x59e24c['prototype']['getAbilityInfo'] = function (_0x5d8608) {
var _0x16b71f = {};
return _0x16b71f['abilName'] = 'Howl!', _0x16b71f['abilImg'] = 'abilities/Howl.svg', _0x16b71f['skinThemeID'] = this['skinThemeID'], _0x16b71f['mopeSeasonID'] = this['mopeSeasonID'], _0x16b71f;
}, _0x59e24c['prototype']['getSkinName'] = function () {
var _0xcd4e7 = this['specType'] == 0x0 ? '' : 0x1;
return 'arctic/wolf/' + this['animalSpecies'] + this['getSubSpecies']() + '/wolf' + _0xcd4e7;
}, _0x59e24c['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x59e24c() {
_0x59e24c['superClass']['call'](this, _0x4acf80);
}
window['Wolf'] = _0x59e24c, _0x3360d0['setCustomClassForGameObjType'](_0x59e24c, _0x4acf80, _0x4b16ca);
var _0xec194 = _0x1dd8d7;
_0x50563f['prototype'] = Object['create'](_0xec194['prototype']), _0x50563f['prototype']['constructor'] = _0x50563f, _0x50563f['superClass'] = _0xec194, _0x50563f['prototype']['animalInfo'] = function () {
var _0x11dfe2 = {};
_0x11dfe2['aniName'] = 'Wolverine!';
switch (this['animalSpecies']) {
case 0xca:
    _0x11dfe2['aniName'] = 'Floral Wolverine';
    break;
case 0xdc:
    _0x11dfe2['aniName'] = 'Summoner Wolverine';
    break;
}
return _0x11dfe2['skinName'] = this['getSkinName'](), _0x11dfe2['upgradeText'] = 'UPGRADED to ' + _0x11dfe2['aniName'] + '!\x0a Press W to Let out a Powerful GROWL! (Knocks back prey!)', _0x11dfe2['aniCol'] = '#843A0F', _0x11dfe2;
}, _0x50563f['prototype']['getAbilityInfo'] = function (_0x542117) {
var _0x43db82 = {};
return _0x43db82['abilName'] = 'Roar!', _0x43db82['abilImg'] = 'abilities/Howl-1.svg', _0x43db82['skinThemeID'] = this['skinThemeID'], _0x43db82['mopeSeasonID'] = this['mopeSeasonID'], _0x43db82;
}, _0x50563f['prototype']['getSkinName'] = function () {
return 'arctic/wolverine/' + this['animalSpecies'] + this['getSubSpecies']() + '/wolverine' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x50563f['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x50563f() {
_0x50563f['superClass']['call'](this, _0x4acf80);
}
window['Wolverine'] = _0x50563f, _0x3360d0['setCustomClassForGameObjType'](_0x50563f, _0x4acf80, _0x57db06);
var _0xec194 = _0x1dd8d7;
_0x502047['prototype'] = Object['create'](_0xec194['prototype']), _0x502047['prototype']['constructor'] = _0x502047, _0x502047['superClass'] = _0xec194, _0x502047['prototype']['animalInfo'] = function () {
var _0x490c13 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x490c13['aniName'] = 'Muskox!';
    break;
case 0xc8:
    _0x490c13['aniName'] = 'Brazen Bull!';
    break;
case 0xc9:
    _0x490c13['aniName'] = 'Fireworks Ox!';
    break;
case 0xca:
    _0x490c13['aniName'] = 'Monitor Muskox';
    break;
}
return _0x490c13['skinName'] = this['getSkinName'](), _0x490c13['aniDesc'] = '', _0x490c13['upgradeText'] = 'UPGRADED to ' + _0x490c13['aniName'] + '\x0a Press W to charge with your horns! \x0aPlus move decently on ice!', _0x490c13['aniCol'] = '#231f18', _0x490c13;
}, _0x502047['prototype']['getAbilityInfo'] = function (_0x4bdbd7) {
var _0x5537f3 = {};
return _0x5537f3['abilName'] = 'Charge!', _0x5537f3['abilImg'] = 'abilities/Charge.svg', _0x5537f3['skinThemeID'] = this['skinThemeID'], _0x5537f3['mopeSeasonID'] = this['mopeSeasonID'], _0x5537f3;
}, _0x502047['prototype']['getSkinName'] = function () {
return 'arctic/muskox/' + this['animalSpecies'] + this['getSubSpecies']() + '/muskox' + (this['flag_usingAbility'] ? '2' : '');
}, _0x502047['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x502047() {
_0x502047['superClass']['call'](this, _0x4acf80);
}
window['Muskox'] = _0x502047, _0x3360d0['setCustomClassForGameObjType'](_0x502047, _0x4acf80, _0xc6c00);
var _0xec194 = _0x1dd8d7;
_0xdc3a06['prototype'] = Object['create'](_0xec194['prototype']), _0xdc3a06['prototype']['constructor'] = _0xdc3a06, _0xdc3a06['superClass'] = _0xec194, _0xdc3a06['prototype']['animalInfo'] = function () {
var _0x4da5d2 = {};
if (this['animalSpecies'] == 0x1) _0x4da5d2['aniName'] = 'The Snowman', _0x4da5d2['skinName'] = 'arctic/snowman/' + this['animalSpecies'] + '/snowman';
else this['animalSpecies'] == 0x2 && (_0x4da5d2['aniName'] = 'The Snowgirl', _0x4da5d2['skinName'] = 'arctic/snowman/' + this['animalSpecies'] + '/snowgirl');
return _0x4da5d2['aniDesc'] = '', _0x4da5d2['upgradeText'] = 'UPGRADED to ' + _0x4da5d2['aniName'] + '!\x0a So it really exists... \x0a Hold W to turn into snow, release W to freeeeeze!', _0x4da5d2['aniCol'] = '#839eb5', _0x4da5d2;
}, _0xdc3a06['prototype']['getAbilityInfo'] = function (_0x282cc6) {
var _0x466c54 = {};
return _0x466c54['abilName'] = 'Freeze Prey!', _0x466c54['abilImg'] = 'abilities/Ice-Freeze.svg', _0x466c54['skinThemeID'] = this['skinThemeID'], _0x466c54['mopeSeasonID'] = this['mopeSeasonID'], _0x466c54;
}, _0xdc3a06['prototype']['getSkinName'] = function () {
var _0x275181 = '';
if (this['animalSpecies'] == 0x2) _0x275181 = 'arctic/snowman/' + this['animalSpecies'] + '/snowgirl';
else _0x275181 = 'arctic/snowman/' + this['animalSpecies'] + '/snowman';
return _0x275181 += this['specType'] == 0x0 ? '' : 0x1, _0x275181;
}, _0xdc3a06['prototype']['drawUnderSkinTail'] = function (_0x148b6f) {
if (!this['isCamouflage']) _0xdc3a06['superClass']['prototype']['drawUnderSkinTail']['call'](this, _0x148b6f);
}, _0xdc3a06['prototype']['drawHealthBar'] = function () {
if (!this['isCamouflage']) _0xdc3a06['superClass']['prototype']['drawHealthBar']['call'](this);
}, _0xdc3a06['prototype']['isTransforming'] = ![], _0xdc3a06['prototype']['isCamouflage'] = ![], _0xdc3a06['prototype']['carrotAlpha'] = 0x0, _0xdc3a06['prototype']['getIdealOpacity'] = function () {
var _0x34b53a = this['flag_underWater'] || this['flag_usingAbility'] && this['isTransforming'] || this['isCamouflage'] ? 0x0 : 0x1;
return _0x34b53a;
}, _0xdc3a06['prototype']['biteStart'] = 0x0, _0xdc3a06['prototype']['flapAmount'] = 0x3, _0xdc3a06['prototype']['flapDur'] = 1.5, _0xdc3a06['prototype']['roarStartT'] = -0x1f4, _0xdc3a06['prototype']['drawSkinCustomization'] = function () {
if (this['flag_usingAbility'] && this['isTransforming']) {
    if (this['isTransforming']) {
        _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1;
        var _0xf020e = this['getSkinImageObj']('img/snowball.png');
        if (_0xf020e) {
            var _0x11a220 = this['rad'];
            _0x4ac9cf['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0xf020e, -_0x11a220, -_0x11a220, 0x2 * _0x11a220, 0x2 * _0x11a220);
        } else this['drawOutlinedCircle']('', 'white');
        _0x4ac9cf['restore']();
    }
} else {
    this['setSkinScale']();
    if (!this['flag_usingAbility'] && !this['isCamouflage']) {
        if (this['carrotAlpha'] > 0x0) {
            var _0x5a52b3 = this['getSkinImageObj']('skins/arctic/snowman/' + this['animalSpecies'] + '/carrot_nose.png'),
                _0x520057 = this['skinScale'],
                _0x11a220 = this['skinRad'];
            if (_0x5a52b3) {
                _0x4ac9cf['save']();
                var _0x11a220 = this['rad'];
                _0x4ac9cf['globalAlpha'] = this['carrotAlpha'], _0x4ac9cf['drawImage'](_0x5a52b3, -_0x11a220 * _0x520057, -_0x11a220 * _0x520057, 0x2 * _0x11a220 * _0x520057, 0x2 * _0x11a220 * _0x520057), _0x4ac9cf['restore']();
            }
        }
        this['biteStart'] = 0x0;
        return;
    } else {
        this['biteStart'] == 0x0 && (this['biteStart'] = _0x397f50 + this['roarStartT']);
        if (this['specType'] != 0x0 && this['specType'] != undefined) {
            var _0xa57d84 = this['animalSpecies'] == 0x2 ? 'snowgirl' : 'snowman',
                _0x25af57 = 'skins/arctic/snowman/' + this['animalSpecies'] + '/' + _0xa57d84 + '_head1.png',
                _0x5a52b3 = this['getSkinImageObj'](_0x25af57),
                _0xf5d2fa = (_0x397f50 - this['biteStart']) / 0x3e8,
                _0x520057 = this['skinScale'] * 1.07,
                _0x11a220 = this['skinRad'];
            if (_0x5a52b3) {
                var _0x713b09 = 0x0,
                    _0xadb6b8 = this['flapAmount'] - (this['animalSpecies'] == 0x1 ? 0.5 : 0x0);
                _0x713b09 = !(_0x25ea67 == 0x2) ? _0x23fdc7(_0xf5d2fa, this['flapDur'], _0xadb6b8, 0x2) : this['flapAmount'], _0x4ac9cf['save']();
                var _0x11a220 = this['rad'];
                _0x4ac9cf['drawImage'](_0x5a52b3, -_0x11a220 * _0x520057, (-_0x11a220 + _0x11a220 * 0.1) * _0x520057 - _0x713b09, 0x2 * _0x11a220 * _0x520057, 0x2 * _0x11a220 * _0x520057), _0x4ac9cf['restore']();
            }
        }
    }
}
}, _0xdc3a06['prototype']['customUpdatedProperty'] = function (_0x5c2bb2, _0x12afef) {
if (_0x5c2bb2 == _0x622b15) this['isTransforming'] = _0x12afef['readUInt8']() == 0x1;
else {
    if (_0x5c2bb2 == _0x252be8) this['isCamouflage'] = _0x12afef['readUInt8']() == 0x1;
    else {
        if (_0x5c2bb2 == _0x3cbc25) this['carrotAlpha'] = _0x12afef['readUInt16']() / 0x3e8;
        else _0x5c2bb2 == _0x3d87cd && (this['lights'] = _0x12afef['readUInt8']());
    }
}
}, _0xdc3a06['prototype']['readCustomData_onNewlyVisible'] = function (_0x298967) {
_0xdc3a06['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x298967), this['isTransforming'] = _0x298967['readUInt8']() == 0x1, this['isCamouflage'] = _0x298967['readUInt8']() == 0x1, this['carrotAlpha'] = _0x298967['readUInt16']() / 0x3e8, this['lights'] = _0x298967['readUInt8']();
};

function _0xdc3a06() {
_0xdc3a06['superClass']['call'](this, _0x4acf80);
}
window['Snowman'] = _0xdc3a06, _0x3360d0['setCustomClassForGameObjType'](_0xdc3a06, _0x4acf80, _0x5d7f3d);
var _0xec194 = _0x1dd8d7;
_0x17a119['prototype'] = Object['create'](_0xec194['prototype']), _0x17a119['prototype']['constructor'] = _0x17a119, _0x17a119['superClass'] = _0xec194, _0x17a119['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
if (this['flag_underWater']) this['z'] = -0x64;
else {
    if (this['flag_eff_tossedInAir']) this['z'] = 0x4b0 + this['rad'];
    else {
        if (this['flag_flying']) {
            this['z'] = 0x186a0;
            if (this['flag_isGrabbed']) this['z'] -= this['rad'];
        } else {
            if (this['flag_canClimbHill']) this['z'] = 0x3eb;
            else this['z'] = this['rad'];
        }
    }
}
}, _0x17a119['prototype']['animalInfo'] = function () {
var _0x1b4b14 = {};
switch (this['animalSpecies']) {
case 0xcc:
    switch (this['animalSubSpecies']) {
    case 0x2:
        _0x1b4b14['aniName'] = 'Golden Devil Goat';
        break;
    }
    break;
case 0xc9:
    switch (this['animalSubSpecies']) {
    case 0x1:
        _0x1b4b14['aniName'] = 'Fruity Ice Markhor';
        break;
    }
    break;
case 0x1:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x1b4b14['aniName'] = 'Markhor';
        break;
    }
    break;
case 0x2:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x1b4b14['aniName'] = 'Big Goat';
    }
    break;
}
return _0x1b4b14['aniCol'] = '#FF9000', _0x1b4b14['skinName'] = this['getSkinName'](), _0x1b4b14['upgradeText'] = 'UPGRADED to ' + _0x1b4b14['aniName'] + '!\x0aPress \'W\' to Jump High from hills. Ram in the preys on land.', _0x1b4b14;
}, _0x17a119['prototype']['moveF'] = 0.08, _0x17a119['prototype']['jumpAnim'] = null, _0x17a119['prototype']['frame'] = 0x0, _0x17a119['prototype']['getSkinImageObj'] = function (_0x2b7bdd) {
var _0x30dcf6 = this['animalSpecies'] === 0xcc || this['animalSpecies'] === 0xc9 ? 0x1 : 0x2;
return this['getSkinImageObjForSeason'](_0x2b7bdd, _0x30dcf6);
}, _0x17a119['prototype']['getAbilityInfo'] = function (_0x571016) {
var _0x481646 = {};
return _0x481646['abilImg'] = 'abilities/Headbutt.svg', _0x481646['abilName'] = 'Head Butt', _0x481646['skinThemeID'] = this['skinThemeID'], _0x481646['mopeSeasonID'] = this['mopeSeasonID'], _0x481646;
}, _0x17a119['prototype']['getSpeciesPath'] = function (_0x433388) {
var _0x4ca83e = '/' + this['animalSubSpecies'];
return 'arctic/' + _0x433388 + '/' + this['animalSpecies'] + _0x4ca83e + '/';
}, _0x17a119['prototype']['moveF'] = 0.08, _0x17a119['prototype']['jumpAnim'] = null, _0x17a119['prototype']['frame'] = 0x0, _0x17a119['prototype']['drawUnderSkinImg'] = function () {
if (this['flag_usingAbility'] && this['specType'] > 0x2) {
    var _0x2ab382 = 0x1;
    this['jumpAnim'] == null && (this['jumpAnim'] = new _0x21dde4(this, 0.5, _0x21dde4['halfWave']), this['jumpAnim']['keepLastFrame'] = !![], this['jumpAnim']['loop'] = !![], this['jumpAnim']['onFrameEntered'] = function (_0x45e3fe) {
        this['forObj']['frame'] = _0x45e3fe;
    }, this['jumpAnim']['onStop'] = function () {});
    this['jumpAnim'] != null && this['jumpAnim']['run']();
    var _0xc9ab27 = this['rad'] - this['outlineW'],
        _0x340fca = 0x1f4 / 0x154;
    this['setSkinScale']();
    var _0x1051d5 = 'skins/' + this['getSpeciesPath']('markhor') + '/front_legs.png',
        _0x5b1231 = 'skins/' + this['getSpeciesPath']('markhor') + '/back_legs.png',
        _0x410260 = this['getSkinImageObj'](_0x1051d5),
        _0x1b01de = this['getSkinImageObj'](_0x5b1231);
    if (_0x410260 && _0x1b01de) {
        var _0x340fca = this['skinScale'] + this['skinScale'] * 0.15 * this['frame'],
            _0xc9ab27 = this['skinRad'];
        this['specType'] == 0x3 ? (_0x4ac9cf['drawImage'](_0x410260, -_0xc9ab27 * _0x340fca, -_0xc9ab27 * _0x340fca, 0x2 * _0xc9ab27 * _0x340fca, 0x2 * _0xc9ab27 * _0x340fca), _0x4ac9cf['drawImage'](_0x1b01de, -_0xc9ab27 * _0x340fca, (-_0xc9ab27 - _0xc9ab27 * this['moveF'] * this['frame']) * _0x340fca, 0x2 * _0xc9ab27 * _0x340fca, 0x2 * _0xc9ab27 * _0x340fca)) : (_0x4ac9cf['drawImage'](_0x1b01de, -_0xc9ab27 * _0x340fca, -_0xc9ab27 * _0x340fca, 0x2 * _0xc9ab27 * _0x340fca, 0x2 * _0xc9ab27 * _0x340fca), _0x4ac9cf['drawImage'](_0x410260, -_0xc9ab27 * _0x340fca, (-_0xc9ab27 + _0xc9ab27 * this['moveF'] * this['frame']) * _0x340fca, 0x2 * _0xc9ab27 * _0x340fca, 0x2 * _0xc9ab27 * _0x340fca));
    }
} else this['jumpAnim'] = null;
}, _0x17a119['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) return;
var _0x55ef51 = 0x1f4 / 0x154,
    _0x16181f = 0.1;
if (this['specType'] > 0x2) _0x16181f = 0.2 * this['frame']; {
    var _0x1b761b = this['getSkinImageObj'](this['getHead']('markhor', !![]));
    if (_0x1b761b) {
        _0x4ac9cf['save']();
        var _0x1f90d9 = this['rad'];
        _0x4ac9cf['drawImage'](_0x1b761b, -_0x1f90d9 * _0x55ef51, (-_0x1f90d9 + _0x1f90d9 * _0x16181f) * _0x55ef51, 0x2 * _0x1f90d9 * _0x55ef51, 0x2 * _0x1f90d9 * _0x55ef51), _0x4ac9cf['restore']();
    }
}
}, _0x17a119['prototype']['getHead'] = function (_0x50da50, _0x49d2a6) {
var _0xe2cb99 = 'skins/' + (_0x49d2a6 ? this['getSpeciesPath'](_0x50da50) + '/' : _0x50da50 + '/');
return _0xe2cb99 += _0x50da50 + '_head', this['specType'] == 0x2 && (_0xe2cb99 += '_charging'), _0xe2cb99 += '.png', _0xe2cb99;
}, _0x17a119['prototype']['getSkinName'] = function () {
var _0x26b409 = this['getSpeciesPath']('markhor') + '/markhor';
return _0x26b409 += this['specType'] == 0x0 ? '' : 0x1, _0x26b409;
};

function _0x17a119() {
_0x17a119['superClass']['call'](this, _0x4acf80);
}
window['Markhor'] = _0x17a119, _0x3360d0['setCustomClassForGameObjType'](_0x17a119, _0x4acf80, _0x56a5e3);
var _0xec194 = _0x1dd8d7;
_0x1ce582['prototype'] = Object['create'](_0xec194['prototype']), _0x1ce582['prototype']['constructor'] = _0x1ce582, _0x1ce582['superClass'] = _0xec194, _0x1ce582['prototype']['animalInfo'] = function () {
var _0x280373 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x280373['aniName'] = 'Reindeer';
    break;
case 0x1:
    _0x280373['aniName'] = 'Musk Deer';
    break;
case 0xc9:
    _0x280373['aniName'] = 'Sunburn Reindeer';
    break;
case 0xca:
    _0x280373['aniName'] = 'Piebald Cosmos';
    break;
case 0xcc:
    _0x280373['aniName'] = 'Spideer';
    break;
}
return _0x280373['aniDesc'] = '', _0x280373['upgradeText'] = 'UPGRADED to ' + _0x280373['aniName'] + '!\x0a Press W to dig up food! \x0a Your sharp hooves let you turn very well on ice!', _0x280373['aniCol'] = '#a68976', _0x280373['skinName'] = this['getSkinName'](), _0x280373;
}, _0x1ce582['prototype']['getAbilityInfo'] = function (_0x675331) {
var _0x5d22cd = {};
return _0x5d22cd['abilName'] = 'Dig Food!', _0x5d22cd['abilImg'] = 'abilities/Dig.svg', _0x5d22cd['skinThemeID'] = this['skinThemeID'], _0x5d22cd['mopeSeasonID'] = this['mopeSeasonID'], _0x5d22cd;
}, _0x1ce582['prototype']['getSkinName'] = function () {
return 'arctic/reindeer/' + this['animalSpecies'] + this['getSubSpecies']() + '/reindeer';
}, _0x1ce582['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x1ce582() {
_0x1ce582['superClass']['call'](this, _0x4acf80);
}
window['Reindeer'] = _0x1ce582, _0x3360d0['setCustomClassForGameObjType'](_0x1ce582, _0x4acf80, _0x4c7e27);
var _0xec194 = _0x1dd8d7;
_0x309fd7['prototype'] = Object['create'](_0xec194['prototype']), _0x309fd7['prototype']['constructor'] = _0x309fd7, _0x309fd7['superClass'] = _0xec194, _0x309fd7['prototype']['getSkinName'] = function () {
return this['getSpeciesPath']('trex') + '/trex';
}, _0x309fd7['prototype']['animalInfo'] = function () {
var _0x13fc06 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x13fc06['aniName'] = 'The T.Rex';
    break;
case 0x1:
    _0x13fc06['aniName'] = 'Golden T.Rex';
    break;
case 0x2:
    _0x13fc06['aniName'] = 'Ember T.Rex';
    break;
case 0x64:
    _0x13fc06['aniName'] = 'Mr. Dollar';
    break;
case 0xc8:
    _0x13fc06['aniName'] = 'Kaiju Rex';
    break;
case 0xca:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x13fc06['aniName'] = 'Hyporevenant Rex';
        break;
    }
    break;
case 0xcc:
    _0x13fc06['aniName'] = 'Tartarus Rex';
    break;
case 0xdc:
    _0x13fc06['aniName'] = 'Bio Mutant T-rex';
    break;
}
return _0x13fc06['skinName'] = this['getSkinName'](), _0x13fc06['upgradeText'] = 'UPGRADED to ' + _0x13fc06['aniName'] + ' The Dinosaur!\x0a This ancient dinosaur has powerful jaws that can drag prey around!!', _0x13fc06['aniCol'] = '#862A2A', _0x13fc06;
}, _0x309fd7['prototype']['getSubSpecies'] = function () {
return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
}, _0x309fd7['prototype']['getSpeciesPath'] = function (_0x2d8311) {
return 'land/' + _0x2d8311 + '/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x309fd7['prototype']['getAbilityInfo'] = function (_0x26f356) {
var _0x24b23b = {};
return _0x24b23b['abilName'] = 'Jaws Bite', _0x24b23b['abilImg'] = 'abilities/Bite.svg', _0x24b23b['skinThemeID'] = this['skinThemeID'], _0x24b23b['mopeSeasonID'] = this['mopeSeasonID'], _0x24b23b;
}, _0x309fd7['prototype']['getAniRadius'] = function (_0x5e1e20) {
if (this['flag_usingDiveAbility']) return _0x5e1e20 * 0.7;
return _0x5e1e20;
}, _0x309fd7['prototype']['basicDrawSkinImg'] = function () {
this['setSkinScale']();
var _0xd13554 = 1.5,
    _0x2d4fd6 = this['skinScale'],
    _0x1c7483 = this['getAniRadius'](this['skinRad']);
if (this['loadedSkinImg']) {
    var _0x244f59 = _0x1c7483 / 0x2;
    _0x4ac9cf['drawImage'](this['loadedSkinImg'], -_0x1c7483 - _0x244f59 + _0xd13554, -_0x1c7483 - _0x244f59 + _0xd13554, 0x2 * _0x1c7483 * _0x2d4fd6, 0x2 * _0x1c7483 * (_0x2d4fd6 * 1.2));
}
};

function _0x309fd7() {
_0x309fd7['superClass']['call'](this, _0x4acf80);
}
window['Trex'] = _0x309fd7, _0x3360d0['setCustomClassForGameObjType'](_0x309fd7, _0x4acf80, _0x2e747e);
var _0xec194 = _0x1dd8d7;
_0xa616ba['prototype'] = Object['create'](_0xec194['prototype']), _0xa616ba['prototype']['constructor'] = _0xa616ba, _0xa616ba['superClass'] = _0xec194, _0xa616ba['prototype']['getSkinName'] = function () {
var _0x182590 = this['getSubSpecies']();
switch (this['animalSpecies']) {
case 0x3:
    switch (this['animalSubSpecies']) {
    case 0x1:
    case 0x2:
    case 0x8:
    case 0x9:
        _0x182590 = this['animalSpecies'] + _0x182590;
        break;
    default:
        _0x182590 = this['animalSpecies'] + '/1';
        break;
    }
    break;
case 0xc8:
    switch (this['animalSubSpecies']) {
    case 0x0:
    case 0x1:
    case 0x2:
    case 0x3:
    case 0x4:
        _0x182590 = this['animalSpecies'] + _0x182590;
        break;
    }
    break;
case 0xca:
    _0x182590 = this['animalSpecies'] + _0x182590;
    break;
}
var _0x16fe1a = 'land/dragon/' + _0x182590 + '/dragon';
return _0x16fe1a;
}, _0xa616ba['prototype']['getSubSpecies'] = function () {
var _0x212354 = this['animalSpecies'];
return (this['animalSpecies'] == 0x3 || this['animalSpecies'] == 0xc8 || this['animalSpecies'] == 0xca) && (_0x212354 = '/' + this['animalSubSpecies']), _0x212354;
}, _0xa616ba['prototype']['animalInfo'] = function () {
var _0x498183 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x498183['aniName'] = 'Dragon!';
    break;
case 0x1:
    _0x498183['aniName'] = 'Golden Dragon!';
    break;
case 0x2:
    _0x498183['aniName'] = 'Knight Dragon!';
    break;
case 0x3:
    _0x498183['aniName'] = 'Boss Dragon!';
    break;
case 0x64:
    _0x498183['aniName'] = 'The Gargon!';
    break;
case 0xca:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x498183['aniName'] = 'Aberrant Dragon';
        break;
    case 0x1:
        _0x498183['aniName'] = 'Ghoul Dragon';
        break;
    }
    break;
case 0xcc:
    _0x498183['aniName'] = 'Magma Dragon!';
    break;
case 0xc8:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x498183['aniName'] = 'Goofy Dragon!';
        break;
    case 0x1:
        _0x498183['aniName'] = 'Desert Dragon!';
        break;
    case 0x2:
        _0x498183['aniName'] = 'Forge Dragon!';
        break;
    case 0x3:
        _0x498183['aniName'] = 'Mythical Serpent!';
        break;
    case 0x4:
        _0x498183['aniName'] = 'Firey Dragon!';
        break;
    }
    break;
case 0xc9:
    _0x498183['aniName'] = 'Squishy Dragon!';
    break;
case 0xce:
    _0x498183['aniName'] = 'AG Dragon!';
    break;
case 0xdc:
    _0x498183['aniName'] = 'Behemoth Hive Dragon';
    break;
}
return _0x498183['aniCol'] = '#FF9000', _0x498183['skinName'] = this['getSkinName'](), _0x498183['upgradeText'] = 'UPGRADED to ' + _0x498183['aniName'] + '\x0a (You\'re amazing!) \x0aFly over everything, Hold W to shoot fire!', _0x498183['aniCol'] = '#22FF8A', _0x498183;
}, _0xa616ba['prototype']['getAbilityInfo'] = function (_0x42e5fc) {
var _0xa65005 = {};
return _0xa65005['abilName'] = 'Fire', _0xa65005['abilImg'] = 'abilities/Firestorm.svg', _0xa65005['speciesType'] = this['animalSpecies'] == 0x1 ? 0x2 : 0x0, _0xa65005['skinThemeID'] = this['skinThemeID'], _0xa65005['mopeSeasonID'] = this['mopeSeasonID'], _0xa65005;
}, _0xa616ba['prototype']['diveColor1'] = '#64a034', _0xa616ba['prototype']['diveColor2'] = '#598b30', _0xa616ba['prototype']['onAnimalSpeciesSet'] = function () {
switch (this['animalSpecies']) {
case 0x1:
    this['diveColor1'] = '#dbb300', this['diveColor2'] = '#bf9d04';
    break;
case 0x2:
    this['diveColor1'] = '#79c9a8', this['diveColor2'] = '#6fad9f';
    break;
}
};

function _0xa616ba() {
_0xa616ba['superClass']['call'](this, _0x4acf80);
}
window['Dragon'] = _0xa616ba, _0x3360d0['setCustomClassForGameObjType'](_0xa616ba, _0x4acf80, _0x33edcb);
var _0xec194 = _0x1dd8d7;
_0x204daf['prototype'] = Object['create'](_0xec194['prototype']), _0x204daf['prototype']['constructor'] = _0x204daf, _0x204daf['superClass'] = _0xec194, _0x204daf['prototype']['animalInfo'] = function () {
var _0x3de75c = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x3de75c['aniName'] = 'Elephant!';
    break;
case 0x1:
    _0x3de75c['aniName'] = 'Golden Elephant!';
    break;
case 0x2:
    _0x3de75c['aniName'] = 'Albino Elephant!';
    break;
case 0xc9:
    _0x3de75c['aniName'] = 'Leiphant!';
    break;
case 0xca:
    _0x3de75c['aniName'] = 'Ice Wizard Elephant';
    break;
case 0xdc:
    _0x3de75c['aniName'] = 'Lightwave Elephant';
    break;
}
return _0x3de75c['skinName'] = 'land/elephant/' + this['animalSpecies'] + '/elephant', _0x3de75c['aniDesc'] = '', _0x3de75c['upgradeText'] = 'UPGRADED to ' + _0x3de75c['aniName'] + '\x0a Use your long trunk to attack and eat food!', _0x3de75c['aniCol'] = '#945A99', _0x3de75c;
}, _0x204daf['prototype']['getAbilityInfo'] = function (_0x1a8fee) {
var _0x4c2733 = {};
return _0x4c2733['abilImg'] = 'abilities/TrunkHit.svg', _0x4c2733['abilName'] = 'Trunk Hit', _0x4c2733['skinThemeID'] = this['skinThemeID'], _0x4c2733['mopeSeasonID'] = this['mopeSeasonID'], _0x4c2733;
}, _0x204daf['prototype']['getSkinName'] = function () {
let _0x3e236a = this['getSpeciesPath']() + '/elephant';
return _0x3e236a += this['specType'] == 0x0 ? '' : 0x1, _0x3e236a;
}, _0x204daf['prototype']['getSpeciesPath'] = function () {
return 'land/elephant/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x204daf['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x204daf['prototype']['getSkinImageObj'] = function (_0x4b9ec3) {
var _0x546589 = this['animalSpecies'] === 0x1 || this['animalSpecies'] === 0x2 || this['animalSpecies'] === 0xc9 ? 0x1 : 0x2,
    _0x1da26b = './assets/s/' + _0x546589 + '/' + _0x4b9ec3;
return this['skinThemeID'] > 0x0 && (_0x1da26b = './assets/t/' + this['skinThemeID'] + '/' + _0x4b9ec3), _0x297bc3(_0x1da26b, function (_0x5ae9c2) {
    console['log'](_0x5ae9c2['src']);
});
};

function _0x204daf() {
_0x204daf['superClass']['call'](this, _0x4acf80);
}
window['Elephant'] = _0x204daf, _0x3360d0['setCustomClassForGameObjType'](_0x204daf, _0x4acf80, _0xce16df);
var _0xec194 = _0x1dd8d7;
_0x2701f7['prototype'] = Object['create'](_0xec194['prototype']), _0x2701f7['prototype']['constructor'] = _0x2701f7, _0x2701f7['superClass'] = _0xec194, _0x2701f7['prototype']['animalInfo'] = function () {
var _0x287b04 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x287b04['aniName'] = 'Hippo!';
    break;
case 0x1:
    _0x287b04['aniName'] = 'Golden Hippo!';
    break;
case 0x2:
    _0x287b04['aniName'] = 'Pygmy Hippo!';
    break;
case 0x64:
    _0x287b04['aniName'] = 'Swampster!';
    break;
case 0xca:
    _0x287b04['aniName'] = 'Planet Hippo';
    break;
case 0xcc:
    _0x287b04['aniName'] = 'Sun Hippo!';
    break;
}
return _0x287b04['skinName'] = this['getSkinName'](), _0x287b04['upgradeText'] = 'UPGRADED to ' + _0x287b04['aniName'] + '!\x0aHippos are great swimmers, dominate the Lakes/Oceans/Mud!', _0x287b04['aniCol'] = '#945A99', _0x287b04;
}, _0x2701f7['prototype']['getAbilityInfo'] = function (_0x13a9a3) {
var _0xedba30 = {};
return _0xedba30['abilName'] = 'Loud Grown!', _0xedba30['abilImg'] = 'abilities/Howl-1.svg', _0xedba30['skinThemeID'] = this['skinThemeID'], _0xedba30['mopeSeasonID'] = this['mopeSeasonID'], _0xedba30;
}, _0x2701f7['prototype']['getSkinName'] = function () {
let _0x56fbdf = this['getSpeciesPath']() + '/hippo';
return _0x56fbdf += this['specType'] == 0x0 ? '' : 0x1, _0x56fbdf;
}, _0x2701f7['prototype']['getSpeciesPath'] = function () {
return 'land/hippo/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x2701f7['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x2701f7() {
_0x2701f7['superClass']['call'](this, _0x4acf80);
}
window['Hippo'] = _0x2701f7, _0x3360d0['setCustomClassForGameObjType'](_0x2701f7, _0x4acf80, _0x212372);
var _0xec194 = _0x1dd8d7;
_0x235527['prototype'] = Object['create'](_0xec194['prototype']), _0x235527['prototype']['constructor'] = _0x235527, _0x235527['superClass'] = _0xec194, _0x235527['prototype']['animalInfo'] = function () {
var _0x43736c = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x43736c['aniName'] = 'Giant Spider!';
    break;
case 0x1:
    _0x43736c['aniName'] = 'Golden Spider!';
    break;
case 0x2:
    _0x43736c['aniName'] = 'Goliath Spider!';
    break;
case 0xca:
    _0x43736c['aniName'] = 'Sapphire Cave Spider';
    break;
case 0xcc:
    _0x43736c['aniName'] = 'Smile Spider!';
    break;
}
return _0x43736c['skinName'] = this['getSkinName'](), _0x43736c['upgradeText'] = 'UPGRADED to ' + _0x43736c['aniName'] + '!\x0a Place web around the game to catch prey!', _0x43736c['aniCol'] = 'black', _0x43736c;
}, _0x235527['prototype']['getAbilityInfo'] = function (_0xc46f67) {
var _0x53ffcc = {};
return _0x53ffcc['abilName'] = 'Spin Web!', _0x53ffcc['abilImg'] = 'abilities/Web.svg', _0x53ffcc['skinThemeID'] = this['skinThemeID'], _0x53ffcc['mopeSeasonID'] = this['mopeSeasonID'], _0x53ffcc;
}, _0x235527['prototype']['getSkinName'] = function () {
let _0x23e17a = this['getSpeciesPath']() + '/giantspider';
return _0x23e17a;
}, _0x235527['prototype']['getSpeciesPath'] = function () {
return 'land/giantspider/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x235527['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x235527() {
_0x235527['superClass']['call'](this, _0x4acf80);
}
window['GiantSpider'] = _0x235527, _0x3360d0['setCustomClassForGameObjType'](_0x235527, _0x4acf80, _0x484a15);
var _0xec194 = _0x1dd8d7;
_0x33e4de['prototype'] = Object['create'](_0xec194['prototype']), _0x33e4de['prototype']['constructor'] = _0x33e4de, _0x33e4de['superClass'] = _0xec194, _0x33e4de['prototype']['animalInfo'] = function () {
var _0x2b0544 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x2b0544['aniName'] = 'Boa Constrictor!';
    break;
case 0x1:
    _0x2b0544['aniName'] = 'Golden Boa!';
    break;
case 0x2:
    _0x2b0544['aniName'] = 'Tree Boa!';
    break;
}
return _0x2b0544['skinName'] = this['getSkinName'](), _0x2b0544['aniDesc'] = '', _0x2b0544['upgradeText'] = 'UPGRADED to ' + _0x2b0544['aniName'] + '!\x0a Coil and suffocate other animals!', _0x2b0544['aniCol'] = 'black', _0x2b0544;
}, _0x33e4de['prototype']['getSkinName'] = function () {
let _0x2dc6f0 = this['getSpeciesPath']() + '/boaconstrictor';
return _0x2dc6f0;
}, _0x33e4de['prototype']['getSpeciesPath'] = function () {
return 'land/boaconstrictor/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x33e4de['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x33e4de['prototype']['getAbilityInfo'] = function (_0x1925f9) {
var _0x17c913 = {};
return _0x17c913['abilName'] = 'Suffocate prey', _0x17c913['abilImg'] = 'abilities/Constrict.svg', _0x17c913['skinThemeID'] = this['skinThemeID'], _0x17c913['mopeSeasonID'] = this['mopeSeasonID'], _0x17c913;
}, _0x33e4de['prototype']['getSkinName'] = function () {
var _0x341fdf = this['getSpeciesPath']('boaconstrictor') + '/boaconstrictor';
if (this['flag_usingAbility'] && this['specType'] == 0x1) _0x341fdf += '2';
else _0x341fdf += this['specType'] == 0x0 ? '' : 0x1;
return _0x341fdf;
}, _0x33e4de['prototype']['drawUnderSkinImg'] = function () {
if (this['flag_usingAbility']) return;
var _0x59ab1a = this['rad'] - this['outlineW'],
    _0x58e99c = 0x1f4 / 0x154,
    _0x3f5146 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']('boaconstrictor') + '/tongue.png'),
    _0x2d994b = (_0x397f50 - this['spawnTime']) / 0x3e8,
    _0x24819e = _0x25ea67 == 0x2 ? 0x0 : _0x23fdc7(_0x2d994b, 0.5, 0x5, 0.5),
    _0x5dc2d1 = _0x25ea67 == 0x2 ? 0x0 : 0x5;
_0x3f5146 && _0x4ac9cf['drawImage'](_0x3f5146, -_0x59ab1a * _0x58e99c, -(_0x59ab1a + _0x5dc2d1 + _0x24819e) * _0x58e99c, 0x2 * _0x59ab1a * _0x58e99c, 0x2 * _0x59ab1a * _0x58e99c);
}, _0x33e4de['prototype']['getSkinImageObj'] = function (_0x513947) {
var _0x41ca64 = this['animalSpecies'] === 0x1 || this['animalSpecies'] === 0x2 ? 0x1 : this['mopeSeasonID'];
return this['getSkinImageObjForSeason'](_0x513947, _0x41ca64);
};

function _0x33e4de() {
_0x33e4de['superClass']['call'](this, _0x4acf80);
}
window['BoaConstrictor'] = _0x33e4de, _0x3360d0['setCustomClassForGameObjType'](_0x33e4de, _0x4acf80, _0x2cb4e3);
var _0xec194 = _0x1dd8d7;
_0x6b573['prototype'] = Object['create'](_0xec194['prototype']), _0x6b573['prototype']['constructor'] = _0x6b573, _0x6b573['superClass'] = _0xec194, _0x6b573['prototype']['animalInfo'] = function () {
var _0x2e5f3a = {};
_0x2e5f3a['aniName'] = 'Gorilla!';
switch (this['animalSpecies']) {
case 0x64:
    _0x2e5f3a['aniName'] = 'Grim Reaper';
    break;
case 0xc9:
    _0x2e5f3a['aniName'] = 'Explorer Ape';
    break;
case 0xca:
    _0x2e5f3a['aniName'] = 'Kongrilla';
    break;
case 0xcc:
    _0x2e5f3a['aniName'] = 'Phantom Gorilla';
    break;
}
return _0x2e5f3a['skinName'] = this['getSkinName'](), _0x2e5f3a['upgradeText'] = 'UPGRADED to ' + _0x2e5f3a['aniName'] + '!\x0a' + _0x2e5f3a['aniName'] + 's are great swimmers, dominate the Lakes/Oceans/Mud!', _0x2e5f3a['aniCol'] = '#945A99', _0x2e5f3a;
}, _0x6b573['prototype']['getAbilityInfo'] = function (_0x513a85) {
var _0x2fc59b = {};
return _0x2fc59b['abilName'] = 'Fruit Throw!', _0x2fc59b['abilImg'] = 'abilities/Throw.svg', _0x2fc59b['skinThemeID'] = this['skinThemeID'], _0x2fc59b['mopeSeasonID'] = this['mopeSeasonID'], _0x2fc59b;
}, _0x6b573['prototype']['getSkinName'] = function () {
let _0xbc3550 = this['getSpeciesPath']() + '/gorilla';
return _0xbc3550 += this['specType'] == 0x0 ? '' : 0x1, _0xbc3550;
}, _0x6b573['prototype']['getSpeciesPath'] = function () {
return 'land/gorilla/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x6b573['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x6b573['prototype']['drawSkinCustomization'] = function () {
this['setSkinScale']();
if (this['animalSpecies'] == 0xcc) {
    var _0x133a31 = 'skins/' + this['getSpeciesPath'](),
        _0x4610e7 = this['skinScale'] * 1.07,
        _0xd7e371 = this['skinRad'],
        _0x365fbe = 0x1 + Math['trunc'](_0x397f50 / 0x78) % 0x7,
        _0x52cdb3 = this['getSkinImageObj'](_0x133a31 + '/gorilla_head.png');
    if (_0x52cdb3) {
        var _0x399160 = 0x0,
            _0x256bd7 = this['getSkinImageObj'](_0x133a31 + '/fire' + _0x365fbe + '.png');
        _0x256bd7 && (_0x4ac9cf['save'](), _0x4ac9cf['drawImage'](_0x256bd7, -_0xd7e371 * _0x4610e7, (-_0xd7e371 + _0xd7e371 * 0.05) * _0x4610e7 - _0x399160, 0x2 * _0xd7e371 * _0x4610e7, 0x2 * _0xd7e371 * _0x4610e7), _0x4ac9cf['restore']());
        _0x4ac9cf['save']();
        var _0xd7e371 = this['rad'];
        _0x4ac9cf['drawImage'](_0x52cdb3, -_0xd7e371 * _0x4610e7, (-_0xd7e371 + _0xd7e371 * 0.05) * _0x4610e7 - _0x399160, 0x2 * _0xd7e371 * _0x4610e7, 0x2 * _0xd7e371 * _0x4610e7), _0x4ac9cf['restore']();
    }
}
};

function _0x6b573() {
_0x6b573['superClass']['call'](this, _0x4acf80);
}
window['Gorilla'] = _0x6b573, _0x3360d0['setCustomClassForGameObjType'](_0x6b573, _0x4acf80, _0x103e98);
var _0xec194 = _0x1dd8d7;
_0x247115['prototype'] = Object['create'](_0xec194['prototype']), _0x247115['prototype']['constructor'] = _0x247115, _0x247115['superClass'] = _0xec194, _0x247115['prototype']['animalInfo'] = function () {
var _0x126eff = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x126eff['aniName'] = 'The Kraken!';
    break;
case 0x1:
    _0x126eff['aniName'] = 'Golden Kraken!';
    break;
case 0x2:
    _0x126eff['aniName'] = 'Chromatic Kraken!';
    break;
case 0xc9:
    _0x126eff['aniName'] = 'Squishy Kraken!';
    break;
case 0xca:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x126eff['aniName'] = 'Giant Squid';
        break;
    case 0x1:
        _0x126eff['aniName'] = 'Hydrothoth Kraken';
        break;
    }
    break;
case 0xcc:
    _0x126eff['aniName'] = 'Cthulhu Kraken!';
    break;
case 0xdc:
    _0x126eff['aniName'] = 'Dr. Brainiopod';
    break;
case 0xde:
    _0x126eff['aniName'] = 'Gingerbread Kraken';
    break;
}
return _0x126eff['aniCol'] = '#FF9000', _0x126eff['skinName'] = this['getSkinName'](), _0x126eff['upgradeText'] = 'UPGRADED to THE ' + _0x126eff['aniName'] + '!\x0a Terrorize the oceans, and be feared by all!\x0a (Release W to use whirlpool ability!)', _0x126eff['aniCol'] = '#64a034', _0x126eff;
}, _0x247115['prototype']['getSkinName'] = function () {
return this['getSpeciesPath']('kraken') + '/kraken';
}, _0x247115['prototype']['getSubSpecies'] = function () {
return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
}, _0x247115['prototype']['getSpeciesPath'] = function (_0x2f8fa6) {
return 'ocean/' + _0x2f8fa6 + '/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x247115['prototype']['getAbilityInfo'] = function (_0x4d8e92) {
var _0xc064e8 = {};
return _0xc064e8['abilName'] = 'Whirlpool', _0xc064e8['abilImg'] = 'abilities/Whirlpool.svg', _0xc064e8['skinThemeID'] = this['skinThemeID'], _0xc064e8['mopeSeasonID'] = this['mopeSeasonID'], _0xc064e8;
}, _0x247115['prototype']['diveColor1'] = '#64a034', _0x247115['prototype']['diveColor2'] = '#598b30', _0x247115['prototype']['onAnimalSpeciesSet'] = function () {
switch (this['animalSpecies']) {
case 0x1:
    this['diveColor1'] = '#dbb300', this['diveColor2'] = '#bf9d04';
    break;
case 0x2:
    this['diveColor1'] = '#79c9a8', this['diveColor2'] = '#6fad9f';
    break;
}
};

function _0x247115() {
_0x247115['superClass']['call'](this, _0x4acf80);
}
window['Kraken'] = _0x247115, _0x3360d0['setCustomClassForGameObjType'](_0x247115, _0x4acf80, _0x3a6f75);
var _0xec194 = _0x1dd8d7;
_0x533cfa['prototype'] = Object['create'](_0xec194['prototype']), _0x533cfa['prototype']['constructor'] = _0x533cfa, _0x533cfa['superClass'] = _0xec194, _0x533cfa['prototype']['animalInfo'] = function () {
var _0x555513 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x555513['aniName'] = 'Bluewhale!';
    break;
case 0x1:
    _0x555513['aniName'] = 'Golden Whale!';
    break;
case 0x2:
    _0x555513['aniName'] = 'Albino Whale!';
    break;
case 0xc9:
    _0x555513['aniName'] = 'Mermaid Whale!';
    break;
case 0xca:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x555513['aniName'] = 'Whale Boat';
        break;
    case 0x1:
        _0x555513['aniName'] = 'Ancient Island Monster';
    }
    break;
case 0xdc:
    _0x555513['aniName'] = 'Sailor Whale';
    break;
}
return _0x555513['skinName'] = this['getSkinName'](), _0x555513['aniDesc'] = '', _0x555513['upgradeText'] = 'UPGRADED to ' + _0x555513['aniName'] + '\x0a Smash with your powerful tail!', _0x555513['aniCol'] = '#945A99', _0x555513;
}, _0x533cfa['prototype']['getSkinName'] = function () {
return this['getSpeciesPath']() + '/bluewhale' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x533cfa['prototype']['getSpeciesPath'] = function () {
return 'ocean/bluewhale/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x533cfa['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
}, _0x533cfa['prototype']['getAbilityInfo'] = function (_0x264c1a) {
var _0x415658 = {};
return _0x415658['abilName'] = 'Tail Slap', _0x415658['abilImg'] = 'abilities/TailHit.svg', _0x415658['skinThemeID'] = this['skinThemeID'], _0x415658['mopeSeasonID'] = this['mopeSeasonID'], _0x415658;
};

function _0x533cfa() {
_0x533cfa['superClass']['call'](this, _0x4acf80);
}
window['Bluewhale'] = _0x533cfa, _0x3360d0['setCustomClassForGameObjType'](_0x533cfa, _0x4acf80, _0x293d5d);
var _0xec194 = _0x1dd8d7;
_0x336ac9['prototype'] = Object['create'](_0xec194['prototype']), _0x336ac9['prototype']['constructor'] = _0x336ac9, _0x336ac9['superClass'] = _0xec194, _0x336ac9['prototype']['animalInfo'] = function () {
var _0x417fe3 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x417fe3['aniName'] = 'King Crab!';
    break;
case 0x1:
    _0x417fe3['aniName'] = 'Golden Crab!';
    break;
case 0x2:
    _0x417fe3['aniName'] = 'Amethyst Crab!';
    break;
case 0xca:
    _0x417fe3['aniName'] = 'Abyssal King Crab';
    break;
case 0xcc:
    _0x417fe3['aniName'] = 'Plasma-core King Crab!';
    break;
case 0xdc:
    _0x417fe3['aniName'] = 'Star Crusher Crab';
    break;
}
return _0x417fe3['skinName'] = 'ocean/kingcrab/' + this['animalSpecies'] + '/kingcrab', _0x417fe3['aniDesc'] = '', _0x417fe3['upgradeText'] = 'UPGRADED to ' + _0x417fe3['aniName'] + '!\x0a Use your powerful arms to smack your prey!', _0x417fe3['aniCol'] = '#971f0e', _0x417fe3;
}, _0x336ac9['prototype']['getSkinImageObj'] = function (_0x162f45) {
var _0x5c1451 = this['animalSpecies'] === 0x1 || this['animalSpecies'] === 0x2 || this['animalSpecies'] === 0xcc ? 0x1 : 0x2,
    _0x10faa5 = './assets/s/' + _0x5c1451 + '/' + _0x162f45;
return this['skinThemeID'] > 0x0 && (_0x10faa5 = './assets/t/' + this['skinThemeID'] + '/' + _0x162f45), _0x297bc3(_0x10faa5, function (_0x5634cb) {
    console['log'](_0x5634cb['src']);
});
}, _0x336ac9['prototype']['getAbilityInfo'] = function (_0x18f95e) {
var _0x36107d = {};
return _0x36107d['abilName'] = 'Arm Smash', _0x36107d['abilImg'] = 'abilities/ArmSmash.svg', _0x36107d['skinThemeID'] = this['skinThemeID'], _0x36107d['mopeSeasonID'] = this['mopeSeasonID'], _0x36107d;
}, _0x336ac9['prototype']['getSkinName'] = function () {
return 'ocean/kingcrab/' + this['animalSpecies'] + '/kingcrab';
};

function _0x336ac9() {
_0x336ac9['superClass']['call'](this, _0x4acf80);
}
window['KingCrab'] = _0x336ac9, _0x3360d0['setCustomClassForGameObjType'](_0x336ac9, _0x4acf80, _0x7820e);
var _0xec194 = _0x1dd8d7;
_0x307c5d['prototype'] = Object['create'](_0xec194['prototype']), _0x307c5d['prototype']['constructor'] = _0x307c5d, _0x307c5d['superClass'] = _0xec194, _0x307c5d['prototype']['animalInfo'] = function () {
var _0x59e1b3 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x59e1b3['aniName'] = 'Killerwhale!';
    break;
case 0x1:
    _0x59e1b3['aniName'] = 'Golden Orca!';
    break;
case 0x2:
    _0x59e1b3['aniName'] = 'Albino Orca!';
    break;
case 0xc9:
    _0x59e1b3['aniName'] = 'Lifeguard Orca!';
    break;
case 0xca:
    _0x59e1b3['aniName'] = 'Sea Angel Orca';
    break;
}
return _0x59e1b3['skinName'] = this['getSkinName'](), _0x59e1b3['aniDesc'] = '', _0x59e1b3['upgradeText'] = 'UPGRADED to ' + _0x59e1b3['aniName'] + '\x0aWhales blow out water when diving! (And sometimes other loot!)', _0x59e1b3['aniCol'] = '#141414', _0x59e1b3;
}, _0x307c5d['prototype']['getAbilityInfo'] = function (_0x26239a) {
var _0x22bae7 = {};
return _0x22bae7['abilName'] = 'Cause Wave', _0x22bae7['abilImg'] = 'abilities/Wave.svg', _0x22bae7['skinThemeID'] = this['skinThemeID'], _0x22bae7['mopeSeasonID'] = this['mopeSeasonID'], _0x22bae7;
}, _0x307c5d['prototype']['getSkinName'] = function () {
let _0x26cbc5 = this['getSpeciesPath']() + '/killerwhale';
return _0x26cbc5 += this['specType'] == 0x0 ? '' : 0x1, _0x26cbc5;
}, _0x307c5d['prototype']['getSpeciesPath'] = function () {
return 'ocean/killerwhale/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x307c5d['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x307c5d() {
_0x307c5d['superClass']['call'](this, _0x4acf80);
}
window['Killerwhale'] = _0x307c5d, _0x3360d0['setCustomClassForGameObjType'](_0x307c5d, _0x4acf80, _0x1be7e6);
var _0xec194 = _0x1dd8d7;
_0x3e8f86['prototype'] = Object['create'](_0xec194['prototype']), _0x3e8f86['prototype']['constructor'] = _0x3e8f86, _0x3e8f86['superClass'] = _0xec194, _0x3e8f86['prototype']['animalInfo'] = function () {
var _0x4ecc54 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x4ecc54['aniName'] = 'Jellyfish';
    break;
case 0xc9:
    _0x4ecc54['aniName'] = 'Seafoam Jellyfish';
    break;
case 0xca:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x4ecc54['aniName'] = 'Disco Jellyfish';
        break;
    case 0x1:
        _0x4ecc54['aniName'] = 'Twisted Horror';
    }
    break;
}
return _0x4ecc54['skinName'] = this['getSkinName'](), _0x4ecc54['aniDesc'] = '', _0x4ecc54['upgradeText'] = 'UPGRADED to ' + _0x4ecc54['aniName'] + '!\x0a A slowly-turning animal that can grow quite large!', _0x4ecc54['aniCol'] = '#FDB9BA', _0x4ecc54;
}, _0x3e8f86['prototype']['getAbilityInfo'] = function (_0xc83bbe) {
var _0x53ccd9 = {};
return _0x53ccd9['abilName'] = 'Touch prey to sting!', _0x53ccd9['abilImg'] = 'abilities/Sting.svg', _0x53ccd9['isPassive'] = !![], _0x53ccd9['skinThemeID'] = this['skinThemeID'], _0x53ccd9['mopeSeasonID'] = this['mopeSeasonID'], _0x53ccd9;
}, _0x3e8f86['prototype']['getSkinName'] = function () {
let _0x4008df = this['getSpeciesPath']() + '/jellyfish';
return _0x4008df;
}, _0x3e8f86['prototype']['getSpeciesPath'] = function () {
return 'ocean/jellyfish/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x3e8f86['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
}, _0x3e8f86['prototype']['getSkinImageObj'] = function (_0x40f51a) {
var _0x134956 = this['animalSpecies'] === 0xc9 ? 0x1 : this['mopeSeasonID'];
return this['getSkinImageObjForSeason'](_0x40f51a, _0x134956);
}, _0x3e8f86['prototype']['basicDrawSkinImg'] = function () {
this['setSkinScale']();
var _0x563fad = -0x0,
    _0x5f2e72 = -0.4,
    _0x2dff86 = 0x1;
this['animalSpecies'] == 0xc9 && (_0x5f2e72 = -0.3, _0x2dff86 = 1.05);
var _0x11880a = this['skinScale'] * _0x2dff86,
    _0x459548 = this['skinRad'];
console['log'](this['animalSubSpecies'] + ' : ' + _0x11880a);
this['loadedSkinImg'] && _0x4ac9cf['drawImage'](this['loadedSkinImg'], -_0x459548 * _0x11880a + _0x459548 * _0x563fad, -_0x459548 * _0x11880a + _0x459548 * _0x5f2e72, 0x2 * _0x459548 * _0x11880a, 0x2 * _0x459548 * (_0x11880a * 1.2));
if (this['animalSpecies'] == 0xca) {
    if (!(_0x25ea67 == 0x2) && !_0x50a9ba) {
        var _0x680bc6 = Math['trunc'](_0x397f50 / 0x1f4) % 0x2;
        if (_0x680bc6 == 0x1) {
            var _0x29f6ac = this['getSkinImageObj']('skins/' + this['getSkinName']() + '_shine.png');
            _0x29f6ac && _0x4ac9cf['drawImage'](_0x29f6ac, -_0x459548 * _0x11880a + _0x459548 * _0x563fad, -_0x459548 * _0x11880a + _0x459548 * _0x5f2e72, 0x2 * _0x459548 * _0x11880a, 0x2 * _0x459548 * (_0x11880a * 1.2));
        }
    }
}
};

function _0x3e8f86() {
_0x3e8f86['superClass']['call'](this, _0x4acf80);
}
window['Jellyfish'] = _0x3e8f86, _0x3360d0['setCustomClassForGameObjType'](_0x3e8f86, _0x4acf80, _0x402b8c);
var _0xec194 = _0x1dd8d7;
_0x1ebc68['prototype'] = Object['create'](_0xec194['prototype']), _0x1ebc68['prototype']['constructor'] = _0x1ebc68, _0x1ebc68['superClass'] = _0xec194, _0x1ebc68['prototype']['animalInfo'] = function () {
var _0x4f212a = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x4f212a['aniName'] = 'Stingray!';
    break;
case 0x64:
    _0x4f212a['aniName'] = 'Phantom Ray!';
    break;
case 0xc9:
    _0x4f212a['aniName'] = 'Chocolate Ray!';
    break;
case 0xca:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x4f212a['aniName'] = 'Ether Stingray';
        break;
    case 0x1:
        _0x4f212a['aniName'] = 'Pancake Stingray';
    }
    break;
}
return _0x4f212a['skinName'] = this['getSkinName'](), _0x4f212a['upgradeText'] = 'UPGRADED to ' + _0x4f212a['aniName'] + '\x0a Use electic shock (Release W key!) to shock animals! \x0a(Takes time to recharge)', _0x4f212a['aniCol'] = '#164336', _0x4f212a;
}, _0x1ebc68['prototype']['getAbilityInfo'] = function (_0x558ab2) {
var _0x5b9040 = {};
return _0x5b9040['abilName'] = 'Shock!', _0x5b9040['abilImg'] = 'abilities/Shock.svg', _0x5b9040['skinThemeID'] = this['skinThemeID'], _0x5b9040['mopeSeasonID'] = this['mopeSeasonID'], _0x5b9040;
}, _0x1ebc68['prototype']['getSkinName'] = function () {
let _0x32912b = this['getSpeciesPath']() + '/stingray';
return _0x32912b;
}, _0x1ebc68['prototype']['getSpeciesPath'] = function () {
return 'ocean/stingray/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x1ebc68['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
}, _0x1ebc68['prototype']['drawUnderSkinImg'] = function () {
var _0x2a8b2e = 1.245,
    _0x4e3c49 = 1.2,
    _0x187bc6 = 0.8,
    _0x2f5667 = 0x1f4 / 0x154,
    _0x5f2538 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/tail.png');
if (_0x5f2538) {
    _0x4ac9cf['save']();
    var _0x3b0d7c = this['rad'] - this['outlineW'];
    _0x4ac9cf['drawImage'](_0x5f2538, -_0x3b0d7c * _0x2f5667, -_0x3b0d7c * _0x2a8b2e * _0x2f5667, 0x2 * _0x3b0d7c * _0x2f5667, 0x2 * _0x3b0d7c * _0x2f5667), _0x4ac9cf['restore']();
}
if (this['animalSpecies'] == 0x64) {
    var _0x866d9a = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x5dee02 = !(_0x25ea67 == 0x2 || _0x50a9ba) ? _0x23fdc7(_0x866d9a, 0x5, 0x1, 0x1) : this['birdNoAnimationFlyWingAngle'],
        _0x5f2538 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/tail2.png');
    if (_0x5f2538) {
        _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = Math['max'](0x0, _0x5dee02);
        var _0x3b0d7c = this['rad'] - this['outlineW'];
        _0x4ac9cf['drawImage'](_0x5f2538, -_0x3b0d7c * _0x2f5667, -_0x3b0d7c * _0x2a8b2e * _0x2f5667, 0x2 * _0x3b0d7c * _0x2f5667, 0x2 * _0x3b0d7c * _0x2f5667), _0x4ac9cf['restore']();
    }
    return;
}
var _0x5f2538 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/leftwing.png');
if (_0x5f2538) {
    _0x4ac9cf['save']();
    var _0x390e7a = 0x1,
        _0x3b0d7c = this['rad'] - this['outlineW'];
    _0x4ac9cf['drawImage'](_0x5f2538, -_0x3b0d7c * _0x4e3c49 * _0x2f5667, -_0x3b0d7c * _0x2f5667, 0x2 * _0x3b0d7c * _0x2f5667, 0x2 * _0x3b0d7c * _0x2f5667), _0x4ac9cf['restore']();
}
var _0x5f2538 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/rightwing.png');
if (_0x5f2538) {
    _0x4ac9cf['save']();
    var _0x390e7a = 0x1,
        _0x3b0d7c = this['rad'] - this['outlineW'];
    _0x4ac9cf['drawImage'](_0x5f2538, -_0x3b0d7c * _0x187bc6 * _0x2f5667, -_0x3b0d7c * _0x2f5667, 0x2 * _0x3b0d7c * _0x2f5667, 0x2 * _0x3b0d7c * _0x2f5667), _0x4ac9cf['restore']();
}
};

function _0x1ebc68() {
_0x1ebc68['superClass']['call'](this, _0x4acf80);
}
window['Stingray'] = _0x1ebc68, _0x3360d0['setCustomClassForGameObjType'](_0x1ebc68, _0x4acf80, _0xd32f27);
var _0xec194 = _0x1dd8d7;
_0xb8745b['prototype'] = Object['create'](_0xec194['prototype']), _0xb8745b['prototype']['constructor'] = _0xb8745b, _0xb8745b['superClass'] = _0xec194, _0xb8745b['prototype']['animalInfo'] = function () {
var _0x1cd631 = {};
_0x1cd631['aniName'] = 'Puffer Fish';
switch (this['animalSpecies']) {
case 0x2:
    _0x1cd631['aniName'] = 'Demon Fish';
    break;
case 0x64:
    _0x1cd631['aniName'] = 'Puffermace';
    break;
case 0xc9:
    _0x1cd631['aniName'] = 'Omniball Puffer';
    break;
case 0xca:
    _0x1cd631['aniName'] = 'Balloon Pufferfish';
    break;
}
return _0x1cd631['skinName'] = this['getSkinName'](), _0x1cd631['aniDesc'] = '', _0x1cd631['upgradeText'] = 'UPGRADED to ' + _0x1cd631['aniName'] + '!\x0a(Hold W to inflate - become spiky, and dangerous to touch!)', _0x1cd631['aniCol'] = '#94a3a9', _0x1cd631;
}, _0xb8745b['prototype']['getAbilityInfo'] = function (_0x291392) {
var _0x369d88 = {};
return _0x369d88['abilName'] = 'Puff!', _0x369d88['abilImg'] = 'abilities/Puff.svg', _0x369d88['skinThemeID'] = this['skinThemeID'], _0x369d88['mopeSeasonID'] = this['mopeSeasonID'], _0x369d88;
}, _0xb8745b['prototype']['getSkinName'] = function () {
let _0x361eb0 = this['getSpeciesPath']() + '/pufferfish';
if (this['flag_usingAbility']) _0x361eb0 += '2';
return _0x361eb0;
}, _0xb8745b['prototype']['getSpeciesPath'] = function () {
return 'ocean/pufferfish/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0xb8745b['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0xb8745b['prototype']['drawUnderSkinImg'] = function () {
var _0xf47f50 = 1.6,
    _0x5aba20 = 0x1f4 / 0x154,
    _0x46d5d5 = '';
if (this['animalSpecies'] == 0x64) {
    _0x46d5d5 = '/100';
    var _0xf61499 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/tail.png');
    if (_0xf61499) {
        _0x4ac9cf['save']();
        var _0x3319ea = this['rad'] - this['outlineW'];
        _0x4ac9cf['drawImage'](_0xf61499, -_0x3319ea * _0x5aba20, -_0x3319ea * _0xf47f50 * _0x5aba20, 0x2 * _0x3319ea * _0x5aba20, 0x2 * _0x3319ea * _0x5aba20), _0x4ac9cf['restore']();
    }
}
};

function _0xb8745b() {
_0xb8745b['superClass']['call'](this, _0x4acf80);
}
window['PufferFish'] = _0xb8745b, _0x3360d0['setCustomClassForGameObjType'](_0xb8745b, _0x4acf80, _0x2ee5ae);
var _0xec194 = _0x1dd8d7;
_0x3901fb['prototype'] = Object['create'](_0xec194['prototype']), _0x3901fb['prototype']['constructor'] = _0x3901fb, _0x3901fb['superClass'] = _0xec194, _0x3901fb['prototype']['animalInfo'] = function () {
var _0x45f9d6 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x45f9d6['aniName'] = 'Squid';
    break;
case 0xc8:
    _0x45f9d6['aniName'] = 'Cuttle Fish';
    break;
case 0xc9:
    _0x45f9d6['aniName'] = 'Seacoast Squid';
    break;
case 0xca:
    _0x45f9d6['aniName'] = 'Psychedelic Squid';
    break;
case 0xcc:
    _0x45f9d6['aniName'] = 'Void Scuttling Squid';
    break;
}
return _0x45f9d6['skinName'] = this['getSkinName'](), _0x45f9d6['aniDesc'] = '', _0x45f9d6['upgradeText'] = 'UPGRADED to ' + _0x45f9d6['aniName'] + '!\x0a ' + _0x45f9d6['aniName'] + ' can use INK when injured (press W!) \x0a+ you can hide in plankton bushes!', _0x45f9d6['aniCol'] = '#40dda4', _0x45f9d6;
}, _0x3901fb['prototype']['getSkinName'] = function () {
let _0x190a4d = this['getSpeciesPath']() + '/squid';
return _0x190a4d += this['specType'] == 0x0 ? '' : 0x1, _0x190a4d;
}, _0x3901fb['prototype']['getSpeciesPath'] = function () {
return 'ocean/squid/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x3901fb['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x3901fb['prototype']['getAbilityInfo'] = function (_0x11ae1c) {
var _0x531c9c = {};
return _0x531c9c['abilName'] = 'INK!', _0x531c9c['abilImg'] = 'abilities/Ink.svg', _0x531c9c['skinThemeID'] = this['skinThemeID'], _0x531c9c['mopeSeasonID'] = this['mopeSeasonID'], _0x531c9c;
}, _0x3901fb['prototype']['drawUnderSkinImg'] = function () {
if (this['animalSpecies'] == 0x0 || this['animalSpecies'] == 0xc9) {
    var _0x5a533a = 0x1f4 / 0x154,
        _0x1fc6f3 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/cape.png');
    if (_0x1fc6f3) {
        _0x4ac9cf['save']();
        var _0x328638 = 1.1,
            _0x303713 = this['rad'] - this['outlineW'];
        _0x4ac9cf['drawImage'](_0x1fc6f3, -_0x303713 * _0x5a533a, -_0x303713 * _0x328638 * _0x5a533a, 0x2 * _0x303713 * _0x5a533a, 0x2 * _0x303713 * _0x5a533a), _0x4ac9cf['restore']();
    }
}
};

function _0x3901fb() {
_0x3901fb['superClass']['call'](this, _0x4acf80);
}
window['Squid'] = _0x3901fb, _0x3360d0['setCustomClassForGameObjType'](_0x3901fb, _0x4acf80, _0x4e129f);
var _0xec194 = _0x1dd8d7;
_0x87ea1e['prototype'] = Object['create'](_0xec194['prototype']), _0x87ea1e['prototype']['constructor'] = _0x87ea1e, _0x87ea1e['superClass'] = _0xec194, _0x87ea1e['prototype']['updateZ'] = function () {
if (this['flag_underWater']) this['z'] = -0x97;
else this['z'] = this['rad'];
}, _0x87ea1e['prototype']['animalInfo'] = function () {
var _0x7b28b5 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x7b28b5['aniName'] = 'Shark!';
    break;
case 0x1:
    _0x7b28b5['aniName'] = 'Tiger Shark!';
    break;
case 0x2:
    _0x7b28b5['aniName'] = 'Hammarhead Shark!';
    break;
case 0xc9:
    _0x7b28b5['aniName'] = 'Surfboard Chomper!';
    break;
}
return _0x7b28b5['skinName'] = this['getSkinName'](), _0x7b28b5['upgradeText'] = 'UPGRADED to ' + _0x7b28b5['aniName'] + '\x0a A vicious predator of the oceans!', _0x7b28b5['aniCol'] = '#999fc6', _0x7b28b5;
}, _0x87ea1e['prototype']['getAbilityInfo'] = function (_0x152fab) {
var _0x1cb730 = {};
return _0x1cb730['abilName'] = 'Jaws Bite', _0x1cb730['abilImg'] = 'abilities/Bite.svg', _0x1cb730['skinThemeID'] = this['skinThemeID'], _0x1cb730['mopeSeasonID'] = this['mopeSeasonID'], _0x1cb730;
}, _0x87ea1e['prototype']['getSkinName'] = function () {
let _0x2f742c = this['getSpeciesPath']() + '/shark';
if (this['flag_usingAbility']) _0x2f742c += '2';
return _0x2f742c;
}, _0x87ea1e['prototype']['getSpeciesPath'] = function () {
return 'ocean/shark/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x87ea1e['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x87ea1e['prototype']['getSkinImageObj'] = function (_0x5d58d5) {
var _0x545484 = this['animalSpecies'] === 0x1 || this['animalSpecies'] === 0x2 || this['animalSpecies'] === 0xc9 ? 0x1 : this['mopeSeasonID'];
return this['getSkinImageObjForSeason'](_0x5d58d5, _0x545484);
}, _0x87ea1e['prototype']['drawUnderSkinImg'] = function () {
if (this['flag_underWater']) return;
var _0x441f3f = 1.33,
    _0x142a1f = 0x1,
    _0x5d771c = 0x1f4 / 0x154 * _0x142a1f,
    _0x548fd0 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/tail.png');
if (_0x548fd0) {
    _0x4ac9cf['save']();
    var _0x570acc = this['rad'] - this['outlineW'];
    _0x4ac9cf['drawImage'](_0x548fd0, -_0x570acc * _0x5d771c, -_0x570acc * _0x441f3f * _0x5d771c, 0x2 * _0x570acc * _0x5d771c, 0x2 * _0x570acc * _0x5d771c), _0x4ac9cf['restore']();
}
};

function _0x87ea1e() {
_0x87ea1e['superClass']['call'](this, _0x4acf80);
}
window['Shark'] = _0x87ea1e, _0x3360d0['setCustomClassForGameObjType'](_0x87ea1e, _0x4acf80, _0xf16f79);
var _0xec194 = _0x1dd8d7;
_0xd89659['prototype'] = Object['create'](_0xec194['prototype']), _0xd89659['prototype']['constructor'] = _0xd89659, _0xd89659['superClass'] = _0xec194, _0xd89659['prototype']['animalInfo'] = function () {
var _0x50e8ec = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x50e8ec['aniName'] = 'Turtle!';
    break;
case 0xc8:
    _0x50e8ec['aniName'] = 'Leather Back Turtle!';
    break;
case 0xc9:
    _0x50e8ec['aniName'] = 'Kiwi Turtle!';
    break;
case 0xca:
    _0x50e8ec['aniName'] = 'Molten Lava Turtle';
    break;
}
return _0x50e8ec['skinName'] = this['getSkinName'](), _0x50e8ec['aniDesc'] = '', _0x50e8ec['upgradeText'] = 'UPGRADED to ' + _0x50e8ec['aniName'] + '\x0a Lives well on land & water! (On land, Press W to go into your shell!)', _0x50e8ec['aniCol'] = '#502E1A', _0x50e8ec;
}, _0xd89659['prototype']['getAbilityInfo'] = function (_0x1badc4) {
var _0x2ed799 = {};
return _0x2ed799['abilName'] = 'Hide in Shell!', _0x2ed799['abilImg'] = 'abilities/Hide.svg', _0x2ed799['skinThemeID'] = this['skinThemeID'], _0x2ed799['mopeSeasonID'] = this['mopeSeasonID'], _0x2ed799;
}, _0xd89659['prototype']['getSkinName'] = function () {
let _0x14f8e5 = this['getSpeciesPath']() + '/turtle';
if (this['flag_usingAbility']) _0x14f8e5 += '2';
else _0x14f8e5 += this['specType'] == 0x0 ? '' : 0x1;
return _0x14f8e5;
}, _0xd89659['prototype']['getSpeciesPath'] = function () {
return 'ocean/turtle/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0xd89659['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0xd89659['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) {
    if (this['specType'] == 0x1) {
        var _0x2d2dd7 = 0x1f4 / 0x154,
            _0x42f83d = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/head.png');
        if (_0x42f83d) {
            var _0xbedd1 = 0.88;
            _0x4ac9cf['save']();
            var _0x234fdc = this['rad'] - this['outlineW'];
            _0x4ac9cf['drawImage'](_0x42f83d, -_0x234fdc * _0x2d2dd7, -_0x234fdc * _0xbedd1 * _0x2d2dd7, 0x2 * _0x234fdc * _0x2d2dd7, 0x2 * _0x234fdc * _0x2d2dd7), _0x4ac9cf['restore']();
        }
    }
}
};

function _0xd89659() {
_0xd89659['superClass']['call'](this, _0x4acf80);
}
window['Turtle'] = _0xd89659, _0x3360d0['setCustomClassForGameObjType'](_0xd89659, _0x4acf80, _0x41ea25);
var _0xec194 = _0x1dd8d7;
_0x29cd3a['prototype'] = Object['create'](_0xec194['prototype']), _0x29cd3a['prototype']['constructor'] = _0x29cd3a, _0x29cd3a['superClass'] = _0xec194, _0x29cd3a['prototype']['getAniRadius'] = function (_0x35cd40) {
if (this['flag_usingDiveAbility']) return _0x35cd40 * 0.7;
return _0x35cd40;
}, _0x29cd3a['prototype']['animalInfo'] = function () {
var _0x394948 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x394948['aniName'] = 'Swordfish!';
    break;
case 0xc9:
    _0x394948['aniName'] = 'Surfboardfish';
    break;
case 0xca:
    _0x394948['aniName'] = 'Rocket Swordfish';
    break;
case 0xcc:
    _0x394948['aniName'] = 'Chainsaw Fish';
    break;
}
return _0x394948['skinName'] = this['getSkinName'](), _0x394948['upgradeText'] = 'UPGRADED to ' + _0x394948['aniName'] + '\x0a (Press W to rush with your sharp nose!)', _0x394948['aniCol'] = '#689CD7', _0x394948;
}, _0x29cd3a['prototype']['getAbilityInfo'] = function (_0x38de82) {
var _0x4c81a8 = {};
return _0x4c81a8['abilName'] = 'Charge!', _0x4c81a8['abilImg'] = 'abilities/Charge.svg', _0x4c81a8['skinThemeID'] = this['skinThemeID'], _0x4c81a8['mopeSeasonID'] = this['mopeSeasonID'], _0x4c81a8;
}, _0x29cd3a['prototype']['getSkinName'] = function () {
let _0x5323a4 = this['getSpeciesPath']() + '/swordfish';
if (this['flag_usingAbility']) _0x5323a4 += '2';
else _0x5323a4 += this['specType'] == 0x0 ? '' : 0x1;
return _0x5323a4;
}, _0x29cd3a['prototype']['getSpeciesPath'] = function () {
return 'ocean/swordfish/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x29cd3a['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x29cd3a['prototype']['drawSkinCustomization'] = function () {}, _0x29cd3a['prototype']['basicDrawSkinImg'] = function () {
this['setSkinScale']();
var _0x19ab00 = this['skinScale'],
    _0x310923 = this['rad'],
    _0x1b54d1 = 0x0,
    _0x256078 = 1.2,
    _0x449cfb = -_0x256078 / 0x4;
this['loadedSkinImg'] && _0x4ac9cf['drawImage'](this['loadedSkinImg'], -_0x310923 * _0x19ab00 + _0x310923 * _0x1b54d1, -_0x310923 * _0x19ab00 + _0x310923 * _0x449cfb, 0x2 * _0x310923 * _0x19ab00, 0x2 * _0x310923 * (_0x19ab00 * _0x256078));
}, _0x29cd3a['prototype']['getSkinImageObj'] = function (_0x40f20d) {
var _0xc2b043 = this['animalSpecies'] === 0xc9 ? 0x1 : this['mopeSeasonID'];
return this['getSkinImageObjForSeason'](_0x40f20d, _0xc2b043);
};

function _0x29cd3a() {
_0x29cd3a['superClass']['call'](this, _0x4acf80);
}
window['Swordfish'] = _0x29cd3a, _0x3360d0['setCustomClassForGameObjType'](_0x29cd3a, _0x4acf80, _0x31cc16);
var _0xec194 = _0x1dd8d7;
_0x2e56e6['prototype'] = Object['create'](_0xec194['prototype']), _0x2e56e6['prototype']['constructor'] = _0x2e56e6, _0x2e56e6['superClass'] = _0xec194, _0x2e56e6['prototype']['animalInfo'] = function () {
var _0x3acbb1 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x3acbb1['aniName'] = 'Crab!';
    break;
case 0xc8:
    _0x3acbb1['aniName'] = 'Metallic Crab!';
    break;
case 0xc9:
    _0x3acbb1['aniName'] = 'Coconut Crab!';
    break;
case 0xcc:
    _0x3acbb1['aniName'] = 'Dark Matter Crab!';
    break;
}
return _0x3acbb1['skinName'] = this['getSkinName'](), _0x3acbb1['aniDesc'] = '', _0x3acbb1['upgradeText'] = 'UPGRADED to ' + _0x3acbb1['aniName'] + '\x0a Crabs can survive on dry land!\x0a (On land, Press W to go into your shell!)', _0x3acbb1['aniCol'] = '#bf2408', _0x3acbb1;
}, _0x2e56e6['prototype']['getAbilityInfo'] = function (_0x2f333f) {
var _0xcaec28 = {};
return _0xcaec28['abilName'] = 'Hide in Shell!', _0xcaec28['abilImg'] = 'abilities/Hide.svg', _0xcaec28['skinThemeID'] = this['skinThemeID'], _0xcaec28['mopeSeasonID'] = this['mopeSeasonID'], _0xcaec28;
}, _0x2e56e6['prototype']['getSkinName'] = function () {
let _0x10cae4 = this['getSpeciesPath']() + '/crab';
if (this['flag_usingAbility']) _0x10cae4 += '2';
else _0x10cae4 += this['specType'] == 0x0 ? '' : 0x1;
return _0x10cae4;
}, _0x2e56e6['prototype']['getSpeciesPath'] = function () {
return 'ocean/crab/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x2e56e6['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x2e56e6['prototype']['basicDrawSkinImg'] = function () {
this['setSkinScale']();
var _0x431e80 = this['skinScale'],
    _0x183136 = this['skinRad'];
_0x4ac9cf['save']();
if (this['id'] > 0x0) _0x4ac9cf['rotate'](_0x142401(0x5a));
if (this['loadedSkinImg']) {
    _0x4ac9cf['drawImage'](this['loadedSkinImg'], -_0x183136 * _0x431e80, -_0x183136 * _0x431e80, 0x2 * _0x183136 * _0x431e80, 0x2 * _0x183136 * _0x431e80);
} else _0x4ac9cf['fillStyle'] = this['skinNotLoadedColor'], _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - this['outlineW']), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill']();
_0x4ac9cf['restore']();
};

function _0x2e56e6() {
_0x2e56e6['superClass']['call'](this, _0x4acf80);
}
window['Crab'] = _0x2e56e6, _0x3360d0['setCustomClassForGameObjType'](_0x2e56e6, _0x4acf80, _0x415723);
var _0xec194 = _0x1dd8d7;
_0x3a52ab['prototype'] = Object['create'](_0xec194['prototype']), _0x3a52ab['prototype']['constructor'] = _0x3a52ab, _0x3a52ab['superClass'] = _0xec194, _0x3a52ab['prototype']['animalInfo'] = function () {
var _0x2d67bb = {};
return _0x2d67bb['aniName'] = 'Snail', _0x2d67bb['aniCol'] = '#FF9000', _0x2d67bb['skinName'] = 'ocean/snail/snail', _0x2d67bb['upgradeText'] = 'UPGRADED to ' + _0x2d67bb['aniName'] + '!\x0a Press W to hide in your shell!', _0x2d67bb;
}, _0x3a52ab['prototype']['getSkinName'] = function () {
var _0x51dcfc = 'ocean/snail/snail';
return _0x51dcfc;
}, _0x3a52ab['prototype']['dir'] = 0x1, _0x3a52ab['prototype']['snail_yOffset'] = 0.75, _0x3a52ab['prototype']['wasUsingAbility'] = ![], _0x3a52ab['prototype']['animateHead'] = ![], _0x3a52ab['prototype']['animationIn'] = null, _0x3a52ab['prototype']['animationOut'] = null, _0x3a52ab['prototype']['offset'] = 0x0, _0x3a52ab['prototype']['drawUnderSkinImg'] = function () {
if (this['flag_usingAbility'] && !this['wasUsingAbility'] && this['animationIn'] == null) this['wasUsingAbility'] = !![], this['animationIn'] = new _0x21dde4(this, 0x1, _0x21dde4['arc']), this['animationIn']['keepLastFrame'] = !![], this['animationIn']['onFrameEntered'] = function (_0x53e397) {
    if (!isNaN(_0x53e397)) {
        if (this['forObj']['offset'] < 0.35) this['forObj']['offset'] = 0.35 * _0x53e397 * 0xa;
    }
}, this['animationIn']['onStop'] = function () {
    this['forObj']['offset'] = 0.35, this['forObj']['wasUsingAbility'] = !![], this['forObj']['animationIn'] = null;
};
else !this['flag_usingAbility'] && this['wasUsingAbility'] && this['animationOut'] == null && (this['wasUsingAbility'] = !![], this['animationOut'] = new _0x21dde4(this, 0x3, _0x21dde4['halfWave']), this['animationOut']['keepLastFrame'] = !![], this['animationOut']['onFrameEntered'] = function (_0x10b768) {
    !isNaN(_0x10b768) && (this['forObj']['offset'] = 0.35 * (0x1 - _0x10b768));
}, this['animationOut']['onStop'] = function () {
    this['forObj']['offset'] = 0x0, this['forObj']['wasUsingAbility'] = ![], this['forObj']['animationOut'] = null;
});
this['animationIn'] && this['animationIn']['run']();
this['animationOut'] && this['animationOut']['run']();
if (this['animationIn'] == null && this['animationOut'] == null && !this['wasUsingAbility']) this['offset'] = 0x0;
var _0x7ce22f = 0.75 + this['offset'],
    _0x4e3f0d = 0x1f4 / 0x154,
    _0x4d5693 = this['getSkinImageObj']('skins/ocean/snail/snail_head.png');
if (_0x4d5693) {
    _0x4ac9cf['save']();
    var _0x5a1224 = this['rad'] - this['outlineW'];
    _0x4ac9cf['drawImage'](_0x4d5693, -_0x5a1224 * _0x4e3f0d, -_0x5a1224 * _0x7ce22f * _0x4e3f0d, 0x2 * _0x5a1224 * _0x4e3f0d, 0x2 * _0x5a1224 * _0x4e3f0d), _0x4ac9cf['restore']();
}
};

function _0x3a52ab() {
_0x3a52ab['superClass']['call'](this, _0x4acf80);
}
window['Snail'] = _0x3a52ab, _0x3360d0['setCustomClassForGameObjType'](_0x3a52ab, _0x4acf80, _0x3aa9b0);
var _0xec194 = _0x1dd8d7;
_0x5253f3['prototype'] = Object['create'](_0xec194['prototype']), _0x5253f3['prototype']['constructor'] = _0x5253f3, _0x5253f3['superClass'] = _0xec194, _0x5253f3['prototype']['updateZ'] = function () {
this['z'] = 0x186a0;
}, _0x5253f3['prototype']['canUseTailslap'] = ![], _0x5253f3['prototype']['tailState'] = 0x0, _0x5253f3['prototype']['lava'] = 0x64, _0x5253f3['prototype']['getSkinName'] = function () {
var _0x1375f4 = _0x50a9ba || _0x25ea67 == 0x2 ? 'kingdragon' : 'kingdragon_body';
return 'volcano/kingdragon/' + this['animalSpecies'] + '/' + _0x1375f4;
}, _0x5253f3['prototype']['customUpdatedProperty'] = function (_0x2e5e16, _0x2f33f6) {
if (_0x2e5e16 == _0x57cc2c) this['canUseTailslap'] = _0x2f33f6['readUInt8']() == 0x1;
else _0x2e5e16 == _0x3c0528 && (this['tailState'] = _0x2f33f6['readUInt16']() / 0x64);
}, _0x5253f3['prototype']['leftWingAnim'] = null, _0x5253f3['prototype']['flapAngleDiff'] = 0x3, _0x5253f3['prototype']['flapAngle'] = 0x3, _0x5253f3['prototype']['flapF'] = 0.1, _0x5253f3['prototype']['flapDur'] = 0x2, _0x5253f3['prototype']['sF'] = 0.02, _0x5253f3['prototype']['drawWings'] = function () {
if (_0x25ea67 == 0x2 || _0x50a9ba) return;
this['leftWingAnim'] == null && (this['leftWingAnim'] = new _0x21dde4(this, this['flapDur'], _0x21dde4['wave']), this['leftWingAnim']['keepLastFrame'] = !![], this['leftWingAnim']['loop'] = !![], this['leftWingAnim']['onFrameEntered'] = function (_0x10850f) {
    this['forObj']['frame1'] = _0x10850f;
});
this['leftWingAnim'] != null && this['leftWingAnim']['run']();
var _0x5a9288 = this['rad'] - this['outlineW'],
    _0x17c8b1 = this['frame1'] * this['sF'] * _0x5a9288,
    _0x32be6f = -(-this['flapF'] + this['frame1']),
    _0x518cb9 = _0x32be6f * _0x142401(this['flapAngle']),
    _0x4f1df9 = 0x1f4 / 0x154,
    _0x3aede9 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/left_wing.png'),
    _0x141acc = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/right_wing.png');
if (_0x3aede9 && _0x141acc) {
    _0x4ac9cf['save'](), _0x4ac9cf['rotate'](_0x142401(this['flapAngleDiff']) + _0x518cb9), _0x4ac9cf['drawImage'](_0x3aede9, -_0x5a9288 * _0x4f1df9, -_0x5a9288 * _0x4f1df9 + _0x17c8b1, 0x2 * _0x5a9288 * _0x4f1df9, 0x2 * _0x5a9288 * _0x4f1df9 + _0x17c8b1 * 1.5), _0x4ac9cf['restore'](), _0x4ac9cf['save'](), _0x4ac9cf['rotate'](-(_0x142401(this['flapAngleDiff']) + _0x518cb9)), _0x4ac9cf['drawImage'](_0x141acc, -_0x5a9288 * _0x4f1df9, -_0x5a9288 * _0x4f1df9 + _0x17c8b1, 0x2 * _0x5a9288 * _0x4f1df9, 0x2 * _0x5a9288 * _0x4f1df9 + _0x17c8b1 * 1.5), _0x4ac9cf['restore']();
    if (this['animalSpecies'] == 0x4) {
        let _0x4c5e0a = _0x2dd807('kd', this['spawnTime']);
        _0x4c5e0a !== undefined && _0x4c5e0a != null && (this['theFrame'] = _0x4c5e0a);
        let _0xa187e0 = !(_0x25ea67 == 0x2 || _0x50a9ba) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'];
        _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = Math['max'](0x0, _0xa187e0);
        var _0x2c90b3 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/left_wing_tips.png'),
            _0x9e31b1 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/right_wing_tips.png');
        _0x2c90b3 && _0x9e31b1 && (_0x4ac9cf['save'](), _0x4ac9cf['rotate'](_0x142401(this['flapAngleDiff']) + _0x518cb9), _0x4ac9cf['drawImage'](_0x2c90b3, -_0x5a9288 * _0x4f1df9, -_0x5a9288 * _0x4f1df9 + _0x17c8b1, 0x2 * _0x5a9288 * _0x4f1df9, 0x2 * _0x5a9288 * _0x4f1df9 + _0x17c8b1 * 1.5), _0x4ac9cf['restore'](), _0x4ac9cf['save'](), _0x4ac9cf['rotate'](-(_0x142401(this['flapAngleDiff']) + _0x518cb9)), _0x4ac9cf['drawImage'](_0x9e31b1, -_0x5a9288 * _0x4f1df9, -_0x5a9288 * _0x4f1df9 + _0x17c8b1, 0x2 * _0x5a9288 * _0x4f1df9, 0x2 * _0x5a9288 * _0x4f1df9 + _0x17c8b1 * 1.5), _0x4ac9cf['restore']()), _0x4ac9cf['restore']();
    }
}
var _0x218728 = this['lava'],
    _0x59cf25 = 0x32;
if (_0x218728 < _0x59cf25) {
    var _0x5bf2f0 = _0x218728 / _0x59cf25,
        _0x2a622c = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/left_wing1.png'),
        _0x6e6ebf = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/right_wing2.png');
    _0x2a622c && _0x6e6ebf && (_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1 - _0x5bf2f0, _0x4ac9cf['save'](), _0x4ac9cf['rotate'](_0x142401(this['flapAngleDiff']) + _0x518cb9), _0x4ac9cf['drawImage'](_0x2a622c, -_0x5a9288 * _0x4f1df9, -_0x5a9288 * _0x4f1df9 + _0x17c8b1, 0x2 * _0x5a9288 * _0x4f1df9, 0x2 * _0x5a9288 * _0x4f1df9 + _0x17c8b1 * 1.5), _0x4ac9cf['restore'](), _0x4ac9cf['save'](), _0x4ac9cf['rotate'](-(_0x142401(this['flapAngleDiff']) + _0x518cb9)), _0x4ac9cf['drawImage'](_0x6e6ebf, -_0x5a9288 * _0x4f1df9, -_0x5a9288 * _0x4f1df9 + _0x17c8b1, 0x2 * _0x5a9288 * _0x4f1df9, 0x2 * _0x5a9288 * _0x4f1df9 + _0x17c8b1 * 1.5), _0x4ac9cf['restore'](), _0x4ac9cf['restore']());
}
}, _0x5253f3['prototype']['drawSkinCustomization'] = function () {
if (this['flag_underWater']) return;
if (_0x25ea67 == 0x2 || _0x50a9ba) return;
var _0x369cb2 = 0x1f4 / 0x154;
let _0x15491a = _0x2dd807('kd', this['spawnTime']);
_0x15491a !== undefined && _0x15491a != null && (this['theFrame'] = _0x15491a);
let _0x4948a4 = !(_0x25ea67 == 0x2 || _0x50a9ba) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'];
var _0x5e5546 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/nostrils.png');
if (_0x5e5546) {
    _0x4ac9cf['save']();
    var _0x2f119b = this['lava'],
        _0x2f5e2d = 0x64,
        _0x243d4f = _0x2f119b / _0x2f5e2d;
    _0x4ac9cf['globalAlpha'] = Math['max'](0x0, _0x4948a4) * _0x243d4f;
    var _0x2f4db1 = this['rad'] - this['outlineW'];
    _0x4ac9cf['drawImage'](_0x5e5546, -_0x2f4db1 * _0x369cb2, -_0x2f4db1 * _0x369cb2, 0x2 * _0x2f4db1 * _0x369cb2, 0x2 * _0x2f4db1 * _0x369cb2), _0x4ac9cf['restore']();
}
if (!this['canUseTailslap']) {
    var _0x10c320 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/bone1.png');
    if (_0x10c320) {
        _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1;
        var _0x2f4db1 = this['rad'] - this['outlineW'];
        _0x4ac9cf['drawImage'](_0x10c320, -_0x2f4db1 * _0x369cb2, -_0x2f4db1 * _0x369cb2, 0x2 * _0x2f4db1 * _0x369cb2, 0x2 * _0x2f4db1 * _0x369cb2), _0x4ac9cf['restore']();
    }
    var _0x5b0ceb = 0x0;
    if (this['tailState'] < 0xb && this['tailState'] > 0x5) {
        var _0x5cdc31 = this['tailState'] - 0x5;
        _0x5b0ceb = _0x5cdc31 / 0x6;
    } else this['tailState'] <= 0x3 && (_0x5b0ceb = this['tailState'] / 0x3);
    var _0x15a03e = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/bone3.png');
    if (this['tailState'] < 0xb) {
        if (_0x15a03e) {
            _0x4ac9cf['save']();
            if (this['tailState'] > 0x5) _0x4ac9cf['globalAlpha'] = 0x1 - _0x5b0ceb;
            else _0x4ac9cf['globalAlpha'] = 0x1;
            var _0x2f4db1 = this['rad'] - this['outlineW'];
            _0x4ac9cf['drawImage'](_0x15a03e, -_0x2f4db1 * _0x369cb2, -_0x2f4db1 * _0x369cb2, 0x2 * _0x2f4db1 * _0x369cb2, 0x2 * _0x2f4db1 * _0x369cb2), _0x4ac9cf['restore']();
        }
    }
    var _0x8475a8 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/bone2.png');
    if (this['tailState'] < 0x3) {
        if (_0x8475a8) {
            _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1 - _0x5b0ceb;
            var _0x2f4db1 = this['rad'] - this['outlineW'];
            _0x4ac9cf['drawImage'](_0x8475a8, -_0x2f4db1 * _0x369cb2, -_0x2f4db1 * _0x369cb2, 0x2 * _0x2f4db1 * _0x369cb2, 0x2 * _0x2f4db1 * _0x369cb2), _0x4ac9cf['restore']();
        }
    }
} else {
    var _0x8475a8 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/bone2.png');
    if (_0x8475a8) {
        _0x4ac9cf['save']();
        var _0x2fdf38 = Math['max'](0.3, _0x4948a4);
        _0x4ac9cf['globalAlpha'] = _0x2fdf38;
        var _0x2f4db1 = this['rad'] - this['outlineW'];
        _0x4ac9cf['drawImage'](_0x8475a8, -_0x2f4db1 * _0x369cb2, -_0x2f4db1 * _0x369cb2, 0x2 * _0x2f4db1 * _0x369cb2, 0x2 * _0x2f4db1 * _0x369cb2), _0x4ac9cf['restore']();
    }
}
this['drawWings']();
}, _0x5253f3['prototype']['drawLowWaterDrop'] = function () {
if (this['flag_underWater']) return;
if (this['flag_lowWat']) {
    var _0x5135da = 1.2,
        _0x2dbc70 = 0.2,
        _0x47c4b1 = 0.8,
        _0x4f5e0d = 0.5 * (_0x47c4b1 - _0x2dbc70),
        _0x4eb65b = _0x2dbc70 + _0x4f5e0d + _0x4f5e0d * Math['sin'](0x2 * Math['PI'] / _0x5135da * (_0x397f50 / 0x3e8));
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = _0x4eb65b, _0x4ac9cf['fillStyle'] = _0x926611, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, this['rad'] + 0x5, 0x5, 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['restore']();
}
}, _0x5253f3['prototype']['animalInfo'] = function () {
var _0x1d3576 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x1d3576['aniName'] = 'King Dragon';
    break;
case 0x1:
    _0x1d3576['aniName'] = 'Golden King Dragon';
    break;
case 0x2:
    _0x1d3576['aniName'] = 'King Ripper';
    break;
case 0x3:
    _0x1d3576['aniName'] = 'King Stan';
    break;
case 0x4:
    _0x1d3576['aniName'] = 'King Shah';
    break;
case 0x5:
    _0x1d3576['aniName'] = 'Queen Scarlet';
    break;
case 0x6:
    _0x1d3576['aniName'] = 'Queen Celeste';
    break;
case 0xc8:
    _0x1d3576['aniName'] = 'Queen Flame';
    break;
case 0xca:
    _0x1d3576['aniName'] = 'King Graveyard';
    break;
}
return _0x1d3576['aniCol'] = '#FF9000', _0x1d3576['skinName'] = this['getSkinName'](), _0x1d3576['upgradeText'] = 'UPGRADED to ' + _0x1d3576['aniName'], _0x1d3576['upgradeText'] += '!\x0aYou got firestream that burns your victim alive! Watch your tail and slap them hard.', _0x1d3576['aniCol'] = 'black', _0x1d3576;
}, _0x5253f3['prototype']['getAbilityInfo'] = function (_0x3e96a5) {
var _0x2da126 = {};
_0x2da126['abilName'] = 'Firestream\x0a& Tail slap';
var _0x141d1e = 0x0;
switch (this['animalSpecies']) {
case 0x0:
    _0x141d1e = 0x1;
    break;
case 0x1:
    _0x141d1e = 0x2;
    break;
case 0x2:
    _0x141d1e = 0x4;
    break;
case 0x3:
    _0x141d1e = 0x5;
    break;
case 0x4:
    _0x141d1e = 0x6;
    break;
case 0x5:
    _0x141d1e = 0x9;
    break;
case 0x6:
    _0x141d1e = 0x8;
    break;
}
return _0x2da126['speciesType'] = _0x141d1e, _0x2da126['abilImg'] = 'abilities/Fireball.svg', _0x2da126['skinThemeID'] = this['skinThemeID'], _0x2da126['mopeSeasonID'] = this['mopeSeasonID'], _0x2da126;
};

function _0x5253f3() {
this['lava'] = 0x64, _0x5253f3['superClass']['call'](this, _0x4acf80);
}
window['KingDragon'] = _0x5253f3, _0x3360d0['setCustomClassForGameObjType'](_0x5253f3, _0x4acf80, _0x1e8cf7);
var _0xec194 = _0x5adfe2;
_0x1c7529['prototype'] = Object['create'](_0xec194['prototype']), _0x1c7529['prototype']['constructor'] = _0x1c7529, _0x1c7529['superClass'] = _0xec194, _0x1c7529['prototype']['updateZ'] = function () {
this['z'] = -0x8c;
}, _0x1c7529['prototype']['shiverF'] = 0.015, _0x1c7529['prototype']['drawTranslate'] = function () {
_0x4ac9cf['translate'](this['x'], this['y']), _0x4ac9cf['save']();
if (this['eruption'] >= this['shakeStart'] && this['eruption'] <= this['shakeEnd'] + 0x1) {
    if (this['eruption'] >= this['shakeStart'] + 0x2) this['shiverF'] = 0.025;
    else this['shiverF'] = 0.015;
    var _0x43e3c7 = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x163cea = 0.2,
        _0x24dc0a = this['rad'] * this['shiverF'];
    this['shakeOffsetX'] = _0x24dc0a * Math['sin'](0x2 * Math['PI'] / _0x163cea * _0x43e3c7);
    var _0x163cea = 0.3,
        _0x24dc0a = this['rad'] * this['shiverF'];
    this['shakeOffsetY'] = _0x24dc0a * Math['sin'](0x2 * Math['PI'] / _0x163cea * _0x43e3c7), _0x4ac9cf['translate'](-this['shakeOffsetX'], -this['shakeOffsetY']);
}
}, _0x1c7529['prototype']['drawHealthBar'] = function () {
_0x4ac9cf['restore']();
}, _0x1c7529['prototype']['customDraw2'] = function (_0x5b1a04) {
_0x4ac9cf['save']();
var _0xd24f34 = '' + this['oType'];
(this['curBiome'] == _0x4f2b40 || this['curBiome'] == _0x1c28a3) && (_0xd24f34 = '' + this['oType'] + '_' + this['curBiome']);
var _0x4ead0b = 'gameobj/' + this['oType'] + '/' + _0xd24f34 + '.png',
    _0x21cd1e = this['getSkinImageObj'](_0x4ead0b);
if (_0x21cd1e) {
    var _0x528251 = this['rad'];
    _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x21cd1e, -_0x528251, -_0x528251, 0x2 * _0x528251, 0x2 * _0x528251);
}
_0x4ac9cf['restore']();
var _0x26f6ba = 0x0;
switch (Math['round'](this['eruption'])) {
case 0x0:
case 0x1:
    _0x26f6ba = 0x0;
    break;
case 0x2:
    _0x26f6ba = 0x1;
    break;
case 0x3:
    _0x26f6ba = 0x2;
    break;
case 0x4:
case 0x5:
case 0x6:
case 0x7:
    _0x26f6ba = 0x3;
    break;
case 0x8:
    _0x26f6ba = 0x2;
    break;
case 0x9:
    _0x26f6ba = 0x1;
    break;
case 0xa:
default:
    _0x26f6ba = 0x0;
    break;
}
if (_0x26f6ba < 0x3) {
    _0x4ac9cf['save']();
    var _0xd24f34 = _0x26f6ba,
        _0x4ead0b = 'gameobj/' + this['oType'] + '/' + _0xd24f34 + '.png',
        _0x21cd1e = this['getSkinImageObj'](_0x4ead0b);
    if (_0x21cd1e) {
        var _0x528251 = this['rad'];
        _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x21cd1e, -_0x528251, -_0x528251, 0x2 * _0x528251, 0x2 * _0x528251);
    }
    _0x4ac9cf['restore']();
}
}, _0x1c7529['prototype']['customDraw'] = function (_0x458be3) {
this['customDraw2'](_0x458be3);
}, _0x1c7529['prototype']['readCustomData_onNewlyVisible'] = function (_0x3a9e09) {
_0x1c7529['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x3a9e09), this['maxLvl'] = _0x3a9e09['readUInt8']() / 0xa, this['shakeStart'] = _0x3a9e09['readUInt8']() / 0xa, this['shakeEnd'] = _0x3a9e09['readUInt8']() / 0xa, this['spitLevelMin'] = this['maxLvl'] * 0.2, this['spitLevelMax'] = this['maxLvl'] * 0.8;
}, _0x1c7529['prototype']['readUpdatedProperty'] = function (_0x1431f1, _0x3ec5f8) {
_0x1431f1 == _0x3b852 && (this['eruption'] = _0x3ec5f8['readUInt16']());
};

function _0x1c7529() {
_0x1c7529['superClass']['call'](this, _0x8dc420);
}
window['Volcano'] = _0x1c7529, _0x3360d0['setCustomClassForGameObjType'](_0x1c7529, _0x8dc420);
var _0x13295b = _0x531567,
_0xec194 = _0x5adfe2;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194, _0x531567['prototype']['customDraw'] = function (_0x288bea) {
_0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['angle'] + _0x142401(0xb4)), _0x4ac9cf['globalAlpha'] = 0x1;
var _0x37ad5d = this['getSkinImageObj']('img/raindrop.png');
if (_0x37ad5d) {
    var _0x3ff940 = this['rad'] * 0x2;
    _0x4ac9cf['drawImage'](_0x37ad5d, -_0x3ff940, -_0x3ff940, 0x2 * _0x3ff940, 0x2 * _0x3ff940);
}
_0x4ac9cf['restore']();
}, _0x531567['prototype']['updateZ'] = function () {
this['z'] = 0x2710 + this['rad'];
};

function _0x531567() {
_0x531567['superClass']['call'](this), this['spawnTime'] = _0x397f50;
}
window['RainDrop'] = _0x531567, _0x3360d0['setCustomClassForGameObjType'](_0x531567, _0x1e56cf);
var _0xec194 = _0x5adfe2;
_0xf6d640['prototype'] = Object['create'](_0xec194['prototype']), _0xf6d640['prototype']['constructor'] = _0xf6d640, _0xf6d640['superClass'] = _0xec194, _0xf6d640['prototype']['updateZ'] = function () {
this['z'] = 0x3ed;
}, _0xf6d640['prototype']['customDraw'] = function (_0x3db437) {
if (!(_0x25ea67 == 0x2)) {
    var _0x5eff8c = 0x1,
        _0x12df83 = 0.15,
        _0x123717 = 0.8,
        _0x38719b = 0.5 * (_0x123717 - _0x12df83),
        _0x54355e = _0x12df83 + _0x38719b + _0x38719b * Math['sin'](0x2 * Math['PI'] / _0x5eff8c * (_0x397f50 / 0x3e8));
    _0x4ac9cf['save'](); {
        _0x4ac9cf['globalAlpha'] *= _0x54355e;
    }
    _0x4ac9cf['restore']();
    var _0x5eff8c = 0x1,
        _0x12df83 = 0.85,
        _0x123717 = 0x1,
        _0x38719b = 0.5 * (_0x123717 - _0x12df83),
        _0x419207 = _0x12df83 + _0x38719b + _0x38719b * Math['sin'](0x2 * Math['PI'] / _0x5eff8c * (_0x397f50 / 0x3e8)),
        _0x39d1d8 = Math['trunc'](_0x397f50 / 0x78) % 0x5,
        _0x2e5504 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + _0x39d1d8 + '.png');
    if (_0x2e5504) {
        var _0x840785 = 0x0,
            _0x7dfbd1 = this['rad'] * 0.4,
            _0x50ebf9 = this['rad'] * 0x2 * (0x2 + _0x419207 * 0x2) / 0x3,
            _0x67a095 = this['rad'] * 3.5 * _0x419207,
            _0x3b287 = 0.5,
            _0x488292 = 0.95;
        _0x4ac9cf['save'](); {
            _0x4ac9cf['globalAlpha'] *= this['onFireEffA'] * _0x419207, _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x2e5504, _0x840785 + _0x50ebf9 * -_0x3b287, _0x7dfbd1 + _0x67a095 * -_0x488292, _0x50ebf9, _0x67a095);
        }
        _0x4ac9cf['restore']();
    } else {}
} else {
    var _0x2e5504 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/0.png');
    if (_0x2e5504) {
        var _0x5eff8c = 0x1,
            _0x12df83 = 0.85,
            _0x123717 = 0x1,
            _0x38719b = 0.5 * (_0x123717 - _0x12df83),
            _0x419207 = _0x12df83 + _0x38719b + _0x38719b * Math['sin'](0x2 * Math['PI'] / _0x5eff8c * (_0x397f50 / 0x3e8)),
            _0x840785 = 0x0,
            _0x7dfbd1 = this['rad'] * 0.4,
            _0x50ebf9 = this['rad'] * 0x2 * (0x2 + _0x419207 * 0x2) / 0x3,
            _0x67a095 = this['rad'] * 3.5 * _0x419207,
            _0x3b287 = 0.5,
            _0x488292 = 0.95;
        _0x4ac9cf['save'](); {
            _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x2e5504, _0x840785 + _0x50ebf9 * -_0x3b287, _0x7dfbd1 + _0x67a095 * -_0x488292, _0x50ebf9, _0x67a095);
        }
        _0x4ac9cf['restore']();
    }
}
};

function _0xf6d640() {
_0xf6d640['superClass']['call'](this, _0xbf5ff7);
}
window['Iceball'] = _0xf6d640, _0x3360d0['setCustomClassForGameObjType'](_0xf6d640, _0xbf5ff7);
var _0xec194 = _0x1dd8d7;
_0x4a2ecb['prototype'] = Object['create'](_0xec194['prototype']), _0x4a2ecb['prototype']['constructor'] = _0x4a2ecb, _0x4a2ecb['superClass'] = _0xec194, _0x4a2ecb['prototype']['animalInfo'] = function () {
var _0x2d9797 = {};
switch (this['animalSpecies']) {
case 0x1:
    _0x2d9797['aniName'] = 'The BigFoot';
    break;
}
return _0x2d9797['skinName'] = 'land/bigfoot/' + this['animalSpecies'] + '/bigfoot', _0x2d9797['aniDesc'] = '', _0x2d9797['upgradeText'] = 'UPGRADED to ' + _0x2d9797['aniName'] + '! So it really exists... \x0a Right click/W to throw Spears. \x0aHold to make a fire (every 30s)', _0x2d9797['aniCol'] = '#839eb5', _0x2d9797;
}, _0x4a2ecb['prototype']['getAbilityInfo'] = function (_0x3d935c) {
var _0xd82588 = {};
return _0xd82588['abilName'] = 'Throw Spear\x0a (Hold for fire!)', _0xd82588['abilImg'] = 'abilities/ThrowSpear.svg', _0xd82588['skinThemeID'] = this['skinThemeID'], _0xd82588['mopeSeasonID'] = this['mopeSeasonID'], _0xd82588;
}, _0x4a2ecb['prototype']['getSkinName'] = function () {
var _0x1ddb20 = '';
_0x1ddb20 = 'land/bigfoot/' + this['animalSpecies'] + '/';
if (this['flag_underWater'] || this['flag_isInArena']) _0x1ddb20 += 'thebigfoot';
else _0x1ddb20 += 'bigfoot';
return _0x1ddb20;
}, _0x4a2ecb['prototype']['drawUnderSkinTail'] = function (_0x113c4e) {
if (!this['isCamouflage']) _0x4a2ecb['superClass']['prototype']['drawUnderSkinTail']['call'](this, _0x113c4e);
}, _0x4a2ecb['prototype']['drawHealthBar'] = function () {
if (!this['isCamouflage']) _0x4a2ecb['superClass']['prototype']['drawHealthBar']['call'](this);
}, _0x4a2ecb['prototype']['isTransforming'] = ![], _0x4a2ecb['prototype']['isCamouflage'] = ![], _0x4a2ecb['prototype']['carrotAlpha'] = 0x0, _0x4a2ecb['prototype']['getIdealOpacity'] = function () {
var _0x2a570b = this['flag_underWater'] || this['flag_usingAbility'] && this['isTransforming'] || this['isCamouflage'] ? 0x0 : 0x1;
return _0x2a570b;
}, _0x4a2ecb['prototype']['biteStart'] = 0x0, _0x4a2ecb['prototype']['flapAmount'] = 0x3, _0x4a2ecb['prototype']['flapDur'] = 1.5, _0x4a2ecb['prototype']['roarStartT'] = -0x1f4, _0x4a2ecb['prototype']['spearThrow'] = function () {
_0x4ac9cf['save']();
var _0x17bff7 = this['getSkinImageObj']('skins/land/bigfoot/' + this['animalSpecies'] + '/arm21.png');
if (_0x17bff7) {
    var _0x2678fa = Math['min'](0x1, (_0x397f50 - this['biteStart']) / 0xc8),
        _0x5b6b5c = _0x1ce2eb((_0x397f50 - this['biteStart']) / 0x12c, 0x0, 0x1),
        _0x57f4e5 = -_0x5b6b5c * _0x40941f;
    _0x4ac9cf['rotate'](this['angle'] + _0x57f4e5);
    var _0x31bba9 = -this['rad'] * 1.75,
        _0xbd8e67 = this['rad'] / 0x2,
        _0x20ab51 = this['rad'],
        _0x2d3715 = _0x31bba9 * 0x2,
        _0x59e497 = _0x31bba9 * 0x2 * _0x2678fa,
        _0x3e8dfb = 0.3,
        _0x50194b = 0.8;
    _0x4ac9cf['drawImage'](_0x17bff7, _0xbd8e67 + _0x2d3715 * -_0x3e8dfb, _0x20ab51 + _0x59e497 * -_0x50194b + _0x31bba9, _0x2d3715, _0x59e497);
}
_0x4ac9cf['restore']();
}, _0x4a2ecb['prototype']['showSpear'] = ![], _0x4a2ecb['prototype']['showHand'] = !![], _0x4a2ecb['prototype']['drawSkinCustomization'] = function () {
if (this['flag_underWater'] || this['flag_isInArena']) return;
this['setSkinScale']();
!this['flag_usingAbility'] && (this['biteStart'] = 0x0);
if (this['showSpear']) this['spearHandAnimation'](0x0);
else {
    if (this['showHand'] || this['id'] == 0x0) this['leftHandAnimation'](0x0);
}
this['rightHandAnimation'](0x0), this['bigfootHead'](0x0);
if (!this['flag_usingAbility'] && !this['flag_inHidingHole']) this['oogaBoogaAnimation'](0x0);
}, _0x4a2ecb['prototype']['oogaBoogaNextT'] = +new Date() + 0x3a98, _0x4a2ecb['prototype']['oogaBoogaFrame'] = 0x0, _0x4a2ecb['prototype']['oogaBoogaFrameT'] = 0x0, _0x4a2ecb['prototype']['oogaBoogaAnimation'] = function (_0x138f52) {
if (_0x397f50 > this['oogaBoogaNextT']) {
    if (_0x397f50 > this['oogaBoogaFrameT']) {
        this['oogaBoogaFrameT'] = _0x397f50 + 0x12c, this['oogaBoogaFrame'] += 0x1;
        if (this['oogaBoogaFrame'] == 0x1) this['gotChat']('OOGA!');
        else {
            if (this['oogaBoogaFrame'] == 0x3) this['gotChat']('BOOGA!');
        }
    }
    this['oogaBoogaFrame'] > 0x4 && (this['oogaBoogaFrame'] = 0x0, this['oogaBoogaNextT'] = +new Date() + 0x3a98);
}
if (this['oogaBoogaFrame'] > 0x0) {
    var _0x504492 = 0x0,
        _0x1c0d1a = 0x1f4 / 0x154,
        _0x2a718e = this['getSkinImageObj']('skins/land/bigfoot/' + this['animalSpecies'] + '/head' + this['oogaBoogaFrame'] + '.png');
    if (_0x2a718e) {
        _0x4ac9cf['save']();
        var _0x340465 = this['rad'];
        _0x4ac9cf['drawImage'](_0x2a718e, -_0x340465 * _0x1c0d1a, (-_0x340465 + _0x340465 * _0x504492) * _0x1c0d1a, 0x2 * _0x340465 * _0x1c0d1a, 0x2 * _0x340465 * _0x1c0d1a), _0x4ac9cf['restore']();
    }
}
}, _0x4a2ecb['prototype']['spearInHand'] = ![], _0x4a2ecb['prototype']['canCreateFire'] = ![], _0x4a2ecb['prototype']['readCustomData_onUpdate'] = function (_0x6ebcde) {
_0x4a2ecb['superClass']['prototype']['readCustomData_onUpdate']['call'](this, _0x6ebcde);
var _0x5254e3 = _0x6ebcde['readBitGroup']();
this['showHand'] = _0x5254e3['getBool'](), this['showSpear'] = this['showHand'] && _0x5254e3['getBool'](), this['canCreateFire'] = _0x5254e3['getBool']();
};
var _0x582dc = 0.84,
_0x1020f7 = 0.47,
_0x4e354b = 0x2d,
_0x4075bc = -0x1e,
_0x17bb4b = 1.3,
_0x1c0c1 = 1.5,
_0x510331 = 0.3;
_0x4a2ecb['prototype']['bigfootHead'] = function (_0x4b71a1) {
var _0x389e4e = 0x0,
    _0x3b47f6 = 0x1f4 / 0x154,
    _0x1084e4 = this['flag_usingAbility'] ? 'head2' : 'head';
if (!this['flag_usingAbility']) _0x389e4e = 0x0;
var _0x3fdad9 = this['getSkinImageObj']('skins/land/bigfoot/' + this['animalSpecies'] + '/' + _0x1084e4 + '.png');
if (_0x3fdad9) {
    _0x4ac9cf['save']();
    var _0x515352 = this['rad'];
    _0x4ac9cf['drawImage'](_0x3fdad9, -_0x515352 * _0x3b47f6, (-_0x515352 + _0x515352 * _0x389e4e) * _0x3b47f6, 0x2 * _0x515352 * _0x3b47f6, 0x2 * _0x515352 * _0x3b47f6), _0x4ac9cf['restore']();
}
}, _0x4a2ecb['prototype']['spearHandAnimation'] = function (_0x15d37d) {
var _0x33590d = (_0x397f50 - this['spawnTime']) / 0x3e8,
    _0x1fbd77 = 0x0;
if (!_0x50a9ba && !(_0x25ea67 == 0x2)) _0x1fbd77 = _0x23fdc7(_0x33590d, _0x1c0c1, _0x510331, 0x2);
var _0x5471a8 = this['getSkinImageObj']('skins/land/bigfoot/' + this['animalSpecies'] + '/arm2.png');
if (_0x5471a8) {
    _0x4ac9cf['save']();
    var _0x18ac0c = -(-0.2 + _0x1fbd77) * _0x142401(_0x4e354b),
        _0x5282be = this['rad'] * _0x17bb4b;
    _0x4ac9cf['rotate'](_0x142401(_0x4075bc) + _0x18ac0c);
    var _0x4b9c71 = 0x0,
        _0x186343 = this['rad'],
        _0x511ed5 = _0x5282be * 0x2,
        _0x19eba3 = _0x5282be * 0x2,
        _0x4989e3 = _0x1020f7,
        _0x5bc490 = _0x582dc;
    _0x4ac9cf['drawImage'](_0x5471a8, _0x4b9c71 + _0x511ed5 * -_0x4989e3, _0x186343 + _0x19eba3 * -_0x5bc490, _0x511ed5, _0x19eba3);
    if (this['canCreateFire']) {
        var _0x23528c = this['getSkinImageObj']('skins/land/bigfoot/' + this['animalSpecies'] + '/arm2-fire.png');
        if (_0x23528c) {
            var _0x33590d = (_0x397f50 - this['spawnTime']) / 0x3e8,
                _0x1fbd77 = _0x23fdc7(_0x33590d, 0x5, 0x1, 0x1);
            _0x4ac9cf['globalAlpha'] = Math['max'](0x0, _0x1fbd77), _0x4ac9cf['drawImage'](_0x23528c, _0x4b9c71 + _0x511ed5 * -_0x4989e3, _0x186343 + _0x19eba3 * -_0x5bc490, _0x511ed5, _0x19eba3);
        }
    }
    _0x4ac9cf['restore']();
}
}, _0x4a2ecb['prototype']['rightHandAnimation'] = function (_0x498f01) {
var _0x61faf1 = (_0x397f50 - this['spawnTime']) / 0x3e8,
    _0x1f2713 = 0x0;
if (!_0x50a9ba && !(_0x25ea67 == 0x2)) _0x1f2713 = _0x23fdc7(_0x61faf1, _0x1c0c1, _0x510331, 0x2);
var _0x4c1d41 = this['getSkinImageObj']('skins/land/bigfoot/' + this['animalSpecies'] + '/arm1.png');
if (_0x4c1d41) {
    _0x4ac9cf['save']();
    var _0x3ecc31 = -_0x1f2713 * _0x142401(-0xa),
        _0x292273 = this['rad'] * _0x17bb4b;
    _0x4ac9cf['rotate'](_0x142401(-0x5) + _0x3ecc31);
    var _0x5ddaea = 0x0,
        _0x175b3e = this['rad'],
        _0x36198a = _0x292273 * 0x2,
        _0x3f250d = _0x292273 * 0x2,
        _0x1f90d0 = 0.55,
        _0x197de5 = 0.85;
    _0x4ac9cf['drawImage'](_0x4c1d41, _0x5ddaea + _0x36198a * -_0x1f90d0, _0x175b3e + _0x3f250d * -_0x197de5, _0x36198a, _0x3f250d), _0x4ac9cf['restore']();
}
}, _0x4a2ecb['prototype']['leftHandAnimation'] = function (_0x514caf) {
var _0x4e2b7e = (_0x397f50 - this['spawnTime']) / 0x3e8,
    _0xb55d24 = 0x0;
if (!_0x50a9ba && !(_0x25ea67 == 0x2)) {
    if (!(this['id'] == _0x46868a && _0x50a9ba)) _0xb55d24 = _0x23fdc7(_0x4e2b7e, _0x1c0c1, _0x510331, 0x2);
}
var _0x170099 = this['getSkinImageObj']('skins/land/bigfoot/' + this['animalSpecies'] + '/arm21.png');
if (_0x170099) {
    _0x4ac9cf['save']();
    var _0x42bbb6 = -_0xb55d24 * _0x142401(-0xa),
        _0x3d8f35 = this['rad'] * _0x17bb4b;
    _0x4ac9cf['rotate'](_0x142401(-0x5) + _0x42bbb6);
    var _0x3c2379 = 0x0,
        _0x395513 = this['rad'],
        _0x4b0648 = _0x3d8f35 * 0x2,
        _0x116c6a = _0x3d8f35 * 0x2,
        _0x3b1691 = 0.47,
        _0x141fc5 = 0.8;
    _0x4ac9cf['drawImage'](_0x170099, _0x3c2379 + _0x4b0648 * -_0x3b1691, _0x395513 + _0x116c6a * -_0x141fc5, _0x4b0648, _0x116c6a), _0x4ac9cf['restore']();
}
};

function _0x4a2ecb() {
_0x4a2ecb['superClass']['call'](this, _0x4acf80), this['oogaBoogaNextT'] = +new Date() + 0x3a98;
}
window['BigFoot'] = _0x4a2ecb, _0x3360d0['setCustomClassForGameObjType'](_0x4a2ecb, _0x4acf80, _0x46984b);
var _0x13295b = _0x436cae,
_0xec194 = _0x54c5f1;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194, _0x436cae['prototype']['victimID'] = 0x0, _0x436cae['prototype']['updateZ'] = function () {
if (this['effect_flying']) this['z'] = 0x186a0;
else this['victimID'] == 0x0 && (this['z'] = 0x44c);
};
var _0x29955f = 0x1,
_0x31e4a7 = 0x2,
_0x29933b = 0x3;
_0x436cae['prototype']['customDraw'] = function (_0x127271) {
_0x4ac9cf['save']();
if (this['spearState'] == _0x31e4a7) {
    var _0x1988b7 = this['getSkinImageObj']('skins/land/bigfoot/' + this['speciesType'] + '/spear.png');
    if (_0x1988b7) {
        _0x4ac9cf['save']();
        var _0xd2d051 = this['rad'] * 0x2;
        _0x4ac9cf['rotate'](this['angle'] + _0x40941f), _0x4ac9cf['drawImage'](_0x1988b7, -_0xd2d051 / 0x2, -_0xd2d051 / 0x2, _0xd2d051, _0xd2d051 * 0x4), _0x4ac9cf['restore']();
    }
} else {
    if (this['spearState'] == _0x29933b) {
        _0x4ac9cf['save']();
        var _0x1988b7 = this['getSkinImageObj']('skins/land/bigfoot/' + this['speciesType'] + '/spear2.png');
        if (_0x1988b7) {
            var _0xd2d051 = this['rad'] * 0x2;
            _0x4ac9cf['rotate'](this['angle'] + _0x40941f), _0x4ac9cf['drawImage'](_0x1988b7, -_0xd2d051 / 0x2, -_0xd2d051 / 0x2, _0xd2d051, _0xd2d051 * 0x4);
        }
        _0x4ac9cf['restore']();
    } else {
        if (this['spearState'] == _0x29955f) {
            var _0x53a9c3 = this['spearState'],
                _0x1988b7 = this['getSkinImageObj']('skins/land/bigfoot/' + this['speciesType'] + '/arm2.png');
            if (_0x1988b7) {
                var _0x24dcb0 = Math['min'](0x1, (_0x397f50 - this['spawnTime']) / 0xc8),
                    _0x1491e4 = _0x1ce2eb((_0x397f50 - this['spawnTime']) / 0x12c, 0x0, 0x1),
                    _0x5d3d4e = -_0x1491e4 * _0x40941f;
                _0x4ac9cf['rotate'](this['angle'] + _0x5d3d4e * (this['specType'] == 0x1 ? 0x1 : -0x1));
                var _0xd2d051 = -this['rad'] * 1.5,
                    _0xcca799 = this['rad'] / 0x2,
                    _0x15af18 = this['rad'],
                    _0x29a6a9 = _0xd2d051 * 0x2,
                    _0x5654a4 = _0xd2d051 * 0x2 * _0x24dcb0,
                    _0x302b09 = 0.3,
                    _0x49e42f = 0.8;
                _0x4ac9cf['drawImage'](_0x1988b7, _0xcca799 + _0x29a6a9 * -_0x302b09, _0x15af18 + _0x5654a4 * -_0x49e42f + _0xd2d051, _0x29a6a9, _0x5654a4);
            }
        }
    }
}
_0x4ac9cf['restore']();
}, _0x436cae['prototype']['spearState'] = 0x0, _0x436cae['prototype']['effect_flying'] = ![], _0x436cae['prototype']['readUpdatedProperty'] = function (_0x339f5b, _0x7f005c) {
if (_0x339f5b == _0x2e8f33) this['spearState'] = _0x7f005c['readUInt8']();
else {
    if (_0x339f5b == _0x41de31) {
        this['victimID'] = _0x7f005c['readUInt32']();
        if (this['victimID'] != 0x0) {
            if (_0xddec75[this['victimID']]) this['z'] = _0xddec75[this['victimID']]['z'] + 0x1;
        }
    } else _0x339f5b == _0x151847 && (this['effect_flying'] = _0x7f005c['readUInt8']() == 0x1);
}
}, _0x436cae['prototype']['readCustomData_onNewlyVisible'] = function (_0xd584a8) {
_0x436cae['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0xd584a8), this['spearState'] = _0xd584a8['readUInt8'](), this['victimID'] = _0xd584a8['readUInt32']();
if (this['victimID'] != 0x0) {
    if (_0xddec75[this['victimID']]) this['z'] = _0xddec75[this['victimID']]['z'] + 0x1;
}
this['effect_flying'] = _0xd584a8['readUInt8']() == 0x1;
};

function _0x436cae() {
_0x436cae['superClass']['call'](this), _0x436cae['prototype']['easeAngleChanges'] = !![];
}
window['BigfootSpear'] = _0x436cae, _0x3360d0['setCustomClassForGameObjType'](_0x436cae, _0x1b8199, _0x5adc47);
var _0xec194 = _0x5adfe2;
_0x870f8e['prototype'] = Object['create'](_0xec194['prototype']), _0x870f8e['prototype']['constructor'] = _0x870f8e, _0x870f8e['superClass'] = _0xec194, _0x870f8e['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x870f8e['prototype']['setSkinPath'] = function () {
this['objSkinPath'] = 'skins/land/bigfoot/' + this['speciesType'] + '/firewood.png';
}, _0x870f8e['prototype']['customDraw'] = function (_0x467099) {
_0x4ac9cf['save']();
var _0x3c2006 = this['rad'] * 2.2,
    _0x14f3a0 = this['getSkinImageObj'](this['objSkinPath']);
_0x14f3a0 && _0x4ac9cf['drawImage'](_0x14f3a0, -_0x3c2006 / 0x2, -_0x3c2006 / 0x2, _0x3c2006, _0x3c2006), _0x4ac9cf['restore']();
};
var _0x1f3755 = 0x79;

function _0x870f8e() {
_0x870f8e['superClass']['call'](this, _0x1f3755);
}
window['FireWood'] = _0x870f8e, _0x3360d0['setCustomClassForGameObjType'](_0x870f8e, _0x1f3755);
var _0xec194 = _0x5adfe2;
_0x43dd87['prototype'] = Object['create'](_0xec194['prototype']), _0x43dd87['prototype']['constructor'] = _0x43dd87, _0x43dd87['superClass'] = _0xec194, _0x43dd87['prototype']['updateZ'] = function () {
this['z'] = 0x44c;
}, _0x43dd87['prototype']['alpha'] = 0x1, _0x43dd87['prototype']['trunkW'] = 0.5, _0x43dd87['prototype']['customDraw'] = function (_0x4d5264) {
_0x4ac9cf['save']();
var _0x3b1340 = 0x0,
    _0x18e680 = 0x0;
let _0x3bc655 = _0x29cd61[this['id']] == 0x1;
var _0x17483a = 0x1;
try {
    _0x3bc655 ? this['alpha'] += (0.4 - this['alpha']) * 0.1 : (this['alpha'] += (0x1 - this['alpha']) * 0.1, this['alpha'] > 0.99 && (this['alpha'] = 0x1));
} catch (_0x1f411e) {}
var _0x1f2853 = this['getTreeName']();
if (!(_0x25ea67 == 0x2)) {
    var _0x5e4342 = this['getSkinImageObj']('gameobj/101/' + _0x1f2853 + '/' + this['getTrunk']() + '.png');
    if (_0x5e4342) {
        var _0xfc1037 = this['rad'],
            _0x9d03e1 = this['rPer'] * Math['PI'] * 0x2;
        _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x5e4342, -_0xfc1037, -_0xfc1037, 0x2 * _0xfc1037, 0x2 * _0xfc1037);
    }
}
if (this['canopy']) {
    var _0x1cd45d = 'canopy';
    _0x1f2853 == 'default' && (_0x1cd45d += this['curBiome'], this['curBiome'] == _0x1c28a3 && (_0x1cd45d = _0x1cd45d + '_' + this['speciesType']));
    var _0xfc1037 = (this['foodType'] == _0x135fc7 ? this['rad'] * 1.25 : this['rad']) + _0x3b1340;
    if (this['eventType'] == 0x2 && this['treeType'] != 'default') this['drawEventDecorations'](_0x1f2853, _0x1cd45d, _0xfc1037, _0x9d03e1);
    else {
        if (this['xmasTree']) this['drawXmasProp'](_0x1f2853, _0xfc1037, _0x9d03e1, 'ornament', _0x18e680);
        if (!_0x50a9ba && !(_0x25ea67 == 0x2)) {
            var _0x5e4342 = this['getSkinImageObj'](this['getCanopySkin'](_0x1f2853, _0x1cd45d));
            _0x5e4342 ? (_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] *= this['alpha'], !(this['curBiome'] === _0x1c28a3 && this['speciesType'] === 0x1) && _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x5e4342, -_0xfc1037 + _0x18e680, -_0xfc1037 - _0x18e680, 0x2 * _0xfc1037, 0x2 * _0xfc1037), _0x4ac9cf['restore']()) : console['log']('not found ' + _0x1f2853);
        } else _0x4ac9cf['save'](), _0x486a28(0x0, 0x0, this['rad'] * 0.2, 'brown'), this['drawNoImageTree'](this['rad']), _0x4ac9cf['restore']();
        if (this['xmasTree']) this['drawXmasProps'](_0x1f2853, _0xfc1037, _0x9d03e1, _0x18e680);
    }
}
_0x4ac9cf['restore']();
}, _0x43dd87['prototype']['drawNoImageTree'] = function (_0x385a8d) {
_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = this['alpha'];
var _0x4d167a = this['getBiomeColors']();
_0x486a28(-_0x385a8d * 0.5, -_0x385a8d * 0.5, _0x385a8d * 0.65, _0x4d167a['dark']), _0x486a28(_0x385a8d * 0.5, -_0x385a8d * 0.5, _0x385a8d * 0.73, _0x4d167a['dark']), _0x486a28(_0x385a8d * 0.6, _0x385a8d * 0.4, Math['max'](0x0, _0x385a8d * 0.78), _0x4d167a['dark']), _0x486a28(-_0x385a8d * 0.5, _0x385a8d * 0.5, Math['max'](0x0, _0x385a8d * 0.6), _0x4d167a['dark']), _0x486a28(-_0x385a8d * 0.5, -_0x385a8d * 0.5, (_0x385a8d - 0x2) * 0.65, _0x4d167a['light']), _0x486a28(_0x385a8d * 0.5, -_0x385a8d * 0.5, (_0x385a8d - 0x2) * 0.73, _0x4d167a['light']), _0x486a28(_0x385a8d * 0.6, _0x385a8d * 0.4, (_0x385a8d - 0x2) * 0.78, _0x4d167a['light']), _0x486a28(-_0x385a8d * 0.5, _0x385a8d * 0.5, (_0x385a8d - 0x2) * 0.6, _0x4d167a['light']), _0x4ac9cf['restore']();
return;
_0x4ac9cf['save'](), this['rPer'] = 0x0;
var _0x3dd3db = 0x0,
    _0x20a1fe = '#45D157';
_0x4ac9cf['fillStyle'] = color, _0x4ac9cf['globalAlpha'] = this['alpha'], _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](_0x385a8d * 0.5, -_0x385a8d * 0.5, Math['max'](0x0, _0x385a8d * 0.73), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](_0x385a8d * 0.6, _0x385a8d * 0.4, Math['max'](0x0, _0x385a8d * 0.78), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-_0x385a8d * 0.5, _0x385a8d * 0.5, Math['max'](0x0, _0x385a8d * 0.6), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['restore']();
}, _0x43dd87['prototype']['lights'] = 0x0, _0x43dd87['prototype']['drawXmasProps'] = function (_0x55faeb, _0x4239af, _0x2e608d, _0x19de1a) {
this['drawXmasProp'](_0x55faeb, _0x4239af, _0x2e608d, 'decoration', _0x19de1a);
if (this['lights'] == 0x1 || this['lights'] == 0x3) this['drawXmasProp'](_0x55faeb, _0x4239af, _0x2e608d, 'light', _0x19de1a);
if (this['lights'] == 0x2 || this['lights'] == 0x3) this['drawXmasProp'](_0x55faeb, _0x4239af, _0x2e608d, 'light1', _0x19de1a);
}, _0x43dd87['prototype']['drawXmasProp'] = function (_0x4be755, _0x36756f, _0x43d018, _0x3ae359, _0x16b188) {
var _0x392a5e = 'img/tree/' + _0x4be755 + '/xmas/' + _0x3ae359 + '.png',
    _0x326f5c = this['getSkinImageObj'](_0x392a5e);
_0x326f5c ? (_0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x326f5c, -_0x36756f + _0x16b188, -_0x36756f - _0x16b188, 0x2 * _0x36756f, 0x2 * _0x36756f), _0x4ac9cf['restore']()) : console['log']('not found: ' + _0x392a5e);
}, _0x43dd87['prototype']['drawEventDecorations'] = function (_0x346e21, _0x3a1566, _0x119d39, _0x52d533) {
let _0x52640c = 'gameobj/101/' + _0x346e21 + '/' + _0x3a1566 + '_' + this['eventType'] + '.png';
var _0x1f3414 = this['getSkinImageObj'](_0x52640c);
_0x1f3414 ? (_0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x1f3414, -_0x119d39 + _0x52d533, -_0x119d39 - _0x52d533, 0x2 * _0x119d39, 0x2 * _0x119d39), _0x4ac9cf['restore']()) : console['log']('not found: ' + _0x52640c);
}, _0x43dd87['prototype']['drawEventDecorations'] = function (_0x409bcd, _0x2743ed, _0x2bbc4a, _0x32d85b) {
let _0x5665bd = 'gameobj/101/' + _0x409bcd + '/' + _0x2743ed + '_' + this['eventType'] + '.png';
var _0x689c43 = this['getSkinImageObj'](_0x5665bd);
console['log'](_0x5665bd), _0x689c43 && (_0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x689c43, -_0x2bbc4a + _0x32d85b, -_0x2bbc4a - _0x32d85b, 0x2 * _0x2bbc4a, 0x2 * _0x2bbc4a), _0x4ac9cf['restore']());
}, _0x43dd87['prototype']['getTreeName'] = function () {
switch (this['foodType']) {
case _0x135fc7:
    return 'coco';
case _0x5e6983:
    return 'banana';
case _0x35dc70:
    return 'fir';
}
return 'default';
}, _0x43dd87['prototype']['getBiomeColors'] = function () {
var _0x40c669 = {
    'dark': '#09992f',
    'light': '#1cba34'
};
switch (this['curBiome']) {
case _0x4f2b40:
    _0x40c669 = {
        'dark': '#808080',
        'light': '#f7f7f7'
    };
    break;
case _0x55a829:
case _0x1c28a3:
    _0x40c669 = {
        'dark': '#a59215',
        'light': '#fffff'
    };
    break;
case _0x55ada:
    _0x40c669 = {
        'dark': '#09992f',
        'light': '#1cba34'
    };
    break;
case _0x41e0ba:
    _0x40c669 = {
        'dark': '#09992f',
        'light': 'limegreen'
    };
    break;
case _0x229c1c:
    _0x40c669 = {
        'dark': '#1aae31',
        'light': 'limegreen'
    };
    break;
default:
}
return _0x40c669;
}, _0x43dd87['prototype']['getTrunk'] = function () {
if (this['curBiome'] == _0x1c28a3) return 'trunk4_' + this['speciesType'];
return 'trunk';
}, _0x43dd87['prototype']['foodType'] = 0x0, _0x43dd87['prototype']['canopy'] = !![], _0x43dd87['prototype']['readCustomData_onNewlyVisible'] = function (_0x11e39d) {
this['foodType'] = _0x11e39d['readUInt16'](), this['canopy'] = _0x11e39d['readUInt8']() == 0x1, this['eventType'] = _0x11e39d['readUInt8'](), this['xmasTree'] = this['eventType'] == 0x3;
}, _0x43dd87['prototype']['readUpdatedProperty'] = function (_0x12ef53, _0x593cb2) {
_0x12ef53 == _0x488108 && (this['lights'] = _0x593cb2['readUInt8']());
}, _0x43dd87['prototype']['treeCanopySkin'] = null, _0x43dd87['prototype']['getCanopySkin'] = function (_0xf4a399, _0x24b222) {
return this['treeCanopySkin'] == null && (this['treeCanopySkin'] = 'gameobj/101/' + _0xf4a399 + '/' + _0x24b222 + '.png'), this['treeCanopySkin'];
};

function _0x43dd87() {
_0x43dd87['superClass']['call'](this, _0x8d05a2);
}
window['Tree'] = _0x43dd87, _0x3360d0['setCustomClassForGameObjType'](_0x43dd87, _0x8d05a2);
var _0x13295b = _0x12f4d6,
_0xec194 = _0x5adfe2;
_0x12f4d6['prototype'] = Object['create'](_0xec194['prototype']), _0x12f4d6['prototype']['constructor'] = _0x12f4d6, _0x12f4d6['superClass'] = _0xec194, _0x12f4d6['prototype']['updateZ'] = function () {
this['z'] = -0xd7;
}, _0x12f4d6['prototype']['customDraw'] = function (_0x191bdf) {
_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.5; {
    _0x4ac9cf['fillStyle'] = _0x5db51d;
    var _0x4a50dd = -this['rectW'] / 0x2,
        _0x3cd928 = this['rectW'] / 0x2,
        _0x5ca2bc = -this['rectH'] / 0x2,
        _0x445ca5 = this['rectH'] / 0x2;
    _0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](_0x4a50dd, _0x5ca2bc);
    var _0xe7fa96 = 0x14,
        _0x19d0e8 = [-0xf, 0xa, -0xa, 0xc, 0x0, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
        _0x39d888 = 0x2d,
        _0x1758d3 = 0x0,
        _0x39fda5 = _0x362064 - this['x'],
        _0x393e6f = 0x0 - this['x'],
        _0x4b0431 = _0xa7125 - this['y'],
        _0x2e125c = 0x0 - this['y'],
        _0xda15fa, _0x26f4f4 = _0x4a50dd - _0xe7fa96;
    for (_0xda15fa = _0x5ca2bc; _0xda15fa < _0x445ca5; _0xda15fa += _0x39d888) {
        _0x4ac9cf['lineTo'](Math['min'](_0x39fda5, Math['max'](_0x393e6f, _0x26f4f4 + _0x19d0e8[_0x1758d3])), _0xda15fa), _0x1758d3 = (_0x1758d3 + 0x1) % _0x19d0e8['length'];
    }
    _0x4ac9cf['lineTo'](_0x4a50dd, _0x445ca5), _0xda15fa = _0x445ca5 + _0xe7fa96;
    for (_0x26f4f4 = _0x4a50dd; _0x26f4f4 < _0x3cd928; _0x26f4f4 += _0x39d888) {
        _0x4ac9cf['lineTo'](_0x26f4f4, Math['min'](_0x4b0431, Math['max'](_0x2e125c, _0xda15fa + _0x19d0e8[_0x1758d3]))), _0x1758d3 = (_0x1758d3 + 0x1) % _0x19d0e8['length'];
    }
    _0x4ac9cf['lineTo'](_0x3cd928, _0x445ca5), _0x26f4f4 = _0x3cd928 + _0xe7fa96;
    for (_0xda15fa = _0x445ca5; _0xda15fa > _0x5ca2bc; _0xda15fa -= _0x39d888) {
        _0x4ac9cf['lineTo'](Math['min'](_0x39fda5, Math['max'](_0x393e6f, _0x26f4f4 + _0x19d0e8[_0x1758d3])), _0xda15fa), _0x1758d3 = (_0x1758d3 + 0x1) % _0x19d0e8['length'];
    }
    _0x4ac9cf['lineTo'](_0x3cd928, _0x5ca2bc), _0xda15fa = _0x5ca2bc - _0xe7fa96;
    for (_0x26f4f4 = _0x3cd928; _0x26f4f4 > _0x4a50dd; _0x26f4f4 -= _0x39d888) {
        _0x4ac9cf['lineTo'](_0x26f4f4, Math['min'](_0x4b0431, Math['max'](_0x2e125c, _0xda15fa + _0x19d0e8[_0x1758d3]))), _0x1758d3 = (_0x1758d3 + 0x1) % _0x19d0e8['length'];
    }
    _0x4ac9cf['closePath'](), _0x4ac9cf['fill']();
}
_0x4ac9cf['restore']();
}, _0x12f4d6['prototype']['edge'] = function () {
_0x4ac9cf['save']();
var _0x18bfb6 = 0xf; {
    _0x4ac9cf['fillStyle'] = 'red';
    var _0x36d5c2 = -this['rectW'] / 0x2,
        _0x49ad78 = this['rectW'] / 0x2,
        _0x5a9beb = -this['rectH'] / 0x2 + 0x3,
        _0x44c791 = -this['rectH'] / 0x2 - _0x18bfb6;
    _0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](_0x36d5c2, _0x5a9beb);
    var _0x4faee8 = 0x0,
        _0x119c6d = [-0xf, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
        _0x155396 = 0x3c,
        _0x4ab9e6 = 0x0,
        _0x4cd022 = _0x362064 - this['x'],
        _0x57bedb = 0x0 - this['x'],
        _0x42b829 = _0xa7125 - this['y'],
        _0x1a2418 = 0x0 - this['y'],
        _0x2fb0ee, _0x2bbafd = _0x36d5c2 - _0x4faee8;
    _0x4ac9cf['lineTo'](_0x36d5c2, _0x44c791), _0x2fb0ee = _0x44c791 + _0x4faee8;
    for (_0x2bbafd = _0x36d5c2; _0x2bbafd < _0x49ad78; _0x2bbafd += _0x155396) {
        _0x4ac9cf['lineTo'](_0x2bbafd, Math['min'](_0x42b829, Math['max'](_0x1a2418, _0x2fb0ee + _0x119c6d[_0x4ab9e6]))), _0x4ab9e6 = (_0x4ab9e6 + 0x1) % _0x119c6d['length'];
    }
    _0x4ac9cf['lineTo'](_0x49ad78, _0x44c791), _0x4ac9cf['lineTo'](_0x49ad78, _0x5a9beb), _0x4ac9cf['closePath']();
}
_0x4ac9cf['restore']();
};

function _0x12f4d6() {
_0x12f4d6['superClass']['call'](this, _0x160bc1);
}
window['RainForest'] = _0x12f4d6, _0x3360d0['setCustomClassForGameObjType'](_0x12f4d6, _0x160bc1);
var _0xec194 = _0x5adfe2;
_0x334ae9['prototype'] = Object['create'](_0xec194['prototype']), _0x334ae9['prototype']['constructor'] = _0x334ae9, _0x334ae9['superClass'] = _0xec194, _0x334ae9['prototype']['updateZ'] = function () {
this['z'] = 0x3ed;
}, _0x334ae9['prototype']['customDraw'] = function (_0x4c044f) {
_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1, _0x486a28(0x0, 0x0, this['rad'], '#000'), _0x4ac9cf['restore']();
};

function _0x334ae9() {
_0x334ae9['superClass']['call'](this, _0x543cf2);
}
window['FOV'] = _0x334ae9, _0x3360d0['setCustomClassForGameObjType'](_0x334ae9, _0x543cf2);
var _0xec194 = _0x5adfe2;
_0x1c425b['prototype'] = Object['create'](_0xec194['prototype']), _0x1c425b['prototype']['constructor'] = _0x1c425b, _0x1c425b['superClass'] = _0xec194, _0x1c425b['prototype']['updateZ'] = function () {
this['z'] = -0x9f, (this['specType'] == 0x0 || 0x1) && (this['z'] = -0x9e);
}, _0x1c425b['prototype']['currentWidth'] = 0x5a, _0x1c425b['prototype']['currentPadding'] = 0x0, _0x1c425b['prototype']['padding'] = 0x32, _0x1c425b['prototype']['isFloatingRiver'] = ![], _0x1c425b['prototype']['customDraw'] = function (_0x1887ae) {
if (_0x1887ae) {
    this['jaggedSidesForRect'](_0x249ca3, this['getStreamMargin']());
    if (!_0x5bdc9a['noTextures']) this['drawTerrainFeatures']();
} else {}
this['drawStream'](_0x414722), this['drawCurrent'](this['isFloatingRiver'], this['riverSize']);
}, _0x1c425b['prototype']['drawCurrent'] = function (_0x2ee4c7, _0xf6097b) {
if (_0x2ee4c7) {
    this['currentPadding'] = this['padding'] * _0xf6097b / 0x2;
    var _0x58b49f = 0x3c,
        _0x58f086 = 0x3e8;
    if (this['specType'] == 0x0) {
        var _0x188526 = this['getSkinImageObj']('gameobj/40/currentRight.png');
        if (_0x188526) {
            var _0x3fb599 = -this['rectW'] / 0x2 + 0x32,
                _0x29c3ae = this['currentWidth'];
            _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1, maxWaves = Math['round'](this['rectW'] / _0x29c3ae) - 0x1;
            for (i = 0x0; i < maxWaves; i++) {
                var _0x5d7c7a = this['speedX'] * (_0x29c3ae / _0x58b49f) * _0x58f086,
                    _0x11ee87 = (_0x397f50 - this['spawnTime']) % _0x5d7c7a / _0x5d7c7a,
                    _0x52b0ea = _0x29c3ae,
                    _0x21f595 = _0x3fb599 + _0x52b0ea * _0x11ee87;
                _0x4ac9cf['drawImage'](_0x188526, _0x21f595, this['currentPadding'] + -this['rectH'] * _0xf6097b / 0x2, _0x29c3ae * _0xf6097b, this['riverStreamHeight'] * _0xf6097b - 0x8), _0x3fb599 += _0x29c3ae;
            }
            _0x4ac9cf['restore']();
        }
    } else {
        if (this['specType'] == 0x1) {
            var _0x188526 = this['getSkinImageObj']('gameobj/40/currentLeft.png');
            if (_0x188526) {
                var _0x3fb599 = this['rectW'] / 0x2 - 0x64,
                    _0x29c3ae = this['currentWidth'];
                _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1, maxWaves = Math['round'](this['rectW'] / _0x29c3ae) - 0x1;
                for (i = 0x0; i < maxWaves; i++) {
                    var _0x5d7c7a = this['speedX'] * (_0x29c3ae / _0x58b49f) * _0x58f086,
                        _0x11ee87 = (_0x397f50 - this['spawnTime']) % _0x5d7c7a / _0x5d7c7a,
                        _0x52b0ea = _0x29c3ae,
                        _0x21f595 = _0x3fb599 + _0x52b0ea * _0x11ee87;
                    _0x4ac9cf['drawImage'](_0x188526, _0x21f595, this['currentPadding'] + -this['rectH'] * _0xf6097b / 0x2, _0x29c3ae * _0xf6097b, this['riverStreamHeight'] * _0xf6097b - 0x8), _0x3fb599 -= _0x29c3ae;
                }
                _0x4ac9cf['restore']();
            }
        } else {
            if (this['specType'] == 0x2) {
                var _0x188526 = this['getSkinImageObj']('gameobj/40/currentDown.png');
                if (_0x188526) {
                    var _0xff4e7e = -this['rectH'] / 0x2 - 0x32,
                        _0x34551f = this['currentWidth'];
                    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1, maxWaves = Math['round'](this['rectH'] / _0x34551f) - 0x1;
                    for (i = 0x0; i < maxWaves; i++) {
                        var _0x5d7c7a = this['speedY'] * (_0x34551f / _0x58b49f) * _0x58f086,
                            _0x11ee87 = (_0x397f50 - this['spawnTime']) % _0x5d7c7a / _0x5d7c7a,
                            _0x52b0ea = _0x34551f,
                            _0x3ff911 = _0xff4e7e + _0x52b0ea * _0x11ee87;
                        if (i > 0x0) _0x4ac9cf['drawImage'](_0x188526, this['currentPadding'] + -this['rectW'] * _0xf6097b / 0x2, _0x3ff911, this['riverStreamHeight'] * _0xf6097b - 0x8, _0x34551f * _0xf6097b);
                        _0xff4e7e += _0x34551f;
                    }
                    _0x4ac9cf['restore']();
                }
            } else {
                if (this['specType'] == 0x3) {
                    var _0x188526 = this['getSkinImageObj']('gameobj/40/currentUp.png');
                    if (_0x188526) {
                        var _0xff4e7e = this['rectH'] / 0x2 + 0x32,
                            _0x34551f = this['currentWidth'];
                        _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1, maxWaves = Math['round'](this['rectH'] / _0x34551f) - 0x1;
                        for (i = 0x0; i < maxWaves; i++) {
                            var _0x5d7c7a = this['speedY'] * (_0x34551f / _0x58b49f) * _0x58f086,
                                _0x11ee87 = (_0x397f50 - this['spawnTime']) % _0x5d7c7a / _0x5d7c7a,
                                _0x52b0ea = _0x34551f,
                                _0x3ff911 = _0xff4e7e + _0x52b0ea * _0x11ee87;
                            if (i > 0x0) _0x4ac9cf['drawImage'](_0x188526, this['currentPadding'] + -this['rectW'] * _0xf6097b / 0x2, _0x3ff911, this['riverStreamHeight'] * _0xf6097b - 0x8, _0x34551f * _0xf6097b);
                            _0xff4e7e -= _0x34551f;
                        }
                        _0x4ac9cf['restore']();
                    }
                }
            }
        }
    }
}
}, _0x1c425b['prototype']['getStreamMargin'] = function () {
return this['margin'];
}, _0x1c425b['prototype']['getRectWidth'] = function () {
var _0xabe66f = this['rectW'];
return _0xabe66f;
}, _0x1c425b['prototype']['getRectHeight'] = function () {
var _0x5e1ae4 = this['rectH'];
return _0x5e1ae4;
}, _0x1c425b['prototype']['jaggedSidesForRect'] = function (_0x2e392f, _0x1fdae1) {
_0x4ac9cf['fillStyle'] = _0x2e392f;
var _0x442b79 = ![];
if (_0x1fdae1) _0x442b79 = !![];
var _0x35e441 = -this['getRectWidth']() / 0x2 + (_0x442b79 ? _0x1fdae1['x_min'] : 0x0),
    _0x4061cc = this['getRectWidth']() / 0x2 + (_0x442b79 ? _0x1fdae1['x_max'] : 0x0),
    _0x5b2616 = -this['getRectHeight']() / 0x2 + (_0x442b79 ? _0x1fdae1['y_min'] : 0x0),
    _0x280ac1 = this['getRectHeight']() / 0x2 + (_0x442b79 ? _0x1fdae1['y_max'] : 0x0);
_0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](_0x35e441, _0x5b2616);
var _0x225e1f = 0x1e,
    _0xcb562 = [-0x8, 0xa, -0xa, 0xc, 0x0, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
    _0x310d6b = 0x2d,
    _0x249e55 = 0x0,
    _0x4199ac = _0x362064 - this['x'],
    _0x5c839d = 0x0 - this['x'],
    _0x1483d9 = _0xa7125 - this['y'],
    _0x59a0a8 = 0x0 - this['y'],
    _0x4ec0c3, _0x3d52f4 = _0x35e441 - _0x225e1f;
for (_0x4ec0c3 = _0x5b2616; _0x4ec0c3 < _0x280ac1; _0x4ec0c3 += _0x310d6b) {
    _0x4ac9cf['lineTo'](Math['min'](_0x4199ac, Math['max'](_0x5c839d, _0x3d52f4 + _0xcb562[_0x249e55])), _0x4ec0c3), _0x249e55 = (_0x249e55 + 0x1) % _0xcb562['length'];
}
_0x4ac9cf['lineTo'](_0x35e441, _0x280ac1), _0x4ec0c3 = _0x280ac1 + _0x225e1f;
for (_0x3d52f4 = _0x35e441; _0x3d52f4 < _0x4061cc; _0x3d52f4 += _0x310d6b) {
    _0x4ac9cf['lineTo'](_0x3d52f4, Math['min'](_0x1483d9, Math['max'](_0x59a0a8, _0x4ec0c3 + _0xcb562[_0x249e55]))), _0x249e55 = (_0x249e55 + 0x1) % _0xcb562['length'];
}
_0x4ac9cf['lineTo'](_0x4061cc, _0x280ac1), _0x3d52f4 = _0x4061cc + _0x225e1f;
for (_0x4ec0c3 = _0x280ac1; _0x4ec0c3 > _0x5b2616; _0x4ec0c3 -= _0x310d6b) {
    _0x4ac9cf['lineTo'](Math['min'](_0x4199ac, Math['max'](_0x5c839d, _0x3d52f4 + _0xcb562[_0x249e55])), _0x4ec0c3), _0x249e55 = (_0x249e55 + 0x1) % _0xcb562['length'];
}
_0x4ac9cf['lineTo'](_0x4061cc, _0x5b2616), _0x4ec0c3 = _0x5b2616 - _0x225e1f;
for (_0x3d52f4 = _0x4061cc; _0x3d52f4 > _0x35e441; _0x3d52f4 -= _0x310d6b) {
    _0x4ac9cf['lineTo'](_0x3d52f4, Math['min'](_0x1483d9, Math['max'](_0x59a0a8, _0x4ec0c3 + _0xcb562[_0x249e55]))), _0x249e55 = (_0x249e55 + 0x1) % _0xcb562['length'];
}
_0x4ac9cf['closePath'](), _0x4ac9cf['fill']();
}, _0x1c425b['prototype']['drawStream'] = function (_0x504ba1) {
_0x4ac9cf['save']();
if (this['specType'] < 0x2) {
    var _0x33b779 = -this['rectW'] / 0x2,
        _0x4fb32b = this['rectW'],
        _0x37a46c = -this['riverStreamHeight'] / 0x2 * this['riverSize'],
        _0x4f32d0 = this['riverStreamHeight'] * this['riverSize'];
    _0x4ac9cf['fillStyle'] = _0x504ba1, this['drawRandomEdges'](_0x33b779, _0x37a46c, _0x4fb32b / 0x2, _0x4f32d0 / 0x2);
} else {
    var _0x33b779 = -this['riverStreamHeight'] / 0x2 * this['riverSize'],
        _0x4fb32b = this['riverStreamHeight'] * this['riverSize'],
        _0x37a46c = -this['rectH'] / 0x2,
        _0x4f32d0 = this['rectH'];
    _0x4ac9cf['fillStyle'] = _0x504ba1, this['drawRandomEdges'](_0x33b779, _0x37a46c, _0x4fb32b / 0x2, _0x4f32d0 / 0x2);
}
_0x4ac9cf['restore']();
}, _0x1c425b['prototype']['drawRandomEdges'] = function (_0x5197eb, _0x28bfc2, _0x19b190, _0xe8b7be) {
_0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](_0x5197eb, _0x28bfc2);
var _0x5245b8 = 0xa,
    _0x4ae6a7 = [-0x8, 0xa, -0xa, 0xc, 0x0, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
    _0x335a51 = 0x2d,
    _0x5a95af = 0x0,
    _0x241305, _0x25eb39 = _0x5197eb - _0x5245b8;
if (this['specType'] == 0x2 || this['specType'] == 0x3)
    for (_0x241305 = _0x28bfc2; _0x241305 < _0xe8b7be; _0x241305 += _0x335a51) {
        _0x4ac9cf['lineTo'](_0x25eb39 + _0x4ae6a7[_0x5a95af], _0x241305), _0x5a95af = (_0x5a95af + 0x1) % _0x4ae6a7['length'];
    }
_0x4ac9cf['lineTo'](_0x5197eb, _0xe8b7be), _0x241305 = _0xe8b7be + _0x5245b8;
if (this['specType'] == 0x0 || this['specType'] == 0x1)
    for (_0x25eb39 = _0x5197eb; _0x25eb39 < _0x19b190; _0x25eb39 += _0x335a51) {
        _0x4ac9cf['lineTo'](_0x25eb39, _0x241305 + _0x4ae6a7[_0x5a95af]), _0x5a95af = (_0x5a95af + 0x1) % _0x4ae6a7['length'];
    }
_0x4ac9cf['lineTo'](_0x19b190, _0xe8b7be);
if (this['specType'] == 0x2 || this['specType'] == 0x3) {
    _0x25eb39 = _0x19b190 + _0x5245b8;
    for (_0x241305 = _0xe8b7be; _0x241305 > _0x28bfc2; _0x241305 -= _0x335a51) {
        _0x4ac9cf['lineTo'](_0x25eb39 + _0x4ae6a7[_0x5a95af], _0x241305), _0x5a95af = (_0x5a95af + 0x1) % _0x4ae6a7['length'];
    }
}
_0x4ac9cf['lineTo'](_0x19b190, _0x28bfc2);
if (this['specType'] == 0x0 || this['specType'] == 0x1) {
    _0x241305 = _0x28bfc2 - _0x5245b8;
    for (_0x25eb39 = _0x19b190; _0x25eb39 > _0x5197eb; _0x25eb39 -= _0x335a51) {
        _0x4ac9cf['lineTo'](_0x25eb39, _0x241305 + _0x4ae6a7[_0x5a95af]), _0x5a95af = (_0x5a95af + 0x1) % _0x4ae6a7['length'];
    }
}
_0x4ac9cf['closePath'](), _0x4ac9cf['fill']();
}, _0x1c425b['prototype']['drawBody'] = function (_0x594077, _0x33522f, _0x33f9c7) {
var _0x668409 = _0x4ac9cf['globalAlpha']; {
    _0x4ac9cf['fillStyle'] = _0x594077;
    var _0x29e2b0 = 0x0;
    _0x33522f > 0x1 && (_0x29e2b0 = 0x64);
    this['specType'] < 0x2 ? _0x4ac9cf['fillRect'](-this['rectW'] / 0x2, -this['riverStreamHeight'] / 0x2 * _0x33522f, this['rectW'], this['riverStreamHeight'] * _0x33522f) : _0x4ac9cf['fillRect'](-this['riverStreamHeight'] / 0x2 * _0x33522f, -this['rectH'] / 0x2, this['riverStreamHeight'] * _0x33522f, this['rectH']);
    if (this['specType'] < 0x2) {
        var _0x55a7de = 0xf; {
            _0x4ac9cf['fillStyle'] = _0x594077;
            var _0x26d55f = -this['rectW'] / 0x2,
                _0x431c26 = this['rectW'] / 0x2,
                _0x13c21b = (-this['riverStreamHeight'] / 0x2 + 0x3) * _0x33522f,
                _0x29bdce = (-this['riverStreamHeight'] / 0x2 - _0x55a7de) * _0x33522f;
            _0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](_0x26d55f, _0x13c21b);
            var _0x58d117 = 0x0,
                _0x3cfddd = [-0xf, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
                _0xaeb8f2 = 0x3c,
                _0x475664 = 0x0,
                _0xdd8857 = _0x362064 - this['x'],
                _0x21e422 = 0x0 - this['x'],
                _0x4070ec = _0xa7125 - this['y'],
                _0x25f00f = 0x0 - this['y'],
                _0x1d63de, _0x7f1fd9 = _0x26d55f - _0x58d117;
            _0x4ac9cf['lineTo'](_0x26d55f, _0x29bdce), _0x1d63de = _0x29bdce + _0x58d117;
            for (_0x7f1fd9 = _0x26d55f; _0x7f1fd9 < _0x431c26; _0x7f1fd9 += _0xaeb8f2) {
                _0x4ac9cf['lineTo'](_0x7f1fd9, Math['min'](_0x4070ec, Math['max'](_0x25f00f, _0x1d63de + _0x3cfddd[_0x475664]))), _0x475664 = (_0x475664 + 0x1) % _0x3cfddd['length'];
            }
            _0x4ac9cf['lineTo'](_0x431c26, _0x29bdce), _0x4ac9cf['lineTo'](_0x431c26, _0x13c21b), _0x4ac9cf['closePath'](), _0x4ac9cf['fill']();
        } {
            _0x4ac9cf['fillStyle'] = _0x594077;
            var _0x26d55f = -this['rectW'] / 0x2,
                _0x431c26 = this['rectW'] / 0x2,
                _0x13c21b = (this['riverStreamHeight'] / 0x2 - 0x3) * _0x33522f,
                _0x29bdce = (this['riverStreamHeight'] / 0x2 + _0x55a7de) * _0x33522f;
            _0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](_0x26d55f, _0x13c21b);
            var _0x58d117 = 0x0,
                _0x3cfddd = [-0xf, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
                _0xaeb8f2 = 0x3c,
                _0x475664 = 0x0,
                _0xdd8857 = _0x362064 - this['x'],
                _0x21e422 = 0x0 - this['x'],
                _0x4070ec = _0xa7125 - this['y'],
                _0x25f00f = 0x0 - this['y'],
                _0x1d63de, _0x7f1fd9 = _0x26d55f - _0x58d117;
            _0x4ac9cf['lineTo'](_0x26d55f, _0x29bdce), _0x1d63de = _0x29bdce + _0x58d117;
            for (_0x7f1fd9 = _0x26d55f; _0x7f1fd9 < _0x431c26; _0x7f1fd9 += _0xaeb8f2) {
                _0x4ac9cf['lineTo'](_0x7f1fd9, Math['min'](_0x4070ec, Math['max'](_0x25f00f, _0x1d63de + _0x3cfddd[_0x475664]))), _0x475664 = (_0x475664 + 0x1) % _0x3cfddd['length'];
            }
            _0x4ac9cf['lineTo'](_0x431c26, _0x29bdce), _0x4ac9cf['lineTo'](_0x431c26, _0x13c21b), _0x4ac9cf['closePath'](), _0x4ac9cf['fill']();
        }
    }
}
if (_0x33f9c7 && _0x33522f > 0.3) {
    var _0x4be29a = this['getSkinImageObj']('img/riverCurrent' + this['specType'] + '.png');
    if (_0x4be29a) {
        var _0x3796ee = -this['rectW'] / 0x2,
            _0x1d2cf8 = 0x64;
        _0x4ac9cf['save'](), _0x4ac9cf['fillStyle'] = 'yellow', _0x4ac9cf['globalAlpha'] = 0x1;
        var _0x5f0a2c = 0x3c;
        for (i = 0x0; i < 0x50; i++) {
            var _0x4f0946 = this['speedX'] * (_0x1d2cf8 / _0x5f0a2c) * 0x3e8,
                _0x4677a8 = (_0x397f50 - this['spawnTime']) % _0x4f0946 / _0x4f0946,
                _0x2db6f4 = _0x1d2cf8,
                _0x1fe190 = _0x3796ee + _0x2db6f4 * _0x4677a8;
            _0x4ac9cf['drawImage'](_0x4be29a, _0x1fe190, 0xf + -this['rectH'] * _0x33522f / 0x2, _0x1d2cf8 * _0x33522f, this['riverStreamHeight'] * _0x33522f - 0x8), _0x3796ee += _0x1d2cf8;
        }
        _0x4ac9cf['restore']();
    }
}
}, _0x1c425b['prototype']['speedX'] = 0x1, _0x1c425b['prototype']['speedY'] = 0x1, _0x1c425b['prototype']['onLerpUpdate'] = function (_0x1d3c5b) {
this['riverSize'] = _0x1d3c5b * (this['n_riverSize'] - this['o_riverSize']) + this['o_riverSize'];
}, _0x1c425b['prototype']['readUpdatedProperty'] = function (_0x1f241a, _0x120c33) {
_0x1f241a == _0x51ae92 && (this['n_riverSize'] = _0x120c33['readUInt16']() / 0x3e8, this['o_riverSize'] = this['riverSize']);
}, _0x1c425b['prototype']['worldUpd_readMsgNewlyVisible'] = function (_0x24c831, _0x145bb9, _0x450ae6) {
this['setObjTypes'](_0x145bb9, _0x450ae6), this['id'] = _0x24c831['readUInt32']();
var _0x4ff5bf = _0x24c831['readUInt16']() / 0x4,
    _0x1cbbfc = _0x24c831['readUInt16']() / 0x4;
this['rectW'] = _0x24c831['readUInt16'](), this['rectH'] = _0x24c831['readUInt16'](), this['curBiome'] = _0x24c831['readUInt8'](), this['clientBatchDrawID'] = _0x24c831['readUInt16'](), this['specType'] = _0x24c831['readUInt8'](), this['riverStreamHeight'] = _0x24c831['readUInt16'](), this['isRectangle'] = !![], this['ox'] = this['x'] = this['nx'] = _0x4ff5bf, this['oy'] = this['y'] = this['ny'] = _0x1cbbfc, this['clientBatchDraw'] = !![], this['isFloatingRiver'] = _0x24c831['readUInt8']() == 0x1;
if (this['specType'] == 0x1) this['speedX'] = -0x1;
if (this['specType'] == 0x3) this['speedY'] = -0x1;
this['riverSize'] = this['o_riverSize'] = this['n_riverSize'] = 0x1;
var _0x1c7b77 = 0x0,
    _0x38426a = 0x0,
    _0xdc7182 = 0x0,
    _0x4bb8d9 = 0x0;
if (this['specType'] == 0x2) _0x4bb8d9 = -0x78;
else this['specType'] == 0x3 ? _0xdc7182 = 0x78 : (_0x1c7b77 = 0x78, _0x38426a = -0x78);
this['margin'] = {
    'x_min': _0x1c7b77,
    'x_max': _0x38426a,
    'y_min': _0xdc7182,
    'y_max': _0x4bb8d9
}, this['generateTerrainFeatures']();
}, _0x1c425b['prototype']['biomePattern'] = null, _0x1c425b['prototype']['generateTerrainFeatures'] = function () {
var _0x596a60 = [],
    _0xc9de90 = 0x12c,
    _0x4aa5ee = 1.5;
if (this['specType'] == 0x2 || this['specType'] == 0x3) {
    var _0x299711 = 0x0,
        _0x2466f4 = -this['rectH'] / 0x2;
    for (; _0x2466f4 + _0xc9de90 < this['rectH'] / 0x2;) {
        _0x299711 = -_0xc9de90 / 0x2;
        var _0x36b3a4 = Math['max'](0x0, Math['round'](_0x5a9e0b(0x0, 0x3)) - 0x1);
        _0x596a60['push']({
            'x': _0x299711,
            'y': _0x2466f4,
            'w': _0xc9de90,
            'h': _0xc9de90,
            'img': _0x36b3a4,
            'r': _0x5a9e0b(0x0, 0xb4)
        }), _0x2466f4 += _0xc9de90 * _0x4aa5ee;
    }
} else {
    var _0x2466f4 = 0x0,
        _0x299711 = _0xc9de90 / 0x4 - this['rectW'] / 0x2;
    for (; _0x299711 + _0xc9de90 < this['rectW'] / 0x2;) {
        _0x2466f4 = -_0xc9de90 / 0x2;
        var _0x36b3a4 = Math['max'](0x0, Math['round'](_0x5a9e0b(0x0, 0x3)) - 0x1);
        _0x596a60['push']({
            'x': _0x299711,
            'y': _0x2466f4,
            'w': _0xc9de90,
            'h': _0xc9de90,
            'img': _0x36b3a4,
            'r': _0x5a9e0b(0x0, 0xb4)
        }), _0x299711 += _0xc9de90 * _0x4aa5ee;
    }
}
this['biomePattern'] = _0x596a60;
}, _0x1c425b['prototype']['drawTerrainFeatures'] = function () {
if (this['biomePattern'] && this['biomePattern']['length'] > 0x0)
    for (i = 0x0; i < this['biomePattern']['length']; i++) {
        var _0x1145e3 = this['biomePattern'][i];
        _0x4ac9cf['save'](), _0x4ac9cf['translate'](_0x1145e3['x'], _0x1145e3['y']);
        var _0x305408 = 0x0,
            _0xfa63fc = 0x0,
            _0x592170 = _0x1145e3['w'],
            _0x4c568b = _0x1145e3['h'],
            _0x31c75e = '0_' + _0x1145e3['img'],
            _0x4ba3bf = 'gameobj/' + this['oType'] + '/' + _0x31c75e + '.png',
            _0x43c7b0 = this['getSkinImageObj'](_0x4ba3bf);
        _0x43c7b0 && _0x4ac9cf['drawImage'](_0x43c7b0, _0x305408, _0xfa63fc, _0x592170, _0x4c568b), _0x4ac9cf['restore']();
    }
}, _0x1c425b['prototype']['drawBox'] = function (_0xe39179, _0x39c9bb, _0x3eb39e, _0x144d32) {
_0x4ac9cf['beginPath'](), _0x4ac9cf['fillStyle'] = 'red', _0x4ac9cf['moveTo'](_0xe39179, _0x39c9bb), _0x4ac9cf['lineTo'](_0xe39179, _0x144d32), _0x4ac9cf['lineTo'](_0x3eb39e, _0x144d32), _0x4ac9cf['lineTo'](_0x3eb39e, _0x39c9bb), _0x4ac9cf['closePath'](), _0x4ac9cf['fill']();
};

function _0x1c425b() {
_0x1c425b['superClass']['call'](this, _0x34e8b4), this['clientBatchDraw'] = !![];
}
window['River'] = _0x1c425b, _0x3360d0['setCustomClassForGameObjType'](_0x1c425b, _0x34e8b4);
var _0xec194 = _0x5adfe2;
_0x5efeef['prototype'] = Object['create'](_0xec194['prototype']), _0x5efeef['prototype']['constructor'] = _0x5efeef, _0x5efeef['superClass'] = _0xec194, _0x5efeef['prototype']['LakeSize'] = 0x1, _0x5efeef['prototype']['isEmptyLake'] = ![], _0x5efeef['prototype']['isDeathLake'] = ![], _0x5efeef['prototype']['updateZ'] = function () {
if (this['isEmptyLake']) this['z'] = -0x9d;
else this['z'] = -0xa0;
}, _0x5efeef['prototype']['customDraw'] = function (_0x4615da) {
if (this['isDeathLake']) _0x4ac9cf['fillStyle'] = _0x249ca3, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), this['poisonBody'](_0x414722, this['LakeSize'], this['poison']);
else this['drawBody'](_0x414722, 0x1);
}, _0x5efeef['prototype']['poisonBody'] = function (_0x293379, _0x5a8f12, _0x4205e2) {
{
    var _0x49d5ef = '#547d24',
        _0x388f79 = this['rad'] * _0x5a8f12;
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1;
    if (!(_0x25ea67 == 0x2)) _0x4ac9cf['rotate'](this['rPer'] * 0x2 * Math['PI']);
    var _0xe041a8 = 5.5,
        _0x42f665 = _0x2dd807('lake', this['spawnTime']);
    _0x42f665 !== undefined && _0x42f665 != null && (this['theFrame'] = _0x42f665);
    _0xe041a8 = this['theFrame'];
    var _0x549ef2 = 0x4;
    _0x4ac9cf['fillStyle'] = _0x249ca3, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, _0x388f79, 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['fillStyle'] = _0x293379;
    var _0x18a0a2 = _0x388f79 * 0.45,
        _0x5d87b5 = _0x388f79 * 0.45 + 0xf * this['rPer'],
        _0x3f35e3 = _0x388f79 * 0.5,
        _0x5680be = _0x388f79 * 0.5 + 0xf * this['rPer'],
        _0x1c7c92 = -_0x388f79 * 0.55 * 0.707,
        _0x1248e = +_0x388f79 * 0.55 * 0.707 + 0xf * this['rPer'],
        _0x4b689b = -_0x388f79 * 0.75,
        _0x14d200 = -_0x388f79 * 0.35 + 0xf * this['rPer'],
        _0x3f2d06 = _0x388f79 + 0xa * this['rPer'],
        _0x26565a = 0x32 * this['rPer'],
        _0x28b477 = _0x388f79 - 0x14 * this['rPer'],
        _0x526759 = 0x32 * this['rPer'];
    _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, _0x388f79 - _0x549ef2 + _0xe041a8), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['save'](), _0x4ac9cf['fillStyle'] = _0x49d5ef, _0x4ac9cf['globalAlpha'] = _0x4205e2, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, _0x388f79 - _0x549ef2 + _0xe041a8), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['restore'](), _0x4ac9cf['restore']();
}
}, _0x5efeef['prototype']['drawBody'] = function (_0x9e8f58, _0x144bc6, _0x3a39fb) {
{
    var _0x1a0013 = this['rad'] * _0x144bc6;
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = _0x3a39fb;
    if (!_0x50a9ba) {
        if (!(_0x25ea67 == 0x2)) _0x4ac9cf['rotate'](this['rPer'] * 0x2 * Math['PI']);
    }
    var _0x120ba4 = 0x0;
    if (!_0x50a9ba && !this['isEmptyLake']) {
        var _0x105227 = (_0x397f50 - this['spawnTime']) / 0x3e8,
            _0x367431 = 0x4,
            _0x1bd63d = 5.5;
        _0x120ba4 = _0x1bd63d * Math['sin'](0x2 * Math['PI'] / _0x367431 * _0x105227);
    }
    var _0x59c9e2 = 0x4;
    !this['isEmptyLake'] && (_0x4ac9cf['fillStyle'] = _0x249ca3, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, _0x1a0013, 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill']());
    if (this['curBiome'] == _0x4f2b40) _0x4ac9cf['fillStyle'] = '#8da0d6';
    else _0x4ac9cf['fillStyle'] = _0x414722;
    _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, _0x1a0013 - _0x59c9e2 + _0x120ba4), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), !(_0x50a9ba && _0x25ea67 == 0x2) && (_0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](_0x1a0013 * 0.45, -_0x1a0013 * 0.45 + 0xf * this['rPer'], Math['max'](0x0, _0x1a0013 * 0.5 + _0x120ba4), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](_0x1a0013 * 0.5, _0x1a0013 * 0.5 + 0xf * this['rPer'], Math['max'](0x0, _0x1a0013 * 0.4 + _0x120ba4), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-_0x1a0013 * 0.55 * 0.707, +_0x1a0013 * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, _0x1a0013 * 0.5 + _0x120ba4), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-_0x1a0013 * 0.75, -_0x1a0013 * 0.35 + 0xf * this['rPer'], Math['max'](0x0, _0x1a0013 * 0.3 + _0x120ba4), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](_0x1a0013 + 0xa * this['rPer'], 0x32 * this['rPer'], this['specType'] == 0x0 ? 0x8 : 0x4, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](_0x1a0013 - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill']()), _0x4ac9cf['restore']();
}
}, _0x5efeef['prototype']['onLerpUpdate'] = function (_0x266854) {
this['LakeSize'] = _0x266854 * (this['n_LakeSize'] - this['o_LakeSize']) + this['o_LakeSize'];
}, _0x5efeef['prototype']['readUpdatedProperty'] = function (_0x4c4ef7, _0x326520) {
if (_0x4c4ef7 == _0x611aa3) this['n_LakeSize'] = _0x326520['readUInt16']() / 0x3e8, this['o_LakeSize'] = this['LakeSize'];
else {
    if (_0x4c4ef7 == _0x3040b1) this['poison'] = _0x326520['readUInt16']() / 0x3e8;
    else _0x4c4ef7 == _0x3b9605 && (this['isEmptyLake'] = _0x326520['readUInt8']() == 0x1);
}
}, _0x5efeef['prototype']['readCustomData_onNewlyVisible'] = function (_0x1ac6c8) {
this['isEmptyLake'] = _0x1ac6c8['readUInt8']() == 0x1, this['isDeathLake'] = _0x1ac6c8['readUInt8']() == 0x1, this['isDeathLake'] && (this['LakeSize'] = this['o_LakeSize'] = this['n_LakeSize'] = 0x1, this['LakeStream'] = _0x1ac6c8['readUInt16']());
};

function _0x5efeef() {
_0x5efeef['superClass']['call'](this, _0x1a341c);
}
window['Lake'] = _0x5efeef, _0x3360d0['setCustomClassForGameObjType'](_0x5efeef, _0x1a341c);
var _0xec194 = _0x5adfe2;
_0xec0529['prototype'] = Object['create'](_0xec194['prototype']), _0xec0529['prototype']['constructor'] = _0xec0529, _0xec0529['superClass'] = _0xec194, _0xec0529['prototype']['updateZ'] = function () {
this['z'] = 0x3f2;
}, _0xec0529['prototype']['customDraw'] = function (_0x1666e9) {
var _0x1a19aa = 0x0,
    _0x58261e = (_0x397f50 - this['spawnTime']) / 0x3e8,
    _0x127b65 = _0x23fdc7(_0x58261e, 0x1, 0.3, 0x2),
    _0x574abe = this['getSkinImageObj']('img/viralpandemic/virus.png');
if (_0x574abe) {
    var _0x2fd34b = this['rad'] * 1.2 + _0x127b65;
    if (this['stickyVirus']) _0x4ac9cf['rotate'](this['angle']);
    else {
        if (this['angleR'] == undefined) this['angleR'] = _0x4eafe3(0.01, 0.09);
        this['angleR'] += 0.01, _0x4ac9cf['rotate'](this['angleR']);
    }
    _0x4ac9cf['drawImage'](_0x574abe, -_0x2fd34b, -_0x2fd34b, 0x2 * _0x2fd34b, 0x2 * _0x2fd34b);
} else this['drawOutlinedCircle']('', 'white');
}, _0xec0529['prototype']['stickyVirus'] = ![], _0xec0529['prototype']['readUpdatedProperty'] = function (_0xbc49ad, _0x1c77ad) {
_0xbc49ad == _0x45a9ac && (this['stickyVirus'] = _0x1c77ad['readUInt8']() == 0x1);
};

function _0xec0529() {
_0xec0529['superClass']['call'](this, _0x2def5c), _0xec0529['prototype']['easeAngleChanges'] = !![];
}
window['Virus'] = _0xec0529, _0x3360d0['setCustomClassForGameObjType'](_0xec0529, _0x2def5c);
var _0xec194 = _0x5adfe2;
_0x1b54f2['prototype'] = Object['create'](_0xec194['prototype']), _0x1b54f2['prototype']['constructor'] = _0x1b54f2, _0x1b54f2['superClass'] = _0xec194, _0x1b54f2['prototype']['foodType'] = 0x0, _0x1b54f2['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x1b54f2['prototype']['customDraw'] = function (_0x4b6c1d) {
_0x4ac9cf['save']();
var _0x1b8547 = this['getImmunityFoodName'](),
    _0x32a993 = this['getSkinImageObj']('img/viralpandemic/' + _0x1b8547 + '_e.png');
if (_0x32a993) {
    var _0x3915c0 = this['rad'];
    _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['rPer'] * 0.5 * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x32a993, -_0x3915c0, -_0x3915c0, 0x2 * _0x3915c0, 0x2 * _0x3915c0), _0x4ac9cf['restore']();
}
_0x4ac9cf['restore']();
}, _0x1b54f2['prototype']['getImmunityFoodName'] = function () {
var _0x36ff95 = 'cabbage';
switch (this['foodType']) {
case 0x1:
    _0x36ff95 = 'cabbage';
    break;
case 0x2:
    _0x36ff95 = 'dragonfruit';
    break;
case 0x3:
    _0x36ff95 = 'onion';
    break;
case 0x4:
    _0x36ff95 = 'papaya';
    break;
case 0x5:
    _0x36ff95 = 'papayaslice';
    break;
case 0x6:
    _0x36ff95 = 'peach';
    break;
case 0x7:
    _0x36ff95 = 'peapod';
    break;
case 0x8:
    _0x36ff95 = 'peapod1';
    break;
}
return _0x36ff95;
}, _0x1b54f2['prototype']['readCustomData_onNewlyVisible'] = function (_0x1a6eea) {
this['foodType'] = _0x1a6eea['readUInt8']();
};

function _0x1b54f2() {
_0x1b54f2['superClass']['call'](this, _0x3470bb), this['doesDrawEffectScale'] = !![];
}
window['ImmunityFood'] = _0x1b54f2, _0x3360d0['setCustomClassForGameObjType'](_0x1b54f2, _0x3470bb);
var _0xec194 = _0x5adfe2;
_0x566701['prototype'] = Object['create'](_0xec194['prototype']), _0x566701['prototype']['constructor'] = _0x566701, _0x566701['superClass'] = _0xec194;
var _0x30b44e = 0x0,
_0xc44f29 = 0x0;
_0x566701['prototype']['updateZ'] = function () {
this['z'] = 0x18706;
}, _0x566701['prototype']['customDraw'] = function (_0x5d7417) {
_0x4ac9cf['save']();
if (this['isEnabled']) _0x4ac9cf['globalAlpha'] = 0.4;
else _0x4ac9cf['globalAlpha'] = 0.2;
_0x4ac9cf['fillStyle'] = 'black', _0x4ac9cf['fillRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']), _0x4ac9cf['strokeRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']);
if (this['isEnabled']) _0x4ac9cf['globalAlpha'] = this['opacity'] * 0.5;
else _0x4ac9cf['globalAlpha'] = this['opacity'] * 0.2;
_0x4ac9cf['fillStyle'] = this['color'], _0x4ac9cf['fillRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']), _0x4ac9cf['lineWidth'] = '3';
this['btnStroke'] > 0x0 && (_0x4ac9cf['globalAlpha'] = this['opacity'] * 0.9, _0x4ac9cf['strokeStyle'] = this['color'], _0x4ac9cf['strokeRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']));
_0x4ac9cf['restore']();
if (this['isEnabled']) {
    var _0x1e3ce8 = this['x'] - this['rectW'] / 0x2,
        _0x9c2167 = this['x'] + this['rectW'] / 0x2,
        _0x3b46b3 = this['y'] - this['rectH'] / 0x2,
        _0x3acb84 = this['y'] + this['rectH'] / 0x2,
        _0x1e4ec9 = ![];
    if (_0x23778f > _0x1e3ce8 && _0x23778f < _0x9c2167 && _0x21d708 > _0x3b46b3 && _0x21d708 < _0x3acb84 || _0x2cb6f2 == this['hotkey']) _0x1e4ec9 = !![], _0xc44f29 = _0x30b44e = this['id'], _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = this['opacity'], _0x4ac9cf['fillStyle'] = this['color'], _0x4ac9cf['fillRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']), this['hoverStroke'] > 0x0 && (_0x4ac9cf['globalAlpha'] = 0x1, _0x4ac9cf['lineWidth'] = this['hoverStroke'], _0x4ac9cf['strokeStyle'] = _0x4fa567, _0x4ac9cf['strokeRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH'])), _0x4ac9cf['restore']();
    else {
        if (_0xc44f29 == this['id']) _0x30b44e = 0x0;
    }
}
null != this['txtLabel'] && (_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = _0x1e4ec9 ? 0x1 : 0.6, _0x1e4ec9 ? (this['txtLabel']['setFontSize'](0xc), this['txtLabel']['setColor']('white'), this['txtLabel']['setStroke'](0x2)) : (this['txtLabel']['setColor'](this['isEnabled'] ? 'white' : 'black'), this['txtLabel']['setStroke'](0x0)), this['txtLabel']['draw'](), _0x4ac9cf['restore']());
if (this['isEnabled'] && this['hotkey'] != '') {
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.2, _0x4ac9cf['fillStyle'] = 'white';
    var _0x3502a0 = -this['rectW'] / 0x2 + 0x2,
        _0x5974b2 = this['rectH'] / 0x2 - 0xc;
    _0x4ac9cf['fillRect'](_0x3502a0, _0x5974b2, 0xa, 0xa), this['txtHotkey']['x'] = _0x3502a0 + 0x5, this['txtHotkey']['y'] = _0x5974b2 + 0x5, _0x4ac9cf['globalAlpha'] = 0.7, this['txtHotkey']['draw'](), _0x4ac9cf['restore']();
}
}, _0x566701['prototype']['optionID'] = 0x0, _0x566701['prototype']['optionType'] = 0x0, _0x566701['prototype']['label'] = 0x0, _0x566701['prototype']['highlight'] = 0x0, _0x566701['prototype']['txtLabel'] = null, _0x566701['prototype']['txtHotkey'] = null, _0x566701['prototype']['isEnabled'] = !![], _0x566701['prototype']['hotkey'] = '', _0x566701['prototype']['readCustomData_onNewlyVisible'] = function (_0x59298c) {
_0x2cb6f2 = null, _0x869bc6 = +new Date() + 0x3e8, this['optionID'] = _0x59298c['readUInt32']();
var _0x579c8f = _0x59298c['readString']();
_0x579c8f = _0x579c8f['replace']('\x0a', 'newline'), console['log'](_0x579c8f);
var _0x4092cd = JSON['parse'](_0x579c8f);
this['label'] = _0x4092cd['label']['replace']('newline', '\x0a'), this['optionType'] = _0x4092cd['value'], this['color'] = _0x4092cd['color'], this['opacity'] = _0x4092cd['opacity'] / 0x64, this['hoverStroke'] = _0x4092cd['hoverStroke'], this['btnStroke'] = _0x4092cd['btnStroke'], this['isEnabled'] = Number(_0x4092cd['enabled']) == 0x1, this['hotkey'] = _0x4092cd['hotkey'], !this['isEnabled'] && (this['opacity'] *= 0.5), null == this['txtLabel'] && (this['txtLabel'] = new _0x128c61(0xc, '#FFFFFF'), this['txtLabel']['x'] = 0x0, this['txtLabel']['y'] = 0x0, this['txtLabel']['strokeW'] = 0x0, this['txtLabel']['multiLine'] = !![], this['txtLabel']['renderScale'] = 0x2, this['txtLabel']['setText'](this['label'])), this['isEnabled'] && this['hotkey'] != '' && null == this['txtHotkey'] && (this['txtHotkey'] = new _0x128c61(0x8, '#FFFFFF'), this['txtHotkey']['x'] = 0x0, this['txtHotkey']['y'] = 0x0, this['txtHotkey']['strokeW'] = 0x0, this['txtHotkey']['multiLine'] = ![], this['txtHotkey']['renderScale'] = 0x2, this['txtHotkey']['setText'](this['hotkey']), this['txtHotkey']['setColor']('white'), this['txtHotkey']['setStroke'](0x0));
};
var _0xd3163c = 0x81;

function _0x566701() {
_0x566701['superClass']['call'](this, _0xd3163c);
}
window['GameOptionButton'] = _0x566701, _0x3360d0['setCustomClassForGameObjType'](_0x566701, _0xd3163c);
var _0xec194 = _0x5adfe2;
_0x5a73f6['prototype'] = Object['create'](_0xec194['prototype']), _0x5a73f6['prototype']['constructor'] = _0x5a73f6, _0x5a73f6['superClass'] = _0xec194, _0x5a73f6['prototype']['updateZ'] = function () {
this['z'] = 0x18706;
}, _0x5a73f6['prototype']['customDraw'] = function (_0x566163) {
_0x4ac9cf['save']();
var _0x18b9e3 = this['rectW'],
    _0x56cee4 = this['rectH'];
_0x4ac9cf['globalAlpha'] = 0.3, _0x4ac9cf['fillStyle'] = 'black', _0x4ac9cf['fillRect'](-_0x18b9e3 / 0x2, -_0x56cee4 / 0x2, _0x18b9e3, _0x56cee4), _0x4ac9cf['globalAlpha'] = 0.15, _0x4ac9cf['fillStyle'] = 'white', _0x18b9e3 -= 0x3, _0x56cee4 -= 0x3, _0x4ac9cf['fillRect'](-_0x18b9e3 / 0x2, -_0x56cee4 / 0x2, _0x18b9e3, _0x56cee4), _0x4ac9cf['stroke'](), _0x4ac9cf['restore']();
null != this['txtTitle'] && (_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1, this['txtTitle']['setFontSize'](0x12), this['txtTitle']['setColor']('white'), this['txtTitle']['setStroke'](0x2), this['txtTitle']['draw'](), _0x4ac9cf['restore']());
null != this['txtMessage'] && (_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1, this['txtMessage']['draw'](), _0x4ac9cf['restore']());
if (null != this['timerTxt']) {
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1;
    var _0x18b9e3 = 0x19,
        _0x56cee4 = 0x19;
    _0x4ac9cf['globalAlpha'] = 0.5, _0x4ac9cf['fillStyle'] = 'red';
    var _0x399b5c = this['rectW'] / 0x2 - _0x18b9e3 - 1.5,
        _0x1befd1 = -this['rectH'] / 0x2 + 1.5;
    _0x4ac9cf['fillRect'](_0x399b5c, _0x1befd1, _0x18b9e3, _0x56cee4), _0x4ac9cf['globalAlpha'] = 0x1, this['timerTxt']['setFontSize'](0x10), this['timerTxt']['setColor']('white'), this['timerTxt']['setStroke'](0x2);
    var _0x1d57ed = this['timeoutTime'] - Math['round']((+new Date() - this['spawnTime']) / 0x3e8);
    this['timerTxt']['setText'](_0x1d57ed), this['timerTxt']['x'] = _0x399b5c + 12.5, this['timerTxt']['y'] = _0x1befd1 + 12.5, this['timerTxt']['draw'](), _0x4ac9cf['restore']();
}
_0x4ac9cf['save'](), _0x23bb00(this), _0x4ac9cf['restore']();
}, _0x5a73f6['prototype']['option1'] = null, _0x5a73f6['prototype']['option2'] = null, _0x5a73f6['prototype']['option3'] = null, _0x5a73f6['prototype']['option4'] = null;

function _0x23bb00(_0x492b80) {
var _0xf621dd = _0x492b80['rectW'] * 0.5,
    _0x1923f2 = _0x492b80['rectH'] * 0.35,
    _0x58472c = -_0xf621dd / 0x2,
    _0x4ad4af = -0x14;
_0x4ac9cf['globalAlpha'] = 0.2, _0x4ac9cf['fillStyle'] = 'black', _0x4ac9cf['fillRect'](_0x58472c, _0x4ad4af, _0xf621dd, _0x1923f2), _0x4ac9cf['globalAlpha'] = 0.7, _0x4ac9cf['fillStyle'] = 'limegreen', _0x4ac9cf['fillRect'](_0x58472c, _0x4ad4af, _0xf621dd, 0x14), _0x3b43c7('options', _0x492b80, _0x58472c, _0x4ad4af + 2.5, _0xf621dd, _0x1923f2, 'ARENA OPTIONS', 'white', 0x2), _0xf621dd = 0x64, _0x1923f2 = 0xf, _0x58472c = -_0xf621dd / 0x2, _0x4ad4af += 0x7, _0x4ac9cf['globalAlpha'] = 0x1, _0x4ac9cf['fillStyle'] = 'green', _0x4ad4af += _0x1923f2 + 0x5, _0x4ac9cf['globalAlpha'] = 0.7, _0x3b43c7('option2', _0x492b80, _0x58472c, _0x4ad4af, _0xf621dd, _0x1923f2, (_0x492b80['data']['watr'] == Number(0x1) ? 'INFINITE' : 'LIMITED') + ' WATER', 'white', 0x0), _0x4ad4af += _0x1923f2, _0x3b43c7('option3', _0x492b80, _0x58472c, _0x4ad4af, _0xf621dd, _0x1923f2, (_0x492b80['data']['hp'] == Number(0x1) ? 'INFINITE' : 'LIMITED') + ' HEALTH', 'white', 0x0), _0x4ad4af += _0x1923f2, _0x3b43c7('option4', _0x492b80, _0x58472c, _0x4ad4af, _0xf621dd, _0x1923f2, 'TURN ' + (_0x492b80['data']['speed'] == Number(0x1) ? 'NORMAL' : 'FAST'), 'white', 0x0), _0x4ad4af += _0x1923f2, _0x3b43c7('option5', _0x492b80, _0x58472c, _0x4ad4af, _0xf621dd, _0x1923f2, _0x492b80['data']['climax'] == Number(0x1) ? 'LAST MAN STANDING' : _0x492b80['data']['bites'] + ' BITES WINS', 'white', 0x0), _0x4ad4af += _0x1923f2, _0x3b43c7('option6', _0x492b80, _0x58472c, _0x4ad4af, _0xf621dd, _0x1923f2, _0x492b80['data']['wall'] == Number(0x1) ? 'WALL DAMAGE' : 'NO WALL DAMAGE', 'white', 0x0);
}

function _0x3b43c7(_0x26b9a0, _0x267c71, _0x346349, _0x4e09b2, _0x120275, _0xe0322b, _0x431482, _0x50b3ea, _0x22d9b3) {
if (_0x22d9b3 == undefined) _0x22d9b3 = 0x0;
null == _0x267c71[_0x26b9a0] ? (_0x267c71[_0x26b9a0] = new _0x128c61(0xa, _0x50b3ea), _0x267c71[_0x26b9a0]['x'] = _0x346349, _0x267c71[_0x26b9a0]['y'] = _0x4e09b2, _0x267c71[_0x26b9a0]['strokeW'] = 0x0, _0x267c71[_0x26b9a0]['multiLine'] = !![], _0x267c71[_0x26b9a0]['renderScale'] = 0x2, _0x267c71[_0x26b9a0]['setStroke'](_0x22d9b3), _0x267c71[_0x26b9a0]['setText'](_0x431482)) : (_0x267c71[_0x26b9a0]['x'] = _0x346349 + _0x120275 / 0x2, _0x267c71[_0x26b9a0]['y'] = _0x4e09b2 + 0x7, _0x267c71[_0x26b9a0]['draw']());
}
_0x5a73f6['prototype']['timeoutTime'] = 0x0, _0x5a73f6['prototype']['optionType'] = 0x0, _0x5a73f6['prototype']['label'] = 0x0, _0x5a73f6['prototype']['highlight'] = 0x0, _0x5a73f6['prototype']['txtTitle'] = null, _0x5a73f6['prototype']['txtMessage'] = null, _0x5a73f6['prototype']['timerTxt'] = null, _0x5a73f6['prototype']['screenMsg'] = null, _0x5a73f6['prototype']['screenTitle'] = null, _0x5a73f6['prototype']['invitee_id'] = null, _0x5a73f6['prototype']['spiderX'] = null, _0x5a73f6['prototype']['spiderY'] = null, _0x5a73f6['prototype']['beforeCustomDraw'] = function (_0x3051a2) {
_0x4ac9cf['save'](), _0x4ac9cf['strokeStyle'] = 'white', _0x4ac9cf['globalAlpha'] = 0x1, _0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](this['x'], this['y']), _0x4ac9cf['lineTo'](this['spiderX'], this['spiderY']), _0x4ac9cf['stroke'](), _0x4ac9cf['restore']();
}, _0x5a73f6['prototype']['worldUpd_readMsgUpdate'] = function (_0x2d79c5) {
var _0x3ff711 = _0x2d79c5['readUInt16']() / 0x4,
    _0x2571d0 = _0x2d79c5['readUInt16']() / 0x4;
this['setMovedToPos'](_0x3ff711, _0x2571d0);
var _0x586f11 = _0x2d79c5['readUInt32']() / 0x64,
    _0x5076c6 = _0x2d79c5['readUInt32']() / 0x64;
this['spider_ox'] = this['spiderX'], this['spider_oy'] = this['spiderY'], this['spider_nx'] = _0x586f11, this['spider_ny'] = _0x5076c6;
}, _0x5a73f6['prototype']['onLerpUpdate'] = function (_0x149999) {
this['spiderX'] = _0x149999 * (this['spider_nx'] - this['spider_ox']) + this['spider_ox'], this['spiderY'] = _0x149999 * (this['spider_ny'] - this['spider_oy']) + this['spider_oy'];
}, _0x5a73f6['prototype']['data'] = null, _0x5a73f6['prototype']['readCustomData_onNewlyVisible'] = function (_0x2daa52) {
var _0x4615a9 = _0x2daa52['readString'](),
    _0x4151a6 = _0x2daa52['readString'](),
    _0x56058d = _0x2daa52['readUInt8'](),
    _0x28b146 = _0x2daa52['readBitGroup'](),
    _0x39bf74 = _0x28b146['getBool']() ? 0x1 : 0x0,
    _0x171b2f = _0x28b146['getBool']() ? 0x1 : 0x0,
    _0x537a8b = _0x28b146['getBool']() ? 0x1 : 0x0,
    _0x4afab1 = _0x28b146['getBool']() ? 0x1 : 0x0,
    _0x4d683c = _0x28b146['getBool']() ? 0x1 : 0x0,
    _0x42717a = 0x0;
if (!_0x4d683c) _0x42717a = _0x2daa52['readUInt8']();
var _0x47ec5d = {
    'title': _0x4615a9,
    'invtedBy': _0x4151a6,
    'watr': _0x39bf74,
    'hp': _0x171b2f,
    'speed': _0x537a8b,
    'climax': _0x4d683c,
    'wall': _0x4afab1,
    'time': _0x56058d,
    'bites': _0x42717a
};
this['spider_ox'] = this['spiderX'] = this['spider_nx'] = this['x'], this['spider_oy'] = this['spiderY'] = this['spider_ny'] = this['y'];
var _0x36344e = '\x0a',
    _0x59fcde = '-br-';
this['data'] = _0x47ec5d, this['timeoutTime'] = Number(_0x47ec5d['time']);
null == this['txtTitle'] && (this['txtTitle'] = new _0x128c61(0x12, '#FFFFFF'), this['txtTitle']['x'] = 0x0, this['txtTitle']['y'] = this['rectH'] / 0x2 * -0.85, this['txtTitle']['strokeW'] = 0x0, this['txtTitle']['multiLine'] = !![], this['txtTitle']['renderScale'] = 0x2, this['txtTitle']['setText'](this['data']['title']));
if (null == this['txtMessage']) {
    this['txtMessage'] = new _0x128c61(0x10, '#FFFFFF'), this['txtMessage']['x'] = 0x0, this['txtMessage']['y'] = this['txtTitle']['y'] + 0x28, this['txtMessage']['strokeW'] = 0x0, this['txtMessage']['multiLine'] = !![], this['txtMessage']['renderScale'] = 0x2;
    if (this['data']['invtedBy'] == '') this['data']['invtedBy'] = 'mope.io';
    this['txtMessage']['setText'](this['data']['invtedBy'] + '\x0ainvites you for 1v1 fight!');
}
null == this['timerTxt'] && (this['timerTxt'] = new _0x128c61(0x10, '#FFFFFF'), this['timerTxt']['x'] = 0x0, this['timerTxt']['y'] = 0x0, this['timerTxt']['strokeW'] = 0x0, this['timerTxt']['multiLine'] = ![], this['timerTxt']['renderScale'] = 0x2, this['timerTxt']['setText']('15'));
};
var _0x5efe9d = 0x82;

function _0x5a73f6() {
_0x5a73f6['superClass']['call'](this, _0x5efe9d);
}
window['ScreenMessage'] = _0x5a73f6, _0x3360d0['setCustomClassForGameObjType'](_0x5a73f6, _0x5efe9d);
var _0x13295b = _0x53f174,
_0xec194 = _0x5adfe2;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194, _0x53f174['prototype']['customType'] = 0x0, _0x53f174['prototype']['updateZ'] = function () {
this['z'] = 0x3e9;
}, _0x53f174['prototype']['customDraw'] = function (_0x5be418) {}, _0x53f174['prototype']['setObjTypes'] = function (_0x5ec1ab, _0x57f100) {
this['oType'] = _0x5ec1ab, this['customType'] = _0x57f100;
}, _0x53f174['prototype']['readCustomData_onNewlyVisible'] = function (_0x385c26) {
_0x53f174['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x385c26);
}, _0x53f174['prototype']['readCustomData_onUpdate'] = function (_0x561f78) {
_0x53f174['superClass']['prototype']['readCustomData_onUpdate']['call'](this, _0x561f78);
};
var _0xe2dd9c = 0x80;

function _0x53f174() {
_0x53f174['superClass']['call'](this, _0xe2dd9c), _0x53f174['prototype']['easeAngleChanges'] = ![];
}
window['CustomObj'] = _0x53f174, _0x3360d0['setCustomClassForGameObjType'](_0x53f174, _0xe2dd9c), _0x3360d0['addCustomClassType'](_0xe2dd9c);
var _0x13295b = _0x297e1,
_0xec194 = _0x53f174;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194, _0x297e1['prototype']['customDraw'] = function (_0x17144e) {
_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.095, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, this['rad'], 0x0, 0x2 * Math['PI'], ![]), _0x4ac9cf['arc'](0x0, 0x0, this['rad'] * 0.9, 0x0, 0x2 * Math['PI'], !![]), _0x4ac9cf['fillStyle'] = 'red', _0x4ac9cf['closePath'](), _0x4ac9cf['fill'](), _0x4ac9cf['restore']();
var _0x498b40 = 0xf;
_0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['angle'] + _0x142401(-0x5a));
var _0x440841 = this['getSkinImageObj']('img/custom/trunk2.png');
if (_0x440841) {
    var _0x1ad583 = 0x3c;
    _0x4ac9cf['save'](), _0x4ac9cf['drawImage'](_0x440841, -_0x1ad583, this['rad'] - _0x1ad583 + _0x498b40, 0x2 * _0x1ad583, 0x2 * _0x1ad583), _0x4ac9cf['restore']();
}
var _0x440841 = this['getSkinImageObj']('img/custom/trunk1.png');
if (_0x440841) {
    var _0x1ad583 = 0x3c;
    _0x4ac9cf['save'](), _0x4ac9cf['drawImage'](_0x440841, -_0x1ad583, -this['rad'] - _0x1ad583 - _0x498b40, 0x2 * _0x1ad583, 0x2 * _0x1ad583), _0x4ac9cf['restore']();
}
_0x4ac9cf['restore']();
}, _0x297e1['prototype']['readCustomData_onNewlyVisible'] = function (_0x219403) {
_0x297e1['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x219403);
};

function _0x297e1() {
_0x297e1['superClass']['call'](this);
}
window['Slingshot'] = _0x297e1;
var _0x447c76 = 0x1;
_0x3360d0['setCustomClassForGameObjType'](_0x297e1, _0xe2dd9c, _0x447c76);
var _0x13295b = _0xb6b1b4,
_0xec194 = _0x53f174;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194, _0xb6b1b4['prototype']['updateZ'] = function () {
this['z'] = 0x3f2 + this['rad'];
}, _0xb6b1b4['prototype']['customDraw'] = function (_0x5ac8dd) {
_0x4ac9cf['save']();
var _0x4aefee = this['getSkinImageObj']('img/custom/pad.png');
if (_0x4aefee) {
    var _0x3de997 = this['rad'];
    _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['angle'] + _0x142401(-0x5a)), _0x4ac9cf['drawImage'](_0x4aefee, -_0x3de997, -_0x3de997, 0x2 * _0x3de997, 0x2 * _0x3de997), _0x4ac9cf['restore']();
}
_0x4ac9cf['restore']();
}, _0xb6b1b4['prototype']['ropeMargin'] = 0x0, _0xb6b1b4['prototype']['beforeCustomDraw'] = function (_0x41cde2) {
var _0xd59e33 = 0xa;
_0x4ac9cf['save'](), _0x4ac9cf['strokeStyle'] = '#4f4f4f', _0x4ac9cf['lineWidth'] = _0xd59e33, _0x4ac9cf['globalAlpha'] = 0x1, _0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](this['x'], this['y']), _0x4ac9cf['lineTo'](this['base1_X'], this['base1_Y']), _0x4ac9cf['stroke'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](this['x'], this['y']), _0x4ac9cf['lineTo'](this['base2_X'], this['base2_Y']), _0x4ac9cf['stroke'](), _0x4ac9cf['restore'](), _0x4ac9cf['save'](), _0x4ac9cf['strokeStyle'] = '#222222', _0x4ac9cf['lineWidth'] = _0xd59e33 * 0.6, _0x4ac9cf['globalAlpha'] = 0x1, _0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](this['x'], this['y']), _0x4ac9cf['lineTo'](this['base1_X'], this['base1_Y']), _0x4ac9cf['stroke'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](this['x'], this['y']), _0x4ac9cf['lineTo'](this['base2_X'], this['base2_Y']), _0x4ac9cf['stroke'](), _0x4ac9cf['restore']();
}, _0xb6b1b4['prototype']['readCustomData_onNewlyVisible'] = function (_0x3764e6) {
_0xb6b1b4['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x3764e6), this['base1_ox'] = this['base1_X'] = this['base1_nx'] = this['x'], this['base1_oy'] = this['base1_Y'] = this['base1_ny'] = this['y'], this['base2_ox'] = this['base2_X'] = this['base2_nx'] = this['x'], this['base2_oy'] = this['base2_Y'] = this['base2_ny'] = this['y'], this['readBaseData'](_0x3764e6);
}, _0xb6b1b4['prototype']['readBaseData'] = function (_0x2e3c0a) {
var _0x1f1f10 = _0x2e3c0a['readUInt32']() / 0x64,
    _0x400ea1 = _0x2e3c0a['readUInt32']() / 0x64,
    _0x206ae0 = _0x2e3c0a['readUInt32']() / 0x64,
    _0x2bfb46 = _0x2e3c0a['readUInt32']() / 0x64;
this['base1_ox'] = this['base1_X'], this['base1_oy'] = this['base1_Y'], this['base1_nx'] = _0x1f1f10, this['base1_ny'] = _0x400ea1, this['base2_ox'] = this['base2_X'], this['base2_oy'] = this['base2_Y'], this['base2_nx'] = _0x206ae0, this['base2_ny'] = _0x2bfb46;
}, _0xb6b1b4['prototype']['base1_X'] = 0x0, _0xb6b1b4['prototype']['base1_Y'] = 0x0, _0xb6b1b4['prototype']['base2_X'] = 0x0, _0xb6b1b4['prototype']['base2_Y'] = 0x0, _0xb6b1b4['prototype']['onLerpUpdate'] = function (_0x212929) {
this['base1_X'] = _0x212929 * (this['base1_nx'] - this['base1_ox']) + this['base1_ox'], this['base1_Y'] = _0x212929 * (this['base1_ny'] - this['base1_oy']) + this['base1_oy'], this['base2_X'] = _0x212929 * (this['base2_nx'] - this['base2_ox']) + this['base2_ox'], this['base2_Y'] = _0x212929 * (this['base2_ny'] - this['base2_oy']) + this['base2_oy'];
};

function _0xb6b1b4() {
_0xb6b1b4['superClass']['call'](this);
}
window['SlingshotPad'] = _0xb6b1b4;
var _0x91e2ed = 0x2;
_0x3360d0['setCustomClassForGameObjType'](_0xb6b1b4, _0xe2dd9c, _0x91e2ed);
var _0x13295b = _0x1f9464,
_0xec194 = _0x53f174;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194, _0x1f9464['prototype']['customDraw'] = function (_0x323432) {
_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.095, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, this['rad'], 0x0, 0x2 * Math['PI'], ![]), _0x4ac9cf['arc'](0x0, 0x0, this['rad'] * 0.9, 0x0, 0x2 * Math['PI'], !![]), _0x4ac9cf['fillStyle'] = 'red', _0x4ac9cf['closePath'](), _0x4ac9cf['fill'](), _0x4ac9cf['restore']();
};

function _0x1f9464() {
_0x1f9464['superClass']['call'](this);
}
window['Trampoline'] = _0x1f9464;
var _0x1de7d1 = 0x4;
_0x3360d0['setCustomClassForGameObjType'](_0x1f9464, _0xe2dd9c, _0x1de7d1);
var _0x13295b = _0x20e734,
_0xec194 = _0x53f174;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194, _0x20e734['prototype']['updateZ'] = function () {
this['z'] = 0x3f2 + this['rad'];
}, _0x20e734['prototype']['customDraw'] = function (_0x4340bb) {
this['drawLeg'](_0x5799c8), this['drawLeg'](_0x276f11), this['drawLeg'](_0x449a2f), this['drawLeg'](_0x5d2369), _0x4ac9cf['save']();
var _0x4ebbdc = this['getSkinImageObj']('img/custom/trampoline/rug_zebra.png');
if (_0x4ebbdc) {
    var _0x552c9b = this['rad'] * (this['stretch'] / 0x64),
        _0x116aff = _0x552c9b + _0x497c40;
    _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x4ebbdc, -_0x552c9b, -_0x116aff, 0x2 * _0x552c9b, 0x2 * _0x116aff), _0x4ac9cf['restore']();
}
_0x4ac9cf['restore']();
};
var _0x497c40 = 0xf,
_0x5799c8 = -0x2b,
_0x276f11 = 0x32,
_0x449a2f = 0x87,
_0x5d2369 = 0xe1,
_0x44eb60 = 0.4,
_0x1dd008 = 0x0;

function _0x52419a(_0xa3e4f6) {
return 0x1 + (0x1 - _0xa3e4f6['stretch'] / 0x64);
}
_0x20e734['prototype']['drawLeg'] = function (_0x5984ca) {
_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1;
var _0xcf3b88 = this['getSkinImageObj']('img/custom/trampoline/leg_zebra.png');
if (_0xcf3b88) {
    var _0x28748a = this['rad'] * 0.3,
        _0x25ae4e = 0x2 * this['rad'] * _0x44eb60 * _0x52419a(this);
    _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['angle'] + _0x142401(_0x5984ca)), _0x4ac9cf['drawImage'](_0xcf3b88, -_0x28748a, this['rad'] * _0x52419a(this), 0x2 * _0x28748a, _0x25ae4e), _0x4ac9cf['restore']();
}
_0x4ac9cf['restore']();
}, _0x20e734['prototype']['readCustomData_onNewlyVisible'] = function (_0x3121e5) {
_0x20e734['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x3121e5), this['o_stretch'] = this['nw_strech'] = this['n_strech'] = this['stretch'], this['readBaseData'](_0x3121e5);
}, _0x20e734['prototype']['baseStrech'] = 0x0, _0x20e734['prototype']['readCustomData_onUpdate'] = function (_0x1fa551) {
_0x20e734['superClass']['prototype']['readCustomData_onUpdate']['call'](this, _0x1fa551), this['readBaseData'](_0x1fa551);
}, _0x20e734['prototype']['stretch'] = 0x64, _0x20e734['prototype']['readBaseData'] = function (_0x2e88c5) {
var _0xe3f1d = _0x2e88c5['readUInt32']() / 0x64;
this['o_stretch'] = this['stretch'], this['n_strech'] = _0xe3f1d;
}, _0x20e734['prototype']['base1_X'] = 0x0, _0x20e734['prototype']['base1_Y'] = 0x0, _0x20e734['prototype']['base2_X'] = 0x0, _0x20e734['prototype']['base2_Y'] = 0x0, _0x20e734['prototype']['base3_X'] = 0x0, _0x20e734['prototype']['base3_Y'] = 0x0, _0x20e734['prototype']['base4_X'] = 0x0, _0x20e734['prototype']['base4_Y'] = 0x0, _0x20e734['prototype']['onLerpUpdate'] = function (_0x33e171) {
this['stretch'] = _0x33e171 * (this['n_strech'] - this['o_stretch']) + this['o_stretch'];
};

function _0x20e734() {
_0x20e734['superClass']['call'](this);
}
window['TrampolinePad'] = _0x20e734;
var _0x492ce8 = 0x5;
_0x3360d0['setCustomClassForGameObjType'](_0x20e734, _0xe2dd9c, _0x492ce8);
var _0xec194 = _0x1dd8d7;
_0x401f6d['prototype'] = Object['create'](_0xec194['prototype']), _0x401f6d['prototype']['constructor'] = _0x401f6d, _0x401f6d['superClass'] = _0xec194, _0x401f6d['prototype']['updateZ'] = function () {
this['z'] = 0x186a0;
}, _0x401f6d['prototype']['getSkinName'] = function () {
var _0x2852ed = this['animalInfo']();
if (this['animalSpecies'] == 0x8 || this['animalSpecies'] == 0x6) return _0x2852ed['skinName'] + '_body';
return _0x2852ed['skinName'];
}, _0x401f6d['prototype']['animalInfo'] = function () {
var _0x2e24ba = {},
    _0xf54025 = '';
switch (this['animalSpecies']) {
case 0x0:
    _0xf54025 = 'jagga', _0x2e24ba['aniName'] = 'Jagga';
    break;
case 0x1:
    _0xf54025 = 'bali', _0x2e24ba['aniName'] = 'Bali';
    break;
case 0x2:
    _0xf54025 = 'jutt', _0x2e24ba['aniName'] = 'Jutt';
    break;
case 0x3:
    _0xf54025 = 'bhollaa', _0x2e24ba['aniName'] = 'Bhollaa';
    break;
case 0x4:
    _0xf54025 = 'butt', _0x2e24ba['aniName'] = 'Butt';
    break;
case 0x5:
    _0xf54025 = 'khattak', _0x2e24ba['aniName'] = 'Khattak';
    break;
case 0x6:
    _0xf54025 = 'chandyo/chandyo', _0x2e24ba['aniName'] = 'Chandyo';
    break;
case 0x7:
    _0xf54025 = 'abysmal', _0x2e24ba['aniName'] = 'Abysmal';
    break;
case 0x8:
    _0xf54025 = 'sultan/sultan', _0x2e24ba['aniName'] = 'Sultan';
    break;
case 0x9:
    _0xf54025 = 'gujjar', _0x2e24ba['aniName'] = 'Gujjar';
    break;
}
return _0x2e24ba['aniCol'] = '#FF9000', _0x2e24ba['skinName'] = 'land/aiboss/' + _0xf54025, _0x2e24ba['upgradeText'] = 'UPGRADED to ' + _0x2e24ba['aniName'] + ' the A.I BOSS!', _0x2e24ba['aniCol'] = '#22FF8A', _0x2e24ba;
}, _0x401f6d['prototype']['getAbilityInfo'] = function (_0x15cec0) {
var _0x15aa75 = {},
    _0x359cca = this['animalInfo']();
return _0x15aa75['abilName'] = 'AI', _0x15aa75['abilImg'] = 'skins/' + _0x359cca['skinName'] + '.png', _0x15aa75['speciesType'] = this['animalSpecies'], _0x15aa75['skinThemeID'] = this['skinThemeID'], _0x15aa75['mopeSeasonID'] = this['mopeSeasonID'], _0x15aa75;
}, _0x401f6d['prototype']['diveColor1'] = '#64a034', _0x401f6d['prototype']['diveColor2'] = '#598b30', _0x401f6d['prototype']['onAnimalSpeciesSet'] = function () {
switch (this['animalSpecies']) {
case 0x1:
    this['diveColor1'] = '#dbb300', this['diveColor2'] = '#bf9d04';
    break;
case 0x2:
    this['diveColor1'] = '#79c9a8', this['diveColor2'] = '#6fad9f';
    break;
}
}, _0x401f6d['prototype']['leftWingAnim'] = null, _0x401f6d['prototype']['flapAngleDiff'] = 0x3, _0x401f6d['prototype']['flapAngle'] = 0x3, _0x401f6d['prototype']['flapF'] = 0.1, _0x401f6d['prototype']['flapDur'] = 0x2, _0x401f6d['prototype']['sF'] = 0.02, _0x401f6d['prototype']['drawWings'] = function () {
this['leftWingAnim'] == null && (this['leftWingAnim'] = new _0x21dde4(this, this['flapDur'], _0x21dde4['wave']), this['leftWingAnim']['keepLastFrame'] = !![], this['leftWingAnim']['loop'] = !![], this['leftWingAnim']['onFrameEntered'] = function (_0x1b15d4) {
    this['forObj']['frame1'] = _0x1b15d4;
});
if (this['leftWingAnim'] != null) this['leftWingAnim']['run']();
var _0x3d4e4b = this['rad'] - this['outlineW'],
    _0x1c1498 = this['frame1'] * this['sF'] * _0x3d4e4b,
    _0x1b97fc = -(-this['flapF'] + this['frame1']),
    _0x1acf07 = _0x1b97fc * _0x142401(this['flapAngle']),
    _0x23a3cb = 0x1f4 / 0x154,
    _0x5ecb45 = this['getSkinImageObj']('skins/land/aiboss/sultan/left_wing.png'),
    _0x5eb727 = this['getSkinImageObj']('skins/land/aiboss/sultan/right_wing.png');
if (_0x5ecb45 && _0x5eb727) {
    var _0x449aa9 = 0.2;
    _0x4ac9cf['save'](), _0x4ac9cf['rotate'](_0x142401(this['flapAngleDiff']) + _0x1acf07), _0x4ac9cf['drawImage'](_0x5ecb45, -_0x3d4e4b * _0x23a3cb - _0x449aa9 * _0x3d4e4b, -_0x3d4e4b * _0x23a3cb + _0x1c1498, 0x2 * _0x3d4e4b * _0x23a3cb, 0x2 * _0x3d4e4b * _0x23a3cb + _0x1c1498 * 1.5), _0x4ac9cf['restore'](), _0x4ac9cf['save'](), _0x4ac9cf['rotate'](-(_0x142401(this['flapAngleDiff']) + _0x1acf07)), _0x4ac9cf['drawImage'](_0x5eb727, -_0x3d4e4b * _0x23a3cb + _0x449aa9 * _0x3d4e4b, -_0x3d4e4b * _0x23a3cb + _0x1c1498, 0x2 * _0x3d4e4b * _0x23a3cb, 0x2 * _0x3d4e4b * _0x23a3cb + _0x1c1498 * 1.5), _0x4ac9cf['restore']();
}
}, _0x401f6d['prototype']['drawSkinCustomization'] = function () {
if (this['animalSpecies'] == 0x8) {
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = _0x50a9ba ? 0.5 : 0x1;
    var _0x5b8a21 = 0x1f4 / 0x154,
        _0x149be0 = this['getSkinImageObj']('skins/land/aiboss/sultan/sultan_head.png');
    if (_0x149be0) {
        _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = _0x50a9ba ? 0.2 : 0x1;
        var _0x37c6f9 = this['rad'] - this['outlineW'];
        _0x4ac9cf['drawImage'](_0x149be0, -_0x37c6f9 * _0x5b8a21, -_0x37c6f9 * _0x5b8a21, 0x2 * _0x37c6f9 * _0x5b8a21, 0x2 * _0x37c6f9 * _0x5b8a21), _0x4ac9cf['restore']();
    }
    var _0x360ccb = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x413e4d = !(_0x25ea67 == 0x2 || _0x50a9ba) ? _0x23fdc7(_0x360ccb, 0x5, 0x1, 0x1) : this['birdNoAnimationFlyWingAngle'];
    this['drawWings']();
    var _0x311ec5 = -1.25,
        _0x17cd5a = -0.1,
        _0x13004b = 0x258 / 0x17c,
        _0x14d5b4 = 0.4,
        _0x55bd81 = this['getSkinImageObj']('skins/land/aiboss/sultan/tail.png');
    if (_0x55bd81) {
        _0x4ac9cf['save']();
        var _0x37c6f9 = this['rad'] - this['outlineW'];
        _0x4ac9cf['drawImage'](_0x55bd81, -_0x37c6f9 * _0x14d5b4, -_0x37c6f9 * _0x14d5b4 + _0x311ec5 * _0x37c6f9, 0x2 * _0x37c6f9 * _0x14d5b4, 0x2 * _0x37c6f9 * _0x14d5b4), _0x4ac9cf['restore']();
    }
    _0x4ac9cf['restore']();
} else {
    if (this['animalSpecies'] == 0x6) {
        var _0x3ac60f = 0x0,
            _0x12be7a = 0.42,
            _0x30773a = 0x1f4 / 0x154,
            _0x2b8251 = 0x1f4 / 0x154,
            _0x55bd81 = this['getSkinImageObj']('skins/land/aiboss/chandyo/chandyo_back.png');
        if (_0x55bd81) {
            _0x4ac9cf['save']();
            var _0x37c6f9 = this['rad'] - this['outlineW'];
            _0x4ac9cf['drawImage'](_0x55bd81, -_0x37c6f9 * _0x2b8251, -_0x37c6f9 * _0x2b8251 + _0x3ac60f * _0x37c6f9, 0x2 * _0x37c6f9 * _0x2b8251, 0x2 * _0x37c6f9 * _0x2b8251), _0x4ac9cf['restore']();
        }
        var _0x149be0 = this['getSkinImageObj']('skins/land/aiboss/chandyo/chandyo_head.png');
        if (_0x149be0) {
            _0x4ac9cf['save']();
            var _0x37c6f9 = this['rad'] - this['outlineW'];
            _0x4ac9cf['drawImage'](_0x149be0, -_0x37c6f9 * _0x30773a, -_0x37c6f9 * _0x30773a + _0x12be7a * _0x37c6f9, 0x2 * _0x37c6f9 * _0x30773a, 0x2 * _0x37c6f9 * _0x30773a), _0x4ac9cf['restore']();
        }
    }
}
};

function _0x401f6d() {
_0x401f6d['superClass']['call'](this, _0x4acf80);
}
window['AiBoss'] = _0x401f6d;
var _0x428f2e = 0x6b;
_0x3360d0['setCustomClassForGameObjType'](_0x401f6d, _0x4acf80, _0x428f2e);
var _0xec194 = _0x5adfe2;
_0x2dfaf2['prototype'] = Object['create'](_0xec194['prototype']), _0x2dfaf2['prototype']['constructor'] = _0x2dfaf2, _0x2dfaf2['superClass'] = _0xec194, _0x2dfaf2['prototype']['mommyID'] = 0x0, _0x2dfaf2['prototype']['updateZ'] = function () {
this['z'] = 0x989680;
}, _0x2dfaf2['prototype']['isEdibleOutlined'] = function () {
if (this['mommyID'] == _0x46868a) return ![];
return _0x4df1db['superClass']['prototype']['isEdibleOutlined']['call'](this);
}, _0x2dfaf2['prototype']['customDraw'] = function (_0x379b56) {
_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.01;
var _0x17718c = this['getSkinImageObj']('img/camera.png');
if (_0x17718c) {
    var _0x1735c5 = this['rad'] * 0x2;
    _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x17718c, -_0x1735c5, -_0x1735c5, 0x2 * _0x1735c5, 0x2 * _0x1735c5);
}
_0x4ac9cf['restore']();
};
var _0x2fce59 = 0x7f;

function _0x2dfaf2() {
_0x2dfaf2['superClass']['call'](this, _0x2fce59), this['doesDrawEffectScale'] = ![];
}
window['DroneCamera'] = _0x2dfaf2, _0x3360d0['setCustomClassForGameObjType'](_0x2dfaf2, _0x2fce59);
var _0x13295b = _0x524f1e,
_0xec194 = _0x5adfe2;
_0x524f1e['prototype'] = Object['create'](_0xec194['prototype']), _0x524f1e['prototype']['constructor'] = _0x524f1e, _0x524f1e['superClass'] = _0xec194, _0x524f1e['prototype']['r'] = 0x0, _0x524f1e['prototype']['updateZ'] = function () {
this['z'] = 0x186a2;
}, _0x524f1e['prototype']['customDraw'] = function (_0x348eb0) {
_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.3, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, this['rad'] + 0x2, 0x0, 0x2 * Math['PI'], ![]), _0x4ac9cf['arc'](0x0, 0x0, this['rad'], 0x0, 0x2 * Math['PI'], !![]), _0x4ac9cf['fillStyle'] = '#32ff00', _0x4ac9cf['closePath'](), _0x4ac9cf['fill'](), _0x4ac9cf['restore'](), _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.095, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, this['rad'], 0x0, 0x2 * Math['PI'], ![]), _0x4ac9cf['arc'](0x0, 0x0, this['rad'], 0x0, 0x2 * Math['PI'], !![]), _0x4ac9cf['fillStyle'] = 'red', _0x4ac9cf['closePath'](), _0x4ac9cf['fill'](), _0x4ac9cf['restore'](), _0x4ac9cf['save']();
var _0x4b384d = 0x1,
    _0x2b098e = _0x4b384d * 0.1;
this['r'] += _0x2b098e, _0x4ac9cf['rotate'](_0x142401(-this['r'])), this['setTitle'](), _0x4ac9cf['restore']();
}, _0x524f1e['prototype']['setTitle'] = function () {
var _0x828fb8 = _0x828fb8 = 'SANDBOX\x0aARENA',
    _0x1cf579 = this['rad'] * 0.07;
null == this['timerTxt'] ? (this['timerTxt'] = new _0x128c61(_0x1cf579, '#FFFFFF'), this['timerTxt']['strokeW'] = 0x2, this['timerTxt']['multiLine'] = !![], this['timerTxt']['renderScale'] = 0x5, this['timerTxt']['setText'](_0x828fb8)) : (this['timerTxt']['setFontSize'](_0x1cf579), this['timerTxt']['setText'](_0x828fb8)), this['timerTxt']['x'] = 0x0, this['timerTxt']['y'] = -this['rad'] * 0.9, this['timerTxt']['draw']();
};
var _0x4f4673 = 0x7e;

function _0x524f1e() {
_0x524f1e['superClass']['call'](this, _0x4f4673);
}
window['Sandbox'] = _0x524f1e, _0x3360d0['setCustomClassForGameObjType'](_0x524f1e, _0x4f4673);
var _0x20f19b = '6Le2eLIZAAAAACYfDXc6fT__SyfOP0m7rNyjkJdR';
_0x3437fe('https://www.google.com/recaptcha/api.js?render=' + _0x20f19b, function () {
console['log']('loaded recatcha script.'), grecaptcha['ready'](function () {
    console['log']('::: iandev ::: RECAPTCHA LOADED'), _0x4e0630();
});
});
var _0x31e64a = function (_0x211165, _0x528e88) {
    window['setTimeout'](function () {
        _0x211165 += 'r';
        var _0x24d85b = _0x30aaa6 ? 0x1 : 0x0;
        _0x528e88 = _0x24d85b + '' + _0x528e88, _0x528e88 = _0x528e88 + '' + _0x24d85b;
        var _0x44e635 = new _0xb3282e(0x2 + _0x528e88['length'] + 0x2);
        _0x44e635['writeUInt8'](0x3e), _0x44e635['writeString'](_0x528e88), _0x3ccf4c(_0x44e635);
    }, 0x1388);
},
_0xd5d5ad = '',
_0x2c98a0 = function () {
    console['log']('@@@@@@@@@@@@@@@@@@@ recaptcha called'), _0xd5d5ad = '', grecaptcha['execute'](_0x20f19b, {
        'action': 'homepage'
    })['then'](function (_0x1d9c97) {
        _0xd5d5ad = _0x1d9c97 || 'error';
        var _0x266170 = new _0xb3282e(0x2 + _0xd5d5ad['length'] + 0x2);
        _0x266170['writeUInt8'](_0x29158d), _0x266170['writeString'](_0xd5d5ad), _0x3ccf4c(_0x266170), _0xd5d5ad == null && console['log']('error: rec token could not received!');
    })['catch'](function (_0x1fa176) {
        console['log']('Error loading recaptcha! Reason: ' + _0x1fa176), _0xd5d5ad = 'error';
        var _0x14a70a = new _0xb3282e(0x2 + _0xd5d5ad['length'] + 0x2);
        _0x14a70a['writeUInt8'](_0x29158d), _0x14a70a['writeString'](_0xd5d5ad), _0x3ccf4c(_0x14a70a);
    });
},
_0x2c8583 = function (_0x588d5d, _0x49b5aa, _0x5f5284) {
    window['setTimeout'](function () {
        if (_0x49b5aa) {
            _0x5f5284 = eval(_0x588d5d), _0x5f5284 = _0x5f5284 + '|' + _0x49b5aa;
            var _0x58303e = new _0xb3282e(0x2 + _0x5f5284['length'] + 0x2);
            _0x58303e['writeUInt8'](_0x2458dc), _0x58303e['writeString'](_0x5f5284), _0x3ccf4c(_0x58303e);
        }
    }, _0x5a9e0b(0.5, 0.8) * 0x3e8);
},
_0x13295b = _0x23309b,
_0xec194 = _0x54c5f1;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194, _0x23309b['prototype']['customDraw'] = function (_0x52486a) {
_0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['angle'] + _0x142401(0xb4));
var _0x4b2a9d = _0x4ac9cf['globalAlpha'];
_0x4ac9cf['globalAlpha'] = this['alpha'] < 0.7 ? this['alpha'] : 0.7;
var _0xb45cd5 = this['getSkinImageObj']('img/disasters/coldwave.png');
if (_0xb45cd5) {
    var _0x1df80f = this['rad'] * 1.25;
    _0x4ac9cf['drawImage'](_0xb45cd5, -_0x1df80f, -_0x1df80f, 0x2 * _0x1df80f, 0x2 * _0x1df80f);
}
_0x4ac9cf['restore']();
}, _0x23309b['prototype']['updateZ'] = function () {
this['z'] = 0x2710 - this['rad'];
}, _0x23309b['prototype']['readCustomData_onNewlyVisible'] = function (_0x45636f) {
this['alpha'] = _0x45636f['readUInt8']() / 0x64;
}, _0x23309b['prototype']['readUpdatedProperty'] = function (_0x5cd043, _0x182aff) {
_0x5cd043 == _0x45ffe8 && (this['alpha'] = _0x182aff['readUInt8']() / 0x64);
};

function _0x23309b() {
_0x23309b['superClass']['call'](this), this['spawnTime'] = _0x397f50;
}
window['ColdWave'] = _0x23309b, _0x3360d0['setCustomClassForGameObjType'](_0x23309b, _0x1b8199, _0x50a14e);
var _0xec194 = _0x5adfe2;
_0xe0bfc4['prototype'] = Object['create'](_0xec194['prototype']), _0xe0bfc4['prototype']['constructor'] = _0xe0bfc4, _0xe0bfc4['superClass'] = _0xec194, _0xe0bfc4['prototype']['updateZ'] = function () {
this['z'] = 0x3e8 + this['rad'];
}, _0xe0bfc4['prototype']['customDraw'] = function (_0x30ca3f) {
_0x4ac9cf['save']();
var _0x491cf3 = 0x0,
    _0x3ba7e4 = _0x397f50 - this['spawnTime'],
    _0x3c8c76 = _0x3ba7e4 / 0x3e8,
    _0x19a358 = 0x2,
    _0x2dee9e = 1.5;
_0x491cf3 = _0x2dee9e * Math['sin'](0x2 * Math['PI'] / _0x19a358 * _0x3c8c76);
var _0x330142 = 0.6,
    _0x2a5edb = _0x23fdc7(_0x3c8c76, 0xa, 0x1, 0.5);
_0x2a5edb = _0x1ce2eb(_0x2a5edb, 0x0, 0x1);
_0x2a5edb >= _0x330142 && (_0x330142 = _0x330142 - (_0x2a5edb - _0x330142));
var _0x1100aa = '#98803A';
_0x4ac9cf['fillStyle'] = _0x1100aa, _0x4ac9cf['globalAlpha'] = _0x330142, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.5, -this['rad'] * 0.5 + 0xa * this['rPer'], Math['max'](0x0, this['rad'] * 0.65 + _0x491cf3), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.5, -this['rad'] * 0.5 - 0xa * this['rPer'], Math['max'](0x0, this['rad'] * 0.73 - _0x491cf3), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.6, this['rad'] * 0.4, Math['max'](0x0, this['rad'] * 0.78 + _0x491cf3), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.5, this['rad'] * 0.5, Math['max'](0x0, this['rad'] * 0.6 + this['rPer'] - _0x491cf3), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['restore']();
};

function _0xe0bfc4() {
_0xe0bfc4['superClass']['call'](this, _0x1baff9);
}
window['DustCloud'] = _0xe0bfc4, _0x3360d0['setCustomClassForGameObjType'](_0xe0bfc4, _0x1baff9);
var _0x13295b = _0x12f91c,
_0xec194 = _0x54c5f1;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194, _0x12f91c['prototype']['customDraw'] = function (_0x27d5a9) {
_0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['angle'] + _0x142401(0xb4));
var _0x3693df = _0x4ac9cf['globalAlpha'];
_0x4ac9cf['globalAlpha'] = this['alpha'] < 0.7 ? this['alpha'] : 0.7;
var _0x9d1cf7 = this['getSkinImageObj']('img/disasters/dustwave.png');
if (_0x9d1cf7) {
    var _0x5eaa15 = this['rad'] * 1.25;
    _0x4ac9cf['drawImage'](_0x9d1cf7, -_0x5eaa15, -_0x5eaa15, 0x2 * _0x5eaa15, 0x2 * _0x5eaa15);
}
_0x4ac9cf['restore']();
}, _0x12f91c['prototype']['updateZ'] = function () {
this['z'] = 0x2710 - this['rad'];
}, _0x12f91c['prototype']['readCustomData_onUpdate'] = function (_0x49213d) {
this['alpha'] = _0x49213d['readUInt8']() / 0x64;
}, _0x12f91c['prototype']['readUpdatedProperty'] = function (_0x1f2c93, _0x380016) {
_0x1f2c93 == _0x45ffe8 && (this['alpha'] = _0x380016['readUInt8']() / 0x64);
};

function _0x12f91c() {
_0x12f91c['superClass']['call'](this), this['spawnTime'] = _0x397f50;
}
window['DustWave'] = _0x12f91c, _0x3360d0['setCustomClassForGameObjType'](_0x12f91c, _0x1b8199, _0x5b4260);
var _0x13295b = _0x1b8997,
_0xec194 = _0x54c5f1;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194, _0x1b8997['prototype']['customDraw'] = function (_0xf631ed) {
_0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['angle'] + _0x142401(0xb4));
var _0x363a21 = _0x4ac9cf['globalAlpha'];
_0x4ac9cf['globalAlpha'] = this['alpha'] < 0.7 ? this['alpha'] : 0.7;
var _0x36096c = this['getSkinImageObj']('img/disasters/heatwave.png');
if (_0x36096c) {
    var _0x3295ab = this['rad'] * 1.25;
    _0x4ac9cf['drawImage'](_0x36096c, -_0x3295ab, -_0x3295ab, 0x2 * _0x3295ab, 0x2 * _0x3295ab);
}
_0x4ac9cf['restore']();
}, _0x1b8997['prototype']['updateZ'] = function () {
this['z'] = 0x2710 - this['rad'];
}, _0x1b8997['prototype']['readCustomData_onUpdate'] = function (_0x2e4d94) {
this['alpha'] = _0x2e4d94['readUInt8']() / 0x64;
}, _0x1b8997['prototype']['readUpdatedProperty'] = function (_0x585090, _0x24bc59) {
_0x585090 == _0x45ffe8 && (this['alpha'] = _0x24bc59['readUInt8']() / 0x64);
};

function _0x1b8997() {
_0x1b8997['superClass']['call'](this), this['spawnTime'] = _0x397f50;
}
window['HeatWave'] = _0x1b8997, _0x3360d0['setCustomClassForGameObjType'](_0x1b8997, _0x1b8199, _0x1c649c);
var _0xec194 = _0x5adfe2;
_0x187b77['prototype'] = Object['create'](_0xec194['prototype']), _0x187b77['prototype']['constructor'] = _0x187b77, _0x187b77['superClass'] = _0xec194, _0x187b77['prototype']['updateZ'] = function () {
this['z'] = 0xf4240;
}, _0x187b77['prototype']['customDraw'] = function (_0x1ff530) {
var _0x48684d = (_0x397f50 - this['spawnTime']) / 0x3e8;
_0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['angle'] + _0x142401(0xb4)), _0x4ac9cf['globalAlpha'] = 0.1 + this['cloudOpacity'];
var _0x399d2c = this['getSkinImageObj']('img/disasters/cloud.png');
if (_0x399d2c) {
    var _0x7cf28 = this['rad'] * 0x2;
    _0x4ac9cf['drawImage'](_0x399d2c, -_0x7cf28, -_0x7cf28, 0x2 * _0x7cf28, 0x2 * _0x7cf28);
}
var _0x3f6ce7 = 0x0,
    _0x3762cf = 0x6,
    _0x9def20 = 0xf;
_0x3f6ce7 = _0x9def20 * Math['sin'](0x2 * Math['PI'] / _0x3762cf * _0x48684d), _0x4ac9cf['globalAlpha'] = 0.1;
var _0x399d2c = this['getSkinImageObj']('img/disasters/cloud1.png');
if (_0x399d2c) {
    var _0x7cf28 = this['rad'] * 0x2;
    _0x7cf28 = Math['max'](0x0, _0x7cf28 - 0x5 + _0x3f6ce7), _0x4ac9cf['drawImage'](_0x399d2c, -_0x7cf28, -_0x7cf28, 0x2 * _0x7cf28, 0x2 * _0x7cf28);
}
_0x4ac9cf['restore']();
}, _0x187b77['prototype']['readUpdatedProperty'] = function (_0x41a778, _0x36ad85) {
_0x41a778 == _0x45ffe8 && (this['alpha'] = _0x36ad85['readUInt8']() / 0x64);
};

function _0x187b77() {
_0x187b77['superClass']['call'](this, _0x9c35d3);
}
window['RainStorm'] = _0x187b77, _0x3360d0['setCustomClassForGameObjType'](_0x187b77, _0x9c35d3);
var _0xec194 = _0x5adfe2;
_0x338f09['prototype'] = Object['create'](_0xec194['prototype']), _0x338f09['prototype']['constructor'] = _0x338f09, _0x338f09['superClass'] = _0xec194, _0x338f09['prototype']['updateZ'] = function () {
this['z'] = 0xf4240;
}, _0x338f09['prototype']['customDraw'] = function (_0x65d28e) {
var _0x44c6a5 = (_0x397f50 - this['spawnTime']) / 0x3e8;
_0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['angle'] + _0x142401(0xb4)), _0x4ac9cf['globalAlpha'] = 0.1 + this['cloudOpacity'];
var _0x4f2eff = this['getSkinImageObj']('img/disasters/cloud.png');
if (_0x4f2eff) {
    var _0x3e7880 = this['rad'] * 0x2;
    _0x4ac9cf['drawImage'](_0x4f2eff, -_0x3e7880, -_0x3e7880, 0x2 * _0x3e7880, 0x2 * _0x3e7880);
}
var _0x2d844e = 0x0,
    _0x3786f6 = 0x6,
    _0x3582b8 = 0xf;
_0x2d844e = _0x3582b8 * Math['sin'](0x2 * Math['PI'] / _0x3786f6 * _0x44c6a5), _0x4ac9cf['globalAlpha'] = 0.1;
var _0x4f2eff = this['getSkinImageObj']('img/disasters/cloud1.png');
if (_0x4f2eff) {
    var _0x3e7880 = this['rad'] * 0x2;
    _0x3e7880 = Math['max'](0x0, _0x3e7880 - 0x5 + _0x2d844e), _0x4ac9cf['drawImage'](_0x4f2eff, -_0x3e7880, -_0x3e7880, 0x2 * _0x3e7880, 0x2 * _0x3e7880);
}
_0x4ac9cf['restore']();
}, _0x338f09['prototype']['readUpdatedProperty'] = function (_0xebbf33, _0x5aeeb8) {
_0xebbf33 == _0x45ffe8 && (this['alpha'] = _0x5aeeb8['readUInt8']() / 0x64);
};

function _0x338f09() {
_0x338f09['superClass']['call'](this, _0x549103);
}
window['SnowStorm'] = _0x338f09, _0x3360d0['setCustomClassForGameObjType'](_0x338f09, _0x549103);
var _0xec194 = _0x5adfe2;
_0x144561['prototype'] = Object['create'](_0xec194['prototype']), _0x144561['prototype']['constructor'] = _0x144561, _0x144561['superClass'] = _0xec194, _0x144561['prototype']['updateZ'] = function () {
this['z'] = 0x2710;
}, _0x144561['prototype']['tornadoType'] = 'tornado', _0x144561['prototype']['customDraw'] = function (_0x4733c4) {
this['setTornadoType']();
var _0x49cde1 = 'img/disasters/' + this['tornadoType'] + '.png',
    _0x4458f1 = this['getSkinImageObj'](_0x49cde1);
if (_0x4458f1) {
    var _0x5d930d = this['rad'] * 0.8;
    if (!_0x50a9ba && !(_0x25ea67 == 0x2)) {
        var _0x31bd3b = 0x3c / 0x3c,
            _0x1d82ff = 0x3e8 / _0x31bd3b,
            _0x452132 = (_0x397f50 - this['spawnTime']) % _0x1d82ff / _0x1d82ff,
            _0x42388a = _0x452132 * 0x2 * Math['PI'],
            _0x31bd3b = 0x1e / 0x3c,
            _0x1d82ff = 0x3e8 / _0x31bd3b,
            _0x452132 = (_0x397f50 - this['spawnTime']) % _0x1d82ff / _0x1d82ff,
            _0x5f0942 = _0x452132 * 0x2 * Math['PI'];
        _0x4ac9cf['save'](), _0x4ac9cf['rotate'](_0x42388a);
        var _0x172c59 = _0x4ac9cf['globalAlpha'];
        _0x4ac9cf['globalAlpha'] = 0x1 * _0x172c59;
        var _0x1e2ee2 = (_0x397f50 - this['spawnTime']) / 0x3e8,
            _0x2618e6 = 2.2,
            _0x46effb = 6.5 * Math['cos'](0x2 * Math['PI'] / _0x2618e6 * _0x1e2ee2),
            _0x1add8b = 6.5 * Math['sin'](0x2 * Math['PI'] / _0x2618e6 * _0x1e2ee2);
        _0x4ac9cf['globalAlpha'] = 0.3, _0x4ac9cf['drawImage'](_0x4458f1, -_0x5d930d - _0x46effb / 2.2, -_0x5d930d, 0x2 * _0x5d930d, 0x2 * _0x5d930d), _0x4ac9cf['restore'](), _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.7, _0x4ac9cf['rotate'](_0x5f0942), _0x4ac9cf['drawImage'](_0x4458f1, -_0x5d930d - _0x46effb / 2.2, -_0x5d930d, 0x2 * _0x5d930d, 0x2 * _0x5d930d), _0x4ac9cf['restore']();
    } else _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.7, _0x4ac9cf['drawImage'](_0x4458f1, -_0x5d930d, -_0x5d930d, 0x2 * _0x5d930d, 0x2 * _0x5d930d), _0x4ac9cf['restore']();
    if (this['showDevilFace']) {
        var _0x49cde1 = 'img/disasters/' + this['tornadoFace'] + '.png',
            _0x1a136f = this['getSkinImageObj'](_0x49cde1);
        _0x1a136f && (_0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['globalAlpha'] = 0.3, _0x4ac9cf['drawImage'](_0x1a136f, -_0x5d930d, -_0x5d930d, 0x2 * _0x5d930d, 0x2 * _0x5d930d), _0x4ac9cf['restore']());
    }
}
}, _0x144561['prototype']['setTornadoType'] = function (_0x2c2e24) {
switch (this['specType']) {
case 0x0:
    this['tornadoType'] = 'tornado', this['tornadoFace'] = 'dustface';
    break;
case 0x1:
    this['tornadoType'] = 'waterspout', this['tornadoFace'] = 'waterface';
    break;
case 0x2:
    this['tornadoType'] = 'dustdevil', this['tornadoFace'] = 'dustface';
    break;
case 0x3:
    this['tornadoType'] = 'arcticwhirl', this['tornadoFace'] = 'arcticface';
    break;
case 0x4:
    this['tornadoType'] = 'firedevil', this['tornadoFace'] = 'fireface';
    break;
case 0x5:
    this['tornadoType'] = 'deviltwister', this['tornadoFace'] = 'devilface';
    break;
}
}, _0x144561['prototype']['readCustomData_onNewlyVisible'] = function (_0x42cc51) {
this['setTornadoType'](), this['showDevilFace'] = _0x42cc51['readUInt8']() == 0x1;
}, _0x144561['prototype']['showDevilFace'] = ![], _0x144561['prototype']['tornadoFace'] = null;

function _0x144561() {
_0x144561['superClass']['call'](this, _0x179e0c), this['doesDrawEffectScale'] = ![], this['drawEffectScale_Slow'] = !![];
}
window['Tornado'] = _0x144561, _0x3360d0['setCustomClassForGameObjType'](_0x144561, _0x179e0c);
var _0x13295b = _0x51073a,
_0xec194 = _0x54c5f1;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194, _0x51073a['prototype']['customDraw'] = function (_0x4c796c) {
_0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['angle'] + _0x142401(0xb4));
var _0x31fcb1 = _0x4ac9cf['globalAlpha'];
_0x4ac9cf['globalAlpha'] = this['alpha'] < 0.7 ? this['alpha'] : 0.7;
var _0x51641c = this['getSkinImageObj']('img/disasters/tsunami.png');
if (_0x51641c) {
    var _0xc01555 = this['rad'] * 1.25;
    _0x4ac9cf['drawImage'](_0x51641c, -_0xc01555, -_0xc01555, 0x2 * _0xc01555, 0x2 * _0xc01555);
}
_0x4ac9cf['restore']();
}, _0x51073a['prototype']['updateZ'] = function () {
this['z'] = 0x2710 - this['rad'];
}, _0x51073a['prototype']['readUpdatedProperty'] = function (_0x19911f, _0x4b6192) {
_0x19911f == _0x45ffe8 && (this['alpha'] = _0x4b6192['readUInt8']() / 0x64);
}, _0x51073a['prototype']['readCustomData_onNewlyVisible'] = function (_0x115224) {
this['alpha'] = _0x115224['readUInt8']() / 0x64;
};

function _0x51073a() {
_0x51073a['superClass']['call'](this), this['spawnTime'] = _0x397f50;
}
window['TsunamiWave'] = _0x51073a, _0x3360d0['setCustomClassForGameObjType'](_0x51073a, _0x1b8199, _0x576d3c);
var _0xec194 = _0x5adfe2;
_0x4f8dc7['prototype'] = Object['create'](_0xec194['prototype']), _0x4f8dc7['prototype']['constructor'] = _0x4f8dc7, _0x4f8dc7['superClass'] = _0xec194, _0x4f8dc7['prototype']['lookAngle'] = 0x0, _0x4f8dc7['prototype']['frameNumber'] = 0x0, _0x4f8dc7['prototype']['isRolling'] = ![], _0x4f8dc7['prototype']['pumpkinType'] = ![], _0x4f8dc7['prototype']['updateZ'] = function () {
this['z'] = 0x3ea;
}, _0x4f8dc7['prototype']['customDraw'] = function (_0x17fac) {
var _0x2ed4ec = 0x1,
    _0x4afde4 = 0.15,
    _0x3b63b5 = 0.8,
    _0x324ee0 = 0.5 * (_0x3b63b5 - _0x4afde4),
    _0x146b1a = _0x4afde4 + _0x324ee0 + _0x324ee0 * Math['sin'](0x2 * Math['PI'] / _0x2ed4ec * (_0x397f50 / 0x3e8)),
    _0x2ed4ec = 0x1,
    _0x4afde4 = 0.85,
    _0x3b63b5 = 0x1,
    _0x324ee0 = 0.5 * (_0x3b63b5 - _0x4afde4),
    _0xf21c8a = 0x1;
if (this['isRolling']) this['frameNumber'] = Math['trunc'](_0x397f50 / 0x78) % 0x5;
var _0x2a9ad7 = this['getSkinImageObj']('img/pumpkin/' + this['pumpkinType'] + '/' + this['frameNumber'] + '.png');
if (_0x2a9ad7) {
    var _0x13df12 = 0x0,
        _0x3e9a30 = this['rad'],
        _0x335731 = this['rad'] * 2.5;
    imH = this['rad'] * 2.5;
    var _0x590f4c = 0.5,
        _0x2ef45d = 0.95;
    _0x4ac9cf['save'](); {
        _0x4ac9cf['globalAlpha'] *= this['onFireEffA'] * _0xf21c8a, _0x4ac9cf['rotate'](this['angle'] + _0x142401(0x5a)), _0x4ac9cf['drawImage'](_0x2a9ad7, _0x13df12 + _0x335731 * -_0x590f4c, _0x3e9a30 + imH * -_0x2ef45d, _0x335731, imH);
    }
    _0x4ac9cf['restore']();
} else {}
}, _0x4f8dc7['prototype']['isFloating'] = ![], _0x4f8dc7['prototype']['isRolling'] = ![], _0x4f8dc7['prototype']['readUpdatedProperty'] = function (_0x1b6b72, _0x2d8fe0) {
if (_0x1b6b72 == _0x1fbcff) this['isFloating'] = _0x2d8fe0['readUInt8']() == 0x1;
else _0x1b6b72 == _0x35e644 && (this['isRolling'] = _0x2d8fe0['readUInt8']() == 0x1);
}, _0x4f8dc7['prototype']['readCustomData_onNewlyVisible'] = function (_0x14c14a) {
this['isRolling'] = _0x14c14a['readUInt8']() == 0x1, this['pumpkinType'] = _0x14c14a['readUInt8']();
};

function _0x4f8dc7() {
_0x4f8dc7['superClass']['call'](this, _0x13468b), this['lookAngle'] = 0x0, this['isRolling'] = ![], this['isFloating'] = ![], this['pumpkinType'] = ![], this['doesDrawEffectScale'] = !![], this['drawEffectScale_Slow'] = !![];
}
var _0x13468b = 0x83;
window['PumpkinBall'] = _0x4f8dc7, _0x3360d0['setCustomClassForGameObjType'](_0x4f8dc7, _0x13468b);
var _0x13295b = _0x21b4fd,
_0xec194 = _0x54c5f1;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194, _0x13295b['prototype']['alltimeGoals'] = 0x0, _0x13295b['prototype']['xpGained'] = 0x0, _0x13295b['prototype']['goalScorer'] = '', _0x13295b['prototype']['timerTxt'] = null, _0x13295b['prototype']['timer'] = 0x0, _0x21b4fd['prototype']['updateZ'] = function () {
this['z'] = 0x186a2;
}, _0x21b4fd['prototype']['customDraw'] = function (_0x5b7424) {
this['updateTimer']();
if (this['timer'] > 0x3) {
    _0x4ac9cf['save']();
    var _0x18cffa = _0x4ac9cf['globalAlpha'];
    _0x4ac9cf['globalAlpha'] = 0.25 * _0x18cffa, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, this['rad'], 0x0, 0x2 * Math['PI'], ![]), _0x4ac9cf['arc'](0x0, 0x0, this['rad'] - 0x14, 0x0, 0x2 * Math['PI'], !![]), _0x4ac9cf['fillStyle'] = '#ff9000', _0x4ac9cf['closePath'](), _0x4ac9cf['fill'](), _0x4ac9cf['restore']();
}
this['timerTxt'] != null && (this['timerTxt']['x'] = 0x0, this['timerTxt']['y'] = -this['rad'], this['timerTxt']['draw']());
}, _0x21b4fd['prototype']['readCustomData_onNewlyVisible'] = function (_0x3a03b5) {
_0x21b4fd['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x3a03b5), this['alltimeGoals'] = _0x3a03b5['readUInt16'](), this['goalScorer'] = _0x3a03b5['readString'](), this['timer'] = _0x3a03b5['readUInt8']();
}, _0x21b4fd['prototype']['readUpdatedProperty'] = function (_0x58d648, _0x78a99a) {
_0x58d648 == _0x373e1c && (this['timer'] = _0x78a99a['readUInt8']());
}, _0x21b4fd['prototype']['setTimer'] = function (_0x10de29) {
var _0x3efc73 = _0x10de29,
    _0x36a7b1 = 0x10;
null == this['timerTxt'] ? (this['timerTxt'] = new _0x128c61(_0x36a7b1, '#ffd800'), this['timerTxt']['strokeW'] = 0x2, this['timerTxt']['multiLine'] = !![], this['timerTxt']['renderScale'] = 0x3, this['timerTxt']['setText'](_0x3efc73)) : (this['timerTxt']['setFontSize'](_0x36a7b1), this['timerTxt']['setText'](_0x3efc73));
}, _0x21b4fd['prototype']['updateTimer'] = function () {
this['timer'] = Math['round'](this['timer']);
var _0x378da7 = this['timer'];
switch (this['timer']) {
case 0xa:
case 0x9:
case 0x8:
    _0x378da7 = 'GOAAAAAL!!!';
    break;
case 0x7:
case 0x6:
case 0x5:
    _0x378da7 = this['goalScorer'];
    break;
case 0x4:
case 0x3:
case 0x2:
    _0x378da7 = 'TOTAL GOALS ' + this['alltimeGoals'];
    break;
default:
    _0x378da7 = '';
    break;
}
this['setTimer'](_0x378da7);
};
var _0x1dd139 = 0x7d;

function _0x21b4fd() {
_0x21b4fd['superClass']['call'](this), this['hasAdLoaded'] = ![];
}
window['AbilityObjGoalScored'] = _0x21b4fd, _0x3360d0['setCustomClassForGameObjType'](_0x21b4fd, _0x1b8199, _0x1dd139);
var _0xe6cf20 = _0xe6cf20,
_0xec194 = _0x1dd8d7;
_0xe6cf20['prototype'] = Object['create'](_0xec194['prototype']), _0xe6cf20['prototype']['constructor'] = _0xe6cf20, _0xe6cf20['superClass'] = _0xec194, _0xe6cf20['prototype']['animalInfo'] = function () {
var _0xcbe5f3 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0xcbe5f3['aniName'] = 'Raven';
    break;
case 0xdc:
    _0xcbe5f3['aniName'] = 'Muscipula Raven';
    break;
}
return _0xcbe5f3['aniCol'] = '#FF9000', _0xcbe5f3['skinName'] = this['getSkinName'](), _0xcbe5f3['upgradeText'] = 'UPGRADED to ' + _0xcbe5f3['aniName'] + '!\x0aHold W to fly around from Tress/Hills.\x0a(Hint: Use ability on land to scare animals) ', _0xcbe5f3;
}, _0xe6cf20['prototype']['getAbilityInfo'] = function (_0x86369e) {
var _0x5b371a = {};
return _0x5b371a['abilName'] = 'Loud Caw!', _0x5b371a['abilImg'] = 'abilities/Caw-Mimic.svg', _0x5b371a['skinThemeID'] = this['skinThemeID'], _0x5b371a['mopeSeasonID'] = this['mopeSeasonID'], _0x5b371a;
}, _0xe6cf20['prototype']['getSkinName'] = function () {
return this['getSpeciesPath']() + this['getSubSpecies']() + '/raven' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0xe6cf20['prototype']['getSpeciesPath'] = function () {
return 'forest/raven/' + this['animalSpecies'];
}, _0xe6cf20['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0xe6cf20['prototype']['getWing'] = function (_0xb79868, _0x4eade9, _0xc6c0d) {
var _0x5aca99 = 'skins/' + this['getSpeciesPath']() + '/';
return _0x5aca99 += _0xb79868 + '_wing' + _0x4eade9 + '.png', _0x5aca99;
}, _0xe6cf20['prototype']['getHead'] = function (_0x1e7ee5, _0x4ae10c) {
var _0x4afd05 = 'skins/' + this['getSpeciesPath']() + '/';
return _0x4afd05 += _0x1e7ee5 + '_head.png', _0x4afd05;
};
var _0x4d6e8a = 0x0,
_0x3da549 = 1.25,
_0x5bd095 = 0x5,
_0x5e54ba = 0x1;
_0xe6cf20['prototype']['biteStart'] = 0x0, _0xe6cf20['prototype']['flapAmount'] = 0x3, _0xe6cf20['prototype']['flapDur'] = 0.7, _0xe6cf20['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) {
    this['biteStart'] = 0x0;
    return;
} else {
    if (!this['flag_flying']) {
        this['biteStart'] == 0x0 && (this['biteStart'] = _0x397f50);
        if (this['specType'] != 0x0 && this['specType'] != undefined) {
            var _0x3ac9e0 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/raven_head1.png'),
                _0x345e1f = (_0x397f50 - this['biteStart']) / 0x3e8,
                _0x1eee9f = this['skinScale'] * 1.1,
                _0xba2532 = this['skinRad'];
            _0x178e78 = !(_0x25ea67 == 0x2) ? _0x23fdc7(_0x345e1f, this['flapDur'], 0.05, 0x2) : 0.05;
            var _0x1a9444 = this['getSkinImageObj'](this['getWing']('raven', 0x1, !![]));
            if (_0x1a9444) {
                _0x4ac9cf['save']();
                var _0x141316 = -(-0.2 + _0x178e78) * _0x40941f,
                    _0xba2532 = this['rad'] * 0.9;
                _0x4ac9cf['rotate'](_0x142401(_0x5bd095) + _0x141316);
                var _0x391998 = 0x0,
                    _0x181699 = this['rad'],
                    _0x4c14b6 = _0xba2532 * 0x2 * 0.62,
                    _0x2422de = _0xba2532 * 2.5,
                    _0x47fe4d = _0x4d6e8a,
                    _0x3a5eff = _0x3da549;
                _0x4ac9cf['drawImage'](_0x1a9444, _0x391998 + _0x4c14b6 * -_0x47fe4d, _0x181699 + _0x2422de * -_0x3a5eff, _0x4c14b6, _0x2422de), _0x4ac9cf['restore']();
            }
            var _0x1a9444 = this['getSkinImageObj'](this['getWing']('raven', 0x2, !![]));
            if (_0x1a9444) {
                _0x4ac9cf['save']();
                var _0x141316 = -(-0.2 + _0x178e78) * _0x142401(-0x5a),
                    _0xba2532 = this['rad'] * 0.9;
                _0x4ac9cf['rotate'](_0x142401(-_0x5bd095) + _0x141316);
                var _0x391998 = 0x0,
                    _0x181699 = this['rad'],
                    _0x4c14b6 = _0xba2532 * 0x2 * 0.62,
                    _0x2422de = _0xba2532 * 2.5,
                    _0x47fe4d = _0x5e54ba,
                    _0x3a5eff = _0x3da549;
                _0x4ac9cf['drawImage'](_0x1a9444, _0x391998 + _0x4c14b6 * -_0x47fe4d, _0x181699 + _0x2422de * -_0x3a5eff, _0x4c14b6, _0x2422de), _0x4ac9cf['restore']();
            }
            if (_0x3ac9e0) {
                _0x178e78 = 0x0;
                !this['flag_flying'] && (_0x178e78 = !(_0x25ea67 == 0x2) ? _0x23fdc7(_0x345e1f, this['flapDur'], this['flapAmount'], 0x2) : this['flapAmount']);
                _0x4ac9cf['save']();
                var _0xba2532 = this['rad'];
                _0x4ac9cf['drawImage'](_0x3ac9e0, -_0xba2532 * _0x1eee9f, (-_0xba2532 + _0xba2532 * 0.1) * _0x1eee9f + _0x178e78, 0x2 * _0xba2532 * _0x1eee9f, 0x2 * _0xba2532 * _0x1eee9f), _0x4ac9cf['restore']();
            }
        }
    } else {
        if (this['flag_flying']) {
            var _0x1eee9f = 0x1f4 / 0x154;
            if (this['flag_flying'] && !this['flag_isGrabbed']) {
                _0x4ac9cf['save']();
                var _0x345e1f = (_0x397f50 - this['spawnTime']) / 0x3e8,
                    _0x178e78 = !(_0x25ea67 == 0x2 || _0x50a9ba) ? _0x23fdc7(_0x345e1f, 0.5, 0.3, 0x2) : this['birdNoAnimationFlyWingAngle'],
                    _0x1a9444 = this['getSkinImageObj'](this['getWing']('raven', 0x1, !![]));
                if (_0x1a9444) {
                    _0x4ac9cf['save']();
                    var _0x141316 = -(-0.2 + _0x178e78) * _0x40941f,
                        _0xba2532 = this['rad'] * 0.8;
                    _0x4ac9cf['rotate'](_0x142401(0x2d) + _0x141316);
                    var _0x391998 = 0x0,
                        _0x181699 = this['rad'],
                        _0x4c14b6 = _0xba2532 * 0x2 * 0.62,
                        _0x2422de = _0xba2532 * 2.5,
                        _0x47fe4d = 0.2,
                        _0x3a5eff = 1.7;
                    _0x4ac9cf['drawImage'](_0x1a9444, _0x391998 + _0x4c14b6 * -_0x47fe4d, _0x181699 + _0x2422de * -_0x3a5eff, _0x4c14b6, _0x2422de), _0x4ac9cf['restore']();
                }
                var _0x1a9444 = this['getSkinImageObj'](this['getWing']('raven', 0x2, !![]));
                if (_0x1a9444) {
                    _0x4ac9cf['save']();
                    var _0x141316 = -(-0.2 + _0x178e78) * _0x142401(-0x5a),
                        _0xba2532 = this['rad'] * 0.8;
                    _0x4ac9cf['rotate'](_0x142401(-0x2d) + _0x141316);
                    var _0x391998 = 0x0,
                        _0x181699 = this['rad'],
                        _0x4c14b6 = _0xba2532 * 0x2 * 0.62,
                        _0x2422de = _0xba2532 * 2.5,
                        _0x47fe4d = 0.8,
                        _0x3a5eff = 1.7;
                    _0x4ac9cf['drawImage'](_0x1a9444, _0x391998 + _0x4c14b6 * -_0x47fe4d, _0x181699 + _0x2422de * -_0x3a5eff, _0x4c14b6, _0x2422de), _0x4ac9cf['restore']();
                }
                _0x4ac9cf['restore']();
            }
            if (this['specType'] != 0x0 && this['specType'] != undefined) {
                var _0x3ac9e0 = this['getSkinImageObj'](this['getHead']('raven', !![]));
                if (_0x3ac9e0) {
                    _0x4ac9cf['save']();
                    var _0xba2532 = this['rad'];
                    _0x4ac9cf['drawImage'](_0x3ac9e0, -_0xba2532 * _0x1eee9f, (-_0xba2532 + _0xba2532 * 0.1) * _0x1eee9f, 0x2 * _0xba2532 * _0x1eee9f, 0x2 * _0xba2532 * _0x1eee9f), _0x4ac9cf['restore']();
                }
            }
        }
    }
}
};

function _0xe6cf20() {
_0xe6cf20['superClass']['call'](this, _0x4acf80);
}
window['Raven'] = _0xe6cf20, _0x3360d0['setCustomClassForGameObjType'](_0xe6cf20, _0x4acf80, _0x2555a8);
var _0x13295b = _0x82b01c,
_0xec194 = _0x54c5f1;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194, _0x82b01c['prototype']['updateZ'] = function () {
this['z'] = 0x186a2;
}, _0x82b01c['prototype']['customDraw'] = function (_0x5976fc) {
_0x4ac9cf['save']();
var _0x5b3edb = _0x4ac9cf['globalAlpha'];
_0x4ac9cf['globalAlpha'] = 0.1 * _0x5b3edb, _0x486a28(0x0, 0x0, this['rad'], '#755A2A'), _0x4ac9cf['restore'](), this['drawChat']();
}, _0x82b01c['prototype']['drawChat'] = function () {
if (this['aLine'] == null) return;
_0x4ac9cf['save'](), _0x4ac9cf['font'] = '10px Arial', _0x4ac9cf['lineWidth'] = 0x1, _0x4ac9cf['textAlign'] = 'center', _0x4ac9cf['textBaseline'] = 'middle';
var _0x4a9560 = this['aLine'],
    _0x40f79f = _0x397f50 > _0x4a9560['chatFadeT'] ? 0x0 : 0x1;
_0x4a9560['chatA'] += (_0x40f79f - _0x4a9560['chatA']) * 0.1, _0x4ac9cf['shadowOffsetX'] = 0x0, _0x4ac9cf['shadowOffsetY'] = 0x0;
_0x4a9560['chatA'] < 0.02 && (this['aLine'] = null);
var _0x2150e9 = _0x4ac9cf['measureText'](_0x4a9560['chatTxt'])['width'],
    _0x46c878 = 0xa,
    _0x2796fb = 0x1,
    _0x2b79b7 = 0x1;
_0x4ac9cf['globalAlpha'] = 0.8 * _0x4a9560['chatA'], _0x4ac9cf['fillStyle'] = _0x3d30ff(this['curBiome']), _0x4ac9cf['fillRect'](this['x'] - _0x2796fb - _0x2150e9 / 0x2, this['y'] - this['rad'] - _0x46c878 / 0x2 - _0x2b79b7, _0x2150e9 + _0x2796fb * 0x2, _0x46c878 + _0x2b79b7 * 0x2), _0x4ac9cf['fillStyle'] = '#F1C34C', !(_0x25ea67 == 0x2) && (_0x4ac9cf['shadowOffsetX'] = 0x1, _0x4ac9cf['shadowOffsetY'] = 0x1, _0x4ac9cf['shadowColor'] = 'black'), _0x4ac9cf['globalAlpha'] = _0x4a9560['chatA'], _0x4ac9cf['fillText'](_0x4a9560['chatTxt'], this['x'], this['y'] - this['rad']), _0x4ac9cf['restore']();
};

function _0x82b01c() {
_0x82b01c['superClass']['call'](this);
}
_0x82b01c['prototype']['aLine'] = null, _0x82b01c['prototype']['readCustomData_onNewlyVisible'] = function (_0x159d70) {
_0x82b01c['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x159d70), this['aLine'] = {
    'chatTxt': 'CAW!!!',
    'chatFadeT': _0x397f50 + 0x7d0,
    'chatA': 0x0
};
}, window['RavenCaw'] = _0x82b01c, _0x3360d0['setCustomClassForGameObjType'](_0x82b01c, _0x1b8199, _0xb04972);
var _0x35618c = _0x35618c,
_0xec194 = _0x1dd8d7;
_0x35618c['prototype'] = Object['create'](_0xec194['prototype']), _0x35618c['prototype']['constructor'] = _0x35618c, _0x35618c['superClass'] = _0xec194, _0x35618c['prototype']['animalInfo'] = function () {
var _0x1803c2 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x1803c2['aniName'] = 'Kakapo';
    break;
case 0xca:
    _0x1803c2['aniName'] = 'Wind-up Kakapo';
    break;
}
return _0x1803c2['aniCol'] = '#FF9000', _0x1803c2['skinName'] = this['getSkinName'](), _0x1803c2['upgradeText'] = 'UPGRADED to ' + _0x1803c2['aniName'] + '!\x0aHold W to hop around.\x0a(Hint: Use ability on prey to stun them) ', _0x1803c2;
}, _0x35618c['prototype']['getSkinName'] = function () {
return this['getSpeciesPath']() + this['getSubSpecies']() + '/kakapo' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x35618c['prototype']['getSpeciesPath'] = function () {
return 'forest/kakapo/' + this['animalSpecies'];
}, _0x35618c['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x35618c['prototype']['getWing'] = function (_0x5010ce, _0x46c879, _0x33ffba) {
var _0x1d7d2a = 'skins/' + this['getSpeciesPath']() + '/';
return _0x1d7d2a += _0x5010ce + '_wing' + _0x46c879 + '.png', _0x1d7d2a;
}, _0x35618c['prototype']['getHead'] = function (_0x55cb98, _0x120685) {
var _0x57cdc6 = 'skins/' + this['getSpeciesPath']() + '/';
return _0x57cdc6 += _0x55cb98 + '_head.png', _0x57cdc6;
};
var _0x3affe7 = 0x0,
_0x1c444e = 1.25,
_0x1fc3f2 = 0x5,
_0x4ab339 = 0x1;
_0x35618c['prototype']['biteStart'] = 0x0, _0x35618c['prototype']['flapAmount'] = 0x3, _0x35618c['prototype']['flapDur'] = 0.7, _0x35618c['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) {
    this['biteStart'] = 0x0;
    return;
} else {
    if (!this['flag_flying']) {
        this['biteStart'] == 0x0 && (this['biteStart'] = _0x397f50);
        if (this['specType'] != 0x0 && this['specType'] != undefined) {
            var _0x11b30c = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/kakapo_head.png'),
                _0x34fcca = (_0x397f50 - this['biteStart']) / 0x3e8,
                _0x1f2235 = this['skinScale'] * 1.1,
                _0x4a4c87 = this['skinRad'];
            _0x14259c = !(_0x25ea67 == 0x2) ? _0x23fdc7(_0x34fcca, this['flapDur'], 0.05, 0x2) : 0.05;
            var _0x175c13 = this['getSkinImageObj'](this['getWing']('kakapo', 0x1, !![]));
            if (_0x175c13) {
                _0x4ac9cf['save']();
                var _0x2820d6 = -(-0.2 + _0x14259c) * _0x40941f,
                    _0x4a4c87 = this['rad'] * 0.9;
                _0x4ac9cf['rotate'](_0x142401(_0x1fc3f2) + _0x2820d6);
                var _0x3d0b10 = 0x0,
                    _0x5dab52 = this['rad'],
                    _0x57b172 = _0x4a4c87 * 0x2 * 0.62,
                    _0xbcb0ae = _0x4a4c87 * 2.5,
                    _0x107a0e = _0x3affe7,
                    _0x28ff6d = _0x1c444e;
                _0x4ac9cf['drawImage'](_0x175c13, _0x3d0b10 + _0x57b172 * -_0x107a0e, _0x5dab52 + _0xbcb0ae * -_0x28ff6d, _0x57b172, _0xbcb0ae), _0x4ac9cf['restore']();
            }
            var _0x175c13 = this['getSkinImageObj'](this['getWing']('kakapo', 0x2, !![]));
            if (_0x175c13) {
                _0x4ac9cf['save']();
                var _0x2820d6 = -(-0.2 + _0x14259c) * _0x142401(-0x5a),
                    _0x4a4c87 = this['rad'] * 0.9;
                _0x4ac9cf['rotate'](_0x142401(-_0x1fc3f2) + _0x2820d6);
                var _0x3d0b10 = 0x0,
                    _0x5dab52 = this['rad'],
                    _0x57b172 = _0x4a4c87 * 0x2 * 0.62,
                    _0xbcb0ae = _0x4a4c87 * 2.5,
                    _0x107a0e = _0x4ab339,
                    _0x28ff6d = _0x1c444e;
                _0x4ac9cf['drawImage'](_0x175c13, _0x3d0b10 + _0x57b172 * -_0x107a0e, _0x5dab52 + _0xbcb0ae * -_0x28ff6d, _0x57b172, _0xbcb0ae), _0x4ac9cf['restore']();
            }
            if (_0x11b30c) {
                _0x14259c = 0x0;
                !this['flag_flying'] && (_0x14259c = !(_0x25ea67 == 0x2) ? _0x23fdc7(_0x34fcca, this['flapDur'], this['flapAmount'], 0x2) : this['flapAmount']);
                _0x4ac9cf['save']();
                var _0x4a4c87 = this['rad'];
                _0x4ac9cf['drawImage'](_0x11b30c, -_0x4a4c87 * _0x1f2235, (-_0x4a4c87 + _0x4a4c87 * 0.1) * _0x1f2235 + _0x14259c, 0x2 * _0x4a4c87 * _0x1f2235, 0x2 * _0x4a4c87 * _0x1f2235), _0x4ac9cf['restore']();
            }
        }
    } else {
        if (this['flag_flying']) {
            var _0x1f2235 = 0x1f4 / 0x154;
            if (this['flag_flying'] && !this['flag_isGrabbed']) {
                _0x4ac9cf['save']();
                var _0x34fcca = (_0x397f50 - this['spawnTime']) / 0x3e8,
                    _0x14259c = !(_0x25ea67 == 0x2 || _0x50a9ba) ? _0x23fdc7(_0x34fcca, 0.5, 0.3, 0x2) : this['birdNoAnimationFlyWingAngle'],
                    _0x175c13 = this['getSkinImageObj'](this['getWing']('kakapo', 0x1, !![]));
                if (_0x175c13) {
                    _0x4ac9cf['save']();
                    var _0x2820d6 = -(-0.2 + _0x14259c) * _0x40941f,
                        _0x4a4c87 = this['rad'] * 0.8;
                    _0x4ac9cf['rotate'](_0x142401(0x2d) + _0x2820d6);
                    var _0x3d0b10 = 0x0,
                        _0x5dab52 = this['rad'],
                        _0x57b172 = _0x4a4c87 * 0x2 * 0.62,
                        _0xbcb0ae = _0x4a4c87 * 2.5,
                        _0x107a0e = 0.2,
                        _0x28ff6d = 1.7;
                    _0x4ac9cf['drawImage'](_0x175c13, _0x3d0b10 + _0x57b172 * -_0x107a0e, _0x5dab52 + _0xbcb0ae * -_0x28ff6d, _0x57b172, _0xbcb0ae), _0x4ac9cf['restore']();
                }
                var _0x175c13 = this['getSkinImageObj'](this['getWing']('kakapo', 0x2, !![]));
                if (_0x175c13) {
                    _0x4ac9cf['save']();
                    var _0x2820d6 = -(-0.2 + _0x14259c) * _0x142401(-0x5a),
                        _0x4a4c87 = this['rad'] * 0.8;
                    _0x4ac9cf['rotate'](_0x142401(-0x2d) + _0x2820d6);
                    var _0x3d0b10 = 0x0,
                        _0x5dab52 = this['rad'],
                        _0x57b172 = _0x4a4c87 * 0x2 * 0.62,
                        _0xbcb0ae = _0x4a4c87 * 2.5,
                        _0x107a0e = 0.8,
                        _0x28ff6d = 1.7;
                    _0x4ac9cf['drawImage'](_0x175c13, _0x3d0b10 + _0x57b172 * -_0x107a0e, _0x5dab52 + _0xbcb0ae * -_0x28ff6d, _0x57b172, _0xbcb0ae), _0x4ac9cf['restore']();
                }
                _0x4ac9cf['restore']();
            }
            if (this['specType'] != 0x0 && this['specType'] != undefined) {
                var _0x11b30c = this['getSkinImageObj'](this['getHead']('kakapo', !![]));
                if (_0x11b30c) {
                    _0x4ac9cf['save']();
                    var _0x4a4c87 = this['rad'];
                    _0x4ac9cf['drawImage'](_0x11b30c, -_0x4a4c87 * _0x1f2235, (-_0x4a4c87 + _0x4a4c87 * 0.1) * _0x1f2235, 0x2 * _0x4a4c87 * _0x1f2235, 0x2 * _0x4a4c87 * _0x1f2235), _0x4ac9cf['restore']();
                }
            }
        }
    }
}
}, _0x35618c['prototype']['getAbilityInfo'] = function (_0xaf9c1a) {
var _0x1c8d47 = {};
return _0x1c8d47['abilName'] = 'Hop!', _0x1c8d47['abilImg'] = 'abilities/Jump.svg', _0x1c8d47['skinThemeID'] = this['skinThemeID'], _0x1c8d47['mopeSeasonID'] = this['mopeSeasonID'], _0x1c8d47;
};

function _0x35618c() {
_0x35618c['superClass']['call'](this, _0x4acf80);
}
window['Kakapo'] = _0x35618c, _0x3360d0['setCustomClassForGameObjType'](_0x35618c, _0x4acf80, _0xa1b5d7);
var _0x4ba5e6 = _0x4ba5e6,
_0xec194 = _0x1dd8d7;
_0x4ba5e6['prototype'] = Object['create'](_0xec194['prototype']), _0x4ba5e6['prototype']['constructor'] = _0x4ba5e6, _0x4ba5e6['superClass'] = _0xec194, _0x4ba5e6['prototype']['objSkinSpotsCanvas'] = null, _0x4ba5e6['prototype']['animalInfo'] = function () {
var _0x299cb3 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x299cb3['aniName'] = 'Mole';
    break;
case 0x64:
    _0x299cb3['aniName'] = 'Zombie Mole';
    break;
case 0xca:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x299cb3['aniName'] = 'Toxic Mole';
        break;
    case 0x1:
        _0x299cb3['aniName'] = 'Cytokinetic Mole';
        break;
    }
    break;
}
return _0x299cb3['aniDesc'] = '', _0x299cb3['upgradeText'] = 'UPGRADED to ' + _0x299cb3['aniName'] + '!\x0a Hold W to dig underground!\x0aGo under anything, do surprise attacks!', _0x299cb3['aniCol'] = '#4C4A45', _0x299cb3['skinName'] = this['getSkinName'](), _0x299cb3;
}, _0x4ba5e6['prototype']['getSkinName'] = function () {
return 'land/mole/' + this['animalSpecies'] + this['getSubSpecies']() + '/mole';
}, _0x4ba5e6['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
}, _0x4ba5e6['prototype']['getAbilityInfo'] = function (_0x59cce9) {
var _0x371462 = {};
return _0x371462['abilName'] = 'Hold to Dig', _0x371462['abilImg'] = 'abilities/Dig.svg', _0x371462['skinThemeID'] = this['skinThemeID'], _0x371462['mopeSeasonID'] = this['mopeSeasonID'], _0x371462;
};

function _0x4ba5e6() {
_0x4ba5e6['superClass']['call'](this, _0x4acf80);
}
window['Mole'] = _0x4ba5e6, _0x3360d0['setCustomClassForGameObjType'](_0x4ba5e6, _0x4acf80, _0x176a10);
var _0xec194 = _0x5adfe2;
_0x2d3236['prototype'] = Object['create'](_0xec194['prototype']), _0x2d3236['prototype']['constructor'] = _0x2d3236, _0x2d3236['superClass'] = _0xec194, _0x2d3236['prototype']['updateZ'] = function () {
this['z'] = 0x3f2;
}, _0x2d3236['prototype']['setSkinPath'] = function () {
this['objSkinPath'] = 'img/coin/coin' + (this['isEdibleOutlined']() ? '_e' : '') + '.png';
}, _0x2d3236['prototype']['customDraw'] = function (_0x4cddf1) {
var _0x5e6c01 = this['getSkinImageObj'](this['objSkinPath']);
if (_0x5e6c01) {
    var _0x4802b3 = this['rad'];
    _0x4ac9cf['drawImage'](_0x5e6c01, -_0x4802b3, -_0x4802b3, 0x2 * _0x4802b3, 0x2 * _0x4802b3);
}
};
var _0x575b83 = 0x84;

function _0x2d3236() {
_0x2d3236['superClass']['call'](this, _0x575b83), _0x2d3236['prototype']['easeAngleChanges'] = !![];
}
window['MopeCoin'] = _0x2d3236, _0x3360d0['setCustomClassForGameObjType'](_0x2d3236, _0x575b83);
var _0xec194 = _0x5adfe2;
_0x55dbce['prototype'] = Object['create'](_0xec194['prototype']), _0x55dbce['prototype']['constructor'] = _0x55dbce, _0x55dbce['superClass'] = _0xec194, _0x55dbce['prototype']['color'] = 'limegreen', _0x55dbce['prototype']['updateZ'] = function () {
this['z'] = this['rad'] + 0xa98670;
}, _0x55dbce['prototype']['customDraw'] = function (_0x384349) {
_0x4ac9cf['save']();
var _0x57cc61 = 0.4,
    _0x34f344 = 0x8;
this['shrinkRad'] > 0xfa && (_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.1, _0x24111c(0x0, 0x0, this['shrinkRad'], _0x34f344 * 0.5, this['color']), _0x4ac9cf['restore']());
_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = _0x57cc61 + 0.3, _0x24111c(0x0, 0x0, this['rad'], _0x34f344, this['color']), _0x4ac9cf['restore']();
this['rad'] > 0x5dc && (_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = _0x57cc61, _0x24111c(0x0, 0x0, this['shrinkedRad'], _0x34f344, _0x4fa567), _0x4ac9cf['restore']());
var _0x25d6ad = _0x185dc5 * (_0xa7125 / 0x2),
    _0x96abd3 = _0x185dc5 * (_0x362064 / 0x2),
    _0x46de31 = _0x57cc61 - 0.1,
    _0x2ddc4c = this['color'],
    _0x1c6fb6 = _0x362064,
    _0x5ecaed = _0xa7125,
    _0x36a0d8 = _0x1c6fb6 - this['x'],
    _0x34797f = _0x5ecaed - this['y'],
    _0x4bc0a5 = this['x'],
    _0x4690ef = _0x34797f,
    _0x3e9e41 = _0x4bc0a5,
    _0x2962c1 = this['y'],
    _0x2058e8 = _0x36a0d8,
    _0xf534f5 = _0x2962c1;
_0x36a0d8 = _0x185dc5 * _0x36a0d8, _0x34797f = _0x185dc5 * _0x34797f, _0x4bc0a5 = _0x185dc5 * _0x4bc0a5, _0x4690ef = _0x185dc5 * _0x4690ef, _0x3e9e41 = _0x185dc5 * _0x3e9e41, _0x2962c1 = _0x185dc5 * _0x2962c1, _0x2058e8 = _0x185dc5 * _0x2058e8, _0xf534f5 = _0x185dc5 * _0xf534f5, this['drawDangerAreaSegment2'](0x0, _0x2ddc4c, _0x46de31, _0x34797f, _0x36a0d8), this['drawDangerAreaSegment2'](Math['PI'] * 0.5, _0x2ddc4c, _0x46de31, _0x4bc0a5, _0x4690ef), this['drawDangerAreaSegment2'](Math['PI'] * 0x1, _0x2ddc4c, _0x46de31, _0x2962c1, _0x3e9e41), this['drawDangerAreaSegment2'](Math['PI'] * 1.5, _0x2ddc4c, _0x46de31, _0x2058e8, _0xf534f5), _0x4ac9cf['restore']();
}, _0x55dbce['prototype']['drawDangerAreaSegment2'] = function (_0x2cc380, _0xf31be1, _0x1fc243, _0x444d60, _0x3fca6c) {
_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = _0x1fc243, _0x4ac9cf['fillStyle'] = _0xf31be1, _0x4ac9cf['beginPath'](), _0x4ac9cf['rotate'](_0x2cc380), _0x4ac9cf['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0.5, ![]), _0x4ac9cf['lineTo'](0x0, _0x444d60), _0x4ac9cf['lineTo'](_0x3fca6c, _0x444d60), _0x4ac9cf['lineTo'](_0x3fca6c, 0x0), _0x4ac9cf['closePath'](), _0x4ac9cf['fill'](), _0x4ac9cf['restore']();
}, _0x55dbce['prototype']['moveUpdate'] = function () {
var _0x1b1d2c = (_0x397f50 - this['updateTime']) / 0x3e8 / _0x324868;
return _0x1b1d2c = 0x0 > _0x1b1d2c ? 0x0 : 0x1 < _0x1b1d2c ? 0x1 : _0x1b1d2c, this['x'] = _0x1b1d2c * (this['nx'] - this['ox']) + this['ox'], this['y'] = _0x1b1d2c * (this['ny'] - this['oy']) + this['oy'], this['rad'] += (this['nRad'] - this['rad']) * 0.1, Math['min'](0x1, _0x1b1d2c);
}, _0x55dbce['prototype']['readUpdatedProperty'] = function (_0x154407, _0x2012b1) {
_0x154407 == _0x53034d && (this['shrinkRad'] = _0x2012b1['readUInt32']() / 0x4);
}, _0x55dbce['prototype']['readCustomData_onNewlyVisible'] = function (_0xd53e2a) {
this['shrinkRad'] = _0xd53e2a['readUInt32']() / 0x4;
};

function _0x55dbce() {
_0x55dbce['superClass']['call'](this, _0x367396), _0x55dbce['prototype']['easeAngleChanges'] = !![], this['color'] = _0x5332af == _0x43310f ? 'limegreen' : 'red';
}
window['SafeArea'] = _0x55dbce, _0x3360d0['setCustomClassForGameObjType'](_0x55dbce, _0x367396);
var _0xec194 = _0x1dd8d7;
_0x4b771['prototype'] = Object['create'](_0xec194['prototype']), _0x4b771['prototype']['constructor'] = _0x4b771, _0x4b771['superClass'] = _0xec194, _0x4b771['prototype']['animalInfo'] = function () {
var _0x17b6d1 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x17b6d1['aniName'] = 'Snow Leopard!';
    break;
case 0x64:
    _0x17b6d1['aniName'] = 'Frostaline';
    break;
case 0xc9:
    _0x17b6d1['aniName'] = 'Coral Queen';
    break;
case 0xca:
    _0x17b6d1['aniName'] = 'Astral Leopard';
    break;
case 0xcc:
    _0x17b6d1['aniName'] = 'Martian Leopard';
    break;
}
return _0x17b6d1['skinName'] = this['getSkinName'](), _0x17b6d1['aniDesc'] = '', _0x17b6d1['upgradeText'] = 'UPGRADED to ' + _0x17b6d1['aniName'] + '!\x0a Press W to get a speed boost! (Every 8 seconds)!', _0x17b6d1['aniCol'] = '#cfcfcf', _0x17b6d1;
}, _0x4b771['prototype']['getSkinName'] = function () {
return 'arctic/snowleopard/' + this['animalSpecies'] + this['getSubSpecies']() + '/snowleopard';
}, _0x4b771['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x4b771['prototype']['getAbilityInfo'] = function (_0x45a799) {
var _0x357d08 = {};
return _0x357d08['abilName'] = 'Extra Boost', _0x357d08['abilImg'] = 'abilities/Dash-Boost.svg', _0x357d08['skinThemeID'] = this['skinThemeID'], _0x357d08['mopeSeasonID'] = this['mopeSeasonID'], _0x357d08;
};

function _0x4b771() {
_0x4b771['superClass']['call'](this, _0x4acf80);
}
window['SnowLeopard'] = _0x4b771, _0x3360d0['setCustomClassForGameObjType'](_0x4b771, _0x4acf80, _0x1c2360);
var _0xec194 = _0x5adfe2;
_0xbcffdb['prototype'] = Object['create'](_0xec194['prototype']), _0xbcffdb['prototype']['constructor'] = _0xbcffdb, _0xbcffdb['superClass'] = _0xec194, _0xbcffdb['prototype']['updateZ'] = function () {
this['z'] = 0xf4240;
};
var _0x294e3d = -0.3,
_0xe829b9 = -0.2,
_0x1c626a = 0.3,
_0x1433a9 = -0.2,
_0x5d793b = 0.2;
_0xbcffdb['prototype']['customDraw'] = function (_0x2b5d26) {
var _0x14fb51 = 0x1f4 / 0x154;
_0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['angle']);
var _0x584aba = this['rad'],
    _0x1e5f58 = this['getSkinImageObj'](this['getBody']('battleduck', !![]));
_0x1e5f58 && (_0x4ac9cf['save'](), _0x4ac9cf['drawImage'](_0x1e5f58, -_0x584aba * _0x14fb51, -_0x584aba * _0x14fb51, 0x2 * _0x584aba * _0x14fb51, 0x2 * _0x584aba * _0x14fb51), _0x4ac9cf['restore']());
var _0x78ead6 = (_0x397f50 - this['spawnTime']) / 0x3e8,
    _0x2f2055 = !(_0x25ea67 == 0x2 || _0x50a9ba) ? _0x23fdc7(_0x78ead6, 2.5, 0.3, 0x2) : this['birdNoAnimationFlyWingAngle'],
    _0x1e1068 = this['getSkinImageObj'](this['getWing']('battleduck', 0x1, !![]));
if (_0x1e1068) {
    _0x4ac9cf['save']();
    var _0x20f371 = -(-0.2 + _0x2f2055) * _0x40941f,
        _0x584aba = this['rad'] * 0x1;
    _0x4ac9cf['rotate'](_0x142401(0x2d) + _0x20f371);
    var _0x2dc8f5 = 0x0,
        _0x1767b6 = this['rad'],
        _0x305df9 = _0x584aba * 0x2 * 0.62,
        _0x14ef2d = _0x584aba * 2.5,
        _0x5aa9a5 = 0.2 + _0x294e3d,
        _0x45c6ed = 1.7 + _0xe829b9;
    _0x4ac9cf['drawImage'](_0x1e1068, _0x2dc8f5 + _0x305df9 * -_0x5aa9a5, _0x1767b6 + _0x14ef2d * -_0x45c6ed, _0x305df9, _0x14ef2d), _0x4ac9cf['restore']();
}
var _0x1e1068 = this['getSkinImageObj'](this['getWing']('battleduck', 0x2, !![]));
if (_0x1e1068) {
    _0x4ac9cf['save']();
    var _0x20f371 = -(-0.2 + _0x2f2055) * _0x142401(-0x5a),
        _0x584aba = this['rad'] * 0x1;
    _0x4ac9cf['rotate'](_0x142401(-0x2d) + _0x20f371);
    var _0x2dc8f5 = 0x0,
        _0x1767b6 = this['rad'],
        _0x305df9 = _0x584aba * 0x2 * 0.62,
        _0x14ef2d = _0x584aba * 2.5,
        _0x5aa9a5 = 0.8 + _0x1c626a,
        _0x45c6ed = 1.7 + _0x1433a9;
    _0x4ac9cf['drawImage'](_0x1e1068, _0x2dc8f5 + _0x305df9 * -_0x5aa9a5, _0x1767b6 + _0x14ef2d * -_0x45c6ed, _0x305df9, _0x14ef2d), _0x4ac9cf['restore']();
}
var _0x53d1fc = this['getSkinImageObj'](this['getHead']('battleduck', !![]));
if (_0x53d1fc) {
    _0x4ac9cf['save']();
    var _0x584aba = this['rad'];
    _0x4ac9cf['drawImage'](_0x53d1fc, -_0x584aba * _0x14fb51, (-_0x584aba + _0x584aba * _0x5d793b) * _0x14fb51, 0x2 * _0x584aba * _0x14fb51, 0x2 * _0x584aba * _0x14fb51), _0x4ac9cf['restore']();
}
_0x4ac9cf['restore']();
}, _0xbcffdb['prototype']['getSpeciesPath'] = function (_0x9f0807) {
return _0x9f0807 + '/' + this['speciesType'];
}, _0xbcffdb['prototype']['getWing'] = function (_0x448b0e, _0x36ff29, _0x11d232) {
var _0x110638 = 'skins/' + (_0x11d232 ? this['getSpeciesPath'](_0x448b0e) + '/' : _0x448b0e + '/');
return _0x110638 += _0x448b0e + '_wing' + _0x36ff29 + '.png', _0x110638;
}, _0xbcffdb['prototype']['getBody'] = function (_0x49edf1, _0x30640b) {
var _0xbd91dc = 'skins/' + (_0x30640b ? this['getSpeciesPath'](_0x49edf1) + '/' : _0x49edf1 + '/');
return _0xbd91dc += _0x49edf1 + '_body.png', _0xbd91dc;
}, _0xbcffdb['prototype']['getHead'] = function (_0x5e6e66, _0x3101ee) {
var _0x4992f1 = 'skins/' + (_0x3101ee ? this['getSpeciesPath'](_0x5e6e66) + '/' : _0x5e6e66 + '/');
return _0x4992f1 += _0x5e6e66 + '_head.png', _0x4992f1;
};
var _0xdd9a45 = 0x85;

function _0xbcffdb() {
_0xbcffdb['superClass']['call'](this, _0xdd9a45), console['log']('@@@@@@@@@@@@ BATTLE DUCK SPAWNED @@@@@@@@@');
}
window['BattleDuck'] = _0xbcffdb, _0x3360d0['setCustomClassForGameObjType'](_0xbcffdb, _0xdd9a45);
var _0x490a70 = _0x490a70,
_0xec194 = _0x1dd8d7;
_0x490a70['prototype'] = Object['create'](_0xec194['prototype']), _0x490a70['prototype']['constructor'] = _0x490a70, _0x490a70['superClass'] = _0xec194, _0x490a70['prototype']['objSkinSpotsCanvas'] = null, _0x490a70['prototype']['animalInfo'] = function () {
var _0x1d28d0 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x1d28d0['aniName'] = 'Giraffe';
    break;
case 0x1:
    _0x1d28d0['aniName'] = 'Momaffie';
    break;
case 0x2:
    _0x1d28d0['aniName'] = 'Girabie';
    break;
case 0x3:
    _0x1d28d0['aniName'] = 'Momaffie Family';
    break;
case 0xca:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x1d28d0['aniName'] = 'Quilin Giraffe';
        break;
    case 0x1:
        _0x1d28d0['aniName'] = 'Draquorum';
    }
    break;
}
return _0x1d28d0['upgradeText'] = 'UPGRADED to ' + _0x1d28d0['aniName'] + '!\x0aGiraffe have huge legs and stomp anyone in their way!', _0x1d28d0['aniCol'] = '#E9BD23', _0x1d28d0['skinName'] = this['getSkinName'](), _0x1d28d0;
}, _0x490a70['prototype']['getSkinName'] = function () {
let _0x426b45 = this['getSpeciesPath']() + '/giraffe';
if (this['id'] == 0x0 && this['animalSpecies'] == 0x3) _0x426b45 += '_family';
return _0x426b45;
}, _0x490a70['prototype']['getSpeciesPath'] = function () {
return 'land/giraffe/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x490a70['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
}, _0x490a70['prototype']['getAbilityInfo'] = function (_0x33b2ab) {
var _0x5cfb68 = {};
return _0x5cfb68['abilName'] = 'Stomp!', _0x5cfb68['abilImg'] = 'abilities/Stomp.svg', _0x5cfb68['skinThemeID'] = this['skinThemeID'], _0x5cfb68['mopeSeasonID'] = this['mopeSeasonID'], _0x5cfb68;
}, _0x490a70['prototype']['isEdibleOutlined'] = function () {
if (this['mommyID'] == _0x46868a) return ![];
return _0x490a70['superClass']['prototype']['isEdibleOutlined']['call'](this);
}, _0x490a70['prototype']['readCustomData_onNewlyVisible'] = function (_0x590296) {
_0x490a70['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x590296), this['mommyID'] = _0x590296['readUInt32']();
};

function _0x490a70() {
_0x490a70['superClass']['call'](this, _0x4acf80);
}
window['Giraffe'] = _0x490a70, _0x3360d0['setCustomClassForGameObjType'](_0x490a70, _0x4acf80, _0x1c4f76);
var _0x3f9b21 = _0x3f9b21,
_0xec194 = _0x1dd8d7;
_0x3f9b21['prototype'] = Object['create'](_0xec194['prototype']), _0x3f9b21['prototype']['constructor'] = _0x3f9b21, _0x3f9b21['superClass'] = _0xec194, _0x3f9b21['prototype']['objSkinSpotsCanvas'] = null, _0x3f9b21['prototype']['getSkinName'] = function () {
let _0x25a7b8 = this['getSpeciesPath']() + '/giraffe';
if (this['specType'] > 0x0) _0x25a7b8 += '' + this['specType'];
if (this['id'] == 0x0 && this['animalSpecies'] == 0x2) _0x25a7b8 += '_family';
return _0x25a7b8;
}, _0x3f9b21['prototype']['getSpeciesPath'] = function () {
return 'forest/whitegiraffe/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x3f9b21['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x3f9b21['prototype']['animalInfo'] = function () {
var _0x125cee = {};
switch (this['animalSpecies']) {
case 0x1:
    _0x125cee['aniName'] = 'White Giraffe';
    break;
case 0x2:
    _0x125cee['aniName'] = 'Giraffe Family';
    break;
}
return _0x125cee['aniDesc'] = '', _0x125cee['upgradeText'] = 'UPGRADED to ' + _0x125cee['aniName'] + '!\x0aWhite Giraffe are very aggressive and have huge legs and stomp anyone in their way!', _0x125cee['aniCol'] = '#E9BD23', _0x125cee['skinName'] = this['getSkinName'](), _0x125cee;
}, _0x3f9b21['prototype']['getAbilityInfo'] = function (_0x2544ec) {
var _0x4dfff0 = {};
return _0x4dfff0['abilName'] = 'Stomp!', _0x4dfff0['abilImg'] = 'abilities/Stomp.svg', _0x4dfff0['skinThemeID'] = this['skinThemeID'], _0x4dfff0['mopeSeasonID'] = this['mopeSeasonID'], _0x4dfff0;
};

function _0x3f9b21() {
_0x3f9b21['superClass']['call'](this, _0x4acf80);
}
window['WhiteGiraffe'] = _0x3f9b21, _0x3360d0['setCustomClassForGameObjType'](_0x3f9b21, _0x4acf80, _0x58f3da);
var _0xec194 = _0x1dd8d7;
_0x1ad88e['prototype'] = Object['create'](_0xec194['prototype']), _0x1ad88e['prototype']['constructor'] = _0x1ad88e, _0x1ad88e['superClass'] = _0xec194, _0x1ad88e['prototype']['getSkinName'] = function () {
return this['getSpeciesPath']() + '/turkey' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x1ad88e['prototype']['getSpeciesPath'] = function () {
return 'forest/turkey/' + this['animalSpecies'];
}, _0x1ad88e['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x1ad88e['prototype']['getWing'] = function (_0x3e54c4, _0x5b2c04, _0x46c6ab) {
var _0x232dbe = 'skins/' + this['getSpeciesPath']() + '/turkey';
return _0x232dbe += '_wing' + _0x5b2c04 + '.png', _0x232dbe;
}, _0x1ad88e['prototype']['getHead'] = function (_0x2b005e, _0x55e121) {
var _0xf216b2 = 'skins/' + this['getSpeciesPath']() + '/turkey';
return _0xf216b2 += '_head.png', _0xf216b2;
}, _0x1ad88e['prototype']['getAbilityInfo'] = function (_0x452427) {
var _0xc0142c = {};
if (this['flag_eff_isOnTree'] || this['flag_flying'] && this['flag_usingAbility']) _0xc0142c['abilName'] = 'Hold to Fly', _0xc0142c['abilImg'] = 'abilities/Fly.svg';
else this['flag_isClimbingHill'] ? (_0xc0142c['abilName'] = 'Shoots Eggs!', _0xc0142c['abilImg'] = 'abilities/Spit.svg') : (_0xc0142c['abilName'] = 'Front Kick\x0a(Hold to Charge)', _0xc0142c['abilImg'] = 'abilities/Kick.svg');
return _0xc0142c['skinThemeID'] = this['skinThemeID'], _0xc0142c['mopeSeasonID'] = this['mopeSeasonID'], _0xc0142c;
}, _0x1ad88e['prototype']['animalInfo'] = function () {
var _0x108dc8 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x108dc8['aniName'] = 'Turkey!';
    break;
}
return _0x108dc8['aniCol'] = '#FF9000', _0x108dc8['skinName'] = this['getSkinName'](), _0x108dc8['upgradeText'] = 'UPGRADED to ' + _0x108dc8['aniName'] + '!\x0aHold W to charge up a kick, fly from tree and shoot eggs from hill!', _0x108dc8;
};
var _0x17b9bf = 0.6,
_0xbbb55a = -1.5,
_0x45916c = -0x2;
_0x1ad88e['prototype']['drawUnderSkinImg'] = function () {
_0x4ac9cf['save']();
var _0x1cb17b = this['rad'] * _0x17b9bf,
    _0x493ff0 = 'tail';
if (this['flag_usingAbility']) {
    if (!this['flag_flying']) _0x493ff0 = 'tail1';
    _0xbbb55a = _0x45916c;
} else _0xbbb55a = -1.5;
_0x493ff0 = 'skins/' + this['getSpeciesPath']() + '/' + _0x493ff0 + '.png';
var _0x53b52a = this['getSkinImageObj'](_0x493ff0);
_0x53b52a && _0x4ac9cf['drawImage'](_0x53b52a, -_0x1cb17b * this['skinScale'] * 0x2, -_0x1cb17b * this['skinScale'] * 0x2 + _0x1cb17b * _0xbbb55a, 0x2 * _0x1cb17b * this['skinScale'] * 0x2, 0x3 * _0x1cb17b * this['skinScale']), _0x4ac9cf['restore']();
}, _0x1ad88e['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) return;
var _0x485bf8 = 0x1f4 / 0x154;
_0x4ac9cf['save']();
var _0x509c95 = this['flag_flying'] ? 0x2d : 0x14,
    _0x9c7762 = this['flag_flying'] ? 0x5a : 0x2d,
    _0xd8c615 = this['flag_flying'] ? 0.2 : 0.01,
    _0x1316e5 = this['flag_flying'] ? 2.5 : 2.2,
    _0x5462f7 = this['flag_flying'] ? 2.5 : 2.2,
    _0x52890d = this['flag_flying'] ? 0x0 : -0.4,
    _0x596a65 = this['flag_flying'] ? 0x0 : -0.2,
    _0xacc27a = this['flag_flying'] ? 0.5 : 1.2,
    _0x5ef75f = this['flag_flying'] ? 0.3 : 0.1,
    _0x57faa4 = (_0x397f50 - this['spawnTime']) / 0x3e8,
    _0x3aee73 = !(_0x25ea67 == 0x2 || _0x50a9ba) ? _0x23fdc7(_0x57faa4, _0xacc27a, _0x5ef75f, 0x2) : this['birdNoAnimationFlyWingAngle'],
    _0x2aaf66 = this['getSkinImageObj'](this['getWing']('turkey', 0x1, !![]));
if (_0x2aaf66) {
    _0x4ac9cf['save']();
    var _0x102379 = -(-_0xd8c615 + _0x3aee73) * _0x142401(_0x9c7762),
        _0x324aa5 = this['rad'] * 0.8;
    _0x4ac9cf['rotate'](_0x142401(_0x509c95) + _0x102379);
    var _0x5b2e08 = 0x0,
        _0x3cfe08 = this['rad'],
        _0x33da71 = _0x324aa5 * _0x5462f7 * 0.62,
        _0x42d827 = _0x324aa5 * _0x1316e5,
        _0x59a21c = 0.2 + _0x52890d,
        _0x505e80 = 1.7 + _0x596a65;
    _0x4ac9cf['drawImage'](_0x2aaf66, _0x5b2e08 + _0x33da71 * -_0x59a21c, _0x3cfe08 + _0x42d827 * -_0x505e80, _0x33da71, _0x42d827), _0x4ac9cf['restore']();
}
var _0x2aaf66 = this['getSkinImageObj'](this['getWing']('turkey', 0x2, !![]));
if (_0x2aaf66) {
    _0x4ac9cf['save']();
    var _0x102379 = -(-_0xd8c615 + _0x3aee73) * _0x142401(-_0x9c7762),
        _0x324aa5 = this['rad'] * 0.8;
    _0x4ac9cf['rotate'](_0x142401(-_0x509c95) + _0x102379);
    var _0x5b2e08 = 0x0,
        _0x3cfe08 = this['rad'],
        _0x33da71 = _0x324aa5 * _0x5462f7 * 0.62,
        _0x42d827 = _0x324aa5 * _0x1316e5,
        _0x59a21c = 0.8 - _0x52890d,
        _0x505e80 = 1.7 + _0x596a65;
    _0x4ac9cf['drawImage'](_0x2aaf66, _0x5b2e08 + _0x33da71 * -_0x59a21c, _0x3cfe08 + _0x42d827 * -_0x505e80, _0x33da71, _0x42d827), _0x4ac9cf['restore']();
}
_0x4ac9cf['restore']();
var _0x57a53c = 0.1;
if (this['specType'] == 0x2) _0x57a53c = -0.1;
var _0xa0194a = this['getSkinImageObj'](this['getHead']('turkey', !![]));
if (_0xa0194a) {
    _0x4ac9cf['save']();
    var _0x324aa5 = this['rad'];
    _0x4ac9cf['drawImage'](_0xa0194a, -_0x324aa5 * _0x485bf8, (-_0x324aa5 + _0x324aa5 * _0x57a53c) * _0x485bf8, 0x2 * _0x324aa5 * _0x485bf8, 0x2 * _0x324aa5 * _0x485bf8), _0x4ac9cf['restore']();
}
};

function _0x1ad88e() {
_0x1ad88e['superClass']['call'](this, _0x4acf80);
}
window['Turkey'] = _0x1ad88e;
var _0x3f63f1 = 0x70;
_0x3360d0['setCustomClassForGameObjType'](_0x1ad88e, _0x4acf80, _0x3f63f1);
var _0xec194 = _0x5adfe2;
_0x47ab15['prototype'] = Object['create'](_0xec194['prototype']), _0x47ab15['prototype']['constructor'] = _0x47ab15, _0x47ab15['superClass'] = _0xec194, _0x47ab15['prototype']['mommyID'] = 0x0, _0x47ab15['prototype']['updateZ'] = function () {
this['z'] = this['flag_flying'] ? 0x3e8 : this['rad'];
}, _0x47ab15['prototype']['customDraw'] = function (_0x17bfb4) {
_0x4ac9cf['save']();
var _0x421f68 = this['getSkinImageObj']('skins/forest/turkey/' + this['speciesType'] + '/turkeyegg' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
if (_0x421f68) {
    var _0x232a96 = this['rad'];
    _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x421f68, -_0x232a96, -_0x232a96, 0x2 * _0x232a96, 0x2 * _0x232a96);
}
_0x4ac9cf['restore']();
};
var _0x479a75 = 0x86;

function _0x47ab15() {
_0x47ab15['superClass']['call'](this, _0x479a75), this['doesDrawEffectScale'] = !![];
}
window['TurkeyEgg'] = _0x47ab15, _0x3360d0['setCustomClassForGameObjType'](_0x47ab15, _0x479a75);
var _0xec194 = _0x5adfe2;
_0x4b21f0['prototype'] = Object['create'](_0xec194['prototype']), _0x4b21f0['prototype']['constructor'] = _0x4b21f0, _0x4b21f0['superClass'] = _0xec194, _0x4b21f0['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x4b21f0['prototype']['customDraw'] = function (_0xaeb3d9) {
_0x4ac9cf['save']();
var _0xdb51a3 = 'gameobj/' + this['oType'] + '/' + this['oType'] + (this['isEdibleOutlined']() ? '_e' : '') + '.png',
    _0x5546fa = this['getSkinImageObj'](_0xdb51a3);
if (_0x5546fa) {
    var _0x36daed = this['rad'];
    this['angle'] = this['rPer'] * Math['PI'] * 0x2, _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x5546fa, -_0x36daed, -_0x36daed, 0x2 * _0x36daed, 0x2 * _0x36daed);
}
_0x4ac9cf['restore']();
};
var _0x2284ca = 0x87;

function _0x4b21f0() {
_0x4b21f0['superClass']['call'](this, _0x2284ca), this['doesDrawEffectScale'] = !![];
}
window['TurkeyLeg'] = _0x4b21f0, _0x3360d0['setCustomClassForGameObjType'](_0x4b21f0, _0x2284ca);
var _0xec194 = _0x5adfe2;
_0x47b527['prototype'] = Object['create'](_0xec194['prototype']), _0x47b527['prototype']['constructor'] = _0x47b527, _0x47b527['superClass'] = _0xec194, _0x47b527['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x47b527['prototype']['customDraw'] = function (_0x5b6d6a) {
_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1;
var _0x53d8a5 = 'gameobj/' + this['oType'] + '/' + this['oType'] + (this['isEdibleOutlined']() ? '_e' : '') + '.png',
    _0x4db645 = this['getSkinImageObj'](_0x53d8a5);
if (_0x4db645) {
    var _0x521787 = 0.15,
        _0xb64b8 = this['rad'] * 1.2;
    this['angle'] = this['rPer'] * Math['PI'] * 0x2, _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x4db645, -_0xb64b8, -_0xb64b8 + _0xb64b8 * _0x521787, 0x2 * _0xb64b8, 0x2 * _0xb64b8);
}
_0x4ac9cf['restore']();
};
var _0x14bd33 = 0x88;

function _0x47b527() {
_0x47b527['superClass']['call'](this, _0x14bd33), this['doesDrawEffectScale'] = !![];
}
window['TurkeyBaked'] = _0x47b527, _0x3360d0['setCustomClassForGameObjType'](_0x47b527, _0x14bd33);
var _0xec194 = _0x5adfe2;
_0x5a626f['prototype'] = Object['create'](_0xec194['prototype']), _0x5a626f['prototype']['constructor'] = _0x5a626f, _0x5a626f['superClass'] = _0xec194, _0x5a626f['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x5a626f['prototype']['customDraw'] = function (_0x3a9a24) {
_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1;
var _0x2b4be6 = 'gameobj/' + this['oType'] + '/' + this['oType'] + (this['isEdibleOutlined']() ? '_e' : '') + '.png',
    _0x3d945f = this['getSkinImageObj'](_0x2b4be6);
if (_0x3d945f) {
    var _0x29e549 = this['rad'] * 1.1;
    this['angle'] = this['rPer'] * Math['PI'] * 0x2, _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x3d945f, -_0x29e549, -_0x29e549, 0x2 * _0x29e549, 0x2 * _0x29e549);
}
_0x4ac9cf['restore']();
};
var _0x1ef456 = 0x89;

function _0x5a626f() {
_0x5a626f['superClass']['call'](this, _0x1ef456), this['doesDrawEffectScale'] = !![];
}
window['PumpkinPie'] = _0x5a626f, _0x3360d0['setCustomClassForGameObjType'](_0x5a626f, _0x1ef456);
var _0xec194 = _0x5adfe2;
_0x45bdff['prototype'] = Object['create'](_0xec194['prototype']), _0x45bdff['prototype']['constructor'] = _0x45bdff, _0x45bdff['superClass'] = _0xec194, _0x45bdff['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x45bdff['prototype']['customDraw'] = function (_0xf643b0) {
var _0x1a9703 = ![],
    _0x52deb8 = _0xddec75[_0x46868a];
(_0x52deb8 && _0x52deb8['lastHidingHoleID'] == this['id'] || _0xcb4f91 == this['id']) && (_0x1a9703 = !![]);
if (_0xf643b0) {} else {
    var _0x524f86 = 1.4,
        _0x1d878a = 0.05,
        _0x5f270b = 'igloo',
        _0x505d15 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + this['oType'] + '.png');
    if (_0x505d15) {
        _0x4ac9cf['save']();
        var _0x52deb8 = _0xddec75[_0x46868a];
        if (_0x52deb8 && _0x52deb8['lastHidingHoleID'] == this['id']) _0x4ac9cf['globalAlpha'] = 0.5;
        var _0x4edff6 = this['rad'] * _0x524f86;
        _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x505d15, -_0x4edff6, -_0x4edff6 + _0x1d878a * _0x4edff6, _0x4edff6 * 0x2, _0x4edff6 * 0x2), _0x4ac9cf['restore']();
    }
}
if (_0x1a9703) {
    _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['angle'] + _0x142401(0x73)), _0x4ac9cf['globalAlpha'] = 0x1;
    var _0x20dcd3 = Math['PI'] * 0x2 * this['timerAngle'];
    _0x4ac9cf['beginPath'](), _0x4ac9cf['lineWidth'] = 0x7, _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - 0x4), 0x0, _0x20dcd3), _0x4ac9cf['strokeStyle'] = _0xbb6dfa, _0x4ac9cf['stroke'](), _0x4ac9cf['restore']();
}
}, _0x45bdff['prototype']['timerAngle'] = 0x0, _0x45bdff['prototype']['nTimerAngle'] = 0x0, _0x45bdff['prototype']['onLerpUpdate'] = function (_0x19e1c8) {
_0x45bdff['superClass']['prototype']['onLerpUpdate']['call'](this, _0x19e1c8), this['timerAngle'] += (this['nTimerAngle'] - this['timerAngle']) * 0.1;
}, _0x45bdff['prototype']['readUpdatedProperty'] = function (_0x122769, _0x4ea592) {
_0x122769 == _0x4f6d3e && (this['timeLeft'] = _0x4ea592['readUInt16']() / 0x64, this['nTimerAngle'] = this['timeLeft'] / 0x64);
};
var _0x4cdf68 = 0x8a;

function _0x45bdff() {
_0x45bdff['superClass']['call'](this, _0x4cdf68), this['doesDrawEffectScale'] = ![];
}
window['Igloo'] = _0x45bdff, _0x3360d0['setCustomClassForGameObjType'](_0x45bdff, _0x4cdf68);
var _0xec194 = _0x5adfe2;
_0x20025f['prototype'] = Object['create'](_0xec194['prototype']), _0x20025f['prototype']['constructor'] = _0x20025f, _0x20025f['superClass'] = _0xec194, _0x20025f['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x20025f['prototype']['customDraw'] = function (_0x397f0c) {};
var _0x6a638c = 0x8b;

function _0x20025f() {
_0x20025f['superClass']['call'](this, _0x6a638c), this['doesDrawEffectScale'] = ![];
}
window['IglooOpening'] = _0x20025f, _0x3360d0['setCustomClassForGameObjType'](_0x20025f, _0x6a638c);
var _0xec194 = _0x5adfe2;
_0x5a556f['prototype'] = Object['create'](_0xec194['prototype']), _0x5a556f['prototype']['constructor'] = _0x5a556f, _0x5a556f['superClass'] = _0xec194, _0x5a556f['prototype']['updateZ'] = function () {
this['z'] = -0x63;
};
var _0x2e5c24 = '#9F8641',
_0xa0a689 = '#735e28',
_0x3062b1 = '#63501d',
_0x5f2db0 = '#735e28',
_0x250ab7 = '#806a30';
_0x5a556f['prototype']['customDraw'] = function (_0x4884b1) {
_0x4ac9cf['save']();
var _0x121e09 = ![],
    _0x428ed7 = _0xddec75[_0x46868a];
(_0x428ed7 && _0x428ed7['lastHidingHoleID'] == this['id'] || _0xcb4f91 == this['id']) && (_0x121e09 = !![]);
if (_0x4884b1) {} else {
    var _0x3db4a7 = 0.5,
        _0x4a10cb = 1.7;
    _0x4ac9cf['save'](); {
        if (_0x121e09) {
            _0x4ac9cf['globalAlpha'] = 0x1;
            var _0x208970 = this['rad'];
            this['drawOutlinedCircleRad']('', _0x2e5c24, _0x208970), _0x486a28(0x0 - this['rPer'], 0x0 - this['rPer'], Math['max'](0x0, _0x208970 - 0x7), _0xa0a689), _0x486a28(0x0 + this['rPer'], 0x1, Math['max'](0x0, _0x208970 - 0xc), _0x3062b1), _0x4ac9cf['globalAlpha'] = this['alpha'] * 0.7, _0x208970 = _0x208970 * 0.7, _0x486a28(0x0 - this['rPer'], 0x0 - this['rPer'], Math['max'](0x0, _0x208970 - 0x7), _0x5f2db0), _0x208970 = _0x208970 * 0.5, _0x4ac9cf['globalAlpha'] = this['alpha'] * 0.3, _0x486a28(0x0 - this['rPer'], 0x0 - this['rPer'], Math['max'](0x0, _0x208970), _0x250ab7);
        }
        if (this['curBiome'] == _0x229c1c) {
            if (!_0x121e09) {
                var _0x407f29 = 'gameobj/' + this['oType'] + '/' + this['curBiome'] + '.png',
                    _0x286c24 = this['getSkinImageObj'](_0x407f29);
                if (_0x286c24) {
                    _0x4ac9cf['save']();
                    var _0x265509 = this['rad'];
                    _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x286c24, -_0x265509, -_0x265509, _0x265509 * 0x2, _0x265509 * 0x2), _0x4ac9cf['restore']();
                }
            }
        }
    }
    _0x4ac9cf['restore']();
    if (this['curBiome'] == _0x229c1c) {
        var _0x407f29 = 'gameobj/' + this['oType'] + '/cave_bottom_' + this['curBiome'] + '.png',
            _0x286c24 = this['getSkinImageObj'](_0x407f29);
        if (_0x286c24) {
            _0x4ac9cf['save']();
            var _0x265509 = this['rad'] * _0x3db4a7;
            _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x286c24, -_0x265509, -_0x265509 + _0x4a10cb * _0x265509, _0x265509 * 0x2, _0x265509 * 0x2), _0x4ac9cf['restore']();
        }
        if (!_0x121e09) {
            var _0x407f29 = 'gameobj/' + this['oType'] + '/cave_top_' + this['curBiome'] + '.png',
                _0x286c24 = this['getSkinImageObj'](_0x407f29);
            if (_0x286c24) {
                _0x4ac9cf['save']();
                var _0x265509 = this['rad'] * _0x3db4a7;
                _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x286c24, -_0x265509, -_0x265509 + _0x4a10cb * _0x265509, _0x265509 * 0x2, _0x265509 * 0x2), _0x4ac9cf['restore']();
            }
        }
    } else {
        var _0x286c24 = this['getSkinImageObj']('img/cave/' + this['curBiome'] + '/cave_bottom.png');
        if (_0x286c24) {
            _0x4ac9cf['save']();
            var _0x265509 = this['rad'] * _0x3db4a7;
            _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x286c24, -_0x265509, -_0x265509 + _0x4a10cb * _0x265509, _0x265509 * 0x2, _0x265509 * 0x2), _0x4ac9cf['restore']();
        }
        if (!_0x121e09) {
            var _0x286c24 = this['getSkinImageObj']('img/cave/' + this['curBiome'] + '/cave_top.png');
            if (_0x286c24) {
                _0x4ac9cf['save']();
                var _0x265509 = this['rad'] * _0x3db4a7;
                _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x286c24, -_0x265509, -_0x265509 + _0x4a10cb * _0x265509, _0x265509 * 0x2, _0x265509 * 0x2), _0x4ac9cf['restore']();
            }
        }
    }
}
_0x4ac9cf['restore']();
if (_0x121e09) {
    _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['angle'] + _0x142401(0x73)), _0x4ac9cf['globalAlpha'] = 0.5;
    var _0x208970 = Math['PI'] * 0x2 * this['timerAngle'];
    _0x4ac9cf['beginPath'](), _0x4ac9cf['lineWidth'] = 0x6, _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - 0x4), 0x0, _0x208970), _0x4ac9cf['strokeStyle'] = _0xbb6dfa, _0x4ac9cf['stroke'](), _0x4ac9cf['restore']();
}
}, _0x5a556f['prototype']['timerAngle'] = 0x0, _0x5a556f['prototype']['nTimerAngle'] = 0x0, _0x5a556f['prototype']['onLerpUpdate'] = function (_0x250d0a) {
_0x5a556f['superClass']['prototype']['onLerpUpdate']['call'](this, _0x250d0a), this['timerAngle'] += (this['nTimerAngle'] - this['timerAngle']) * 0.1;
}, _0x5a556f['prototype']['readUpdatedProperty'] = function (_0x5d2f86, _0x116922) {
_0x5d2f86 == _0x4f6d3e && (this['timeLeft'] = _0x116922['readUInt16']() / 0x64, this['nTimerAngle'] = this['timeLeft'] / 0x64);
};
var _0x56abd8 = 0x8c;

function _0x5a556f() {
_0x5a556f['superClass']['call'](this, _0x56abd8), this['doesDrawEffectScale'] = ![];
}
window['Cave'] = _0x5a556f, _0x3360d0['setCustomClassForGameObjType'](_0x5a556f, _0x56abd8);
var _0xec194 = _0x5adfe2;
_0x5df300['prototype'] = Object['create'](_0xec194['prototype']), _0x5df300['prototype']['constructor'] = _0x5df300, _0x5df300['superClass'] = _0xec194, _0x5df300['prototype']['updateZ'] = function () {
this['z'] = 0x64;
}, _0x5df300['prototype']['customDraw'] = function (_0x509e1e) {};
var _0x454f2a = 0x8d;

function _0x5df300() {
_0x5df300['superClass']['call'](this, _0x454f2a), this['doesDrawEffectScale'] = ![];
}
window['CaveOpening'] = _0x5df300, _0x3360d0['setCustomClassForGameObjType'](_0x5df300, _0x454f2a);
var _0xec194 = _0x1dd8d7;
_0x3e9a3a['prototype'] = Object['create'](_0xec194['prototype']), _0x3e9a3a['prototype']['constructor'] = _0x3e9a3a, _0x3e9a3a['superClass'] = _0xec194, _0x3e9a3a['prototype']['animalInfo'] = function () {
var _0x1fe455 = {};
return _0x1fe455['aniName'] = 'Santa!', _0x1fe455['skinName'] = 'santa/' + this['animalSpecies'] + '/santa', _0x1fe455['aniDesc'] = '', _0x1fe455['upgradeText'] = 'UPGRADED to ' + _0x1fe455['aniName'] + '\x0a Santa distributes gifts to everyone!', _0x1fe455['aniCol'] = '#231f18', _0x1fe455;
};
var _0x582dc = 0.84,
_0x1020f7 = 0.47,
_0x4e354b = 0x2d,
_0x4075bc = -0x1e,
_0x17bb4b = 1.3,
_0x1c0c1 = 1.5,
_0x510331 = 0.3,
_0x40af3b = 0.95,
_0x51618f = 0.5,
_0x116eb4 = 0x2d,
_0x2e5047 = 0x0,
_0x5f0b17 = 1.2,
_0x958e95 = 0.3,
_0x302abe = 0.1;
_0x3e9a3a['prototype']['updateZ'] = function () {
this['z'] = 0x3f2 + this['rad'];
if (this['flag_flying']) this['z'] += 0x18704;
}, _0x3e9a3a['prototype']['calculateZIndex'] = function () {
this['updateZ']();
}, _0x3e9a3a['prototype']['drawUnderSkinTail'] = function (_0x88c19d) {}, _0x3e9a3a['prototype']['flyingHatAnimation'] = function () {
(!this['hideFeatures'] || this['flag_flying']) && (this['santaHead'](0x0), this['hohohoAnimation'](0x0));
var _0x59b6f2 = (_0x397f50 - this['spawnTime']) / 0x3e8,
    _0x1e3584 = _0x23fdc7(_0x59b6f2, _0x958e95, _0x302abe, 0x2),
    _0x368247 = this['getSkinImageObj']('skins/santa/' + this['animalSpecies'] + '/hat.png');
if (_0x368247) {
    _0x4ac9cf['save']();
    var _0xebd5ca = -(-0.2 + _0x1e3584) * _0x142401(_0x116eb4),
        _0x2aa94b = this['rad'] * _0x5f0b17;
    _0x4ac9cf['rotate'](_0x142401(_0x2e5047) + _0xebd5ca);
    var _0x4115a1 = 0x0,
        _0x1d9e46 = this['rad'],
        _0x2ce25c = _0x2aa94b * 0x2,
        _0x2411cb = _0x2aa94b * 0x2,
        _0x2104fd = _0x51618f,
        _0x54e3df = _0x40af3b;
    _0x4ac9cf['drawImage'](_0x368247, _0x4115a1 + _0x2ce25c * -_0x2104fd, _0x1d9e46 + _0x2411cb * -_0x54e3df, _0x2ce25c, _0x2411cb), _0x4ac9cf['restore']();
}
}, _0x3e9a3a['prototype']['drawSkinCustomization'] = function () {
if (this['flag_flying']) this['flyingHatAnimation']();
else {
    if (!this['hideFeatures'] || this['flag_flying']) {
        if (this['specType'] == 0x0) this['bellhandAnimation'](0x0);
        this['santaHead'](0x0), this['hohohoAnimation'](0x0);
    }
}
}, _0x3e9a3a['prototype']['hideFeatures'] = ![], _0x3e9a3a['prototype']['bellhandAnimation'] = function (_0x2980c4) {
var _0x25354c = (_0x397f50 - this['spawnTime']) / 0x3e8,
    _0x23f334 = _0x23fdc7(_0x25354c, _0x1c0c1, _0x510331, 0x2),
    _0x1767bc = this['getSkinImageObj']('skins/santa/' + this['animalSpecies'] + '/bellhand.png');
if (_0x1767bc) {
    _0x4ac9cf['save']();
    var _0x55e0c6 = -(-0.2 + _0x23f334) * _0x142401(_0x4e354b),
        _0x36a423 = this['rad'] * _0x17bb4b;
    _0x4ac9cf['rotate'](_0x142401(_0x4075bc) + _0x55e0c6);
    var _0x1f8593 = 0x0,
        _0x27b91f = this['rad'],
        _0x1f6319 = _0x36a423 * 0x2,
        _0x372c1a = _0x36a423 * 0x2,
        _0xd90082 = _0x1020f7,
        _0x48d0bf = _0x582dc;
    _0x4ac9cf['drawImage'](_0x1767bc, _0x1f8593 + _0x1f6319 * -_0xd90082, _0x27b91f + _0x372c1a * -_0x48d0bf, _0x1f6319, _0x372c1a), _0x4ac9cf['restore']();
}
}, _0x3e9a3a['prototype']['hohohoNextT'] = +new Date() + 0x1388, _0x3e9a3a['prototype']['hohohoAnimation'] = function (_0x49f5c5) {
if (_0x397f50 > this['hohohoNextT']) {
    var _0xfc8d89 = -0.1 + _0x49f5c5,
        _0x379cf3 = 0x1f4 / 0x154,
        _0x4e2e5a = Math['trunc'](_0x397f50 / 0xb4) % 0x3,
        _0x22cc59 = this['getSkinImageObj']('skins/santa/' + this['animalSpecies'] + '/santa_mouth' + _0x4e2e5a + '.png');
    if (_0x22cc59) {
        _0x4ac9cf['save']();
        var _0x2ea347 = this['rad'];
        _0x4ac9cf['drawImage'](_0x22cc59, -_0x2ea347 * _0x379cf3, (-_0x2ea347 + _0x2ea347 * _0xfc8d89) * _0x379cf3, 0x2 * _0x2ea347 * _0x379cf3, 0x2 * _0x2ea347 * _0x379cf3), _0x4ac9cf['restore']();
    }
    _0x397f50 > this['hohohoNextT'] + 0x5dc && (this['hohohoNextT'] = +new Date() + 0x2710);
}
}, _0x3e9a3a['prototype']['getSkinImageObj'] = function (_0x2e628) {
return this['skinThemeID'] = 0x0, _0x3e9a3a['superClass']['prototype']['getSkinImageObj']['call'](this, _0x2e628);
}, _0x3e9a3a['prototype']['santaHead'] = function (_0x24d7d9) {
var _0x5aeb93 = 0.1,
    _0x79d26a = 0x1f4 / 0x154,
    _0x3224a9 = this['flag_flying'] ? '2' : '';
if (this['specType'] == 0x2) _0x3224a9 = '3';
var _0x58c6d5 = this['getSkinImageObj']('skins/santa/' + this['animalSpecies'] + '/santa_head' + _0x3224a9 + '.png');
if (_0x58c6d5) {
    _0x4ac9cf['save']();
    var _0xd98074 = this['rad'];
    _0x4ac9cf['drawImage'](_0x58c6d5, -_0xd98074 * _0x79d26a, (-_0xd98074 + _0xd98074 * _0x5aeb93) * _0x79d26a, 0x2 * _0xd98074 * _0x79d26a, 0x2 * _0xd98074 * _0x79d26a), _0x4ac9cf['restore']();
}
}, _0x3e9a3a['prototype']['getAbilityInfo'] = function (_0x182d8e) {
var _0x55589d = {};
switch (_0x182d8e) {
case _0x3d728c:
    _0x55589d['abilName'] = 'Fly High!', _0x55589d['abilImg'] = 'skins/santa/' + this['animalSpecies'] + '/ability_santa_flying.png';
    break;
case _0x1ec16a:
    _0x55589d['abilName'] = 'Gives Gifts!', _0x55589d['abilImg'] = 'skins/santa/' + this['animalSpecies'] + '/ability_santa_throwgifts.png';
    break;
case _0x2e4f5f:
    _0x55589d['abilName'] = 'Flying Sleigh!', _0x55589d['abilImg'] = 'skins/santa/' + this['animalSpecies'] + '/ability_santa_flyingsleigh.png';
    break;
}
return _0x55589d['skinThemeID'] = this['skinThemeID'], _0x55589d['mopeSeasonID'] = this['mopeSeasonID'], _0x55589d;
}, _0x3e9a3a['prototype']['getSkinName'] = function () {
var _0x502a46 = '';
return _0x502a46 = 'santa/' + this['animalSpecies'] + '/santa' + (this['specType'] == 0x0 ? '' : this['specType']), _0x502a46;
};

function _0x3e9a3a() {
_0x3e9a3a['superClass']['call'](this, _0x4acf80);
}
window['Santa'] = _0x3e9a3a, _0x3360d0['setCustomClassForGameObjType'](_0x3e9a3a, _0x4acf80, _0x417b18);
var _0xec194 = _0x5adfe2;
_0x40572f['prototype'] = Object['create'](_0xec194['prototype']), _0x40572f['prototype']['constructor'] = _0x40572f, _0x40572f['superClass'] = _0xec194;
var _0x2223dc = 0x3f2;
_0x40572f['prototype']['updateZ'] = function () {
this['z'] = 0x3f2;
if (this['flag_flying']) this['z'] += 0x186a0;
}, _0x40572f['prototype']['customDraw'] = function (_0x223f1f) {
var _0x1dc901 = this['getSkinImageObj']('skins/santa/0/sleigh.png');
if (_0x1dc901) {
    _0x4ac9cf['save']();
    var _0x1d83d4 = this['rad'] * 0x1;
    _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x1dc901, -_0x1d83d4, -_0x1d83d4, _0x1d83d4 * 0x2, _0x1d83d4 * 0x2), _0x4ac9cf['restore']();
}
};

function _0x40572f() {
_0x40572f['superClass']['call'](this, _0x4304b6);
}
window['Sleigh'] = _0x40572f, _0x3360d0['setCustomClassForGameObjType'](_0x40572f, _0x4304b6);
var _0xec194 = _0x1dd8d7;
_0x17c32b['prototype'] = Object['create'](_0xec194['prototype']), _0x17c32b['prototype']['constructor'] = _0x17c32b, _0x17c32b['superClass'] = _0xec194;
var _0x3c4408 = 0x186a0;
_0x17c32b['prototype']['updateZ'] = function () {
this['z'] = 0x3e8 + this['rad'] + this['rowNumber'];
if (this['flag_flying']) this['z'] += _0x3c4408;
}, _0x17c32b['prototype']['calculateZIndex'] = function () {
this['updateZ']();
}, _0x17c32b['prototype']['animalInfo'] = function () {
var _0x391bbf = {};
return _0x391bbf['aniName'] = 'Rudolph!', _0x391bbf['skinName'] = 'santa/rudolph', _0x391bbf['upgradeText'] = 'UPGRADED to Rudolph!\x0a Rudolph paws turn very well on ice!\x0a Press W to howl!', _0x391bbf['aniCol'] = '#6B6B6B', _0x391bbf;
}, _0x17c32b['prototype']['getAbilityInfo'] = function (_0x8dc7a6) {
var _0x56bf13 = {};
return _0x56bf13['abilName'] = 'Howl!', _0x56bf13['abilImg'] = 'abilities/Howl.svg', _0x56bf13;
}, _0x17c32b['prototype']['getSkinName'] = function () {
var _0x59c2a9 = '';
return _0x59c2a9 = 'santa/0/' + (this['isRudolph'] ? 'rudolph' : 'deer'), _0x59c2a9 += this['specType'] == 0x0 ? '' : 0x1, _0x59c2a9;
}, _0x17c32b['prototype']['drawAnimalUnderSkinCircle'] = function (_0x31631e, _0x2bc3a5) {
if (!this['flag_isGrabbed']) {
    if (this['playerNum'] == 0x1) _0x31631e = 'cyan';
    else {
        if (this['playerNum'] == 0x2) _0x31631e = 'yellow';
        else this['flag_eff_isOnSpiderWeb'] && (_0x31631e = 'white');
    }
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = this['isAnimalInside1v1Arena']() ? 0.3 : this['idealOp'], _0x486a28(0x0, 0x0, this['rad'], _0x31631e), _0x4ac9cf['restore']();
}
}, _0x17c32b['prototype']['drawLights'] = function () {
var _0x518a21 = '/skins/' + this['getSkinName'](),
    _0x3da47d = this['getSkinImagePath'](_0x518a21),
    _0x37afc4 = this['skinScale'],
    _0x389a91 = this['skinRad'];
}, _0x17c32b['prototype']['afterCustomDraw'] = function (_0x1828cc) {
if (this['isRudolph']) this['drawLights']();
var _0x3c27a3 = -0x1,
    _0x2bf706 = '#b84831',
    _0x5674fa = 0x4 * (this['curRad'] / this['startRad']),
    _0x5cbcb4 = 0x1;
this['drawRope'](this['rope1_x'], this['rope1_y'], this['deerPos1_x'], this['deerPos1_y'], _0x2bf706, _0x5674fa, _0x3c27a3, _0x5cbcb4), this['drawRope'](this['rope2_x'], this['rope2_y'], this['deerPos2_x'], this['deerPos2_y'], _0x2bf706, _0x5674fa, _0x3c27a3, _0x5cbcb4), _0x2bf706 = 'white', _0x5674fa = 0x1 * (this['curRad'] / this['startRad']), _0x5cbcb4 = 0.3, this['drawRope'](this['rope1_x'], this['rope1_y'], this['deerPos1_x'], this['deerPos1_y'], _0x2bf706, _0x5674fa, _0x3c27a3, _0x5cbcb4), this['drawRope'](this['rope2_x'], this['rope2_y'], this['deerPos2_x'], this['deerPos2_y'], _0x2bf706, _0x5674fa, _0x3c27a3, _0x5cbcb4);
}, _0x17c32b['prototype']['drawRope'] = function (_0x412878, _0xe1152f, _0x28af6b, _0xc6bd82, _0x46ea2b, _0x43bc87, _0x144c42, _0x1de064) {
_0x4ac9cf['save'](), _0x4ac9cf['strokeStyle'] = _0x46ea2b, _0x4ac9cf['lineWidth'] = _0x43bc87 * (this['curRad'] / this['startRad']), _0x4ac9cf['globalAlpha'] = _0x1de064, _0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](_0x412878, _0xe1152f), _0x4ac9cf['quadraticCurveTo'](_0x412878, _0xc6bd82 - _0x144c42, _0x28af6b, _0xc6bd82), _0x4ac9cf['stroke'](), _0x4ac9cf['restore']();
}, _0x17c32b['prototype']['setOpacityForFlyingAnimals'] = function (_0x1e70b1) {
!(this['id'] == _0x46868a || this['santaID'] == _0x46868a) && (this['idealOp'] = 0.6);
}, _0x17c32b['prototype']['onLerpUpdate'] = function (_0x38d9fe) {
this['rope1_x'] = _0x38d9fe * (this['rope1_nx'] - this['rope1_ox']) + this['rope1_ox'], this['rope1_y'] = _0x38d9fe * (this['rope1_ny'] - this['rope1_oy']) + this['rope1_oy'], this['deerPos1_x'] = _0x38d9fe * (this['deerpos1_nx'] - this['deerpos1_ox']) + this['deerpos1_ox'], this['deerPos1_y'] = _0x38d9fe * (this['deerpos1_ny'] - this['deerpos1_oy']) + this['deerpos1_oy'], this['rope2_x'] = _0x38d9fe * (this['rope2_nx'] - this['rope2_ox']) + this['rope2_ox'], this['rope2_y'] = _0x38d9fe * (this['rope2_ny'] - this['rope2_oy']) + this['rope2_oy'], this['deerPos2_x'] = _0x38d9fe * (this['deerpos2_nx'] - this['deerpos2_ox']) + this['deerpos2_ox'], this['deerPos2_y'] = _0x38d9fe * (this['deerpos2_ny'] - this['deerpos2_oy']) + this['deerpos2_oy'];
}, _0x17c32b['prototype']['readCustomData_onNewlyVisible'] = function (_0x2c829b) {
_0x17c32b['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x2c829b), this['santaID'] = _0x2c829b['readUInt32'](), this['rowNumber'] = _0x2c829b['readUInt8'](), this['isRudolph'] = _0x2c829b['readUInt8']() == 0x1, this['startRad'] = _0x2c829b['readUInt16']() / 0x64, this['curRad'] = _0x2c829b['readUInt16']() / 0x64, this['readInfo'](_0x2c829b), this['rope1_nx'] = this['rope1_ox'] = this['rope1_x'] = this['x'], this['rope1_ny'] = this['rope1_oy'] = this['rope1_y'] = this['y'], this['deerpos1_ox'] = this['deerPos1_x'] = this['deerpos1_nx'] = this['x'], this['deerpos1_oy'] = this['deerPos1_y'] = this['deerpos1_ny'] = this['y'], this['rope2_nx'] = this['rope2_ox'] = this['rope2_x'] = this['x'], this['rope2_ny'] = this['rope2_oy'] = this['rope2_y'] = this['y'], this['deerpos2_ox'] = this['deerPos2_x'] = this['deerpos2_nx'] = this['x'], this['deerpos2_oy'] = this['deerPos2_y'] = this['deerpos2_ny'] = this['y'];
}, _0x17c32b['prototype']['rope1_x'] = 0x0, _0x17c32b['prototype']['rope1_y'] = 0x0, _0x17c32b['prototype']['deerPos1_x'] = 0x0, _0x17c32b['prototype']['deerPos1_y'] = 0x0, _0x17c32b['prototype']['rope2_x'] = 0x0, _0x17c32b['prototype']['rope2_y'] = 0x0, _0x17c32b['prototype']['deerPos2_x'] = 0x0, _0x17c32b['prototype']['deerPos2_y'] = 0x0, _0x17c32b['prototype']['webState'] = 0x0, _0x17c32b['prototype']['readInfo'] = function (_0x5af1fe) {
this['customUpdatedProperty'](_0x21786b, _0x5af1fe), this['customUpdatedProperty'](_0x240df1, _0x5af1fe), this['customUpdatedProperty'](_0x20be7b, _0x5af1fe), this['customUpdatedProperty'](_0x36a8cc, _0x5af1fe);
}, _0x17c32b['prototype']['customUpdatedProperty'] = function (_0x9fbe3b, _0x2a3327) {
if (_0x9fbe3b == _0x21786b) {
    var _0x1f4e8b = _0x2a3327['readUInt16']() / 0x4,
        _0x1078a4 = _0x2a3327['readUInt16']() / 0x4;
    this['rope1_ox'] = this['rope1_x'], this['rope1_oy'] = this['rope1_y'], this['rope1_nx'] = _0x1f4e8b, this['rope1_ny'] = _0x1078a4;
} else {
    if (_0x9fbe3b == _0x240df1) {
        var _0x1736ef = _0x2a3327['readUInt16']() / 0x4,
            _0x2a69d1 = _0x2a3327['readUInt16']() / 0x4;
        this['rope2_ox'] = this['rope2_x'], this['rope2_oy'] = this['rope2_y'], this['rope2_nx'] = _0x1736ef, this['rope2_ny'] = _0x2a69d1;
    } else {
        if (_0x9fbe3b == _0x20be7b) {
            var _0x136b7a = _0x2a3327['readUInt16']() / 0x4,
                _0x3d5661 = _0x2a3327['readUInt16']() / 0x4;
            this['deerpos1_ox'] = this['deerPos1_x'], this['deerpos1_oy'] = this['deerPos1_y'], this['deerpos1_nx'] = _0x136b7a, this['deerpos1_ny'] = _0x3d5661;
        } else {
            if (_0x9fbe3b == _0x36a8cc) {
                var _0x48cd9f = _0x2a3327['readUInt16']() / 0x4,
                    _0x428e42 = _0x2a3327['readUInt16']() / 0x4;
                this['deerpos2_ox'] = this['deerPos2_x'], this['deerpos2_oy'] = this['deerPos2_y'], this['deerpos2_nx'] = _0x48cd9f, this['deerpos2_ny'] = _0x428e42;
            }
        }
    }
}
};

function _0x17c32b() {
_0x17c32b['superClass']['call'](this, _0x4acf80);
}
window['Rudolph'] = _0x17c32b, _0x3360d0['setCustomClassForGameObjType'](_0x17c32b, _0x4acf80, _0x5112ae);
var _0xec194 = _0x5adfe2;
_0x18ff14['prototype'] = Object['create'](_0xec194['prototype']), _0x18ff14['prototype']['constructor'] = _0x18ff14, _0x18ff14['superClass'] = _0xec194;
var _0x4f960d = 0x3f0;
_0x18ff14['prototype']['updateZ'] = function () {
this['z'] = 0x3f0;
if (this['flag_flying']) this['z'] += 0x186a0;
}, _0x18ff14['prototype']['customDraw'] = function (_0x522bd8) {
_0x486a28(0x0, 0x0, this['curRad'], '#ebac2d'), _0x486a28(0x0, 0x0, this['curRad'] * 0.6, '#ffbc33');
}, _0x18ff14['prototype']['beforeCustomDraw'] = function (_0x435fe9) {
_0x4ac9cf['save'](), _0x4ac9cf['strokeStyle'] = '#ffbc33', _0x4ac9cf['lineWidth'] = 0xa * (this['curRad'] / this['startRad']), _0x4ac9cf['globalAlpha'] = 0x1, _0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](this['webX'], this['webY']), _0x4ac9cf['lineTo'](this['spiderX'], this['spiderY']), _0x4ac9cf['stroke'](), _0x4ac9cf['restore'](), _0x4ac9cf['save'](), _0x4ac9cf['strokeStyle'] = 'gold', _0x4ac9cf['lineWidth'] = 0x6 * (this['curRad'] / this['startRad']), _0x4ac9cf['globalAlpha'] = 0x1, _0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](this['webX'], this['webY']), _0x4ac9cf['lineTo'](this['spiderX'], this['spiderY']), _0x4ac9cf['stroke'](), _0x4ac9cf['restore']();
}, _0x18ff14['prototype']['onLerpUpdate'] = function (_0x4839a6) {
this['webX'] = _0x4839a6 * (this['web_nx'] - this['web_ox']) + this['web_ox'], this['webY'] = _0x4839a6 * (this['web_ny'] - this['web_oy']) + this['web_oy'], this['spiderX'] = _0x4839a6 * (this['spider_nx'] - this['spider_ox']) + this['spider_ox'], this['spiderY'] = _0x4839a6 * (this['spider_ny'] - this['spider_oy']) + this['spider_oy'];
}, _0x18ff14['prototype']['readCustomData_onUpdate'] = function (_0x8200c4) {
_0x18ff14['superClass']['prototype']['readCustomData_onUpdate']['call'](this, _0x8200c4), this['readInfo'](_0x8200c4);
}, _0x18ff14['prototype']['readCustomData_onNewlyVisible'] = function (_0x4301ef) {
_0x18ff14['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x4301ef), this['startRad'] = _0x4301ef['readUInt16']() / 0x64, this['readInfo'](_0x4301ef), this['web_nx'] = this['web_ox'] = this['webX'] = this['x'], this['web_ny'] = this['web_oy'] = this['webY'] = this['y'], this['spider_ox'] = this['spiderX'] = this['spider_nx'] = this['x'], this['spider_oy'] = this['spiderY'] = this['spider_ny'] = this['y'];
}, _0x18ff14['prototype']['startRad'] = 0x0, _0x18ff14['prototype']['webX'] = 0x0, _0x18ff14['prototype']['webY'] = 0x0, _0x18ff14['prototype']['spiderX'] = 0x0, _0x18ff14['prototype']['spiderY'] = 0x0, _0x18ff14['prototype']['webState'] = 0x0, _0x18ff14['prototype']['readInfo'] = function (_0x142c55) {
this['curRad'] = _0x142c55['readUInt16']() / 0x64;
var _0x279c2f = _0x142c55['readUInt16']() / 0x4,
    _0x54f3fe = _0x142c55['readUInt16']() / 0x4;
this['web_ox'] = this['webX'], this['web_oy'] = this['webY'], this['web_nx'] = _0x279c2f, this['web_ny'] = _0x54f3fe;
var _0x5c2501 = _0x142c55['readUInt16']() / 0x4,
    _0x4e75df = _0x142c55['readUInt16']() / 0x4;
this['spider_ox'] = this['spiderX'], this['spider_oy'] = this['spiderY'], this['spider_nx'] = _0x5c2501, this['spider_ny'] = _0x4e75df;
};

function _0x18ff14() {
_0x18ff14['superClass']['call'](this, _0x27b42b), this['spawnTime'] = +new Date();
}
window['CartSaddle'] = _0x18ff14, _0x3360d0['setCustomClassForGameObjType'](_0x18ff14, _0x27b42b);
var _0xec194 = _0x5adfe2;
_0x51e2cf['prototype'] = Object['create'](_0xec194['prototype']), _0x51e2cf['prototype']['constructor'] = _0x51e2cf, _0x51e2cf['superClass'] = _0xec194;
var _0x347abf = 0x3ef;
_0x51e2cf['prototype']['updateZ'] = function () {
this['z'] = 0x3ef;
if (this['flag_flying']) this['z'] += 0x186a0;
}, _0x51e2cf['prototype']['customDraw'] = function (_0x102495) {
_0x486a28(0x0, 0x0, this['rad'], '#ebac2d'), _0x486a28(0x0, 0x0, this['rad'] * 0.9, '#e9ae34');
}, _0x51e2cf['prototype']['beforeCustomDraw'] = function (_0x5eb2b6) {
_0x4ac9cf['save'](), _0x4ac9cf['strokeStyle'] = '#ffbc33', _0x4ac9cf['lineWidth'] = 0xa * (this['curRad'] / this['startRad']), _0x4ac9cf['globalAlpha'] = 0x1, _0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](this['webX'], this['webY']), _0x4ac9cf['lineTo'](this['spiderX'], this['spiderY']), _0x4ac9cf['stroke'](), _0x4ac9cf['restore'](), _0x4ac9cf['save'](), _0x4ac9cf['strokeStyle'] = 'gold', _0x4ac9cf['lineWidth'] = 0x6 * (this['curRad'] / this['startRad']), _0x4ac9cf['globalAlpha'] = 0x1, _0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](this['webX'], this['webY']), _0x4ac9cf['lineTo'](this['spiderX'], this['spiderY']), _0x4ac9cf['stroke'](), _0x4ac9cf['restore']();
}, _0x51e2cf['prototype']['onLerpUpdate'] = function (_0x8e46df) {
this['webX'] = _0x8e46df * (this['web_nx'] - this['web_ox']) + this['web_ox'], this['webY'] = _0x8e46df * (this['web_ny'] - this['web_oy']) + this['web_oy'], this['spiderX'] = _0x8e46df * (this['spider_nx'] - this['spider_ox']) + this['spider_ox'], this['spiderY'] = _0x8e46df * (this['spider_ny'] - this['spider_oy']) + this['spider_oy'];
}, _0x51e2cf['prototype']['readCustomData_onUpdate'] = function (_0x4c7075) {
_0x51e2cf['superClass']['prototype']['readCustomData_onUpdate']['call'](this, _0x4c7075), this['readInfo'](_0x4c7075);
}, _0x51e2cf['prototype']['readCustomData_onNewlyVisible'] = function (_0x279a00) {
_0x51e2cf['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x279a00), this['startRad'] = _0x279a00['readUInt16']() / 0x64, this['readInfo'](_0x279a00), this['curRad'] = this['rad'], this['web_nx'] = this['web_ox'] = this['webX'] = this['x'], this['web_ny'] = this['web_oy'] = this['webY'] = this['y'], this['spider_ox'] = this['spiderX'] = this['spider_nx'] = this['x'], this['spider_oy'] = this['spiderY'] = this['spider_ny'] = this['y'];
}, _0x51e2cf['prototype']['webX'] = 0x0, _0x51e2cf['prototype']['webY'] = 0x0, _0x51e2cf['prototype']['spiderX'] = 0x0, _0x51e2cf['prototype']['spiderY'] = 0x0, _0x51e2cf['prototype']['webState'] = 0x0, _0x51e2cf['prototype']['readInfo'] = function (_0x4ae445) {
this['curRad'] = _0x4ae445['readUInt16']() / 0x64;
var _0x13a4f5 = _0x4ae445['readUInt16']() / 0x4,
    _0x51b4c6 = _0x4ae445['readUInt16']() / 0x4;
this['web_ox'] = this['webX'], this['web_oy'] = this['webY'], this['web_nx'] = _0x13a4f5, this['web_ny'] = _0x51b4c6;
var _0x19f48f = _0x4ae445['readUInt16']() / 0x4,
    _0x54b184 = _0x4ae445['readUInt16']() / 0x4;
this['spider_ox'] = this['spiderX'], this['spider_oy'] = this['spiderY'], this['spider_nx'] = _0x19f48f, this['spider_ny'] = _0x54b184;
};

function _0x51e2cf() {
_0x51e2cf['superClass']['call'](this, _0x3e096c);
}
window['Saddle'] = _0x51e2cf, _0x3360d0['setCustomClassForGameObjType'](_0x51e2cf, _0x3e096c);
var _0xec194 = _0x5adfe2;
_0x5ce3c5['prototype'] = Object['create'](_0xec194['prototype']), _0x5ce3c5['prototype']['constructor'] = _0x5ce3c5, _0x5ce3c5['superClass'] = _0xec194, _0x5ce3c5['prototype']['foodType'] = 0x0, _0x5ce3c5['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x5ce3c5['prototype']['customDraw'] = function (_0x136b6a) {
_0x4ac9cf['save']();
var _0x5c0676 = 'gameobj/' + this['oType'] + '/' + this['oType'] + '_' + this['foodType'] + '' + (this['isEdibleOutlined']() ? '_e' : '') + '.png',
    _0x59c29b = this['getSkinImageObj'](_0x5c0676);
if (_0x59c29b) {
    var _0x39926f = this['rad'];
    _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['rPer'] * 0.5 * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x59c29b, -_0x39926f, -_0x39926f, 0x2 * _0x39926f, 0x2 * _0x39926f), _0x4ac9cf['restore']();
}
_0x4ac9cf['restore']();
}, _0x5ce3c5['prototype']['readCustomData_onNewlyVisible'] = function (_0x174ed9) {
this['foodType'] = _0x174ed9['readUInt8']();
};
var _0x53e83a = 0x8e;

function _0x5ce3c5() {
_0x5ce3c5['superClass']['call'](this, _0x53e83a), this['doesDrawEffectScale'] = !![];
}
window['XmasFood'] = _0x5ce3c5, _0x3360d0['setCustomClassForGameObjType'](_0x5ce3c5, _0x53e83a);
var _0xec194 = _0x5adfe2;
_0x31f05b['prototype'] = Object['create'](_0xec194['prototype']), _0x31f05b['prototype']['constructor'] = _0x31f05b, _0x31f05b['superClass'] = _0xec194, _0x31f05b['prototype']['giftColor'] = 0x0, _0x31f05b['prototype']['giftType'] = 0x0, _0x31f05b['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x31f05b['prototype']['customDraw'] = function (_0x2a3035) {
_0x4ac9cf['save']();
var _0x576d3e = this['getSkinImageObj']('img/xmasgifts/' + this['giftColor'] + '/gift_e.png');
if (_0x576d3e) {
    var _0x41ecef = this['rad'];
    _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['rPer'] * 0.5 * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x576d3e, -_0x41ecef, -_0x41ecef, 0x2 * _0x41ecef, 0x2 * _0x41ecef), _0x4ac9cf['restore']();
}
_0x4ac9cf['restore']();
}, _0x31f05b['prototype']['readCustomData_onNewlyVisible'] = function (_0x3bafc2) {
this['giftColor'] = _0x3bafc2['readUInt8'](), this['giftType'] = _0x3bafc2['readUInt8']();
};
var _0x2cbd53 = 0x8f;

function _0x31f05b() {
_0x31f05b['superClass']['call'](this, _0x2cbd53), this['doesDrawEffectScale'] = !![];
}
window['XmasGift'] = _0x31f05b, _0x3360d0['setCustomClassForGameObjType'](_0x31f05b, _0x2cbd53);
var _0x3d265c = +new Date() + 0x1388,
_0x3bc3e8 = ![];
let _0x17bb0b, _0x319893 = 0x32,
_0x18e9c7 = _0xa7125 - 0x546 + _0x319893;
var _0x2c8bb2 = null,
_0x36a944 = {
    'particleCount': 0x2bc,
    'particleSize': 0x3,
    'fallingSpeed': 0.5,
    'color': '#fff',
    'xspeed': 0x1,
    'yspeed': 0.5,
    'yspeedF': 0x1,
    'angle': 0x5a
},
_0x1d8a5a = {
    'particleCount': 0x5dc,
    'particleSize': 0x4,
    'fallingSpeed': 0x1,
    'color': '#fff',
    'xspeed': 1.5,
    'yspeed': 0x1,
    'yspeedF': 1.5,
    'angle': 0x5a
},
_0x300454 = {
    'particleCount': 0x5dc,
    'particleSize': 0x5,
    'fallingSpeed': 1.5,
    'color': '#fff',
    'xspeed': 0x2,
    'yspeed': 1.5,
    'yspeedF': 0x3,
    'angle': 0x5a
};

function _0x3de2(_0xfc9439, _0x183c4a) {
return Math['floor'](Math['random']() * (_0x183c4a - _0xfc9439 + 0x1) + _0xfc9439);
}

function _0x295622(_0x532337, _0x4e0528, _0x15299a, _0x32f3fa, _0x2a7449) {
this['x'] = _0x532337, this['y'] = _0x4e0528, this['nx'] = _0x532337, this['ny'] = _0x4e0528, this['radius'] = _0x15299a, this['color'] = _0x32f3fa, this['radians'] = _0x2a7449, this['velocity'] = Math['max'](0.001, Math['random']() * 0.004), this['t'] = 0x0, this['update'] = () => {
    this['radians'] += this['velocity'], this['y'] += Math['pow'](this['velocity'], _0x2c8bb2['yspeed']) + _0x2c8bb2['yspeed'] * _0x2c8bb2['yspeedF'], this['x'] += Math['sin'](this['radians']) * 0.5 * _0x2c8bb2['xspeed'], this['draw']();
}, this['lerp'] = () => {}, this['draw'] = () => {
    this['lerp'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['x'], this['y'], this['radius'], 0x0, Math['PI'] * 0x2, ![]), _0x4ac9cf['fillStyle'] = this['color'], _0x4ac9cf['fill'](), _0x4ac9cf['closePath'](), this['reset']();
}, this['reset'] = () => {
    (this['x'] < -_0x319893 || this['y'] < -_0x319893 || this['x'] > _0x362064 + _0x319893 || this['y'] > _0x18e9c7 || this['t'] == 0x0 || +new Date() > this['t']) && (this['x'] = _0x3de2(0x0, _0x362064 - 0x64), this['y'] = _0x3de2(0x0, _0xa7125 - 0x546), this['t'] = +new Date() + Math['random']() * (0x3e8 * 0x1e));
};
}

function _0x4bc445() {
_0x18e9c7 = _0xa7125 - 0x546 + _0x319893, _0x17bb0b = [];
for (let _0x31ed3b = 0x0; _0x31ed3b < _0x2c8bb2['particleCount']; _0x31ed3b++) {
    _0x17bb0b['push'](new _0x295622(_0x3de2(0x0, _0x362064 - 0x64), _0x3de2(0x0, _0xa7125 - 0x546), _0x3de2(0.5, _0x2c8bb2['particleSize']), _0x2c8bb2['color'], 0x5a));
}
_0x22f752 = !![], _0x3bc3e8 = ![], _0x3d265c = +new Date() + 0x2710;
}
var _0x22f752 = ![];

function _0x36e7e3() {
if (_0x22f752 && _0x2c8bb2 != null) _0x17bb0b['forEach'](_0x5dcdf1 => {
    _0x5dcdf1['update']();
});
}

function _0x104d42() {
if (_0x2c8bb2 == null) return;
if (!_0x3bc3e8) {
    if (_0x3d265c < +new Date()) _0x3bc3e8 = !![];
    return;
}
if (_0x3e96fa && !(_0x25ea67 == 0x2)) _0x36e7e3();
}
var _0xec194 = _0x1dd8d7;
_0x1e2df1['prototype'] = Object['create'](_0xec194['prototype']), _0x1e2df1['prototype']['constructor'] = _0x1e2df1, _0x1e2df1['superClass'] = _0xec194, _0x1e2df1['prototype']['animalInfo'] = function () {
var _0x585122 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x585122['aniName'] = 'Seahorse!';
    break;
case 0xc8:
    _0x585122['aniName'] = 'Tully Monster!';
    break;
case 0xc9:
    _0x585122['aniName'] = 'Water Gun Horse!';
    break;
case 0xca:
    _0x585122['aniName'] = 'Leafy Seadragon';
    break;
}
return _0x585122['skinName'] = this['getSkinName'](), _0x585122['aniDesc'] = '', _0x585122['upgradeText'] = 'UPGRADED to ' + _0x585122['aniName'], _0x585122['aniCol'] = '#502E1A', _0x585122;
}, _0x1e2df1['prototype']['getSkinName'] = function () {
let _0x37db9f = this['getSpeciesPath']() + '/seahorse';
return _0x37db9f;
}, _0x1e2df1['prototype']['getSpeciesPath'] = function () {
return 'ocean/seahorse/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x1e2df1['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x1e2df1['prototype']['getAbilityInfo'] = function (_0x51b015) {
var _0x91dcfc = {};
return _0x91dcfc['abilName'] = 'Dash!', _0x91dcfc['abilImg'] = 'abilities/Dash-Boost.svg', _0x91dcfc['skinThemeID'] = this['skinThemeID'], _0x91dcfc['mopeSeasonID'] = this['mopeSeasonID'], _0x91dcfc;
}, _0x1e2df1['prototype']['basicDrawSkinImg'] = function () {
this['setSkinScale']();
var _0x9a345d = this['skinRad'];
let _0x565556 = 1.5;
var _0x2dfc38 = 0x0;
if (this['mopeSeasonID'] == 0x1) {
    (this['animalSpecies'] == 0xc8 || this['animalSpecies'] == 0xc9) && (_0x565556 = 1.8);
    if (this['animalSpecies'] == 0xc9) _0x2dfc38 = -0.1;
}
this['loadedSkinImg'] && _0x4ac9cf['drawImage'](this['loadedSkinImg'], -_0x9a345d * _0x565556, -_0x9a345d * _0x565556 + _0x9a345d * _0x2dfc38, 0x2 * _0x9a345d * _0x565556, 0x2 * _0x9a345d * _0x565556);
};

function _0x1e2df1() {
_0x1e2df1['superClass']['call'](this, _0x4acf80);
}
window['Seahorse'] = _0x1e2df1, _0x3360d0['setCustomClassForGameObjType'](_0x1e2df1, _0x4acf80, _0x4ac227);
var _0xec194 = _0x1dd8d7;
_0x2860f8['prototype'] = Object['create'](_0xec194['prototype']), _0x2860f8['prototype']['constructor'] = _0x2860f8, _0x2860f8['superClass'] = _0xec194, _0x2860f8['prototype']['animalInfo'] = function () {
var _0x51c22e = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x51c22e['aniName'] = 'Shrimp!';
    break;
case 0xc8:
    _0x51c22e['aniName'] = 'Deluxe Shrimp!';
    break;
case 0xc9:
    _0x51c22e['aniName'] = 'Chef Shrimp!';
    break;
case 0xca:
    _0x51c22e['aniName'] = 'Sushi Shrimp!';
    break;
}
return _0x51c22e['skinName'] = this['getSkinName'](), _0x51c22e['aniDesc'] = '', _0x51c22e['upgradeText'] = 'UPGRADED to ' + _0x51c22e['aniName'], _0x51c22e['aniCol'] = '#502E1A', _0x51c22e;
}, _0x2860f8['prototype']['getSkinName'] = function () {
let _0x4bdaf0 = this['getSpeciesPath']() + '/shrimp';
if (this['flag_usingAbility']) _0x4bdaf0 += '2';
return _0x4bdaf0;
}, _0x2860f8['prototype']['getSpeciesPath'] = function () {
return 'ocean/shrimp/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x2860f8['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x2860f8() {
_0x2860f8['superClass']['call'](this, _0x4acf80);
}
window['Shrimp'] = _0x2860f8, _0x3360d0['setCustomClassForGameObjType'](_0x2860f8, _0x4acf80, _0x5626d9);
var _0xec194 = _0x1dd8d7;
_0x51a16f['prototype'] = Object['create'](_0xec194['prototype']), _0x51a16f['prototype']['constructor'] = _0x51a16f, _0x51a16f['superClass'] = _0xec194, _0x51a16f['prototype']['animalInfo'] = function () {
var _0x25d595 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x25d595['aniName'] = 'Trout';
    break;
case 0xc8:
    _0x25d595['aniName'] = 'Clownfish';
    break;
case 0xc9:
    _0x25d595['aniName'] = 'Popsicle Trout';
    break;
case 0xca:
    _0x25d595['aniName'] = 'Royal Guppy';
    break;
case 0xde:
    _0x25d595['aniName'] = 'Ice Husk Trout';
    break;
}
return _0x25d595['skinName'] = this['getSkinName'](), _0x25d595['aniDesc'] = '', _0x25d595['upgradeText'] = 'UPGRADED to ' + _0x25d595['aniName'] + '!', _0x25d595['aniCol'] = '#502E1A', _0x25d595;
}, _0x51a16f['prototype']['getAbilityInfo'] = function (_0x569d1f) {
var _0x4e8290 = {};
return _0x4e8290['abilName'] = 'Extra Boost!', _0x4e8290['abilImg'] = 'abilities/Dash-Boost.svg', _0x4e8290['skinThemeID'] = this['skinThemeID'], _0x4e8290['mopeSeasonID'] = this['mopeSeasonID'], _0x4e8290;
}, _0x51a16f['prototype']['getSkinName'] = function () {
let _0x2a12a0 = this['getSpeciesPath']() + '/trout';
return _0x2a12a0;
}, _0x51a16f['prototype']['getSpeciesPath'] = function () {
return 'ocean/trout/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x51a16f['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x51a16f() {
_0x51a16f['superClass']['call'](this, _0x4acf80);
}
window['Trout'] = _0x51a16f, _0x3360d0['setCustomClassForGameObjType'](_0x51a16f, _0x4acf80, _0x2a05b1);
var _0xec194 = _0x1dd8d7;
_0x4c8608['prototype'] = Object['create'](_0xec194['prototype']), _0x4c8608['prototype']['constructor'] = _0x4c8608, _0x4c8608['superClass'] = _0xec194, _0x4c8608['prototype']['getSkinName'] = function () {
return 'arctic/arcticfox/' + this['animalSpecies'] + this['getSubSpecies']() + '/arcticfox';
}, _0x4c8608['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x4c8608['prototype']['animalInfo'] = function () {
var _0x30a2f5 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x30a2f5['aniName'] = 'Arctic Fox';
    break;
case 0xc8:
    _0x30a2f5['aniName'] = 'Ice Fox';
    break;
case 0xc9:
    _0x30a2f5['aniName'] = 'Forest Spirit Fox';
    break;
case 0xca:
    _0x30a2f5['aniName'] = 'Ice Fox';
    break;
}
return _0x30a2f5['skinName'] = this['getSkinName'](), _0x30a2f5['aniDesc'] = '', _0x30a2f5['upgradeText'] = 'UPGRADED to ' + _0x30a2f5['aniName'] + '!\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!', _0x30a2f5['aniCol'] = '#CFCFCF', _0x30a2f5;
}, _0x4c8608['prototype']['getAbilityInfo'] = function (_0x388d0c) {
var _0xb6f609 = {};
return _0xb6f609['abilName'] = 'Pull from Hole', _0xb6f609['abilImg'] = 'abilities/Dig.svg', _0xb6f609['skinThemeID'] = this['skinThemeID'], _0xb6f609['mopeSeasonID'] = this['mopeSeasonID'], _0xb6f609;
};

function _0x4c8608() {
_0x4c8608['superClass']['call'](this, _0x4acf80);
}
window['ArcticFox'] = _0x4c8608, _0x3360d0['setCustomClassForGameObjType'](_0x4c8608, _0x4acf80, _0x5c63c1);
var _0xec194 = _0x1dd8d7;
_0x435060['prototype'] = Object['create'](_0xec194['prototype']), _0x435060['prototype']['constructor'] = _0x435060, _0x435060['superClass'] = _0xec194, _0x435060['prototype']['getSkinName'] = function () {
let _0x218125 = this['getSpeciesPath']() + '/fox';
return _0x218125;
}, _0x435060['prototype']['getSpeciesPath'] = function () {
return 'land/fox/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x435060['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x435060['prototype']['animalInfo'] = function () {
var _0x29c730 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x29c730['aniName'] = 'Fox!';
    break;
case 0xc8:
    _0x29c730['aniName'] = 'Night Thief!';
    break;
case 0xc8:
    _0x29c730['aniName'] = 'Sneaky Fox';
    break;
case 0xcc:
    _0x29c730['aniName'] = 'Black Asura Fox';
    break;
}
return _0x29c730['skinName'] = this['getSkinName'](), _0x29c730['aniDesc'] = '', _0x29c730['upgradeText'] = 'UPGRADED to ' + _0x29c730['aniName'] + '!\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!', _0x29c730['aniCol'] = '#FF9D43', _0x29c730;
}, _0x435060['prototype']['getAbilityInfo'] = function (_0x28cfe7) {
var _0x161d30 = {};
return _0x161d30['abilName'] = 'Pull from Hole', _0x161d30['abilImg'] = 'abilities/Dig.svg', _0x161d30['skinThemeID'] = this['skinThemeID'], _0x161d30['mopeSeasonID'] = this['mopeSeasonID'], _0x161d30;
};

function _0x435060() {
_0x435060['superClass']['call'](this, _0x4acf80);
}
window['Fox'] = _0x435060, _0x3360d0['setCustomClassForGameObjType'](_0x435060, _0x4acf80, _0x37ed61);
var _0xec194 = _0x1dd8d7;
_0xbde7c5['prototype'] = Object['create'](_0xec194['prototype']), _0xbde7c5['prototype']['constructor'] = _0xbde7c5, _0xbde7c5['superClass'] = _0xec194, _0xbde7c5['prototype']['animalInfo'] = function () {
var _0x339f6e = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x339f6e['aniName'] = 'Rabbit!';
    break;
case 0xc8:
    _0x339f6e['aniName'] = 'Monochrome Rabbit!';
    break;
case 0xca:
    switch (this['animalSubSpecies']) {
    case 0x0:
        _0x339f6e['aniName'] = 'Jackapole';
        break;
    case 0x1:
        _0x339f6e['aniName'] = 'Hollow Rabbit';
    }
    break;
case 0xcc:
    _0x339f6e['aniName'] = 'Carrot Rabbit';
    break;
case 0xdc:
    _0x339f6e['aniName'] = 'Fairy Rabbit';
    break;
case 0xde:
    _0x339f6e['aniName'] = 'Jolly Rabbit';
    break;
}
return _0x339f6e['skinName'] = this['getSpeciesPath']('rabbit') + '/rabbit', _0x339f6e['aniDesc'] = '', _0x339f6e['upgradeText'] = 'UPGRADED to ' + _0x339f6e['aniName'], _0x339f6e['aniCol'] = '#502E1A', _0x339f6e;
}, _0xbde7c5['prototype']['getSkinName'] = function () {
return this['getSpeciesPath']('rabbit') + '/rabbit';
}, _0xbde7c5['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
}, _0xbde7c5['prototype']['getSpeciesPath'] = function (_0x1258fb) {
return 'land/' + _0x1258fb + '/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0xbde7c5['prototype']['getAbilityInfo'] = function (_0x2a721d) {
var _0x3823ad = {};
return _0x3823ad['abilName'] = 'Dig Hole!', _0x3823ad['abilImg'] = 'abilities/Dig.svg', _0x3823ad['skinThemeID'] = this['skinThemeID'], _0x3823ad['mopeSeasonID'] = this['mopeSeasonID'], _0x3823ad;
}, _0xbde7c5['prototype']['getSkinName'] = function (_0x4c204a) {
var _0x4f929c = this['getSpeciesPath']('rabbit') + '/rabbit' + (_0x4c204a === !![] ? '.png' : '');
return _0x4f929c;
};

function _0xbde7c5() {
_0xbde7c5['superClass']['call'](this, _0x4acf80);
}
window['Rabbit'] = _0xbde7c5, _0x3360d0['setCustomClassForGameObjType'](_0xbde7c5, _0x4acf80, _0x30b869);
var _0xec194 = _0x1dd8d7;
_0x56664e['prototype'] = Object['create'](_0xec194['prototype']), _0x56664e['prototype']['constructor'] = _0x56664e, _0x56664e['superClass'] = _0xec194, _0x56664e['prototype']['getSkinName'] = function () {
let _0xa5e4b8 = this['getSpeciesPath']() + '/hedgehog';
if (this['flag_usingAbility']) _0xa5e4b8 += '2';
return _0xa5e4b8;
}, _0x56664e['prototype']['getSpeciesPath'] = function () {
return 'land/hedgehog/' + this['animalSpecies'] + this['getSubSpecies']();
}, _0x56664e['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x56664e['prototype']['animalInfo'] = function () {
var _0x5b82e2 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x5b82e2['aniName'] = 'Hedgehog!';
    break;
case 0xca:
    _0x5b82e2['aniName'] = 'Grass Hedgehog';
    break;
}
return _0x5b82e2['skinName'] = this['getSkinName'](), _0x5b82e2['aniDesc'] = '', _0x5b82e2['upgradeText'] = 'UPGRADED to ' + _0x5b82e2['aniName'] + '!\x0a (Hold W to become spiky, and dangerous to touch!)', _0x5b82e2['aniCol'] = '#5b400d', _0x5b82e2;
}, _0x56664e['prototype']['getAbilityInfo'] = function (_0x2250b1) {
var _0x316743 = {};
return _0x316743['abilName'] = 'Spikes!', _0x316743['abilImg'] = 'abilities/Spike.svg', _0x316743['skinThemeID'] = this['skinThemeID'], _0x316743['mopeSeasonID'] = this['mopeSeasonID'], _0x316743;
};

function _0x56664e() {
_0x56664e['superClass']['call'](this, _0x4acf80);
}
window['Hedgehog'] = _0x56664e, _0x3360d0['setCustomClassForGameObjType'](_0x56664e, _0x4acf80, _0x414bbd);
var _0xec194 = _0x5adfe2;
_0x151a30['prototype'] = Object['create'](_0xec194['prototype']), _0x151a30['prototype']['constructor'] = _0x151a30, _0x151a30['superClass'] = _0xec194, _0x151a30['prototype']['foodType'] = 0x0, _0x151a30['prototype']['updateZ'] = function () {
this['z'] = -0x62;
}, _0x151a30['prototype']['customDraw'] = function (_0x4ef261) {
var _0x274d5c = this['rad'] - 0xa;
this['waterRipples'](_0x274d5c), _0x4ac9cf['save'](), _0x4ac9cf['restore']();
var _0x1d4b18 = 'img/floaters/' + this['floaterType'] + '.png';
this['drawSkin'](_0x1d4b18, _0x274d5c);
}, _0x151a30['prototype']['drawSkin'] = function (_0x3f91c3, _0x4c466e) {
_0x4ac9cf['save']();
var _0x37227e = this['getSkinImageObj'](_0x3f91c3);
_0x37227e && (_0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x37227e, -_0x4c466e, -_0x4c466e, 0x2 * _0x4c466e, 0x2 * _0x4c466e), _0x4ac9cf['restore']()), _0x4ac9cf['restore']();
};
var _0x257f04 = 0.01,
_0x1ebf13 = 0.02,
_0xac5954 = 0xa,
_0x4912d2 = 0xf;
_0x151a30['prototype']['waterRipples'] = function (_0x1cc6cd) {
_0x1cc6cd = _0x1cc6cd - 0x5;
var _0x340838 = (_0x397f50 - this['spawnTime']) / 0x3e8,
    _0x7dd382 = 1.75,
    _0x17b41e = 0.5,
    _0x1346d1 = _0x17b41e * Math['sin'](0x2 * Math['PI'] / _0x7dd382 * _0x340838),
    _0x581dc8 = _0x4ac9cf['globalAlpha'];
!this['isFloatingInWater'] && (_0x1346d1 = 0x1);
if (this['floaterType'] == 0x0 || this['floaterType'] == 0x2 || this['floaterType'] == 0x3 || this['floaterType'] == 0x4 || this['floaterType'] == 0x5 || this['floaterType'] == 0x7) {
    var _0x4b3f9a = 'img/floaters/' + this['floaterType'] + '_ripple.png';
    _0x4ac9cf['globalAlpha'] *= 0.7 - 0.25 * _0x1346d1, this['drawSkin'](_0x4b3f9a, _0x1cc6cd + _0xac5954 - 0x5), _0x4ac9cf['globalAlpha'] *= 0.6 - 0.2 * _0x1346d1, this['drawSkin'](_0x4b3f9a, _0x1cc6cd + _0x4912d2 - 0x5);
} else _0x4ac9cf['globalAlpha'] *= 0.8 - 0.2 * _0x1346d1, _0x24111c(0x0, _0x1cc6cd * _0x257f04, _0x1cc6cd * (0.9 + 0.15 * _0x1346d1), _0xac5954, '#4668ff'), _0x4ac9cf['globalAlpha'] *= 0.7 - 0.2 * _0x1346d1, _0x24111c(0x0, -_0x1cc6cd * _0x1ebf13, _0x1cc6cd * (1.05 + 0.1 * _0x1346d1), _0x4912d2, '#4668ff');
_0x4ac9cf['globalAlpha'] = _0x581dc8;
}, _0x151a30['prototype']['readCustomData_onNewlyVisible'] = function (_0x49e8e9) {
this['floaterType'] = _0x49e8e9['readUInt8']();
}, _0x151a30['prototype']['isFloatingInWater'] = !![], _0x151a30['prototype']['readUpdatedProperty'] = function (_0x4dd89b, _0x2ec6ed) {
_0x4dd89b == _0x1fbcff && (this['isFloatingInWater'] = _0x2ec6ed['readUInt8']() == 0x1);
};
var _0x583ace = 0x90;

function _0x151a30() {
_0x151a30['superClass']['call'](this, _0x583ace), this['drawEffectScale_Slow'] = !![];
}
window['WaterFloater'] = _0x151a30, _0x3360d0['setCustomClassForGameObjType'](_0x151a30, _0x583ace);
var _0xec194 = _0x5adfe2;
_0x38bb33['prototype'] = Object['create'](_0xec194['prototype']), _0x38bb33['prototype']['constructor'] = _0x38bb33, _0x38bb33['superClass'] = _0xec194, _0x38bb33['prototype']['lookAngle'] = 0x0, _0x38bb33['prototype']['frameNumber'] = 0x0, _0x38bb33['prototype']['isRolling'] = ![], _0x38bb33['prototype']['pumpkinType'] = ![], _0x38bb33['prototype']['updateZ'] = function () {
this['z'] = 0x3ea;
};
var _0x1f2c4d = -0.07,
_0x3b8613 = -0.1,
_0x47df95 = 0x8,
_0x3aefe8 = 0xc,
_0x40c1dd = 0x8;
_0x38bb33['prototype']['waterRipples'] = function (_0x398d3e) {
_0x4ac9cf['save'](), _0x398d3e = _0x398d3e + _0x40c1dd;
var _0x53ae5c = (_0x397f50 - this['spawnTime']) / 0x3e8,
    _0x56fdcd = 1.75,
    _0x5e690b = 0.5,
    _0x38e534 = _0x5e690b * Math['sin'](0x2 * Math['PI'] / _0x56fdcd * _0x53ae5c),
    _0x3c0db3 = _0x4ac9cf['globalAlpha'];
!this['isFloating'] && (_0x38e534 = 0x1), _0x4ac9cf['rotate'](_0x142401(this['lookAngle'] + 0x2d)), _0x4ac9cf['globalAlpha'] *= 0.8 - 0.2 * _0x38e534, _0x24111c(0x0, _0x398d3e * _0x1f2c4d, _0x398d3e * (0.9 + 0.15 * _0x38e534), _0x47df95, '#4668ff'), _0x4ac9cf['globalAlpha'] *= 0.7 - 0.2 * _0x38e534, _0x24111c(0x0, -_0x398d3e * _0x3b8613, _0x398d3e * (1.05 + 0.1 * _0x38e534), _0x3aefe8, '#4668ff'), _0x4ac9cf['globalAlpha'] = _0x3c0db3, _0x4ac9cf['restore']();
}, _0x38bb33['prototype']['customDraw'] = function (_0x47b3be) {
var _0x5cf699 = this['rad'] - 0xa,
    _0x25a8cd = 0x1,
    _0x29d20d = 0.15,
    _0x9cabd7 = 0.8,
    _0x5de1f2 = 0.5 * (_0x9cabd7 - _0x29d20d),
    _0x387ecd = _0x29d20d + _0x5de1f2 + _0x5de1f2 * Math['sin'](0x2 * Math['PI'] / _0x25a8cd * (_0x397f50 / 0x3e8)),
    _0x25a8cd = 0x1,
    _0x29d20d = 0.85,
    _0x9cabd7 = 0x1,
    _0x5de1f2 = 0.5 * (_0x9cabd7 - _0x29d20d),
    _0x297afb = 0x1;
if (this['isRolling']) this['frameNumber'] = Math['trunc'](_0x397f50 / 0x78) % 0x8;
var _0x39ca4f = this['getSkinImageObj']('img/beachball/' + this['pumpkinType'] + '/' + this['frameNumber'] + '.png');
if (_0x39ca4f) {
    var _0x5eb273 = 0x0,
        _0x2cde96 = this['rad'],
        _0x43bd71 = this['rad'] * 2.5;
    imH = this['rad'] * 2.5;
    var _0x5c358e = 0.5,
        _0x28c5ad = 0.95;
    _0x4ac9cf['save'](); {
        _0x4ac9cf['globalAlpha'] *= this['onFireEffA'] * _0x297afb, _0x4ac9cf['rotate'](this['angle'] + _0x40941f), _0x4ac9cf['drawImage'](_0x39ca4f, _0x5eb273 + _0x43bd71 * -_0x5c358e, _0x2cde96 + imH * -_0x28c5ad, _0x43bd71, imH);
    }
    _0x4ac9cf['restore']();
} else {}
}, _0x38bb33['prototype']['isFloating'] = ![], _0x38bb33['prototype']['isRolling'] = ![], _0x38bb33['prototype']['readUpdatedProperty'] = function (_0x1ebe8f, _0x199036) {
if (_0x1ebe8f == _0x1fbcff) this['isFloating'] = _0x199036['readUInt8']() == 0x1;
else _0x1ebe8f == _0x35e644 && (this['isRolling'] = _0x199036['readUInt8']() == 0x1);
}, _0x38bb33['prototype']['readCustomData_onNewlyVisible'] = function (_0x169c98) {
this['isRolling'] = _0x169c98['readUInt8']() == 0x1, this['pumpkinType'] = _0x169c98['readUInt8'](), this['isFloating'] = _0x169c98['readUInt8']() == 0x1;
};

function _0x38bb33() {
_0x38bb33['superClass']['call'](this, _0x81df07), this['lookAngle'] = 0x0, this['isRolling'] = ![], this['pumpkinType'] = ![], this['doesDrawEffectScale'] = !![], this['drawEffectScale_Slow'] = !![];
}
var _0x81df07 = 0x91;
window['BeachBall'] = _0x38bb33, _0x3360d0['setCustomClassForGameObjType'](_0x38bb33, _0x81df07);
var _0xec194 = _0x5adfe2;
_0x4b3e68['prototype'] = Object['create'](_0xec194['prototype']), _0x4b3e68['prototype']['constructor'] = _0x4b3e68, _0x4b3e68['superClass'] = _0xec194, _0x4b3e68['prototype']['frameNumber'] = 0x0, _0x4b3e68['prototype']['umbrellaType'] = 0x0, _0x4b3e68['prototype']['umbrellaColor'] = 0x0, _0x4b3e68['prototype']['isClosed'] = ![], _0x4b3e68['prototype']['updateZ'] = function () {
this['z'] = this['rad'] + (!this['isClosed'] ? 0x834 : 0x0);
}, _0x4b3e68['prototype']['customDraw'] = function (_0x16eda4) {
var _0x2f40a5 = 0x1,
    _0x336d7c = 0.15,
    _0x547c60 = 0.8,
    _0x3eafeb = 0.5 * (_0x547c60 - _0x336d7c),
    _0x34d337 = _0x336d7c + _0x3eafeb + _0x3eafeb * Math['sin'](0x2 * Math['PI'] / _0x2f40a5 * (_0x397f50 / 0x3e8)),
    _0x2f40a5 = 0x1,
    _0x336d7c = 0.85,
    _0x547c60 = 0x1,
    _0x3eafeb = 0.5 * (_0x547c60 - _0x336d7c),
    _0x441909 = 0x1,
    _0x33f67e = this['rad'] * 1.5,
    _0x18e316 = this['getSkinImageObj']('img/umbrella/' + this['umbrellaType'] + '/' + this['umbrellaColor'] + '/umbrella' + (this['isClosed'] ? '-closed' : '') + '.png');
if (_0x18e316) {
    var _0x1984ba = 0x0,
        _0x259d07 = this['rad'],
        _0x1da8a8 = this['rad'] * 2.5;
    imH = this['rad'] * 2.5;
    var _0x221830 = 0.5,
        _0x3b4807 = 0.95;
    _0x4ac9cf['save'](); {
        _0x4ac9cf['globalAlpha'] *= this['onFireEffA'] * _0x441909, _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x18e316, _0x1984ba + _0x1da8a8 * -_0x221830, _0x259d07 + imH * -_0x3b4807, _0x1da8a8, imH);
    }
    _0x4ac9cf['restore']();
} else {}
}, _0x4b3e68['prototype']['readUpdatedProperty'] = function (_0x3e7929, _0xebc514) {
if (_0x3e7929 == _0x1fbcff) this['isFloating'] = _0xebc514['readUInt8']() == 0x1;
else _0x3e7929 == _0x35e644 && (this['isClosed'] = _0xebc514['readUInt8']() == 0x0);
}, _0x4b3e68['prototype']['readCustomData_onNewlyVisible'] = function (_0x254622) {
this['isClosed'] = _0x254622['readUInt8']() == 0x1, this['umbrellaType'] = _0x254622['readUInt8'](), this['umbrellaColor'] = _0x254622['readUInt8']();
};

function _0x4b3e68() {
_0x4b3e68['superClass']['call'](this, _0x2d5a51), this['umbrellaType'] = 0x0, this['isClosed'] = ![], this['doesDrawEffectScale'] = !![], this['drawEffectScale_Slow'] = !![];
}
var _0x2d5a51 = 0x92;
window['Umbrella'] = _0x4b3e68, _0x3360d0['setCustomClassForGameObjType'](_0x4b3e68, _0x2d5a51);
var _0xec194 = _0x1dd8d7;
_0x3fb666['prototype'] = Object['create'](_0xec194['prototype']), _0x3fb666['prototype']['constructor'] = _0x3fb666, _0x3fb666['superClass'] = _0xec194, _0x3fb666['prototype']['animalInfo'] = function () {
var _0x2086a1 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x2086a1['aniName'] = 'Chipmunk!';
    break;
case 0xc9:
    _0x2086a1['aniName'] = 'Playful Munk!';
    break;
case 0xca:
    _0x2086a1['aniName'] = 'Chipmonk';
    break;
}
return _0x2086a1['skinName'] = this['getSkinName'](), _0x2086a1['aniDesc'] = '', _0x2086a1['upgradeText'] = 'You\'re a tiny ' + _0x2086a1['aniName'] + ' - Eat food to grow!', _0x2086a1['aniCol'] = '#CFCFCF', _0x2086a1;
}, _0x3fb666['prototype']['getSkinName'] = function () {
return 'arctic/chipmunk/' + this['animalSpecies'] + this['getSubSpecies']() + '/chipmunk';
}, _0x3fb666['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x3fb666() {
_0x3fb666['superClass']['call'](this, _0x4acf80);
}
window['Chipmunk'] = _0x3fb666, _0x3360d0['setCustomClassForGameObjType'](_0x3fb666, _0x4acf80, _0x465a75);
var _0xec194 = _0x1dd8d7;
_0x2a74ba['prototype'] = Object['create'](_0xec194['prototype']), _0x2a74ba['prototype']['constructor'] = _0x2a74ba, _0x2a74ba['superClass'] = _0xec194, _0x2a74ba['prototype']['getSkinName'] = function () {
return 'arctic/arctichare/' + this['animalSpecies'] + this['getSubSpecies']() + '/arctichare';
}, _0x2a74ba['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x2a74ba['prototype']['animalInfo'] = function () {
var _0x5761fc = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x5761fc['aniName'] = 'Arctic Hare!';
    break;
case 0xc9:
    _0x5761fc['aniName'] = 'Snow Cone Hare!';
    break;
}
return _0x5761fc['skinName'] = this['getSkinName'](), _0x5761fc['aniDesc'] = '', _0x5761fc['upgradeText'] = 'UPGRADED to ' + _0x5761fc['aniName'], _0x5761fc['aniCol'] = '#CFCFCF', _0x5761fc;
}, _0x2a74ba['prototype']['getAbilityInfo'] = function (_0x2c4bd7) {
var _0x1fc239 = {};
return _0x1fc239['abilName'] = 'Dig Hole!', _0x1fc239['abilImg'] = 'abilities/Dig.svg', _0x1fc239['skinThemeID'] = this['skinThemeID'], _0x1fc239['mopeSeasonID'] = this['mopeSeasonID'], _0x1fc239;
};

function _0x2a74ba() {
_0x2a74ba['superClass']['call'](this, _0x4acf80);
}
window['ArcticHare'] = _0x2a74ba, _0x3360d0['setCustomClassForGameObjType'](_0x2a74ba, _0x4acf80, _0x46d563);
var _0xec194 = _0x1dd8d7;
_0x2e9475['prototype'] = Object['create'](_0xec194['prototype']), _0x2e9475['prototype']['constructor'] = _0x2e9475, _0x2e9475['superClass'] = _0xec194, _0x2e9475['prototype']['animalInfo'] = function () {
var _0x3bb6b8 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x3bb6b8['aniName'] = 'Polar Bear';
    break;
case 0xc9:
    _0x3bb6b8['aniName'] = 'Cola Connoisseur';
    break;
case 0xca:
    _0x3bb6b8['aniName'] = 'Water Bear';
    break;
}
return _0x3bb6b8['aniDesc'] = '', _0x3bb6b8['upgradeText'] = 'UPGRADED to ' + _0x3bb6b8['aniName'] + '!\x0a Polar bears can climb hills! \x0a+ They\'re amazing swimmers!', _0x3bb6b8['aniCol'] = '#e4e4e4', _0x3bb6b8['skinName'] = this['getSkinName'](), _0x3bb6b8;
}, _0x2e9475['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x2e9475['prototype']['getAbilityInfo'] = function (_0x12aabb) {
var _0xc86b43 = {};
return _0xc86b43['abilName'] = 'Claw Slash!', _0xc86b43['abilImg'] = 'abilities/Slash-Claw.svg', _0xc86b43['skinThemeID'] = this['skinThemeID'], _0xc86b43['mopeSeasonID'] = this['mopeSeasonID'], _0xc86b43;
}, _0x2e9475['prototype']['getSkinName'] = function () {
var _0x3f09ad = 'arctic/bear/' + this['animalSpecies'] + this['getSubSpecies']() + '/bear';
if (this['animalSpecies'] == 0xc9 && this['flag_usingAbility']) _0x3f09ad += '1';
return _0x3f09ad;
};

function _0x2e9475() {
_0x2e9475['superClass']['call'](this, _0x4acf80);
}
window['PolarBear'] = _0x2e9475, _0x3360d0['setCustomClassForGameObjType'](_0x2e9475, _0x4acf80, _0x546d88);
var _0xec194 = _0x1dd8d7;
_0x40f4df['prototype'] = Object['create'](_0xec194['prototype']), _0x40f4df['prototype']['constructor'] = _0x40f4df, _0x40f4df['superClass'] = _0xec194, _0x40f4df['prototype']['getSpeciesPath'] = function (_0x44758b) {
return 'arctic/' + _0x44758b + '/' + this['animalSpecies'];
}, _0x40f4df['prototype']['animalInfo'] = function () {
var _0x58f497 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x58f497['aniName'] = 'Lemming!';
    break;
}
return _0x58f497['skinName'] = this['getSpeciesPath']('lemming') + '/lemming', _0x58f497['aniDesc'] = '', _0x58f497['upgradeText'] = 'You\'re a tiny ' + _0x58f497['aniName'] + ' - Eat food to grow!', _0x58f497['aniCol'] = '#CFCFCF', _0x58f497;
}, _0x40f4df['prototype']['getSkinName'] = function () {
var _0x5e81ea = this['getSpeciesPath']('lemming') + '/lemming';
return _0x5e81ea;
};

function _0x40f4df() {
_0x40f4df['superClass']['call'](this, _0x4acf80);
}
window['Lemming'] = _0x40f4df, _0x3360d0['setCustomClassForGameObjType'](_0x40f4df, _0x4acf80, _0x47b3d3);

function _0x33ef45(_0x56bd90) {
var _0x3256b7 = _0x3360d0['createGameObjOfOType'](_0x4acf80, _0x56bd90['animalType']);
_0x3256b7['animalType'] = _0x56bd90['animalType'], _0x3256b7['animalSpecies'] = _0x56bd90['animalSpecies'], _0x3256b7['animalSubSpecies'] = _0x56bd90['animalSubSpecies'], _0x3256b7['animalPremiumSkin'] = _0x56bd90['premiumSkinGroup'], _0x3256b7['mopeSeasonID'] = 0x1, _0x3256b7['skinThemeID'] = 0x0;
var _0x13191a = _0x3256b7['animalInfo']();
_0x56bd90['aniCol'] = _0x13191a['aniCol'], _0x56bd90['aniName'] = _0x13191a['aniName'], _0x56bd90['skinName'] = _0x13191a['skinName'], _0x56bd90['upgradeText'] = _0x13191a['upgradeText'];
var _0x47f27d = _0x3256b7['getAbilityInfo'](_0x56bd90['abilityType']);
return _0x56bd90['abilityImage'] = _0x47f27d['abilImg'], _0x56bd90['abilityName'] = _0x47f27d['abilName'], _0x56bd90;
}
class _0x1e0ca8 {
constructor(_0x19a71e) {
    this['data'] = _0x19a71e;
    if (!this['miniMapCanvas']) this['miniMapCanvas'] = document['createElement']('canvas');
    this['miniMapCanvas']['width'] = this['data']['mapWidth'], this['miniMapCanvas']['height'] = this['data']['mapHeight'], this['ctx_'] = this['miniMapCanvas']['getContext']('2d'), this['ctx_']['globalAlpha'] = 0.2, this['drawObjects']();
} ['drawObjects']() {
    for (let _0x256113 = 0x0; _0x256113 < this['data']['objects']['length']; _0x256113++) {
        let _0x3aadc2 = this['data']['objects'][_0x256113];
        if (_0x3aadc2['isRect']) this['drawRect'](_0x3aadc2);
        else this['drawCircle'](_0x3aadc2);
    }
} ['drawCircle'](_0x4630d8) {
    var _0x17d763 = _0x4630d8['x'] * this['data']['scaleX'],
        _0x448b41 = _0x4630d8['y'] * this['data']['scaleY'],
        _0x4eed9d = _0x4630d8['r'] / this['data']['objScale'];
    if (_0x4630d8['objType'] == _0xace30e) _0x4eed9d = _0x4eed9d * 0x2;
    else {
        if (_0x4630d8['outline'] !== undefined) {
            this['ctx_']['beginPath'](), this['ctx_']['globalAlpha'] = 0x1, this['ctx_']['fillStyle'] = _0x4630d8['outline'];
            var _0x4e835e = Math['max'](0x1, _0x4eed9d) + 0x1;
            this['ctx_']['arc'](_0x17d763, _0x448b41, _0x4e835e, 0x0, 0x2 * Math['PI']), this['ctx_']['fill']();
        }
    }
    if (_0x4630d8['objType'] == _0xace30e && _0x2fa240) {
        var _0x4edb4e = '/assets/s/2/gameobj/78/mini' + _0x4630d8['teamID'] + '.png',
            _0x4111a0 = _0x297bc3(_0x4edb4e);
        _0x4111a0 && (this['ctx_']['globalAlpha'] = 0x1, this['ctx_']['save'](), this['ctx_']['drawImage'](_0x4111a0, _0x17d763 - _0x4eed9d, _0x448b41 - _0x4eed9d, _0x4eed9d * 0x2, _0x4eed9d * 0x2), this['ctx_']['restore']());
    } else this['ctx_']['beginPath'](), this['ctx_']['globalAlpha'] = 0x1, this['ctx_']['fillStyle'] = _0x4630d8['c'], this['ctx_']['arc'](_0x17d763, _0x448b41, Math['max'](0x1, _0x4eed9d), 0x0, 0x2 * Math['PI']), this['ctx_']['fill']();
} ['drawRect'](_0xb70ce1) {
    var _0x6d9ce7 = _0xb70ce1['x'] * this['data']['scaleX'],
        _0x17926f = _0xb70ce1['y'] * this['data']['scaleY'],
        _0x2afeae = _0xb70ce1['w'] * this['data']['scaleX'],
        _0x1589af = _0xb70ce1['h'] * this['data']['scaleY'];
    this['ctx_']['globalAlpha'] = 0x1, this['ctx_']['fillStyle'] = _0xb70ce1['c'], this['ctx_']['fillRect'](_0x6d9ce7 - _0x2afeae / 0x2, _0x17926f - _0x1589af / 0x2, _0x2afeae, _0x1589af);
} ['drawMap']() {
    if (this['miniMapCanvas'] && _0x5af4a2) {
        var _0x582d41 = _0x3584da - (0xa + this['data']['mapWidth']) * _0x185dc5,
            _0x242789 = 0xa * _0x185dc5;
        _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0x1, _0x4ac9cf['drawImage'](this['miniMapCanvas'], _0x582d41, _0x242789, this['data']['mapWidth'] * _0x185dc5, this['data']['mapHeight'] * _0x185dc5), _0x4ac9cf['restore']();
        const _0x1f9915 = _0x3584da - (0xc + this['data']['mapWidth']) * _0x185dc5,
            _0x222e91 = _0x242789 - 0x1 * _0x185dc5,
            _0x4238ac = 0xa,
            _0x1ba038 = 0x4;
        _0x4ac9cf['save'](), _0x4ac9cf['strokeStyle'] = '#8AF5AF', _0x4ac9cf['lineWidth'] = _0x1ba038, _0xd33dd2(_0x4ac9cf, _0x1f9915, _0x222e91, (this['data']['mapWidth'] + 0x2) * _0x185dc5, (this['data']['mapHeight'] + 0x2) * _0x185dc5, _0x4238ac, ![], !![]), _0x4ac9cf['restore']();
    }
    _0x183c7e();
    if (_0x5234d5 && _0x5234d5['length'] > 0x0) {
        const _0x2b3ce2 = this['data']['mapWidth'] + 0xc,
            _0x455789 = 0xa;
        for (var _0xc1907 = 0x0; _0xc1907 < _0x5234d5['length']; _0xc1907++) {
            _0x5234d5[_0xc1907]['sx'] = _0x2b3ce2, _0x5234d5[_0xc1907]['sy'] = _0x455789, _0x3d0e3a(_0x5234d5[_0xc1907], 'white', 0x1);
        }
    }
    if (_0x4a544a != null) _0x3d0e3a(_0x4a544a, 'cyan', 0x1);
    var _0x2ceae7 = _0xddec75[_0x46868a];
    if (_0x2ceae7) {
        const _0x1cc07e = this['data']['mapWidth'] + 0xc,
            _0x513040 = 0xa;
        _0x3d0e3a({
            'id': _0x46868a,
            'sx': _0x1cc07e,
            'sy': _0x513040,
            'x': _0x32a53d,
            'y': _0x25d100
        }, 'white', 0x1);
    }
    var _0x2ea3c2 = this['data']['mapHeight'] * _0x185dc5 + _0x242789;
    _0x2ea3c2 += 0xc * _0x185dc5;
    var _0x5ee0a0 = 0xa * _0x185dc5;
    this['showPlayerCount'](_0x5ee0a0, _0x5ee0a0 + _0x2ea3c2);
} ['setPlayersCount'](_0x47a9bb, _0x5237f4) {
    _0x3a73d2['playersCount'] = _0x47a9bb, _0x3a73d2['alivePlayersCount'] = _0x5237f4, _0x3cb245['setText'](_0x3fe45c(_0x47a9bb) + ' online');
} ['getFontSize']() {
    return 0x12 * _0x489111;
} ['showPlayerCount'](_0x5281d4, _0x18ebfc) {
    if (_0x361438 || _0x50a9ba) return;
    let _0x57aa74 = this['getFontSize']();
    _0x3cb245['setFontSize'](_0x57aa74), _0x35d182['setFontSize'](_0x57aa74), _0x18acd1['setFontSize'](_0x57aa74), _0x3cb245['x'] = _0x3584da - (_0x5281d4 + _0x3cb245['width'] / 0x2), _0x3cb245['y'] = _0x18ebfc - _0x3cb245['height'] / 0x2, _0x3cb245['draw'](), _0x18acd1['x'] = _0x3584da - (_0x5281d4 + _0x18acd1['width'] / 0x2), _0x18acd1['y'] = _0x3cb245['y'] + 0xf * _0x185dc5, _0x18acd1['draw']();
}
}
var _0x26d412 = 0x93,
_0xec194 = _0x5adfe2;
_0x29d198['prototype'] = Object['create'](_0xec194['prototype']), _0x29d198['prototype']['constructor'] = _0x29d198, _0x29d198['superClass'] = _0xec194, _0x29d198['prototype']['drawGrid'] = _0x5bdc9a['drawGrid'], _0x29d198['prototype']['updateZ'] = function () {
switch (this['biome']) {
case _0x4bd137:
    this['z'] = -0x12c;
    break;
case _0x160bc1:
    this['z'] = -0x12b;
    break;
case _0x3fda6a:
case _0x2609b8:
    this['z'] = -0x12a;
    break;
case _0x243ca7:
    if (this['forceBiomeColor']) this['z'] = -0xd2;
    else this['z'] = -0xd0;
    break;
case _0x4df75d:
    this['z'] = -0x127;
    break;
}
}, _0x29d198['prototype']['customDraw'] = function (_0x1f3cc1) {
if (this['isRect']) {
    this['drawBiome'](_0x1f3cc1);
    if (!_0x1f3cc1) this['jaggedSides'] && (_0x4ac9cf['save'](), this['jaggedSidesForRect'](), _0x4ac9cf['restore']());
    if (_0x5bdc9a['showGrid']) {
        var _0x4a4da8 = 0x2d;
        _0x25dc01(-this['getRectWidth']() / 0x2 + _0x4a4da8, -this['getRectHeight']() / 0x2 + _0x4a4da8, this['getRectWidth']() / 0x2 - _0x4a4da8, this['getRectHeight']() / 0x2 - _0x4a4da8, this['x'], this['y']);
    }
    _0x4ac9cf['save'](), _0x4ac9cf['restore']();
    if (!_0x5bdc9a['noTextures']) this['drawTerrainFeatures']();
} else this['drawBiome'](![]);
}, _0x29d198['prototype']['jaggedPointsForRect'] = function (_0x45757a) {
var _0x57d974 = 0x0,
    _0x540d58 = 0x1,
    _0x5bbde7 = 0x2,
    _0x13dbbd = 0x3;
if (this['jaggedSides']) {
    if (_0x45757a == _0x5bbde7) {
        this['jaggedRect'][_0x45757a] = [];
        var _0x2e986f = -this['getRectWidth']() / 0x2,
            _0x57a657 = this['getRectWidth']() / 0x2,
            _0x497fef = this['getRectHeight']() / 0x2 - 0x20,
            _0x262835 = this['getRectHeight']() / 0x2 - 0x20;
        this['jaggedRect'][_0x45757a]['push']({
            'x': _0x2e986f,
            'y': _0x497fef
        });
        var _0xbf49cc = 0x14,
            _0x28c991 = [-0xc, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
            _0x4b585e = 0x3c,
            _0x1e2f80 = 0x0,
            _0x347d99 = _0x362064 - this['x'],
            _0x1abaf1 = 0x0 - this['x'],
            _0xe8d214 = _0xa7125 - this['y'],
            _0x38231f = 0x0 - this['y'],
            _0x36b10a, _0x34ddaf = _0x2e986f - _0xbf49cc;
        this['jaggedRect'][_0x45757a]['push']({
            'x': _0x2e986f,
            'y': _0x497fef
        }), _0x36b10a = _0x262835 + _0xbf49cc;
        var _0x2fb02d = 0x0,
            _0x438bd5 = 0x0;
        for (_0x34ddaf = _0x2e986f; _0x34ddaf < _0x57a657; _0x34ddaf += _0x4b585e) {
            _0x438bd5 = _0x34ddaf, _0x2fb02d = Math['min'](_0xe8d214, Math['max'](_0x38231f, _0x36b10a + _0x28c991[_0x1e2f80])), this['jaggedRect'][_0x45757a]['push']({
                'x': _0x438bd5,
                'y': _0x2fb02d
            }), _0x1e2f80 = (_0x1e2f80 + 0x1) % _0x28c991['length'];
        }
        this['jaggedRect'][_0x45757a]['push']({
            'x': _0x57a657,
            'y': _0x262835
        }), this['jaggedRect'][_0x45757a]['push']({
            'x': _0x57a657,
            'y': _0x497fef
        }), this['jaggedRect'][_0x45757a]['push']({
            'x': _0x2e986f,
            'y': _0x497fef
        });
    } else {
        if (_0x45757a == _0x57d974) {
            var _0xd69a7b = 0x64;
            this['jaggedRect'][_0x45757a] = [], _0x4ac9cf['fillStyle'] = _0x414722;
            var _0x2e986f = -this['getRectWidth']() / 0x2,
                _0x57a657 = this['getRectWidth']() / 0x2,
                _0x497fef = -this['getRectHeight']() / 0x2 + 0x18,
                _0x262835 = -this['getRectHeight']() / 0x2 + 0xc;
            this['jaggedRect'][_0x45757a]['push']({
                'x': _0x2e986f,
                'y': _0x497fef
            });
            var _0xbf49cc = 0x0,
                _0x28c991 = [-0xc, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
                _0x4b585e = 0x3c,
                _0x1e2f80 = 0x0,
                _0x347d99 = _0x362064 - this['x'],
                _0x1abaf1 = 0x0 - this['x'],
                _0xe8d214 = _0xa7125 - this['y'],
                _0x38231f = 0x0 - this['y'],
                _0x36b10a, _0x34ddaf = _0x2e986f;
            this['jaggedRect'][_0x45757a]['push']({
                'x': _0x2e986f,
                'y': _0x262835
            }), _0x36b10a = _0x262835;
            for (_0x34ddaf = _0x2e986f; _0x34ddaf < _0x57a657; _0x34ddaf += _0x4b585e) {
                _0x438bd5 = _0x34ddaf, _0x2fb02d = Math['min'](_0xe8d214, Math['max'](_0x38231f, _0x36b10a + _0x28c991[_0x1e2f80])), this['jaggedRect'][_0x45757a]['push']({
                    'x': _0x438bd5,
                    'y': _0x2fb02d
                }), _0x1e2f80 = (_0x1e2f80 + 0x1) % _0x28c991['length'];
            }
            this['jaggedRect'][_0x45757a]['push']({
                'x': _0x57a657,
                'y': _0x262835
            }), this['jaggedRect'][_0x45757a]['push']({
                'x': _0x57a657,
                'y': _0x497fef
            });
        }
    }
}
}, _0x29d198['prototype']['drawJaggedCircle'] = function (_0x13a9bb, _0x1a5d3d) {
if (this['points2']) this['drawPoints'](this['points2'], _0x1a5d3d, !![]);
this['drawPoints'](this['points1'], _0x13a9bb, !![]);
}, _0x29d198['prototype']['getRectWidth'] = function () {
var _0x166a1b = this['rectW'];
return _0x166a1b;
}, _0x29d198['prototype']['getRectHeight'] = function () {
var _0x3f5051 = this['rectH'];
return _0x3f5051;
}, _0x29d198['prototype']['drawBiome'] = function (_0x4b2f48) {
if (this['biome'] == _0x243ca7) this['drawVolcanoBiome'](_0x4b2f48);
else {
    if (!this['isRect']) _0x4ac9cf['fillStyle'] = _0x4b2f48 ? 'red' : this['getBiomeColor'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x1, this['rad']), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill']();
    else {
        if (this['biome'] == _0x160bc1) _0x4ac9cf['globalAlpha'] = 0x1;
        if (!_0x4b2f48) {
            _0x4ac9cf['fillStyle'] = _0x4b2f48 ? _0x249ca3 : this['getBiomeColor']();
            var _0x17d77a = _0x4b2f48 ? 0x0 : 0x14;
            _0x4ac9cf['fillRect'](-this['getRectWidth']() / 0x2 + _0x17d77a, -this['getRectHeight']() / 0x2 + _0x17d77a, this['getRectWidth']() - _0x17d77a * 0x2, this['getRectHeight']() - _0x17d77a * 0x2);
        }
    }
}
}, _0x29d198['prototype']['drawVolcanoBiome'] = function (_0x440dab) {
_0x4ac9cf['save']();
if (!(_0x25ea67 == 0x2)) _0x4ac9cf['rotate'](this['rPer'] * 0x2 * Math['PI']);
var _0x2a9b70 = 1.5,
    _0x4e3e35 = _0x2dd807('volcano', this['spawnTime']);
_0x4e3e35 !== undefined && _0x4e3e35 != null && (this['theFrame'] = _0x4e3e35);
_0x2a9b70 = this['theFrame'];
var _0xdc50f9 = 0x4;
this['forceBiomeColor'] ? (_0x4ac9cf['fillStyle'] = _0x249ca3, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0xdc50f9 * 0x2 * _0x2a9b70), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['save'](), _0x4ac9cf['fillStyle'] = '#8A681B', _0x4ac9cf['globalAlpha'] = 0.9, _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0xdc50f9 * 0x4), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['restore']()) : (_0x4ac9cf['fillStyle'] = '#604729', _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill']()), !(_0x25ea67 == 0x2 || this['forceBiomeColor']) && (_0x4ac9cf['fillStyle'] = '#8A681B', _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0xdc50f9 + _0x2a9b70), 0x0, Math['PI'] * 0x2), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x2a9b70), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x2a9b70), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x2a9b70), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x2a9b70), 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['beginPath'](), _0x4ac9cf['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x4ac9cf['fill'](), _0x4ac9cf['beginPath']()), _0x4ac9cf['restore']();
}, _0x29d198['prototype']['drawPoints'] = function (_0x1a6c6e, _0x45bfa7, _0x2ba285) {
if (_0x2ba285) _0x4ac9cf['fillStyle'] = _0x45bfa7;
else _0x4ac9cf['strokeStyle'] = _0x45bfa7;
_0x4ac9cf['strokeStyle'] = _0x45bfa7, _0x4ac9cf['beginPath']();
var _0x46e94a = 0xa;
_0x4ac9cf['moveTo'](_0x1a6c6e[0x0]['x'] * _0x46e94a, _0x1a6c6e[0x0]['y'] * _0x46e94a);
for (var _0x5e6fb4 = 0x1; _0x5e6fb4 < _0x1a6c6e['length']; _0x5e6fb4++) {
    _0x4ac9cf['lineTo'](_0x1a6c6e[_0x5e6fb4]['x'] * _0x46e94a, _0x1a6c6e[_0x5e6fb4]['y'] * _0x46e94a);
}
_0x4ac9cf['lineTo'](_0x1a6c6e[0x0]['x'] * _0x46e94a, _0x1a6c6e[0x0]['y'] * _0x46e94a);
if (_0x2ba285) _0x4ac9cf['fill']();
else _0x4ac9cf['stroke']();
}, _0x29d198['prototype']['drawJaggedRect'] = function () {
var _0x2fb54b = 0x0,
    _0x2119b2 = 0x1,
    _0xc31147 = 0x2,
    _0x2d1ad7 = 0x3;
for (var _0x216d27 = 0x0; _0x216d27 < this['jaggedRect']['length']; _0x216d27++) {
    if (this['jaggedRect'][_0x216d27]) {
        var _0x5ea001 = this['jaggedRect'][_0x216d27];
        if (_0x5ea001 && _0x5ea001['length'] > 0x0) {
            _0x4ac9cf['fillStyle'] = this['biomeColor'], _0x4ac9cf['strokeStyle'] = 'red', _0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](_0x5ea001[0x0]['x'], _0x5ea001[0x0]['y']);
            for (i = 0x1; i < _0x5ea001['length']; i++) _0x4ac9cf['lineTo'](_0x5ea001[i]['x'], _0x5ea001[i]['y']);
            _0x4ac9cf['closePath'](), _0x4ac9cf['fill'](), _0x4ac9cf['stroke']();
        }
    }
}
}, _0x29d198['prototype']['jaggedPointsForCircle'] = function (_0x50a3af, _0x572946, _0x43811c, _0x504a66, _0x59626b) {
if (this['points1'] == undefined) {
    this['points1'] = [];
    if (_0x59626b > 0x0) this['points2'] = [];
    var _0x5d98ee = _0x5a9e0b(-0x2, 0x2),
        _0x42bcd2 = 0x2 * Math['PI'] / _0x504a66;
    a = _0x142401(_0x5d98ee);
    var _0x18292c = Math['cos'](a),
        _0x2c758d = Math['sin'](a),
        _0x5eda23 = _0x50a3af + _0x43811c * _0x18292c,
        _0x285e24 = _0x572946 + _0x43811c * _0x2c758d;
    this['points1']['push']({
        'x': _0x5eda23,
        'y': _0x285e24
    });
    if (_0x59626b > 0x0) {
        var _0x36341b = _0x50a3af + (_0x43811c + _0x59626b) * _0x18292c,
            _0x29688c = _0x572946 + (_0x43811c + _0x59626b) * _0x2c758d;
        this['points2']['push']({
            'x': _0x36341b,
            'y': _0x29688c
        });
    }
    for (var _0x4f5d96 = 0x1; _0x4f5d96 < _0x504a66; _0x4f5d96++) {
        var _0x2cd9e4 = _0x5a9e0b(-0x1, 0x1);
        _0x5d98ee = _0x5a9e0b(-0x2, 0x2);
        var _0x36feed = _0x43811c + _0x2cd9e4;
        a = _0x42bcd2 * _0x4f5d96 + _0x142401(_0x5d98ee), _0x18292c = Math['cos'](a), _0x2c758d = Math['sin'](a);
        var _0x564003 = _0x50a3af + _0x36feed * _0x18292c,
            _0x4dc206 = _0x572946 + _0x36feed * _0x2c758d;
        this['points1']['push']({
            'x': _0x564003,
            'y': _0x4dc206
        });
        if (_0x59626b > 0x0) {
            var _0x49fc36 = _0x43811c + _0x59626b + _0x2cd9e4,
                _0x249c9c = _0x50a3af + (_0x49fc36 + _0x59626b) * _0x18292c,
                _0xcbf44a = _0x572946 + (_0x49fc36 + _0x59626b) * _0x2c758d;
            this['points2']['push']({
                'x': _0x249c9c,
                'y': _0xcbf44a
            });
        }
    }
    this['points1']['push']({
        'x': _0x5eda23,
        'y': _0x285e24
    });
    if (_0x59626b > 0x0) this['points2']['push']({
        'x': _0x36341b,
        'y': _0x29688c
    });
}
}, _0x29d198['prototype']['jaggedSidesForRect'] = function () {
var _0xbb6053 = 0x2a;
_0x4ac9cf['fillStyle'] = this['getBiomeColor']();
var _0x3e299d = -this['getRectWidth']() / 0x2 + _0xbb6053,
    _0x418926 = this['getRectWidth']() / 0x2 - _0xbb6053,
    _0x232a50 = -this['getRectHeight']() / 0x2 + _0xbb6053,
    _0x34100f = this['getRectHeight']() / 0x2 - _0xbb6053;
_0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](_0x3e299d, _0x232a50);
var _0x15e8e3 = 0x1e,
    _0x3db42c = [-0x8, 0xa, -0xa, 0xc, 0x0, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
    _0x2919ce = 0x2d,
    _0x1fd45f = 0x0,
    _0xe1b2f8 = _0x362064 - this['x'],
    _0x35c44d = 0x0 - this['x'],
    _0x33675c = _0xa7125 - this['y'],
    _0x45a448 = 0x0 - this['y'],
    _0x3a2560, _0x127bfd = _0x3e299d - _0x15e8e3;
for (_0x3a2560 = _0x232a50; _0x3a2560 < _0x34100f; _0x3a2560 += _0x2919ce) {
    _0x4ac9cf['lineTo'](Math['min'](_0xe1b2f8, Math['max'](_0x35c44d, _0x127bfd + _0x3db42c[_0x1fd45f])), _0x3a2560), _0x1fd45f = (_0x1fd45f + 0x1) % _0x3db42c['length'];
}
_0x4ac9cf['lineTo'](_0x3e299d, _0x34100f), _0x3a2560 = _0x34100f + _0x15e8e3;
for (_0x127bfd = _0x3e299d; _0x127bfd < _0x418926; _0x127bfd += _0x2919ce) {
    _0x4ac9cf['lineTo'](_0x127bfd, Math['min'](_0x33675c, Math['max'](_0x45a448, _0x3a2560 + _0x3db42c[_0x1fd45f]))), _0x1fd45f = (_0x1fd45f + 0x1) % _0x3db42c['length'];
}
_0x4ac9cf['lineTo'](_0x418926, _0x34100f), _0x127bfd = _0x418926 + _0x15e8e3;
for (_0x3a2560 = _0x34100f; _0x3a2560 > _0x232a50; _0x3a2560 -= _0x2919ce) {
    _0x4ac9cf['lineTo'](Math['min'](_0xe1b2f8, Math['max'](_0x35c44d, _0x127bfd + _0x3db42c[_0x1fd45f])), _0x3a2560), _0x1fd45f = (_0x1fd45f + 0x1) % _0x3db42c['length'];
}
_0x4ac9cf['lineTo'](_0x418926, _0x232a50), _0x3a2560 = _0x232a50 - _0x15e8e3;
for (_0x127bfd = _0x418926; _0x127bfd > _0x3e299d; _0x127bfd -= _0x2919ce) {
    _0x4ac9cf['lineTo'](_0x127bfd, Math['min'](_0x33675c, Math['max'](_0x45a448, _0x3a2560 + _0x3db42c[_0x1fd45f]))), _0x1fd45f = (_0x1fd45f + 0x1) % _0x3db42c['length'];
}
_0x4ac9cf['closePath'](), _0x4ac9cf['fill']();
}, _0x29d198['prototype']['getBiomeColor'] = function () {
if (this['forceBiomeColor']) return this['biomeColor'];
switch (this['biome']) {
case _0x4df75d:
    return _0x414722;
case _0x2609b8:
    return '#c4dee7';
case _0x3fda6a:
    return _0x36b3cd;
case _0x243ca7:
    return _0x3e1844;
case _0x4bd137:
    return _0x1a85a8;
case _0x160bc1:
    return _0x1548de;
default:
    return _0x1a85a8;
}
}, _0x29d198['prototype']['jaggedSides'] = null, _0x29d198['prototype']['forceBiomeColor'] = ![], _0x29d198['prototype']['readCustomData_onNewlyVisible'] = function (_0x143bba) {
this['isRect'] = _0x143bba['readUInt8']() == 0x1, this['biomeColor'] = _0x143bba['readString'](), this['biome'] = _0x143bba['readUInt16']();
var _0x498f09 = _0x143bba['readBitGroup']();
this['forceBiomeColor'] = _0x498f09['getBool']();
this['isRect'] && (this['jaggedSides'] = [_0x498f09['getBool'](), _0x498f09['getBool'](), _0x498f09['getBool'](), _0x498f09['getBool']()]);
if (!this['isRect']) this['jaggedPointsForCircle'](0x0, 0x0, this['rad'], 0x28, 0x5, this['biomeColor'], '#DAB601');
else {
    this['jaggedRect'] = [];
    var _0x4921e7 = 0x0,
        _0x58138a = 0x1,
        _0x13b2f8 = 0x2,
        _0x40a010 = 0x3;
}
this['drawGrid'] = _0x5bdc9a['showGrid'];
if (this['isRect'] && this['biome'] != _0x4df75d) this['generateTerrainFeatures']();
}, _0x29d198['prototype']['biomePattern'] = null, _0x29d198['prototype']['generateTerrainFeatures'] = function () {
var _0x4a6bfd = 0x64,
    _0x429622 = 0x64,
    _0x387340 = 1.5;
if (this['biome'] == _0x3fda6a) _0x4a6bfd = 0x7d, _0x429622 = 0x7d, _0x387340 = 1.5;
else this['biome'] == _0x160bc1 && (_0x4a6bfd = 0x4b, _0x429622 = 0x4b, _0x387340 = 0x2);
var _0x4919db = 0x1,
    _0x36df15 = -this['getRectWidth']() / 0x2 + _0x4a6bfd,
    _0x4716b6 = -this['getRectHeight']() / 0x2 + _0x429622,
    _0x56956a = this['getRectWidth']() / 0x2,
    _0x53dc02 = this['getRectHeight']() / 0x2,
    _0x5b51ac = _0x4a6bfd * (this['biome'] == _0x160bc1 ? 0x2 : 0x3),
    _0x4f1e24 = 0x0,
    _0x578e63 = [];
for (; _0x36df15 < _0x56956a - _0x4a6bfd; _0x36df15++) {
    if (_0x4919db == 0x1) {
        var _0xce55db = {
            'x': _0x36df15,
            'y': _0x4716b6,
            'rx': _0x36df15 + _0x4a6bfd * _0x5a9e0b(-0.25, 0.25),
            'ry': _0x4716b6 + _0x429622 * _0x5a9e0b(-0.25, 0.25),
            'w': _0x4a6bfd * _0x387340,
            'h': _0x429622 * _0x387340,
            'c': 'blue',
            'img': this['getRandomPatternImg'](),
            'r': _0x5a9e0b(0x0, 0xb4)
        };
        if (_0xce55db['img'] < 0x0) _0xce55db['img'] = 0x0;
        _0x578e63['push'](_0xce55db);
    }
    _0x36df15 += _0x5b51ac;
    if (_0x36df15 >= _0x56956a - _0x4a6bfd) {
        _0x4716b6 += _0x5b51ac;
        if (this['biome'] != _0x4bd137 && this['biome'] != _0x160bc1) _0x4919db = _0x4919db == 0x0 ? 0x1 : 0x0;
        _0x36df15 = -this['getRectWidth']() / 0x2 + _0x4a6bfd;
    }
    if (this['biome'] != _0x4bd137 && this['biome'] != _0x160bc1) _0x4919db = _0x4919db == 0x0 ? 0x1 : 0x0;
    else _0x4919db = _0x4919db == 0x0 ? 0x1 : 0x0;
    if (this['biome'] == _0x4bd137) _0x4919db = 0x1;
    if (_0x4716b6 > _0x53dc02 - _0x429622) break;
}
this['biomePattern'] = _0x578e63;
}, _0x29d198['prototype']['drawTerrainFeatures'] = function () {
if (this['biomePattern'])
    for (i = 0x0; i < this['biomePattern']['length']; i++) {
        this['drawRectObj'](this['biomePattern'][i]);
    }
}, _0x29d198['prototype']['fillPattern'] = function (_0x59bf54) {
var _0x374d0a = this['curBiome'] + '_' + _0x59bf54,
    _0x3a8f06 = 'gameobj/' + this['oType'] + '/' + _0x374d0a + '.jpg',
    _0x45e31d = this['getSkinImageObj'](_0x3a8f06);
if (_0x45e31d) {
    var _0x3b04ae = -this['getRectWidth']() / 0x2,
        _0x45d808 = -this['getRectHeight']() / 0x2,
        _0x40ac55 = this['getRectWidth']() * 0x2,
        _0x4c45b0 = this['getRectHeight']() * 0x2,
        _0x1f8dfa = _0x4ac9cf['createPattern'](_0x45e31d, 'repeat');
    _0x4ac9cf['fillStyle'] = _0x1f8dfa, _0x4ac9cf['fillRect'](_0x3b04ae, _0x45d808, _0x40ac55, _0x4c45b0);
}
}, _0x29d198['prototype']['drawRectObj'] = function (_0x58d37f) {
var _0x48cc11 = this['curBiome'] + '_' + _0x58d37f['img'],
    _0x3d0b8b = 'gameobj/' + this['oType'] + '/' + _0x48cc11 + '.png',
    _0x145acd = this['getSkinImageObj'](_0x3d0b8b);
if (_0x145acd) {
    _0x4ac9cf['save'](), _0x4ac9cf['translate'](_0x58d37f['rx'], _0x58d37f['ry']);
    if (this['biome'] == _0x4bd137 || this['biome'] == _0x2609b8 && _0x58d37f['img'] == 0x1 || this['biome'] == _0x3fda6a && _0x58d37f['img'] > 0x1) _0x4ac9cf['rotate'](_0x58d37f['r']);
    _0x4ac9cf['drawImage'](_0x145acd, 0x0, 0x0, _0x58d37f['w'], _0x58d37f['h']), _0x4ac9cf['restore']();
}
}, _0x29d198['prototype']['getRandomPatternImg'] = function () {
var _0x5f679a = 0x1;
if (this['biome'] == _0x4bd137 || this['biome'] == _0x2609b8) _0x5f679a = Math['max'](0x0, Math['round'](_0x5a9e0b(0x0, 0x3)));
else {
    if (this['biome'] == _0x160bc1) _0x5f679a = 0x1;
    else _0x5f679a = Math['max'](0x0, Math['round'](_0x5a9e0b(0x0, 0x2)));
}
return _0x5f679a - 0x1;
};

function _0x29d198() {
_0x29d198['superClass']['call'](this, _0x26d412);
}
window['BiomeShape'] = _0x29d198, _0x3360d0['setCustomClassForGameObjType'](_0x29d198, _0x26d412);
var _0xec194 = _0x5adfe2;
_0x2cba4c['prototype'] = Object['create'](_0xec194['prototype']), _0x2cba4c['prototype']['constructor'] = _0x2cba4c, _0x2cba4c['superClass'] = _0xec194, _0x2cba4c['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x2cba4c['prototype']['customDraw'] = function (_0x6d0ad8) {
var _0x3923f2 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + this['oType'] + '.png');
if (_0x3923f2) {
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = this['alpha'] < 0.7 ? this['alpha'] : 0x1;
    var _0xe21029 = this['rad'] * 0x1;
    _0x4ac9cf['rotate'](this['angle'] + _0x142401(0xb4)), _0x4ac9cf['drawImage'](_0x3923f2, -_0xe21029, -_0xe21029, _0xe21029 * 0x2, _0xe21029 * 0x2), _0x4ac9cf['restore']();
}
}, _0x2cba4c['prototype']['readCustomData_onNewlyVisible'] = function (_0x25acb1) {
this['alpha'] = _0x25acb1['readUInt8']() / 0x64;
}, _0x2cba4c['prototype']['readUpdatedProperty'] = function (_0xff4e73, _0x290e00) {
_0xff4e73 == _0x45ffe8 && (this['alpha'] = _0x290e00['readUInt8']() / 0x64);
};
var _0x32c7df = 0x94;

function _0x2cba4c() {
_0x2cba4c['superClass']['call'](this, _0x32c7df);
}
window['OceanWave'] = _0x2cba4c, _0x3360d0['setCustomClassForGameObjType'](_0x2cba4c, _0x32c7df);
var _0xec194 = _0x5adfe2;
_0x11da34['prototype'] = Object['create'](_0xec194['prototype']), _0x11da34['prototype']['constructor'] = _0x11da34, _0x11da34['superClass'] = _0xec194, _0x11da34['prototype']['updateZ'] = function () {
this['z'] = -0x126;
}, _0x11da34['prototype']['customDraw'] = function (_0x2c0169) {
var _0x59730a = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + this['oType'] + '_' + this['speciesType'] + '.png');
if (_0x59730a) {
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = this['alpha'] < 0.7 ? this['alpha'] : 0x1;
    var _0xec4bec = this['rad'];
    _0x4ac9cf['rotate'](this['angle'] + _0x142401(0xb4)), _0x4ac9cf['drawImage'](_0x59730a, -_0xec4bec, -_0xec4bec, _0xec4bec * 0x2, _0xec4bec * 0x2), _0x4ac9cf['restore']();
}
}, _0x11da34['prototype']['readCustomData_onNewlyVisible'] = function (_0x2a2904) {
this['alpha'] = _0x2a2904['readUInt8']() / 0x64;
}, _0x11da34['prototype']['readUpdatedProperty'] = function (_0x4da9ea, _0x3f00f3) {
_0x4da9ea == _0x45ffe8 && (this['alpha'] = _0x3f00f3['readUInt8']() / 0x64);
};
var _0x4776fa = 0x95;

function _0x11da34() {
_0x11da34['superClass']['call'](this, _0x4776fa);
}
window['UnderwaterFish'] = _0x11da34, _0x3360d0['setCustomClassForGameObjType'](_0x11da34, _0x4776fa);
var _0xec194 = _0x5adfe2;
_0x4bfe34['prototype'] = Object['create'](_0xec194['prototype']), _0x4bfe34['prototype']['constructor'] = _0x4bfe34, _0x4bfe34['superClass'] = _0xec194, _0x4bfe34['prototype']['updateZ'] = function () {
this['z'] = this['rad'] + 0x64;
}, _0x4bfe34['prototype']['setSkinPath'] = function () {
var _0x56fe06 = this['oType'] + '_' + this['speciesSubType'];
this['objSkinPath'] = 'gameobj/' + this['oType'] + '/' + _0x56fe06 + '_' + this['hasPopped'] + '.png';
}, _0x4bfe34['prototype']['customDraw'] = function (_0x17f0f9) {
var _0x147c63 = this['getSkinImageObj'](this['objSkinPath']);
if (_0x147c63) {
    _0x4ac9cf['save']();
    var _0x4be95d = this['rad'] * 0x1;
    _0x4ac9cf['globalAlpha'] = 0x1, _0x4ac9cf['drawImage'](_0x147c63, -_0x4be95d, -_0x4be95d, _0x4be95d * 0x2, _0x4be95d * 0x2), _0x4ac9cf['restore']();
}
}, _0x4bfe34['prototype']['hasPopped'] = 0x0, _0x4bfe34['prototype']['readUpdatedProperty'] = function (_0x40b291, _0x25f78c) {
_0x40b291 == _0x4bda18 && (this['hasPopped'] = _0x25f78c['readUInt8']());
};
var _0x57186b = 0x97;

function _0x4bfe34() {
_0x4bfe34['superClass']['call'](this, _0x57186b);
}
window['Bubbles'] = _0x4bfe34, _0x3360d0['setCustomClassForGameObjType'](_0x4bfe34, _0x57186b);
var _0xec194 = _0x5adfe2;
_0xb57a3d['prototype'] = Object['create'](_0xec194['prototype']), _0xb57a3d['prototype']['constructor'] = _0xb57a3d, _0xb57a3d['superClass'] = _0xec194, _0xb57a3d['prototype']['updateZ'] = function () {
this['z'] = -0x96;
}, _0xb57a3d['prototype']['customDraw'] = function (_0x385d01) {
var _0x2bc80a = 0x0,
    _0x5b3c40 = 0x1,
    _0x155add = 0x1;
if (!_0x50a9ba && !(_0x25ea67 == 0x2)) {
    var _0x13c970 = (_0x397f50 - this['spawnTime']) / 0x3e8,
        _0x429cab = 1.2;
    _0x5b3c40 = 3.5 * Math['cos'](0x2 * Math['PI'] / _0x429cab * _0x13c970), _0x155add = 2.5 * Math['sin'](0x2 * Math['PI'] / _0x429cab * _0x13c970);
    var _0x408244 = 0x5 / 0x3c,
        _0x199c36 = 0x3e8 / _0x408244,
        _0x1e0c09 = (_0x397f50 - this['spawnTime']) % _0x199c36 / _0x199c36;
    _0x2bc80a = _0x1e0c09 * 0x2 * Math['PI'];
}
_0x4ac9cf['save'](), _0x4ac9cf['rotate'](_0x2bc80a), _0x4ac9cf['globalAlpha'] = this['getObjAlpha']();
for (i = 0x0; i < 0x5; i++) {
    var _0x270cac = this['getSkinImage'](i);
    if (_0x270cac) {
        var _0x340353 = this['rad'],
            _0x5800d1 = i > 0x3 ? _0x5b3c40 * (0x1 - i / 0xa) : 0x0,
            _0x51fad6 = i > 0x3 ? _0x155add * (0x1 - i / 0x5) : 0x0;
        _0x4ac9cf['drawImage'](_0x270cac, -_0x340353 + _0x5800d1, -_0x340353 + _0x51fad6, 0x2 * _0x340353, 0x2 * _0x340353);
    }
}
_0x4ac9cf['restore']();
}, _0xb57a3d['prototype']['setSkinPath'] = function (_0x328dc8) {
this['objSkinPath'] = 'gameobj/' + this['oType'] + '/' + _0x328dc8 + '.png';
}, _0xb57a3d['prototype']['getSkinImage'] = function (_0xfe9704) {
var _0x17267f = this['getSkinImageObj'](this['objSkinPath']);
return _0x17267f;
};

function _0xb57a3d() {
_0xb57a3d['superClass']['call'](this, _0x41b866), this['doesDrawEffectScale'] = ![], this['drawEffectScale_Slow'] = ![];
}
window['OceanHidinghole'] = _0xb57a3d, _0x3360d0['setCustomClassForGameObjType'](_0xb57a3d, _0x41b866);
var _0xec194 = _0x5adfe2;
_0x24b014['prototype'] = Object['create'](_0xec194['prototype']), _0x24b014['prototype']['constructor'] = _0x24b014, _0x24b014['superClass'] = _0xec194, _0x24b014['prototype']['playerID'] = 0x0, _0x24b014['prototype']['shellState'] = 0x0, _0x24b014['prototype']['cracksCount'] = 0x0, _0x24b014['prototype']['updateZ'] = function () {
if (this['shellState'] == 0x0) this['z'] = this['rad'];
else this['z'] = -0x99;
}, _0x24b014['prototype']['isEdibleOutlined'] = function () {
if (this['playerID'] == _0x46868a) return ![];
return _0x4df1db['superClass']['prototype']['isEdibleOutlined']['call'](this);
}, _0x24b014['prototype']['nextShakeEndT'] = 0x0, _0x24b014['prototype']['nextShakeStartT'] = 0x0, _0x24b014['prototype']['drawScaleEffect'] = function () {
if (this['shellState'] != 0x1) this['drawNickName'](0x1);
if (this['shellState'] == 0x0) {
    _0x397f50 > this['nextShakeEndT'] && (this['nextShakeEndT'] = +new Date() + _0x5a9e0b(0x9c4, 0x1194), this['nextShakeStartT'] = this['nextShakeEndT'] - _0x5a9e0b(0x3e8, 0x5dc));
    if (_0x397f50 > this['nextShakeStartT'] && _0x397f50 < this['nextShakeEndT']) {
        var _0x5e3130 = 0.02,
            _0x11ae23 = (_0x397f50 - this['spawnTime']) / 0x3e8,
            _0x133f13 = 0.1,
            _0x18eec2 = this['rad'] * _0x5e3130,
            _0x14f28b = _0x18eec2 * Math['sin'](0x2 * Math['PI'] / _0x133f13 * _0x11ae23),
            _0x133f13 = 0.15,
            _0x18eec2 = this['rad'] * _0x5e3130,
            _0x55ba47 = _0x18eec2 * Math['cos'](0x2 * Math['PI'] / _0x133f13 * _0x11ae23);
        _0x4ac9cf['translate'](-_0x14f28b, -_0x55ba47);
    }
}
}, _0x24b014['prototype']['customDraw'] = function (_0x277e34) {
var _0x36c0a0 = 'upgradeshell';
if (this['shellState'] == 0x0) {
    if (this['cracksCount'] > 0x0 && this['cracksCount'] <= 0xa) _0x36c0a0 = 'egg_crack' + this['cracksCount'];
    else _0x36c0a0 += '' + this['shellState'];
} else _0x36c0a0 += '' + this['shellState'];
var _0x1cc88e = this['getSkinImageObj']('img/upgradeshell/' + _0x36c0a0 + '.png'),
    _0x33a473 = this['getSkinImageObj']('img/upgradeshell/outline' + this['curBiome'] + '.png'),
    _0xb09692 = this['rad'],
    _0x5f25c6 = this['rPer'] * Math['PI'] * 0x2;
_0x4ac9cf['save'](), _0x4ac9cf['rotate'](_0x5f25c6);
if (_0x1cc88e) {
    _0x4ac9cf['drawImage'](_0x1cc88e, -_0xb09692, -_0xb09692 * 1.1, 0x2 * _0xb09692, 2.2 * _0xb09692);
    if (this['shellState'] == 0x0 && _0x33a473) _0x4ac9cf['drawImage'](_0x33a473, -_0xb09692, -_0xb09692 * 1.1, 0x2 * _0xb09692, 2.21 * _0xb09692);
}
_0x4ac9cf['restore']();
}, _0x24b014['prototype']['getNameSize'] = function () {
return 0x6;
}, _0x24b014['prototype']['setNick'] = function (_0x2bdd87) {
this['nickName'] = _0x2bdd87, null == this['nickTXT'] ? (this['nickTXT'] = new _0x128c61(this['getNameSize'](), '#FFFFFF'), this['nickTXT']['strokeW'] = 1.5, this['nickTXT']['renderScale'] = 0x5, this['nickTXT']['setText'](this['nickName'])) : (this['nickTXT']['setFontSize'](this['getNameSize']()), this['nickTXT']['setText'](this['nickName']));
}, _0x24b014['prototype']['drawNickName'] = function (_0x67daba) {
this['nickName'] && this['nickTXT'] && !_0x47dcae && (_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = _0x67daba, this['nickTXT']['x'] = 0x0, this['nickTXT']['y'] = this['rad'] + 0x5, this['nickTXT']['draw'](), _0x4ac9cf['restore']());
}, _0x24b014['prototype']['readCustomData_onNewlyVisible'] = function (_0x56f66a) {
_0x24b014['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x56f66a), this['playerID'] = _0x56f66a['readUInt32']();
if (this['playerID'] > 0x0) {
    var _0x391837 = _0x56f66a['readString']();
    this['setNick'](_0x391837 ? _0x391837 : 'mope.io');
}
this['readUpdatedProperty'](_0x3f1306, _0x56f66a), this['readUpdatedProperty'](_0x3ec912, _0x56f66a);
}, _0x24b014['prototype']['readUpdatedProperty'] = function (_0x31c975, _0xc0d2b) {
if (_0x31c975 == _0x3f1306) this['shellState'] = _0xc0d2b['readUInt8']();
else {
    if (_0x31c975 == _0x3ec912) this['cracksCount'] = _0xc0d2b['readUInt8']();
}
};
var _0xba9d6d = 0x98;

function _0x24b014() {
_0x24b014['superClass']['call'](this, _0xba9d6d);
}
window['UpgradeShell'] = _0x24b014, _0x3360d0['setCustomClassForGameObjType'](_0x24b014, _0xba9d6d);
for (_eimg = 0x1; _eimg <= 0xa; _eimg++) {
var _0x574783 = 'egg_crack' + _eimg,
    _0x2f874e = './assets/s/2/img/upgradeshell/' + _0x574783 + '.png';
_0x297bc3(_0x2f874e);
}
for (_eimg = 0x0; _eimg <= 0x5; _eimg++) {
var _0x574783 = 'outline' + _eimg,
    _0x2f874e = './assets/s/2/img/upgradeshell/' + _0x574783 + '.png';
_0x297bc3(_0x2f874e);
}
var _0xec194 = _0x5adfe2;
_0x295622['prototype'] = Object['create'](_0xec194['prototype']), _0x295622['prototype']['constructor'] = _0x295622, _0x295622['superClass'] = _0xec194, _0x295622['prototype']['playerID'] = 0x0, _0x295622['prototype']['shellState'] = 0x0, _0x295622['prototype']['cracksCount'] = 0x0, _0x295622['prototype']['updateZ'] = function () {
this['z'] = 0x186a0;
}, _0x295622['prototype']['customDraw'] = function (_0x15a819) {
switch (this['speciesType']) {
case _0xba9d6d: {
    var _0x396896 = this['getSkinImageObj']('img/upgradeshell/shellpart' + this['speciesSubType'] + '.png'),
        _0x474112 = this['rad'],
        _0x5158a7 = this['rPer'] * Math['PI'] * 0x2;
    _0x396896 && (_0x4ac9cf['save'](), _0x4ac9cf['rotate'](_0x5158a7), _0x4ac9cf['drawImage'](_0x396896, -_0x474112, -_0x474112, 0x2 * _0x474112, 0x2 * _0x474112), _0x4ac9cf['restore']());
    break;
}
default:
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.1, _0x486a28(0x0, 0x0, this['rad'], 'black'), _0x4ac9cf['restore']();
    break;
}
};
var _0x31cf0d = 0x99;

function _0x295622() {
_0x295622['superClass']['call'](this, _0x31cf0d);
}
window['Particle'] = _0x295622, _0x3360d0['setCustomClassForGameObjType'](_0x295622, _0x31cf0d);
var _0x13295b = _0x294001,
_0xec194 = _0x54c5f1;
_0x13295b['prototype'] = Object['create'](_0xec194['prototype']), _0x13295b['prototype']['constructor'] = _0x13295b, _0x13295b['superClass'] = _0xec194, _0x294001['prototype']['updateZ'] = function () {
this['z'] = 0x186a2;
}, _0x294001['prototype']['customDraw'] = function (_0x503324) {
this['drawEffectScale_Slow'] = !![], this['doesDrawEffectScale'] = !![], console['log'](this['specType']), _0x4ac9cf['globalAlpha'] = 0.2, _0x486a28(0x0, 0x0, this['rad'] * 0.85, 'white');
var _0x41659f = this['isGreenTarget'] ? '_e' : '',
    _0x48ba72 = this['getSkinImageObj']('img/target' + _0x41659f + '.png');
if (_0x48ba72) {
    var _0x58fe51 = this['rad'];
    _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = 0.5, _0x4ac9cf['drawImage'](_0x48ba72, -_0x58fe51, -_0x58fe51, 0x2 * _0x58fe51, 0x2 * _0x58fe51), _0x4ac9cf['restore']();
}
_0x4ac9cf['save'](), this['hasTimer'] && this['timerTxt'] != null && (_0x4ac9cf['globalAlpha'] = 0x1, this['timerTxt']['x'] = 0x0, this['timerTxt']['y'] = 0x0, this['timerTxt']['draw']()), _0x4ac9cf['restore']();
}, _0x294001['prototype']['worldUpd_readMsgNewlyVisible'] = function (_0x5e896e, _0x2802b8, _0x40ecf2) {
this['setObjTypes'](_0x2802b8, _0x40ecf2), this['id'] = _0x5e896e['readUInt32']();
var _0x49cd0a = _0x5e896e['readUInt16']() / 0x4,
    _0x49e392 = _0x5e896e['readUInt16']() / 0x4,
    _0x37b052 = _0x5e896e['readUInt16']() / 0x4;
this['ox'] = this['x'] = this['nx'] = _0x49e392, this['oy'] = this['y'] = this['ny'] = _0x37b052, this['nRad'] = _0x49cd0a, this['oRad'] = this['rad'] = 0x0, this['setMovedToPos'](_0x49e392, _0x37b052), this['setNewRad'](_0x49cd0a), this['hasTimer'] = _0x5e896e['readUInt8']() == 0x1, this['readUpdatedProperty'](_0x599180, _0x5e896e);
}, _0x294001['prototype']['readUpdatedProperty'] = function (_0x1f2545, _0x5119f8) {
if (_0x1f2545 == _0x386e8a) {
    this['timer'] = _0x5119f8['readUInt16']() / 0x64;
    if (this['timer'] < 0x1e) this['updateTimer']();
} else {
    if (_0x1f2545 == _0x550a9d) this['targetText'] = _0x5119f8['readString'](), this['hasTimer'] = !![], this['setTimer'](this['targetText']);
    else {
        if (_0x1f2545 == _0x5c9411) {
            this['hasVictim'] = !![];
            var _0x3a08e6 = _0x5119f8['readUInt16']() / 0x4,
                _0x1fc688 = _0x5119f8['readUInt16']() / 0x4;
            this['spider_ox'] = this['victimX'], this['spider_oy'] = this['victimY'], this['spider_nx'] = _0x3a08e6, this['spider_ny'] = _0x1fc688;
        } else _0x1f2545 == _0x599180 && (this['isGreenTarget'] = _0x5119f8['readUInt8']() == 0x1);
    }
}
}, _0x294001['prototype']['isGreenTarget'] = ![], _0x294001['prototype']['hasVictim'] = ![], _0x294001['prototype']['victimX'] = null, _0x294001['prototype']['victimY'] = null, _0x294001['prototype']['onLerpUpdate'] = function (_0x5dc200) {
this['hasVictim'] && (this['victimX'] = _0x5dc200 * (this['spider_nx'] - this['spider_ox']) + this['spider_ox'], this['victimY'] = _0x5dc200 * (this['spider_ny'] - this['spider_oy']) + this['spider_oy']);
}, _0x294001['prototype']['beforeCustomDraw'] = function (_0x57a1bc) {
this['hasVictim'] && (console['log']('beforeCustomDraw'), _0x4ac9cf['save'](), _0x4ac9cf['strokeStyle'] = 'white', _0x4ac9cf['globalAlpha'] = 0x1, _0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](this['x'], this['y']), _0x4ac9cf['lineTo'](this['victimX'], this['victimY']), _0x4ac9cf['stroke'](), _0x4ac9cf['restore']());
}, _0x294001['prototype']['updateTimer'] = function () {
this['timer'] = Math['round'](this['timer']);
var _0x547914 = this['timer'];
this['setTimer'](_0x547914);
}, _0x294001['prototype']['timerTxt'] = null, _0x294001['prototype']['setTimer'] = function (_0x16eb03) {
var _0x4c3d73 = '' + _0x16eb03;
null == this['timerTxt'] ? (this['timerTxt'] = new _0x128c61(0x14, '#FFFFFF'), this['timerTxt']['strokeW'] = 0x2, this['timerTxt']['multiLine'] = !![], this['timerTxt']['renderScale'] = 0x5, this['timerTxt']['setText'](_0x4c3d73)) : (this['timerTxt']['setFontSize'](0x14), this['timerTxt']['setText'](_0x4c3d73));
};

function _0x294001() {
_0x294001['superClass']['call'](this);
}
window['TargetCircle'] = _0x294001, _0x3360d0['setCustomClassForGameObjType'](_0x294001, _0x1b8199, _0x16c4b7);
var _0xec194 = _0x5adfe2;
_0x3b6a7e['prototype'] = Object['create'](_0xec194['prototype']), _0x3b6a7e['prototype']['constructor'] = _0x3b6a7e, _0x3b6a7e['superClass'] = _0xec194, _0x3b6a7e['prototype']['stoneIncentive'] = 0x0, _0x3b6a7e['prototype']['teamID'] = 0x0, _0x3b6a7e['prototype']['lastHurtByTeamID'] = 0x0, _0x3b6a7e['prototype']['coolDownTime'] = 0x0, _0x3b6a7e['prototype']['isDefended'] = ![], _0x3b6a7e['prototype']['updateZ'] = function () {
this['z'] = 0x3ea;
}, _0x3b6a7e['prototype']['customDraw'] = function (_0x1160fd) {
let _0x2fdbba = this['teamID'];
if (this['teamID'] == 0x0) {
    if (this['lastHurtByTeamID'] != 0x0) _0x2fdbba += '_' + this['lastHurtByTeamID'];
    else {
        if (this['coolDownTime'] > 0.1) _0x2fdbba += '_0';
    }
}
var _0x32d0db = this['getSkinImageObj']('gameobj/' + this['oType'] + '/stone' + _0x2fdbba + '.png');
if (_0x32d0db) {
    var _0x31a935 = this['rad'] * 1.25;
    _0x4ac9cf['drawImage'](_0x32d0db, -_0x31a935, -_0x31a935, 0x2 * _0x31a935, 0x2 * _0x31a935);
}
if (!this['isDefended']) {
    var _0x6b0958 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/stone_undefended.png');
    if (_0x6b0958) {
        var _0x31a935 = this['rad'] * 1.25;
        _0x4ac9cf['drawImage'](_0x6b0958, -_0x31a935, -_0x31a935, 0x2 * _0x31a935, 0x2 * _0x31a935);
    }
}
var _0x48021f = this['getSkinImageObj']('gameobj/' + this['oType'] + '/incentive/' + this['stoneIncentive'] + '.png');
if (_0x48021f) {
    var _0x31a935 = this['rad'] / 0x4;
    _0x4ac9cf['drawImage'](_0x48021f, -_0x31a935, -_0x31a935, 0x2 * _0x31a935, 0x2 * _0x31a935);
}
}, _0x3b6a7e['prototype']['setIncentiveText'] = function () {
if (null == this['incentiveTxt']) this['incentiveTxt'] = new _0x128c61(0xa, '#FFFFFF'), this['incentiveTxt']['strokeW'] = 1.5, this['incentiveTxt']['multiLine'] = !![], this['incentiveTxt']['renderScale'] = 0x5, this['incentiveTxt']['setText'](this['nickName']);
else {
    this['incentiveTxt']['setFontSize'](0xa), this['incentiveTxt']['multiLine'] = !![];
    let _0x5c740a = '';
    this['coolDownTime'] > 0.1 && (_0x5c740a = '\x0acooldown: ' + this['coolDownTime'] + 's'), this['incentiveTxt']['setText'](this['nickName'] + _0x5c740a);
}
}, _0x3b6a7e['prototype']['drawIncentiveText'] = function (_0x15786e) {
this['incentiveTxt'] && !_0x47dcae && (_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = _0x15786e, this['incentiveTxt']['x'] = -this['rad'] / 0x2, this['incentiveTxt']['y'] = -this['rad'] / 0x2, this['incentiveTxt']['draw'](), _0x4ac9cf['restore']());
}, _0x3b6a7e['prototype']['readCustomData_onNewlyVisible'] = function (_0x1a7106) {
_0x3b6a7e['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x1a7106), this['stoneIncentive'] = _0x1a7106['readUInt8'](), this['readUpdatedProperty'](_0x24e40c, _0x1a7106), this['readUpdatedProperty'](_0x194432, _0x1a7106), this['readUpdatedProperty'](_0x13846f, _0x1a7106), this['readUpdatedProperty'](_0x338d7f, _0x1a7106);
}, _0x3b6a7e['prototype']['readUpdatedProperty'] = function (_0x20438d, _0x3d2b26) {
if (_0x20438d == _0x24e40c) this['teamID'] = _0x3d2b26['readUInt8']();
else {
    if (_0x20438d == _0x194432) this['lastHurtByTeamID'] = _0x3d2b26['readUInt8']();
    else {
        if (_0x20438d == _0x338d7f) this['isDefended'] = _0x3d2b26['readUInt8']() == 0x1;
        else _0x20438d == _0x13846f && (this['coolDownTime'] = _0x3d2b26['readUInt16']() / 0x64);
    }
}
}, _0x3b6a7e['prototype']['onHurt'] = function () {};
var _0xace30e = 0x4e;

function _0x3b6a7e() {
_0x3b6a7e['superClass']['call'](this, _0xace30e);
}
window['TeamStone'] = _0x3b6a7e, _0x3360d0['setCustomClassForGameObjType'](_0x3b6a7e, _0xace30e);
const _0x2117c9 = 0x1,
_0xdad451 = 0x2,
_0x2bb542 = 0x3,
_0x4134d9 = 0x4,
_0x496bd5 = 0x5,
_0x2823fb = 0x6,
_0x270061 = 0x7,
_0x521734 = 0x8,
_0x132f37 = 0x9,
_0x4f5af2 = 0xa,
_0x272ab2 = 0xb,
_0x92c493 = 0xc,
_0x519165 = 0xd;
var _0xec194 = _0x5adfe2;
_0x4138c0['prototype'] = Object['create'](_0xec194['prototype']), _0x4138c0['prototype']['constructor'] = _0x4138c0, _0x4138c0['superClass'] = _0xec194, _0x4138c0['prototype']['updateZ'] = function () {
this['z'] = this['hasImpact'] ? this['rad'] : 0x174876e800;
};
let _0x2d8702 = 1.5;
_0x4138c0['prototype']['frame'] = 0x0, _0x4138c0['prototype']['customDraw'] = function (_0x39efb7) {
if (!this['hasImpact']) this['frame'] = Math['trunc'](_0x397f50 / 0x78) % 0x6;
else this['frame'] = 0x0;
var _0xad160a = 'gameobj/' + this['oType'] + '/' + this['oType'] + '_' + this['frame'] + '.png',
    _0x5244e3 = this['getSkinImageObj'](_0xad160a);
if (_0x5244e3) {
    _0x4ac9cf['save']();
    var _0x4771f9 = this['rad'] * 0x2;
    !this['hasImpact'] ? (_0x4ac9cf['shadowColor'] = 'rgba(0,0,0,0.05)', _0x4ac9cf['shadowBlur'] = 0x0, _0x4ac9cf['shadowOffsetX'] = this['shadowDistance'], _0x4ac9cf['shadowOffsetY'] = this['shadowDistance'], _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x5244e3, -_0x4771f9 / 0x2, -_0x4771f9 * _0x2d8702, _0x4771f9, _0x4771f9 * 0x2)) : (_0xad160a = 'gameobj/' + this['oType'] + '/meteorite.png', _0x5244e3 = null, _0x5244e3 = this['getSkinImageObj'](_0xad160a), _0x5244e3 && (_0x4ac9cf['rotate'](this['angle']), _0x4771f9 = this['rad'], _0x4ac9cf['drawImage'](_0x5244e3, -_0x4771f9, -_0x4771f9, _0x4771f9 * 0x2, _0x4771f9 * 0x2))), _0x4ac9cf['restore']();
}
}, _0x4138c0['prototype']['readCustomData_onNewlyVisible'] = function (_0x34fe87) {
_0x4138c0['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x34fe87), this['readUpdatedProperty'](_0x3ed625, _0x34fe87), this['readUpdatedProperty'](_0x4b614e, _0x34fe87);
}, _0x4138c0['prototype']['shadowDistance'] = 0x0, _0x4138c0['prototype']['hasImpact'] = ![], _0x4138c0['prototype']['readUpdatedProperty'] = function (_0x215630, _0x3a429c) {
if (_0x215630 == _0x4b614e) {
    let _0x4405f9 = _0x3a429c['readUInt16']() / 0xa;
    this['shadowDistance'] = _0x4405f9;
} else _0x215630 == _0x3ed625 && (this['hasImpact'] = _0x3a429c['readUInt8']() == 0x1);
};
const _0x14977c = 0x9a;

function _0x4138c0() {
_0x4138c0['superClass']['call'](this, _0x14977c);
}
window['Meteor'] = _0x4138c0, _0x3360d0['setCustomClassForGameObjType'](_0x4138c0, _0x14977c);
var _0xec194 = _0x5adfe2;
_0x33aa49['prototype'] = Object['create'](_0xec194['prototype']), _0x33aa49['prototype']['constructor'] = _0x33aa49, _0x33aa49['superClass'] = _0xec194, _0x33aa49['prototype']['updateZ'] = function () {
this['z'] = -0x65;
}, _0x33aa49['prototype']['customDraw'] = function (_0x49b31d) {
skin = 'gameobj/' + this['oType'] + '/' + this['oType'] + '.png';
var _0xd85df7 = this['getSkinImageObj'](skin);
_0xd85df7 && (_0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['angle']), rad = this['rad'] * 1.5, _0x4ac9cf['drawImage'](_0xd85df7, -rad, -rad, rad * 0x2, rad * 0x2), _0x4ac9cf['restore']());
};
const _0x124f9a = 0x9b;

function _0x33aa49() {
_0x33aa49['superClass']['call'](this, _0x124f9a);
}
window['MeteorCrater'] = _0x33aa49, _0x3360d0['setCustomClassForGameObjType'](_0x33aa49, _0x124f9a);
var _0xec194 = _0x5adfe2;
_0x58802b['prototype'] = Object['create'](_0xec194['prototype']), _0x58802b['prototype']['constructor'] = _0x58802b, _0x58802b['superClass'] = _0xec194, _0x58802b['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x58802b['prototype']['customDraw'] = function (_0xa4d54c) {
this['frame'] = Math['trunc'](_0x397f50 / 0x78) % 0x5;
var _0x41114e = 'gameobj/' + this['oType'] + '/' + this['oType'] + '_' + this['frame'] + '.png',
    _0x2269c9 = this['getSkinImageObj'](_0x41114e);
if (_0x2269c9) {
    var _0x20f9b6 = this['rad'];
    _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['angle']), _0x4ac9cf['drawImage'](_0x2269c9, -_0x20f9b6, -_0x20f9b6, _0x20f9b6 * 0x2, _0x20f9b6 * 0x2), _0x4ac9cf['restore']();
}
};
const _0x45ad9d = 0x9d;

function _0x58802b() {
_0x58802b['superClass']['call'](this, _0x45ad9d);
}
window['MeteorShockwave'] = _0x58802b, _0x3360d0['setCustomClassForGameObjType'](_0x58802b, _0x45ad9d);
const _0x1089db = 0x0,
_0x422ac7 = 0x1,
_0x247fd1 = 0x2,
_0x5d4844 = 0x3;
var _0xec194 = _0x5adfe2;
_0x147aa6['prototype'] = Object['create'](_0xec194['prototype']), _0x147aa6['prototype']['constructor'] = _0x147aa6, _0x147aa6['superClass'] = _0xec194, _0x147aa6['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x147aa6['prototype']['customDraw'] = function (_0x3f0fff) {
var _0x5deb8d = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + this['oType'] + '_' + this['speciesType'] + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
if (_0x5deb8d) {
    var _0x2569c0 = this['rad'];
    _0x4ac9cf['drawImage'](_0x5deb8d, -_0x2569c0, -_0x2569c0, 0x2 * _0x2569c0, 0x2 * _0x2569c0);
}
};
var _0x16fcdb = 0x9e;
_0x147aa6['prototype']['readCustomData_onNewlyVisible'] = function (_0x1bd0bc) {
_0x147aa6['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x1bd0bc), this['speciesType'] = _0x1bd0bc['readUInt16'](), this['speciesSubType'] = _0x1bd0bc['readUInt16']();
};

function _0x147aa6() {
_0x147aa6['superClass']['call'](this, _0x16fcdb);
}
window['HalloweenFood'] = _0x147aa6, _0x3360d0['setCustomClassForGameObjType'](_0x147aa6, _0x16fcdb);
var _0x332800 = _0x332800,
_0xec194 = _0x1dd8d7;
_0x332800['prototype'] = Object['create'](_0xec194['prototype']), _0x332800['prototype']['constructor'] = _0x332800, _0x332800['superClass'] = _0xec194, _0x332800['prototype']['animalInfo'] = function () {
var _0xdaf7fd = {};
switch (this['animalSpecies']) {
case 0x0:
    _0xdaf7fd['aniName'] = 'Swinehoe';
    break;
case 0x1:
    _0xdaf7fd['aniName'] = 'Golden Pheasant';
    break;
}
return _0xdaf7fd['aniCol'] = '#FF9000', _0xdaf7fd['skinName'] = this['getSkinName'](), _0xdaf7fd['upgradeText'] = 'UPGRADED to ' + _0xdaf7fd['aniName'] + '!\x0aHold W to fly around. ', _0xdaf7fd;
}, _0x332800['prototype']['getSkinName'] = function () {
return this['getSpeciesPath']() + this['getSubSpecies']() + '/pheasant' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x332800['prototype']['getSpeciesPath'] = function () {
return 'forest/pheasant/' + this['animalSpecies'];
}, _0x332800['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x332800['prototype']['getWing'] = function (_0x20cb51, _0x36357a, _0x1f1510) {
var _0x354fc7 = 'skins/' + this['getSpeciesPath']() + '/';
return _0x354fc7 += _0x20cb51 + '_wing' + _0x36357a + '.png', _0x354fc7;
}, _0x332800['prototype']['getHead'] = function (_0x513c74, _0xdb03de) {
var _0xa57adf = 'skins/' + this['getSpeciesPath']() + '/';
return _0xa57adf += _0x513c74 + '_head.png', _0xa57adf;
}, _0x332800['prototype']['theFrame'] = 0x0, _0x332800['prototype']['drawUnderSkinImg'] = function () {
this['setSkinScale']();
var _0x4d06cd = -0.7,
    _0x381e65 = 0.9,
    _0x119095 = 'skins/' + this['getSpeciesPath']() + '/tail.png',
    _0x504578 = this['getSkinImageObj'](_0x119095);
if (_0x504578) {
    this['flag_usingAbility'] && (_0x381e65 = 1.1);
    var _0x34086d = this['skinScale'],
        _0x2b15b3 = this['rad'] - this['outlineW'];
    _0x4ac9cf['drawImage'](_0x504578, -_0x2b15b3 * _0x34086d * _0x381e65, (-_0x2b15b3 + _0x2b15b3 * _0x4d06cd) * _0x34086d * _0x381e65, 0x2 * _0x2b15b3 * _0x34086d * _0x381e65, 0x2 * _0x2b15b3 * _0x34086d * _0x381e65);
}
}, _0x332800['prototype']['drawSkinCustomization'] = function () {
if (this['flag_usingAbility']) {
    if (this['flag_flying']) {
        var _0x5923f2 = 'skins'; {
            var _0x3a6592 = 0x1f4 / 0x154;
            if (this['flag_flying'] && !this['flag_isGrabbed']) {
                _0x4ac9cf['save']();
                var _0x1a0a33 = _0x2dd807('bird', this['spawnTime']);
                _0x1a0a33 !== undefined && _0x1a0a33 != null && (this['theFrame'] = _0x1a0a33);
                var _0x784570 = !(_0x25ea67 == 0x2 || _0x50a9ba) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'],
                    _0x4954e0 = this['getSkinImageObj'](this['getWing']('pheasant', 0x1, !![]));
                if (_0x4954e0) {
                    _0x4ac9cf['save']();
                    var _0x294382 = -(-0.2 + _0x784570) * _0x40941f,
                        _0x445faf = this['rad'] * 0.8;
                    _0x4ac9cf['rotate'](_0xb6aa34 + _0x294382);
                    var _0xf583ba = 0x0,
                        _0x4e9068 = this['rad'],
                        _0x219588 = _0x445faf * 0x2 * 0.62,
                        _0x168050 = _0x445faf * 2.5,
                        _0xfdaf76 = 0.2,
                        _0x45eabe = 1.7;
                    _0x4ac9cf['drawImage'](_0x4954e0, _0xf583ba + _0x219588 * -_0xfdaf76, _0x4e9068 + _0x168050 * -_0x45eabe, _0x219588, _0x168050), _0x4ac9cf['restore']();
                }
                var _0x4954e0 = this['getSkinImageObj'](this['getWing']('pheasant', 0x2, !![]));
                if (_0x4954e0) {
                    _0x4ac9cf['save']();
                    var _0x294382 = -(-0.2 + _0x784570) * _0x142401(-0x5a),
                        _0x445faf = this['rad'] * 0.8;
                    _0x4ac9cf['rotate'](_0x142401(-0x2d) + _0x294382);
                    var _0xf583ba = 0x0,
                        _0x4e9068 = this['rad'],
                        _0x219588 = _0x445faf * 0x2 * 0.62,
                        _0x168050 = _0x445faf * 2.5,
                        _0xfdaf76 = 0.8,
                        _0x45eabe = 1.7;
                    _0x4ac9cf['drawImage'](_0x4954e0, _0xf583ba + _0x219588 * -_0xfdaf76, _0x4e9068 + _0x168050 * -_0x45eabe, _0x219588, _0x168050), _0x4ac9cf['restore']();
                }
                _0x4ac9cf['restore']();
            }
            if (this['specType'] != 0x0 && this['specType'] != undefined) {
                var _0x4775f4 = this['getSkinImageObj'](this['getHead']('pheasant', !![]));
                if (_0x4775f4) {
                    _0x4ac9cf['save']();
                    var _0x445faf = this['rad'],
                        _0x2a43bc = 0.2;
                    _0x4ac9cf['drawImage'](_0x4775f4, -_0x445faf * _0x3a6592, (-_0x445faf + _0x445faf * _0x2a43bc) * _0x3a6592, 0x2 * _0x445faf * _0x3a6592, 0x2 * _0x445faf * _0x3a6592), _0x4ac9cf['restore']();
                }
            }
        }
    } else {
        var _0x3a6592 = 0x1f4 / 0x154;
        if (this['flag_usingAbility']) {
            _0x4ac9cf['save']();
            var _0x784570 = 0x0,
                _0x4954e0 = this['getSkinImageObj'](this['getWing']('pheasant', 0x1, !![]));
            if (_0x4954e0) {
                _0x4ac9cf['save']();
                var _0x294382 = -(-0.2 + _0x784570) * _0x142401(0xf),
                    _0x445faf = this['rad'] * 0.8;
                _0x4ac9cf['rotate'](_0x142401(0xf) + _0x294382);
                var _0xf583ba = 0x0,
                    _0x4e9068 = this['rad'],
                    _0x219588 = _0x445faf * 0x2 * 0.7,
                    _0x168050 = _0x445faf * 2.2,
                    _0xfdaf76 = 0x0,
                    _0x45eabe = 1.5;
                _0x4ac9cf['drawImage'](_0x4954e0, _0xf583ba + _0x219588 * -_0xfdaf76, _0x4e9068 + _0x168050 * -_0x45eabe, _0x219588, _0x168050), _0x4ac9cf['restore']();
            }
            var _0x4954e0 = this['getSkinImageObj'](this['getWing']('pheasant', 0x2, !![]));
            if (_0x4954e0) {
                _0x4ac9cf['save']();
                var _0x294382 = -(-0.2 + _0x784570) * _0x142401(-0xf),
                    _0x445faf = this['rad'] * 0.8;
                _0x4ac9cf['rotate'](_0x142401(-0xf) + _0x294382);
                var _0xf583ba = 0x0,
                    _0x4e9068 = this['rad'],
                    _0x219588 = _0x445faf * 0x2 * 0.7,
                    _0x168050 = _0x445faf * 2.2,
                    _0xfdaf76 = 0x1,
                    _0x45eabe = 1.5;
                _0x4ac9cf['drawImage'](_0x4954e0, _0xf583ba + _0x219588 * -_0xfdaf76, _0x4e9068 + _0x168050 * -_0x45eabe, _0x219588, _0x168050), _0x4ac9cf['restore']();
            }
            var _0x4775f4 = this['getSkinImageObj'](this['getHead']('pheasant', !![]));
            if (_0x4775f4) {
                _0x4ac9cf['save']();
                var _0x445faf = this['rad'] * 0x1,
                    _0x2e1388 = -this['rad'] * 0.1;
                _0x4ac9cf['drawImage'](_0x4775f4, -_0x445faf * _0x3a6592, -_0x445faf + _0x2e1388 * _0x3a6592, 0x2 * _0x445faf * _0x3a6592, 0x2 * _0x445faf * _0x3a6592), _0x4ac9cf['restore']();
            }
            _0x4ac9cf['restore']();
        }
    }
}
};

function _0x332800() {
_0x332800['superClass']['call'](this, _0x4acf80);
}
window['Pheasant'] = _0x332800, _0x3360d0['setCustomClassForGameObjType'](_0x332800, _0x4acf80, _0x385fed);
var _0xec194 = _0x1dd8d7;
_0x22422d['prototype'] = Object['create'](_0xec194['prototype']), _0x22422d['prototype']['constructor'] = _0x22422d, _0x22422d['superClass'] = _0xec194, _0x22422d['prototype']['getSkinName'] = function () {
return this['getSpeciesPath']() + this['getSubSpecies']() + '/flyinglizard' + (this['flag_usingAbility'] ? '_body' : '');
}, _0x22422d['prototype']['getSpeciesPath'] = function () {
return 'forest/flyinglizard/' + this['animalSpecies'];
}, _0x22422d['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x22422d['prototype']['animalInfo'] = function () {
var _0x1d2d06 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x1d2d06['aniName'] = 'Flying Lizard!';
    break;
}
return _0x1d2d06['skinName'] = this['getSkinName'](), _0x1d2d06['aniDesc'] = '', _0x1d2d06['upgradeText'] = 'UPGRADED to ' + _0x1d2d06['aniName'] + '!\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!', _0x1d2d06['aniCol'] = '#FF9D43', _0x1d2d06;
}, _0x22422d['prototype']['getAbilityInfo'] = function (_0x1a5c27) {
var _0x2291c3 = {};
return _0x2291c3['abilName'] = 'Pull from Hole', _0x2291c3['abilImg'] = 'abilities/Dig.svg', _0x2291c3['skinThemeID'] = this['skinThemeID'], _0x2291c3['mopeSeasonID'] = this['mopeSeasonID'], _0x2291c3;
}, _0x22422d['prototype']['getAsset'] = function (_0x51aa39) {
var _0xe8e186 = 'skins/' + this['getSpeciesPath']() + '/flyinglizard';
return _0xe8e186 += '_' + _0x51aa39 + '.png', _0xe8e186;
}, _0x22422d['prototype']['backOffset'] = -0.4, _0x22422d['prototype']['armsOffset'] = 0.16, _0x22422d['prototype']['headOffset'] = 0.3, _0x22422d['prototype']['wingsOffset'] = -0.5, _0x22422d['prototype']['wingsScale'] = 1.5, _0x22422d['prototype']['backScale'] = 1.1, _0x22422d['prototype']['drawSkinCustomization'] = function () {
if (this['flag_usingAbility']) {
    var _0x4fd4d6 = 0x1f4 / 0x154;
    this['drawAsset'](_0x4fd4d6, 'arms', this['armsOffset']), this['drawAsset'](_0x4fd4d6, 'wings', this['wingsOffset'], _0x4fd4d6 * this['wingsScale']), this['drawAsset'](_0x4fd4d6, 'back', this['backOffset'], _0x4fd4d6 * this['backScale']), this['drawAsset'](_0x4fd4d6, 'head', this['headOffset']);
}
}, _0x22422d['prototype']['drawAsset'] = function (_0x2f62e9, _0x5f3736, _0x1bb746, _0x40a917) {
var _0x5e39d2 = this['getSkinImageObj'](this['getAsset'](_0x5f3736));
if (_0x5e39d2) {
    if (_0x1bb746 === undefined) _0x1bb746 = 0x0;
    if (_0x40a917 === undefined) _0x40a917 = _0x2f62e9;
    _0x4ac9cf['save']();
    var _0xe6752d = this['rad'];
    _0x4ac9cf['drawImage'](_0x5e39d2, -_0xe6752d * _0x2f62e9, (-_0xe6752d + _0xe6752d * _0x1bb746) * _0x2f62e9, 0x2 * _0xe6752d * _0x2f62e9, 0x2 * _0xe6752d * _0x40a917), _0x4ac9cf['restore']();
}
};

function _0x22422d() {
_0x22422d['superClass']['call'](this, _0x4acf80);
}
const _0x57c8a7 = 0x79;
window['FlyingLizard'] = _0x22422d, _0x3360d0['setCustomClassForGameObjType'](_0x22422d, _0x4acf80, _0x57c8a7);
var _0xec194 = _0x1dd8d7;
_0x2dc5b2['prototype'] = Object['create'](_0xec194['prototype']), _0x2dc5b2['prototype']['constructor'] = _0x2dc5b2, _0x2dc5b2['superClass'] = _0xec194, _0x2dc5b2['prototype']['getSpeciesPath'] = function (_0x26cf07) {
return 'forest/' + _0x26cf07 + '/' + this['animalSpecies'];
}, _0x2dc5b2['prototype']['animalInfo'] = function () {
var _0x2cc3db = {};
switch (this['animalSpecies']) {
case 0x0:
    _0x2cc3db['aniName'] = 'Tarsier!';
    break;
}
return _0x2cc3db['skinName'] = this['getSkinName'](), _0x2cc3db['aniDesc'] = '', _0x2cc3db['upgradeText'] = 'UPGRADED to ' + _0x2cc3db['aniName'] + '!\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!', _0x2cc3db['aniCol'] = '#FF9D43', _0x2cc3db;
}, _0x2dc5b2['prototype']['getSkinName'] = function () {
return this['getSpeciesPath']() + this['getSubSpecies']() + '/tarsier' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x2dc5b2['prototype']['getSpeciesPath'] = function () {
return 'forest/tarsier/' + this['animalSpecies'];
}, _0x2dc5b2['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
};

function _0x2dc5b2() {
_0x2dc5b2['superClass']['call'](this, _0x4acf80);
}
const _0x2f9b66 = 0x71;
window['Tarsier'] = _0x2dc5b2, _0x3360d0['setCustomClassForGameObjType'](_0x2dc5b2, _0x4acf80, _0x2f9b66);
var _0xec194 = _0x1dd8d7;
_0x33a470['prototype'] = Object['create'](_0xec194['prototype']), _0x33a470['prototype']['constructor'] = _0x33a470, _0x33a470['superClass'] = _0xec194, _0x33a470['prototype']['getSpeciesPath'] = function (_0x3d5656) {
return 'forest/' + _0x3d5656 + '/' + this['animalSpecies'];
}, _0x33a470['prototype']['animalInfo'] = function () {
var _0xe0c955 = {};
switch (this['animalSpecies']) {
case 0x0:
    _0xe0c955['aniName'] = 'Chukar!';
    break;
}
return _0xe0c955['skinName'] = this['getSkinName'](), _0xe0c955['aniDesc'] = '', _0xe0c955['upgradeText'] = 'UPGRADED to ' + _0xe0c955['aniName'] + '!\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!', _0xe0c955['aniCol'] = '#FF9D43', _0xe0c955;
}, _0x33a470['prototype']['getSkinName'] = function () {
return this['getSpeciesPath']() + this['getSubSpecies']() + '/chukar' + (this['specType'] == 0x0 ? '' : this['specType']);
}, _0x33a470['prototype']['getSpeciesPath'] = function () {
return 'forest/chukar/' + this['animalSpecies'];
}, _0x33a470['prototype']['getSubSpecies'] = function () {
if (this['mopeSeasonID'] == 0x2) {
    if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
}
return '';
}, _0x33a470['prototype']['drawSkinCustomization'] = function () {
if (!this['flag_usingAbility']) return; {
    var _0x6580fb = 0x1f4 / 0x154;
    if (this['flag_flying'] && !this['flag_isGrabbed']) {
        _0x4ac9cf['save']();
        var _0x26e953 = _0x2dd807('bird', this['spawnTime']);
        _0x26e953 !== undefined && _0x26e953 != null && (this['theFrame'] = _0x26e953);
        var _0x4fbd18 = !(_0x25ea67 == 0x2 || _0x50a9ba) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'],
            _0x220807 = this['getSkinImageObj'](this['getAsset']('wing1'));
        if (_0x220807) {
            _0x4ac9cf['save']();
            var _0x5428e7 = -(-0.2 + _0x4fbd18) * _0x40941f,
                _0x5a88ad = this['rad'] * 0.8;
            _0x4ac9cf['rotate'](_0xb6aa34 + _0x5428e7);
            var _0x4bb16f = 0x0,
                _0x3501f2 = this['rad'],
                _0x5ce7d9 = _0x5a88ad * 0x2 * 0.62,
                _0x52d608 = _0x5a88ad * 2.5,
                _0x439586 = 0.2,
                _0x53bdfe = 1.7;
            _0x4ac9cf['drawImage'](_0x220807, _0x4bb16f + _0x5ce7d9 * -_0x439586, _0x3501f2 + _0x52d608 * -_0x53bdfe, _0x5ce7d9, _0x52d608), _0x4ac9cf['restore']();
        }
        var _0x220807 = this['getSkinImageObj'](this['getAsset']('wing2'));
        if (_0x220807) {
            _0x4ac9cf['save']();
            var _0x5428e7 = -(-0.2 + _0x4fbd18) * _0x142401(-0x5a),
                _0x5a88ad = this['rad'] * 0.8;
            _0x4ac9cf['rotate'](_0x142401(-0x2d) + _0x5428e7);
            var _0x4bb16f = 0x0,
                _0x3501f2 = this['rad'],
                _0x5ce7d9 = _0x5a88ad * 0x2 * 0.62,
                _0x52d608 = _0x5a88ad * 2.5,
                _0x439586 = 0.8,
                _0x53bdfe = 1.7;
            _0x4ac9cf['drawImage'](_0x220807, _0x4bb16f + _0x5ce7d9 * -_0x439586, _0x3501f2 + _0x52d608 * -_0x53bdfe, _0x5ce7d9, _0x52d608), _0x4ac9cf['restore']();
        }
        _0x4ac9cf['restore']();
    }
    if (this['specType'] != 0x0 && this['specType'] != undefined) {
        var _0x32c4dd = this['getSkinImageObj'](this['getAsset']('head'));
        if (_0x32c4dd) {
            _0x4ac9cf['save']();
            var _0x5a88ad = this['rad'];
            _0x4ac9cf['drawImage'](_0x32c4dd, -_0x5a88ad * _0x6580fb, (-_0x5a88ad + _0x5a88ad * 0.1) * _0x6580fb, 0x2 * _0x5a88ad * _0x6580fb, 0x2 * _0x5a88ad * _0x6580fb), _0x4ac9cf['restore']();
        }
    }
}
}, _0x33a470['prototype']['getAsset'] = function (_0x571a13) {
var _0x563901 = 'skins/' + this['getSpeciesPath']() + '/chukar';
return _0x563901 += '_' + _0x571a13 + '.png', _0x563901;
};

function _0x33a470() {
_0x33a470['superClass']['call'](this, _0x4acf80);
}
const _0x3b7456 = 0x72;
window['Chukar'] = _0x33a470, _0x3360d0['setCustomClassForGameObjType'](_0x33a470, _0x4acf80, _0x3b7456);
var _0xec194 = _0x5adfe2;
_0x61abb1['prototype'] = Object['create'](_0xec194['prototype']), _0x61abb1['prototype']['constructor'] = _0x61abb1, _0x61abb1['superClass'] = _0xec194, _0x61abb1['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x61abb1['prototype']['customDraw'] = function (_0x228391) {
var _0x382e83 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + this['oType'] + '_' + this['speciesType'] + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
if (_0x382e83) {
    var _0x552574 = this['rad'];
    _0x4ac9cf['drawImage'](_0x382e83, -_0x552574, -_0x552574, 0x2 * _0x552574, 0x2 * _0x552574);
}
};
var _0x5bfc0d = 0x9f;
_0x61abb1['prototype']['readCustomData_onNewlyVisible'] = function (_0x4bd7ff) {
_0x61abb1['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x4bd7ff), this['speciesType'] = _0x4bd7ff['readUInt16'](), this['speciesSubType'] = _0x4bd7ff['readUInt16']();
};

function _0x61abb1() {
_0x61abb1['superClass']['call'](this, _0x5bfc0d);
}
window['ThanksgivingFood'] = _0x61abb1, _0x3360d0['setCustomClassForGameObjType'](_0x61abb1, _0x5bfc0d);
var _0xec194 = _0x5adfe2;
_0x1594c4['prototype'] = Object['create'](_0xec194['prototype']), _0x1594c4['prototype']['constructor'] = _0x1594c4, _0x1594c4['prototype']['rAngle'] = 0x0, _0x1594c4['prototype']['rAngleF'] = 0.005, _0x1594c4['prototype']['rAngleDirection'] = 0x1, _0x1594c4['superClass'] = _0xec194, _0x1594c4['prototype']['updateZ'] = function () {
if (this['isSnowFlake']) this['z'] = 0x2af8;
else {
    if (this['isStickingOnObject']) this['z'] = 0x1 + this['stickingOnObjectZIndex'];
    else this['z'] = this['rad'];
}
}, _0x1594c4['prototype']['customDraw'] = function (_0x90bd5c) {
if (this['isSnowFlake']) {
    _0x4ac9cf['globalAlpha'] = 0.9, _0x4ac9cf['globalAlpha'] = 0x1;
    var _0x2c8176 = 'gameobj/' + this['oType'] + '/snow-flake.png',
        _0xf28c7c = this['getSkinImageObj'](_0x2c8176);
    if (_0xf28c7c) {
        _0x4ac9cf['save']();
        var _0x443433 = this['rad'] * 0x1;
        this['rAngle'] += this['rAngleF'] * this['rAngleDirection'], _0x4ac9cf['rotate'](this['rAngle']), _0x4ac9cf['drawImage'](_0xf28c7c, -_0x443433, -_0x443433, _0x443433 * 0x2, _0x443433 * 0x2), _0x4ac9cf['restore']();
    }
} else {
    _0x4ac9cf['globalAlpha'] = 0x1;
    var _0x2c8176 = 'gameobj/' + this['oType'] + '/' + this['oType'] + '.png',
        _0xf28c7c = this['getSkinImageObj'](_0x2c8176);
    if (_0xf28c7c) {
        _0x4ac9cf['save']();
        var _0x443433 = this['rad'] * 0x1;
        _0x4ac9cf['rotate'](this['rPer'] * 0x2 * Math['PI']), _0x4ac9cf['drawImage'](_0xf28c7c, -_0x443433, -_0x443433, _0x443433 * 0x2, _0x443433 * 0x2), _0x4ac9cf['restore']();
    }
}
}, _0x1594c4['prototype']['isSnowFlake'] = !![], _0x1594c4['prototype']['isStickingOnObject'] = ![], _0x1594c4['prototype']['stickingOnObjectZIndex'] = 0x0, _0x1594c4['prototype']['readUpdatedProperty'] = function (_0x21c918, _0x3f06ef) {
_0x1594c4['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x3f06ef);
if (_0x21c918 == _0x2841b7) this['isSnowFlake'] = _0x3f06ef['readUInt8']() == 0x1;
else {
    if (_0x21c918 == _0x4190e7) this['isStickingOnObject'] = _0x3f06ef['readUInt8']() == 0x1;
    else {
        if (_0x21c918 == _0x23d687) {
            let _0x54da4b = _0x3f06ef['readUInt32'](),
                _0x456b01 = _0xddec75[_0x54da4b];
            if (_0x456b01) this['stickingOnObjectZIndex'] = _0x456b01['z'];
        }
    }
}
}, _0x1594c4['prototype']['readCustomData_onNewlyVisible'] = function (_0x18aeb3) {
this['readUpdatedProperty'](_0x2841b7, _0x18aeb3), this['readUpdatedProperty'](_0x4190e7, _0x18aeb3), this['readUpdatedProperty'](_0x23d687, _0x18aeb3);
};

function _0x1594c4() {
_0x1594c4['superClass']['call'](this, _0xe13fb8), this['rAngleDirection'] = _0x5a9e0b(0x0, 0x1) == 0x0 ? 0x1 : -0x1;
}
window['Snow'] = _0x1594c4, _0x3360d0['setCustomClassForGameObjType'](_0x1594c4, _0xe13fb8);
class _0x39faec {
constructor() {
    this['ENDPOINTS'] = {
        'GET_INCENTIVIZED_AD_SKINS': '/getIncentivizedAdSkins',
        'REDEEM_INCENTIVIZED_AD_REWARD': '/redeemIncentivizedAdReward'
    }, this['url'] = _0x36b8fc && $config['useDevAccountServer'] ? $config['devAccountServerUrl'] : 'https://mope-accountserver-do.mope.io';
}
async ['getIncentivizedAdSkins']({
    sessionId: _0x570bc6,
    serverId: _0x4babf0,
    userId: _0x3f49c7,
    passwordToken: _0xeea93c
}) {
    try {
        const _0x2601c1 = await fetch('' + this['url'] + this['ENDPOINTS']['GET_INCENTIVIZED_AD_SKINS'], {
                'method': 'POST',
                'headers': {
                    'Content-Type': 'application/json'
                },
                'body': JSON['stringify']({
                    'sessionId': _0x570bc6,
                    'serverId': _0x4babf0,
                    'userId': _0x3f49c7,
                    'passwordToken': _0xeea93c
                })
            }),
            _0x3dff07 = await _0x2601c1['json']();
        return _0x3dff07;
    } catch (_0x1956d9) {
        return console['log']('::: AccountServerService - getIncentivzedAdSkins() ::: ERROR', _0x1956d9), {
            'success': ![],
            'error': _0x1956d9
        };
    }
}
async ['redeemIncentivizedAdReward']({
    sessionId: _0x4cb59b,
    serverId: _0x3ac1b7,
    userId: _0x48a075,
    passwordToken: _0x5f3534
}) {
    try {
        const _0x3148ac = {
                'sessionId': _0x4cb59b,
                'serverId': _0x3ac1b7,
                'userId': _0x48a075,
                'passwordToken': _0x5f3534
            },
            _0x5965a6 = await fetch('' + this['url'] + this['ENDPOINTS']['REDEEM_INCENTIVIZED_AD_REWARD'], {
                'method': 'POST',
                'headers': {
                    'Content-Type': 'application/json'
                },
                'body': JSON['stringify'](_0x3148ac)
            }),
            _0x2431a0 = await _0x5965a6['json']();
        return _0x2431a0;
    } catch (_0x2abd1e) {
        return console['log']('::: AccountServerService - redeemIncentivizedAdReward() ::: ERROR', _0x2abd1e), {
            'success': ![],
            'error': _0x2abd1e
        };
    }
}
}
const _0x168446 = new _0x39faec();
class _0x4ce07a {
static['localStorageKeyName'] = 'totalSessionsSinceLastAd';
static['incrementSessionCount']() {
    const _0x38455a = window['localStorage']['getItem'](_0x4ce07a['localStorageKeyName']);
    if (_0x38455a) {
        let _0x43a673 = parseInt(_0x38455a);
        !isNaN(_0x43a673) && (_0x43a673 === 0x3 ? _0x43a673 = 0x0 : _0x43a673 += 0x1, window['localStorage']['setItem'](_0x4ce07a['localStorageKeyName'], _0x43a673));
    }
}
static async ['shouldShowIncentivzedAdPopup']({
    sessionCount: _0x244ad6,
    userClickedButton: _0x3b4ea3
}) {
    return _0x244ad6 === 0x3 && _0x3693b9 || _0x3b4ea3;
}
static async ['handleShowIncentivizedAdPopup']({
    userClickedButton: _0x5abdde
}) {
    const _0x1998e5 = window['localStorage']['getItem'](_0x4ce07a['localStorageKeyName']);
    if (_0x1998e5) {
        const _0x4e2103 = parseInt(_0x1998e5);
        if (!isNaN(_0x4e2103) || _0x5abdde) {
            const _0x336a15 = await _0x4ce07a['shouldShowIncentivzedAdPopup']({
                'sessionCount': _0x4e2103,
                'userClickedButton': _0x5abdde
            });
            if (_0x336a15) {
                const _0x4dac91 = {
                    'sessionId': _0x2a3c07['serverInfo']['sessionId'],
                    'serverId': _0x2a3c07['serverInfo']['serverId'],
                    'userId': _0x2d1c6a,
                    'passwordToken': _0xc700b6
                };
                _0x168446['getIncentivizedAdSkins'](_0x4dac91)['then'](_0xdbdae0 => {
                    const {
                        success: _0x3bf640
                    } = _0xdbdae0;
                    if (_0x3bf640) {
                        console['log']('::: iandev :::', _0xdbdae0);
                        const {
                            skinData: _0x5f5891
                        } = _0xdbdae0, _0x466c86 = _0x5f5891['map'](_0x182700 => {
                            const _0x39cc6d = _0x35c50c['prototype']['getAnimalInfo'](_0x182700['itemName']);
                            return [..._0x39cc6d, _0x182700['season']];
                        });
                        $bus['emit']($bus['EVENTS']['SHOW_INCENTIVIZED_AD_POPUP'], {
                            'skins': _0x466c86
                        });
                    } else {
                        const {
                            error: _0x3c1336
                        } = _0xdbdae0;
                        _0x1a7e4a(_0x3c1336, 'error', 0xbb8);
                    }
                });
            }
            _0x4ce07a['incrementSessionCount']();
        }
    } else window['localStorage']['setItem'](_0x4ce07a['localStorageKeyName'], 0x1);
}
static async ['playIncentivizedVideoAd']() {
    const _0x20ef0c = await _0x4163c1();
    if (_0x20ef0c) return _0x1a7e4a('Disable Ad Block to get a free skin for 24 hours!', 'success', 0xbb8);
    console['log']('::: ad-tech ::: Attempting to play Incentivized Ad');
    let _0x5f9927 = null;
    setTimeout(() => {
        !_0x5f9927 && (_0x4ce07a['handleFinishedWatchingAd'](), console['log']('::: ad-tech ::: Failed to play Incentivized Ads.'), gtag('event', 'incentivized_ad', {
            'event_category': 'incentivized_ads',
            'event_label': 'failed_to_play',
            'value': 'failed_to_play'
        }));
    }, 0x2710), _0x38f4d3['playIncentivizedVideoAd'](_0x3dbfd9 => {
        _0x5f9927 = _0x3dbfd9, console['log']('::: ad-tech ::: playIncentivizedVideoAd callback hit! ', _0x3dbfd9);
        if (_0x3dbfd9['event'] === 'start') gtag('event', 'incentivized_ad', {
            'event_category': 'incentivized_ads',
            'event_label': 'started',
            'value': 'started'
        });
        else {
            if (_0x3dbfd9['event'] === 'finished') console['log']('::: ad-tech ::: Incentivized Ad Finished Playing'), _0x4ce07a['handleFinishedWatchingAd'](), gtag('event', 'incentivzed_ad', {
                'event_category': 'incentivized_ads',
                'event_label': 'ad_finished',
                'value': 'ad_finished'
            });
            else {
                if (_0x3dbfd9['event'] === 'empty') console['log']('::: ad-tech ::: Incentivized Ad Queue is Empty'), _0x4ce07a['handleFinishedWatchingAd'](), gtag('event', 'incentivized_ad', {
                    'event_category': 'incentivized_ads',
                    'event_label': 'ad_queue_empty',
                    'value': 'ad_queue_empty'
                });
                else _0x3dbfd9['event'] === 'skipped' && (console['log']('::: ad-tech ::: Incentivized Ad Skipped'), _0x4ce07a['handleFinishedWatchingAd'](), gtag('event', 'incentivized_ad', {
                    'event_category': 'incentivized_ads',
                    'event_label': 'ad_skipped',
                    'value': 'ad_skipped'
                }));
            }
        }
    });
}
static async ['playIncentivizedVideoAd']() {
    const _0xdf53f7 = await _0x4163c1();
    if (_0xdf53f7) return _0x1a7e4a('Disable Ad Block to get a free skin for 24 hours!', 'success', 0xbb8);
    console['log']('::: ad-tech ::: Attempting to play Incentivized Ad');
    let _0x369ace = null;
    setTimeout(() => {
        !_0x369ace && (_0x4ce07a['handleFinishedWatchingAd'](), console['log']('::: ad-tech ::: Failed to play Incentivized Ads.'), gtag('event', 'incentivized_ad', {
            'event_category': 'incentivized_ads',
            'event_label': 'failed_to_play',
            'value': 'failed_to_play'
        }));
    }, 0x2710), _0x38f4d3['playIncentivizedVideoAd'](_0x4ead8b => {
        _0x369ace = _0x4ead8b, console['log']('::: ad-tech ::: playIncentivizedVideoAd callback hit! ', _0x4ead8b);
        if (_0x4ead8b['event'] === 'start') gtag('event', 'incentivized_ad', {
            'event_category': 'incentivized_ads',
            'event_label': 'started',
            'value': 'started'
        });
        else {
            if (_0x4ead8b['event'] === 'finished') console['log']('::: ad-tech ::: Incentivized Ad Finished Playing'), _0x4ce07a['handleFinishedWatchingAd'](), gtag('event', 'incentivzed_ad', {
                'event_category': 'incentivized_ads',
                'event_label': 'ad_finished',
                'value': 'ad_finished'
            });
            else _0x4ead8b['event'] === 'empty' && (console['log']('::: ad-tech ::: Incentivized Ad Queue is Empty'), _0x4ce07a['handleFinishedWatchingAd'](), gtag('event', 'incentivized_ad', {
                'event_category': 'incentivized_ads',
                'event_label': 'ad_queue_empty',
                'value': 'ad_queue_empty'
            }));
        }
    });
}
static['handleFinishedWatchingAd']() {
    _0x168446['redeemIncentivizedAdReward']({
        'sessionId': _0x2a3c07['serverInfo']['sessionId'],
        'serverId': _0x2a3c07['serverInfo']['serverId'],
        'userId': _0x2d1c6a,
        'passwordToken': _0xc700b6
    })['then'](_0x3c5de5 => {
        const {
            success: _0x1f04f3,
            reward: _0x48a6cc
        } = _0x3c5de5;
        if (!_0x1f04f3) return _0x1a7e4a(_0x3c5de5['error'], 'error', 0xfa0);
        gtag('event', 'incentivized_ad', {
            'event_category': 'incentivized_ads',
            'event_label': 'reward_awarded',
            'value': 'reward_awarded'
        });
        const _0x1cb07e = new _0x4dcabc(null, _0x48a6cc['animalType']),
            _0x13d8be = _0x35c50c['prototype']['getAnimalInfo'](_0x48a6cc['itemName']),
            _0x2f3f19 = _0x33ef45({
                'animalType': _0x48a6cc['animalType']
            }),
            _0x1e2d3b = [{
                'name': _0x2f3f19['abilityName'],
                'img': _0x2f3f19['abilityImage'],
                'desc': 'Left click to ' + _0x2f3f19['abilityName']
            }];
        _0x1cb07e && _0x13d8be && _0x2f3f19 && ($bus['emit']($bus['EVENTS']['ADD_SHOP_ITEM'], {
            'isNew': !![],
            'skinName': _0x13d8be[0x2],
            'itemName': _0x48a6cc['itemName'],
            'tier': _0x48a6cc['tier'],
            'shopImage': '/assets/s/' + _0x48a6cc['season'] + '/skins/' + _0x13d8be[0x3] + '.png',
            'data': {
                'info': 'Unlocked for 24 hours.'
            },
            'isOnSale': ![],
            'isFree': ![],
            'finalPrice': -0x1,
            'purchasedByPlayer': !![],
            'itemType': 'skin',
            'isTemporary': !![]
        }), $bus['emit']($bus['EVENTS']['FINISHED_INCENTIVIZED_AD'], {
            'rewardType': 'skin',
            'tier': _0x48a6cc['tier'],
            'season': _0x48a6cc['season'],
            'biome': _0x1cb07e['biomeName'],
            'name': _0x13d8be[0x2],
            'img': _0x13d8be[0x3],
            'abilities': _0x1e2d3b
        }));
    });
}
}
$bus['on']($bus['EVENTS']['HANDLE_INCENTIVIZED_AD'], () => _0x4ce07a['handleShowIncentivizedAdPopup']({
'userClickedButton': !![]
}));
var _0xec194 = _0x5adfe2;
_0x6946e4['prototype'] = Object['create'](_0xec194['prototype']), _0x6946e4['prototype']['constructor'] = _0x6946e4, _0x6946e4['superClass'] = _0xec194, _0x6946e4['prototype']['foodType'] = 0x0, _0x6946e4['prototype']['updateZ'] = function () {
this['z'] = this['rad'];
}, _0x6946e4['prototype']['customDraw'] = function (_0x52d800) {
_0x4ac9cf['save']();
var _0x18449e = 'gameobj/' + this['oType'] + '/' + this['oType'] + '_' + this['foodType'] + '' + (this['isEdibleOutlined']() ? '_e' : '') + '.png',
    _0x196c05 = this['getSkinImageObj'](_0x18449e);
if (_0x196c05) {
    var _0xadde64 = this['rad'];
    _0x4ac9cf['save'](), _0x4ac9cf['rotate'](this['rPer'] * 0.5 * Math['PI'] * 0x2), _0x4ac9cf['drawImage'](_0x196c05, -_0xadde64, -_0xadde64, 0x2 * _0xadde64, 0x2 * _0xadde64), _0x4ac9cf['restore']();
}
_0x4ac9cf['restore']();
}, _0x6946e4['prototype']['readCustomData_onNewlyVisible'] = function (_0x3fbd51) {
this['foodType'] = _0x3fbd51['readUInt8']();
};
var _0x48cf91 = 0xa0;

function _0x6946e4() {
_0x6946e4['superClass']['call'](this, _0x48cf91), this['doesDrawEffectScale'] = !![];
}
window['ValentineFood'] = _0x6946e4, _0x3360d0['setCustomClassForGameObjType'](_0x6946e4, _0x48cf91), _0x597238['preloadImages']();
var _0x3b05fd = 0x0;

function _0x4ea6eb() {
var _0x1ba5ce = _0x5bccf1('audio/click.mp3');
if (_0x1ba5ce) try {
    _0x1ba5ce['play']();
} catch (_0x2f1dc6) {}
}
_0x5bccf1('audio/click.mp3'), _0x4e8c25(), _0xb1ce4b();
var _0x6bd786 = [];

function _0x45c413(_0x4d40cd) {
switch (_0x4d40cd) {
case _0x8d05a2:
case _0x4a1ae4:
case _0x4f68c0:
case _0x1e3310:
case _0x1c1069:
case _0x41b866:
case _0xd102d9:
case _0x109189:
case _0x34e8b4:
case _0x1a341c:
case _0x1dae95:
    return !![];
}
return ![];
}
var _0x38eba9 = null,
_0x39036c = null;
const _0xc3bd6d = function (_0x98ae00) {
    var _0x4bc29c = _0x98ae00['readBitGroup'](),
        _0x6a779b = _0x4bc29c['getBool']();
    if (_0x6a779b) {
        var _0x28e97f = _0x4bc29c['getBool']();
        if (_0x28e97f) {
            vID = _0x98ae00['readUInt32']();
            _0x39036c == null && (_0x39036c = {
                'id': vID
            }, _0x39036c['_ox'] = _0x39036c['X'] = _0x39036c['_nx'] = 0x0, _0x39036c['_oy'] = _0x39036c['Y'] = _0x39036c['_ny'] = 0x0);
            var _0x5ddf63 = _0x98ae00['readUInt32']() / 0x64,
                _0x599503 = _0x98ae00['readUInt32']() / 0x64;
            _0x39036c['_ox'] = _0x39036c['X'], _0x39036c['_oy'] = _0x39036c['Y'], _0x39036c['_nx'] = _0x5ddf63, _0x39036c['_ny'] = _0x599503;
        } else _0x39036c = null;
    } else _0x39036c = null;
},
_0x5f562 = function () {
    var _0x2f2d1c = _0xddec75[_0x46868a];
    if (_0x39036c == null || !_0x2f2d1c) return;
    _0x418e9d(), _0x4ac9cf['save'](), _0x4ac9cf['strokeStyle'] = 'white', _0x4ac9cf['globalAlpha'] = 0x1, _0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](_0x2f2d1c['x'], _0x2f2d1c['y']), _0x4ac9cf['lineTo'](_0x39036c['X'], _0x39036c['Y']), _0x4ac9cf['stroke'](), _0x4ac9cf['restore']();
},
_0x418e9d = function () {
    var _0x271996 = 0.1;
    _0x39036c['X'] = _0x271996 * (_0x39036c['_nx'] - _0x39036c['_ox']) + _0x39036c['_ox'], _0x39036c['Y'] = _0x271996 * (_0x39036c['_ny'] - _0x39036c['_oy']) + _0x39036c['_oy'];
};
var _0x1ba8e9 = new Array();
const _0x59ef0d = function (_0x44d5e1) {
    var _0x537abb = _0x44d5e1['readUInt8']();
    _0x1ba8e9 = new Array();
    for (i = 0x0; i < _0x537abb; i++) {
        var _0x1c10a7 = _0x44d5e1['readUInt16'](),
            _0x1249ae = _0x44d5e1['readUInt8']();
        if (_0x1249ae > 0x0)
            for (s = 0x0; s < _0x1249ae; s++) {
                var _0x402e1a = _0x44d5e1['readUInt16']() / 0x4,
                    _0x3d673a = _0x44d5e1['readUInt16']() / 0x4;
                if (_0x1c10a7 == _0x13468b) {
                    var _0x165885 = _0x44d5e1['readUInt8']() == 0x1,
                        _0x56e197 = _0x44d5e1['readUInt8']();
                    _0x1ba8e9['push']({
                        'oType': _0x1c10a7,
                        'specType': _0x56e197,
                        'x': _0x402e1a,
                        'y': _0x3d673a,
                        'rad': 0x2,
                        'droppedInHole': _0x165885
                    });
                } else {
                    if (_0x1c10a7 == _0x179e0c) {
                        var _0x56e197 = _0x44d5e1['readUInt8']();
                        _0x1ba8e9['push']({
                            'oType': _0x1c10a7,
                            'specType': _0x56e197,
                            'x': _0x402e1a,
                            'y': _0x3d673a,
                            'rad': 0x2
                        });
                    } else _0x1ba8e9['push']({
                        'oType': _0x1c10a7,
                        'x': _0x402e1a,
                        'y': _0x3d673a,
                        'rad': 0x2
                    });
                }
            }
    }
    var _0x1249ae = _0x44d5e1['readUInt8']();
    for (s = 0x0; s < _0x1249ae; s++) {
        var _0x7b3bef = _0x44d5e1['readUInt16'](),
            _0x3c2763 = _0x44d5e1['readUInt16']() / 0x4,
            _0x402e1a = _0x44d5e1['readUInt16']() / 0x4,
            _0x3d673a = _0x44d5e1['readUInt16']() / 0x4;
        _0x1ba8e9['push']({
            'oType': _0x1b8199,
            'abil': _0x7b3bef,
            'x': _0x402e1a,
            'y': _0x3d673a,
            'angle': _0x3c2763,
            'rad': 0x2
        });
    }
},
_0x52d157 = function (_0x83f8ac) {
    _0x29cd61 = {};
    var _0x554d17 = _0x83f8ac['readUInt8']() == 0x1;
    if (_0x554d17) {
        var _0x4e7ef6 = _0x83f8ac['readUInt8']();
        _0x29cd61 = {}, _0x29cd61['treesCount'] = _0x4e7ef6;
        for (i = 0x0; i < _0x4e7ef6; i++) _0x29cd61[_0x83f8ac['readUInt32']()] = 0x1;
    }
};
var _0x45effd = [];
const _0x55fa28 = function (_0x10167d) {
_0x45effd = [];
var _0x9d9184 = _0x10167d['readUInt8']() == 0x1;
if (_0x9d9184) {
    var _0x138b9e = _0x10167d['readUInt8']();
    for (i = 0x0; i < _0x138b9e; i++) _0x45effd[_0x10167d['readUInt32']()] = !![];
    _0x45effd[_0x46868a] = !![];
}
};

function _0x5edd07(_0x53a0cd) {
var _0x373842 = [];
return _0x373842['rank'] = _0x53a0cd['readUInt16'](), _0x373842['topRank'] = _0x53a0cd['readUInt16'](), _0x373842['timeAlive'] = _0x53a0cd['readUInt16'](), _0x373842['totalKills'] = _0x53a0cd['readUInt16'](), _0x373842['maxXP'] = _0x53a0cd['readUInt32'](), _0x373842;
}
var _0x287eea = null,
_0x2600a6 = 0x0;

function _0x3e2264(_0x40504a) {
_0x2600a6 = _0x50f90a * 0.6;
if (_0x287eea == null) _0x287eea = document['createElement']('canvas');
var _0x5e26e5 = _0x287eea['getContext']('2d'),
    _0x19b6b6 = 0x37,
    _0x38cb4e = 0x28,
    _0x1596a3 = 0x5,
    _0x10c89c = 0xc8,
    _0x8079c9 = 0x1a4;
_0x19b6b6 = _0x10c89c + _0x1596a3 * 0x2, _0x287eea['width'] = _0x8079c9 + _0x1596a3 * 0x2, _0x287eea['height'] = _0x19b6b6, _0x5e26e5['globalAlpha'] = 0.2, _0x5e26e5['fillStyle'] = '#000000', _0x5e26e5['fillRect'](0x0, 0x0, _0x287eea['width'], _0x287eea['height']), _0x5e26e5['fillStyle'] = '#000000', _0x5e26e5['fillRect'](_0x1596a3, _0x1596a3, _0x287eea['width'] - _0x1596a3 * 0x2, _0x287eea['height'] - _0x1596a3 * 0x2);
var _0x2d3b2d = 0x37 + _0x1596a3;
_0x5e26e5['globalAlpha'] = 0x1, _0x5e26e5['fillStyle'] = '#FFFFFF', _0x5e26e5['font'] = '30px Arial';
var _0xd1b210 = 'YOU DIED!';
_0x5e26e5['font'] = '30px Arial', _0x5e26e5['fillText'](_0xd1b210, _0x287eea['width'] / 0x2 - _0x5e26e5['measureText'](_0xd1b210)['width'] / 0x2, _0x2d3b2d), _0x5e26e5['font'] = '20px Arial', _0x2d3b2d += 0x2d, _0xd1b210 = 'You were #' + _0x40504a['rank'], _0x5e26e5['fillText'](_0xd1b210, _0x287eea['width'] / 0x2 - _0x5e26e5['measureText'](_0xd1b210)['width'] / 0x2, _0x2d3b2d), _0x2d3b2d += 0x28;
var _0x4c089f = _0x166ed8(_0x40504a['timeAlive']),
    _0x55e872 = _0x1596a3 + 0xf;
_0x4eb711(_0x5e26e5, 'Time Alive', _0x4c089f, _0x55e872, _0x2d3b2d), _0x55e872 += 0xd2, _0x4eb711(_0x5e26e5, 'Total Kills', _0x40504a['totalKills'], _0x55e872, _0x2d3b2d), _0x2d3b2d += 0x28, _0x55e872 = _0x1596a3 + 0xf, _0x4eb711(_0x5e26e5, 'Top rank', _0x40504a['topRank'], _0x55e872, _0x2d3b2d), _0x55e872 += 0xd2, _0x4eb711(_0x5e26e5, 'Max XP', _0x42ed1e(_0x40504a['maxXP']), _0x55e872, _0x2d3b2d);
}

function _0x25dc01(_0x39cc3c, _0xf4f1d, _0x355801, _0x4ac817, _0x2efdfb, _0x584432) {
if (_0x25ea67 == 0x2) return;
_0x4ac9cf['save']();
var _0x33e8f9 = _0x355801 - _0x39cc3c,
    _0x2831f5 = _0x4ac817 - _0xf4f1d,
    _0xd781b6 = 0x0,
    _0x3e04c2 = _0x3584da / 0x2 / _0x4d3857,
    _0x311b74 = _0x50f90a / 0x2 / _0x4d3857;
_0x39cc3c = Math['max'](_0x39cc3c, _0x5ac6a3 - _0x3e04c2 - _0x2efdfb + _0xd781b6), _0xf4f1d = Math['max'](_0xf4f1d, _0x2d7a8d - _0x311b74 - _0x584432 + _0xd781b6), _0x355801 = Math['min'](_0x355801, _0x5ac6a3 + _0x3e04c2 - _0x2efdfb - _0xd781b6), _0x4ac817 = Math['min'](_0x4ac817, _0x2d7a8d + _0x311b74 - _0x584432 - _0xd781b6), _0x4ac9cf['strokeStyle'] = 'black', _0x4ac9cf['globalAlpha'] = 0.055;
var _0x194c02 = 0x1e,
    _0x5ecb93 = _0x355801 - _0x39cc3c;
fillH = _0x4ac817 - _0xf4f1d;
for (var _0x564a9f = -0.5 + _0x39cc3c + (_0x33e8f9 - _0x39cc3c) % _0x194c02; _0x564a9f < _0x39cc3c + _0x5ecb93; _0x564a9f += _0x194c02) {
    _0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](_0x564a9f, _0xf4f1d), _0x4ac9cf['lineTo'](_0x564a9f, _0xf4f1d + fillH), _0x4ac9cf['stroke']();
}
for (dy = -0.5 + _0xf4f1d + (_0x2831f5 - _0xf4f1d) % _0x194c02; dy < _0xf4f1d + fillH; dy += _0x194c02) {
    _0x4ac9cf['beginPath'](), _0x4ac9cf['moveTo'](_0x39cc3c, dy), _0x4ac9cf['lineTo'](_0x39cc3c + _0x5ecb93, dy), _0x4ac9cf['stroke']();
}
_0x4ac9cf['restore']();
}
const _0x4fb85b = function () {
_0x1f8068 = ![], _0x1fac36 = ![];
if (_0x567c71) return;
_0x3348a7();
if (_0x22a203 || !_0x366642) return;
_0x4dbb40(![]);
};
$bus['on']($bus['EVENTS']['START_GAME'], _0x4fb85b), $bus['on']($bus['EVENTS']['UI_SPECTATE'], () => {
_0x1bdf2d();
});
const _0x1bdf2d = function () {
if (!_0x567c71) {
    var _0x4e7814 = new _0xb3282e(0x1);
    _0x4e7814['writeUInt8'](_0x5cd0e6), _0x3ccf4c(_0x4e7814);
}
};
var _0x5843f8 = ![],
_0x39e385 = ![];
let _0x17dff4 = ![];
$bus['on']($bus['EVENTS']['UI_PRESSED_ENTER'], () => {
_0x17dff4 = !![], setTimeout(() => {
    _0x17dff4 = ![];
}, 0x1f4);
});

function _0x326483(_0x5a7c4c) {
var _0x4a2b32 = document['getElementById']('chatinput');
switch (_0x5a7c4c['key']) {
case 'ArrowLeft':
    if (_0x5a7c4c['ctrlKey']) {
        var _0x4e3da0 = _0x4a2b32['style']['width'];
        _0x4e3da0 = _0x4e3da0['replace']('px', ''), _0x4e3da0 = Number(_0x4e3da0) - 0x5, _0x4a2b32['style']['width'] = _0x4e3da0 + 'px';
    } else {
        var _0x4e3da0 = _0x4a2b32['style']['left'];
        _0x4e3da0 = _0x4e3da0['replace']('px', ''), _0x4e3da0 = Number(_0x4e3da0) - 0x5, _0x4a2b32['style']['left'] = _0x4e3da0 + 'px';
    }
    break;
case 'ArrowRight':
    if (_0x5a7c4c['ctrlKey']) {
        var _0x4e3da0 = _0x4a2b32['style']['width'];
        _0x4e3da0 = _0x4e3da0['replace']('px', ''), _0x4e3da0 = Number(_0x4e3da0) + 0x5, _0x4a2b32['style']['width'] = _0x4e3da0 + 'px';
    } else {
        var _0x4e3da0 = _0x4a2b32['style']['left'];
        _0x4e3da0 = _0x4e3da0['replace']('px', ''), _0x4e3da0 = Number(_0x4e3da0) + 0x5, _0x4a2b32['style']['left'] = _0x4e3da0 + 'px';
    }
    break;
case 'ArrowUp':
    var _0x4e3da0 = _0x4a2b32['style']['top'];
    _0x4e3da0 = _0x4e3da0['replace']('px', ''), _0x4e3da0 = Number(_0x4e3da0) - 0x5, _0x4a2b32['style']['top'] = _0x4e3da0 + 'px';
    break;
case 'ArrowDown':
    var _0x4e3da0 = _0x4a2b32['style']['top'];
    _0x4e3da0 = _0x4e3da0['replace']('px', ''), _0x4e3da0 = Number(_0x4e3da0) + 0x5, _0x4a2b32['style']['top'] = _0x4e3da0 + 'px';
    break;
}
}
var _0x502d66 = ![],
_0xb3862b = !![];

function _0x4c3688(_0x3c6417) {
if (_0x3c6417['indexOf']('/anim-switch:') != -0x1) {
    var _0x2840cd = _0x3c6417['replace']('/anim-switch:', '');
    switch (_0x2840cd) {
    case 'honeybee':
        _0x4e85bb = !_0x4e85bb;
        return !![];
    case 'phoenix':
        _0x2f8083 = !_0x2f8083;
        return !![];
    }
}
return _0x1de5f9(_0x3c6417);
}
var _0x4c8fa8 = ![];
const _0x1de5f9 = function (_0x587462) {
if (!_0x36b8fc && !_0x52e593) return ![];
if (_0x587462['indexOf']('chatbox:') != -0x1) {
    var _0x167664 = _0x587462['replace']('chatbox:', '');
    switch (_0x167664) {
    case 'edit:start':
        _0x502d66 = !![];
        break;
    case 'edit:end':
        var _0x11d4b4 = document['getElementById']('chatinput'),
            _0x1ef7d1 = {
                'autoLoad': _0xb3862b,
                'left': _0x11d4b4['style']['left'],
                'top': _0x11d4b4['style']['top'],
                'width': _0x11d4b4['style']['width']
            };
        localStorage['setItem']('chatbox', JSON['stringify'](_0x1ef7d1)), _0x502d66 = ![];
        break;
    case 'set:autoload':
        _0xb3862b = !![];
        break;
    case 'load':
        var _0x11d4b4 = document['getElementById']('chatinput'),
            _0x1ef7d1 = JSON['parse'](localStorage['getItem']('chatbox'));
        _0x11d4b4['style']['left'] = _0x1ef7d1['left'], _0x11d4b4['style']['top'] = _0x1ef7d1['top'], _0x11d4b4['style']['width'] = _0x1ef7d1['width'];
        break;
    case 'reset':
        var _0x11d4b4 = document['getElementById']('chatinput');
        _0x11d4b4['style']['left'] = '', _0x11d4b4['style']['right'] = '', _0x11d4b4['style']['width'] = '';
        break;
    }
    return;
}
switch (_0x587462) {
case 'show:interface':
    _0x1e61dd = !![], _0x254abd = !![], _0x4ab30a = !![], _0x49149f = !![], _0x4d0b08 = !![], _0x40db52 = !![], _0x4c8fa8 = ![];
    return !![];
case 'hide:interface':
    _0x1e61dd = ![], _0x254abd = ![], _0x4ab30a = ![], _0x49149f = ![], _0x4d0b08 = ![], _0x40db52 = ![], _0x4c8fa8 = !![];
    return !![];
case 'show:map':
    _0x1e61dd = !![];
    return !![];
case 'show:xpbar':
    _0x4ab30a = !![];
    return !![];
case 'show:board':
    _0x254abd = !![];
    return !![];
case 'show:waterbar':
    _0x49149f = !![];
    return !![];
case 'show:1v1':
    _0x40db52 = !![];
    return !![];
case 'show:ability':
    _0x4d0b08 = !![];
    return !![];
case 'hide:map':
    _0x1e61dd = ![];
    return !![];
case 'hide:xpbar':
    _0x4ab30a = ![];
    return !![];
case 'hide:board':
    _0x254abd = ![];
    return !![];
case 'hide:waterbar':
    _0x49149f = ![];
    return !![];
case 'hide:1v1':
    _0x40db52 = ![];
    return !![];
case 'hide:ability':
    _0x4d0b08 = ![];
    return !![];
}
return ![];
};

function _0x4b7716(_0xaec51f) {
if (_0x120b61) {
    var _0xce2c57 = JSON['parse'](localStorage['getItem']('chatbox'));
    if (_0xaec51f && _0xce2c57 && _0xce2c57['autoLoad']) {
        var _0x2a4105 = document['getElementById']('chatinput');
        _0x2a4105['style']['left'] = _0xce2c57['left'], _0x2a4105['style']['top'] = _0xce2c57['top'], _0x2a4105['style']['width'] = _0xce2c57['width'];
    }
}
}
_0x4b7716(!![]);
const _0x28419e = function () {
if (!_0x3693b9 && _0x4fa0d4) return;
var _0x553677 = document['getElementById']('chatinput');
if (!_0x5843f8 && _0x19efaa) {
    _0x553677['style']['visibility'] = 'visible', _0x553677['focus'](), _0x5843f8 = !![];
    if (_0x52e593) _0x553677['maxLength'] = 0x64;
    _0x553677['onblur'] = function () {
        if (_0x5843f8) _0x28419e();
    };
} else {
    if (_0x5843f8) {
        var _0x5d2ec2 = _0x553677['value'] + '';
        _0x5843f8 = ![], _0x553677['style']['visibility'] = 'hidden', _0x5d2ec2['length'] > 0x0 && _0x19efaa && (!_0x4c3688(_0x5d2ec2) && (newMsg = new _0xb3282e(0x3 + _0x2be008(_0x5d2ec2)['length']), newMsg['writeUInt8'](0x13), newMsg['writeString'](_0x5d2ec2), _0x3ccf4c(newMsg))), _0x553677['value'] = '';
    }
}
};
window['onresize'] = _0x4e8c25;
var _0x46cf18 = 0x3e8,
_0x1f76a1 = 0x3e8;

function _0x4059b0() {
var _0x5266ec = window['innerWidth'] * 0.15;
if (_0x5266ec > 0xc8) _0x5af4a2 = 0xc8;
else {
    if (_0x5266ec < 0x96) _0x5af4a2 = 0x96;
    else _0x5af4a2 = _0x5266ec;
}
console['log'](_0x5af4a2);
}

function _0x4e8c25() {
_0x46cf18 = window['innerWidth'], _0x1f76a1 = window['innerHeight'], _0x5ea7aa = null;
_0x4bdf09 && (_0x46cf18 = document['body']['clientWidth'], _0x1f76a1 = document['body']['clientHeight']);
switch (_0x25ea67) {
case 0x1:
case 0x2:
case 0x3:
    _0x185dc5 = window['devicePixelRatio'];
    break;
default:
    console['log']('Unknown graphics level ' + _0x25ea67);
}
_0x3584da = _0x46cf18 * _0x185dc5, _0x50f90a = _0x1f76a1 * _0x185dc5, _0x29e4e7['width'] = _0x3584da, _0x29e4e7['height'] = _0x50f90a, _0x29e4e7['style']['width'] = _0x46cf18 + 'px', _0x29e4e7['style']['height'] = _0x1f76a1 + 'px', _0x489111 = 0.85 * _0x185dc5 * Math['max'](_0x46cf18 / 0x780, _0x1f76a1 / 0x438);
var _0x439e35 = document['getElementById']('chatinput');
_0x439e35['style']['marginTop'] = _0x1f76a1 / 0x2 - 0x32 + 'px', _0x5be53c();
_0x3d1ca4() && (mes = new _0xb3282e(0x7), mes['writeUInt8'](0x11), mes['writeUInt16'](_0x3584da), mes['writeUInt16'](_0x50f90a), _0x4059b0(), mes['writeUInt16'](_0x5af4a2), _0x3ccf4c(mes));
if (_0x2fa240 != null) _0x2fa240['onResize']();
}
var _0x393482 = 0x1,
_0x4b3bb1 = 0x2,
_0x3b380 = 0x3,
_0xafdc96 = 0x4,
_0x1c3724 = 0x5,
_0x437d09 = 0x6,
_0x397705 = 0x7;

function _0x4bf329(_0x3df796, _0x5ac9f9) {
switch (_0x3df796) {
case _0x393482: {
    if (_0x393283 != _0x5ac9f9) {
        if (_0x3d1ca4() && _0x19efaa) {
            if (_0x5ac9f9) _0x4ec722();
            var _0x5faba6 = new _0xb3282e(0x2);
            _0x5faba6['writeUInt8'](0x15), _0x5faba6['writeUInt8'](_0x5ac9f9 ? 0x1 : 0x0), _0x3ccf4c(_0x5faba6);
            if (_0x30b44e > 0x0) {
                var _0x5faba6 = new _0xb3282e(0x5);
                _0x5faba6['writeUInt8'](_0x33871b), _0x5faba6['writeUInt32'](_0x30b44e), _0x3ccf4c(_0x5faba6), _0x30b44e = 0x0;
            }
        }
    }
    _0x393283 = _0x5ac9f9;
}
break;
case _0x4b3bb1: {
    if (_0x14335b != _0x5ac9f9) {
        if (_0x3d1ca4() && _0x19efaa) {
            if (_0x5ac9f9) _0x4ec722();
            var _0x5faba6 = new _0xb3282e(0x2);
            _0x5faba6['writeUInt8'](0x14), _0x5faba6['writeUInt8'](_0x5ac9f9 ? 0x1 : 0x0), _0x3ccf4c(_0x5faba6);
        }
    }
    _0x14335b = _0x5ac9f9;
}
break;
case _0x3b380: {
    if ((_0x36b8fc || _0x52e593) && _0x19efaa) {
        var _0x5faba6 = new _0xb3282e(0x1);
        _0x5faba6['writeUInt8'](0x1a), _0x3ccf4c(_0x5faba6);
    }
}
break;
case _0xafdc96: {
    if ((_0x36b8fc || _0x52e593) && _0x19efaa) {
        var _0x5faba6 = new _0xb3282e(0x1);
        _0x5faba6['writeUInt8'](0x1b), _0x3ccf4c(_0x5faba6);
    }
}
break;
case _0x1c3724: {
    if (_0x19efaa) {
        var _0x5faba6 = new _0xb3282e(0x2);
        _0x5faba6['writeUInt8'](0x1c), _0x5faba6['writeUInt8'](_0x5ac9f9 ? 0x1 : 0x0), _0x3ccf4c(_0x5faba6);
    }
}
break;
case _0x437d09: {
    if (_0x19efaa && _0x52e593) {
        var _0x5faba6 = new _0xb3282e(0x2);
        _0x5faba6['writeUInt8'](0x1e), _0x5faba6['writeUInt8'](_0x5ac9f9 ? 0x1 : 0x0), _0x3ccf4c(_0x5faba6);
    }
}
break;
case _0x397705: {
    if (_0x19efaa && _0x52e593) {
        var _0x5faba6 = new _0xb3282e(0x2);
        _0x5faba6['writeUInt8'](0x1d), _0x5faba6['writeUInt8'](_0x5ac9f9 ? 0x1 : 0x0), _0x3ccf4c(_0x5faba6);
    }
}
break;
}
}

function _0x596340() {
if (!_0x5843f8 && _0x19efaa) {
    if (document['activeElement'] && document['activeElement'] != _0x29e4e7) _0x29e4e7 && (console['log']('canvas is focused now!'), _0x29e4e7['focus']());
    else {}
}
}
_0x29e4e7['onblur'] = function (_0x497358) {
_0x533789(_0x497358);
}, window['onfocus'] = function (_0x110709) {
_0x5d0cc1(_0x110709);
};

function _0x533789(_0x4216cc) {
if (_0x14335b || _0x393283) return;
_0x4bf329(_0x393482, ![]), _0x4bf329(_0x4b3bb1, ![]);
}

function _0x5d0cc1(_0x2bbda0) {
_0x3348a7();
}
document['oncontextmenu'] = document['body']['oncontextmenu'] = function () {
return !_0x19efaa;
};

function _0x10379a() {
var _0x146185 = _0x3584da / 0x2,
    _0x5267bd = _0x50f90a / 0x2;
_0x23778f = (_0x3438df - (_0x146185 - _0x5ac6a3 * _0x4d3857)) / _0x4d3857, _0x21d708 = (_0x13d04a - (_0x5267bd - _0x2d7a8d * _0x4d3857)) / _0x4d3857;
}

function _0x2f0baf(_0x4eb340) {
return _0x4eb340 * _0x4d3857 + (_0x3584da / 0x2 - _0x5ac6a3 * _0x4d3857);
}

function _0x57dfce(_0xd4100d) {
return _0xd4100d * _0x4d3857 + (_0x50f90a / 0x2 - _0x2d7a8d * _0x4d3857);
}

function _0x20370a(_0x347c3e) {
return (_0x347c3e - (_0x3584da / 0x2 - _0x5ac6a3 * _0x4d3857)) / _0x4d3857;
}

function _0x165c61(_0x58baf3) {
return (_0x58baf3 - (_0x50f90a / 0x2 - _0x2d7a8d * _0x4d3857)) / _0x4d3857;
}

function _0x4ec722() {
if (_0x39e385) {
    var _0x36fb85 = _0xddec75[_0x46868a];
    if (_0x36fb85) _0x23778f = _0x36fb85['x'], _0x21d708 = _0x36fb85['y'] + 0x2;
    else return;
}
if (_0x3d1ca4() && (_0x19efaa || _0x105b7e)) {
    if (Math['abs'](_0xd63ef5 - _0x23778f) > 0.1 || Math['abs'](_0x4caf84 - _0x21d708) > 0.1) {
        _0xd63ef5 = _0x23778f, _0x4caf84 = _0x21d708, mes = new _0xb3282e(_0x225419 + 0x2), mes['writeUInt8'](0x5), mes['writeInt16'](_0x23778f), mes['writeInt16'](_0x21d708);
        if (_0x4bc3ac) console['log']('::: iandev ::: sent dev testing mouse coords');
        _0x3ccf4c(mes);
    }
}
}
setInterval(_0x4ec722, 0xa), setInterval(_0x40759d, 0x1388);

function _0xb1ce4b() {
_0x4e8c25(), _0x35c3fd = 0x0, _0xddec75 = {}, _0x43fa6e = [], _0x4fde71 = [], _0x3f94b8 = 0x19, _0x57083c = _0x2d1940 = 0x0, _0x2711c6(_0x57083c), curBarPerc_n = _0x1d759c = 0x64, _0x256036 = _0xf020f8 = _0x2376d8 = 0x0, _0x57e88a(_0x2376d8), _0x2f84db = null, _0x567c71 = ![], _0x5b1b9b = null, _0x104d04 = '', _0x57c7df(), _0x361438 = ![], _0x484123 = 0x0, _0x411ffd = [], _0x20823d = ![], _0x3cffef = [], _0x5dcb8a = 0x0, _0x50d75e = 0x0, isInfected = _0x50a9ba = ![], _0x334ab6 = 0x0, _0x58da1e = ![], _0x54b43b = 0x0, _0x1a75d8 = [], _0x411094 = null, _0x43ea44 = ![], _0x63dd15 = 0x0, _0x48010b = 0x0, _0x52e593 = ![], _0x105b7e = ![], _0x287eea = null, $bus['emit']($bus['EVENTS']['RESET_GAME']);
}
$bus['on']($bus['EVENTS']['UI_UPDATED_PLAYERNAME'], _0x4d3d93 => {
if (typeof _0x4e89d3 !== 'undefined') {
    _0x4e89d3 = _0x4d3d93;
    if (window['localStorage']) try {
        window['localStorage']['setItem']('nick', _0x4d3d93);
    } catch (_0x28aef8) {}
}
}), window['onload'] = function () {
_0x4e8c25();
if (window['localStorage']) {
    var _0x383f96 = window['localStorage']['getItem']('nick');
    _0x383f96 && (typeof _0x4e89d3 !== 'undefined' && (_0x4e89d3 = _0x383f96), $bus['emit']($bus['EVENTS']['CLIENT_UPDATED_PLAYERNAME'], {
        'name': _0x383f96,
        'focusInput': !_0x8e2392,
        'setInputRangeToEnd': !![]
    }));
}
};
if (_0x29e4e7['addEventListener']) _0x29e4e7['addEventListener']('mousewheel', _0x31abbf), _0x29e4e7['addEventListener']('DOMMouseScroll', _0x31abbf);
else _0x29e4e7['attachEvent']('onmousewheel', _0x31abbf);
var _0x1b2718 = 0x0,
_0x4409a7 = 0x1;

function _0x31abbf(_0x14d17a) {
var _0x14d17a = window['event'] || _0x14d17a,
    _0x55e18e = Math['max'](-0x1, Math['min'](0x1, _0x14d17a['wheelDelta'] || -_0x14d17a['detail']));
if (_0x55e18e == 0x1) _0x1b2718 += 0x1;
else _0x1b2718 -= 0.1;
_0x1b2718 = Math['max'](0x0, _0x1b2718), _0x1b2718 = Math['min'](0xa, _0x1b2718);
if (_0x508d6e) {
    var _0xae7151 = Math['abs'](_0x1b2718) * 0x64,
        _0x3d5b76 = new _0xb3282e(0x4);
    _0x3d5b76['writeUInt8'](_0x1c9a10), _0x3d5b76['writeUInt8'](_0x55e18e == -0x1 ? 0x0 : 0x1), _0x3d5b76['writeInt16'](_0xae7151), _0x3ccf4c(_0x3d5b76);
}
}
var _0x2fa240 = null;

function _0x2352fa() {
_0xcbb72a();
if (_0x2fa240 != null) _0x2fa240['interfaceReset']();
_0x2fa240 = null, console['log']('setting game mode interface:' + _0x5332af);
if (_0x5332af == _0xb594ea) _0x2fa240 = new _0x28e6c5(_0x5332af), _0x2fa240['state'] = _0x104121;
else {
    if (_0x5332af == _0x43310f) _0x2fa240 = new _0x266093(_0x5332af), _0x2fa240['state'] = _0x104121;
    else {
        if (_0x5332af == _0x1edb1c) _0x2fa240 = new _0x14f545(_0x5332af), _0x2fa240['state'] = _0x104121;
        else {
            if (_0x5332af == _0x59b793) _0x2fa240 = new _0x4feee7(), _0x2fa240['state'] = _0x104121;
            else _0x5332af == _0x4c8962 && (_0x2fa240 = new _0x5394a6(_0x5332af), _0x2fa240['state'] = _0x104121);
        }
    }
}
console['log'](_0x2fa240);
}

function _0x52aff9(_0x123f13, _0x4231b9, _0x381060) {
var _0x29b738 = _0x123f13['x'] + _0x4231b9 * Math['cos'](_0x381060),
    _0x68b2c5 = _0x123f13['y'] + _0x4231b9 * Math['sin'](_0x381060);
return {
    'x': _0x29b738,
    'y': _0x68b2c5
};
}

function _0x1f9139(_0x42304e, _0x42ead3, _0x279f3c, _0x371971, _0x5bb4d9) {
_0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = _0x5bb4d9, _0x4ac9cf['beginPath'](), _0x4ac9cf['translate'](_0x42304e, _0x42ead3), _0x4ac9cf['rotate'](_0x279f3c), _0x4ac9cf['moveTo'](-0x5, -0x5), _0x4ac9cf['lineTo'](-0x5, 0x5), _0x4ac9cf['lineTo'](0x5, 0x5), _0x4ac9cf['lineWidth'] = 1.5, _0x4ac9cf['strokeStyle'] = _0x371971, _0x4ac9cf['fillStyle'] = _0x371971, _0x4ac9cf['stroke'](), _0x4ac9cf['restore']();
}

function _0x3ba1e3() {
var _0xdbf4f7 = _0xddec75[_0x46868a];
if (_0xdbf4f7)
    for (d = 0x0; d < _0x43fa6e['length']; d++) {
        var _0x5727d9 = _0x43fa6e[d];
        if (_0xdbf4f7['id'] != _0x5727d9['id']) {
            if (_0x5727d9['oType'] === _0x4acf80) {
                var _0x4d8a78 = _0x5727d9['getOutlineColor'](),
                    _0x4c6bab = ![];
                if (_0x4d8a78 == _0x1e8292 || _0x4d8a78 == _0x4fa567) _0x4c6bab = !![];
                if (_0x4c6bab) _0x2c1161(_0xdbf4f7, _0x5727d9, _0x4d8a78);
            }
        }
    }
}

function _0x4ca7b9(_0x154ffd, _0x24c38e) {
var _0x9f0141 = _0x154ffd['x'] - _0x24c38e['x'],
    _0x58f129 = _0x154ffd['y'] - _0x24c38e['y'],
    _0x13a09a = Math['sqrt'](_0x9f0141 * _0x9f0141 + _0x58f129 * _0x58f129);
return _0x13a09a;
}

function _0x2c1161(_0x4978de, _0x9559a1, _0x135679) {
var _0x145526 = _0x3584da / 0x2,
    _0x12bc01 = _0x50f90a / 0x2,
    _0x21a381 = _0x131116(_0x9559a1['x'], _0x9559a1['y'], _0x4978de['x'], _0x4978de['y']),
    _0x588732 = _0x2f0baf(_0x9559a1['x']),
    _0x2a25d9 = _0x57dfce(_0x9559a1['y']),
    _0x1385d9 = _0x9559a1['rad'] * _0x4d3857,
    _0x38bd7a = Math['min'](Math['abs'](_0x588732 - _0x1385d9 - 0x0), Math['abs'](_0x588732 + _0x1385d9 - _0x3584da)),
    _0xa1eb96 = Math['min'](Math['abs'](_0x2a25d9 - _0x1385d9 - 0x0), Math['abs'](_0x2a25d9 + _0x1385d9 - _0x50f90a)),
    _0x281a84 = -0x32 - _0x4978de['rad'],
    _0x15e5a7 = _0x52aff9({
        'x': _0x4978de['x'],
        'y': _0x4978de['y']
    }, _0x281a84, _0x21a381),
    _0x1f9aee = _0x4ca7b9({
        'x': _0x15e5a7['x'],
        'y': _0x15e5a7['y']
    }, {
        'x': _0x9559a1['x'],
        'y': _0x9559a1['y']
    });
if (_0x9559a1['rad'] < 0x64 && _0x1f9aee < _0x9559a1['rad'] * 0.5 || _0x1f9aee < 0xc8) return;
_0x21a381 += _0x142401(0x2d);
var _0x36032f = 0x1,
    _0x1253d2 = 0x14;
_0x1f9139(_0x15e5a7['x'], _0x15e5a7['y'], _0x21a381, _0x135679, _0x36032f);
}

function _0xcbb72a() {
_0x943cc6(!![]);
}

function _0x3ff35a() {
if (_0x2e40d4 == _0x5186e1) {
    if (_0x33431f == null) {
        var _0x14b146 = new _0xb3282e(0x2);
        _0x14b146['writeUInt8'](_0x3e3c89), _0x3ccf4c(_0x14b146);
    } else {
        var _0x14b146 = new _0xb3282e(0x2);
        _0x14b146['writeUInt8'](_0x3e3c89), _0x3ccf4c(_0x14b146), _0x33431f['updateExpiry']();
    }
}
}
var _0xbeae0b = 0x5,
_0x4ebcd0 = 0x5,
_0x589062 = 0xa,
_0x328082 = 0x0,
_0x382b59 = 0x0,
_0x10892f = null,
_0x58cba8 = 0x0,
_0x5cec1c = null,
_0x81d129 = 0x0,
_0x51b569 = 0xf,
_0x2867e1 = 0x0,
_0x33431f = null;

function _0x3b9634() {
_0x33431f != null && _0x33431f['display']();
}

function _0x1bc94e() {
if (_0x5cec1c == null) {
    _0x2867e1 = 0x0, _0x10892f = null;
    return;
}
if (_0x10892f == null) _0x10892f = document['createElement']('canvas');
if (_0x10892f == null) return;
if (_0x2867e1 == 0x0) _0x2867e1 = _0x397f50;
var _0x3b4802 = _0x10892f['getContext']('2d'),
    _0x276911 = 0x37,
    _0xc389de = 0x5,
    _0x57feeb = 0x0,
    _0x524bc4 = 0x50 * _0x489111,
    _0x3b708f = 0x82 + 0x5 * (_0x524bc4 + 0xa),
    _0x3b708f = 0x2bc * _0x489111,
    _0x4aefd0 = 0x2bc * _0x489111;
console['log']('inferface scale ' + _0x489111 + ' borad_height ' + _0x3b708f), _0x276911 = _0x3b708f + _0xc389de * 0x2, _0x10892f['width'] = _0x4aefd0 + _0xc389de * 0x2, _0x10892f['height'] = _0x276911;
var _0x49e929 = 0xc8;
_0x58cba8 = _0x49e929, _0x3b4802['globalAlpha'] = 0.1;
var _0x3697b5 = _0xc389de;
_0x3b4802['globalAlpha'] = 0x1, _0x3b4802['fillStyle'] = '#FFFFFF', _0x3b4802['font'] = '30px Arial', _0x3697b5 += 0x2d;
var _0x5f5213 = 'APEX KILLS';
_0x3b4802['font'] = '30px Arial', _0x3b4802['fillText'](_0x5f5213, _0x10892f['width'] / 0x2 - _0x3b4802['measureText'](_0x5f5213)['width'] / 0x2, _0x3697b5), _0x49e929 = 0x64, _0x3697b5 += _0x524bc4;
var _0x5bc3ec = 0x168 / _0x5cec1c['anis']['length'],
    _0x21f6b7 = 0xfa * _0x489111,
    _0x514df9 = _0x10892f['width'] / 0x2,
    _0x2b818c = _0x10892f['height'] / 0x2;
_0x3b4802['fillStyle'] = 'black', _0x3b4802['globalAlpha'] = 0.1, _0x3b4802['beginPath'](), _0x3b4802['arc'](_0x514df9, _0x514df9, _0x21f6b7 - _0x524bc4 / 0x2, 0x0, Math['PI'] * 0x2, ![]), _0x3b4802['arc'](_0x514df9, _0x514df9, _0x21f6b7 + _0x524bc4 / 0x2, Math['PI'] * 0x2, 0x0, !![]), _0x3b4802['fill'](), _0x3b4802['globalAlpha'] = 0.5, _0x3b4802['beginPath'](), _0x3b4802['arc'](_0x514df9, _0x514df9, _0x21f6b7 + _0x524bc4 / 0x2, Math['PI'] * 0x2, 0x0), _0x3b4802['stroke']();
var _0x1c95d0 = Math['PI'] * 0x2 / _0x5cec1c['anis']['length'],
    _0x13dc05 = 0x0,
    _0x379c76 = (_0x397f50 - _0x2867e1) / 0x3e8,
    _0xa4ca15 = 0x2,
    _0x4033dd = 0x8;
_0x13dc05 = _0x4033dd * Math['sin'](0x2 * Math['PI'] / _0xa4ca15 * _0x379c76);
for (r = 0x0; r < _0x5cec1c['anis']['length']; r++) {
    var _0x5905bb = _0x2b818c + Math['sin'](_0x5bc3ec * r * (Math['PI'] / 0xb4) - _0x142401(0x5a)) * _0x21f6b7,
        _0x5c8735 = _0x514df9 + Math['cos'](_0x5bc3ec * r * (Math['PI'] / 0xb4) - _0x142401(0x5a)) * _0x21f6b7,
        _0x44459b = r * _0x1c95d0 - _0x142401(0x5a) - _0x1c95d0 / 0x2,
        _0x4be4ee = _0x44459b + _0x1c95d0;
    ani = _0x5cec1c['anis'][r];
    var _0x40760d = _0x470041(ani),
        _0x562f27 = _0x297bc3(_0x40760d);
    if (_0x562f27) {
        var _0xd8abe3 = _0x5cec1c[ani] > 0x0;
        _0x3b4802['save'](), _0x3b4802['globalAlpha'] = _0xd8abe3 ? 0x1 : 0.3;
        var _0x2324ea = _0x524bc4;
        _0xd8abe3 && (_0x3b4802['shadowOffsetX'] = 0x0, _0x3b4802['shadowOffsetY'] = 0x0, _0x3b4802['shadowColor'] = 'black', _0x3b4802['shadowBlur'] = 0x8, _0x2324ea -= _0x13dc05);
        _0x3b4802['drawImage'](_0x562f27, _0x5c8735 - _0x2324ea / 0x2, _0x5905bb - _0x2324ea / 0x2, _0x2324ea, _0x2324ea), _0x3b4802['restore'](), _0x3b4802['save']();
        _0xd8abe3 && (_0x3b4802['shadowOffsetX'] = 0x0, _0x3b4802['shadowOffsetY'] = 0x0, _0x3b4802['shadowColor'] = 'black', _0x3b4802['shadowBlur'] = 0x8);
        _0x3b4802['strokeStyle'] = _0xd8abe3 ? '#ff6e00' : 'black';
        var _0x755a34 = _0xd8abe3 ? 0x5 : 0x1;
        _0x3b4802['lineWidth'] = _0x755a34, _0x3b4802['globalAlpha'] = _0xd8abe3 ? 0x1 : 0.5, _0x3b4802['beginPath'](), _0x3b4802['arc'](_0x514df9, _0x514df9, _0x21f6b7 - (_0x755a34 - 0x2) - _0x524bc4 / 0x2, _0x44459b, _0x4be4ee), _0x3b4802['stroke']();
    }
}
if (_0x10892f != null) {
    if (_0x10892f['width']) {
        var _0x23718d = (_0x397f50 - _0x2867e1) / 0x258,
            _0x5f67f5 = (_0x81d129 - _0x397f50) / 0x258;
        if (_0x5f67f5 < 0x1) _0x23718d = Math['max'](0x0, _0x5f67f5);
        var _0x11f706 = Math['min'](0x1, _0x23718d),
            _0x37d485 = _0x10892f['width'] * _0x11f706,
            _0x18bcda = _0x10892f['height'] * _0x11f706;
        _0x4ac9cf['save'](), _0x4ac9cf['globalAlpha'] = _0x11f706, _0x4ac9cf['drawImage'](_0x10892f, _0x3584da / 0x2 - _0x37d485 / 0x2, _0x50f90a / 0x2 - _0x18bcda / 0x2, _0x37d485, _0x18bcda), _0x4ac9cf['restore'](), (_0x397f50 > _0x81d129 || !_0x19efaa) && (_0x5cec1c = null, _0x2867e1 = 0x0);
    }
}
}

function _0x470041(_0x5ec9cf) {
switch (_0x5ec9cf) {
case _0x5186e1:
    return './skins/volcano/blackdragon/0/blackdragon.png';
case _0x4cc8de:
    return './skins/land/dinomonster/0/dinomonster.png';
case _0x16a00e:
    return './skins/arctic/icemonster/0/icemonster.png';
case _0xc23298:
    return './skins/volcano/landmonster/0/landmonster.png';
case _0x16f423:
    return './skins/ocean/seamonster/0/seamonster.png';
case _0x323318:
    return './skins/desert/scorpion/0/giantscorpion.png';
case _0x1080d7:
    return './skins/arctic/yeti/0/wolf.png';
case _0x33edcb:
    return './skins/land/dragon/0/dragon.png';
case _0x2e747e:
    return './skins/land/trex/0/trex.png';
case _0x3a6f75:
    return './skins/ocean/kraken/0/kraken.png';
case _0x7820e:
    return './skins/ocean/kingcrab/0/kingcrab.png';
case _0x3fcb38:
    return './skins/phoenix/phoenix.png';
case _0x309a7e:
    return './skins/desert/pterodactyl/0/pterodactyl_ability.png';
}
}
document['addEventListener']('keydown', function (_0x140008) {
if (_0x140008['ctrlKey'] == !![] && (_0x140008['code'] == 'Minus' || _0x140008['key'] == 'Equal' || _0x140008['code'] == 'NumpadSubtract' || _0x140008['key'] == 'NumpadAdd')) _0x140008['preventDefault']();
}, {
'passive': ![]
}), document['addEventListener']('wheel', function (_0x3c495a) {
const _0x17a22a = document['getElementById']('updates_v2');
!_0x3a0942 && (!_0x17a22a || _0x17a22a['style'] && _0x17a22a['style']['display'] === 'none') && _0x3c495a['preventDefault']();
}, {
'passive': ![]
});
`